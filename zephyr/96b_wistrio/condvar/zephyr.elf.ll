; ModuleID = 'build/96b_wistrio/condvar/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237592 to i8*), void (i8*)* inttoptr (i32 134236323 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237592 to i8*), void (i8*)* inttoptr (i32 134236313 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237592 to i8*), void (i8*)* inttoptr (i32 134236303 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237592 to i8*), void (i8*)* inttoptr (i32 134236293 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237592 to i8*), void (i8*)* inttoptr (i32 134236283 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237592 to i8*), void (i8*)* inttoptr (i32 134236273 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237592 to i8*), void (i8*)* inttoptr (i32 134236263 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [38 x i8*] [i8* bitcast (%struct.k_mutex* @count_mutex to i8*), i8* bitcast (%struct.k_condvar* @count_threshold_cv to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@count_mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @count_mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.count_mutex", align 4, !dbg !25
@count_threshold_cv = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @count_threshold_cv, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.count_threshold_cv", align 4, !dbg !114
@count = internal unnamed_addr global i32 0, align 4, !dbg !141
@.str = private unnamed_addr constant [47 x i8] c"%s: thread %ld, count = %d  Threshold reached.\00", align 1
@__func__.inc_count = private unnamed_addr constant [10 x i8] c"inc_count\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Just sent signal.\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"%s: thread %ld, count = %d, unlocking mutex\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Starting %s: thread %ld\0A\00", align 1
@__func__.watch_count = private unnamed_addr constant [12 x i8] c"watch_count\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"%s: thread %ld Count= %d. Going into wait...\0A\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"%s: thread %ld Condition signal received. Count= %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"%s: thread %ld Updating the value of count...\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"%s: thread %ld count now = %d.\0A\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"%s: thread %ld Unlocking mutex.\0A\00", align 1
@t = internal global [3 x %struct.k_thread] zeroinitializer, align 8, !dbg !154
@tstacks = dso_local global [3 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !143
@.str.9 = private unnamed_addr constant [77 x i8] c"Main(): Waited and joined with %d threads. Final value of count = %d. Done.\0A\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.12 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.13 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.14 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.15 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.16 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.17 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.18 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.19 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.20 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10.21 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.26 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !369
@.str.35 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.37 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.38 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.36 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.40 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.39 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.42 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.44 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.45 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.46 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.47 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.48 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.49 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.53 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.54 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.55 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.66 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.58 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.59 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.60 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.61 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.62 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.63 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.64 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.65 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.26.57 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.33 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.35.56 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !398
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !532
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !404
@.str.78 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.79 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.80 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.81 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.86 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.87 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !541
@.str.6.88 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.89 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.82 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.83 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !577
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), %struct.k_spinlock { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.99, i32 0, i32 0), %struct.k_spinlock { i32 285933596 } }], align 4, !dbg !587
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !592
@.str.98 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.99 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !612
@.str.101 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.103 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.10.114 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.11.115 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.12.102 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.13.104 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.14.105 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.15.106 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.16.107 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.17.108 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.18.109 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.19.110 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.20.111 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.21.112 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.22.113 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !720
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !873
@.str.4.116 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !842
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !825
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.116, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !798
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !814
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !844
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !858
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !860
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !862
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !864
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !866
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !868
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !878
@.str.118 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !901
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !976
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !965
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1017
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !894
@.str.129 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1083
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1329
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1307
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1293
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1241
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !892
@.str.1.139 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1331
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1311
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1309
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1258
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !890
@.str.2.140 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1344
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1315
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1313
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1267
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !888
@.str.3.141 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1346
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1319
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1317
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1276
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !886
@.str.4.142 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1348
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1323
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1321
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1282
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !884
@.str.5.143 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1350
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1327
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1325
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1291
@.str.6.130 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.29.136 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.30.132 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.31.135 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.32.131 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.33.133 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.34.134 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.147 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.147, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1352
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !898
@.str.1.148 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1512
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1567
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1508
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1569
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.148, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1493
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1495
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !896
@.str.2.157 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1575
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1510
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1585
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.157, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1504
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1506
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1556
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1559
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1561
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1564
@.str.3.150 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.151 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.152 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.6.153 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.7.154 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.8.160 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.9.162 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.10.163 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.118, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !949
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1577
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1579
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1581
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1583
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.11 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1592
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1703
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1705
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1701
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1696
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1670
@.str.167 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.168 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.169 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.170 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.171 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.172 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1707
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.129, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1239
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.139, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1256
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.140, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1265
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.141, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1274
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.142, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1280
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.143, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1289
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1794
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1818
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1821
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1825
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1829
@.str.203 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.207 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.208 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.209 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.213 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.214 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.215 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.216 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.217 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.212 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.211 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.213, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.214, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.215, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.216, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.217, i32 0, i32 0)], align 4
@.str.219 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.219, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1836
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2061
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2049
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2056
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2068
@.str.5.225 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2073
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.229 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.235, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.236, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.237, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.238, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.239, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.233, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.240, i32 0, i32 0)], align 4, !dbg !2101
@.str.234 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.235 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.236 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.237 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.238 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.239 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.233 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.240 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2216
@.str.8.232 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.243 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.244 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.245 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.246 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.250 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.251 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.254 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.255 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.264 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.265 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.266 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.271 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.272 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.273 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.274 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.275 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2229
@.str.4.283 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.276 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.277 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.278 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.279 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.280 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2340
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2451
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2454
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2456
@.str.284 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.306 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.291 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.313 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.325 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.294 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.320 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.290 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.330 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.331 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.339 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.340 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.341 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.344 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.285 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.286 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.287 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.288 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.289 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.293 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.310 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.321 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.322 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2058
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2066
@.str.23.334 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.349 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2458
@.str.350 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.351 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.352 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.353 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.354 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.355 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.365 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.366 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.367 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.368 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2483
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2513
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2518
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1923
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2516
@.str.4.369 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.370 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.371 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.375 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.376 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.394 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3058 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3062, !srcloc !3063
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3064, !srcloc !3065
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3066, !srcloc !3067
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3068, !srcloc !3069
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3070, !srcloc !3071
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3072, !srcloc !3073
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3074, !srcloc !3075
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3076, !srcloc !3077
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3078, !srcloc !3079
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3080, !srcloc !3081
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3082, !srcloc !3083
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3084, !srcloc !3085
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3086, !srcloc !3087
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3088, !srcloc !3089
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3090, !srcloc !3091
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3092, !srcloc !3093
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3094, !srcloc !3095
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3096, !srcloc !3097
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3098, !srcloc !3099
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3100, !srcloc !3101
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3102, !srcloc !3103
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3104, !srcloc !3105
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3106, !srcloc !3107
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3108, !srcloc !3109
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3110, !srcloc !3111
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3112, !srcloc !3113
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3114, !srcloc !3115
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3116, !srcloc !3119
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3120, !srcloc !3121
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3122, !srcloc !3123
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3124, !srcloc !3125
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3126, !srcloc !3127
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3128, !srcloc !3129
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3130, !srcloc !3131
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3166, !srcloc !3167
  ret void, !dbg !3168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @inc_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3171 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3175, metadata !DIExpression()), !dbg !3180
  call void @llvm.dbg.value(metadata i8* undef, metadata !3176, metadata !DIExpression()), !dbg !3180
  call void @llvm.dbg.value(metadata i8* undef, metadata !3177, metadata !DIExpression()), !dbg !3180
  %4 = ptrtoint i8* %0 to i32, !dbg !3181
  call void @llvm.dbg.value(metadata i32 %4, metadata !3179, metadata !DIExpression()), !dbg !3180
  call void @llvm.dbg.value(metadata i32 0, metadata !3178, metadata !DIExpression()), !dbg !3180
  br label %5, !dbg !3182

5:                                                ; preds = %3, %12
  %6 = phi i32 [ 0, %3 ], [ %14, %12 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3178, metadata !DIExpression()), !dbg !3180
  tail call fastcc void @k_mutex_lock() #24, !dbg !3184
  %7 = load i32, i32* @count, align 4, !dbg !3187
  %8 = add nsw i32 %7, 1, !dbg !3187
  store i32 %8, i32* @count, align 4, !dbg !3187
  %9 = icmp eq i32 %8, 12, !dbg !3188
  br i1 %9, label %10, label %12, !dbg !3190

10:                                               ; preds = %5
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef 12) #25, !dbg !3191
  tail call fastcc void @k_condvar_signal() #24, !dbg !3193
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3194
  %11 = load i32, i32* @count, align 4, !dbg !3195
  br label %12, !dbg !3196

12:                                               ; preds = %10, %5
  %13 = phi i32 [ %11, %10 ], [ %8, %5 ], !dbg !3195
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.inc_count, i32 0, i32 0), i32 noundef %4, i32 noundef %13) #25, !dbg !3197
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3198
  tail call fastcc void @k_sleep([1 x i64] [i64 5000]) #24, !dbg !3199
  %14 = add nuw nsw i32 %6, 1, !dbg !3200
  call void @llvm.dbg.value(metadata i32 %14, metadata !3178, metadata !DIExpression()), !dbg !3180
  %15 = icmp eq i32 %14, 10, !dbg !3201
  br i1 %15, label %16, label %5, !dbg !3182, !llvm.loop !3202

16:                                               ; preds = %12
  ret void, !dbg !3204
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3205 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3216, metadata !DIExpression()), !dbg !3217
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3215, metadata !DIExpression()), !dbg !3217
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3218, !srcloc !3220
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3221
  ret void, !dbg !3222
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3223 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3228, metadata !DIExpression()), !dbg !3229
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3230, !srcloc !3232
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @count_threshold_cv) #25, !dbg !3233
  ret void, !dbg !3234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3235 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3239, metadata !DIExpression()), !dbg !3240
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3241, !srcloc !3243
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @count_mutex) #25, !dbg !3244
  ret void, !dbg !3245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3246 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3250, metadata !DIExpression()), !dbg !3251
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3252, !srcloc !3254
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3255
  ret void, !dbg !3256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @watch_count(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3257 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3259, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.value(metadata i8* undef, metadata !3260, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.value(metadata i8* undef, metadata !3261, metadata !DIExpression()), !dbg !3263
  %4 = ptrtoint i8* %0 to i32, !dbg !3264
  call void @llvm.dbg.value(metadata i32 %4, metadata !3262, metadata !DIExpression()), !dbg !3263
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3265
  tail call fastcc void @k_mutex_lock() #24, !dbg !3266
  %5 = load i32, i32* @count, align 4, !dbg !3267
  %6 = icmp slt i32 %5, 12, !dbg !3268
  br i1 %6, label %7, label %12, !dbg !3269

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %10, %7 ], [ %5, %3 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %8) #25, !dbg !3270
  tail call fastcc void @k_condvar_wait() #24, !dbg !3272
  %9 = load i32, i32* @count, align 4, !dbg !3273
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %9) #25, !dbg !3274
  %10 = load i32, i32* @count, align 4, !dbg !3267
  %11 = icmp slt i32 %10, 12, !dbg !3268
  br i1 %11, label %7, label %12, !dbg !3269, !llvm.loop !3275

12:                                               ; preds = %7, %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3277
  %13 = load i32, i32* @count, align 4, !dbg !3278
  %14 = add nsw i32 %13, 125, !dbg !3278
  store i32 %14, i32* @count, align 4, !dbg !3278
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4, i32 noundef %14) #25, !dbg !3279
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.watch_count, i32 0, i32 0), i32 noundef %4) #25, !dbg !3280
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3281
  ret void, !dbg !3282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3283 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3289, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.value(metadata %struct.k_condvar* @count_threshold_cv, metadata !3287, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.value(metadata %struct.k_mutex* @count_mutex, metadata !3288, metadata !DIExpression()), !dbg !3290
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3291, !srcloc !3293
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @count_threshold_cv, %struct.k_mutex* noundef nonnull @count_mutex, [1 x i64] [i64 -1]) #25, !dbg !3294
  ret void, !dbg !3295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3296 {
  call void @llvm.dbg.value(metadata i32 1, metadata !3298, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i32 2, metadata !3299, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.value(metadata i32 3, metadata !3300, metadata !DIExpression()), !dbg !3302
  store i32 0, i32* @count, align 4, !dbg !3303
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 0), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 0, i32 0), void (i8*, i8*, i8*)* noundef nonnull @watch_count, i8* noundef nonnull inttoptr (i32 1 to i8*)) #24, !dbg !3304
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 1), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 1, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 2 to i8*)) #24, !dbg !3305
  tail call fastcc void @k_thread_create(%struct.k_thread* noundef getelementptr inbounds ([3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 2), %struct.z_thread_stack_element* noundef getelementptr inbounds ([3 x [1088 x %struct.z_thread_stack_element]], [3 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 2, i32 0), void (i8*, i8*, i8*)* noundef nonnull @inc_count, i8* noundef nonnull inttoptr (i32 3 to i8*)) #24, !dbg !3306
  call void @llvm.dbg.value(metadata i32 0, metadata !3301, metadata !DIExpression()), !dbg !3302
  br label %1, !dbg !3307

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3301, metadata !DIExpression()), !dbg !3302
  %3 = getelementptr inbounds [3 x %struct.k_thread], [3 x %struct.k_thread]* @t, i32 0, i32 %2, !dbg !3309
  tail call fastcc void @k_thread_join(%struct.k_thread* noundef nonnull %3) #24, !dbg !3312
  %4 = add nuw nsw i32 %2, 1, !dbg !3313
  call void @llvm.dbg.value(metadata i32 %4, metadata !3301, metadata !DIExpression()), !dbg !3302
  %5 = icmp eq i32 %4, 3, !dbg !3314
  br i1 %5, label %6, label %1, !dbg !3307, !llvm.loop !3315

6:                                                ; preds = %1
  %7 = load i32, i32* @count, align 4, !dbg !3317
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.9, i32 0, i32 0), i32 noundef 3, i32 noundef %7) #25, !dbg !3318
  ret void, !dbg !3319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3) unnamed_addr #1 !dbg !3320 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3339, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3330, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3331, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i32 1024, metadata !3332, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !3333, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i8* %3, metadata !3334, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i8* null, metadata !3335, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i8* null, metadata !3336, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i32 10, metadata !3337, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.value(metadata i32 0, metadata !3338, metadata !DIExpression()), !dbg !3340
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3341, !srcloc !3343
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef %2, i8* noundef %3, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3344
  ret void, !dbg !3345
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3346 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3351, metadata !DIExpression()), !dbg !3352
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3350, metadata !DIExpression()), !dbg !3352
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3353, !srcloc !3355
  %2 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !3356
  ret void, !dbg !3357
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3358 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3373, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %0, metadata !3369, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %1, metadata !3370, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %2, metadata !3371, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %3, metadata !3372, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %0, metadata !3374, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %0, metadata !3375, metadata !DIExpression()), !dbg !3436
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3437
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3437
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3378, metadata !DIExpression()), !dbg !3438
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3439
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3439
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3380, metadata !DIExpression()), !dbg !3440
  call void @llvm.dbg.value(metadata i32 0, metadata !3381, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 0, metadata !3382, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 0, metadata !3383, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 -1, metadata !3384, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 0, metadata !3387, metadata !DIExpression()), !dbg !3436
  %12 = and i32 %2, 4, !dbg !3441
  %13 = icmp eq i32 %12, 0, !dbg !3442
  call void @llvm.dbg.value(metadata i1 %13, metadata !3388, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3436
  %14 = lshr i32 %2, 3, !dbg !3443
  %15 = and i32 %14, 7, !dbg !3443
  %16 = add nuw nsw i32 %15, 1, !dbg !3444
  call void @llvm.dbg.value(metadata i32 %16, metadata !3389, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 0, metadata !3390, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %0, metadata !3391, metadata !DIExpression()), !dbg !3436
  %17 = ptrtoint i8* %0 to i32, !dbg !3445
  %18 = and i32 %17, 3, !dbg !3447
  %19 = icmp eq i32 %18, 0, !dbg !3447
  br i1 %19, label %20, label %320, !dbg !3448

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3449
  call void @llvm.dbg.value(metadata i8* %21, metadata !3375, metadata !DIExpression()), !dbg !3436
  %22 = icmp eq i8* %0, null, !dbg !3450
  %23 = and i32 %1, 7, !dbg !3452
  %24 = sub nuw nsw i32 8, %23, !dbg !3452
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3452
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3452
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3452
  call void @llvm.dbg.value(metadata i32 %27, metadata !3370, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %26, metadata !3375, metadata !DIExpression()), !dbg !3436
  br i1 %22, label %33, label %28, !dbg !3453

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3455
  %30 = sub i32 4, %17, !dbg !3455
  %31 = add i32 %30, %29, !dbg !3456
  %32 = icmp ugt i32 %31, %27, !dbg !3457
  br i1 %32, label %320, label %33, !dbg !3458

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3459
  call void @llvm.dbg.value(metadata i8* %34, metadata !3372, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %3, metadata !3386, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 4, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 4, metadata !3376, metadata !DIExpression()), !dbg !3436
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3460

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3373, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %42, metadata !3372, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %43, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %44, metadata !3376, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %45, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %72, metadata !3384, metadata !DIExpression()), !dbg !3436
  br i1 %46, label %73, label %47, !dbg !3461

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3462
  %49 = zext i1 %48 to i32, !dbg !3466
  %50 = add nsw i32 %72, %49, !dbg !3466
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3466
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3466
  call void @llvm.dbg.value(metadata i32 %52, metadata !3376, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %51, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3387, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %50, metadata !3384, metadata !DIExpression()), !dbg !3436
  br label %53, !dbg !3467

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3373, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %40, metadata !3372, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %58, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %57, metadata !3376, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %56, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3387, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %54, metadata !3384, metadata !DIExpression()), !dbg !3436
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3468
  call void @llvm.dbg.value(metadata i8* %60, metadata !3372, metadata !DIExpression()), !dbg !3436
  %61 = load i8, i8* %60, align 1, !dbg !3470
  %62 = icmp eq i8 %61, 0, !dbg !3471
  br i1 %62, label %226, label %63, !dbg !3472, !llvm.loop !3473

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3461

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3476

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3387, metadata !DIExpression()), !dbg !3436
  %75 = add nsw i32 %72, -1, !dbg !3477
  call void @llvm.dbg.value(metadata i32 %75, metadata !3384, metadata !DIExpression()), !dbg !3436
  br label %53, !dbg !3478

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3479

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 4, metadata !3376, metadata !DIExpression()), !dbg !3436
  br label %53, !dbg !3480

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 4, metadata !3376, metadata !DIExpression()), !dbg !3436
  br label %53, !dbg !3481

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3482
  %81 = icmp eq i8 %80, 108, !dbg !3484
  br i1 %81, label %82, label %109, !dbg !3485

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3486
  %84 = load i8, i8* %83, align 1, !dbg !3486
  %85 = icmp eq i8 %84, 108, !dbg !3489
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3490
  %89 = add i32 %88, 7, !dbg !3490
  %90 = and i32 %89, -8, !dbg !3490
  %91 = inttoptr i32 %90 to i8*, !dbg !3490
  %92 = inttoptr i32 %90 to double*, !dbg !3490
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3490
  %94 = load double, double* %92, align 8, !dbg !3490
  call void @llvm.dbg.value(metadata i8* %93, metadata !3373, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 8, metadata !3376, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 8, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata double %94, metadata !3404, metadata !DIExpression()), !dbg !3492
  %95 = ptrtoint i8* %43 to i32, !dbg !3493
  %96 = add i32 %95, 7, !dbg !3493
  %97 = and i32 %96, -8, !dbg !3493
  %98 = inttoptr i32 %97 to i8*, !dbg !3494
  call void @llvm.dbg.value(metadata i8* %98, metadata !3375, metadata !DIExpression()), !dbg !3436
  br i1 %22, label %104, label %99, !dbg !3495

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3496
  %101 = icmp ugt i32 %100, %196, !dbg !3500
  br i1 %101, label %320, label %102, !dbg !3501

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3502
  store double %94, double* %103, align 8, !dbg !3502
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3505
  call void @llvm.dbg.value(metadata i8* %105, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3387, metadata !DIExpression()), !dbg !3436
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3387, metadata !DIExpression()), !dbg !3436
  br label %53, !dbg !3506

107:                                              ; preds = %73, %73
  br label %109, !dbg !3507

108:                                              ; preds = %73
  br label %109, !dbg !3507

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3436
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3436
  call void @llvm.dbg.value(metadata i32 %113, metadata !3376, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %112, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3390, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3387, metadata !DIExpression()), !dbg !3436
  %114 = ptrtoint i8* %43 to i32, !dbg !3507
  %115 = add i32 %114, -1, !dbg !3507
  %116 = add i32 %115, %112, !dbg !3507
  %117 = sub i32 0, %112, !dbg !3507
  %118 = and i32 %116, %117, !dbg !3507
  %119 = inttoptr i32 %118 to i8*, !dbg !3508
  call void @llvm.dbg.value(metadata i8* %119, metadata !3375, metadata !DIExpression()), !dbg !3436
  br i1 %22, label %124, label %120, !dbg !3509

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3511
  %122 = add i32 %121, %118, !dbg !3512
  %123 = icmp ugt i32 %122, %196, !dbg !3513
  br i1 %123, label %320, label %124, !dbg !3514

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3515

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3508
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3516
  call void @llvm.dbg.value(metadata i8* %127, metadata !3373, metadata !DIExpression()), !dbg !3436
  %128 = bitcast i8* %41 to i8**, !dbg !3516
  %129 = load i8*, i8** %128, align 4, !dbg !3516
  call void @llvm.dbg.value(metadata i8* %129, metadata !3386, metadata !DIExpression()), !dbg !3436
  br label %130, !dbg !3517

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3436
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3518
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3436
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3519
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3436
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3436
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3436
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3436
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3436
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3436
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3520
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3373, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %142, metadata !3370, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %141, metadata !3372, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %140, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %139, metadata !3376, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %138, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %137, metadata !3381, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %136, metadata !3389, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %135, metadata !3382, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3387, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %133, metadata !3386, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %132, metadata !3384, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %131, metadata !3383, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.label(metadata !3435), !dbg !3522
  br i1 %22, label %146, label %144, !dbg !3523

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3524
  store i8* %133, i8** %145, align 4, !dbg !3527
  br label %146, !dbg !3528

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3529
  call void @llvm.dbg.value(metadata i32 %147, metadata !3389, metadata !DIExpression()), !dbg !3436
  %148 = icmp sgt i32 %136, 0, !dbg !3530
  br i1 %148, label %152, label %149, !dbg !3531

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3532
  %151 = zext i1 %150 to i32, !dbg !3532
  br label %152, !dbg !3531

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3531
  %154 = icmp eq i32 %153, 0, !dbg !3531
  call void @llvm.dbg.value(metadata i1 %154, metadata !3413, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3533
  call void @llvm.dbg.value(metadata i1 %36, metadata !3416, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3533
  %155 = or i1 %36, %154, !dbg !3534
  br i1 %155, label %156, label %192, !dbg !3534

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3535
  %158 = sub i32 %157, %17, !dbg !3535
  %159 = lshr i32 %158, 2, !dbg !3536
  call void @llvm.dbg.value(metadata i32 %159, metadata !3417, metadata !DIExpression()), !dbg !3537
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3538
  br i1 %161, label %162, label %163, !dbg !3538

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3540
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.15, i32 0, i32 0)) #25, !dbg !3540
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 635) #25, !dbg !3540
  unreachable, !dbg !3540

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3545
  br i1 %164, label %165, label %166, !dbg !3547

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3548
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.16, i32 0, i32 0)) #25, !dbg !3548
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 640) #25, !dbg !3548
  unreachable, !dbg !3548

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3553

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3554
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3557
  store i8 %168, i8* %169, align 1, !dbg !3558
  %170 = trunc i32 %132 to i8, !dbg !3559
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3560
  store i8 %170, i8* %171, align 1, !dbg !3561
  br i1 %154, label %175, label %172, !dbg !3562

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3563
  store i8 %173, i8* %169, align 1, !dbg !3563
  %174 = add i32 %131, 1, !dbg !3566
  call void @llvm.dbg.value(metadata i32 %174, metadata !3383, metadata !DIExpression()), !dbg !3436
  br label %187, !dbg !3567

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3568
  call void @llvm.dbg.value(metadata i32 %176, metadata !3382, metadata !DIExpression()), !dbg !3436
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3570

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3571
  call void @llvm.dbg.value(metadata i32 %179, metadata !3370, metadata !DIExpression()), !dbg !3436
  br label %187, !dbg !3574

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3575

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %182, metadata !3370, metadata !DIExpression()), !dbg !3436
  br label %187, !dbg !3579

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3580
  %185 = add i32 %142, 2, !dbg !3582
  %186 = add i32 %185, %184, !dbg !3583
  call void @llvm.dbg.value(metadata i32 %186, metadata !3370, metadata !DIExpression()), !dbg !3436
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3436
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3436
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3436
  call void @llvm.dbg.value(metadata i32 %190, metadata !3370, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %189, metadata !3382, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %188, metadata !3383, metadata !DIExpression()), !dbg !3436
  %191 = add nuw nsw i32 %137, 1, !dbg !3584
  call void @llvm.dbg.value(metadata i32 %191, metadata !3381, metadata !DIExpression()), !dbg !3436
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3436
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3519
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3436
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3520
  call void @llvm.dbg.value(metadata i32 %196, metadata !3370, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %195, metadata !3381, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %194, metadata !3382, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %193, metadata !3383, metadata !DIExpression()), !dbg !3436
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3585
  call void @llvm.dbg.value(metadata i8* %197, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %143, metadata !3373, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %141, metadata !3372, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %139, metadata !3376, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %138, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3390, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3387, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %132, metadata !3384, metadata !DIExpression()), !dbg !3436
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3468
  call void @llvm.dbg.value(metadata i8* %198, metadata !3372, metadata !DIExpression()), !dbg !3436
  %199 = load i8, i8* %198, align 1, !dbg !3470
  %200 = icmp eq i8 %199, 0, !dbg !3471
  br i1 %200, label %226, label %63, !dbg !3472

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3586

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3587
  call void @llvm.dbg.value(metadata i8* %203, metadata !3373, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 undef, metadata !3420, metadata !DIExpression()), !dbg !3588
  br i1 %22, label %219, label %204, !dbg !3589

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3587
  %206 = load i32, i32* %205, align 4, !dbg !3587
  call void @llvm.dbg.value(metadata i32 %206, metadata !3420, metadata !DIExpression()), !dbg !3588
  %207 = inttoptr i32 %118 to i32*, !dbg !3590
  store i32 %206, i32* %207, align 4, !dbg !3593
  br label %219, !dbg !3594

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3595
  %210 = add i32 %209, 7, !dbg !3595
  %211 = and i32 %210, -8, !dbg !3595
  %212 = inttoptr i32 %211 to i8*, !dbg !3595
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3595
  call void @llvm.dbg.value(metadata i8* %213, metadata !3373, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i64 undef, metadata !3426, metadata !DIExpression()), !dbg !3596
  br i1 %22, label %219, label %214, !dbg !3597

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3595
  %216 = load i64, i64* %215, align 8, !dbg !3595
  call void @llvm.dbg.value(metadata i64 %216, metadata !3426, metadata !DIExpression()), !dbg !3596
  %217 = inttoptr i32 %118 to i64*, !dbg !3598
  store i64 %216, i64* %217, align 8, !dbg !3603
  br label %219, !dbg !3604

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3605
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.17, i32 0, i32 0), i32 noundef %113) #25, !dbg !3605
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 709) #25, !dbg !3605
  unreachable, !dbg !3605

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3610
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3610
  call void @llvm.dbg.value(metadata i8* %221, metadata !3373, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %40, metadata !3372, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %222, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %113, metadata !3376, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %112, metadata !3377, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3390, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8 poison, metadata !3387, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %72, metadata !3384, metadata !DIExpression()), !dbg !3436
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3468
  call void @llvm.dbg.value(metadata i8* %223, metadata !3372, metadata !DIExpression()), !dbg !3436
  %224 = load i8, i8* %223, align 1, !dbg !3470
  %225 = icmp eq i8 %224, 0, !dbg !3471
  br i1 %225, label %226, label %38, !dbg !3472

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3611
  %228 = ptrtoint i8* %227 to i32, !dbg !3612
  %229 = sub i32 %228, %17, !dbg !3612
  %230 = lshr i32 %229, 2, !dbg !3614
  %231 = icmp ugt i32 %229, 1023, !dbg !3615
  br i1 %231, label %232, label %233, !dbg !3616

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.18, i32 0, i32 0)) #25, !dbg !3617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 721) #25, !dbg !3617
  unreachable, !dbg !3617

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3622

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3623
  %236 = add i32 %235, %229, !dbg !3626
  br label %320, !dbg !3627

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3628
  store i8 %238, i8* %0, align 1, !dbg !3629
  %239 = trunc i32 %194 to i8, !dbg !3630
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3632
  store i8 %240, i8* %242, align 1, !dbg !3634
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3635
  store i8 %241, i8* %243, align 1, !dbg !3636
  %244 = trunc i32 %193 to i8, !dbg !3637
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3638
  store i8 %244, i8* %245, align 1, !dbg !3639
  %246 = icmp eq i32 %193, 0, !dbg !3640
  %247 = xor i1 %246, true, !dbg !3641
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3641
  call void @llvm.dbg.value(metadata i8* %227, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 0, metadata !3385, metadata !DIExpression()), !dbg !3436
  br i1 %249, label %250, label %269, !dbg !3641

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3642

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %254, metadata !3385, metadata !DIExpression()), !dbg !3436
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3643
  %256 = load i8, i8* %255, align 1, !dbg !3643
  %257 = icmp sgt i8 %256, -1, !dbg !3645
  br i1 %257, label %265, label %258, !dbg !3646

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3429, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3647
  %259 = ptrtoint i8* %253 to i32, !dbg !3648
  %260 = add i32 %251, %259, !dbg !3650
  %261 = icmp ugt i32 %260, %196, !dbg !3651
  br i1 %261, label %320, label %262, !dbg !3652

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3653
  call void @llvm.dbg.value(metadata i8 %263, metadata !3429, metadata !DIExpression()), !dbg !3647
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3654
  call void @llvm.dbg.value(metadata i8* %264, metadata !3375, metadata !DIExpression()), !dbg !3436
  store i8 %263, i8* %253, align 1, !dbg !3655
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3585
  call void @llvm.dbg.value(metadata i8* %266, metadata !3375, metadata !DIExpression()), !dbg !3436
  %267 = add nuw i32 %254, 1, !dbg !3656
  call void @llvm.dbg.value(metadata i32 %267, metadata !3385, metadata !DIExpression()), !dbg !3436
  %268 = icmp eq i32 %267, %195, !dbg !3657
  br i1 %268, label %269, label %252, !dbg !3642, !llvm.loop !3658

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3585
  call void @llvm.dbg.value(metadata i8* %270, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 0, metadata !3385, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %133, metadata !3386, metadata !DIExpression()), !dbg !3436
  %271 = icmp eq i32 %195, 0, !dbg !3660
  br i1 %271, label %316, label %272, !dbg !3663

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3663

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %276, metadata !3386, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %277, metadata !3385, metadata !DIExpression()), !dbg !3436
  br i1 %246, label %282, label %278, !dbg !3664

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3667
  %280 = load i8, i8* %279, align 1, !dbg !3667
  %281 = icmp sgt i8 %280, -1, !dbg !3668
  br i1 %281, label %282, label %311, !dbg !3669

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3670

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3376, metadata !DIExpression()), !dbg !3436
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3671
  %285 = load i8, i8* %284, align 1, !dbg !3671
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3674
  call void @llvm.dbg.value(metadata i8* %286, metadata !3375, metadata !DIExpression()), !dbg !3436
  store i8 %285, i8* %275, align 1, !dbg !3675
  br label %297, !dbg !3676

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3677
  %289 = load i8, i8* %288, align 1, !dbg !3677
  %290 = zext i8 %289 to i32, !dbg !3677
  %291 = shl nuw nsw i32 %290, 2, !dbg !3679
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3680
  %293 = bitcast i8* %292 to i8**, !dbg !3681
  %294 = load i8*, i8** %293, align 4, !dbg !3681
  call void @llvm.dbg.value(metadata i8* %294, metadata !3386, metadata !DIExpression()), !dbg !3436
  store i8* null, i8** %293, align 4, !dbg !3682
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3683
  %296 = add i32 %295, 1, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %296, metadata !3376, metadata !DIExpression()), !dbg !3436
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3436
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3685
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3436
  call void @llvm.dbg.value(metadata i8* %300, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i32 %299, metadata !3376, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %298, metadata !3386, metadata !DIExpression()), !dbg !3436
  %301 = ptrtoint i8* %300 to i32, !dbg !3686
  %302 = add i32 %273, %299, !dbg !3688
  %303 = add i32 %302, %301, !dbg !3689
  %304 = icmp ugt i32 %303, %196, !dbg !3690
  br i1 %304, label %320, label %305, !dbg !3691

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3692
  %307 = load i8, i8* %306, align 1, !dbg !3692
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3693
  call void @llvm.dbg.value(metadata i8* %308, metadata !3375, metadata !DIExpression()), !dbg !3436
  store i8 %307, i8* %300, align 1, !dbg !3694
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3695
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3696
  call void @llvm.dbg.value(metadata i8* %310, metadata !3375, metadata !DIExpression()), !dbg !3436
  br label %311, !dbg !3697

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3698
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3436
  call void @llvm.dbg.value(metadata i8* %313, metadata !3375, metadata !DIExpression()), !dbg !3436
  call void @llvm.dbg.value(metadata i8* %312, metadata !3386, metadata !DIExpression()), !dbg !3436
  %314 = add nuw i32 %277, 1, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %314, metadata !3385, metadata !DIExpression()), !dbg !3436
  %315 = icmp eq i32 %314, %195, !dbg !3660
  br i1 %315, label %316, label %274, !dbg !3663, !llvm.loop !3700

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3585
  %318 = ptrtoint i8* %317 to i32, !dbg !3702
  %319 = sub i32 %318, %17, !dbg !3702
  br label %320, !dbg !3703

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3704
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3704
  ret i32 %321, !dbg !3704
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3705 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3709, metadata !DIExpression()), !dbg !3710
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3711
  ret i1 %2, !dbg !3712
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3713 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3718, metadata !DIExpression()), !dbg !3719
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3720
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3721
  %4 = and i1 %2, %3, !dbg !3721
  ret i1 %4, !dbg !3722
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3723 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3727, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %1, metadata !3728, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %2, metadata !3729, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i8* %3, metadata !3730, metadata !DIExpression()), !dbg !3733
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3734
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3734
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3731, metadata !DIExpression()), !dbg !3735
  call void @llvm.va_start(i8* nonnull %6), !dbg !3736
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3737
  %8 = load i32, i32* %7, align 4, !dbg !3737
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3737
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3737
  call void @llvm.dbg.value(metadata i32 %10, metadata !3732, metadata !DIExpression()), !dbg !3733
  call void @llvm.va_end(i8* nonnull %6), !dbg !3738
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3739
  ret i32 %10, !dbg !3740
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3741 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3753, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3754, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i8* %2, metadata !3755, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i8* %3, metadata !3756, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i8* %3, metadata !3757, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i8* %3, metadata !3758, metadata !DIExpression()), !dbg !3772
  %5 = icmp eq i8* %3, null, !dbg !3773
  br i1 %5, label %45, label %6, !dbg !3775

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3767, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3772
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3776
  %8 = load i8, i8* %7, align 1, !dbg !3776
  %9 = zext i8 %8 to i32, !dbg !3777
  call void @llvm.dbg.value(metadata i32 %9, metadata !3768, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i8 undef, metadata !3769, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3772
  call void @llvm.dbg.value(metadata i8 undef, metadata !3770, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3772
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  call void @llvm.dbg.value(metadata i32 0, metadata !3766, metadata !DIExpression()), !dbg !3772
  %10 = icmp eq i8 %8, 0, !dbg !3778
  br i1 %10, label %39, label %11, !dbg !3781

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3782
  call void @llvm.dbg.value(metadata i8 %12, metadata !3767, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3772
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %13 = zext i8 %12 to i32, !dbg !3783
  call void @llvm.dbg.value(metadata i32 %13, metadata !3767, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3772
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %14 = shl nuw nsw i32 %13, 2, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %14, metadata !3767, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3785
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3786
  %17 = load i8, i8* %16, align 1, !dbg !3786
  call void @llvm.dbg.value(metadata i8 %17, metadata !3769, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3772
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %18 = zext i8 %17 to i32, !dbg !3787
  call void @llvm.dbg.value(metadata i32 %18, metadata !3769, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3788
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3789
  %21 = load i8, i8* %20, align 1, !dbg !3789
  call void @llvm.dbg.value(metadata i8 %21, metadata !3770, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3772
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %22 = zext i8 %21 to i32, !dbg !3790
  call void @llvm.dbg.value(metadata i32 %22, metadata !3770, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %23 = shl nuw nsw i32 %22, 1, !dbg !3791
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3772
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3792
  call void @llvm.dbg.value(metadata i8* %24, metadata !3764, metadata !DIExpression()), !dbg !3772
  br label %25, !dbg !3781

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3764, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.value(metadata i32 %27, metadata !3766, metadata !DIExpression()), !dbg !3772
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3793
  call void @llvm.dbg.value(metadata i8* %28, metadata !3764, metadata !DIExpression()), !dbg !3772
  %29 = load i8, i8* %26, align 1, !dbg !3795
  %30 = zext i8 %29 to i32, !dbg !3795
  call void @llvm.dbg.value(metadata i32 %30, metadata !3771, metadata !DIExpression()), !dbg !3772
  %31 = shl nuw nsw i32 %30, 2, !dbg !3796
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3797
  %33 = bitcast i8* %32 to i8**, !dbg !3798
  call void @llvm.dbg.value(metadata i8** %33, metadata !3765, metadata !DIExpression()), !dbg !3772
  store i8* %28, i8** %33, align 4, !dbg !3799
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3800
  %35 = add i32 %34, 1, !dbg !3801
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3802
  call void @llvm.dbg.value(metadata i8* %36, metadata !3764, metadata !DIExpression()), !dbg !3772
  %37 = add nuw nsw i32 %27, 1, !dbg !3803
  call void @llvm.dbg.value(metadata i32 %37, metadata !3766, metadata !DIExpression()), !dbg !3772
  %38 = icmp eq i32 %37, %9, !dbg !3778
  br i1 %38, label %39, label %25, !dbg !3781, !llvm.loop !3804

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3806
  call void @llvm.dbg.value(metadata i8* %40, metadata !3757, metadata !DIExpression()), !dbg !3772
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3807
  %42 = bitcast i8* %41 to i8**, !dbg !3807
  %43 = load i8*, i8** %42, align 1, !dbg !3807
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3808
  br label %45, !dbg !3809

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3772
  ret i32 %46, !dbg !3810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3811 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3815, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3816, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %2, metadata !3817, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %3, metadata !3818, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %4, metadata !3819, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.value(metadata i8* %4, metadata !3820, metadata !DIExpression()), !dbg !3825
  %6 = ptrtoint i8* %4 to i32, !dbg !3826
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3826
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3826
  ret i32 %8, !dbg !3827
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3828 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3832, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 %1, metadata !3833, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i8 0, metadata !3835, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i32 0, metadata !3836, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i8 poison, metadata !3835, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i8* %0, metadata !3832, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3837
  %3 = load i8, i8* %0, align 1, !dbg !3838
  call void @llvm.dbg.value(metadata i8 %3, metadata !3834, metadata !DIExpression()), !dbg !3837
  %4 = icmp eq i8 %3, 0, !dbg !3839
  br i1 %4, label %29, label %5, !dbg !3840

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3841
  call void @llvm.dbg.value(metadata i32 %8, metadata !3836, metadata !DIExpression()), !dbg !3837
  br i1 %9, label %11, label %22, !dbg !3842

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3844
  br i1 %12, label %13, label %17, !dbg !3848

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3849
  br i1 %14, label %29, label %15, !dbg !3852

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3853
  br i1 %16, label %29, label %22, !dbg !3855

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3856
  %19 = xor i1 %18, true, !dbg !3858
  %20 = zext i1 %18 to i32, !dbg !3858
  %21 = add nsw i32 %8, %20, !dbg !3858
  br label %22, !dbg !3858

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3837
  call void @llvm.dbg.value(metadata i32 %24, metadata !3836, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i8 poison, metadata !3835, metadata !DIExpression()), !dbg !3837
  %25 = icmp eq i8 %6, 37, !dbg !3859
  %26 = xor i1 %25, %23, !dbg !3861
  call void @llvm.dbg.value(metadata i8* %10, metadata !3832, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i8* %10, metadata !3832, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3837
  %27 = load i8, i8* %10, align 1, !dbg !3838
  call void @llvm.dbg.value(metadata i8 %27, metadata !3834, metadata !DIExpression()), !dbg !3837
  %28 = icmp eq i8 %27, 0, !dbg !3839
  br i1 %28, label %29, label %5, !dbg !3840, !llvm.loop !3862

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3837
  ret i1 %30, !dbg !3864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3865 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3869, metadata !DIExpression()), !dbg !3870
  %2 = add i8 %0, -64, !dbg !3871
  %3 = icmp ult i8 %2, 59, !dbg !3871
  ret i1 %3, !dbg !3872
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3873 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3881, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %1, metadata !3882, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3883, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8* %3, metadata !3884, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %4, metadata !3885, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i16* %5, metadata !3886, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %6, metadata !3887, metadata !DIExpression()), !dbg !3950
  %11 = icmp eq i8* %0, null, !dbg !3951
  br i1 %11, label %12, label %13, !dbg !3954

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !3955
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 916) #25, !dbg !3955
  unreachable, !dbg !3955

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3888, metadata !DIExpression()), !dbg !3950
  %14 = bitcast i8* %0 to i32*, !dbg !3957
  call void @llvm.dbg.value(metadata i32* %14, metadata !3889, metadata !DIExpression()), !dbg !3950
  %15 = and i32 %4, 8, !dbg !3958
  %16 = icmp eq i32 %15, 0, !dbg !3959
  call void @llvm.dbg.value(metadata i1 %16, metadata !3893, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3950
  call void @llvm.dbg.value(metadata i8* %0, metadata !3896, metadata !DIExpression()), !dbg !3950
  %17 = icmp eq i32 %1, 0, !dbg !3960
  br i1 %17, label %18, label %20, !dbg !3961

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3962
  br label %20, !dbg !3961

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3961
  call void @llvm.dbg.value(metadata i32 %21, metadata !3882, metadata !DIExpression()), !dbg !3950
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3963
  %23 = load i8, i8* %22, align 1, !dbg !3963
  %24 = zext i8 %23 to i32, !dbg !3964
  call void @llvm.dbg.value(metadata i32 %24, metadata !3891, metadata !DIExpression()), !dbg !3950
  %25 = icmp ne i8 %23, 0, !dbg !3965
  %26 = and i32 %4, 1, !dbg !3966
  %27 = icmp ne i32 %26, 0, !dbg !3966
  %28 = and i1 %27, %25, !dbg !3966
  call void @llvm.dbg.value(metadata i1 %28, metadata !3895, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3950
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3967
  %30 = load i8, i8* %29, align 1, !dbg !3967
  %31 = zext i8 %30 to i32, !dbg !3968
  call void @llvm.dbg.value(metadata i32 %31, metadata !3892, metadata !DIExpression()), !dbg !3950
  %32 = icmp ne i8 %30, 0, !dbg !3969
  %33 = and i32 %4, 2, !dbg !3970
  %34 = icmp ne i32 %33, 0, !dbg !3970
  %35 = and i1 %34, %32, !dbg !3970
  call void @llvm.dbg.value(metadata i1 %35, metadata !3894, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3950
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3971
  br i1 %36, label %41, label %37, !dbg !3971

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3973
  br i1 %38, label %287, label %39, !dbg !3976

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3977
  br label %287, !dbg !3979

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3980
  %43 = zext i8 %42 to i32, !dbg !3981
  %44 = shl nuw nsw i32 %43, 2, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %44, metadata !3890, metadata !DIExpression()), !dbg !3950
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3983
  %46 = bitcast i8* %45 to i8**, !dbg !3984
  %47 = load i8*, i8** %46, align 4, !dbg !3984
  call void @llvm.dbg.value(metadata i8* %47, metadata !3899, metadata !DIExpression()), !dbg !3950
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3985
  call void @llvm.dbg.value(metadata i8* %48, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 0, metadata !3901, metadata !DIExpression()), !dbg !3950
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3986
  br i1 %49, label %50, label %135, !dbg !3987

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3898, metadata !DIExpression()), !dbg !3950
  br i1 %28, label %51, label %76, !dbg !3988

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3898, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8* %48, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 0, metadata !3901, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 0, metadata !3902, metadata !DIExpression()), !dbg !3989
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3990

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3898, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8* %55, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %56, metadata !3901, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %57, metadata !3902, metadata !DIExpression()), !dbg !3989
  %58 = load i8, i8* %55, align 1, !dbg !3991
  %59 = zext i8 %58 to i32, !dbg !3992
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3992
  %61 = bitcast i32* %60 to i8**, !dbg !3993
  %62 = load i8*, i8** %61, align 4, !dbg !3993
  call void @llvm.dbg.value(metadata i8* %62, metadata !3908, metadata !DIExpression()), !dbg !3994
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3995
  call void @llvm.dbg.value(metadata i32 %63, metadata !3911, metadata !DIExpression()), !dbg !3994
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3996
  br i1 %65, label %66, label %70, !dbg !3996

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3998
  %68 = add nuw i32 %56, 1, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %68, metadata !3901, metadata !DIExpression()), !dbg !3950
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4001
  store i16 %67, i16* %69, align 2, !dbg !4002
  br label %70, !dbg !4003

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3950
  call void @llvm.dbg.value(metadata i32 %71, metadata !3901, metadata !DIExpression()), !dbg !3950
  %72 = add nsw i32 %63, %54, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %72, metadata !3898, metadata !DIExpression()), !dbg !3950
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4005
  call void @llvm.dbg.value(metadata i8* %73, metadata !3900, metadata !DIExpression()), !dbg !3950
  %74 = add nuw nsw i32 %57, 1, !dbg !4006
  call void @llvm.dbg.value(metadata i32 %74, metadata !3902, metadata !DIExpression()), !dbg !3989
  %75 = icmp eq i32 %74, %24, !dbg !4007
  br i1 %75, label %82, label %53, !dbg !3990, !llvm.loop !4008

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4010
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4010
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4010
  br label %82, !dbg !4010

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4013
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3950
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4014
  call void @llvm.dbg.value(metadata i1 undef, metadata !3912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4015
  call void @llvm.dbg.value(metadata i32 0, metadata !3913, metadata !DIExpression()), !dbg !4016
  call void @llvm.dbg.value(metadata i32 %85, metadata !3898, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8* %84, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %83, metadata !3901, metadata !DIExpression()), !dbg !3950
  %86 = icmp eq i8 %30, 0, !dbg !4017
  br i1 %86, label %287, label %87, !dbg !4018

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4019
  %89 = icmp eq i32 %88, 0, !dbg !4020
  call void @llvm.dbg.value(metadata i1 %89, metadata !3912, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4015
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4018

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3898, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8* %96, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %97, metadata !3901, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %98, metadata !3913, metadata !DIExpression()), !dbg !4016
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4021
  call void @llvm.dbg.value(metadata i8* %99, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8 undef, metadata !3915, metadata !DIExpression()), !dbg !4022
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4023
  call void @llvm.dbg.value(metadata i8* %100, metadata !3900, metadata !DIExpression()), !dbg !3950
  %101 = load i8, i8* %99, align 1, !dbg !4024
  call void @llvm.dbg.value(metadata i8 %101, metadata !3918, metadata !DIExpression()), !dbg !4022
  %102 = zext i8 %101 to i32, !dbg !4025
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4025
  %104 = bitcast i32* %103 to i8**, !dbg !4026
  %105 = load i8*, i8** %104, align 4, !dbg !4026
  call void @llvm.dbg.value(metadata i8* %105, metadata !3919, metadata !DIExpression()), !dbg !4022
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4027
  call void @llvm.dbg.value(metadata i1 %106, metadata !3920, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4022
  br i1 %16, label %113, label %107, !dbg !4028

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4030
  call void @llvm.dbg.value(metadata i8 %108, metadata !3915, metadata !DIExpression()), !dbg !4022
  %109 = zext i8 %108 to i32, !dbg !4031
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4032
  br i1 %110, label %111, label %113, !dbg !4033

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.20, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4034
  %112 = add nsw i32 %95, -2, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %112, metadata !3898, metadata !DIExpression()), !dbg !3950
  br label %130, !dbg !4041

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4042

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4043

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %116, metadata !3898, metadata !DIExpression()), !dbg !3950
  br label %130, !dbg !4048

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4049

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3946), !dbg !4050
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %119, metadata !3921, metadata !DIExpression()), !dbg !4022
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4052
  br i1 %121, label %122, label %126, !dbg !4052

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4054
  %124 = add nuw i32 %97, 1, !dbg !4056
  call void @llvm.dbg.value(metadata i32 %124, metadata !3901, metadata !DIExpression()), !dbg !3950
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4057
  store i16 %123, i16* %125, align 2, !dbg !4058
  br label %126, !dbg !4059

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3950
  call void @llvm.dbg.value(metadata i32 %127, metadata !3901, metadata !DIExpression()), !dbg !3950
  %128 = add i32 %95, -1, !dbg !4060
  %129 = add i32 %128, %119, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %129, metadata !3898, metadata !DIExpression()), !dbg !3950
  br label %130, !dbg !4062

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3950
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4022
  call void @llvm.dbg.value(metadata i32 %132, metadata !3898, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %131, metadata !3901, metadata !DIExpression()), !dbg !3950
  %133 = add nuw nsw i32 %98, 1, !dbg !4063
  call void @llvm.dbg.value(metadata i8* %100, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %133, metadata !3913, metadata !DIExpression()), !dbg !4016
  %134 = icmp eq i32 %133, %31, !dbg !4017
  br i1 %134, label %287, label %94, !dbg !4018, !llvm.loop !4064

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3923, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3924, metadata !DIExpression()), !dbg !4067
  br i1 %28, label %136, label %138, !dbg !4068

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3925, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8 0, metadata !3926, metadata !DIExpression()), !dbg !3950
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4069
  call void @llvm.dbg.value(metadata i8* %137, metadata !3927, metadata !DIExpression()), !dbg !3950
  br label %143, !dbg !4072

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4073
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4073

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3927, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8 undef, metadata !3926, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8 0, metadata !3925, metadata !DIExpression()), !dbg !3950
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4075
  br label %148, !dbg !4078

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4079
  call void @llvm.dbg.value(metadata i8* %151, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 0, metadata !3929, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i8 %149, metadata !3926, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8 %150, metadata !3925, metadata !DIExpression()), !dbg !3950
  %152 = icmp eq i8 %30, 0, !dbg !4081
  br i1 %152, label %153, label %155, !dbg !4082

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4083
  br label %160, !dbg !4082

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4082

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4083
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4084
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4085
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3950
  call void @llvm.dbg.value(metadata i8 undef, metadata !3922, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3950
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4086
  %166 = load i8, i8* %165, align 1, !dbg !4086
  %167 = zext i8 %162 to i32, !dbg !4087
  %168 = add i8 %166, %162, !dbg !4088
  call void @llvm.dbg.value(metadata i8 %168, metadata !3922, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3950
  %169 = icmp eq i32 %33, 0, !dbg !4089
  %170 = lshr i8 %163, 1, !dbg !4090
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4090
  call void @llvm.dbg.value(metadata i8 %171, metadata !3922, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3950
  %172 = icmp eq i32 %26, 0, !dbg !4091
  %173 = icmp eq i32 %161, 0, !dbg !4083
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4083
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4083
  call void @llvm.dbg.value(metadata i8 %175, metadata !3922, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3950
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3937, metadata !DIExpression()), !dbg !4092
  %176 = load i32, i32* %14, align 1, !dbg !4093
  store i8 %168, i8* %165, align 1, !dbg !4094
  store i8 %175, i8* %22, align 1, !dbg !4094
  store i8 %171, i8* %29, align 1, !dbg !4094
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %177, metadata !3928, metadata !DIExpression()), !dbg !3950
  %178 = icmp slt i32 %177, 0, !dbg !4096
  br i1 %178, label %287, label %240, !dbg !4098

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %181, metadata !3929, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i8 %182, metadata !3926, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8 %183, metadata !3925, metadata !DIExpression()), !dbg !3950
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4099
  call void @llvm.dbg.value(metadata i8* %184, metadata !3900, metadata !DIExpression()), !dbg !3950
  %185 = load i8, i8* %180, align 1, !dbg !4100
  call void @llvm.dbg.value(metadata i8 %185, metadata !3931, metadata !DIExpression()), !dbg !4101
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4102
  call void @llvm.dbg.value(metadata i8* %186, metadata !3900, metadata !DIExpression()), !dbg !3950
  %187 = load i8, i8* %184, align 1, !dbg !4103
  call void @llvm.dbg.value(metadata i8 %187, metadata !3934, metadata !DIExpression()), !dbg !4101
  %188 = zext i8 %187 to i32, !dbg !4104
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4104
  %190 = bitcast i32* %189 to i8**, !dbg !4105
  %191 = load i8*, i8** %190, align 4, !dbg !4105
  call void @llvm.dbg.value(metadata i8* %191, metadata !3935, metadata !DIExpression()), !dbg !4101
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4106
  call void @llvm.dbg.value(metadata i1 %192, metadata !3936, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4101
  br i1 %16, label %196, label %193, !dbg !4107

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4109
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4110
  br i1 %195, label %235, label %196, !dbg !4111

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4112

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4113

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4116
  br i1 %199, label %201, label %200, !dbg !4121

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4122
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4122
  unreachable, !dbg !4122

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4116
  %203 = add nuw nsw i8 %183, 1, !dbg !4124
  call void @llvm.dbg.value(metadata i8 %203, metadata !3925, metadata !DIExpression()), !dbg !3950
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4125
  br label %231, !dbg !4126

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4127

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4128
  br i1 %207, label %209, label %208, !dbg !4133

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4134
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4134
  unreachable, !dbg !4134

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4128
  %211 = add nuw nsw i8 %182, 1, !dbg !4136
  call void @llvm.dbg.value(metadata i8 %211, metadata !3926, metadata !DIExpression()), !dbg !3950
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4137
  br label %231, !dbg !4138

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4139

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4141
  br i1 %215, label %217, label %216, !dbg !4146

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10.21, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4147
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4147
  unreachable, !dbg !4147

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4141
  %219 = add nuw nsw i8 %183, 1, !dbg !4149
  call void @llvm.dbg.value(metadata i8 %219, metadata !3925, metadata !DIExpression()), !dbg !3950
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4150
  br label %231, !dbg !4151

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4152
  br i1 %222, label %224, label %223, !dbg !4156

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4157
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4157
  unreachable, !dbg !4157

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4152
  %226 = add nuw nsw i8 %182, 1, !dbg !4159
  call void @llvm.dbg.value(metadata i8 %226, metadata !3926, metadata !DIExpression()), !dbg !3950
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4160
  store i8 %185, i8* %227, align 1, !dbg !4161
  %228 = add nuw nsw i8 %182, 2, !dbg !4162
  call void @llvm.dbg.value(metadata i8 %228, metadata !3926, metadata !DIExpression()), !dbg !3950
  %229 = zext i8 %226 to i32, !dbg !4163
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4163
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4164
  br label %235, !dbg !4165

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3950
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4085
  call void @llvm.dbg.value(metadata i8 %237, metadata !3926, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i8 %236, metadata !3925, metadata !DIExpression()), !dbg !3950
  %238 = add nuw nsw i32 %181, 1, !dbg !4165
  call void @llvm.dbg.value(metadata i8* %186, metadata !3900, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 %238, metadata !3929, metadata !DIExpression()), !dbg !4080
  %239 = icmp eq i32 %238, %31, !dbg !4081
  br i1 %239, label %160, label %179, !dbg !4082, !llvm.loop !4166

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4090
  call void @llvm.dbg.value(metadata i32 %177, metadata !3898, metadata !DIExpression()), !dbg !3950
  store i32 %176, i32* %14, align 1, !dbg !4168
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4169
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %243, metadata !3928, metadata !DIExpression()), !dbg !3950
  %244 = icmp slt i32 %243, 0, !dbg !4171
  br i1 %244, label %287, label %245, !dbg !4173

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3898, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3950
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4174
  %248 = add nuw nsw i32 %44, %24, !dbg !4174
  %249 = sub i32 %247, %248, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %249, metadata !3938, metadata !DIExpression()), !dbg !3950
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %250, metadata !3928, metadata !DIExpression()), !dbg !3950
  %251 = icmp slt i32 %250, 0, !dbg !4176
  br i1 %251, label %287, label %252, !dbg !4178

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %253, metadata !3898, metadata !DIExpression()), !dbg !3950
  %254 = add nuw nsw i32 %253, %250, !dbg !4180
  call void @llvm.dbg.value(metadata i32 %254, metadata !3898, metadata !DIExpression()), !dbg !3950
  call void @llvm.dbg.value(metadata i32 0, metadata !3939, metadata !DIExpression()), !dbg !4181
  %255 = icmp eq i8 %162, 0, !dbg !4182
  br i1 %255, label %284, label %256, !dbg !4183

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4183

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3939, metadata !DIExpression()), !dbg !4181
  call void @llvm.dbg.value(metadata i32 %260, metadata !3898, metadata !DIExpression()), !dbg !3950
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4184
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4185
  %262 = load i8, i8* %261, align 1, !dbg !4185
  call void @llvm.dbg.value(metadata i8 %262, metadata !3941, metadata !DIExpression()), !dbg !4186
  store i8 %262, i8* %10, align 1, !dbg !4187
  %263 = zext i8 %262 to i32, !dbg !4188
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4188
  %265 = bitcast i32* %264 to i8**, !dbg !4189
  %266 = load i8*, i8** %265, align 4, !dbg !4189
  call void @llvm.dbg.value(metadata i8* %266, metadata !3944, metadata !DIExpression()), !dbg !4186
  br i1 %257, label %270, label %267, !dbg !4190

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4191
  %269 = load i16, i16* %268, align 2, !dbg !4191
  br label %270, !dbg !4190

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4190
  call void @llvm.dbg.value(metadata i32 undef, metadata !3945, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4186
  call void @llvm.dbg.value(metadata i8* %10, metadata !3941, metadata !DIExpression(DW_OP_deref)), !dbg !4186
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %272, metadata !3928, metadata !DIExpression()), !dbg !3950
  %273 = icmp slt i32 %272, 0, !dbg !4193
  br i1 %273, label %277, label %274, !dbg !4195

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3945, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3898, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3950
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4196
  call void @llvm.dbg.value(metadata i32 %275, metadata !3928, metadata !DIExpression()), !dbg !3950
  %276 = icmp slt i32 %275, 0, !dbg !4197
  br i1 %276, label %277, label %279, !dbg !4199

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3898, metadata !DIExpression()), !dbg !3950
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4200
  call void @llvm.dbg.value(metadata i32 undef, metadata !3898, metadata !DIExpression()), !dbg !3950
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %280, metadata !3898, metadata !DIExpression()), !dbg !3950
  %281 = add nsw i32 %280, %275, !dbg !4202
  call void @llvm.dbg.value(metadata i32 %281, metadata !3898, metadata !DIExpression()), !dbg !3950
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4200
  %282 = add nuw nsw i32 %259, 1, !dbg !4203
  call void @llvm.dbg.value(metadata i32 %282, metadata !3939, metadata !DIExpression()), !dbg !4181
  %283 = icmp eq i32 %282, %167, !dbg !4182
  br i1 %283, label %284, label %258, !dbg !4183, !llvm.loop !4204

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4180
  call void @llvm.dbg.value(metadata i32 %285, metadata !3898, metadata !DIExpression()), !dbg !3950
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4206
  br label %287, !dbg !4207

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3950
  ret i32 %288, !dbg !4208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4209 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4213, metadata !DIExpression()), !dbg !4221
  %2 = icmp eq i8* %0, null, !dbg !4222
  br i1 %2, label %3, label %4, !dbg !4225

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4226
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.14, i32 0, i32 0), i32 noundef 198) #25, !dbg !4226
  unreachable, !dbg !4226

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4214, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i8* %0, metadata !4215, metadata !DIExpression()), !dbg !4221
  %5 = load i8, i8* %0, align 1, !dbg !4228
  %6 = zext i8 %5 to i32, !dbg !4228
  %7 = shl nuw nsw i32 %6, 2, !dbg !4229
  call void @llvm.dbg.value(metadata i32 %7, metadata !4216, metadata !DIExpression()), !dbg !4221
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4230
  %9 = load i8, i8* %8, align 1, !dbg !4230
  %10 = zext i8 %9 to i32, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %10, metadata !4217, metadata !DIExpression()), !dbg !4221
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4231
  %12 = load i8, i8* %11, align 1, !dbg !4231
  %13 = zext i8 %12 to i32, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %13, metadata !4218, metadata !DIExpression()), !dbg !4221
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4232
  call void @llvm.dbg.value(metadata i8* %14, metadata !4214, metadata !DIExpression()), !dbg !4221
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4233
  call void @llvm.dbg.value(metadata i8* %15, metadata !4214, metadata !DIExpression()), !dbg !4221
  call void @llvm.dbg.value(metadata i32 0, metadata !4219, metadata !DIExpression()), !dbg !4234
  %16 = icmp eq i8 %9, 0, !dbg !4235
  br i1 %16, label %17, label %22, !dbg !4237

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4221
  %19 = ptrtoint i8* %18 to i32, !dbg !4238
  %20 = ptrtoint i8* %0 to i32, !dbg !4238
  %21 = sub i32 %19, %20, !dbg !4238
  ret i32 %21, !dbg !4239

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4219, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata i8* %24, metadata !4214, metadata !DIExpression()), !dbg !4221
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4240
  call void @llvm.dbg.value(metadata i8* %25, metadata !4214, metadata !DIExpression()), !dbg !4221
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4242
  %27 = add i32 %26, 1, !dbg !4243
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4244
  call void @llvm.dbg.value(metadata i8* %28, metadata !4214, metadata !DIExpression()), !dbg !4221
  %29 = add nuw nsw i32 %23, 1, !dbg !4245
  call void @llvm.dbg.value(metadata i32 %29, metadata !4219, metadata !DIExpression()), !dbg !4234
  %30 = icmp eq i32 %29, %10, !dbg !4235
  br i1 %30, label %17, label %22, !dbg !4237, !llvm.loop !4246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4248 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4252, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i8* %1, metadata !4253, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i8* %2, metadata !4254, metadata !DIExpression()), !dbg !4256
  call void @llvm.dbg.value(metadata i16 %3, metadata !4255, metadata !DIExpression()), !dbg !4256
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4257
  br i1 %5, label %6, label %9, !dbg !4259

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4260
  %8 = add i32 %7, 1, !dbg !4262
  br label %20, !dbg !4263

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4264
  br i1 %10, label %13, label %11, !dbg !4265

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4265
  br label %16, !dbg !4265

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4266
  %15 = add i32 %14, 1, !dbg !4267
  br label %16, !dbg !4265

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4265
  %18 = and i32 %17, 65535, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %17, metadata !4255, metadata !DIExpression()), !dbg !4256
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4269
  br label %20, !dbg !4270

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4256
  ret i32 %21, !dbg !4271
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4272 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4274, metadata !DIExpression()), !dbg !4275
  ret i32 0, !dbg !4276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4277 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4281, metadata !DIExpression()), !dbg !4282
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4283
  ret void, !dbg !4284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4285 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4288
  ret i8* %1, !dbg !4289
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4290 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4301, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i8* %0, metadata !4300, metadata !DIExpression()), !dbg !4312
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4313
  ret void, !dbg !4315
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4320, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.value(metadata i8* %1, metadata !4321, metadata !DIExpression()), !dbg !4322
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4323
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4323
  ret i32 %4, !dbg !4324
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4325 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4332, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4329, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata i8* %1, metadata !4330, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata i8* %2, metadata !4331, metadata !DIExpression()), !dbg !4333
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4334
  ret void, !dbg !4335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4340, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 %1, metadata !4341, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i32 0, metadata !4342, metadata !DIExpression()), !dbg !4343
  %3 = icmp eq i32 %1, 0, !dbg !4344
  br i1 %3, label %13, label %4, !dbg !4347

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4342, metadata !DIExpression()), !dbg !4343
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4348
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4350
  %8 = load i8, i8* %7, align 1, !dbg !4350
  %9 = zext i8 %8 to i32, !dbg !4350
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4348
  %11 = add nuw i32 %5, 1, !dbg !4351
  call void @llvm.dbg.value(metadata i32 %11, metadata !4342, metadata !DIExpression()), !dbg !4343
  %12 = icmp eq i32 %11, %1, !dbg !4344
  br i1 %12, label %13, label %4, !dbg !4347, !llvm.loop !4352

13:                                               ; preds = %4, %2
  ret void, !dbg !4354
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4355 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4359, metadata !DIExpression()), !dbg !4361
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4362
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4362
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4360, metadata !DIExpression()), !dbg !4363
  call void @llvm.va_start(i8* nonnull %3), !dbg !4364
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4365
  %5 = load i32, i32* %4, align 4, !dbg !4365
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4365
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4365
  call void @llvm.va_end(i8* nonnull %3), !dbg !4366
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4367
  ret void, !dbg !4367
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4368 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4372, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i32 %1, metadata !4373, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.value(metadata i8* %2, metadata !4374, metadata !DIExpression()), !dbg !4377
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4378
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4378
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4375, metadata !DIExpression()), !dbg !4379
  call void @llvm.va_start(i8* nonnull %5), !dbg !4380
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4381
  %7 = load i32, i32* %6, align 4, !dbg !4381
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4381
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4381
  call void @llvm.dbg.value(metadata i32 %9, metadata !4376, metadata !DIExpression()), !dbg !4377
  call void @llvm.va_end(i8* nonnull %5), !dbg !4382
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4383
  ret i32 %9, !dbg !4384
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4385 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4392, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8* %0, metadata !4389, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %1, metadata !4390, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8* %2, metadata !4391, metadata !DIExpression()), !dbg !4399
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4400
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4400
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4393, metadata !DIExpression()), !dbg !4401
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4402
  store i8* %0, i8** %7, align 4, !dbg !4402
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4402
  store i32 %1, i32* %8, align 4, !dbg !4402
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4402
  store i32 0, i32* %9, align 4, !dbg !4402
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4403
  %10 = load i32, i32* %9, align 4, !dbg !4404
  %11 = load i32, i32* %8, align 4, !dbg !4406
  %12 = icmp slt i32 %10, %11, !dbg !4407
  br i1 %12, label %13, label %15, !dbg !4408

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4409
  store i8 0, i8* %14, align 1, !dbg !4411
  br label %15, !dbg !4412

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4413
  ret i32 %10, !dbg !4414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4420, metadata !DIExpression()), !dbg !4422
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4421, metadata !DIExpression()), !dbg !4422
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4423
  %4 = load i8*, i8** %3, align 4, !dbg !4423
  %5 = icmp eq i8* %4, null, !dbg !4425
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4426
  br i1 %5, label %12, label %8, !dbg !4427

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4428
  %10 = load i32, i32* %9, align 4, !dbg !4428
  %11 = icmp slt i32 %7, %10, !dbg !4429
  br i1 %11, label %15, label %12, !dbg !4430

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4431
  %14 = add nsw i32 %7, 1, !dbg !4433
  store i32 %14, i32* %13, align 4, !dbg !4433
  br label %25, !dbg !4434

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4435
  %17 = icmp eq i32 %7, %16, !dbg !4437
  br i1 %17, label %18, label %21, !dbg !4438

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4439
  store i32 %19, i32* %6, align 4, !dbg !4439
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4441
  store i8 0, i8* %20, align 1, !dbg !4442
  br label %25, !dbg !4443

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4444
  %23 = add nsw i32 %7, 1, !dbg !4446
  store i32 %23, i32* %6, align 4, !dbg !4446
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4447
  store i8 %22, i8* %24, align 1, !dbg !4448
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4449
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4450 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4455, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.value(metadata i8* %1, metadata !4456, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.value(metadata i8* %2, metadata !4457, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.value(metadata i8* %3, metadata !4458, metadata !DIExpression()), !dbg !4459
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4460
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4461
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4462
  unreachable, !dbg !4463
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4464 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4571
  ret %struct.k_thread* %1, !dbg !4572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4577, metadata !DIExpression()), !dbg !4578
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4579, !srcloc !4581
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4582
  ret void, !dbg !4583
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4584 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4585, !srcloc !4587
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4588
  ret %struct.k_thread* %1, !dbg !4589
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4590 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4603, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4600, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8* %1, metadata !4601, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8* %2, metadata !4602, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %4, metadata !4604, metadata !DIExpression()), !dbg !4729
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4730
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4730
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4605, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.value(metadata i32 0, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i1 undef, metadata !4611, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4729
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4732

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4732

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4733
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4603, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8* %30, metadata !4602, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %29, metadata !4609, metadata !DIExpression()), !dbg !4729
  %31 = load i8, i8* %30, align 1, !dbg !4734
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4732

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4734
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4735
  call void @llvm.dbg.value(metadata i8* %34, metadata !4602, metadata !DIExpression()), !dbg !4729
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4735
  call void @llvm.dbg.value(metadata i32 %35, metadata !4613, metadata !DIExpression()), !dbg !4736
  %36 = icmp slt i32 %35, 0, !dbg !4737
  %37 = add i32 %29, 1, !dbg !4735
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %36, label %365, label %28, !llvm.loop !4739

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4741
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4618, metadata !DIExpression()), !dbg !4742
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4742
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4661, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4664, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %30, metadata !4667, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 -1, metadata !4668, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 -1, metadata !4669, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* null, metadata !4670, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %14, metadata !4671, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8 0, metadata !4672, metadata !DIExpression()), !dbg !4743
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4744
  call void @llvm.dbg.value(metadata i8* %39, metadata !4602, metadata !DIExpression()), !dbg !4729
  %40 = load i24, i24* %15, align 8, !dbg !4745
  %41 = and i24 %40, 256, !dbg !4745
  %42 = icmp eq i24 %41, 0, !dbg !4745
  br i1 %42, label %51, label %43, !dbg !4747

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4748
  call void @llvm.dbg.value(metadata i8* %44, metadata !4603, metadata !DIExpression()), !dbg !4729
  %45 = bitcast i8* %27 to i32*, !dbg !4748
  %46 = load i32, i32* %45, align 4, !dbg !4748
  call void @llvm.dbg.value(metadata i32 %46, metadata !4668, metadata !DIExpression()), !dbg !4743
  %47 = icmp slt i32 %46, 0, !dbg !4750
  br i1 %47, label %48, label %56, !dbg !4752

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4753
  store i24 %49, i24* %15, align 8, !dbg !4753
  %50 = sub nsw i32 0, %46, !dbg !4755
  call void @llvm.dbg.value(metadata i32 %50, metadata !4668, metadata !DIExpression()), !dbg !4743
  br label %56, !dbg !4756

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4757
  %53 = icmp eq i24 %52, 0, !dbg !4757
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4759
  br label %56, !dbg !4759

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4760
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4743
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4603, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %58, metadata !4668, metadata !DIExpression()), !dbg !4743
  %60 = and i24 %57, 1024, !dbg !4760
  %61 = icmp eq i24 %60, 0, !dbg !4760
  br i1 %61, label %69, label %62, !dbg !4761

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4762
  call void @llvm.dbg.value(metadata i8* %63, metadata !4603, metadata !DIExpression()), !dbg !4729
  %64 = bitcast i8* %59 to i32*, !dbg !4762
  %65 = load i32, i32* %64, align 4, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %65, metadata !4673, metadata !DIExpression()), !dbg !4763
  %66 = icmp slt i32 %65, 0, !dbg !4764
  br i1 %66, label %67, label %74, !dbg !4766

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4767
  store i24 %68, i24* %15, align 8, !dbg !4767
  br label %74, !dbg !4769

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4770
  %71 = icmp eq i24 %70, 0, !dbg !4770
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4772
  br label %74, !dbg !4772

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4773
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4743
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4743
  call void @llvm.dbg.value(metadata i8* %77, metadata !4603, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %76, metadata !4669, metadata !DIExpression()), !dbg !4743
  store i32 0, i32* %16, align 4, !dbg !4774
  store i32 0, i32* %17, align 8, !dbg !4775
  %78 = lshr i24 %75, 16, !dbg !4773
  call void @llvm.dbg.value(metadata i24 %78, metadata !4676, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4743
  %79 = lshr i24 %75, 11, !dbg !4776
  %80 = and i24 %79, 15, !dbg !4776
  %81 = zext i24 %80 to i32, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %81, metadata !4677, metadata !DIExpression()), !dbg !4743
  %82 = trunc i24 %78 to i3, !dbg !4777
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4777

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4778

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4781
  call void @llvm.dbg.value(metadata i8* %85, metadata !4603, metadata !DIExpression()), !dbg !4729
  %86 = bitcast i8* %77 to i32*, !dbg !4781
  %87 = load i32, i32* %86, align 4, !dbg !4781
  %88 = sext i32 %87 to i64, !dbg !4781
  store i64 %88, i64* %20, align 8, !dbg !4783
  br label %115, !dbg !4784

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4785
  call void @llvm.dbg.value(metadata i8* %90, metadata !4603, metadata !DIExpression()), !dbg !4729
  %91 = bitcast i8* %77 to i32*, !dbg !4785
  %92 = load i32, i32* %91, align 4, !dbg !4785
  %93 = sext i32 %92 to i64, !dbg !4785
  store i64 %93, i64* %20, align 8, !dbg !4788
  br label %115, !dbg !4789

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4790
  %96 = add i32 %95, 7, !dbg !4790
  %97 = and i32 %96, -8, !dbg !4790
  %98 = inttoptr i32 %97 to i8*, !dbg !4790
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4790
  call void @llvm.dbg.value(metadata i8* %99, metadata !4603, metadata !DIExpression()), !dbg !4729
  %100 = inttoptr i32 %97 to i64*, !dbg !4790
  %101 = load i64, i64* %100, align 8, !dbg !4790
  store i64 %101, i64* %20, align 8, !dbg !4791
  br label %115, !dbg !4792

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4793
  %104 = add i32 %103, 7, !dbg !4793
  %105 = and i32 %104, -8, !dbg !4793
  %106 = inttoptr i32 %105 to i8*, !dbg !4793
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4793
  call void @llvm.dbg.value(metadata i8* %107, metadata !4603, metadata !DIExpression()), !dbg !4729
  %108 = inttoptr i32 %105 to i64*, !dbg !4793
  %109 = load i64, i64* %108, align 8, !dbg !4793
  store i64 %109, i64* %20, align 8, !dbg !4794
  br label %115, !dbg !4795

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4796
  call void @llvm.dbg.value(metadata i8* %111, metadata !4603, metadata !DIExpression()), !dbg !4729
  %112 = bitcast i8* %77 to i32*, !dbg !4796
  %113 = load i32, i32* %112, align 4, !dbg !4796
  %114 = sext i32 %113 to i64, !dbg !4797
  store i64 %114, i64* %20, align 8, !dbg !4798
  br label %115, !dbg !4799

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4800
  call void @llvm.dbg.value(metadata i8* %117, metadata !4603, metadata !DIExpression()), !dbg !4729
  %118 = trunc i24 %79 to i4, !dbg !4801
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4801

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4802
  %121 = ashr exact i64 %120, 56, !dbg !4802
  store i64 %121, i64* %20, align 8, !dbg !4805
  br label %177, !dbg !4806

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4807
  %124 = ashr exact i64 %123, 48, !dbg !4807
  store i64 %124, i64* %20, align 8, !dbg !4810
  br label %177, !dbg !4811

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4812

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4815
  call void @llvm.dbg.value(metadata i8* %127, metadata !4603, metadata !DIExpression()), !dbg !4729
  %128 = bitcast i8* %77 to i32*, !dbg !4815
  %129 = load i32, i32* %128, align 4, !dbg !4815
  %130 = zext i32 %129 to i64, !dbg !4815
  store i64 %130, i64* %20, align 8, !dbg !4817
  br label %157, !dbg !4818

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4819
  call void @llvm.dbg.value(metadata i8* %132, metadata !4603, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8* %132, metadata !4603, metadata !DIExpression()), !dbg !4729
  %133 = bitcast i8* %77 to i32*, !dbg !4819
  %134 = load i32, i32* %133, align 4, !dbg !4819
  %135 = zext i32 %134 to i64, !dbg !4819
  store i64 %135, i64* %20, align 8, !dbg !4819
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4821
  %138 = add i32 %137, 7, !dbg !4821
  %139 = and i32 %138, -8, !dbg !4821
  %140 = inttoptr i32 %139 to i8*, !dbg !4821
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4821
  call void @llvm.dbg.value(metadata i8* %141, metadata !4603, metadata !DIExpression()), !dbg !4729
  %142 = inttoptr i32 %139 to i64*, !dbg !4821
  %143 = load i64, i64* %142, align 8, !dbg !4821
  store i64 %143, i64* %20, align 8, !dbg !4822
  br label %157, !dbg !4823

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4824
  %146 = add i32 %145, 7, !dbg !4824
  %147 = and i32 %146, -8, !dbg !4824
  %148 = inttoptr i32 %147 to i8*, !dbg !4824
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4824
  call void @llvm.dbg.value(metadata i8* %149, metadata !4603, metadata !DIExpression()), !dbg !4729
  %150 = inttoptr i32 %147 to i64*, !dbg !4824
  %151 = load i64, i64* %150, align 8, !dbg !4824
  store i64 %151, i64* %20, align 8, !dbg !4825
  br label %157, !dbg !4826

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4827
  call void @llvm.dbg.value(metadata i8* %153, metadata !4603, metadata !DIExpression()), !dbg !4729
  %154 = bitcast i8* %77 to i32*, !dbg !4827
  %155 = load i32, i32* %154, align 4, !dbg !4827
  %156 = zext i32 %155 to i64, !dbg !4828
  store i64 %156, i64* %20, align 8, !dbg !4829
  br label %157, !dbg !4830

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4831
  call void @llvm.dbg.value(metadata i8* %159, metadata !4603, metadata !DIExpression()), !dbg !4729
  %160 = trunc i24 %79 to i4, !dbg !4832
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4832

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4833
  store i64 %162, i64* %20, align 8, !dbg !4836
  br label %177, !dbg !4837

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4838
  store i64 %164, i64* %20, align 8, !dbg !4841
  br label %177, !dbg !4842

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4843
  %167 = add i32 %166, 7, !dbg !4843
  %168 = and i32 %167, -8, !dbg !4843
  %169 = inttoptr i32 %168 to i8*, !dbg !4843
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4843
  call void @llvm.dbg.value(metadata i8* %170, metadata !4603, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8* %170, metadata !4603, metadata !DIExpression()), !dbg !4729
  %171 = inttoptr i32 %168 to double*, !dbg !4843
  %172 = load double, double* %171, align 8, !dbg !4843
  store double %172, double* %19, align 8, !dbg !4843
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4847
  call void @llvm.dbg.value(metadata i8* %174, metadata !4603, metadata !DIExpression()), !dbg !4729
  %175 = bitcast i8* %77 to i8**, !dbg !4847
  %176 = load i8*, i8** %175, align 4, !dbg !4847
  store i8* %176, i8** %18, align 8, !dbg !4850
  br label %177, !dbg !4851

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4743
  call void @llvm.dbg.value(metadata i8* %178, metadata !4603, metadata !DIExpression()), !dbg !4729
  %179 = and i24 %75, 3, !dbg !4852
  %180 = icmp eq i24 %179, 0, !dbg !4852
  br i1 %180, label %185, label %181, !dbg !4852

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4853
  call void @llvm.dbg.value(metadata i32 %182, metadata !4678, metadata !DIExpression()), !dbg !4854
  %183 = icmp slt i32 %182, 0, !dbg !4855
  %184 = add i32 %182, %29, !dbg !4853
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4857
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4858

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %188, metadata !4682, metadata !DIExpression()), !dbg !4860
  %189 = icmp slt i32 %188, 0, !dbg !4861
  %190 = add i32 %29, 1, !dbg !4859
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4863
  call void @llvm.dbg.value(metadata i8* %192, metadata !4670, metadata !DIExpression()), !dbg !4743
  %193 = icmp sgt i32 %76, -1, !dbg !4864
  br i1 %193, label %194, label %196, !dbg !4866

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4867
  call void @llvm.dbg.value(metadata i32 %195, metadata !4685, metadata !DIExpression()), !dbg !4869
  br label %241, !dbg !4870

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %197, metadata !4685, metadata !DIExpression()), !dbg !4869
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4670, metadata !DIExpression()), !dbg !4743
  %199 = load i64, i64* %20, align 8, !dbg !4873
  %200 = trunc i64 %199 to i8, !dbg !4874
  store i8 %200, i8* %10, align 1, !dbg !4875
  call void @llvm.dbg.value(metadata i8* %23, metadata !4671, metadata !DIExpression()), !dbg !4743
  br label %245, !dbg !4876

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4877
  %203 = icmp eq i24 %202, 0, !dbg !4877
  %204 = trunc i24 %75 to i8, !dbg !4879
  %205 = shl i8 %204, 1, !dbg !4879
  %206 = and i8 %205, 32, !dbg !4879
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4879
  call void @llvm.dbg.value(metadata i8 %207, metadata !4672, metadata !DIExpression()), !dbg !4743
  %208 = load i64, i64* %20, align 8, !dbg !4880
  call void @llvm.dbg.value(metadata i64 %208, metadata !4610, metadata !DIExpression()), !dbg !4729
  %209 = icmp slt i64 %208, 0, !dbg !4881
  br i1 %209, label %210, label %212, !dbg !4883

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4672, metadata !DIExpression()), !dbg !4743
  %211 = sub nsw i64 0, %208, !dbg !4884
  store i64 %211, i64* %20, align 8, !dbg !4886
  br label %212, !dbg !4887

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4743
  call void @llvm.dbg.value(metadata i8 %213, metadata !4672, metadata !DIExpression()), !dbg !4743
  %214 = load i64, i64* %20, align 8, !dbg !4888
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4889
  call void @llvm.dbg.value(metadata i8* %215, metadata !4670, metadata !DIExpression()), !dbg !4743
  br label %216, !dbg !4890

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4891
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4892
  call void @llvm.dbg.value(metadata i8* %218, metadata !4670, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8 %217, metadata !4672, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.label(metadata !4728), !dbg !4893
  %219 = icmp sgt i32 %76, -1, !dbg !4894
  br i1 %219, label %222, label %220, !dbg !4895

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4896
  br label %245, !dbg !4895

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4898
  %224 = sub i32 %22, %223, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %224, metadata !4687, metadata !DIExpression()), !dbg !4899
  %225 = load i24, i24* %15, align 8, !dbg !4900
  %226 = and i24 %225, -65, !dbg !4900
  store i24 %226, i24* %15, align 8, !dbg !4900
  %227 = icmp ugt i32 %76, %224, !dbg !4901
  br i1 %227, label %228, label %245, !dbg !4903

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4904
  store i32 %229, i32* %16, align 4, !dbg !4906
  br label %245, !dbg !4907

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4908
  %232 = icmp eq i8* %231, null, !dbg !4910
  br i1 %232, label %245, label %233, !dbg !4911

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4912
  %235 = zext i32 %234 to i64, !dbg !4912
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4914
  call void @llvm.dbg.value(metadata i8* %236, metadata !4670, metadata !DIExpression()), !dbg !4743
  %237 = load i24, i24* %15, align 8, !dbg !4915
  %238 = or i24 %237, 1048576, !dbg !4915
  store i24 %238, i24* %15, align 8, !dbg !4915
  store i8 120, i8* %21, align 1, !dbg !4916
  br label %216, !dbg !4917

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4918
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4921
  br label %363, !dbg !4922

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4923
  call void @llvm.dbg.value(metadata i32 %242, metadata !4685, metadata !DIExpression()), !dbg !4869
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4924
  call void @llvm.dbg.value(metadata i32 -1, metadata !4669, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %29, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8* %192, metadata !4670, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8* %243, metadata !4671, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8 0, metadata !4672, metadata !DIExpression()), !dbg !4743
  %244 = icmp eq i8* %192, null, !dbg !4925
  br i1 %244, label %363, label %245, !dbg !4927, !llvm.loop !4739

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4896
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4743
  call void @llvm.dbg.value(metadata i32 0, metadata !4691, metadata !DIExpression()), !dbg !4743
  %250 = zext i8 %249 to i32, !dbg !4928
  %251 = icmp eq i8 %249, 0, !dbg !4930
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  call void @llvm.dbg.value(metadata i32 undef, metadata !4690, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  call void @llvm.dbg.value(metadata i32 undef, metadata !4690, metadata !DIExpression()), !dbg !4743
  %252 = icmp sgt i32 %58, 0, !dbg !4931
  br i1 %252, label %253, label %302, !dbg !4932

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4896
  %255 = icmp eq i24 %254, 0, !dbg !4896
  %256 = ptrtoint i8* %248 to i32, !dbg !4933
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  %257 = ptrtoint i8* %247 to i32, !dbg !4933
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  %258 = xor i1 %251, true, !dbg !4934
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  %259 = sext i1 %258 to i32, !dbg !4934
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  %260 = lshr i24 %246, 19, !dbg !4935
  %261 = and i24 %260, 1, !dbg !4935
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4935
  %263 = zext i24 %262 to i32, !dbg !4935
  %264 = add i32 %257, %259, !dbg !4935
  %265 = add i32 %256, %263, !dbg !4935
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  %266 = and i24 %246, 4194304, !dbg !4936
  %267 = icmp eq i24 %266, 0, !dbg !4936
  %268 = load i32, i32* %16, align 4, !dbg !4938
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4690, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4743
  call void @llvm.dbg.value(metadata i32 undef, metadata !4690, metadata !DIExpression()), !dbg !4743
  %269 = load i32, i32* %17, align 8, !dbg !4939
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4939
  call void @llvm.dbg.value(metadata i32 undef, metadata !4690, metadata !DIExpression()), !dbg !4743
  %271 = add i32 %264, %58, !dbg !4939
  %272 = add i32 %265, %268, !dbg !4939
  %273 = add i32 %272, %270, !dbg !4940
  %274 = sub i32 %271, %273, !dbg !4940
  call void @llvm.dbg.value(metadata i32 %274, metadata !4668, metadata !DIExpression()), !dbg !4743
  %275 = and i24 %246, 4, !dbg !4941
  %276 = icmp eq i24 %275, 0, !dbg !4941
  br i1 %276, label %277, label %302, !dbg !4942

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4692, metadata !DIExpression()), !dbg !4943
  %278 = and i24 %246, 64, !dbg !4944
  %279 = icmp eq i24 %278, 0, !dbg !4944
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4945
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4945
  %282 = select i1 %279, i32 32, i32 48, !dbg !4945
  br i1 %280, label %287, label %283, !dbg !4945

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4946
  call void @llvm.dbg.value(metadata i32 %284, metadata !4697, metadata !DIExpression()), !dbg !4947
  %285 = icmp slt i32 %284, 0, !dbg !4948
  %286 = add i32 %29, 1, !dbg !4946
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4743
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %290, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i8 undef, metadata !4692, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.value(metadata i8 %288, metadata !4672, metadata !DIExpression()), !dbg !4743
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4950
  %292 = add i32 %291, -1, !dbg !4950
  br label %293, !dbg !4950

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4951
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %295, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %294, metadata !4668, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i32 %294, metadata !4668, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4743
  %296 = icmp sgt i32 %294, 0, !dbg !4952
  br i1 %296, label %297, label %302, !dbg !4950

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4953
  call void @llvm.dbg.value(metadata i32 %298, metadata !4668, metadata !DIExpression()), !dbg !4743
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %299, metadata !4703, metadata !DIExpression()), !dbg !4955
  %300 = icmp slt i32 %299, 0, !dbg !4956
  %301 = add i32 %295, 1, !dbg !4954
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %300, label %361, label %293, !llvm.loop !4958

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4743
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4743
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %305, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %304, metadata !4668, metadata !DIExpression()), !dbg !4743
  call void @llvm.dbg.value(metadata i8 %303, metadata !4672, metadata !DIExpression()), !dbg !4743
  %306 = icmp eq i8 %303, 0, !dbg !4960
  br i1 %306, label %312, label %307, !dbg !4961

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4962
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4963
  call void @llvm.dbg.value(metadata i32 %309, metadata !4706, metadata !DIExpression()), !dbg !4964
  %310 = icmp slt i32 %309, 0, !dbg !4965
  %311 = add i32 %305, 1, !dbg !4963
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %313, metadata !4609, metadata !DIExpression()), !dbg !4729
  %314 = lshr i24 %246, 20, !dbg !4967
  %315 = lshr i24 %246, 19, !dbg !4968
  %316 = or i24 %314, %315, !dbg !4969
  %317 = and i24 %316, 1, !dbg !4969
  %318 = icmp eq i24 %317, 0, !dbg !4969
  br i1 %318, label %323, label %319, !dbg !4970

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4971
  call void @llvm.dbg.value(metadata i32 %320, metadata !4710, metadata !DIExpression()), !dbg !4972
  %321 = icmp slt i32 %320, 0, !dbg !4973
  %322 = add i32 %313, 1, !dbg !4971
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %324, metadata !4609, metadata !DIExpression()), !dbg !4729
  %325 = and i24 %246, 1048576, !dbg !4975
  %326 = icmp eq i24 %325, 0, !dbg !4975
  br i1 %326, label %333, label %327, !dbg !4976

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4977
  %329 = zext i8 %328 to i32, !dbg !4977
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %330, metadata !4716, metadata !DIExpression()), !dbg !4978
  %331 = icmp slt i32 %330, 0, !dbg !4979
  %332 = add i32 %324, 1, !dbg !4977
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %334, metadata !4609, metadata !DIExpression()), !dbg !4729
  %335 = load i32, i32* %16, align 4, !dbg !4981
  call void @llvm.dbg.value(metadata i32 %335, metadata !4691, metadata !DIExpression()), !dbg !4743
  br label %336, !dbg !4982

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4983
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %338, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %337, metadata !4691, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4743
  %339 = icmp sgt i32 %337, 0, !dbg !4984
  br i1 %339, label %340, label %345, !dbg !4982

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %341, metadata !4691, metadata !DIExpression()), !dbg !4743
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %342, metadata !4720, metadata !DIExpression()), !dbg !4987
  %343 = icmp slt i32 %342, 0, !dbg !4988
  %344 = add i32 %338, 1, !dbg !4986
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %343, label %361, label %336, !llvm.loop !4990

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %346, metadata !4723, metadata !DIExpression()), !dbg !4993
  %347 = icmp slt i32 %346, 0, !dbg !4994
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %349, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %304, metadata !4668, metadata !DIExpression()), !dbg !4743
  %350 = icmp sgt i32 %304, 0, !dbg !4996
  br i1 %350, label %351, label %363, !dbg !4997

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4997
  %353 = add i32 %352, %338, !dbg !4997
  br label %354, !dbg !4997

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %355, metadata !4668, metadata !DIExpression()), !dbg !4743
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4998
  call void @llvm.dbg.value(metadata i32 %356, metadata !4725, metadata !DIExpression()), !dbg !4999
  %357 = icmp slt i32 %356, 0, !dbg !5000
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5002
  call void @llvm.dbg.value(metadata i32 undef, metadata !4609, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4729
  call void @llvm.dbg.value(metadata i32 %359, metadata !4668, metadata !DIExpression()), !dbg !4743
  %360 = icmp sgt i32 %355, 1, !dbg !4996
  br i1 %360, label %354, label %363, !dbg !4997, !llvm.loop !5003

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4740
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4733
  call void @llvm.dbg.value(metadata i32 %364, metadata !4609, metadata !DIExpression()), !dbg !4729
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4740
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4729
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5005
  ret i32 %366, !dbg !5005
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5006 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5010, metadata !DIExpression()), !dbg !5012
  call void @llvm.dbg.value(metadata i8* %1, metadata !5011, metadata !DIExpression()), !dbg !5012
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5013
  store i24 0, i24* %3, align 4, !dbg !5013
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5013
  store i8 0, i8* %4, align 1, !dbg !5013
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5013
  store i32 0, i32* %5, align 4, !dbg !5013
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5013
  store i32 0, i32* %6, align 4, !dbg !5013
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %7, metadata !5011, metadata !DIExpression()), !dbg !5012
  %8 = load i8, i8* %7, align 1, !dbg !5015
  %9 = icmp eq i8 %8, 37, !dbg !5017
  br i1 %9, label %10, label %12, !dbg !5018

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5019
  call void @llvm.dbg.value(metadata i8* %11, metadata !5011, metadata !DIExpression()), !dbg !5012
  store i8 37, i8* %4, align 1, !dbg !5021
  br label %18, !dbg !5022

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5023
  call void @llvm.dbg.value(metadata i8* %13, metadata !5011, metadata !DIExpression()), !dbg !5012
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5024
  call void @llvm.dbg.value(metadata i8* %14, metadata !5011, metadata !DIExpression()), !dbg !5012
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5025
  call void @llvm.dbg.value(metadata i8* %15, metadata !5011, metadata !DIExpression()), !dbg !5012
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5026
  call void @llvm.dbg.value(metadata i8* %16, metadata !5011, metadata !DIExpression()), !dbg !5012
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5027
  call void @llvm.dbg.value(metadata i8* %17, metadata !5011, metadata !DIExpression()), !dbg !5012
  br label %18, !dbg !5028

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5012
  ret i8* %19, !dbg !5029
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5030 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5034, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata i8* %1, metadata !5035, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata i8* %2, metadata !5036, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata i8* %3, metadata !5037, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata i32 0, metadata !5038, metadata !DIExpression()), !dbg !5041
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5042

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5043
  call void @llvm.dbg.value(metadata i32 %9, metadata !5038, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.value(metadata i8* %8, metadata !5036, metadata !DIExpression()), !dbg !5041
  %10 = icmp ult i8* %8, %3, !dbg !5044
  br i1 %10, label %11, label %13, !dbg !5045

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5046
  br label %17, !dbg !5045

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5047

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5048
  %16 = icmp eq i8 %15, 0, !dbg !5047
  br i1 %16, label %24, label %17, !dbg !5042

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5046
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %19, metadata !5036, metadata !DIExpression()), !dbg !5041
  %20 = zext i8 %18 to i32, !dbg !5050
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %21, metadata !5039, metadata !DIExpression()), !dbg !5052
  %22 = icmp slt i32 %21, 0, !dbg !5053
  %23 = add i32 %9, 1, !dbg !5055
  call void @llvm.dbg.value(metadata i32 undef, metadata !5038, metadata !DIExpression()), !dbg !5041
  br i1 %22, label %24, label %7, !llvm.loop !5056

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5041
  ret i32 %25, !dbg !5058
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5059 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5063, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5064, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8* %2, metadata !5065, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8* %3, metadata !5066, metadata !DIExpression()), !dbg !5073
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5074
  %6 = load i8, i8* %5, align 1, !dbg !5074
  %7 = zext i8 %6 to i32, !dbg !5075
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5076
  %9 = icmp eq i32 %8, 0, !dbg !5076
  call void @llvm.dbg.value(metadata i1 %9, metadata !5067, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5073
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5077
  call void @llvm.dbg.value(metadata i32 %10, metadata !5068, metadata !DIExpression()), !dbg !5073
  %11 = ptrtoint i8* %3 to i32, !dbg !5078
  %12 = ptrtoint i8* %2 to i32, !dbg !5078
  %13 = sub i32 %11, %12, !dbg !5078
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5079
  call void @llvm.dbg.value(metadata i8* %14, metadata !5070, metadata !DIExpression()), !dbg !5073
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5080

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5073
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5063, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.value(metadata i8* %18, metadata !5070, metadata !DIExpression()), !dbg !5073
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5081
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %25, metadata !5071, metadata !DIExpression()), !dbg !5083
  %26 = icmp ult i32 %25, 10, !dbg !5084
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5085
  %28 = add i32 %27, %25, !dbg !5083
  %29 = trunc i32 %28 to i8, !dbg !5085
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5086
  call void @llvm.dbg.value(metadata i8* %30, metadata !5070, metadata !DIExpression()), !dbg !5073
  store i8 %29, i8* %30, align 1, !dbg !5087
  call void @llvm.dbg.value(metadata i64 %22, metadata !5063, metadata !DIExpression()), !dbg !5073
  %31 = icmp uge i64 %19, %15, !dbg !5088
  %32 = icmp ugt i8* %30, %2, !dbg !5089
  %33 = and i1 %31, %32, !dbg !5089
  br i1 %33, label %17, label %34, !dbg !5090, !llvm.loop !5091

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5093
  %36 = load i24, i24* %35, align 4, !dbg !5093
  %37 = and i24 %36, 32, !dbg !5093
  %38 = icmp eq i24 %37, 0, !dbg !5093
  br i1 %38, label %44, label %39, !dbg !5095

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5096

40:                                               ; preds = %39
  br label %41, !dbg !5098

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5102
  store i24 %43, i24* %35, align 4, !dbg !5102
  br label %44, !dbg !5103

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5104 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5110, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i8* %1, metadata !5111, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.value(metadata i32 %2, metadata !5112, metadata !DIExpression()), !dbg !5113
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5114
  %5 = load i24, i24* %4, align 4, !dbg !5114
  %6 = lshr i24 %5, 11, !dbg !5114
  %7 = and i24 %6, 15, !dbg !5114
  %8 = zext i24 %7 to i32, !dbg !5114
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5115

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5116
  store i32 %2, i32* %10, align 4, !dbg !5118
  br label %28, !dbg !5119

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5120
  store i8 %12, i8* %1, align 1, !dbg !5121
  br label %28, !dbg !5122

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5123
  %15 = bitcast i8* %1 to i16*, !dbg !5124
  store i16 %14, i16* %15, align 2, !dbg !5125
  br label %28, !dbg !5126

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5127
  store i32 %2, i32* %17, align 4, !dbg !5128
  br label %28, !dbg !5129

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5130
  %20 = bitcast i8* %1 to i64*, !dbg !5131
  store i64 %19, i64* %20, align 8, !dbg !5132
  br label %28, !dbg !5133

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5134
  %23 = bitcast i8* %1 to i64*, !dbg !5135
  store i64 %22, i64* %23, align 8, !dbg !5136
  br label %28, !dbg !5137

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5138
  store i32 %2, i32* %25, align 4, !dbg !5139
  br label %28, !dbg !5140

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5141
  store i32 %2, i32* %27, align 4, !dbg !5142
  br label %28, !dbg !5143

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5144
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5148, metadata !DIExpression()), !dbg !5149
  %2 = add i32 %0, -65, !dbg !5150
  %3 = icmp ult i32 %2, 26, !dbg !5151
  %4 = zext i1 %3 to i32, !dbg !5151
  ret i32 %4, !dbg !5152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5153 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5157, metadata !DIExpression()), !dbg !5158
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5159

2:                                                ; preds = %1
  br label %4, !dbg !5160

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5162

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5163
  ret i32 %5, !dbg !5164
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5165 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5167, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %1, metadata !5168, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8 1, metadata !5169, metadata !DIExpression()), !dbg !5170
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5171

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5169, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %5, metadata !5168, metadata !DIExpression()), !dbg !5170
  %6 = load i8, i8* %5, align 1, !dbg !5172
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5174

7:                                                ; preds = %4
  br label %11, !dbg !5175

8:                                                ; preds = %4
  br label %11, !dbg !5177

9:                                                ; preds = %4
  br label %11, !dbg !5178

10:                                               ; preds = %4
  br label %11, !dbg !5179

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5180
  %14 = or i24 %13, %12, !dbg !5180
  store i24 %14, i24* %3, align 4, !dbg !5180
  call void @llvm.dbg.value(metadata i8 poison, metadata !5169, metadata !DIExpression()), !dbg !5170
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5168, metadata !DIExpression()), !dbg !5170
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5169, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %15, metadata !5168, metadata !DIExpression()), !dbg !5170
  %17 = load i24, i24* %3, align 4, !dbg !5181
  %18 = and i24 %17, 68, !dbg !5183
  %19 = icmp eq i24 %18, 68, !dbg !5183
  br i1 %19, label %20, label %22, !dbg !5183

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5184
  store i24 %21, i24* %3, align 4, !dbg !5184
  br label %22, !dbg !5186

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5187
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5188 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5190, metadata !DIExpression()), !dbg !5194
  call void @llvm.dbg.value(metadata i8* %1, metadata !5191, metadata !DIExpression()), !dbg !5194
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5195
  %5 = load i24, i24* %4, align 4, !dbg !5196
  %6 = or i24 %5, 128, !dbg !5196
  store i24 %6, i24* %4, align 4, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %1, metadata !5191, metadata !DIExpression()), !dbg !5194
  %7 = load i8, i8* %1, align 1, !dbg !5197
  %8 = icmp eq i8 %7, 42, !dbg !5199
  br i1 %8, label %9, label %12, !dbg !5200

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5201
  store i24 %10, i24* %4, align 4, !dbg !5201
  call void @llvm.dbg.value(metadata i8* %1, metadata !5191, metadata !DIExpression()), !dbg !5194
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5203
  call void @llvm.dbg.value(metadata i8* %11, metadata !5191, metadata !DIExpression()), !dbg !5194
  store i8* %11, i8** %3, align 4, !dbg !5203
  br label %29, !dbg !5204

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5192, metadata !DIExpression()), !dbg !5194
  call void @llvm.dbg.value(metadata i8** %3, metadata !5191, metadata !DIExpression(DW_OP_deref)), !dbg !5194
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5205
  call void @llvm.dbg.value(metadata i32 %13, metadata !5193, metadata !DIExpression()), !dbg !5194
  %14 = load i8*, i8** %3, align 4, !dbg !5206
  call void @llvm.dbg.value(metadata i8* %14, metadata !5191, metadata !DIExpression()), !dbg !5194
  %15 = icmp eq i8* %14, %1, !dbg !5208
  br i1 %15, label %29, label %16, !dbg !5209

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5210
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5212
  store i32 %13, i32* %18, align 4, !dbg !5213
  %19 = lshr i32 %13, 31, !dbg !5214
  %20 = lshr i24 %17, 1, !dbg !5215
  %21 = and i24 %20, 1, !dbg !5215
  %22 = zext i24 %21 to i32, !dbg !5215
  %23 = or i32 %19, %22, !dbg !5215
  %24 = trunc i32 %23 to i24, !dbg !5215
  %25 = shl nuw nsw i24 %24, 1, !dbg !5215
  %26 = and i24 %17, -131, !dbg !5215
  %27 = or i24 %26, 128, !dbg !5215
  %28 = or i24 %25, %27, !dbg !5215
  store i24 %28, i24* %4, align 4, !dbg !5215
  br label %29, !dbg !5216

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5194
  ret i8* %30, !dbg !5217
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5218 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5220, metadata !DIExpression()), !dbg !5223
  call void @llvm.dbg.value(metadata i8* %1, metadata !5221, metadata !DIExpression()), !dbg !5223
  %4 = load i8, i8* %1, align 1, !dbg !5224
  %5 = icmp eq i8 %4, 46, !dbg !5225
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5226
  %7 = load i24, i24* %6, align 4, !dbg !5227
  %8 = select i1 %5, i24 512, i24 0, !dbg !5227
  %9 = and i24 %7, -513, !dbg !5227
  %10 = or i24 %9, %8, !dbg !5227
  store i24 %10, i24* %6, align 4, !dbg !5227
  br i1 %5, label %11, label %32, !dbg !5228

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5221, metadata !DIExpression()), !dbg !5223
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5229
  call void @llvm.dbg.value(metadata i8* %12, metadata !5221, metadata !DIExpression()), !dbg !5223
  store i8* %12, i8** %3, align 4, !dbg !5229
  %13 = load i8, i8* %12, align 1, !dbg !5230
  %14 = icmp eq i8 %13, 42, !dbg !5232
  br i1 %14, label %15, label %18, !dbg !5233

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5234
  store i24 %16, i24* %6, align 4, !dbg !5234
  call void @llvm.dbg.value(metadata i8* %12, metadata !5221, metadata !DIExpression()), !dbg !5223
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5236
  call void @llvm.dbg.value(metadata i8* %17, metadata !5221, metadata !DIExpression()), !dbg !5223
  store i8* %17, i8** %3, align 4, !dbg !5236
  br label %32, !dbg !5237

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5221, metadata !DIExpression(DW_OP_deref)), !dbg !5223
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %19, metadata !5222, metadata !DIExpression()), !dbg !5223
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5239
  store i32 %19, i32* %20, align 4, !dbg !5240
  %21 = lshr i32 %19, 31, !dbg !5241
  %22 = load i24, i24* %6, align 4, !dbg !5242
  %23 = lshr i24 %22, 1, !dbg !5242
  %24 = and i24 %23, 1, !dbg !5242
  %25 = zext i24 %24 to i32, !dbg !5242
  %26 = or i32 %21, %25, !dbg !5242
  %27 = trunc i32 %26 to i24, !dbg !5242
  %28 = shl nuw nsw i24 %27, 1, !dbg !5242
  %29 = and i24 %22, -3, !dbg !5242
  %30 = or i24 %28, %29, !dbg !5242
  store i24 %30, i24* %6, align 4, !dbg !5242
  %31 = load i8*, i8** %3, align 4, !dbg !5243
  call void @llvm.dbg.value(metadata i8* %31, metadata !5221, metadata !DIExpression()), !dbg !5223
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5223
  ret i8* %33, !dbg !5244
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5245 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5247, metadata !DIExpression()), !dbg !5249
  call void @llvm.dbg.value(metadata i8* %1, metadata !5248, metadata !DIExpression()), !dbg !5249
  %3 = load i8, i8* %1, align 1, !dbg !5250
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5251

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5252
  call void @llvm.dbg.value(metadata i8* %5, metadata !5248, metadata !DIExpression()), !dbg !5249
  %6 = load i8, i8* %5, align 1, !dbg !5255
  %7 = icmp eq i8 %6, 104, !dbg !5256
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5257
  %9 = load i24, i24* %8, align 4, !dbg !5257
  %10 = and i24 %9, -30721, !dbg !5257
  br i1 %7, label %11, label %14, !dbg !5258

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5259
  store i24 %12, i24* %8, align 4, !dbg !5259
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5261
  call void @llvm.dbg.value(metadata i8* %13, metadata !5248, metadata !DIExpression()), !dbg !5249
  br label %56, !dbg !5262

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5263
  store i24 %15, i24* %8, align 4, !dbg !5263
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5265
  call void @llvm.dbg.value(metadata i8* %17, metadata !5248, metadata !DIExpression()), !dbg !5249
  %18 = load i8, i8* %17, align 1, !dbg !5267
  %19 = icmp eq i8 %18, 108, !dbg !5268
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5269
  %21 = load i24, i24* %20, align 4, !dbg !5269
  %22 = and i24 %21, -30721, !dbg !5269
  br i1 %19, label %23, label %26, !dbg !5270

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5271
  store i24 %24, i24* %20, align 4, !dbg !5271
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5273
  call void @llvm.dbg.value(metadata i8* %25, metadata !5248, metadata !DIExpression()), !dbg !5249
  br label %56, !dbg !5274

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5275
  store i24 %27, i24* %20, align 4, !dbg !5275
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5277
  %30 = load i24, i24* %29, align 4, !dbg !5278
  %31 = and i24 %30, -30721, !dbg !5278
  %32 = or i24 %31, 10240, !dbg !5278
  store i24 %32, i24* %29, align 4, !dbg !5278
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5279
  call void @llvm.dbg.value(metadata i8* %33, metadata !5248, metadata !DIExpression()), !dbg !5249
  br label %56, !dbg !5280

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5281
  %36 = load i24, i24* %35, align 4, !dbg !5282
  %37 = and i24 %36, -30721, !dbg !5282
  %38 = or i24 %37, 12288, !dbg !5282
  store i24 %38, i24* %35, align 4, !dbg !5282
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %39, metadata !5248, metadata !DIExpression()), !dbg !5249
  br label %56, !dbg !5284

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5285
  %42 = load i24, i24* %41, align 4, !dbg !5286
  %43 = and i24 %42, -30721, !dbg !5286
  %44 = or i24 %43, 14336, !dbg !5286
  store i24 %44, i24* %41, align 4, !dbg !5286
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5287
  call void @llvm.dbg.value(metadata i8* %45, metadata !5248, metadata !DIExpression()), !dbg !5249
  br label %56, !dbg !5288

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5289
  %48 = load i24, i24* %47, align 4, !dbg !5290
  %49 = and i24 %48, -30723, !dbg !5290
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5291
  call void @llvm.dbg.value(metadata i8* %50, metadata !5248, metadata !DIExpression()), !dbg !5249
  %51 = or i24 %49, 16386, !dbg !5292
  store i24 %51, i24* %47, align 4, !dbg !5292
  br label %56, !dbg !5293

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5294
  %54 = load i24, i24* %53, align 4, !dbg !5295
  %55 = and i24 %54, -30721, !dbg !5295
  store i24 %55, i24* %53, align 4, !dbg !5295
  br label %56, !dbg !5296

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5248, metadata !DIExpression()), !dbg !5249
  ret i8* %57, !dbg !5297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5298 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5300, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i8* %1, metadata !5301, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i8 0, metadata !5302, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i8* %1, metadata !5301, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5305
  %3 = load i8, i8* %1, align 1, !dbg !5306
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5307
  store i8 %3, i8* %4, align 1, !dbg !5308
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5309

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5310

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5311
  %9 = load i24, i24* %8, align 4, !dbg !5311
  %10 = and i24 %9, -458753, !dbg !5311
  %11 = or i24 %10, %7, !dbg !5311
  call void @llvm.dbg.label(metadata !5303), !dbg !5312
  %12 = and i24 %9, 30720, !dbg !5313
  %13 = icmp eq i24 %12, 16384, !dbg !5313
  %14 = zext i1 %13 to i24, !dbg !5315
  %15 = or i24 %11, %14, !dbg !5315
  %16 = icmp eq i8 %3, 99, !dbg !5316
  br i1 %16, label %17, label %43, !dbg !5318

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5319
  %19 = icmp ne i24 %18, 0, !dbg !5319
  call void @llvm.dbg.value(metadata i1 %19, metadata !5302, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5305
  br label %43, !dbg !5321

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5322
  %22 = load i24, i24* %21, align 4, !dbg !5323
  %23 = and i24 %22, -458753, !dbg !5323
  %24 = or i24 %23, 262144, !dbg !5323
  call void @llvm.dbg.value(metadata i8 1, metadata !5302, metadata !DIExpression()), !dbg !5305
  br label %43, !dbg !5324

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5327
  %27 = load i24, i24* %26, align 4, !dbg !5328
  %28 = and i24 %27, -458753, !dbg !5328
  %29 = or i24 %28, 196608, !dbg !5328
  %30 = and i24 %27, 30720, !dbg !5329
  %31 = icmp eq i24 %30, 16384, !dbg !5329
  br label %43, !dbg !5331

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5332
  %34 = load i24, i24* %33, align 4, !dbg !5333
  %35 = and i24 %34, -458753, !dbg !5333
  %36 = or i24 %35, 196608, !dbg !5333
  %37 = and i24 %34, 30720, !dbg !5334
  %38 = icmp ne i24 %37, 0, !dbg !5334
  br label %43, !dbg !5336

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5337
  %41 = load i24, i24* %40, align 4, !dbg !5338
  %42 = or i24 %41, 1, !dbg !5338
  br label %43, !dbg !5339

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5340
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5341
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5342
  call void @llvm.dbg.value(metadata i8* %48, metadata !5301, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i8 poison, metadata !5302, metadata !DIExpression()), !dbg !5305
  %49 = lshr i24 %44, 1, !dbg !5340
  %50 = and i24 %49, 1, !dbg !5340
  %51 = zext i24 %50 to i32, !dbg !5340
  %52 = or i32 %51, %47, !dbg !5340
  %53 = trunc i32 %52 to i24, !dbg !5340
  %54 = shl nuw nsw i24 %53, 1, !dbg !5340
  %55 = and i24 %44, -3, !dbg !5340
  %56 = or i24 %54, %55, !dbg !5340
  store i24 %56, i24* %46, align 4, !dbg !5340
  ret i8* %48, !dbg !5343
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5344 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5348, metadata !DIExpression()), !dbg !5351
  %2 = load i8*, i8** %0, align 4, !dbg !5352
  call void @llvm.dbg.value(metadata i8* %2, metadata !5349, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata i32 0, metadata !5350, metadata !DIExpression()), !dbg !5351
  %3 = load i8, i8* %2, align 1, !dbg !5353
  %4 = zext i8 %3 to i32, !dbg !5354
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5355
  %6 = icmp eq i32 %5, 0, !dbg !5356
  br i1 %6, label %19, label %7, !dbg !5356

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5350, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.value(metadata i8* %10, metadata !5349, metadata !DIExpression()), !dbg !5351
  %11 = mul i32 %9, 10, !dbg !5357
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5359
  call void @llvm.dbg.value(metadata i8* %12, metadata !5349, metadata !DIExpression()), !dbg !5351
  %13 = add i32 %11, -48, !dbg !5360
  %14 = add i32 %13, %8, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %14, metadata !5350, metadata !DIExpression()), !dbg !5351
  %15 = load i8, i8* %12, align 1, !dbg !5353
  %16 = zext i8 %15 to i32, !dbg !5354
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5355
  %18 = icmp eq i32 %17, 0, !dbg !5356
  br i1 %18, label %19, label %7, !dbg !5356, !llvm.loop !5362

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5351
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5351
  store i8* %20, i8** %0, align 4, !dbg !5364
  ret i32 %21, !dbg !5365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5368, metadata !DIExpression()), !dbg !5369
  %2 = add i32 %0, -48, !dbg !5370
  %3 = icmp ult i32 %2, 10, !dbg !5371
  %4 = zext i1 %3 to i32, !dbg !5371
  ret i32 %4, !dbg !5372
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5373 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5378, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.value(metadata i32 %1, metadata !5379, metadata !DIExpression()), !dbg !5380
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5381, !srcloc !5383
  ret void, !dbg !5384
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5385 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5387, metadata !DIExpression()), !dbg !5395
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5396
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5396
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5388, metadata !DIExpression()), !dbg !5397
  call void @llvm.va_start(i8* nonnull %3), !dbg !5398
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5399
  %5 = load i32, i32* %4, align 4, !dbg !5399
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5399
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5399
  call void @llvm.va_end(i8* nonnull %3), !dbg !5400
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5401
  ret void, !dbg !5401
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5402 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #23, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #23, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #23, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #23, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #23, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #23, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #23, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #23, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #23, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #23, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #23, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5902, !srcloc !5903
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5904, !srcloc !5905
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5906, !srcloc !5907
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5908, !srcloc !5909
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5910, !srcloc !5911
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5912, !srcloc !5913
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5914, !srcloc !5915
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5916, !srcloc !5917
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5918, !srcloc !5919
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5920, !srcloc !5921
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5922, !srcloc !5923
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5924, !srcloc !5925
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5926, !srcloc !5927
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5928, !srcloc !5929
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5930, !srcloc !5931
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5932, !srcloc !5933
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5934, !srcloc !5935
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5936, !srcloc !5937
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5938, !srcloc !5939
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5940, !srcloc !5941
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5942, !srcloc !5943
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5944, !srcloc !5945
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5946, !srcloc !5947
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5948, !srcloc !5949
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5950, !srcloc !5951
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5952, !srcloc !5953
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5954, !srcloc !5955
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5956, !srcloc !5957
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5958, !srcloc !5959
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5960, !srcloc !5961
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5962, !srcloc !5963
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5964, !srcloc !5965
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5966, !srcloc !5967
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5968, !srcloc !5969
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5970, !srcloc !5971
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5972, !srcloc !5973
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5974, !srcloc !5975
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5976, !srcloc !5977
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5978, !srcloc !5979
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5980, !srcloc !5981
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5982, !srcloc !5983
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5984, !srcloc !5985
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5986, !srcloc !5987
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5988, !srcloc !5989
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5990, !srcloc !5991
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5992, !srcloc !5993
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5994, !srcloc !5995
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5996, !srcloc !5997
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5998, !srcloc !5999
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6000, !srcloc !6001
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6002, !srcloc !6003
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6004, !srcloc !6005
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6006, !srcloc !6007
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6008, !srcloc !6009
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6010, !srcloc !6011
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6012, !srcloc !6013
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6014, !srcloc !6015
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6016, !srcloc !6017
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6018, !srcloc !6019
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6020, !srcloc !6021
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6022, !srcloc !6023
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6024, !srcloc !6025
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6026, !srcloc !6027
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6028, !srcloc !6029
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6030, !srcloc !6031
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6032, !srcloc !6033
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6034, !srcloc !6035
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6036, !srcloc !6037
  ret void, !dbg !6038
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6039 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6041, metadata !DIExpression()), !dbg !6043
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6044, !srcloc !6053
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6044
  call void @llvm.dbg.value(metadata i32 %3, metadata !6050, metadata !DIExpression()) #23, !dbg !6054
  call void @llvm.dbg.value(metadata i32 undef, metadata !6051, metadata !DIExpression()) #23, !dbg !6054
  call void @llvm.dbg.value(metadata i32 %3, metadata !6042, metadata !DIExpression()), !dbg !6043
  call void @llvm.dbg.value(metadata i32 %3, metadata !6055, metadata !DIExpression()) #23, !dbg !6060
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6062, !srcloc !6063
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !6064
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !6065
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #24, !dbg !6066
  ret i32 0, !dbg !6067
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #14 !dbg !6068 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !6073, metadata !DIExpression()), !dbg !6075
  %2 = bitcast i32* %1 to i8*, !dbg !6076
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6076
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6074, metadata !DIExpression()), !dbg !6077
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6078
  %4 = or i32 %3, 268435456, !dbg !6078
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6078
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !6079
  %6 = and i32 %5, 268435456, !dbg !6079
  store volatile i32 %6, i32* %1, align 4, !dbg !6080
  %7 = load volatile i32, i32* %1, align 4, !dbg !6081
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6082
  ret void, !dbg !6082
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #15 !dbg !6083 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !6086, metadata !DIExpression()), !dbg !6087
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6088
  %2 = and i32 %1, -6145, !dbg !6088
  %3 = or i32 %2, 2048, !dbg !6088
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !6088
  ret void, !dbg !6089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6090 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6092, metadata !DIExpression()), !dbg !6093
  ret i32 0, !dbg !6094
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6095 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6098, metadata !DIExpression()), !dbg !6106
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6107
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6107
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6099, metadata !DIExpression()), !dbg !6108
  call void @llvm.va_start(i8* nonnull %3), !dbg !6109
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6110
  %5 = load i32, i32* %4, align 4, !dbg !6110
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6110
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6110
  call void @llvm.va_end(i8* nonnull %3), !dbg !6111
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6112
  ret void, !dbg !6112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6113 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6118, metadata !DIExpression()), !dbg !6119
  call void @llvm.dbg.value(metadata i8* %0, metadata !6117, metadata !DIExpression()), !dbg !6119
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6120
  ret void, !dbg !6121
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6122 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6126, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8* %1, metadata !6127, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i32 %2, metadata !6128, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8* %1, metadata !6129, metadata !DIExpression()), !dbg !6130
  %4 = icmp eq i32 %2, 0, !dbg !6131
  br i1 %4, label %14, label %5, !dbg !6132

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6130
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6132

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6129, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i32 %10, metadata !6128, metadata !DIExpression()), !dbg !6130
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i32 noundef %7) #25, !dbg !6133
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6135
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6136
  call void @llvm.dbg.value(metadata i32 %11, metadata !6128, metadata !DIExpression()), !dbg !6130
  call void @llvm.dbg.value(metadata i8* %12, metadata !6129, metadata !DIExpression()), !dbg !6130
  br i1 %13, label %14, label %8, !dbg !6136, !llvm.loop !6137

14:                                               ; preds = %8, %3
  ret void, !dbg !6139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !6140 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6145, metadata !DIExpression()), !dbg !6146
  %2 = add i32 %0, -1, !dbg !6147
  %3 = icmp ult i32 %2, 4, !dbg !6147
  %4 = shl i32 %2, 3, !dbg !6147
  %5 = lshr i32 1145657157, %4, !dbg !6147
  %6 = trunc i32 %5 to i8, !dbg !6147
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6147
  ret i8 %7, !dbg !6148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6149 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6153, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 %1, metadata !6154, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.value(metadata i32 0, metadata !6155, metadata !DIExpression()), !dbg !6165
  br label %4, !dbg !6166

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.36, i32 0, i32 0)) #25, !dbg !6167
  call void @llvm.dbg.value(metadata i32 0, metadata !6157, metadata !DIExpression()), !dbg !6168
  br label %16, !dbg !6169

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6155, metadata !DIExpression()), !dbg !6165
  %6 = icmp ult i32 %5, %1, !dbg !6170
  br i1 %6, label %7, label %11, !dbg !6174

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6175
  %9 = load i8, i8* %8, align 1, !dbg !6175
  %10 = zext i8 %9 to i32, !dbg !6177
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.37, i32 0, i32 0), i32 noundef %10) #25, !dbg !6178
  br label %12, !dbg !6179

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.38, i32 0, i32 0)) #25, !dbg !6180
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6182
  call void @llvm.dbg.value(metadata i32 %13, metadata !6155, metadata !DIExpression()), !dbg !6165
  %14 = icmp eq i32 %13, 8, !dbg !6183
  br i1 %14, label %3, label %4, !dbg !6166, !llvm.loop !6184

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.39, i32 0, i32 0)) #25, !dbg !6186
  ret void, !dbg !6187

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6157, metadata !DIExpression()), !dbg !6168
  %18 = icmp ult i32 %17, %1, !dbg !6188
  br i1 %18, label %19, label %26, !dbg !6189

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6190
  %21 = load i8, i8* %20, align 1, !dbg !6190
  call void @llvm.dbg.value(metadata i8 %21, metadata !6159, metadata !DIExpression()), !dbg !6191
  %22 = zext i8 %21 to i32, !dbg !6192
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6193
  %24 = icmp eq i32 %23, 0, !dbg !6194
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6193
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.40, i32 0, i32 0), i32 noundef %25) #25, !dbg !6195
  br label %27, !dbg !6196

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.41, i32 0, i32 0)) #25, !dbg !6197
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6199
  call void @llvm.dbg.value(metadata i32 %28, metadata !6157, metadata !DIExpression()), !dbg !6168
  %29 = icmp eq i32 %28, 8, !dbg !6200
  br i1 %29, label %15, label %16, !dbg !6169, !llvm.loop !6201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6205, metadata !DIExpression()), !dbg !6206
  %2 = add i32 %0, -32, !dbg !6207
  %3 = icmp ult i32 %2, 95, !dbg !6207
  %4 = zext i1 %3 to i32, !dbg !6207
  ret i32 %4, !dbg !6208
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6258, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6259, metadata !DIExpression()), !dbg !6260
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6261
  br i1 %3, label %5, label %4, !dbg !6263

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6264
  br label %5, !dbg !6266

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6267
  ret void, !dbg !6268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6269 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6273, metadata !DIExpression()), !dbg !6274
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6275
  %3 = load i32, i32* %2, align 4, !dbg !6275
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6275
  %5 = load i32, i32* %4, align 4, !dbg !6275
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6275
  %7 = load i32, i32* %6, align 4, !dbg !6275
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.42, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6275
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6280
  %9 = load i32, i32* %8, align 4, !dbg !6280
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6280
  %11 = load i32, i32* %10, align 4, !dbg !6280
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6280
  %13 = load i32, i32* %12, align 4, !dbg !6280
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.43, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6280
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6285
  %15 = load i32, i32* %14, align 4, !dbg !6285
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6285
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6290
  %17 = load i32, i32* %16, align 4, !dbg !6290
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.45, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6290
  ret void, !dbg !6295
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6296 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6313, metadata !DIExpression()), !dbg !6316
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6314, metadata !DIExpression()), !dbg !6316
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6317
  %4 = load i32, i32* %3, align 4, !dbg !6317
  call void @llvm.dbg.value(metadata i32 %4, metadata !6315, metadata !DIExpression()), !dbg !6316
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6318
  ret void, !dbg !6319
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6320 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6324, metadata !DIExpression()), !dbg !6327
  call void @llvm.dbg.value(metadata i8* %0, metadata !6325, metadata !DIExpression()), !dbg !6327
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6328
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6328
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6326, metadata !DIExpression()), !dbg !6329
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6329
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6330
  %5 = bitcast i8* %4 to i32*, !dbg !6330
  %6 = load i32, i32* %5, align 4, !dbg !6330
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6331
  store i32 %6, i32* %7, align 4, !dbg !6332
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6333
  unreachable, !dbg !6334
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6335 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6338, metadata !DIExpression()), !dbg !6339
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6340
  ret void, !dbg !6341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6346, metadata !DIExpression()), !dbg !6347
  %2 = icmp sgt i32 %0, -1, !dbg !6348
  br i1 %2, label %3, label %8, !dbg !6350

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6351, !srcloc !6353
  %4 = and i32 %0, 31, !dbg !6354
  %5 = shl nuw i32 1, %4, !dbg !6355
  %6 = lshr i32 %0, 5, !dbg !6356
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6357
  store volatile i32 %5, i32* %7, align 4, !dbg !6358
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6359, !srcloc !6360
  br label %8, !dbg !6361

8:                                                ; preds = %3, %1
  ret void, !dbg !6362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6365, metadata !DIExpression()), !dbg !6366
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6367
  ret void, !dbg !6368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6371, metadata !DIExpression()), !dbg !6372
  %2 = icmp sgt i32 %0, -1, !dbg !6373
  br i1 %2, label %3, label %8, !dbg !6375

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6376
  %5 = shl nuw i32 1, %4, !dbg !6378
  %6 = lshr i32 %0, 5, !dbg !6379
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6380
  store volatile i32 %5, i32* %7, align 4, !dbg !6381
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6382, !srcloc !6386
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6387, !srcloc !6390
  br label %8, !dbg !6391

8:                                                ; preds = %3, %1
  ret void, !dbg !6392
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6393 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6397, metadata !DIExpression()), !dbg !6398
  %2 = lshr i32 %0, 5, !dbg !6399
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6400
  %4 = load volatile i32, i32* %3, align 4, !dbg !6400
  %5 = and i32 %0, 31, !dbg !6401
  %6 = shl nuw i32 1, %5, !dbg !6401
  %7 = and i32 %4, %6, !dbg !6402
  ret i32 %7, !dbg !6403
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6408, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.value(metadata i32 %1, metadata !6409, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.value(metadata i32 %2, metadata !6410, metadata !DIExpression()), !dbg !6411
  %4 = add i32 %1, 1, !dbg !6412
  call void @llvm.dbg.value(metadata i32 %4, metadata !6409, metadata !DIExpression()), !dbg !6411
  %5 = icmp ult i32 %4, 16, !dbg !6415
  br i1 %5, label %7, label %6, !dbg !6418

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.46, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6419
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.49, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6419
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.48, i32 0, i32 0), i32 noundef 94) #25, !dbg !6419
  unreachable, !dbg !6419

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6421
  ret void, !dbg !6422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6427, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.value(metadata i32 %1, metadata !6428, metadata !DIExpression()), !dbg !6429
  %3 = trunc i32 %1 to i8, !dbg !6430
  %4 = shl i8 %3, 4, !dbg !6430
  %5 = and i32 %0, 15, !dbg !6432
  %6 = add nsw i32 %5, -4, !dbg !6432
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6432
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6432
  %9 = icmp slt i32 %0, 0, !dbg !6432
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6432
  store volatile i8 %4, i8* %10, align 1, !dbg !6430
  ret void, !dbg !6433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6434 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6436, metadata !DIExpression()), !dbg !6437
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6438
  ret void, !dbg !6439
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6440 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6442
  tail call void @z_arm_int_exit() #25, !dbg !6443
  ret void, !dbg !6444
}

; Function Attrs: optsize
declare !dbg !6445 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6446 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6448 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6450
  tail call void @z_bss_zero() #25, !dbg !6451
  tail call void @z_data_copy() #25, !dbg !6452
  tail call void @z_arm_interrupt_init() #25, !dbg !6453
  tail call void @z_cstart() #27, !dbg !6454
  unreachable, !dbg !6454
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6455 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6456
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6457, !srcloc !6460
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6461, !srcloc !6464
  ret void, !dbg !6465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6469, metadata !DIExpression()), !dbg !6470
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6471
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6472
  store i32 %0, i32* %3, align 4, !dbg !6473
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6474
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6475
  store i32 %4, i32* %5, align 4, !dbg !6476
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6477
  %7 = or i32 %6, 268435456, !dbg !6477
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6477
  call void @llvm.dbg.value(metadata i32 0, metadata !6478, metadata !DIExpression()) #23, !dbg !6481
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6483, !srcloc !6484
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6485
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6486
  %10 = load i32, i32* %9, align 4, !dbg !6486
  ret i32 %10, !dbg !6487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6488 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6601, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6602, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8* %2, metadata !6603, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6604, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8* %4, metadata !6605, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8* %5, metadata !6606, metadata !DIExpression()), !dbg !6609
  call void @llvm.dbg.value(metadata i8* %6, metadata !6607, metadata !DIExpression()), !dbg !6609
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6610
  call void @llvm.dbg.value(metadata i8* %8, metadata !6608, metadata !DIExpression()), !dbg !6609
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6611
  %10 = bitcast i8* %9 to i32*, !dbg !6611
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6612
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6613
  %12 = bitcast i8* %8 to i32*, !dbg !6614
  store i32 %11, i32* %12, align 4, !dbg !6615
  %13 = ptrtoint i8* %4 to i32, !dbg !6616
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6617
  %15 = bitcast i8* %14 to i32*, !dbg !6617
  store i32 %13, i32* %15, align 4, !dbg !6618
  %16 = ptrtoint i8* %5 to i32, !dbg !6619
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6620
  %18 = bitcast i8* %17 to i32*, !dbg !6620
  store i32 %16, i32* %18, align 4, !dbg !6621
  %19 = ptrtoint i8* %6 to i32, !dbg !6622
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6623
  %21 = bitcast i8* %20 to i32*, !dbg !6623
  store i32 %19, i32* %21, align 4, !dbg !6624
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6625
  %23 = bitcast i8* %22 to i32*, !dbg !6625
  store i32 16777216, i32* %23, align 4, !dbg !6626
  %24 = ptrtoint i8* %8 to i32, !dbg !6627
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6628
  store i32 %24, i32* %25, align 8, !dbg !6629
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6630
  store i32 0, i32* %26, align 4, !dbg !6631
  ret void, !dbg !6632
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6638, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i32 %1, metadata !6639, metadata !DIExpression()), !dbg !6644
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6645
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6640, metadata !DIExpression()), !dbg !6644
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6646
  br i1 %4, label %19, label %5, !dbg !6648

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6643, metadata !DIExpression()), !dbg !6644
  %6 = icmp eq i32 %0, -22, !dbg !6649
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6649
  %8 = load i32, i32* %7, align 4, !dbg !6649
  br i1 %6, label %16, label %9, !dbg !6651

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6649
  %11 = icmp ule i32 %10, %0, !dbg !6649
  %12 = icmp ugt i32 %8, %0, !dbg !6649
  %13 = and i1 %12, %11, !dbg !6649
  %14 = icmp ugt i32 %8, %1, !dbg !6649
  %15 = and i1 %14, %13, !dbg !6649
  br i1 %15, label %18, label %19, !dbg !6649

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6649
  br i1 %17, label %18, label %19, !dbg !6651

18:                                               ; preds = %9, %16
  br label %19, !dbg !6652

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6644
  ret i32 %20, !dbg !6654
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6655 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6659, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i8* %1, metadata !6660, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6661, metadata !DIExpression()), !dbg !6662
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6663
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6664
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6665, !srcloc !6666
  unreachable, !dbg !6667
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6668 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6686, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 %1, metadata !6687, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 %2, metadata !6688, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6689, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i32 0, metadata !6690, metadata !DIExpression()), !dbg !6696
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6697
  call void @llvm.dbg.value(metadata i32 %8, metadata !6691, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6696
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6698
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6698
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6699
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6699
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6695, metadata !DIExpression()), !dbg !6700
  call void @llvm.dbg.value(metadata i32 0, metadata !6701, metadata !DIExpression()) #23, !dbg !6704
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6706, !srcloc !6707
  call void @llvm.dbg.value(metadata i8* %6, metadata !6693, metadata !DIExpression(DW_OP_deref)), !dbg !6696
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6708
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6694, metadata !DIExpression()), !dbg !6696
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6709
  br i1 %11, label %12, label %13, !dbg !6712

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.53, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6713
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.55, i32 0, i32 0)) #25, !dbg !6713
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6713
  unreachable, !dbg !6713

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6715
  call void @llvm.dbg.value(metadata i32 %14, metadata !6691, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.value(metadata i8* %5, metadata !6692, metadata !DIExpression(DW_OP_deref)), !dbg !6696
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6716
  call void @llvm.dbg.value(metadata i32 %15, metadata !6690, metadata !DIExpression()), !dbg !6696
  %16 = load i8, i8* %5, align 1, !dbg !6717, !range !6719
  call void @llvm.dbg.value(metadata i8 %16, metadata !6692, metadata !DIExpression()), !dbg !6696
  %17 = icmp eq i8 %16, 0, !dbg !6717
  br i1 %17, label %18, label %35, !dbg !6720

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6721
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6722
  %21 = load i8, i8* %6, align 1, !dbg !6723, !range !6719
  call void @llvm.dbg.value(metadata i8 %21, metadata !6693, metadata !DIExpression()), !dbg !6696
  %22 = icmp eq i8 %21, 0, !dbg !6723
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6725
  %24 = load i32, i32* %23, align 4, !dbg !6725
  br i1 %22, label %30, label %25, !dbg !6726

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6727
  %27 = icmp eq i32 %26, 0, !dbg !6730
  br i1 %27, label %28, label %34, !dbg !6731

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6732
  br label %32, !dbg !6734

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6735
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6725
  br label %34, !dbg !6737

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6737
  br label %35, !dbg !6738

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6738
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6738
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6738
  ret void, !dbg !6738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6744, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.value(metadata i32 %1, metadata !6745, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.value(metadata i32 %2, metadata !6746, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.value(metadata i8* %3, metadata !6747, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.value(metadata i8 0, metadata !6748, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6749, metadata !DIExpression()), !dbg !6750
  store i8 0, i8* %3, align 1, !dbg !6751
  %5 = icmp ugt i32 %2, -16777217, !dbg !6752
  br i1 %5, label %6, label %17, !dbg !6754

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6755
  %8 = icmp eq i32 %7, 8, !dbg !6755
  br i1 %8, label %9, label %10, !dbg !6755

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.66, i32 0, i32 0), i32 noundef 69) #25, !dbg !6757
  br label %17, !dbg !6763

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6764
  %12 = icmp eq i32 %11, 0, !dbg !6764
  br i1 %12, label %13, label %14, !dbg !6765

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6749, metadata !DIExpression()), !dbg !6750
  store i8 1, i8* %3, align 1, !dbg !6768
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6750
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6749, metadata !DIExpression()), !dbg !6750
  br label %17, !dbg !6771

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6750
  ret %struct.__esf* %18, !dbg !6772
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6773 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6777, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i32 %1, metadata !6778, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i8* %2, metadata !6779, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.value(metadata i32 0, metadata !6780, metadata !DIExpression()), !dbg !6781
  store i8 0, i8* %2, align 1, !dbg !6782
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6783

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6784
  call void @llvm.dbg.value(metadata i32 %5, metadata !6780, metadata !DIExpression()), !dbg !6781
  br label %12, !dbg !6786

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6787
  call void @llvm.dbg.value(metadata i32 %7, metadata !6780, metadata !DIExpression()), !dbg !6781
  br label %12, !dbg !6788

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6789
  call void @llvm.dbg.value(metadata i32 0, metadata !6780, metadata !DIExpression()), !dbg !6781
  br label %12, !dbg !6790

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6791
  call void @llvm.dbg.value(metadata i32 0, metadata !6780, metadata !DIExpression()), !dbg !6781
  br label %12, !dbg !6792

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6793
  br label %12, !dbg !6794

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6795
  br label %12, !dbg !6796

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6781
  call void @llvm.dbg.value(metadata i32 %13, metadata !6780, metadata !DIExpression()), !dbg !6781
  ret i32 %13, !dbg !6797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6798 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6802, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i8* %1, metadata !6803, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i32 0, metadata !6804, metadata !DIExpression()), !dbg !6805
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6806
  store i8 0, i8* %1, align 1, !dbg !6811
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6812
  %4 = and i32 %3, 2, !dbg !6814
  %5 = icmp eq i32 %4, 0, !dbg !6815
  br i1 %5, label %7, label %6, !dbg !6816

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.59, i32 0, i32 0), i32 noundef 69) #25, !dbg !6817
  br label %38, !dbg !6823

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6824
  %9 = icmp sgt i32 %8, -1, !dbg !6826
  br i1 %9, label %11, label %10, !dbg !6827

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.60, i32 0, i32 0), i32 noundef 69) #25, !dbg !6828
  br label %38, !dbg !6834

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6835
  %13 = and i32 %12, 1073741824, !dbg !6837
  %14 = icmp eq i32 %13, 0, !dbg !6838
  br i1 %14, label %37, label %15, !dbg !6839

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.61, i32 0, i32 0), i32 noundef 69) #25, !dbg !6840
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6846
  br i1 %16, label %17, label %21, !dbg !6848

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6849
  %19 = load i32, i32* %18, align 4, !dbg !6849
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.62, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6849
  %20 = load i32, i32* %18, align 4, !dbg !6855
  call void @llvm.dbg.value(metadata i32 %20, metadata !6804, metadata !DIExpression()), !dbg !6805
  br label %38, !dbg !6856

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6857
  %23 = and i32 %22, 255, !dbg !6859
  %24 = icmp eq i32 %23, 0, !dbg !6860
  br i1 %24, label %27, label %25, !dbg !6861

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6862
  call void @llvm.dbg.value(metadata i32 %26, metadata !6804, metadata !DIExpression()), !dbg !6805
  br label %38, !dbg !6864

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6865
  %29 = and i32 %28, 65280, !dbg !6867
  %30 = icmp eq i32 %29, 0, !dbg !6868
  br i1 %30, label %32, label %31, !dbg !6869

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6870
  call void @llvm.dbg.value(metadata i32 0, metadata !6804, metadata !DIExpression()), !dbg !6805
  br label %38, !dbg !6872

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6873
  %34 = icmp ult i32 %33, 65536, !dbg !6875
  br i1 %34, label %36, label %35, !dbg !6876

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6877
  call void @llvm.dbg.value(metadata i32 0, metadata !6804, metadata !DIExpression()), !dbg !6805
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.64, i32 0, i32 0)) #25, !dbg !6879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 755) #25, !dbg !6879
  unreachable, !dbg !6879

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6884
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.65, i32 0, i32 0)) #25, !dbg !6884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 760) #25, !dbg !6884
  unreachable, !dbg !6884

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6805
  call void @llvm.dbg.value(metadata i32 %39, metadata !6804, metadata !DIExpression()), !dbg !6805
  ret i32 %39, !dbg !6889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6890 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6892, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i32 %1, metadata !6893, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i8* %2, metadata !6894, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i32 0, metadata !6895, metadata !DIExpression()), !dbg !6905
  call void @llvm.dbg.value(metadata i32 -22, metadata !6896, metadata !DIExpression()), !dbg !6905
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !6906
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6911
  %5 = and i32 %4, 16, !dbg !6913
  %6 = icmp eq i32 %5, 0, !dbg !6914
  br i1 %6, label %8, label %7, !dbg !6915

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6916
  br label %8, !dbg !6922

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6923
  %10 = and i32 %9, 8, !dbg !6925
  %11 = icmp eq i32 %10, 0, !dbg !6926
  br i1 %11, label %13, label %12, !dbg !6927

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6928
  br label %13, !dbg !6934

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6935
  %15 = and i32 %14, 2, !dbg !6936
  %16 = icmp eq i32 %15, 0, !dbg !6937
  br i1 %16, label %27, label %17, !dbg !6938

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6939
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6944
  call void @llvm.dbg.value(metadata i32 %18, metadata !6897, metadata !DIExpression()), !dbg !6945
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6946
  %20 = and i32 %19, 128, !dbg !6948
  %21 = icmp eq i32 %20, 0, !dbg !6949
  br i1 %21, label %27, label %22, !dbg !6950

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6896, metadata !DIExpression()), !dbg !6905
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6951
  %23 = icmp eq i32 %1, 0, !dbg !6957
  br i1 %23, label %27, label %24, !dbg !6959

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6960
  %26 = and i32 %25, -129, !dbg !6960
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6960
  br label %27, !dbg !6962

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6905
  call void @llvm.dbg.value(metadata i32 %28, metadata !6896, metadata !DIExpression()), !dbg !6905
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6963
  %30 = and i32 %29, 1, !dbg !6965
  %31 = icmp eq i32 %30, 0, !dbg !6966
  br i1 %31, label %33, label %32, !dbg !6967

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6968
  br label %33, !dbg !6974

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6975
  %35 = and i32 %34, 16, !dbg !6976
  %36 = icmp eq i32 %35, 0, !dbg !6976
  br i1 %36, label %37, label %41, !dbg !6977

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6978
  %39 = and i32 %38, 2, !dbg !6979
  %40 = icmp eq i32 %39, 0, !dbg !6979
  br i1 %40, label %55, label %41, !dbg !6980

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6981
  %43 = and i32 %42, 2048, !dbg !6982
  %44 = icmp eq i32 %43, 0, !dbg !6982
  br i1 %44, label %55, label %45, !dbg !6983

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !6984
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #25, !dbg !6985
  call void @llvm.dbg.value(metadata i32 %47, metadata !6900, metadata !DIExpression()), !dbg !6986
  %48 = icmp eq i32 %47, 0, !dbg !6987
  br i1 %48, label %50, label %49, !dbg !6989

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !6990, metadata !DIExpression()) #23, !dbg !6993
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #23, !dbg !6996, !srcloc !6997
  call void @llvm.dbg.value(metadata i32 2, metadata !6895, metadata !DIExpression()), !dbg !6905
  br label %55, !dbg !6998

50:                                               ; preds = %45
  %51 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6999
  %52 = and i32 %51, 16, !dbg !6999
  %53 = icmp eq i32 %52, 0, !dbg !6999
  br i1 %53, label %55, label %54, !dbg !7003

54:                                               ; preds = %50
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7004
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #25, !dbg !7004
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.54, i32 0, i32 0), i32 noundef 343) #25, !dbg !7004
  unreachable, !dbg !7004

55:                                               ; preds = %49, %50, %41, %37
  %56 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %50 ], !dbg !6905
  call void @llvm.dbg.value(metadata i32 %56, metadata !6895, metadata !DIExpression()), !dbg !6905
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7006
  %58 = or i32 %57, 255, !dbg !7006
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7006
  store i8 0, i8* %2, align 1, !dbg !7007
  ret i32 %56, !dbg !7008
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7009 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7013, metadata !DIExpression()), !dbg !7020
  call void @llvm.dbg.value(metadata i32 %0, metadata !7014, metadata !DIExpression()), !dbg !7020
  call void @llvm.dbg.value(metadata i8* %1, metadata !7015, metadata !DIExpression()), !dbg !7020
  call void @llvm.dbg.value(metadata i32 0, metadata !7016, metadata !DIExpression()), !dbg !7020
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !7021
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7026
  %4 = and i32 %3, 4096, !dbg !7028
  %5 = icmp eq i32 %4, 0, !dbg !7028
  br i1 %5, label %7, label %6, !dbg !7029

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7030
  br label %7, !dbg !7036

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7037
  %9 = and i32 %8, 2048, !dbg !7039
  %10 = icmp eq i32 %9, 0, !dbg !7039
  br i1 %10, label %12, label %11, !dbg !7040

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7041
  br label %12, !dbg !7047

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7048
  %14 = and i32 %13, 512, !dbg !7049
  %15 = icmp eq i32 %14, 0, !dbg !7049
  br i1 %15, label %26, label %16, !dbg !7050

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7051
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7056
  call void @llvm.dbg.value(metadata i32 %17, metadata !7017, metadata !DIExpression()), !dbg !7057
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7058
  %19 = and i32 %18, 32768, !dbg !7060
  %20 = icmp eq i32 %19, 0, !dbg !7061
  br i1 %20, label %26, label %21, !dbg !7062

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7063
  %22 = icmp eq i32 %0, 0, !dbg !7069
  br i1 %22, label %26, label %23, !dbg !7071

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7072
  %25 = and i32 %24, -32769, !dbg !7072
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7072
  br label %26, !dbg !7074

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7075
  %28 = and i32 %27, 1024, !dbg !7077
  %29 = icmp eq i32 %28, 0, !dbg !7077
  br i1 %29, label %31, label %30, !dbg !7078

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !7079
  br label %31, !dbg !7085

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7086
  %33 = and i32 %32, 256, !dbg !7088
  %34 = icmp eq i32 %33, 0, !dbg !7089
  br i1 %34, label %36, label %35, !dbg !7090

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26.57, i32 0, i32 0), i32 noundef 69) #25, !dbg !7091
  br label %36, !dbg !7097

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7098
  %38 = or i32 %37, 65280, !dbg !7098
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7098
  store i8 0, i8* %1, align 1, !dbg !7099
  ret void, !dbg !7100
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7101 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7107, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata i32 0, metadata !7108, metadata !DIExpression()), !dbg !7109
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69) #25, !dbg !7110
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7115
  %2 = and i32 %1, 33554432, !dbg !7117
  %3 = icmp eq i32 %2, 0, !dbg !7118
  br i1 %3, label %5, label %4, !dbg !7119

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7120
  br label %5, !dbg !7126

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7127
  %7 = and i32 %6, 16777216, !dbg !7129
  %8 = icmp eq i32 %7, 0, !dbg !7130
  br i1 %8, label %10, label %9, !dbg !7131

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7132
  br label %10, !dbg !7138

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7139
  %12 = and i32 %11, 524288, !dbg !7141
  %13 = icmp eq i32 %12, 0, !dbg !7142
  br i1 %13, label %15, label %14, !dbg !7143

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7144
  br label %15, !dbg !7150

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7151
  %17 = and i32 %16, 262144, !dbg !7153
  %18 = icmp eq i32 %17, 0, !dbg !7154
  br i1 %18, label %20, label %19, !dbg !7155

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7156
  br label %20, !dbg !7162

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7163
  %22 = and i32 %21, 131072, !dbg !7165
  %23 = icmp eq i32 %22, 0, !dbg !7166
  br i1 %23, label %25, label %24, !dbg !7167

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7168
  br label %25, !dbg !7174

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7175
  %27 = and i32 %26, 65536, !dbg !7177
  %28 = icmp eq i32 %27, 0, !dbg !7178
  br i1 %28, label %30, label %29, !dbg !7179

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7180
  br label %30, !dbg !7186

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7187
  %32 = or i32 %31, -65536, !dbg !7187
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7187
  ret void, !dbg !7188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7189 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7193, metadata !DIExpression()), !dbg !7195
  call void @llvm.dbg.value(metadata i8* %0, metadata !7194, metadata !DIExpression()), !dbg !7195
  store i8 0, i8* %0, align 1, !dbg !7196
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7197
  ret void, !dbg !7202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7203 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7207, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.value(metadata i32 %0, metadata !7208, metadata !DIExpression()), !dbg !7209
  %2 = icmp slt i32 %0, 16, !dbg !7210
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i32 0, i32 0), !dbg !7210
  %4 = add nsw i32 %0, -16, !dbg !7210
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35.56, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7210
  ret void, !dbg !7215
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7216 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7220, metadata !DIExpression()), !dbg !7223
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7224
  %3 = load i32, i32* %2, align 4, !dbg !7224
  %4 = inttoptr i32 %3 to i16*, !dbg !7225
  call void @llvm.dbg.value(metadata i16* %4, metadata !7221, metadata !DIExpression()), !dbg !7223
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7226
  %6 = or i32 %5, 256, !dbg !7226
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7226
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7227, !srcloc !7230
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7231, !srcloc !7234
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7235
  %8 = load i16, i16* %7, align 2, !dbg !7236
  call void @llvm.dbg.value(metadata i16 %8, metadata !7222, metadata !DIExpression()), !dbg !7223
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7237
  %10 = and i32 %9, -257, !dbg !7237
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7237
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7238, !srcloc !7230
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7240, !srcloc !7234
  %11 = icmp eq i16 %8, -8446, !dbg !7242
  ret i1 %11, !dbg !7244
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7245 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7246
  %2 = or i32 %1, 16, !dbg !7246
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7246
  ret void, !dbg !7247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7248 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7251, metadata !DIExpression()), !dbg !7252
  br label %1, !dbg !7253

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7251, metadata !DIExpression()), !dbg !7252
  tail call fastcc void @__NVIC_SetPriority.69(i32 noundef %2) #24, !dbg !7255
  %3 = add nuw nsw i32 %2, 1, !dbg !7258
  call void @llvm.dbg.value(metadata i32 %3, metadata !7251, metadata !DIExpression()), !dbg !7252
  %4 = icmp eq i32 %3, 45, !dbg !7259
  br i1 %4, label %5, label %1, !dbg !7253, !llvm.loop !7260

5:                                                ; preds = %1
  ret void, !dbg !7262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.69(i32 noundef %0) unnamed_addr #15 !dbg !7263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7265, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.value(metadata i32 1, metadata !7266, metadata !DIExpression()), !dbg !7267
  %2 = and i32 %0, 15, !dbg !7268
  %3 = add nsw i32 %2, -4, !dbg !7268
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7268
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7268
  %6 = icmp slt i32 %0, 0, !dbg !7268
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7268
  store volatile i8 16, i8* %7, align 1, !dbg !7269
  ret void, !dbg !7271
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7381, metadata !DIExpression()), !dbg !7382
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7383
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7385
  br i1 %3, label %4, label %12, !dbg !7386

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7387, !srcloc !7401
  call void @llvm.dbg.value(metadata i32 %5, metadata !7392, metadata !DIExpression()) #23, !dbg !7402
  %6 = icmp eq i32 %5, 0, !dbg !7403
  br i1 %6, label %12, label %7, !dbg !7404

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7405
  %9 = or i32 %8, 268435456, !dbg !7405
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7405
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7407
  %11 = and i32 %10, -32769, !dbg !7407
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7407
  br label %12, !dbg !7408

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7409
  ret void, !dbg !7410
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7411 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7412
  ret void, !dbg !7413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !514, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i8 0, metadata !515, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32 64, metadata !517, metadata !DIExpression()), !dbg !7414
  call void @llvm.dbg.value(metadata i32 undef, metadata !516, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7414
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7415
  %3 = load i32, i32* %2, align 4, !dbg !7415
  call void @llvm.dbg.value(metadata i32 %3, metadata !516, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7414
  %4 = add i32 %3, -64, !dbg !7417
  call void @llvm.dbg.value(metadata i32 %4, metadata !516, metadata !DIExpression()), !dbg !7414
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7418
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7419
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7420
  call void @llvm.dbg.value(metadata i8 1, metadata !515, metadata !DIExpression()), !dbg !7414
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7421
  ret void, !dbg !7422
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7423 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7424
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7425, !srcloc !7428
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7429, !srcloc !7432
  ret void, !dbg !7433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7434 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7435, !srcloc !7438
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7439
  ret void, !dbg !7440
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7441 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7456, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i8 %1, metadata !7457, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 %2, metadata !7458, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.value(metadata i32 %3, metadata !7459, metadata !DIExpression()), !dbg !7460
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7461
  %6 = icmp eq i32 %5, -22, !dbg !7463
  br i1 %6, label %7, label %9, !dbg !7464

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7465
  %8 = zext i8 %1 to i32, !dbg !7465
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.81, i32 0, i32 0), i32 noundef %8) #25, !dbg !7465
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 283) #25, !dbg !7465
  unreachable, !dbg !7465

9:                                                ; preds = %4
  ret void, !dbg !7470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7471 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7476, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i8 %1, metadata !7477, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i32 undef, metadata !7478, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i32 undef, metadata !7479, metadata !DIExpression()), !dbg !7481
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7482
  call void @llvm.dbg.value(metadata i8 %3, metadata !7480, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7481
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7483
  call void @llvm.dbg.value(metadata i32 %4, metadata !7480, metadata !DIExpression()), !dbg !7481
  %5 = trunc i32 %4 to i8, !dbg !7484
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7485
  ret i32 %4, !dbg !7486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7487 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7491, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i8 %1, metadata !7492, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i8 %2, metadata !7493, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i1 %3, metadata !7494, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7497
  %5 = zext i8 %2 to i32, !dbg !7498
  call void @llvm.dbg.value(metadata i32 %5, metadata !7496, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i32 0, metadata !7495, metadata !DIExpression()), !dbg !7497
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7496, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i32 0, metadata !7495, metadata !DIExpression()), !dbg !7497
  %7 = icmp eq i8 %1, 0, !dbg !7499
  br i1 %7, label %30, label %8, !dbg !7502

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7496, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.value(metadata i32 %10, metadata !7495, metadata !DIExpression()), !dbg !7497
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7503
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7506
  %13 = load i32, i32* %12, align 4, !dbg !7506
  %14 = icmp eq i32 %13, 0, !dbg !7507
  br i1 %14, label %26, label %15, !dbg !7508

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7509

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7511
  %18 = icmp eq i32 %17, 0, !dbg !7511
  br i1 %18, label %19, label %20, !dbg !7512

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.82, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7513
  br label %30, !dbg !7519

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7520
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7521
  call void @llvm.dbg.value(metadata i32 %22, metadata !7496, metadata !DIExpression()), !dbg !7497
  %23 = icmp eq i32 %22, -22, !dbg !7522
  br i1 %23, label %30, label %24, !dbg !7524

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7525
  call void @llvm.dbg.value(metadata i32 %25, metadata !7496, metadata !DIExpression()), !dbg !7497
  br label %26, !dbg !7526

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7497
  call void @llvm.dbg.value(metadata i32 %27, metadata !7496, metadata !DIExpression()), !dbg !7497
  %28 = add nuw nsw i32 %10, 1, !dbg !7527
  call void @llvm.dbg.value(metadata i32 %28, metadata !7495, metadata !DIExpression()), !dbg !7497
  %29 = icmp eq i32 %28, %6, !dbg !7499
  br i1 %29, label %30, label %8, !dbg !7502, !llvm.loop !7528

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7497
  ret i32 %31, !dbg !7530
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #17 !dbg !7531 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7535, metadata !DIExpression()), !dbg !7537
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7538
  %3 = load i32, i32* %2, align 4, !dbg !7538
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7539, !range !7540
  %5 = icmp ult i32 %4, 2, !dbg !7539
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7541
  br i1 %7, label %8, label %15, !dbg !7541

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7542
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7543
  %11 = load i32, i32* %10, align 4, !dbg !7543
  %12 = and i32 %11, %9, !dbg !7544
  %13 = icmp eq i32 %12, 0, !dbg !7545
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7536, metadata !DIExpression()), !dbg !7537
  ret i32 %16, !dbg !7546
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7547 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7551, metadata !DIExpression()), !dbg !7554
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7552, metadata !DIExpression()), !dbg !7554
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7555
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7555
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7553, metadata !DIExpression()), !dbg !7556
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7557
  %6 = load i32, i32* %5, align 4, !dbg !7557
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7558
  store i32 %6, i32* %7, align 4, !dbg !7559
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7560
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7561
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7562
  %11 = load i32, i32* %10, align 4, !dbg !7562
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7563
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7564
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7565
  ret i32 %12, !dbg !7566
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #18 !dbg !7567 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7574, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7575, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.value(metadata i32 undef, metadata !7576, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.value(metadata i32 %2, metadata !7577, metadata !DIExpression()), !dbg !7578
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7579
  %5 = load i32, i32* %4, align 4, !dbg !7579
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7580
  %7 = or i32 %6, %5, !dbg !7581
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7582
  store i32 %7, i32* %8, align 4, !dbg !7583
  ret void, !dbg !7584
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7585 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7589, metadata !DIExpression()), !dbg !7591
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7590, metadata !DIExpression()), !dbg !7591
  %3 = zext i8 %0 to i32, !dbg !7592
  %4 = icmp ugt i8 %0, 7, !dbg !7594
  br i1 %4, label %5, label %6, !dbg !7595

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.83, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7596
  br label %7, !dbg !7602

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7603
  br label %7, !dbg !7604

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7591
  ret i32 %8, !dbg !7605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7610, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7611, metadata !DIExpression()), !dbg !7612
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7613
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7614
  %4 = load i32, i32* %3, align 4, !dbg !7614
  %5 = and i32 %4, -32, !dbg !7615
  %6 = or i32 %5, %0, !dbg !7616
  %7 = or i32 %6, 16, !dbg !7616
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7617
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7618
  %9 = load i32, i32* %8, align 4, !dbg !7618
  %10 = or i32 %9, 1, !dbg !7619
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7620
  ret void, !dbg !7621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7625, metadata !DIExpression()), !dbg !7626
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7627
  ret void, !dbg !7628
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7633, metadata !DIExpression()), !dbg !7634
  %2 = icmp ult i32 %0, 33, !dbg !7635
  br i1 %2, label %11, label %3, !dbg !7637

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7638
  br i1 %4, label %11, label %5, !dbg !7640

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7641
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7642, !range !7540
  %8 = mul nsw i32 %7, -2, !dbg !7643
  %9 = add nsw i32 %8, 62, !dbg !7643
  %10 = and i32 %9, 62, !dbg !7644
  br label %11, !dbg !7645

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7634
  ret i32 %12, !dbg !7646
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7647 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7651, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.value(metadata i8 %1, metadata !7652, metadata !DIExpression()), !dbg !7653
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7654
  %4 = icmp eq i32 %3, -22, !dbg !7656
  br i1 %4, label %5, label %7, !dbg !7657

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7658
  %6 = zext i8 %1 to i32, !dbg !7658
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.86, i32 0, i32 0), i32 noundef %6) #25, !dbg !7658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 314) #25, !dbg !7658
  unreachable, !dbg !7658

7:                                                ; preds = %2
  ret void, !dbg !7663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7664 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7668, metadata !DIExpression()), !dbg !7675
  call void @llvm.dbg.value(metadata i8 %1, metadata !7669, metadata !DIExpression()), !dbg !7675
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7676
  call void @llvm.dbg.value(metadata i8 %3, metadata !7670, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7675
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7677
  call void @llvm.dbg.value(metadata i32 %4, metadata !7670, metadata !DIExpression()), !dbg !7675
  %5 = icmp ne i32 %4, -22, !dbg !7678
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7679
  call void @llvm.dbg.value(metadata i32 %4, metadata !7671, metadata !DIExpression()), !dbg !7680
  br i1 %7, label %8, label %12, !dbg !7679

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7671, metadata !DIExpression()), !dbg !7680
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7681
  %10 = add i32 %9, 1, !dbg !7684
  call void @llvm.dbg.value(metadata i32 %10, metadata !7671, metadata !DIExpression()), !dbg !7680
  %11 = icmp eq i32 %10, 8, !dbg !7685
  br i1 %11, label %12, label %8, !dbg !7686, !llvm.loop !7687

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7693, metadata !DIExpression()), !dbg !7694
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7695
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7696
  ret void, !dbg !7697
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7698 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7703
  %2 = icmp ugt i32 %1, 8, !dbg !7705
  br i1 %2, label %3, label %4, !dbg !7706

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.79, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.87, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 341) #25, !dbg !7707
  unreachable, !dbg !7707

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7712
  call void @llvm.dbg.value(metadata i32 0, metadata !7702, metadata !DIExpression()), !dbg !7713
  %5 = icmp eq i32 %1, 0, !dbg !7714
  br i1 %5, label %13, label %6, !dbg !7717

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7717

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7702, metadata !DIExpression()), !dbg !7713
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7718
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7720
  %11 = add nuw i32 %9, 1, !dbg !7721
  call void @llvm.dbg.value(metadata i32 %11, metadata !7702, metadata !DIExpression()), !dbg !7713
  %12 = icmp eq i32 %11, %1, !dbg !7714
  br i1 %12, label %13, label %8, !dbg !7717, !llvm.loop !7722

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7724
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7725
  tail call void @arm_core_mpu_enable() #24, !dbg !7726
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7727
  %16 = and i32 %15, 65280, !dbg !7727
  %17 = icmp eq i32 %16, 2048, !dbg !7727
  br i1 %17, label %19, label %18, !dbg !7730

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.88, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7731
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.89, i32 0, i32 0)) #25, !dbg !7731
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.80, i32 0, i32 0), i32 noundef 435) #25, !dbg !7731
  unreachable, !dbg !7731

19:                                               ; preds = %13
  ret i32 0, !dbg !7733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7741, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %1, metadata !7742, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %0, metadata !7743, metadata !DIExpression()), !dbg !7744
  %3 = load i8, i8* %1, align 1, !dbg !7745
  %4 = icmp eq i8 %3, 0, !dbg !7746
  br i1 %4, label %13, label %5, !dbg !7747

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7741, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.value(metadata i8* %8, metadata !7742, metadata !DIExpression()), !dbg !7744
  store i8 %6, i8* %7, align 1, !dbg !7748
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7750
  call void @llvm.dbg.value(metadata i8* %9, metadata !7741, metadata !DIExpression()), !dbg !7744
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7751
  call void @llvm.dbg.value(metadata i8* %10, metadata !7742, metadata !DIExpression()), !dbg !7744
  %11 = load i8, i8* %10, align 1, !dbg !7745
  %12 = icmp eq i8 %11, 0, !dbg !7746
  br i1 %12, label %13, label %5, !dbg !7747, !llvm.loop !7752

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7754
  ret i8* %0, !dbg !7755
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7760, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i8* %1, metadata !7761, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %2, metadata !7762, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i8* %0, metadata !7763, metadata !DIExpression()), !dbg !7764
  %4 = icmp eq i32 %2, 0, !dbg !7765
  br i1 %4, label %22, label %5, !dbg !7766

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7760, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %7, metadata !7762, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i8* %8, metadata !7761, metadata !DIExpression()), !dbg !7764
  %9 = load i8, i8* %8, align 1, !dbg !7767
  %10 = icmp eq i8 %9, 0, !dbg !7768
  br i1 %10, label %16, label %11, !dbg !7769

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7770
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7772
  call void @llvm.dbg.value(metadata i8* %12, metadata !7761, metadata !DIExpression()), !dbg !7764
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7773
  call void @llvm.dbg.value(metadata i8* %13, metadata !7760, metadata !DIExpression()), !dbg !7764
  %14 = add i32 %7, -1, !dbg !7774
  call void @llvm.dbg.value(metadata i32 %14, metadata !7762, metadata !DIExpression()), !dbg !7764
  %15 = icmp eq i32 %14, 0, !dbg !7765
  br i1 %15, label %22, label %5, !dbg !7766, !llvm.loop !7775

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7760, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %18, metadata !7762, metadata !DIExpression()), !dbg !7764
  store i8 0, i8* %17, align 1, !dbg !7777
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7779
  call void @llvm.dbg.value(metadata i8* %19, metadata !7760, metadata !DIExpression()), !dbg !7764
  %20 = add i32 %18, -1, !dbg !7780
  call void @llvm.dbg.value(metadata i32 %20, metadata !7762, metadata !DIExpression()), !dbg !7764
  %21 = icmp eq i32 %20, 0, !dbg !7781
  br i1 %21, label %22, label %16, !dbg !7782, !llvm.loop !7783

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7785
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7786 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7790, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 %1, metadata !7791, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.value(metadata i32 %1, metadata !7792, metadata !DIExpression()), !dbg !7793
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7794

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7790, metadata !DIExpression()), !dbg !7793
  %6 = load i8, i8* %5, align 1, !dbg !7795
  %7 = icmp eq i8 %6, %3, !dbg !7796
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7797
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7798
  call void @llvm.dbg.value(metadata i8* %10, metadata !7790, metadata !DIExpression()), !dbg !7793
  br i1 %9, label %11, label %4, !dbg !7797, !llvm.loop !7800

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7802
  ret i8* %12, !dbg !7803
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7804 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7806, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i32 %1, metadata !7807, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i8* null, metadata !7808, metadata !DIExpression()), !dbg !7809
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7810

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7809
  call void @llvm.dbg.value(metadata i8* %6, metadata !7808, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.value(metadata i8* %5, metadata !7806, metadata !DIExpression()), !dbg !7809
  %7 = load i8, i8* %5, align 1, !dbg !7811
  %8 = icmp eq i8 %7, %3, !dbg !7814
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7815
  call void @llvm.dbg.value(metadata i8* %9, metadata !7808, metadata !DIExpression()), !dbg !7809
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7816
  call void @llvm.dbg.value(metadata i8* %10, metadata !7806, metadata !DIExpression()), !dbg !7809
  %11 = icmp eq i8 %7, 0, !dbg !7817
  br i1 %11, label %12, label %4, !dbg !7817, !llvm.loop !7818

12:                                               ; preds = %4
  ret i8* %9, !dbg !7820
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7821 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7825, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i32 0, metadata !7826, metadata !DIExpression()), !dbg !7827
  %2 = load i8, i8* %0, align 1, !dbg !7828
  %3 = icmp eq i8 %2, 0, !dbg !7829
  br i1 %3, label %11, label %4, !dbg !7830

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7826, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.value(metadata i8* %6, metadata !7825, metadata !DIExpression()), !dbg !7827
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7831
  call void @llvm.dbg.value(metadata i8* %7, metadata !7825, metadata !DIExpression()), !dbg !7827
  %8 = add i32 %5, 1, !dbg !7833
  call void @llvm.dbg.value(metadata i32 %8, metadata !7826, metadata !DIExpression()), !dbg !7827
  %9 = load i8, i8* %7, align 1, !dbg !7828
  %10 = icmp eq i8 %9, 0, !dbg !7829
  br i1 %10, label %11, label %4, !dbg !7830, !llvm.loop !7834

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7827
  ret i32 %12, !dbg !7836
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7837 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7841, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 %1, metadata !7842, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i32 0, metadata !7843, metadata !DIExpression()), !dbg !7844
  %3 = load i8, i8* %0, align 1, !dbg !7845
  %4 = icmp ne i8 %3, 0, !dbg !7846
  %5 = icmp ne i32 %1, 0, !dbg !7847
  %6 = and i1 %4, %5, !dbg !7847
  br i1 %6, label %7, label %16, !dbg !7848

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.value(metadata i8* %9, metadata !7841, metadata !DIExpression()), !dbg !7844
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7849
  call void @llvm.dbg.value(metadata i8* %10, metadata !7841, metadata !DIExpression()), !dbg !7844
  %11 = add nuw i32 %8, 1, !dbg !7851
  call void @llvm.dbg.value(metadata i32 %11, metadata !7843, metadata !DIExpression()), !dbg !7844
  %12 = load i8, i8* %10, align 1, !dbg !7845
  %13 = icmp ne i8 %12, 0, !dbg !7846
  %14 = icmp ult i32 %11, %1, !dbg !7847
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7847
  br i1 %15, label %7, label %16, !dbg !7848, !llvm.loop !7852

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7844
  ret i32 %17, !dbg !7854
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7855 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7859, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i8* %1, metadata !7860, metadata !DIExpression()), !dbg !7861
  %3 = load i8, i8* %0, align 1, !dbg !7862
  %4 = load i8, i8* %1, align 1, !dbg !7863
  %5 = icmp ne i8 %3, %4, !dbg !7864
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7865
  br i1 %7, label %18, label %8, !dbg !7865

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i8* %10, metadata !7859, metadata !DIExpression()), !dbg !7861
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7866
  call void @llvm.dbg.value(metadata i8* %11, metadata !7859, metadata !DIExpression()), !dbg !7861
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7868
  call void @llvm.dbg.value(metadata i8* %12, metadata !7860, metadata !DIExpression()), !dbg !7861
  %13 = load i8, i8* %11, align 1, !dbg !7862
  %14 = load i8, i8* %12, align 1, !dbg !7863
  %15 = icmp ne i8 %13, %14, !dbg !7864
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7865
  br i1 %17, label %18, label %8, !dbg !7865, !llvm.loop !7869

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7862
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7863
  %21 = zext i8 %19 to i32, !dbg !7872
  %22 = zext i8 %20 to i32, !dbg !7873
  %23 = sub nsw i32 %21, %22, !dbg !7874
  ret i32 %23, !dbg !7875
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7876 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i32 %2, metadata !7882, metadata !DIExpression()), !dbg !7883
  %4 = icmp eq i32 %2, 0, !dbg !7884
  br i1 %4, label %23, label %5, !dbg !7884

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7882, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8* %7, metadata !7881, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8* %8, metadata !7880, metadata !DIExpression()), !dbg !7883
  %9 = load i8, i8* %8, align 1, !dbg !7885
  %10 = load i8, i8* %7, align 1, !dbg !7886
  %11 = icmp ne i8 %9, %10, !dbg !7887
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7888
  br i1 %13, label %19, label %14, !dbg !7888

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7889
  call void @llvm.dbg.value(metadata i8* %15, metadata !7880, metadata !DIExpression()), !dbg !7883
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7891
  call void @llvm.dbg.value(metadata i8* %16, metadata !7881, metadata !DIExpression()), !dbg !7883
  %17 = add i32 %6, -1, !dbg !7892
  call void @llvm.dbg.value(metadata i32 %17, metadata !7882, metadata !DIExpression()), !dbg !7883
  %18 = icmp eq i32 %17, 0, !dbg !7884
  br i1 %18, label %23, label %5, !dbg !7884, !llvm.loop !7893

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7896
  %21 = zext i8 %10 to i32, !dbg !7897
  %22 = sub nsw i32 %20, %21, !dbg !7898
  br label %23, !dbg !7899

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7899
  ret i32 %24, !dbg !7900
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7901 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7905, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.value(metadata i8* %1, metadata !7906, metadata !DIExpression()), !dbg !7910
  call void @llvm.dbg.value(metadata i8** %2, metadata !7907, metadata !DIExpression()), !dbg !7910
  %4 = icmp eq i8* %0, null, !dbg !7911
  br i1 %4, label %5, label %7, !dbg !7911

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7912
  br label %7, !dbg !7911

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7911
  call void @llvm.dbg.value(metadata i8* %8, metadata !7908, metadata !DIExpression()), !dbg !7910
  %9 = load i8, i8* %8, align 1, !dbg !7913
  %10 = icmp eq i8 %9, 0, !dbg !7913
  br i1 %10, label %33, label %11, !dbg !7914

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7908, metadata !DIExpression()), !dbg !7910
  %14 = zext i8 %12 to i32, !dbg !7913
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7915
  %16 = icmp eq i8* %15, null, !dbg !7914
  br i1 %16, label %21, label %17, !dbg !7916

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7917
  call void @llvm.dbg.value(metadata i8* %18, metadata !7908, metadata !DIExpression()), !dbg !7910
  %19 = load i8, i8* %18, align 1, !dbg !7913
  %20 = icmp eq i8 %19, 0, !dbg !7913
  br i1 %20, label %33, label %11, !dbg !7914, !llvm.loop !7919

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7909, metadata !DIExpression()), !dbg !7910
  %24 = zext i8 %22 to i32, !dbg !7921
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7922
  %26 = icmp eq i8* %25, null, !dbg !7923
  br i1 %26, label %27, label %31, !dbg !7924

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7925
  call void @llvm.dbg.value(metadata i8* %28, metadata !7909, metadata !DIExpression()), !dbg !7910
  %29 = load i8, i8* %28, align 1, !dbg !7921
  %30 = icmp eq i8 %29, 0, !dbg !7921
  br i1 %30, label %33, label %21, !dbg !7927, !llvm.loop !7928

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7930
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7933
  br label %33, !dbg !7934

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7910
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7910
  store i8* %34, i8** %2, align 4, !dbg !7910
  ret i8* %35, !dbg !7935
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7936 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7938, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i8* %1, metadata !7939, metadata !DIExpression()), !dbg !7940
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7941
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7942
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7943
  ret i8* %0, !dbg !7944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7947, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i8* %1, metadata !7948, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %2, metadata !7949, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i8* %0, metadata !7950, metadata !DIExpression()), !dbg !7952
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7953
  call void @llvm.dbg.value(metadata i32 %4, metadata !7951, metadata !DIExpression()), !dbg !7952
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7954
  call void @llvm.dbg.value(metadata i8* %5, metadata !7947, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i8* %1, metadata !7948, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %2, metadata !7949, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %2, metadata !7949, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7952
  %6 = icmp eq i32 %2, 0, !dbg !7955
  br i1 %6, label %18, label %7, !dbg !7956

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7957
  call void @llvm.dbg.value(metadata i8* %9, metadata !7947, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i8* %10, metadata !7948, metadata !DIExpression()), !dbg !7952
  %12 = load i8, i8* %10, align 1, !dbg !7958
  %13 = icmp eq i8 %12, 0, !dbg !7959
  br i1 %13, label %18, label %14, !dbg !7960

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7961
  call void @llvm.dbg.value(metadata i8* %15, metadata !7948, metadata !DIExpression()), !dbg !7952
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7963
  call void @llvm.dbg.value(metadata i8* %16, metadata !7947, metadata !DIExpression()), !dbg !7952
  store i8 %12, i8* %9, align 1, !dbg !7964
  call void @llvm.dbg.value(metadata i32 %11, metadata !7949, metadata !DIExpression()), !dbg !7952
  call void @llvm.dbg.value(metadata i32 %11, metadata !7949, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7952
  %17 = icmp eq i32 %11, 0, !dbg !7955
  br i1 %17, label %18, label %7, !dbg !7956, !llvm.loop !7965

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7952
  store i8 0, i8* %19, align 1, !dbg !7967
  ret i8* %0, !dbg !7968
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7969 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7973, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %1, metadata !7974, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %2, metadata !7975, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %0, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %1, metadata !7977, metadata !DIExpression()), !dbg !7978
  %4 = icmp eq i32 %2, 0, !dbg !7979
  br i1 %4, label %31, label %5, !dbg !7981

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %0, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %2, metadata !7975, metadata !DIExpression()), !dbg !7978
  %6 = add i32 %2, -1, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %6, metadata !7975, metadata !DIExpression()), !dbg !7978
  %7 = icmp eq i32 %6, 0, !dbg !7983
  br i1 %7, label %23, label %8, !dbg !7984

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7985
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7985
  br label %11, !dbg !7985

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i8* %14, metadata !7976, metadata !DIExpression()), !dbg !7978
  %15 = load i8, i8* %14, align 1, !dbg !7986
  %16 = load i8, i8* %13, align 1, !dbg !7987
  %17 = icmp eq i8 %15, %16, !dbg !7988
  br i1 %17, label %18, label %23, !dbg !7985

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7989
  call void @llvm.dbg.value(metadata i8* %19, metadata !7976, metadata !DIExpression()), !dbg !7978
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7991
  call void @llvm.dbg.value(metadata i8* %20, metadata !7977, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 %12, metadata !7975, metadata !DIExpression()), !dbg !7978
  %21 = add i32 %12, -1, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %21, metadata !7975, metadata !DIExpression()), !dbg !7978
  %22 = icmp eq i32 %21, 0, !dbg !7983
  br i1 %22, label %23, label %11, !dbg !7984, !llvm.loop !7992

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7978
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7978
  %26 = load i8, i8* %24, align 1, !dbg !7994
  %27 = zext i8 %26 to i32, !dbg !7994
  %28 = load i8, i8* %25, align 1, !dbg !7995
  %29 = zext i8 %28 to i32, !dbg !7995
  %30 = sub nsw i32 %27, %29, !dbg !7996
  br label %31, !dbg !7997

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7978
  ret i32 %32, !dbg !7998
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7999 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8003, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %1, metadata !8004, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i32 %2, metadata !8005, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %0, metadata !8006, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %1, metadata !8007, metadata !DIExpression()), !dbg !8008
  %4 = ptrtoint i8* %0 to i32, !dbg !8009
  %5 = ptrtoint i8* %1 to i32, !dbg !8009
  %6 = sub i32 %4, %5, !dbg !8009
  %7 = icmp ult i32 %6, %2, !dbg !8011
  br i1 %7, label %10, label %8, !dbg !8012

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8007, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %0, metadata !8006, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i32 %2, metadata !8005, metadata !DIExpression()), !dbg !8008
  %9 = icmp eq i32 %2, 0, !dbg !8013
  br i1 %9, label %26, label %17, !dbg !8015

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8005, metadata !DIExpression()), !dbg !8008
  %12 = add i32 %11, -1, !dbg !8016
  call void @llvm.dbg.value(metadata i32 %12, metadata !8005, metadata !DIExpression()), !dbg !8008
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8019
  %14 = load i8, i8* %13, align 1, !dbg !8019
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8020
  store i8 %14, i8* %15, align 1, !dbg !8021
  %16 = icmp eq i32 %12, 0, !dbg !8022
  br i1 %16, label %26, label %10, !dbg !8023, !llvm.loop !8024

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8007, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i8* %19, metadata !8006, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.value(metadata i32 %20, metadata !8005, metadata !DIExpression()), !dbg !8008
  %21 = load i8, i8* %18, align 1, !dbg !8026
  store i8 %21, i8* %19, align 1, !dbg !8028
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8029
  call void @llvm.dbg.value(metadata i8* %22, metadata !8006, metadata !DIExpression()), !dbg !8008
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8030
  call void @llvm.dbg.value(metadata i8* %23, metadata !8007, metadata !DIExpression()), !dbg !8008
  %24 = add i32 %20, -1, !dbg !8031
  call void @llvm.dbg.value(metadata i32 %24, metadata !8005, metadata !DIExpression()), !dbg !8008
  %25 = icmp eq i32 %24, 0, !dbg !8013
  br i1 %25, label %26, label %17, !dbg !8015, !llvm.loop !8032

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8034
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8035 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8041, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i8* %1, metadata !8042, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32 %2, metadata !8043, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i8* %0, metadata !8044, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i8* %1, metadata !8045, metadata !DIExpression()), !dbg !8046
  %4 = icmp eq i32 %2, 0, !dbg !8047
  br i1 %4, label %14, label %5, !dbg !8048

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8045, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i8* %7, metadata !8044, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.value(metadata i32 %8, metadata !8043, metadata !DIExpression()), !dbg !8046
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8049
  call void @llvm.dbg.value(metadata i8* %9, metadata !8045, metadata !DIExpression()), !dbg !8046
  %10 = load i8, i8* %6, align 1, !dbg !8051
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8052
  call void @llvm.dbg.value(metadata i8* %11, metadata !8044, metadata !DIExpression()), !dbg !8046
  store i8 %10, i8* %7, align 1, !dbg !8053
  %12 = add i32 %8, -1, !dbg !8054
  call void @llvm.dbg.value(metadata i32 %12, metadata !8043, metadata !DIExpression()), !dbg !8046
  %13 = icmp eq i32 %12, 0, !dbg !8047
  br i1 %13, label %14, label %5, !dbg !8048, !llvm.loop !8055

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8057
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !8058 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8062, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i32 %1, metadata !8063, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i32 %2, metadata !8064, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i8* %0, metadata !8065, metadata !DIExpression()), !dbg !8067
  %4 = trunc i32 %1 to i8, !dbg !8068
  call void @llvm.dbg.value(metadata i8 %4, metadata !8066, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i32 %2, metadata !8064, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i8* %0, metadata !8065, metadata !DIExpression()), !dbg !8067
  %5 = icmp eq i32 %2, 0, !dbg !8069
  br i1 %5, label %12, label %6, !dbg !8070

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8064, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.value(metadata i8* %8, metadata !8065, metadata !DIExpression()), !dbg !8067
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8071
  call void @llvm.dbg.value(metadata i8* %9, metadata !8065, metadata !DIExpression()), !dbg !8067
  store i8 %4, i8* %8, align 1, !dbg !8073
  %10 = add i32 %7, -1, !dbg !8074
  call void @llvm.dbg.value(metadata i32 %10, metadata !8064, metadata !DIExpression()), !dbg !8067
  %11 = icmp eq i32 %10, 0, !dbg !8069
  br i1 %11, label %12, label %6, !dbg !8070, !llvm.loop !8075

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8077
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8082, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 %1, metadata !8083, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i32 %2, metadata !8084, metadata !DIExpression()), !dbg !8088
  %4 = icmp eq i32 %2, 0, !dbg !8089
  br i1 %4, label %17, label %5, !dbg !8090

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8091

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8092
  call void @llvm.dbg.value(metadata i8* %9, metadata !8085, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.value(metadata i32 %8, metadata !8084, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i8* %9, metadata !8085, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8092
  %10 = load i8, i8* %9, align 1, !dbg !8093
  %11 = icmp eq i8 %10, %6, !dbg !8096
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8097
  call void @llvm.dbg.value(metadata i8* %12, metadata !8085, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.value(metadata i32 %13, metadata !8084, metadata !DIExpression()), !dbg !8088
  br i1 %15, label %16, label %7, !dbg !8097, !llvm.loop !8098

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8100

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8088
  ret i8* %19, !dbg !8101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8102 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8104, metadata !DIExpression()), !dbg !8105
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8106
  ret void, !dbg !8107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !8108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8110, metadata !DIExpression()), !dbg !8111
  ret i32 -1, !dbg !8112
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8117, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.value(metadata i32* %1, metadata !8118, metadata !DIExpression()), !dbg !8119
  %3 = ptrtoint i32* %1 to i32, !dbg !8120
  %4 = and i32 %3, -2, !dbg !8120
  %5 = icmp eq i32 %4, 2, !dbg !8120
  br i1 %5, label %6, label %9, !dbg !8120

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8121
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8121
  br label %9, !dbg !8122

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8122
  ret i32 %10, !dbg !8123
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8124 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8126, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.value(metadata i32* %1, metadata !8127, metadata !DIExpression()), !dbg !8128
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8129
  ret i32 %3, !dbg !8130
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8134, metadata !DIExpression()), !dbg !8136
  call void @llvm.dbg.value(metadata i32* %1, metadata !8135, metadata !DIExpression()), !dbg !8136
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8137, !srcloc !8139
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8140
  ret i32 %3, !dbg !8141
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8142 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8147, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i32* %1, metadata !8148, metadata !DIExpression()), !dbg !8151
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8152
  call void @llvm.dbg.value(metadata i32 %3, metadata !8149, metadata !DIExpression()), !dbg !8151
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8153
  call void @llvm.dbg.value(metadata i32 %4, metadata !8150, metadata !DIExpression()), !dbg !8151
  %5 = icmp ne i32 %3, %4, !dbg !8154
  %6 = sext i1 %5 to i32, !dbg !8155
  ret i32 %6, !dbg !8156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8157 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8161, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %1, metadata !8162, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32 %2, metadata !8163, metadata !DIExpression()), !dbg !8165
  call void @llvm.dbg.value(metadata i32* %3, metadata !8164, metadata !DIExpression()), !dbg !8165
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8166
  ret i32 %5, !dbg !8167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8168 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8170, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32 %1, metadata !8171, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32 %2, metadata !8172, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32* %3, metadata !8173, metadata !DIExpression()), !dbg !8174
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8175, !srcloc !8177
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8178
  ret i32 %5, !dbg !8179
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8180 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8182, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i32 %1, metadata !8183, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i32 %2, metadata !8184, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i32* %3, metadata !8185, metadata !DIExpression()), !dbg !8190
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8191
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8193
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8193
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8193
  br i1 %11, label %33, label %12, !dbg !8193

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8190
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8190
  call void @llvm.dbg.value(metadata i8* %14, metadata !8188, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i32 %13, metadata !8186, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i32 %1, metadata !8187, metadata !DIExpression()), !dbg !8190
  br label %15, !dbg !8194

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8196
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8190
  call void @llvm.dbg.value(metadata i8* %17, metadata !8188, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.value(metadata i32 %16, metadata !8187, metadata !DIExpression()), !dbg !8190
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8197
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8200
  call void @llvm.dbg.value(metadata i8* %19, metadata !8188, metadata !DIExpression()), !dbg !8190
  %20 = load i8, i8* %17, align 1, !dbg !8201
  %21 = zext i8 %20 to i32, !dbg !8202
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8197
  %23 = icmp eq i32 %22, -1, !dbg !8203
  br i1 %23, label %30, label %24, !dbg !8204

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8205
  call void @llvm.dbg.value(metadata i32 %25, metadata !8187, metadata !DIExpression()), !dbg !8190
  %26 = icmp eq i32 %25, 0, !dbg !8206
  br i1 %26, label %27, label %15, !dbg !8207, !llvm.loop !8208

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8210
  call void @llvm.dbg.value(metadata i32 %28, metadata !8186, metadata !DIExpression()), !dbg !8190
  %29 = icmp eq i32 %28, 0, !dbg !8211
  br i1 %29, label %30, label %12, !dbg !8212, !llvm.loop !8213

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8190
  call void @llvm.dbg.value(metadata i32 %31, metadata !8186, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.label(metadata !8189), !dbg !8216
  %32 = sub i32 %2, %31, !dbg !8217
  br label %33, !dbg !8218

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8190
  ret i32 %34, !dbg !8219
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8220 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8224, metadata !DIExpression()), !dbg !8225
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8226
  %3 = icmp eq i32 %2, -1, !dbg !8228
  br i1 %3, label %8, label %4, !dbg !8229

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8230
  %6 = icmp eq i32 %5, -1, !dbg !8231
  %7 = sext i1 %6 to i32, !dbg !8230
  br label %8, !dbg !8232

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8225
  ret i32 %9, !dbg !8233
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8234 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8236, metadata !DIExpression()), !dbg !8247
  %8 = bitcast i64* %2 to i8*, !dbg !8248
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8248
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !8237, metadata !DIExpression()), !dbg !8249
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !8249
  store i64 %9, i64* %2, align 8, !dbg !8249
  %10 = bitcast i64* %4 to i8*, !dbg !8250
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8250
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !8245, metadata !DIExpression()), !dbg !8251
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !8251
  store i64 %11, i64* %4, align 8, !dbg !8251
  %12 = bitcast i64* %6 to i8*, !dbg !8252
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8252
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !8246, metadata !DIExpression()), !dbg !8253
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !8253
  store i64 %13, i64* %6, align 8, !dbg !8253
  %14 = trunc i64 %9 to i32, !dbg !8254
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !8254
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #24, !dbg !8256
  %17 = trunc i64 %13 to i32, !dbg !8257
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !8257
  br i1 %16, label %19, label %26, !dbg !8257

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !8257
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !8257
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #24, !dbg !8258
  br i1 %22, label %23, label %26, !dbg !8259

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #24, !dbg !8260
  br i1 %24, label %25, label %26, !dbg !8261

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #24, !dbg !8262
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #24, !dbg !8263
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #24, !dbg !8264
  br label %26, !dbg !8265

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !8247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8266
  ret i32 %27, !dbg !8266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8267 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8272, metadata !DIExpression()), !dbg !8273
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8274, !srcloc !8276
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #24, !dbg !8277
  ret i1 %2, !dbg !8278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8279 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !8284, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.value(metadata i32 %1, metadata !8285, metadata !DIExpression()), !dbg !8286
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !8287
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !8287
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !8288
  %6 = load i8, i8* %5, align 4, !dbg !8288
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !8289
  %8 = load i16, i16* %7, align 2, !dbg !8289
  %9 = zext i16 %8 to i32, !dbg !8290
  %10 = or i32 %9, %1, !dbg !8291
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #24, !dbg !8292
  ret void, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8294 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8297, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.value(metadata i8 %1, metadata !8298, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.value(metadata i32 %2, metadata !8299, metadata !DIExpression()), !dbg !8300
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8301, !srcloc !8303
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #24, !dbg !8304
  ret void, !dbg !8305
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8306 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8308, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i8 %1, metadata !8309, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 %2, metadata !8310, metadata !DIExpression()), !dbg !8315
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8316
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !8316
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !8316
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !8311, metadata !DIExpression()), !dbg !8315
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8317
  %8 = bitcast i8** %7 to %struct.k_spinlock**, !dbg !8317
  %9 = load %struct.k_spinlock*, %struct.k_spinlock** %8, align 4, !dbg !8317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !8312, metadata !DIExpression()), !dbg !8315
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8318
  %11 = bitcast i8** %10 to %struct.k_spinlock**, !dbg !8318
  %12 = load %struct.k_spinlock*, %struct.k_spinlock** %11, align 4, !dbg !8318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %12, metadata !8314, metadata !DIExpression()), !dbg !8315
  %13 = and i32 %2, 132120576, !dbg !8319
  %14 = icmp eq i32 %13, 0, !dbg !8319
  br i1 %14, label %16, label %15, !dbg !8322

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12.102, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 679) #25, !dbg !8323
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.104, i32 0, i32 0)) #25, !dbg !8323
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 679) #25, !dbg !8323
  unreachable, !dbg !8323

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !8325
  %18 = icmp eq i32 %17, 48, !dbg !8325
  br i1 %18, label %19, label %20, !dbg !8328

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.105, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 683) #25, !dbg !8329
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15.106, i32 0, i32 0)) #25, !dbg !8329
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 683) #25, !dbg !8329
  unreachable, !dbg !8329

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !8331
  %22 = icmp ne i32 %21, 0, !dbg !8331
  %23 = and i32 %2, 131074, !dbg !8331
  %24 = icmp eq i32 %23, 2, !dbg !8331
  br i1 %24, label %25, label %26, !dbg !8331

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 687) #25, !dbg !8334
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.17.108, i32 0, i32 0)) #25, !dbg !8334
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 687) #25, !dbg !8334
  unreachable, !dbg !8334

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !8336
  %28 = icmp eq i32 %27, 4, !dbg !8336
  br i1 %28, label %29, label %30, !dbg !8336

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 690) #25, !dbg !8339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 690) #25, !dbg !8339
  unreachable, !dbg !8339

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !8341
  %32 = icmp eq i32 %31, 0, !dbg !8341
  %33 = or i1 %32, %22, !dbg !8341
  br i1 %33, label %35, label %34, !dbg !8341

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 694) #25, !dbg !8344
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.111, i32 0, i32 0)) #25, !dbg !8344
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 694) #25, !dbg !8344
  unreachable, !dbg !8344

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !8346
  br i1 %36, label %37, label %38, !dbg !8349

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.21.112, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 698) #25, !dbg !8350
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22.113, i32 0, i32 0)) #25, !dbg !8350
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 698) #25, !dbg !8350
  unreachable, !dbg !8350

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !8352
  %40 = icmp ne i32 %39, 1048577, !dbg !8352
  %41 = or i1 %40, %32, !dbg !8352
  %42 = xor i32 %2, 786432, !dbg !8352
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !8352
  call void @llvm.dbg.value(metadata i32 %43, metadata !8310, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 %43, metadata !8310, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !8315
  %44 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %9, i32 0, i32 0, !dbg !8354
  %45 = load i32, i32* %44, align 4, !dbg !8354
  %46 = zext i8 %1 to i32, !dbg !8354
  %47 = shl nuw i32 1, %46, !dbg !8354
  %48 = and i32 %45, %47, !dbg !8354
  %49 = icmp eq i32 %48, 0, !dbg !8354
  br i1 %49, label %50, label %51, !dbg !8357

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10.114, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 709) #25, !dbg !8358
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.115, i32 0, i32 0)) #25, !dbg !8358
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.103, i32 0, i32 0), i32 noundef 709) #25, !dbg !8358
  unreachable, !dbg !8358

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !8360
  %53 = icmp eq i32 %52, 0, !dbg !8362
  br i1 %53, label %58, label %54, !dbg !8363

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !8364
  %56 = load i32, i32* %55, align 4, !dbg !8366
  %57 = or i32 %56, %47, !dbg !8366
  store i32 %57, i32* %55, align 4, !dbg !8366
  br label %63, !dbg !8367

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !8368
  %60 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !8370
  %61 = load i32, i32* %60, align 4, !dbg !8371
  %62 = and i32 %61, %59, !dbg !8371
  store i32 %62, i32* %60, align 4, !dbg !8371
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !8372
  call void @llvm.dbg.value(metadata i32 %64, metadata !8310, metadata !DIExpression()), !dbg !8315
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !8373
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !8373
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #25, !dbg !8374
  ret void, !dbg !8375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8376 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8378, metadata !DIExpression()), !dbg !8379
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8380
  ret i1 %2, !dbg !8381
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8382 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8384, metadata !DIExpression()), !dbg !8385
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8386
  ret void, !dbg !8387
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8392, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata i32 %1, metadata !8393, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8394, metadata !DIExpression()), !dbg !8398
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8399
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8399
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8399
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8395, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata i32 %0, metadata !8397, metadata !DIExpression()), !dbg !8398
  %7 = icmp slt i32 %0, %1, !dbg !8400
  br i1 %7, label %8, label %22, !dbg !8403

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8397, metadata !DIExpression()), !dbg !8398
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8404
  %11 = icmp eq i32 %10, 0, !dbg !8404
  br i1 %11, label %19, label %12, !dbg !8407

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8408
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8410
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8410
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8412
  br i1 %15, label %19, label %16, !dbg !8413

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8414
  %18 = load i8*, i8** %17, align 4, !dbg !8414
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8415
  br label %19, !dbg !8416

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8417
  call void @llvm.dbg.value(metadata i32 %20, metadata !8397, metadata !DIExpression()), !dbg !8398
  %21 = icmp eq i32 %20, %1, !dbg !8400
  br i1 %21, label %22, label %8, !dbg !8403, !llvm.loop !8418

22:                                               ; preds = %19, %3
  ret void, !dbg !8420
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !8421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8423, metadata !DIExpression()), !dbg !8424
  %2 = shl nuw i32 1, %0, !dbg !8425
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8428
  ret i32 %3, !dbg !8429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !8430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8434, metadata !DIExpression()), !dbg !8435
  %2 = shl nuw i32 1, %0, !dbg !8436
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8439
  ret void, !dbg !8440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8444, metadata !DIExpression()), !dbg !8445
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !8446
  ret void, !dbg !8447
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !8448 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8450, metadata !DIExpression()), !dbg !8451
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !8452
  %3 = and i32 %2, %0, !dbg !8452
  %4 = icmp eq i32 %3, %0, !dbg !8453
  %5 = zext i1 %4 to i32, !dbg !8453
  ret i32 %5, !dbg !8454
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8455 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8457, metadata !DIExpression()), !dbg !8458
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8459
  ret void, !dbg !8460
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8461 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8463, metadata !DIExpression()), !dbg !8464
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8465
  ret void, !dbg !8466
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8467 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8469, metadata !DIExpression()), !dbg !8470
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8471
  ret void, !dbg !8472
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8473 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8475, metadata !DIExpression()), !dbg !8476
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8477
  ret void, !dbg !8478
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8479 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8481, metadata !DIExpression()), !dbg !8482
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8483
  ret void, !dbg !8484
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8485 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8487, metadata !DIExpression()), !dbg !8488
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8489
  ret void, !dbg !8490
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8491 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8493, metadata !DIExpression()), !dbg !8494
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8495
  ret i32 0, !dbg !8496
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !846 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !850, metadata !DIExpression()), !dbg !8497
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8498
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8500
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8502
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8504
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8506
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8508
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8510
  ret void, !dbg !8512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8515, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 0, metadata !8516, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 undef, metadata !8516, metadata !DIExpression()), !dbg !8517
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8518
  %3 = load i32, i32* %2, align 4, !dbg !8518
  call void @llvm.dbg.value(metadata i32 %3, metadata !8516, metadata !DIExpression()), !dbg !8517
  %4 = shl nuw i32 1, %0, !dbg !8519
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !8520
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !8521
  ret void, !dbg !8522
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8525, metadata !DIExpression()), !dbg !8526
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8527
  %3 = or i32 %2, %0, !dbg !8527
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8527
  ret void, !dbg !8528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !8529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8531, metadata !DIExpression()), !dbg !8532
  %2 = icmp slt i32 %0, 32, !dbg !8533
  br i1 %2, label %3, label %5, !dbg !8535

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8536
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8538
  br label %5, !dbg !8539

5:                                                ; preds = %1, %3
  ret void, !dbg !8540
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8543, metadata !DIExpression()), !dbg !8544
  %2 = xor i32 %0, -1, !dbg !8545
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8545
  %4 = and i32 %3, %2, !dbg !8545
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !8545
  ret void, !dbg !8546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !8547 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8551, metadata !DIExpression()), !dbg !8553
  call void @llvm.dbg.value(metadata i32 %1, metadata !8552, metadata !DIExpression()), !dbg !8553
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8554

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8555
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8557
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8558
  br label %11, !dbg !8559

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8560
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8561
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8562
  br label %11, !dbg !8563

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8564
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8565
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8566
  br label %11, !dbg !8567

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8568
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8569
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8570
  br label %11, !dbg !8571

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8575, metadata !DIExpression()), !dbg !8576
  %2 = xor i32 %0, -1, !dbg !8577
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8577
  %4 = and i32 %3, %2, !dbg !8577
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8577
  ret void, !dbg !8578
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8579 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8581, metadata !DIExpression()), !dbg !8582
  %2 = xor i32 %0, -1, !dbg !8583
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8583
  %4 = and i32 %3, %2, !dbg !8583
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8583
  ret void, !dbg !8584
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8587, metadata !DIExpression()), !dbg !8588
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8589
  %3 = or i32 %2, %0, !dbg !8589
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !8589
  ret void, !dbg !8590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8591 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8593, metadata !DIExpression()), !dbg !8594
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8595
  %3 = or i32 %2, %0, !dbg !8595
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !8595
  ret void, !dbg !8596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8601, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8602, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.value(metadata i8* %2, metadata !8603, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8604, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8606, metadata !DIExpression()), !dbg !8607
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8608
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8608
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8610
  br i1 %6, label %7, label %9, !dbg !8611

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8612
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8613
  store i8* %2, i8** %8, align 4, !dbg !8614
  br label %9, !dbg !8615

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8607
  ret i32 %10, !dbg !8616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8619, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !8620, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8621, metadata !DIExpression()), !dbg !8622
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8623
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8624
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8625
  store i8* null, i8** %3, align 4, !dbg !8626
  ret void, !dbg !8627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8628 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8630, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.value(metadata i8* %1, metadata !8631, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.value(metadata i8* %1, metadata !8632, metadata !DIExpression()), !dbg !8635
  %3 = bitcast i8* %1 to i32*, !dbg !8636
  %4 = load i32, i32* %3, align 4, !dbg !8636
  %5 = add i32 %4, -37, !dbg !8636
  %6 = icmp ult i32 %5, -9, !dbg !8636
  br i1 %6, label %15, label %7, !dbg !8638

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8639
  %9 = inttoptr i32 %8 to i32*, !dbg !8640
  call void @llvm.dbg.value(metadata i32* %9, metadata !8633, metadata !DIExpression()), !dbg !8635
  %10 = load volatile i32, i32* %9, align 4, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %10, metadata !8634, metadata !DIExpression()), !dbg !8635
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8642
  %12 = bitcast i8* %11 to i32*, !dbg !8642
  %13 = load i32, i32* %12, align 4, !dbg !8642
  %14 = or i32 %13, %10, !dbg !8643
  call void @llvm.dbg.value(metadata i32 %14, metadata !8634, metadata !DIExpression()), !dbg !8635
  store volatile i32 %14, i32* %9, align 4, !dbg !8644
  br label %15, !dbg !8645

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8635
  ret i32 %16, !dbg !8646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8647 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8649, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i8* %1, metadata !8650, metadata !DIExpression()), !dbg !8654
  call void @llvm.dbg.value(metadata i8* %1, metadata !8651, metadata !DIExpression()), !dbg !8654
  %3 = bitcast i8* %1 to i32*, !dbg !8655
  %4 = load i32, i32* %3, align 4, !dbg !8655
  %5 = add i32 %4, -37, !dbg !8655
  %6 = icmp ult i32 %5, -9, !dbg !8655
  br i1 %6, label %16, label %7, !dbg !8657

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8658
  %9 = inttoptr i32 %8 to i32*, !dbg !8659
  call void @llvm.dbg.value(metadata i32* %9, metadata !8652, metadata !DIExpression()), !dbg !8654
  %10 = load volatile i32, i32* %9, align 4, !dbg !8660
  call void @llvm.dbg.value(metadata i32 %10, metadata !8653, metadata !DIExpression()), !dbg !8654
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8661
  %12 = bitcast i8* %11 to i32*, !dbg !8661
  %13 = load i32, i32* %12, align 4, !dbg !8661
  %14 = xor i32 %13, -1, !dbg !8662
  %15 = and i32 %10, %14, !dbg !8663
  call void @llvm.dbg.value(metadata i32 %15, metadata !8653, metadata !DIExpression()), !dbg !8654
  store volatile i32 %15, i32* %9, align 4, !dbg !8664
  br label %16, !dbg !8665

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8654
  ret i32 %17, !dbg !8666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #9 !dbg !8667 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8669, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %1, metadata !8670, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i32* %2, metadata !8671, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %1, metadata !8672, metadata !DIExpression()), !dbg !8676
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8677
  call void @llvm.dbg.value(metadata i32 %4, metadata !8673, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i32 %4, metadata !8674, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i32 %4, metadata !8675, metadata !DIExpression()), !dbg !8676
  %5 = bitcast i8* %1 to i32*, !dbg !8678
  %6 = load i32, i32* %5, align 4, !dbg !8678
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !8679

7:                                                ; preds = %3
  br label %10, !dbg !8680

8:                                                ; preds = %3
  br label %10, !dbg !8682

9:                                                ; preds = %3
  br label %10, !dbg !8683

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !8684
  br label %12, !dbg !8685

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !8676
  ret i32 %13, !dbg !8685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8686 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8688, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i8* %1, metadata !8689, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i8* %2, metadata !8690, metadata !DIExpression()), !dbg !8696
  call void @llvm.dbg.value(metadata i8* %1, metadata !8691, metadata !DIExpression()), !dbg !8696
  %4 = bitcast i8* %1 to i32*, !dbg !8697
  %5 = load i32, i32* %4, align 4, !dbg !8697
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8698
  call void @llvm.dbg.value(metadata i32 %6, metadata !8695, metadata !DIExpression()), !dbg !8696
  %7 = icmp slt i32 %6, 0, !dbg !8699
  br i1 %7, label %22, label %8, !dbg !8701

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8691, metadata !DIExpression()), !dbg !8696
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8702
  %10 = bitcast i8* %9 to i32*, !dbg !8702
  %11 = load i32, i32* %10, align 4, !dbg !8702
  %12 = lshr i32 %11, 16, !dbg !8702
  %13 = and i32 %12, 7, !dbg !8702
  %14 = lshr i32 %11, 8, !dbg !8703
  %15 = and i32 %14, 31, !dbg !8703
  %16 = shl i32 %13, %15, !dbg !8704
  call void @llvm.dbg.value(metadata i32 %16, metadata !8694, metadata !DIExpression()), !dbg !8696
  %17 = and i32 %11, 255, !dbg !8705
  %18 = or i32 %17, 1073887232, !dbg !8706
  %19 = inttoptr i32 %18 to i32*, !dbg !8707
  call void @llvm.dbg.value(metadata i32* %19, metadata !8692, metadata !DIExpression()), !dbg !8696
  %20 = load volatile i32, i32* %19, align 4, !dbg !8708
  call void @llvm.dbg.value(metadata i32 %20, metadata !8693, metadata !DIExpression()), !dbg !8696
  %21 = or i32 %16, %20, !dbg !8709
  call void @llvm.dbg.value(metadata i32 %21, metadata !8693, metadata !DIExpression()), !dbg !8696
  store volatile i32 %21, i32* %19, align 4, !dbg !8710
  br label %22, !dbg !8711

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8696
  ret i32 %23, !dbg !8712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8713 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8717, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata i32 0, metadata !8718, metadata !DIExpression()), !dbg !8719
  %2 = add i32 %0, -1, !dbg !8720
  %3 = icmp ult i32 %2, 4, !dbg !8720
  br i1 %3, label %4, label %7, !dbg !8720

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8720
  %6 = load i32, i32* %5, align 4, !dbg !8720
  call void @llvm.dbg.value(metadata i32 %6, metadata !8718, metadata !DIExpression()), !dbg !8719
  br label %7, !dbg !8721

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8719
  ret i32 %8, !dbg !8722
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8723 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8725, metadata !DIExpression()), !dbg !8728
  tail call void @config_enable_default_clocks() #25, !dbg !8729
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8730
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8730
  %4 = lshr i32 %3, 4, !dbg !8730
  %5 = and i32 %4, 15, !dbg !8730
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8730
  %7 = load i8, i8* %6, align 1, !dbg !8730
  %8 = zext i8 %7 to i32, !dbg !8730
  %9 = lshr i32 %2, %8, !dbg !8730
  call void @llvm.dbg.value(metadata i32 %9, metadata !8726, metadata !DIExpression()), !dbg !8728
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !8727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8728
  %10 = icmp ult i32 %9, 32000000, !dbg !8731
  br i1 %10, label %11, label %13, !dbg !8733

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8734
  br label %13, !dbg !8736

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8737
  tail call fastcc void @set_up_plls() #24, !dbg !8738
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8739
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #24, !dbg !8742
  br label %14, !dbg !8743

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8744
  %16 = icmp eq i32 %15, 12, !dbg !8745
  br i1 %16, label %17, label %14, !dbg !8743, !llvm.loop !8746

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !8748
  br i1 %18, label %19, label %21, !dbg !8750

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !8751
  br label %21, !dbg !8753

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !8754
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8755
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8756
  ret i32 0, !dbg !8757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8758 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8760
  %2 = and i32 %1, 240, !dbg !8760
  ret i32 %2, !dbg !8761
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8762 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8763
  %2 = icmp eq i32 %1, 1, !dbg !8767
  br i1 %2, label %7, label %3, !dbg !8768

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8769
  br label %4, !dbg !8771

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8772
  %6 = icmp eq i32 %5, 1, !dbg !8773
  br i1 %6, label %7, label %4, !dbg !8771, !llvm.loop !8774

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8776
  br label %8, !dbg !8779

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8780
  %10 = icmp eq i32 %9, 1, !dbg !8781
  br i1 %10, label %11, label %8, !dbg !8779, !llvm.loop !8782

11:                                               ; preds = %8
  ret void, !dbg !8784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8785 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8786
  %2 = icmp eq i32 %1, 12, !dbg !8788
  br i1 %2, label %3, label %4, !dbg !8789

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8790
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8792
  br label %4, !dbg !8793

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8794
  tail call void @config_pll_sysclock() #25, !dbg !8795
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8796
  br label %5, !dbg !8797

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8798
  %7 = icmp eq i32 %6, 1, !dbg !8799
  br i1 %7, label %8, label %5, !dbg !8797, !llvm.loop !8800

8:                                                ; preds = %5
  ret void, !dbg !8802
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8803 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8805, metadata !DIExpression()), !dbg !8806
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8807
  %2 = and i32 %1, -241, !dbg !8807
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8807
  ret void, !dbg !8808
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8811, metadata !DIExpression()), !dbg !8812
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8813
  %3 = and i32 %2, -4, !dbg !8813
  %4 = or i32 %3, %0, !dbg !8813
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8813
  ret void, !dbg !8814
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8815 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8816
  %2 = and i32 %1, 12, !dbg !8816
  ret i32 %2, !dbg !8817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8818 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8820, metadata !DIExpression()), !dbg !8821
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8822
  %2 = and i32 %1, -1793, !dbg !8822
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8822
  ret void, !dbg !8823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8824 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8826, metadata !DIExpression()), !dbg !8827
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8828
  %2 = and i32 %1, -14337, !dbg !8828
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8828
  ret void, !dbg !8829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8830 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8831
  %2 = icmp eq i32 %1, 1, !dbg !8833
  br i1 %2, label %7, label %3, !dbg !8834

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8835
  br label %4, !dbg !8837

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8838
  %6 = icmp eq i32 %5, 1, !dbg !8839
  br i1 %6, label %7, label %4, !dbg !8837, !llvm.loop !8840

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #24, !dbg !8842
  br label %8, !dbg !8843

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8844
  %10 = icmp eq i32 %9, 4, !dbg !8845
  br i1 %10, label %11, label %8, !dbg !8843, !llvm.loop !8846

11:                                               ; preds = %8
  ret void, !dbg !8848
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8849 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8850
  %2 = and i32 %1, -16777217, !dbg !8850
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8850
  ret void, !dbg !8851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8852 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8853
  %2 = or i32 %1, 16777216, !dbg !8853
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8853
  ret void, !dbg !8854
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8855 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8856
  %2 = lshr i32 %1, 25, !dbg !8857
  %3 = and i32 %2, 1, !dbg !8857
  ret i32 %3, !dbg !8858
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8859 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8860
  %2 = lshr i32 %1, 1, !dbg !8861
  %3 = and i32 %2, 1, !dbg !8861
  ret i32 %3, !dbg !8862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8863 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8864
  %2 = or i32 %1, 1, !dbg !8864
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8864
  ret void, !dbg !8865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8866 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8867
  %2 = or i32 %1, 1, !dbg !8867
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8867
  ret void, !dbg !8868
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8869 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !8870
  %2 = lshr i32 %1, 1, !dbg !8871
  %3 = and i32 %2, 1, !dbg !8871
  ret i32 %3, !dbg !8872
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8873 {
  ret i32 16000000, !dbg !8875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8878 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8879
  ret void, !dbg !8880
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8881 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8885, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 262144, metadata !8886, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8887, metadata !DIExpression()), !dbg !8888
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8889
  %2 = and i32 %1, -16580609, !dbg !8889
  %3 = or i32 %2, 4456448, !dbg !8889
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8889
  ret void, !dbg !8890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #4 !dbg !8891 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !8892
  %2 = zext i8 %1 to i32, !dbg !8892
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !8892
  ret i32 %3, !dbg !8893
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #14 !dbg !8894 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #24, !dbg !8895
  ret void, !dbg !8896
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #14 !dbg !8897 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8899, metadata !DIExpression()), !dbg !8901
  %2 = bitcast i32* %1 to i8*, !dbg !8902
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8902
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8900, metadata !DIExpression()), !dbg !8903
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8904
  %4 = or i32 %3, 1, !dbg !8904
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8904
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !8905
  %6 = and i32 %5, 1, !dbg !8905
  store volatile i32 %6, i32* %1, align 4, !dbg !8906
  %7 = load volatile i32, i32* %1, align 4, !dbg !8907
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8908
  ret void, !dbg !8908
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8909 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8911, metadata !DIExpression()), !dbg !8912
  %2 = tail call fastcc zeroext i1 @device_is_ready.125() #24, !dbg !8913
  br i1 %2, label %3, label %4, !dbg !8915

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8916
  br label %4, !dbg !8917

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8912
  ret i32 %5, !dbg !8918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.125() unnamed_addr #1 !dbg !8919 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8923, metadata !DIExpression()), !dbg !8924
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8925, !srcloc !8927
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.126() #24, !dbg !8928
  ret i1 %1, !dbg !8929
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8930 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8931
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8932
  ret void, !dbg !8933
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8936, metadata !DIExpression()), !dbg !8937
  %2 = icmp eq i32 %0, 10, !dbg !8938
  br i1 %2, label %3, label %4, !dbg !8940

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8941
  br label %4, !dbg !8943

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8944
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8945
  ret i32 %0, !dbg !8946
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8947 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8950, metadata !DIExpression()), !dbg !8952
  call void @llvm.dbg.value(metadata i8 %0, metadata !8951, metadata !DIExpression()), !dbg !8952
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8953, !srcloc !8955
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8956
  ret void, !dbg !8957
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8958 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8960, metadata !DIExpression()), !dbg !8963
  call void @llvm.dbg.value(metadata i8 %0, metadata !8961, metadata !DIExpression()), !dbg !8963
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8964
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8962, metadata !DIExpression()), !dbg !8963
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8965
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8965
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #25, !dbg !8966
  ret void, !dbg !8967
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.126() unnamed_addr #1 !dbg !8968 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !8970, metadata !DIExpression()), !dbg !8971
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !8972
  ret i1 %1, !dbg !8973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8974 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9023, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9024, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9025, metadata !DIExpression()), !dbg !9026
  ret void, !dbg !9027
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9028 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9030, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i8 %1, metadata !9031, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.value(metadata i32 %2, metadata !9032, metadata !DIExpression()), !dbg !9035
  %5 = bitcast i32* %4 to i8*, !dbg !9036
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9036
  call void @llvm.dbg.value(metadata i32* %4, metadata !9034, metadata !DIExpression(DW_OP_deref)), !dbg !9035
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9037
  call void @llvm.dbg.value(metadata i32 %6, metadata !9033, metadata !DIExpression()), !dbg !9035
  %7 = icmp eq i32 %6, 0, !dbg !9038
  br i1 %7, label %8, label %31, !dbg !9040

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9033, metadata !DIExpression()), !dbg !9035
  %9 = and i32 %2, 131072, !dbg !9041
  %10 = icmp eq i32 %9, 0, !dbg !9043
  br i1 %10, label %28, label %11, !dbg !9044

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9045
  %13 = icmp eq i32 %12, 0, !dbg !9048
  br i1 %13, label %18, label %14, !dbg !9049

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9050
  %16 = shl nuw i32 1, %15, !dbg !9050
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9052
  br label %25, !dbg !9053

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9054
  %20 = icmp eq i32 %19, 0, !dbg !9056
  %21 = zext i8 %1 to i32, !dbg !9035
  br i1 %20, label %25, label %22, !dbg !9057

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9058
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9060
  br label %25, !dbg !9061

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9062
  %27 = load i32, i32* %4, align 4, !dbg !9063
  call void @llvm.dbg.value(metadata i32 %30, metadata !9034, metadata !DIExpression()), !dbg !9035
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9064
  br label %31, !dbg !9065

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9062
  %30 = load i32, i32* %4, align 4, !dbg !9063
  call void @llvm.dbg.value(metadata i32 %30, metadata !9034, metadata !DIExpression()), !dbg !9035
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9064
  call void @llvm.dbg.value(metadata i32 0, metadata !9033, metadata !DIExpression()), !dbg !9035
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9066
  ret i32 %6, !dbg !9066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9067 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9071, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.value(metadata i32* %1, metadata !9072, metadata !DIExpression()), !dbg !9076
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9077
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9077
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9077
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9073, metadata !DIExpression()), !dbg !9076
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9078
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9078
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9078
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9075, metadata !DIExpression()), !dbg !9076
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9079
  store i32 %9, i32* %1, align 4, !dbg !9080
  ret i32 0, !dbg !9081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9082 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9084, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32 %1, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32 %2, metadata !9086, metadata !DIExpression()), !dbg !9090
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9091
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9091
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9091
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9087, metadata !DIExpression()), !dbg !9090
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9092
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9092
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9092
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9088, metadata !DIExpression()), !dbg !9090
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9093
  call void @llvm.dbg.value(metadata i32 %10, metadata !9089, metadata !DIExpression()), !dbg !9090
  %11 = xor i32 %1, -1, !dbg !9094
  %12 = and i32 %10, %11, !dbg !9095
  %13 = and i32 %2, %1, !dbg !9096
  %14 = or i32 %12, %13, !dbg !9097
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9098
  ret i32 0, !dbg !9099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9102, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32 %1, metadata !9103, metadata !DIExpression()), !dbg !9106
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9107
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9107
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9107
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9104, metadata !DIExpression()), !dbg !9106
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9108
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9108
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9108
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9105, metadata !DIExpression()), !dbg !9106
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9109
  store volatile i32 %1, i32* %9, align 4, !dbg !9109
  ret i32 0, !dbg !9110
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9111 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9113, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.value(metadata i32 %1, metadata !9114, metadata !DIExpression()), !dbg !9117
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9118
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9118
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9118
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9115, metadata !DIExpression()), !dbg !9117
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9119
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9119
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9119
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9116, metadata !DIExpression()), !dbg !9117
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9120
  ret i32 0, !dbg !9121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9122 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9124, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.value(metadata i32 %1, metadata !9125, metadata !DIExpression()), !dbg !9128
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9129
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9129
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9129
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9126, metadata !DIExpression()), !dbg !9128
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9130
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9130
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9130
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9127, metadata !DIExpression()), !dbg !9128
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9131
  %10 = load volatile i32, i32* %9, align 4, !dbg !9131
  %11 = xor i32 %10, %1, !dbg !9131
  store volatile i32 %11, i32* %9, align 4, !dbg !9131
  ret i32 0, !dbg !9132
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9133 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9135, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8 %1, metadata !9136, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32 %2, metadata !9137, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32 %3, metadata !9138, metadata !DIExpression()), !dbg !9145
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9146
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9146
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9146
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9139, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i8* undef, metadata !9140, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32 0, metadata !9142, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.value(metadata i32 0, metadata !9143, metadata !DIExpression()), !dbg !9145
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9147

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9148
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9152
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9153
  %12 = load i32, i32* %11, align 4, !dbg !9153
  %13 = icmp eq i32 %10, %12, !dbg !9154
  br i1 %13, label %14, label %29, !dbg !9155

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9156
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9158
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9159
  br label %29, !dbg !9160

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9161
  %17 = load i8*, i8** %16, align 4, !dbg !9161
  call void @llvm.dbg.value(metadata i8* %17, metadata !9140, metadata !DIExpression()), !dbg !9145
  %18 = zext i8 %1 to i32, !dbg !9162
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9164
  %20 = icmp eq i32 %19, 0, !dbg !9165
  br i1 %20, label %21, label %29, !dbg !9166

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9167
  %23 = load i32, i32* %22, align 4, !dbg !9167
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9168
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9169

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9142, metadata !DIExpression()), !dbg !9145
  br label %27, !dbg !9170

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9142, metadata !DIExpression()), !dbg !9145
  br label %27, !dbg !9172

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9142, metadata !DIExpression()), !dbg !9145
  br label %27, !dbg !9173

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9145
  call void @llvm.dbg.value(metadata i32 %28, metadata !9142, metadata !DIExpression()), !dbg !9145
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9174
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9175
  br label %29, !dbg !9175

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9145
  call void @llvm.dbg.value(metadata i32 %30, metadata !9143, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.label(metadata !9144), !dbg !9176
  ret i32 %30, !dbg !9177
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9178 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9180, metadata !DIExpression()), !dbg !9184
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9181, metadata !DIExpression()), !dbg !9184
  call void @llvm.dbg.value(metadata i1 %2, metadata !9182, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9184
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9185
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9185
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9185
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9183, metadata !DIExpression()), !dbg !9184
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9186
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9187
  ret i32 %8, !dbg !9188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9189 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9195, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9196, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata i1 %2, metadata !9197, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9198
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9199
  br i1 %4, label %5, label %6, !dbg !9202

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.132, i32 0, i32 0), i32 noundef 42) #25, !dbg !9203
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.133, i32 0, i32 0)) #25, !dbg !9203
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.132, i32 0, i32 0), i32 noundef 42) #25, !dbg !9203
  unreachable, !dbg !9203

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9205
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9205
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9205
  br i1 %9, label %10, label %11, !dbg !9208

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.132, i32 0, i32 0), i32 noundef 43) #25, !dbg !9209
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.135, i32 0, i32 0)) #25, !dbg !9209
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.132, i32 0, i32 0), i32 noundef 43) #25, !dbg !9209
  unreachable, !dbg !9209

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9211
  br i1 %12, label %18, label %13, !dbg !9213

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9214
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9217
  %16 = or i1 %15, %2, !dbg !9218
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9218
  br i1 %2, label %19, label %21, !dbg !9218

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9219

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9220
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9223
  br label %21, !dbg !9224

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9198
  ret i32 %22, !dbg !9225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9226 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9230, metadata !DIExpression()), !dbg !9231
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9232
  %3 = icmp eq %struct._snode* %2, null, !dbg !9232
  ret i1 %3, !dbg !9232
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9233 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9237, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9238, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9239, metadata !DIExpression()), !dbg !9241
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9242
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9240, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9239, metadata !DIExpression()), !dbg !9241
  %4 = icmp eq %struct._snode* %3, null, !dbg !9244
  br i1 %4, label %15, label %5, !dbg !9242

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9240, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9239, metadata !DIExpression()), !dbg !9241
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9246
  br i1 %6, label %9, label %11, !dbg !9249

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9240, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9239, metadata !DIExpression()), !dbg !9241
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9246
  br i1 %8, label %9, label %11, !dbg !9249, !llvm.loop !9250

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9251
  br label %15, !dbg !9251

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9240, metadata !DIExpression()), !dbg !9241
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9239, metadata !DIExpression()), !dbg !9241
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9244
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9240, metadata !DIExpression()), !dbg !9241
  %14 = icmp eq %struct._snode* %13, null, !dbg !9244
  br i1 %14, label %15, label %7, !dbg !9242, !llvm.loop !9250

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9253
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9254 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9258, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9259, metadata !DIExpression()), !dbg !9260
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9261
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9261
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9261
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9262
  %5 = icmp eq %struct._snode* %4, null, !dbg !9262
  br i1 %5, label %6, label %8, !dbg !9261

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9264
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9264
  br label %8, !dbg !9264

8:                                                ; preds = %6, %2
  ret void, !dbg !9261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9266 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9270, metadata !DIExpression()), !dbg !9271
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9272
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9272
  ret %struct._snode* %3, !dbg !9273
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9278, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9279, metadata !DIExpression()), !dbg !9280
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9281
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9282
  ret void, !dbg !9283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9286, metadata !DIExpression()), !dbg !9288
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9287, metadata !DIExpression()), !dbg !9288
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9289
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9290
  ret void, !dbg !9291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9292 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9294, metadata !DIExpression()), !dbg !9295
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9296
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9296
  ret %struct._snode* %3, !dbg !9297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9298 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9300, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9301, metadata !DIExpression()), !dbg !9302
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9303
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9304
  ret void, !dbg !9305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9306 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9310, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9311, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9312, metadata !DIExpression()), !dbg !9313
  %4 = icmp eq %struct._snode* %1, null, !dbg !9314
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9316
  br i1 %4, label %6, label %11, !dbg !9317

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9318
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9320
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9320
  br i1 %8, label %9, label %15, !dbg !9318

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9322
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9322
  br label %15, !dbg !9322

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9324
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9326
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9326
  br i1 %13, label %14, label %15, !dbg !9324

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9328
  br label %15, !dbg !9328

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9317
  ret void, !dbg !9317
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9330 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9334, metadata !DIExpression()), !dbg !9335
  %2 = icmp eq %struct._snode* %0, null, !dbg !9336
  br i1 %2, label %5, label %3, !dbg !9336

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9336
  br label %5, !dbg !9336

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9336
  ret %struct._snode* %6, !dbg !9336
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9337 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9339, metadata !DIExpression()), !dbg !9340
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9341
  ret %struct._snode* %2, !dbg !9341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9342 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9344, metadata !DIExpression()), !dbg !9345
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9346
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9346
  ret %struct._snode* %3, !dbg !9347
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9350, metadata !DIExpression()), !dbg !9353
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9354, !range !9355
  call void @llvm.dbg.value(metadata i32 %2, metadata !9351, metadata !DIExpression()), !dbg !9353
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9356
  call void @llvm.dbg.value(metadata i32 %3, metadata !9352, metadata !DIExpression()), !dbg !9353
  ret i32 %3, !dbg !9357
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9360, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata i8* %1, metadata !9361, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata i8* %1, metadata !9362, metadata !DIExpression()), !dbg !9363
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9364
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9364
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9365
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9365
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9365
  %8 = shl nuw i32 1, %0, !dbg !9366
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9367
  ret void, !dbg !9368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9369 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9373, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.value(metadata i32 %1, metadata !9374, metadata !DIExpression()), !dbg !9379
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9375, metadata !DIExpression()), !dbg !9379
  %4 = bitcast i64* %3 to i8*, !dbg !9380
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9380
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !9377, metadata !DIExpression()), !dbg !9379
  store i64 4294967328, i64* %3, align 8, !dbg !9381
  call void @llvm.dbg.value(metadata i64* %3, metadata !9377, metadata !DIExpression(DW_OP_deref)), !dbg !9379
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9382
  call void @llvm.dbg.value(metadata i32 %5, metadata !9378, metadata !DIExpression()), !dbg !9379
  %6 = icmp eq i32 %5, 0, !dbg !9383
  br i1 %6, label %7, label %8, !dbg !9385

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9386
  br label %8, !dbg !9387

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9388
  ret void, !dbg !9388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9389 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9391, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata i8* %0, metadata !9392, metadata !DIExpression()), !dbg !9394
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9395
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9393, metadata !DIExpression()), !dbg !9394
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9396
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9396
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !9397
  ret i32 %5, !dbg !9398
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9399 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9401, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.value(metadata i32 %1, metadata !9402, metadata !DIExpression()), !dbg !9404
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %3, metadata !9403, metadata !DIExpression()), !dbg !9404
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9406
  ret void, !dbg !9407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !9408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9412, metadata !DIExpression()), !dbg !9413
  %2 = sdiv i32 %0, 4, !dbg !9414
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9415
  %6 = add nsw i32 %5, 16, !dbg !9416
  %7 = shl i32 15, %6, !dbg !9417
  %8 = or i32 %7, %2, !dbg !9418
  ret i32 %8, !dbg !9419
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9425, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.value(metadata i32 %1, metadata !9426, metadata !DIExpression()), !dbg !9427
  %3 = and i32 %1, 3, !dbg !9428
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !9428
  %5 = load volatile i32, i32* %4, align 4, !dbg !9428
  %6 = lshr i32 %1, 16, !dbg !9428
  %7 = xor i32 %6, -1, !dbg !9428
  %8 = and i32 %5, %7, !dbg !9428
  call void @llvm.dbg.value(metadata i32 %6, metadata !9429, metadata !DIExpression()) #23, !dbg !9433
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9435, !srcloc !9436
  call void @llvm.dbg.value(metadata i32 %9, metadata !9432, metadata !DIExpression()) #23, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %9, metadata !9437, metadata !DIExpression()) #23, !dbg !9442
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9444, !range !7540
  %11 = shl i32 %0, %10, !dbg !9428
  %12 = or i32 %11, %8, !dbg !9428
  store volatile i32 %12, i32* %4, align 4, !dbg !9428
  ret void, !dbg !9445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9446 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9450, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9451, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i32 %2, metadata !9452, metadata !DIExpression()), !dbg !9455
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9456
  %5 = icmp eq %struct._snode* %4, null, !dbg !9456
  br i1 %5, label %24, label %6, !dbg !9456

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9458
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9454, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9453, metadata !DIExpression()), !dbg !9455
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9459
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9459
  %12 = load i32, i32* %11, align 4, !dbg !9459
  %13 = and i32 %12, %2, !dbg !9463
  %14 = icmp eq i32 %13, 0, !dbg !9463
  br i1 %14, label %22, label %15, !dbg !9464

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9465
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9465
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9465
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9465
  br i1 %19, label %20, label %21, !dbg !9469

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29.136, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.132, i32 0, i32 0), i32 noundef 77) #25, !dbg !9470
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.135, i32 0, i32 0)) #25, !dbg !9470
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.132, i32 0, i32 0), i32 noundef 77) #25, !dbg !9470
  unreachable, !dbg !9470

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9472
  br label %22, !dbg !9473

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9453, metadata !DIExpression()), !dbg !9455
  %23 = icmp eq %struct._snode* %8, null, !dbg !9474
  br i1 %23, label %24, label %6, !dbg !9474

24:                                               ; preds = %22, %3
  ret void, !dbg !9475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9478, metadata !DIExpression()), !dbg !9479
  %2 = and i32 %0, 3, !dbg !9480
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !9480
  %4 = load volatile i32, i32* %3, align 4, !dbg !9480
  %5 = lshr i32 %0, 16, !dbg !9480
  %6 = and i32 %4, %5, !dbg !9480
  call void @llvm.dbg.value(metadata i32 %5, metadata !9429, metadata !DIExpression()) #23, !dbg !9481
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9483, !srcloc !9436
  call void @llvm.dbg.value(metadata i32 %7, metadata !9432, metadata !DIExpression()) #23, !dbg !9481
  call void @llvm.dbg.value(metadata i32 %7, metadata !9437, metadata !DIExpression()) #23, !dbg !9484
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9486, !range !7540
  %9 = lshr i32 %6, %8, !dbg !9487
  ret i32 %9, !dbg !9488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9489 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9494, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.value(metadata i32 %1, metadata !9495, metadata !DIExpression()), !dbg !9496
  %3 = shl i32 %1, 16, !dbg !9497
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9497
  store volatile i32 %3, i32* %4, align 4, !dbg !9497
  ret void, !dbg !9498
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9499 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9503, metadata !DIExpression()), !dbg !9504
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9505
  %3 = load volatile i32, i32* %2, align 4, !dbg !9505
  ret i32 %3, !dbg !9506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !9507 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9509, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.value(metadata i32 %1, metadata !9510, metadata !DIExpression()), !dbg !9511
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9512
  store volatile i32 %1, i32* %3, align 4, !dbg !9512
  ret void, !dbg !9513
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !9514 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9516, metadata !DIExpression()), !dbg !9517
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9518
  %3 = load volatile i32, i32* %2, align 4, !dbg !9518
  ret i32 %3, !dbg !9519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9520 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9524, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.value(metadata i32* %1, metadata !9525, metadata !DIExpression()), !dbg !9526
  %3 = and i32 %0, 131072, !dbg !9527
  %4 = icmp eq i32 %3, 0, !dbg !9529
  br i1 %4, label %22, label %5, !dbg !9530

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9531
  %6 = and i32 %0, 2, !dbg !9533
  %7 = icmp eq i32 %6, 0, !dbg !9535
  br i1 %7, label %11, label %8, !dbg !9536

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9537
  %10 = icmp eq i32 %9, 0, !dbg !9537
  br i1 %10, label %33, label %11, !dbg !9540

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9541
  store i32 %12, i32* %1, align 4, !dbg !9541
  %13 = and i32 %0, 16, !dbg !9542
  %14 = icmp eq i32 %13, 0, !dbg !9544
  br i1 %14, label %17, label %15, !dbg !9545

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9546
  br label %31, !dbg !9548

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9549
  %19 = icmp eq i32 %18, 0, !dbg !9551
  br i1 %19, label %33, label %20, !dbg !9552

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9553
  br label %31, !dbg !9555

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9556
  %24 = icmp eq i32 %23, 0, !dbg !9558
  br i1 %24, label %31, label %25, !dbg !9559

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9560
  %27 = icmp eq i32 %26, 0, !dbg !9563
  br i1 %27, label %28, label %31, !dbg !9564

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9565
  br label %33, !dbg !9566

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9526
  ret i32 %34, !dbg !9566
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9567 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9571, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 %1, metadata !9572, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 %2, metadata !9573, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 %3, metadata !9574, metadata !DIExpression()), !dbg !9582
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9583
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9583
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9583
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9575, metadata !DIExpression()), !dbg !9582
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9584
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9584
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9584
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9576, metadata !DIExpression()), !dbg !9582
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9585
  call void @llvm.dbg.value(metadata i32 %11, metadata !9577, metadata !DIExpression()), !dbg !9582
  %12 = and i32 %2, 48, !dbg !9586
  call void @llvm.dbg.value(metadata i32 %12, metadata !9578, metadata !DIExpression()), !dbg !9582
  call void @llvm.dbg.value(metadata i32 %2, metadata !9579, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9582
  call void @llvm.dbg.value(metadata i32 %2, metadata !9580, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9582
  call void @llvm.dbg.value(metadata i32 %2, metadata !9581, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9582
  %13 = lshr i32 %2, 6, !dbg !9587
  %14 = and i32 %13, 1, !dbg !9587
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9588
  %15 = lshr i32 %2, 7, !dbg !9589
  %16 = and i32 %15, 3, !dbg !9589
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9590
  %17 = lshr i32 %2, 9, !dbg !9591
  %18 = and i32 %17, 3, !dbg !9591
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9592
  %19 = icmp eq i32 %12, 32, !dbg !9593
  br i1 %19, label %20, label %24, !dbg !9595

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9596
  br i1 %21, label %22, label %23, !dbg !9599

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9600
  br label %24, !dbg !9602

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9603
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9605
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9606
  ret void, !dbg !9607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9610, metadata !DIExpression()), !dbg !9612
  %2 = shl nuw i32 1, %0, !dbg !9613
  call void @llvm.dbg.value(metadata i32 %2, metadata !9611, metadata !DIExpression()), !dbg !9612
  ret i32 %2, !dbg !9614
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9615 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9619, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i32 %1, metadata !9620, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i32 %2, metadata !9621, metadata !DIExpression()), !dbg !9622
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9623
  %5 = load volatile i32, i32* %4, align 4, !dbg !9623
  %6 = xor i32 %1, -1, !dbg !9623
  %7 = and i32 %5, %6, !dbg !9623
  %8 = mul i32 %2, %1, !dbg !9623
  %9 = or i32 %7, %8, !dbg !9623
  store volatile i32 %9, i32* %4, align 4, !dbg !9623
  ret void, !dbg !9624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9625 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9627, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %1, metadata !9628, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.value(metadata i32 %2, metadata !9629, metadata !DIExpression()), !dbg !9630
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9631
  %5 = load volatile i32, i32* %4, align 4, !dbg !9631
  call void @llvm.dbg.value(metadata i32 %1, metadata !9429, metadata !DIExpression()) #23, !dbg !9632
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9634, !srcloc !9436
  call void @llvm.dbg.value(metadata i32 %6, metadata !9432, metadata !DIExpression()) #23, !dbg !9632
  call void @llvm.dbg.value(metadata i32 %6, metadata !9437, metadata !DIExpression()) #23, !dbg !9635
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9637, !range !7540
  %8 = shl nuw nsw i32 %7, 1, !dbg !9631
  %9 = shl i32 3, %8, !dbg !9631
  %10 = xor i32 %9, -1, !dbg !9631
  %11 = and i32 %5, %10, !dbg !9631
  call void @llvm.dbg.value(metadata i32 %1, metadata !9429, metadata !DIExpression()) #23, !dbg !9638
  call void @llvm.dbg.value(metadata i32 %6, metadata !9432, metadata !DIExpression()) #23, !dbg !9638
  call void @llvm.dbg.value(metadata i32 %6, metadata !9437, metadata !DIExpression()) #23, !dbg !9640
  %12 = shl i32 %2, %8, !dbg !9631
  %13 = or i32 %11, %12, !dbg !9631
  store volatile i32 %13, i32* %4, align 4, !dbg !9631
  ret void, !dbg !9642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9643 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9645, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.value(metadata i32 %1, metadata !9646, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.value(metadata i32 %2, metadata !9647, metadata !DIExpression()), !dbg !9648
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9649
  %5 = load volatile i32, i32* %4, align 4, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %1, metadata !9429, metadata !DIExpression()) #23, !dbg !9650
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9652, !srcloc !9436
  call void @llvm.dbg.value(metadata i32 %6, metadata !9432, metadata !DIExpression()) #23, !dbg !9650
  call void @llvm.dbg.value(metadata i32 %6, metadata !9437, metadata !DIExpression()) #23, !dbg !9653
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9655, !range !7540
  %8 = shl nuw nsw i32 %7, 1, !dbg !9649
  %9 = shl i32 3, %8, !dbg !9649
  %10 = xor i32 %9, -1, !dbg !9649
  %11 = and i32 %5, %10, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %1, metadata !9429, metadata !DIExpression()) #23, !dbg !9656
  call void @llvm.dbg.value(metadata i32 %6, metadata !9432, metadata !DIExpression()) #23, !dbg !9656
  call void @llvm.dbg.value(metadata i32 %6, metadata !9437, metadata !DIExpression()) #23, !dbg !9658
  %12 = shl i32 %2, %8, !dbg !9649
  %13 = or i32 %11, %12, !dbg !9649
  store volatile i32 %13, i32* %4, align 4, !dbg !9649
  ret void, !dbg !9660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9661 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9663, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.value(metadata i32 %1, metadata !9664, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.value(metadata i32 %2, metadata !9665, metadata !DIExpression()), !dbg !9666
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9667
  %5 = load volatile i32, i32* %4, align 4, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %1, metadata !9429, metadata !DIExpression()) #23, !dbg !9668
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9670, !srcloc !9436
  call void @llvm.dbg.value(metadata i32 %6, metadata !9432, metadata !DIExpression()) #23, !dbg !9668
  call void @llvm.dbg.value(metadata i32 %6, metadata !9437, metadata !DIExpression()) #23, !dbg !9671
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9673, !range !7540
  %8 = shl nuw nsw i32 %7, 2, !dbg !9667
  %9 = shl i32 15, %8, !dbg !9667
  %10 = xor i32 %9, -1, !dbg !9667
  %11 = and i32 %5, %10, !dbg !9667
  call void @llvm.dbg.value(metadata i32 %1, metadata !9429, metadata !DIExpression()) #23, !dbg !9674
  call void @llvm.dbg.value(metadata i32 %6, metadata !9432, metadata !DIExpression()) #23, !dbg !9674
  call void @llvm.dbg.value(metadata i32 %6, metadata !9437, metadata !DIExpression()) #23, !dbg !9676
  %12 = shl i32 %2, %8, !dbg !9667
  %13 = or i32 %11, %12, !dbg !9667
  store volatile i32 %13, i32* %4, align 4, !dbg !9667
  ret void, !dbg !9678
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9679 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9681, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i32 %1, metadata !9682, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i32 %2, metadata !9683, metadata !DIExpression()), !dbg !9684
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9685
  %5 = load volatile i32, i32* %4, align 4, !dbg !9685
  %6 = lshr i32 %1, 8, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %6, metadata !9429, metadata !DIExpression()) #23, !dbg !9686
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9688, !srcloc !9436
  call void @llvm.dbg.value(metadata i32 %7, metadata !9432, metadata !DIExpression()) #23, !dbg !9686
  call void @llvm.dbg.value(metadata i32 %7, metadata !9437, metadata !DIExpression()) #23, !dbg !9689
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9691, !range !7540
  %9 = shl nuw nsw i32 %8, 2, !dbg !9685
  %10 = shl i32 15, %9, !dbg !9685
  %11 = xor i32 %10, -1, !dbg !9685
  %12 = and i32 %5, %11, !dbg !9685
  call void @llvm.dbg.value(metadata i32 %6, metadata !9429, metadata !DIExpression()) #23, !dbg !9692
  call void @llvm.dbg.value(metadata i32 %7, metadata !9432, metadata !DIExpression()) #23, !dbg !9692
  call void @llvm.dbg.value(metadata i32 %7, metadata !9437, metadata !DIExpression()) #23, !dbg !9694
  %13 = shl i32 %2, %9, !dbg !9685
  %14 = or i32 %12, %13, !dbg !9685
  store volatile i32 %14, i32* %4, align 4, !dbg !9685
  ret void, !dbg !9696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9697 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9699, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 %1, metadata !9700, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 %2, metadata !9701, metadata !DIExpression()), !dbg !9702
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9703
  %5 = load volatile i32, i32* %4, align 4, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %1, metadata !9429, metadata !DIExpression()) #23, !dbg !9704
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9706, !srcloc !9436
  call void @llvm.dbg.value(metadata i32 %6, metadata !9432, metadata !DIExpression()) #23, !dbg !9704
  call void @llvm.dbg.value(metadata i32 %6, metadata !9437, metadata !DIExpression()) #23, !dbg !9707
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9709, !range !7540
  %8 = shl nuw nsw i32 %7, 1, !dbg !9703
  %9 = shl i32 3, %8, !dbg !9703
  %10 = xor i32 %9, -1, !dbg !9703
  %11 = and i32 %5, %10, !dbg !9703
  call void @llvm.dbg.value(metadata i32 %1, metadata !9429, metadata !DIExpression()) #23, !dbg !9710
  call void @llvm.dbg.value(metadata i32 %6, metadata !9432, metadata !DIExpression()) #23, !dbg !9710
  call void @llvm.dbg.value(metadata i32 %6, metadata !9437, metadata !DIExpression()) #23, !dbg !9712
  %12 = shl i32 %2, %8, !dbg !9703
  %13 = or i32 %11, %12, !dbg !9703
  store volatile i32 %13, i32* %4, align 4, !dbg !9703
  ret void, !dbg !9714
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9715 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9717, metadata !DIExpression()), !dbg !9720
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9721
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9721
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9721
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9718, metadata !DIExpression()), !dbg !9720
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9722
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9723
  %6 = tail call fastcc zeroext i1 @device_is_ready.145() #24, !dbg !9724
  br i1 %6, label %7, label %11, !dbg !9726

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9727
  call void @llvm.dbg.value(metadata i32 %8, metadata !9719, metadata !DIExpression()), !dbg !9720
  %9 = icmp slt i32 %8, 0, !dbg !9728
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9730
  br label %11, !dbg !9730

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9720
  ret i32 %12, !dbg !9731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.145() unnamed_addr #1 !dbg !9732 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9736, metadata !DIExpression()), !dbg !9737
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9738, !srcloc !9740
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.146() #24, !dbg !9741
  ret i1 %1, !dbg !9742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9743 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9747, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.value(metadata i8 1, metadata !9748, metadata !DIExpression()), !dbg !9752
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9753
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9753
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9753
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9749, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.value(metadata i32 0, metadata !9750, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9751, metadata !DIExpression()), !dbg !9752
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9754
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9757
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9758
  call void @llvm.dbg.value(metadata i32 %7, metadata !9750, metadata !DIExpression()), !dbg !9752
  ret i32 %7, !dbg !9759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.146() unnamed_addr #1 !dbg !9760 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !9762, metadata !DIExpression()), !dbg !9763
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !9764
  ret i1 %1, !dbg !9765
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9766 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9770, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32 %1, metadata !9771, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32 %2, metadata !9772, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32 %3, metadata !9773, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32 0, metadata !9774, metadata !DIExpression()), !dbg !9778
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9779
  %5 = icmp eq i32 %3, 17, !dbg !9780
  br i1 %5, label %6, label %14, !dbg !9781

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9782
  call void @llvm.dbg.value(metadata i32 %7, metadata !9775, metadata !DIExpression()), !dbg !9783
  %8 = icmp eq i32 %7, 0, !dbg !9784
  %9 = shl nuw i32 1, %1, !dbg !9786
  br i1 %8, label %12, label %10, !dbg !9787

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9788
  br label %14, !dbg !9790

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9791
  br label %14, !dbg !9794

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9795
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #14 !dbg !9796 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9798, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.value(metadata i8* %1, metadata !9799, metadata !DIExpression()), !dbg !9802
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9803
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9803
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9803
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9800, metadata !DIExpression()), !dbg !9802
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9804
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9804
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9806
  %9 = icmp eq i32 %8, 0, !dbg !9806
  br i1 %9, label %12, label %10, !dbg !9807

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9808
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9810
  br label %12, !dbg !9811

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9812
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9814
  %15 = icmp eq i32 %14, 0, !dbg !9814
  br i1 %15, label %19, label %16, !dbg !9815

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9816
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9817
  store i8 %18, i8* %1, align 1, !dbg !9818
  br label %19, !dbg !9819

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9802
  ret i32 %20, !dbg !9820
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9821 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9823, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.value(metadata i8 %1, metadata !9824, metadata !DIExpression()), !dbg !9827
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9828
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9828
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9828
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9825, metadata !DIExpression()), !dbg !9827
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9829

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9830
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9833
  %10 = icmp eq i32 %9, 0, !dbg !9833
  br i1 %10, label %18, label %11, !dbg !9834

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9835, !srcloc !9842
  call void @llvm.dbg.value(metadata i32 undef, metadata !9838, metadata !DIExpression()) #23, !dbg !9843
  call void @llvm.dbg.value(metadata i32 undef, metadata !9839, metadata !DIExpression()) #23, !dbg !9843
  call void @llvm.dbg.value(metadata i32 undef, metadata !9826, metadata !DIExpression()), !dbg !9827
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9844
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9846
  %15 = icmp eq i32 %14, 0, !dbg !9846
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9835
  br i1 %15, label %17, label %19, !dbg !9847

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9838, metadata !DIExpression()) #23, !dbg !9843
  call void @llvm.dbg.value(metadata i32 %16, metadata !9826, metadata !DIExpression()), !dbg !9827
  call void @llvm.dbg.value(metadata i32 undef, metadata !9848, metadata !DIExpression()) #23, !dbg !9851
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9853, !srcloc !9854
  br label %18, !dbg !9855

18:                                               ; preds = %17, %7
  br label %7, !dbg !9830, !llvm.loop !9856

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9835
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9858
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %20, metadata !9848, metadata !DIExpression()) #23, !dbg !9860
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9862, !srcloc !9854
  ret void, !dbg !9863
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #14 !dbg !9864 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9866, metadata !DIExpression()), !dbg !9869
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9870
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9870
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9870
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9867, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.value(metadata i32 0, metadata !9868, metadata !DIExpression()), !dbg !9869
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9871
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9871
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9873
  %8 = icmp ne i32 %7, 0, !dbg !9873
  %9 = zext i1 %8 to i32, !dbg !9874
  call void @llvm.dbg.value(metadata i32 %9, metadata !9868, metadata !DIExpression()), !dbg !9869
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9875
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9877
  %12 = icmp eq i32 %11, 0, !dbg !9877
  %13 = or i32 %9, 2, !dbg !9878
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9878
  call void @llvm.dbg.value(metadata i32 %14, metadata !9868, metadata !DIExpression()), !dbg !9869
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9879
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9881
  %17 = icmp eq i32 %16, 0, !dbg !9881
  %18 = or i32 %14, 4, !dbg !9882
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9882
  call void @llvm.dbg.value(metadata i32 %19, metadata !9868, metadata !DIExpression()), !dbg !9869
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9883
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9885
  %22 = icmp eq i32 %21, 0, !dbg !9885
  %23 = or i32 %19, 8, !dbg !9886
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9886
  call void @llvm.dbg.value(metadata i32 %24, metadata !9868, metadata !DIExpression()), !dbg !9869
  %25 = and i32 %24, 8, !dbg !9887
  %26 = icmp eq i32 %25, 0, !dbg !9887
  br i1 %26, label %29, label %27, !dbg !9889

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9890
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9892
  br label %29, !dbg !9893

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9894
  %31 = icmp eq i32 %30, 0, !dbg !9894
  br i1 %31, label %34, label %32, !dbg !9896

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9897
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9899
  br label %34, !dbg !9900

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9901
  %36 = icmp eq i32 %35, 0, !dbg !9901
  br i1 %36, label %39, label %37, !dbg !9903

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9904
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9906
  br label %39, !dbg !9907

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9908
  %41 = icmp eq i32 %40, 0, !dbg !9908
  br i1 %41, label %44, label %42, !dbg !9910

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9911
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9913
  br label %44, !dbg !9914

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9915
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9916
  ret i32 %24, !dbg !9917
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9918 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9920, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9921, metadata !DIExpression()), !dbg !9929
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9930
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9930
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9930
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9922, metadata !DIExpression()), !dbg !9929
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9931
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9931
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9931
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9923, metadata !DIExpression()), !dbg !9929
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9932
  %10 = load i8, i8* %9, align 4, !dbg !9932
  %11 = zext i8 %10 to i32, !dbg !9933
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9934
  call void @llvm.dbg.value(metadata i32 %12, metadata !9925, metadata !DIExpression()), !dbg !9929
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9935
  %14 = load i8, i8* %13, align 1, !dbg !9935
  %15 = zext i8 %14 to i32, !dbg !9936
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9937
  call void @llvm.dbg.value(metadata i32 %16, metadata !9926, metadata !DIExpression()), !dbg !9929
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9938
  %18 = load i8, i8* %17, align 2, !dbg !9938
  %19 = zext i8 %18 to i32, !dbg !9939
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9940
  call void @llvm.dbg.value(metadata i32 %20, metadata !9927, metadata !DIExpression()), !dbg !9929
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9941
  %22 = load i8, i8* %21, align 1, !dbg !9941
  %23 = zext i8 %22 to i32, !dbg !9942
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %24, metadata !9928, metadata !DIExpression()), !dbg !9929
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9944

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9946
  br i1 %26, label %69, label %27, !dbg !9948

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9949

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9950
  br i1 %29, label %65, label %30, !dbg !9950

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9952
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9929
  br i1 %31, label %38, label %34, !dbg !9954

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9955
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9955

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9958
  br i1 %37, label %38, label %69, !dbg !9959

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9960
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9961
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9962
  %41 = icmp eq i32 %12, %40, !dbg !9964
  br i1 %41, label %43, label %42, !dbg !9965

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9966
  br label %43, !dbg !9968

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9969
  %45 = icmp eq i32 %16, %44, !dbg !9971
  br i1 %45, label %47, label %46, !dbg !9972

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9973
  br label %47, !dbg !9975

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9976
  %49 = icmp eq i32 %20, %48, !dbg !9978
  br i1 %49, label %51, label %50, !dbg !9979

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9980
  br label %51, !dbg !9982

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9983
  %53 = icmp eq i32 %24, %52, !dbg !9985
  br i1 %53, label %55, label %54, !dbg !9986

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9987
  br label %55, !dbg !9989

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9990
  %57 = load i32, i32* %56, align 4, !dbg !9990
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9992
  %59 = load i32, i32* %58, align 4, !dbg !9992
  %60 = icmp eq i32 %57, %59, !dbg !9993
  br i1 %60, label %63, label %61, !dbg !9994

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !9995
  %62 = load i32, i32* %56, align 4, !dbg !9997
  store i32 %62, i32* %58, align 4, !dbg !9998
  br label %63, !dbg !9999

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10000
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10001
  br label %69, !dbg !10002

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9950
  %67 = and i8 %66, 1, !dbg !9950
  %68 = icmp eq i8 %67, 0, !dbg !9950
  br i1 %68, label %30, label %69, !dbg !9950

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9929
  ret i32 %70, !dbg !10003
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10004 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10006, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10007, metadata !DIExpression()), !dbg !10009
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10010
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10010
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10010
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10008, metadata !DIExpression()), !dbg !10009
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10011
  %7 = load i32, i32* %6, align 4, !dbg !10011
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10012
  store i32 %7, i32* %8, align 4, !dbg !10013
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10014, !range !10015
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10016
  %11 = trunc i32 %10 to i8, !dbg !10016
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10017
  store i8 %11, i8* %12, align 4, !dbg !10018
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10019, !range !10020
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10021
  %15 = trunc i32 %14 to i8, !dbg !10021
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10022
  store i8 %15, i8* %16, align 1, !dbg !10023
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10024
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10025, !range !10015
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10026
  %20 = trunc i32 %19 to i8, !dbg !10026
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10027
  store i8 %20, i8* %21, align 2, !dbg !10028
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10029, !range !10030
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10031
  %24 = trunc i32 %23 to i8, !dbg !10031
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10032
  store i8 %24, i8* %25, align 1, !dbg !10033
  ret i32 0, !dbg !10034
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10035 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10039, metadata !DIExpression()), !dbg !10041
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10042
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10042
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10042
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10040, metadata !DIExpression()), !dbg !10041
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10043
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10043
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10044
  ret i32 %7, !dbg !10045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10050, metadata !DIExpression()), !dbg !10051
  %2 = icmp eq i32 %0, 1024, !dbg !10052
  %3 = select i1 %2, i32 2, i32 0, !dbg !10052
  %4 = icmp eq i32 %0, 1536, !dbg !10052
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10052
  ret i32 %5, !dbg !10053
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10054 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10056, metadata !DIExpression()), !dbg !10058
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10059
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10059
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10059
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10057, metadata !DIExpression()), !dbg !10058
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10060
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10060
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10061
  ret i32 %7, !dbg !10062
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10067, metadata !DIExpression()), !dbg !10068
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10069
  %3 = icmp ult i32 %2, 4, !dbg !10069
  br i1 %3, label %4, label %7, !dbg !10069

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10069
  %6 = load i32, i32* %5, align 4, !dbg !10069
  br label %7, !dbg !10069

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10070
  ret i32 %8, !dbg !10072
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10073 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10075, metadata !DIExpression()), !dbg !10077
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10078
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10078
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10078
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10076, metadata !DIExpression()), !dbg !10077
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10079
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10079
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10080
  ret i32 %7, !dbg !10081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10086, metadata !DIExpression()), !dbg !10088
  call void @llvm.dbg.value(metadata i32 %1, metadata !10087, metadata !DIExpression()), !dbg !10088
  %3 = icmp eq i32 %0, 4096, !dbg !10089
  %4 = icmp eq i32 %1, 0, !dbg !10089
  %5 = select i1 %4, i32 4, i32 3, !dbg !10089
  %6 = select i1 %4, i32 3, i32 2, !dbg !10089
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10089
  ret i32 %7, !dbg !10090
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10091 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10093, metadata !DIExpression()), !dbg !10095
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10096
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10096
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10096
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10094, metadata !DIExpression()), !dbg !10095
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10097
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10097
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10098
  ret i32 %7, !dbg !10099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10104, metadata !DIExpression()), !dbg !10105
  %2 = icmp eq i32 %0, 768, !dbg !10106
  %3 = zext i1 %2 to i32, !dbg !10105
  ret i32 %3, !dbg !10108
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10109 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10114, metadata !DIExpression()), !dbg !10115
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10116
  %3 = load volatile i32, i32* %2, align 4, !dbg !10116
  %4 = and i32 %3, 768, !dbg !10116
  ret i32 %4, !dbg !10117
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10118 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10120, metadata !DIExpression()), !dbg !10121
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10122
  %3 = load volatile i32, i32* %2, align 4, !dbg !10122
  %4 = and i32 %3, 4096, !dbg !10122
  ret i32 %4, !dbg !10123
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10124 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10126, metadata !DIExpression()), !dbg !10127
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10128
  %3 = load volatile i32, i32* %2, align 4, !dbg !10128
  %4 = and i32 %3, 12288, !dbg !10128
  ret i32 %4, !dbg !10129
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10130 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10132, metadata !DIExpression()), !dbg !10133
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10134
  %3 = load volatile i32, i32* %2, align 4, !dbg !10134
  %4 = and i32 %3, 1536, !dbg !10134
  ret i32 %4, !dbg !10135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10140, metadata !DIExpression()), !dbg !10141
  %2 = icmp eq i32 %0, 2, !dbg !10142
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10142
  %4 = icmp eq i32 %0, 1, !dbg !10142
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10142
  ret i32 %5, !dbg !10143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10148, metadata !DIExpression()), !dbg !10149
  %2 = icmp ult i32 %0, 3, !dbg !10150
  br i1 %2, label %3, label %6, !dbg !10150

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10150
  %5 = load i32, i32* %4, align 4, !dbg !10150
  br label %6, !dbg !10150

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10151
  ret i32 %7, !dbg !10153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10158, metadata !DIExpression()), !dbg !10160
  call void @llvm.dbg.value(metadata i32 %1, metadata !10159, metadata !DIExpression()), !dbg !10160
  %3 = icmp eq i32 %0, 4, !dbg !10161
  %4 = icmp eq i32 %1, 0, !dbg !10161
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10161
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10161
  ret i32 %6, !dbg !10162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10167, metadata !DIExpression()), !dbg !10168
  %2 = icmp eq i32 %0, 1, !dbg !10169
  %3 = select i1 %2, i32 768, i32 0, !dbg !10168
  ret i32 %3, !dbg !10171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10172 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10176, metadata !DIExpression()), !dbg !10177
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10178
  %3 = load volatile i32, i32* %2, align 4, !dbg !10178
  %4 = and i32 %3, -8193, !dbg !10178
  store volatile i32 %4, i32* %2, align 4, !dbg !10178
  ret void, !dbg !10179
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10180 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10184, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %1, metadata !10185, metadata !DIExpression()), !dbg !10187
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10188
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10188
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10188
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10186, metadata !DIExpression()), !dbg !10187
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10189
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10189
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10190
  ret void, !dbg !10191
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10194, metadata !DIExpression()), !dbg !10197
  call void @llvm.dbg.value(metadata i32 %1, metadata !10195, metadata !DIExpression()), !dbg !10197
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10198
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10198
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10198
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10196, metadata !DIExpression()), !dbg !10197
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10199
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10199
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10200
  ret void, !dbg !10201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10202 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10204, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.value(metadata i32 %1, metadata !10205, metadata !DIExpression()), !dbg !10207
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10208
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10208
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10208
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10206, metadata !DIExpression()), !dbg !10207
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10209
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10209
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10210
  ret void, !dbg !10211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10212 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10214, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.value(metadata i32 %1, metadata !10215, metadata !DIExpression()), !dbg !10217
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10218
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10218
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10218
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10216, metadata !DIExpression()), !dbg !10217
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10219
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10219
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10220
  ret void, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10222 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10224, metadata !DIExpression()), !dbg !10229
  call void @llvm.dbg.value(metadata i32 %1, metadata !10225, metadata !DIExpression()), !dbg !10229
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10230
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10230
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10230
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10226, metadata !DIExpression()), !dbg !10229
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10231
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10231
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10231
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10227, metadata !DIExpression()), !dbg !10229
  %10 = bitcast i32* %3 to i8*, !dbg !10232
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10232
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10233
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10233
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10237
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10237
  %15 = load i8*, i8** %14, align 4, !dbg !10237
  call void @llvm.dbg.value(metadata i32* %3, metadata !10228, metadata !DIExpression(DW_OP_deref)), !dbg !10229
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10238
  %17 = icmp slt i32 %16, 0, !dbg !10239
  br i1 %17, label %18, label %21, !dbg !10240

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.149(i32 noundef 1) #24, !dbg !10241
  %20 = zext i8 %19 to i32, !dbg !10241
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.150, i32 0, i32 0), i32 noundef %20) #25, !dbg !10241
  br label %31, !dbg !10247

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10248
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10248
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10249
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10250
  %25 = load i32, i32* %3, align 4, !dbg !10251
  call void @llvm.dbg.value(metadata i32 %25, metadata !10228, metadata !DIExpression()), !dbg !10229
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10252
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10253
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10253
  %28 = load volatile i32, i32* %27, align 4, !dbg !10253
  %29 = icmp ugt i32 %28, 16, !dbg !10253
  br i1 %29, label %31, label %30, !dbg !10256

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.151, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.152, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.153, i32 0, i32 0), i32 noundef 190) #25, !dbg !10257
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.154, i32 0, i32 0)) #25, !dbg !10257
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.153, i32 0, i32 0), i32 noundef 190) #25, !dbg !10257
  unreachable, !dbg !10257

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10259
  ret void, !dbg !10259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10260 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10262, metadata !DIExpression()), !dbg !10263
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10264
  %3 = load volatile i32, i32* %2, align 4, !dbg !10264
  %4 = or i32 %3, 8192, !dbg !10264
  store volatile i32 %4, i32* %2, align 4, !dbg !10264
  ret void, !dbg !10265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10266 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10268, metadata !DIExpression()), !dbg !10272
  call void @llvm.dbg.value(metadata i8* %1, metadata !10269, metadata !DIExpression()), !dbg !10272
  call void @llvm.dbg.value(metadata i32* %2, metadata !10270, metadata !DIExpression()), !dbg !10272
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10273
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10273
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10273
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10271, metadata !DIExpression()), !dbg !10272
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10274
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10274
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10276
  br i1 %9, label %12, label %10, !dbg !10277

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10278
  br label %12, !dbg !10279

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10272
  ret i32 %13, !dbg !10280
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.149(i32 noundef %0) unnamed_addr #4 !dbg !10281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10283, metadata !DIExpression()), !dbg !10284
  %2 = icmp eq i32 %0, 2, !dbg !10285
  %3 = select i1 %2, i8 87, i8 63, !dbg !10285
  %4 = icmp eq i32 %0, 1, !dbg !10285
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10285
  ret i8 %5, !dbg !10286
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10287 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10291, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.value(metadata i32 0, metadata !10292, metadata !DIExpression()), !dbg !10293
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10294
  %3 = load volatile i32, i32* %2, align 4, !dbg !10294
  %4 = and i32 %3, -32769, !dbg !10294
  store volatile i32 %4, i32* %2, align 4, !dbg !10294
  ret void, !dbg !10295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10296 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10300, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.value(metadata i32 %1, metadata !10301, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.value(metadata i32 0, metadata !10302, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.value(metadata i32 %2, metadata !10303, metadata !DIExpression()), !dbg !10304
  %4 = mul i32 %1, 25, !dbg !10305
  %5 = shl i32 %2, 2, !dbg !10305
  %6 = udiv i32 %4, %5, !dbg !10305
  %7 = udiv i32 %6, 100, !dbg !10305
  %8 = shl nuw nsw i32 %7, 4, !dbg !10305
  %9 = mul i32 %7, -100, !dbg !10305
  %10 = add i32 %9, %6, !dbg !10305
  %11 = shl i32 %10, 4, !dbg !10305
  %12 = add i32 %11, 50, !dbg !10305
  %13 = udiv i32 %12, 100, !dbg !10305
  %14 = and i32 %13, 240, !dbg !10305
  %15 = add nuw nsw i32 %14, %8, !dbg !10305
  %16 = and i32 %13, 15, !dbg !10305
  %17 = and i32 %15, 65520, !dbg !10308
  %18 = or i32 %17, %16, !dbg !10308
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10309
  store volatile i32 %18, i32* %19, align 4, !dbg !10310
  ret void, !dbg !10311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10312 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10314, metadata !DIExpression()), !dbg !10316
  call void @llvm.dbg.value(metadata i32 %1, metadata !10315, metadata !DIExpression()), !dbg !10316
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10317
  %4 = load volatile i32, i32* %3, align 4, !dbg !10317
  %5 = and i32 %4, -769, !dbg !10317
  %6 = or i32 %5, %1, !dbg !10317
  store volatile i32 %6, i32* %3, align 4, !dbg !10317
  ret void, !dbg !10318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10319 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10321, metadata !DIExpression()), !dbg !10323
  call void @llvm.dbg.value(metadata i32 %1, metadata !10322, metadata !DIExpression()), !dbg !10323
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10324
  %4 = load volatile i32, i32* %3, align 4, !dbg !10324
  %5 = and i32 %4, -4097, !dbg !10324
  %6 = or i32 %5, %1, !dbg !10324
  store volatile i32 %6, i32* %3, align 4, !dbg !10324
  ret void, !dbg !10325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10326 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10328, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata i32 %1, metadata !10329, metadata !DIExpression()), !dbg !10330
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10331
  %4 = load volatile i32, i32* %3, align 4, !dbg !10331
  %5 = and i32 %4, -12289, !dbg !10331
  %6 = or i32 %5, %1, !dbg !10331
  store volatile i32 %6, i32* %3, align 4, !dbg !10331
  ret void, !dbg !10332
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10333 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10335, metadata !DIExpression()), !dbg !10337
  call void @llvm.dbg.value(metadata i32 %1, metadata !10336, metadata !DIExpression()), !dbg !10337
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10338
  %4 = load volatile i32, i32* %3, align 4, !dbg !10338
  %5 = and i32 %4, -1537, !dbg !10338
  %6 = or i32 %5, %1, !dbg !10338
  store volatile i32 %6, i32* %3, align 4, !dbg !10338
  ret void, !dbg !10339
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10340 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10342, metadata !DIExpression()), !dbg !10343
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10344
  %3 = load volatile i32, i32* %2, align 4, !dbg !10344
  %4 = lshr i32 %3, 3, !dbg !10345
  %5 = and i32 %4, 1, !dbg !10345
  ret i32 %5, !dbg !10346
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10347 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10349, metadata !DIExpression()), !dbg !10350
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10351
  %3 = load volatile i32, i32* %2, align 4, !dbg !10351
  %4 = and i32 %3, 1, !dbg !10351
  ret i32 %4, !dbg !10352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10355, metadata !DIExpression()), !dbg !10356
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10357
  %3 = load volatile i32, i32* %2, align 4, !dbg !10357
  %4 = lshr i32 %3, 1, !dbg !10358
  %5 = and i32 %4, 1, !dbg !10358
  ret i32 %5, !dbg !10359
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10360 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10362, metadata !DIExpression()), !dbg !10363
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10364
  %3 = load volatile i32, i32* %2, align 4, !dbg !10364
  %4 = lshr i32 %3, 8, !dbg !10365
  %5 = and i32 %4, 1, !dbg !10365
  ret i32 %5, !dbg !10366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10367 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10369, metadata !DIExpression()), !dbg !10370
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10371
  store volatile i32 -257, i32* %2, align 4, !dbg !10371
  ret void, !dbg !10372
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10373 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10375, metadata !DIExpression()), !dbg !10377
  %3 = bitcast i32* %2 to i8*, !dbg !10378
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10378
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10376, metadata !DIExpression()), !dbg !10379
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10380
  %5 = load volatile i32, i32* %4, align 4, !dbg !10380
  store volatile i32 %5, i32* %2, align 4, !dbg !10381
  %6 = load volatile i32, i32* %2, align 4, !dbg !10382
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10383
  %8 = load volatile i32, i32* %7, align 4, !dbg !10383
  store volatile i32 %8, i32* %2, align 4, !dbg !10384
  %9 = load volatile i32, i32* %2, align 4, !dbg !10385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10386
  ret void, !dbg !10386
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10387 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10389, metadata !DIExpression()), !dbg !10391
  %3 = bitcast i32* %2 to i8*, !dbg !10392
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10392
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10390, metadata !DIExpression()), !dbg !10393
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10394
  %5 = load volatile i32, i32* %4, align 4, !dbg !10394
  store volatile i32 %5, i32* %2, align 4, !dbg !10395
  %6 = load volatile i32, i32* %2, align 4, !dbg !10396
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10397
  %8 = load volatile i32, i32* %7, align 4, !dbg !10397
  store volatile i32 %8, i32* %2, align 4, !dbg !10398
  %9 = load volatile i32, i32* %2, align 4, !dbg !10399
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10400
  ret void, !dbg !10400
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10401 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10403, metadata !DIExpression()), !dbg !10405
  %3 = bitcast i32* %2 to i8*, !dbg !10406
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10406
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10404, metadata !DIExpression()), !dbg !10407
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10408
  %5 = load volatile i32, i32* %4, align 4, !dbg !10408
  store volatile i32 %5, i32* %2, align 4, !dbg !10409
  %6 = load volatile i32, i32* %2, align 4, !dbg !10410
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10411
  %8 = load volatile i32, i32* %7, align 4, !dbg !10411
  store volatile i32 %8, i32* %2, align 4, !dbg !10412
  %9 = load volatile i32, i32* %2, align 4, !dbg !10413
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10414
  ret void, !dbg !10414
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10415 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10417, metadata !DIExpression()), !dbg !10419
  %3 = bitcast i32* %2 to i8*, !dbg !10420
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10420
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10418, metadata !DIExpression()), !dbg !10421
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10422
  %5 = load volatile i32, i32* %4, align 4, !dbg !10422
  store volatile i32 %5, i32* %2, align 4, !dbg !10423
  %6 = load volatile i32, i32* %2, align 4, !dbg !10424
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10425
  %8 = load volatile i32, i32* %7, align 4, !dbg !10425
  store volatile i32 %8, i32* %2, align 4, !dbg !10426
  %9 = load volatile i32, i32* %2, align 4, !dbg !10427
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10428
  ret void, !dbg !10428
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10429 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10431, metadata !DIExpression()), !dbg !10432
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10433
  %3 = load volatile i32, i32* %2, align 4, !dbg !10433
  %4 = lshr i32 %3, 7, !dbg !10434
  %5 = and i32 %4, 1, !dbg !10434
  ret i32 %5, !dbg !10435
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !10436 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10440, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.value(metadata i8 %1, metadata !10441, metadata !DIExpression()), !dbg !10442
  %3 = zext i8 %1 to i32, !dbg !10443
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10444
  store volatile i32 %3, i32* %4, align 4, !dbg !10445
  ret void, !dbg !10446
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10447 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10449, metadata !DIExpression()), !dbg !10450
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10451
  %3 = load volatile i32, i32* %2, align 4, !dbg !10451
  %4 = lshr i32 %3, 5, !dbg !10452
  %5 = and i32 %4, 1, !dbg !10452
  ret i32 %5, !dbg !10453
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10454 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10458, metadata !DIExpression()), !dbg !10459
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10460
  %3 = load volatile i32, i32* %2, align 4, !dbg !10460
  %4 = trunc i32 %3 to i8, !dbg !10461
  ret i8 %4, !dbg !10462
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10463 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10465, metadata !DIExpression()), !dbg !10471
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10472
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10472
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10472
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10466, metadata !DIExpression()), !dbg !10471
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10473
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10473
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10473
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10467, metadata !DIExpression()), !dbg !10471
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10474
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10475
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10475
  %10 = tail call fastcc zeroext i1 @device_is_ready.159(%struct.device* noundef %9) #24, !dbg !10477
  br i1 %10, label %14, label %11, !dbg !10478

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.149(i32 noundef 1) #24, !dbg !10479
  %13 = zext i8 %12 to i32, !dbg !10479
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.160, i32 0, i32 0), i32 noundef %13) #25, !dbg !10479
  br label %62, !dbg !10485

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10486
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10487
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10487
  %18 = load i8*, i8** %17, align 4, !dbg !10487
  %19 = tail call fastcc i32 @clock_control_on.161(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10488
  call void @llvm.dbg.value(metadata i32 %19, metadata !10470, metadata !DIExpression()), !dbg !10471
  %20 = icmp eq i32 %19, 0, !dbg !10489
  br i1 %20, label %24, label %21, !dbg !10491

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.149(i32 noundef 1) #24, !dbg !10492
  %23 = zext i8 %22 to i32, !dbg !10492
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.162, i32 0, i32 0), i32 noundef %23) #25, !dbg !10492
  br label %62, !dbg !10498

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10499
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10499
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10500
  call void @llvm.dbg.value(metadata i32 %27, metadata !10470, metadata !DIExpression()), !dbg !10471
  %28 = icmp slt i32 %27, 0, !dbg !10501
  br i1 %28, label %62, label %29, !dbg !10503

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10504
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10504
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10505
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10506
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10507
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10508
  %34 = load i32, i32* %33, align 4, !dbg !10508
  %35 = icmp ult i32 %34, 3, !dbg !10510
  br i1 %35, label %39, label %36, !dbg !10510

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.149(i32 noundef 2) #24, !dbg !10511
  %38 = zext i8 %37 to i32, !dbg !10511
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10.163, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10511
  call void @llvm.dbg.value(metadata i32 0, metadata !10468, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i32 0, metadata !10469, metadata !DIExpression()), !dbg !10471
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10510
  %41 = load i32, i32* %40, align 4, !dbg !10510
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.11, i32 0, i32 %34, !dbg !10510
  %43 = load i32, i32* %42, align 4, !dbg !10510
  br label %44, !dbg !10510

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10520
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10520
  call void @llvm.dbg.value(metadata i32 %46, metadata !10469, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.value(metadata i32 %45, metadata !10468, metadata !DIExpression()), !dbg !10471
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10521
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10522
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10523
  %49 = load i8, i8* %48, align 4, !dbg !10523, !range !6719
  %50 = icmp eq i8 %49, 0, !dbg !10523
  br i1 %50, label %52, label %51, !dbg !10525

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10526
  br label %52, !dbg !10528

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10529
  %54 = load i32, i32* %53, align 4, !dbg !10529
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10530
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10531
  %56 = load i8, i8* %55, align 4, !dbg !10531, !range !6719
  %57 = icmp eq i8 %56, 0, !dbg !10531
  br i1 %57, label %60, label %58, !dbg !10533

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10534
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10536
  br label %60, !dbg !10537

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10538
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10539
  br label %62, !dbg !10540

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10471
  ret i32 %63, !dbg !10541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10542 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10546, metadata !DIExpression()), !dbg !10550
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10551
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10551
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10551
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10547, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10548, metadata !DIExpression()), !dbg !10550
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10552
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !10553
  ret void, !dbg !10554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.159(%struct.device* noundef %0) unnamed_addr #1 !dbg !10555 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10559, metadata !DIExpression()), !dbg !10560
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10561, !srcloc !10563
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.164(%struct.device* noundef %0) #24, !dbg !10564
  ret i1 %2, !dbg !10565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.161(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10566 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10568, metadata !DIExpression()), !dbg !10571
  call void @llvm.dbg.value(metadata i8* %1, metadata !10569, metadata !DIExpression()), !dbg !10571
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10572
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10572
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10572
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10570, metadata !DIExpression()), !dbg !10571
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10573
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10573
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10574
  ret i32 %8, !dbg !10575
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10576 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10580, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.value(metadata i8 0, metadata !10581, metadata !DIExpression()), !dbg !10584
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10585
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10585
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10583, metadata !DIExpression(DW_OP_deref)), !dbg !10584
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10586
  call void @llvm.dbg.value(metadata i32 %4, metadata !10582, metadata !DIExpression()), !dbg !10584
  %5 = icmp slt i32 %4, 0, !dbg !10587
  br i1 %5, label %9, label %6, !dbg !10589

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10590
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10583, metadata !DIExpression()), !dbg !10584
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10591
  br label %9, !dbg !10592

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10584
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10593
  ret i32 %10, !dbg !10593
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10594 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10596, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.value(metadata i32 12, metadata !10597, metadata !DIExpression()), !dbg !10598
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10599
  %3 = load volatile i32, i32* %2, align 4, !dbg !10599
  %4 = or i32 %3, 12, !dbg !10599
  store volatile i32 %4, i32* %2, align 4, !dbg !10599
  ret void, !dbg !10600
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10601 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10603, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.value(metadata i32 %1, metadata !10604, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.value(metadata i32 %2, metadata !10605, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.value(metadata i32 0, metadata !10606, metadata !DIExpression()), !dbg !10607
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10608
  %5 = load volatile i32, i32* %4, align 4, !dbg !10608
  %6 = and i32 %5, -5633, !dbg !10608
  %7 = or i32 %2, %1, !dbg !10608
  %8 = or i32 %7, %6, !dbg !10608
  store volatile i32 %8, i32* %4, align 4, !dbg !10608
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10609
  %10 = load volatile i32, i32* %9, align 4, !dbg !10609
  %11 = and i32 %10, -12289, !dbg !10609
  store volatile i32 %11, i32* %9, align 4, !dbg !10609
  ret void, !dbg !10610
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10611 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10613, metadata !DIExpression()), !dbg !10614
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10615
  %3 = load volatile i32, i32* %2, align 4, !dbg !10615
  %4 = or i32 %3, 8, !dbg !10615
  store volatile i32 %4, i32* %2, align 4, !dbg !10615
  ret void, !dbg !10616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10617 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10621, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10622, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.value(metadata i32 0, metadata !10623, metadata !DIExpression()), !dbg !10624
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10625
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10625
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10626
  %5 = load i8, i8* %4, align 4, !dbg !10626
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10627
  ret i32 %6, !dbg !10628
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.164(%struct.device* noundef %0) unnamed_addr #1 !dbg !10629 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10631, metadata !DIExpression()), !dbg !10632
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10633
  ret i1 %2, !dbg !10634
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10637, metadata !DIExpression()), !dbg !10638
  tail call fastcc void @__NVIC_SetPriority.166() #24, !dbg !10639
  store i32 3199, i32* @last_load, align 4, !dbg !10640
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10641
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10642
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10643
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10644
  %3 = or i32 %2, 7, !dbg !10644
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10644
  ret i32 0, !dbg !10645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.166() unnamed_addr #15 !dbg !10646 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10648, metadata !DIExpression()), !dbg !10650
  call void @llvm.dbg.value(metadata i32 1, metadata !10649, metadata !DIExpression()), !dbg !10650
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10651
  ret void, !dbg !10654
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10655 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10657, metadata !DIExpression()), !dbg !10659
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10660
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10661
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10662
  %5 = add i32 %4, %3, !dbg !10662
  store i32 %5, i32* @cycle_count, align 4, !dbg !10662
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10663
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10664
  %7 = sub i32 %5, %6, !dbg !10667
  %8 = udiv i32 %7, 3200, !dbg !10668
  call void @llvm.dbg.value(metadata i32 %8, metadata !10658, metadata !DIExpression()), !dbg !10659
  %9 = mul nuw i32 %8, 3200, !dbg !10669
  %10 = add i32 %9, %6, !dbg !10670
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10670
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10671
  tail call void @z_arm_int_exit() #25, !dbg !10672
  ret void, !dbg !10673
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10674 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10679
  call void @llvm.dbg.value(metadata i32 %1, metadata !10676, metadata !DIExpression()), !dbg !10680
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10681
  call void @llvm.dbg.value(metadata i32 %2, metadata !10677, metadata !DIExpression()), !dbg !10680
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10682
  call void @llvm.dbg.value(metadata i32 %3, metadata !10678, metadata !DIExpression()), !dbg !10680
  %4 = and i32 %2, 65536, !dbg !10683
  %5 = icmp ne i32 %4, 0, !dbg !10683
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10685
  %8 = load i32, i32* @last_load, align 4, !dbg !10680
  br i1 %7, label %9, label %13, !dbg !10685

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10686
  %11 = add i32 %10, %8, !dbg !10686
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10686
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10688
  br label %13, !dbg !10689

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10690
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10691
  %16 = add i32 %14, %15, !dbg !10692
  ret i32 %16, !dbg !10693
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10694 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10698, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.value(metadata i1 %1, metadata !10699, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10711
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10712
  br i1 %4, label %5, label %8, !dbg !10712

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10714
  %7 = and i32 %6, -2, !dbg !10714
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10714
  store i32 -16777216, i32* @last_load, align 4, !dbg !10716
  br label %60, !dbg !10717

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10718
  call void @llvm.dbg.value(metadata i32 %9, metadata !10703, metadata !DIExpression()), !dbg !10711
  br i1 %3, label %18, label %10, !dbg !10719

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10719
  call void @llvm.dbg.value(metadata i32 undef, metadata !10698, metadata !DIExpression()), !dbg !10711
  %12 = icmp slt i32 %11, 1, !dbg !10720
  br i1 %12, label %18, label %13, !dbg !10720

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !10720
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !10720
  %16 = mul nuw nsw i32 %15, 3200, !dbg !10720
  %17 = add nuw nsw i32 %16, 3199, !dbg !10720
  br label %18, !dbg !10720

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10698, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10721, metadata !DIExpression()) #23, !dbg !10728
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10730, !srcloc !10736
  call void @llvm.dbg.value(metadata i32 undef, metadata !10733, metadata !DIExpression()) #23, !dbg !10737
  call void @llvm.dbg.value(metadata i32 undef, metadata !10734, metadata !DIExpression()) #23, !dbg !10737
  call void @llvm.dbg.value(metadata i32 undef, metadata !10727, metadata !DIExpression()) #23, !dbg !10728
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10738
  br i1 %21, label %23, label %22, !dbg !10741

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 148) #25, !dbg !10742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.170, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 148) #25, !dbg !10742
  unreachable, !dbg !10742

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10730
  call void @llvm.dbg.value(metadata i32 %24, metadata !10733, metadata !DIExpression()) #23, !dbg !10737
  call void @llvm.dbg.value(metadata i32 %24, metadata !10727, metadata !DIExpression()) #23, !dbg !10728
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10744
  call void @llvm.dbg.value(metadata i32 %24, metadata !10704, metadata !DIExpression()), !dbg !10711
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %25, metadata !10709, metadata !DIExpression()), !dbg !10711
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10746
  call void @llvm.dbg.value(metadata i32 %26, metadata !10701, metadata !DIExpression()), !dbg !10711
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10747
  %28 = add i32 %27, %25, !dbg !10747
  store i32 %28, i32* @cycle_count, align 4, !dbg !10747
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10748
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10749
  %30 = sub i32 %28, %29, !dbg !10750
  call void @llvm.dbg.value(metadata i32 %30, metadata !10710, metadata !DIExpression()), !dbg !10711
  %31 = icmp slt i32 %30, 0, !dbg !10751
  br i1 %31, label %41, label %32, !dbg !10753

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10700, metadata !DIExpression()), !dbg !10711
  call void @llvm.dbg.value(metadata i32 undef, metadata !10700, metadata !DIExpression()), !dbg !10711
  %33 = add nuw i32 %19, %30, !dbg !10754
  %34 = urem i32 %33, 3200, !dbg !10756
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10700, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10711
  %35 = sub nuw nsw i32 %19, %34, !dbg !10757
  call void @llvm.dbg.value(metadata i32 %35, metadata !10700, metadata !DIExpression()), !dbg !10711
  %36 = icmp ugt i32 %35, 1024, !dbg !10758
  br i1 %36, label %37, label %39, !dbg !10758

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10700, metadata !DIExpression()), !dbg !10711
  %38 = icmp ugt i32 %35, 16771200, !dbg !10759
  br i1 %38, label %41, label %39, !dbg !10761

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16771200, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10762
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10763
  call void @llvm.dbg.value(metadata i32 %43, metadata !10702, metadata !DIExpression()), !dbg !10711
  %44 = add nsw i32 %42, -1, !dbg !10764
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10765
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10766
  %45 = icmp ult i32 %26, %43, !dbg !10767
  br i1 %45, label %46, label %51, !dbg !10769

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10770
  %48 = add i32 %26, %9, !dbg !10772
  %49 = sub i32 %48, %43, !dbg !10773
  %50 = add i32 %49, %47, !dbg !10770
  br label %55, !dbg !10774

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10775
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10777
  %54 = add i32 %52, %53, !dbg !10777
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10778
  store i32 %56, i32* @cycle_count, align 4, !dbg !10778
  call void @llvm.dbg.value(metadata i32 undef, metadata !10779, metadata !DIExpression()) #23, !dbg !10785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10784, metadata !DIExpression()) #23, !dbg !10785
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10787
  br i1 %57, label %59, label %58, !dbg !10790

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 194) #25, !dbg !10791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.172, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 194) #25, !dbg !10791
  unreachable, !dbg !10791

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10779, metadata !DIExpression()) #23, !dbg !10785
  call void @llvm.dbg.value(metadata i32 %24, metadata !10793, metadata !DIExpression()) #23, !dbg !10796
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10798, !srcloc !10799
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10800
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10801 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10721, metadata !DIExpression()) #23, !dbg !10805
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10807, !srcloc !10736
  call void @llvm.dbg.value(metadata i32 undef, metadata !10733, metadata !DIExpression()) #23, !dbg !10809
  call void @llvm.dbg.value(metadata i32 undef, metadata !10734, metadata !DIExpression()) #23, !dbg !10809
  call void @llvm.dbg.value(metadata i32 undef, metadata !10727, metadata !DIExpression()) #23, !dbg !10805
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10810
  br i1 %2, label %4, label %3, !dbg !10811

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 148) #25, !dbg !10812
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.170, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10812
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 148) #25, !dbg !10812
  unreachable, !dbg !10812

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10733, metadata !DIExpression()) #23, !dbg !10809
  call void @llvm.dbg.value(metadata i32 undef, metadata !10727, metadata !DIExpression()) #23, !dbg !10805
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10813
  call void @llvm.dbg.value(metadata i32 undef, metadata !10803, metadata !DIExpression()), !dbg !10814
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10815
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10816
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10817
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10804, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10814
  call void @llvm.dbg.value(metadata i32 undef, metadata !10779, metadata !DIExpression()) #23, !dbg !10818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10784, metadata !DIExpression()) #23, !dbg !10818
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10820
  br i1 %8, label %10, label %9, !dbg !10821

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 194) #25, !dbg !10822
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.172, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10822
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 194) #25, !dbg !10822
  unreachable, !dbg !10822

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10823
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10804, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10814
  %12 = sub i32 %11, %7, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %12, metadata !10804, metadata !DIExpression()), !dbg !10814
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10807
  call void @llvm.dbg.value(metadata i32 %13, metadata !10733, metadata !DIExpression()) #23, !dbg !10809
  call void @llvm.dbg.value(metadata i32 %13, metadata !10727, metadata !DIExpression()) #23, !dbg !10805
  call void @llvm.dbg.value(metadata i32 %13, metadata !10803, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata i32 undef, metadata !10779, metadata !DIExpression()) #23, !dbg !10818
  call void @llvm.dbg.value(metadata i32 undef, metadata !10793, metadata !DIExpression()) #23, !dbg !10825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10827, !srcloc !10799
  %14 = udiv i32 %12, 3200, !dbg !10828
  ret i32 %14, !dbg !10829
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10830 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10721, metadata !DIExpression()) #23, !dbg !10834
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10836, !srcloc !10736
  call void @llvm.dbg.value(metadata i32 undef, metadata !10733, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10734, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10727, metadata !DIExpression()) #23, !dbg !10834
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10839
  br i1 %2, label %4, label %3, !dbg !10840

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.168, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 148) #25, !dbg !10841
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.170, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 148) #25, !dbg !10841
  unreachable, !dbg !10841

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10733, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 undef, metadata !10727, metadata !DIExpression()) #23, !dbg !10834
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10842
  call void @llvm.dbg.value(metadata i32 undef, metadata !10832, metadata !DIExpression()), !dbg !10843
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10844
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10845
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10833, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10843
  call void @llvm.dbg.value(metadata i32 undef, metadata !10779, metadata !DIExpression()) #23, !dbg !10846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10784, metadata !DIExpression()) #23, !dbg !10846
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10848
  br i1 %7, label %9, label %8, !dbg !10849

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.167, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.171, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 194) #25, !dbg !10850
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.172, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10850
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.169, i32 0, i32 0), i32 noundef 194) #25, !dbg !10850
  unreachable, !dbg !10850

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10851
  call void @llvm.dbg.value(metadata i32 %10, metadata !10833, metadata !DIExpression()), !dbg !10843
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %11, metadata !10733, metadata !DIExpression()) #23, !dbg !10838
  call void @llvm.dbg.value(metadata i32 %11, metadata !10727, metadata !DIExpression()) #23, !dbg !10834
  call void @llvm.dbg.value(metadata i32 %11, metadata !10832, metadata !DIExpression()), !dbg !10843
  call void @llvm.dbg.value(metadata i32 undef, metadata !10779, metadata !DIExpression()) #23, !dbg !10846
  call void @llvm.dbg.value(metadata i32 undef, metadata !10793, metadata !DIExpression()) #23, !dbg !10852
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10854, !srcloc !10799
  ret i32 %10, !dbg !10855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10856 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10857
  %2 = icmp eq i32 %1, -16777216, !dbg !10859
  br i1 %2, label %3, label %6, !dbg !10860

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10861
  %5 = or i32 %4, 1, !dbg !10861
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10861
  br label %6, !dbg !10863

6:                                                ; preds = %3, %0
  ret void, !dbg !10864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10865 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10866
  %2 = and i32 %1, -2, !dbg !10866
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10866
  ret void, !dbg !10867
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10868 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10894, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.value(metadata i8 %1, metadata !10895, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10896, metadata !DIExpression()), !dbg !10897
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10898
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10898
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10897
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10899
  %8 = load i8, i8* %6, align 4, !dbg !10900
  %9 = zext i8 %8 to i32, !dbg !10901
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10901
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10902
  br i1 %11, label %18, label %24, !dbg !10903

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10897
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10899
  %14 = load i8, i8* %6, align 4, !dbg !10900
  %15 = zext i8 %14 to i32, !dbg !10901
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10901
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10902
  br i1 %17, label %18, label %24, !dbg !10903, !llvm.loop !10904

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10906
  %21 = load i8, i8* %20, align 1, !dbg !10906
  %22 = icmp eq i8 %21, %1, !dbg !10909
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10910
  br i1 %22, label %24, label %12, !dbg !10911

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10897
  ret i32 %25, !dbg !10912
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10913 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10924, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i8 %1, metadata !10925, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i32 %2, metadata !10926, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i32 0, metadata !10929, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i32 0, metadata !10930, metadata !DIExpression()), !dbg !10940
  call void @llvm.dbg.value(metadata i8 0, metadata !10931, metadata !DIExpression()), !dbg !10941
  %4 = icmp eq i8 %1, 0, !dbg !10942
  br i1 %4, label %35, label %5, !dbg !10943

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10942
  br label %9, !dbg !10943

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10931, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.value(metadata i32 %29, metadata !10929, metadata !DIExpression()), !dbg !10940
  %8 = icmp eq i32 %34, %6, !dbg !10942
  br i1 %8, label %35, label %9, !dbg !10943, !llvm.loop !10944

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10931, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.value(metadata i32 %11, metadata !10929, metadata !DIExpression()), !dbg !10940
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10946
  %13 = load i32, i32* %12, align 4, !dbg !10946
  call void @llvm.dbg.value(metadata i32 %13, metadata !10928, metadata !DIExpression()), !dbg !10940
  %14 = and i32 %13, 31, !dbg !10947
  %15 = icmp ult i32 %14, 16, !dbg !10948
  br i1 %15, label %16, label %20, !dbg !10949

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10950
  %18 = load i32, i32* %17, align 4, !dbg !10950
  %19 = or i32 %18, 32, !dbg !10952
  call void @llvm.dbg.value(metadata i32 %19, metadata !10929, metadata !DIExpression()), !dbg !10940
  br label %28, !dbg !10953

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10954

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10955
  %23 = load i32, i32* %22, align 4, !dbg !10955
  call void @llvm.dbg.value(metadata i32 %23, metadata !10933, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10956
  %24 = lshr i32 %23, 7, !dbg !10957
  %25 = and i32 %24, 16, !dbg !10957
  %26 = or i32 %25, %23, !dbg !10957
  call void @llvm.dbg.value(metadata i32 %26, metadata !10929, metadata !DIExpression()), !dbg !10940
  br label %28, !dbg !10958

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10940
  call void @llvm.dbg.value(metadata i32 %29, metadata !10929, metadata !DIExpression()), !dbg !10940
  %30 = lshr i32 %13, 5, !dbg !10959
  %31 = and i32 %30, 255, !dbg !10959
  call void @llvm.dbg.value(metadata i32 %31, metadata !10927, metadata !DIExpression()), !dbg !10940
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10960
  call void @llvm.dbg.value(metadata i32 %32, metadata !10930, metadata !DIExpression()), !dbg !10940
  %33 = icmp slt i32 %32, 0, !dbg !10961
  %34 = add nuw nsw i32 %10, 1, !dbg !10963
  call void @llvm.dbg.value(metadata i32 %34, metadata !10931, metadata !DIExpression()), !dbg !10941
  br i1 %33, label %35, label %7, !dbg !10964

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10965
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10966 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10970, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 %1, metadata !10971, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata i32 %2, metadata !10972, metadata !DIExpression()), !dbg !10974
  %4 = icmp ugt i32 %0, 175, !dbg !10975
  br i1 %4, label %17, label %5, !dbg !10977

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10978
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10979
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10979
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10973, metadata !DIExpression()), !dbg !10974
  %9 = lshr i32 1888, %6, !dbg !10980
  %10 = and i32 %9, 1, !dbg !10980
  %11 = icmp eq i32 %10, 0, !dbg !10980
  br i1 %11, label %12, label %17, !dbg !10982

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.177(%struct.device* noundef %8) #24, !dbg !10983
  br i1 %13, label %14, label %17, !dbg !10984

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !10985
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #25, !dbg !10986
  br label %17, !dbg !10987

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !10974
  ret i32 %18, !dbg !10988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.177(%struct.device* noundef %0) unnamed_addr #1 !dbg !10989 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10993, metadata !DIExpression()), !dbg !10994
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10995, !srcloc !10997
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.178(%struct.device* noundef %0) #24, !dbg !10998
  ret i1 %2, !dbg !10999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.178(%struct.device* noundef %0) unnamed_addr #1 !dbg !11000 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11002, metadata !DIExpression()), !dbg !11003
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11004
  ret i1 %2, !dbg !11005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11006 {
  ret void, !dbg !11007
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11008 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11010, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 0, metadata !11011, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 0, metadata !11012, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 0, metadata !11013, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i32 0, metadata !11014, metadata !DIExpression()), !dbg !11015
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11016
  call void @llvm.dbg.value(metadata i32 %1, metadata !11010, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !11015
  %2 = lshr i32 %1, 2, !dbg !11017
  %3 = and i32 %2, 3, !dbg !11017
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !11017

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11018
  %6 = lshr i32 %5, 13, !dbg !11020
  %7 = and i32 %6, 7, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %7, metadata !11014, metadata !DIExpression()), !dbg !11015
  %8 = shl nuw nsw i32 65536, %7, !dbg !11021
  br label %31, !dbg !11022

9:                                                ; preds = %0
  br label %31, !dbg !11023

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11024
  call void @llvm.dbg.value(metadata i32 %11, metadata !11011, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !11015
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11025
  call void @llvm.dbg.value(metadata i32 %12, metadata !11012, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !11015
  %13 = lshr i32 %11, 18, !dbg !11026
  %14 = and i32 %13, 15, !dbg !11026
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !11027
  %16 = load i8, i8* %15, align 1, !dbg !11027
  %17 = zext i8 %16 to i32, !dbg !11027
  call void @llvm.dbg.value(metadata i32 %17, metadata !11011, metadata !DIExpression()), !dbg !11015
  %18 = lshr i32 %12, 22, !dbg !11028
  %19 = and i32 %18, 3, !dbg !11028
  %20 = add nuw nsw i32 %19, 1, !dbg !11029
  call void @llvm.dbg.value(metadata i32 %20, metadata !11012, metadata !DIExpression()), !dbg !11015
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11030
  %22 = and i32 %21, 65536, !dbg !11031
  call void @llvm.dbg.value(metadata i32 %22, metadata !11013, metadata !DIExpression()), !dbg !11015
  %23 = icmp eq i32 %22, 0, !dbg !11032
  br i1 %23, label %24, label %27, !dbg !11034

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !11035
  %26 = udiv i32 %25, %20, !dbg !11037
  br label %31, !dbg !11038

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !11039
  %29 = udiv i32 %28, %20, !dbg !11041
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !11042
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11043
  %34 = lshr i32 %33, 4, !dbg !11044
  %35 = and i32 %34, 15, !dbg !11044
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !11045
  %37 = load i8, i8* %36, align 1, !dbg !11045
  %38 = zext i8 %37 to i32, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %38, metadata !11010, metadata !DIExpression()), !dbg !11015
  %39 = lshr i32 %32, %38, !dbg !11046
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !11046
  ret void, !dbg !11047
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11048 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11056
  %2 = and i32 %1, 16711935, !dbg !11056
  %3 = or i32 %2, 45056, !dbg !11056
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11056
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11057
  %5 = or i32 %4, 256, !dbg !11057
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11057
  %6 = tail call i32 @HAL_GetTick() #25, !dbg !11058
  call void @llvm.dbg.value(metadata i32 %6, metadata !11054, metadata !DIExpression()), !dbg !11059
  br label %7, !dbg !11060

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11061
  %9 = and i32 %8, 512, !dbg !11061
  %10 = icmp eq i32 %9, 0, !dbg !11062
  br i1 %10, label %11, label %15, !dbg !11060

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #25, !dbg !11063
  %13 = sub i32 %12, %6, !dbg !11066
  %14 = icmp ugt i32 %13, 2, !dbg !11067
  br i1 %14, label %47, label %7, !dbg !11068, !llvm.loop !11069

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11071
  %17 = and i32 %16, -4, !dbg !11071
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11071
  br label %18, !dbg !11072

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11073
  %20 = and i32 %19, 12, !dbg !11073
  %21 = icmp eq i32 %20, 0, !dbg !11074
  br i1 %21, label %26, label %22, !dbg !11072

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #25, !dbg !11075
  %24 = sub i32 %23, %6, !dbg !11078
  %25 = icmp ugt i32 %24, 5000, !dbg !11079
  br i1 %25, label %47, label %18, !dbg !11080, !llvm.loop !11081

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !11083
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !11084
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #25, !dbg !11085
  call void @llvm.dbg.value(metadata i32 %28, metadata !11055, metadata !DIExpression()), !dbg !11059
  %29 = icmp eq i32 %28, 0, !dbg !11086
  br i1 %29, label %30, label %47, !dbg !11088

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11089
  %32 = and i32 %31, -285278210, !dbg !11089
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11089
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11090
  %34 = and i32 %33, -262145, !dbg !11090
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11090
  %35 = tail call i32 @HAL_GetTick() #25, !dbg !11091
  call void @llvm.dbg.value(metadata i32 %35, metadata !11054, metadata !DIExpression()), !dbg !11059
  br label %36, !dbg !11092

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11093
  %38 = and i32 %37, 33554432, !dbg !11093
  %39 = icmp eq i32 %38, 0, !dbg !11094
  br i1 %39, label %44, label %40, !dbg !11092

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #25, !dbg !11095
  %42 = sub i32 %41, %35, !dbg !11098
  %43 = icmp ugt i32 %42, 2, !dbg !11099
  br i1 %43, label %47, label %36, !dbg !11100, !llvm.loop !11101

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11103
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11104
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11105
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11106
  %46 = or i32 %45, 16777216, !dbg !11106
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11106
  br label %47, !dbg !11107

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !11059
  ret i32 %48, !dbg !11108
}

; Function Attrs: optsize
declare !dbg !11109 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !11111 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11114 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11140, metadata !DIExpression()), !dbg !11153
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11154
  br i1 %3, label %385, label %4, !dbg !11156

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11157
  %6 = and i32 %5, 12, !dbg !11157
  call void @llvm.dbg.value(metadata i32 %6, metadata !11143, metadata !DIExpression()), !dbg !11153
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11158
  %8 = and i32 %7, 65536, !dbg !11158
  call void @llvm.dbg.value(metadata i32 %8, metadata !11144, metadata !DIExpression()), !dbg !11153
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11159
  %10 = load i32, i32* %9, align 4, !dbg !11159
  %11 = and i32 %10, 1, !dbg !11161
  %12 = icmp eq i32 %11, 0, !dbg !11162
  br i1 %12, label %69, label %13, !dbg !11163

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !11164
  br i1 %14, label %19, label %15, !dbg !11167

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !11168
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !11169
  br i1 %18, label %19, label %27, !dbg !11169

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11170
  %21 = and i32 %20, 131072, !dbg !11170
  %22 = icmp eq i32 %21, 0, !dbg !11173
  br i1 %22, label %69, label %23, !dbg !11174

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11175
  %25 = load i32, i32* %24, align 4, !dbg !11175
  %26 = icmp eq i32 %25, 0, !dbg !11176
  br i1 %26, label %385, label %69, !dbg !11177

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11178
  %29 = load i32, i32* %28, align 4, !dbg !11178
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !11182

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11183
  %32 = or i32 %31, 65536, !dbg !11183
  br label %48, !dbg !11183

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11185
  %35 = and i32 %34, -65537, !dbg !11185
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11185
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11185
  %37 = and i32 %36, -262145, !dbg !11185
  br label %48, !dbg !11185

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11188
  %40 = or i32 %39, 262144, !dbg !11188
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11188
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11188
  %42 = or i32 %41, 65536, !dbg !11188
  br label %48, !dbg !11188

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11191
  %45 = and i32 %44, -65537, !dbg !11191
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11191
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11191
  %47 = and i32 %46, -262145, !dbg !11191
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11193
  %50 = load i32, i32* %28, align 4, !dbg !11194
  %51 = icmp eq i32 %50, 0, !dbg !11196
  %52 = tail call i32 @HAL_GetTick() #25, !dbg !11197
  call void @llvm.dbg.value(metadata i32 %52, metadata !11141, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.value(metadata i32 %52, metadata !11141, metadata !DIExpression()), !dbg !11153
  br i1 %51, label %61, label %53, !dbg !11198

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11199
  %55 = and i32 %54, 131072, !dbg !11199
  %56 = icmp eq i32 %55, 0, !dbg !11201
  br i1 %56, label %57, label %69, !dbg !11202

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #25, !dbg !11203
  %59 = sub i32 %58, %52, !dbg !11206
  %60 = icmp ugt i32 %59, 100, !dbg !11207
  br i1 %60, label %385, label %53, !dbg !11208, !llvm.loop !11209

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11211
  %63 = and i32 %62, 131072, !dbg !11211
  %64 = icmp eq i32 %63, 0, !dbg !11213
  br i1 %64, label %69, label %65, !dbg !11214

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !11215
  %67 = sub i32 %66, %52, !dbg !11218
  %68 = icmp ugt i32 %67, 100, !dbg !11219
  br i1 %68, label %385, label %61, !dbg !11220, !llvm.loop !11221

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !11223
  %71 = and i32 %70, 2, !dbg !11225
  %72 = icmp eq i32 %71, 0, !dbg !11226
  br i1 %72, label %118, label %73, !dbg !11227

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !11228
  br i1 %74, label %79, label %75, !dbg !11231

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !11232
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !11233
  br i1 %78, label %79, label %87, !dbg !11233

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11234
  %81 = and i32 %80, 2, !dbg !11234
  %82 = icmp eq i32 %81, 0, !dbg !11237
  br i1 %82, label %111, label %83, !dbg !11238

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11239
  %85 = load i32, i32* %84, align 4, !dbg !11239
  %86 = icmp eq i32 %85, 1, !dbg !11240
  br i1 %86, label %111, label %385, !dbg !11241

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11242
  %89 = load i32, i32* %88, align 4, !dbg !11242
  %90 = icmp eq i32 %89, 0, !dbg !11245
  br i1 %90, label %101, label %91, !dbg !11246

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11247
  %92 = tail call i32 @HAL_GetTick() #25, !dbg !11249
  call void @llvm.dbg.value(metadata i32 %92, metadata !11141, metadata !DIExpression()), !dbg !11153
  br label %93, !dbg !11250

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11251
  %95 = and i32 %94, 2, !dbg !11251
  %96 = icmp eq i32 %95, 0, !dbg !11252
  br i1 %96, label %97, label %111, !dbg !11250

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #25, !dbg !11253
  %99 = sub i32 %98, %92, !dbg !11256
  %100 = icmp ugt i32 %99, 2, !dbg !11257
  br i1 %100, label %385, label %93, !dbg !11258, !llvm.loop !11259

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11261
  %102 = tail call i32 @HAL_GetTick() #25, !dbg !11263
  call void @llvm.dbg.value(metadata i32 %102, metadata !11141, metadata !DIExpression()), !dbg !11153
  br label %103, !dbg !11264

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11265
  %105 = and i32 %104, 2, !dbg !11265
  %106 = icmp eq i32 %105, 0, !dbg !11266
  br i1 %106, label %118, label %107, !dbg !11264

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #25, !dbg !11267
  %109 = sub i32 %108, %102, !dbg !11270
  %110 = icmp ugt i32 %109, 2, !dbg !11271
  br i1 %110, label %385, label %103, !dbg !11272, !llvm.loop !11273

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11275
  %113 = and i32 %112, -7937, !dbg !11275
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11275
  %115 = load i32, i32* %114, align 4, !dbg !11275
  %116 = shl i32 %115, 8, !dbg !11275
  %117 = or i32 %116, %113, !dbg !11275
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11275
  br label %118, !dbg !11276

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !11276
  %120 = and i32 %119, 16, !dbg !11278
  %121 = icmp eq i32 %120, 0, !dbg !11279
  br i1 %121, label %215, label %122, !dbg !11280

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !11281
  br i1 %123, label %124, label %179, !dbg !11284

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11285
  %126 = and i32 %125, 512, !dbg !11285
  %127 = icmp eq i32 %126, 0, !dbg !11288
  br i1 %127, label %132, label %128, !dbg !11289

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11290
  %130 = load i32, i32* %129, align 4, !dbg !11290
  %131 = icmp eq i32 %130, 0, !dbg !11291
  br i1 %131, label %385, label %132, !dbg !11292

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11293
  %134 = load i32, i32* %133, align 4, !dbg !11293
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11296
  %136 = and i32 %135, 57344, !dbg !11296
  %137 = icmp ugt i32 %134, %136, !dbg !11297
  br i1 %137, label %138, label %152, !dbg !11298

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #24, !dbg !11299
  %140 = icmp eq i32 %139, 0, !dbg !11302
  br i1 %140, label %141, label %385, !dbg !11303

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11304
  %143 = and i32 %142, -57345, !dbg !11304
  %144 = load i32, i32* %133, align 4, !dbg !11304
  %145 = or i32 %143, %144, !dbg !11304
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11304
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11305
  %147 = and i32 %146, 16777215, !dbg !11305
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11305
  %149 = load i32, i32* %148, align 4, !dbg !11305
  %150 = shl i32 %149, 24, !dbg !11305
  %151 = or i32 %150, %147, !dbg !11305
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11305
  br label %165, !dbg !11306

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11307
  %154 = and i32 %153, -57345, !dbg !11307
  %155 = or i32 %154, %134, !dbg !11307
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11307
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11309
  %157 = and i32 %156, 16777215, !dbg !11309
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11309
  %159 = load i32, i32* %158, align 4, !dbg !11309
  %160 = shl i32 %159, 24, !dbg !11309
  %161 = or i32 %160, %157, !dbg !11309
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11309
  %162 = load i32, i32* %133, align 4, !dbg !11310
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #24, !dbg !11312
  %164 = icmp eq i32 %163, 0, !dbg !11313
  br i1 %164, label %165, label %385, !dbg !11314

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !11315
  %167 = lshr i32 %166, 13, !dbg !11316
  %168 = shl i32 65536, %167, !dbg !11317
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11318
  %170 = lshr i32 %169, 4, !dbg !11319
  %171 = and i32 %170, 15, !dbg !11319
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !11320
  %173 = load i8, i8* %172, align 1, !dbg !11320
  %174 = zext i8 %173 to i32, !dbg !11320
  %175 = lshr i32 %168, %174, !dbg !11321
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !11322
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !11323
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #25, !dbg !11324
  call void @llvm.dbg.value(metadata i32 %177, metadata !11142, metadata !DIExpression()), !dbg !11153
  %178 = icmp eq i32 %177, 0, !dbg !11325
  br i1 %178, label %215, label %385, !dbg !11327

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11328
  %181 = load i32, i32* %180, align 4, !dbg !11328
  %182 = icmp eq i32 %181, 0, !dbg !11331
  br i1 %182, label %205, label %183, !dbg !11332

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !11333
  %184 = tail call i32 @HAL_GetTick() #25, !dbg !11335
  call void @llvm.dbg.value(metadata i32 %184, metadata !11141, metadata !DIExpression()), !dbg !11153
  br label %185, !dbg !11336

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11337
  %187 = and i32 %186, 512, !dbg !11337
  %188 = icmp eq i32 %187, 0, !dbg !11338
  br i1 %188, label %189, label %193, !dbg !11336

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #25, !dbg !11339
  %191 = sub i32 %190, %184, !dbg !11342
  %192 = icmp ugt i32 %191, 2, !dbg !11343
  br i1 %192, label %385, label %185, !dbg !11344, !llvm.loop !11345

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11347
  %195 = and i32 %194, -57345, !dbg !11347
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11347
  %197 = load i32, i32* %196, align 4, !dbg !11347
  %198 = or i32 %195, %197, !dbg !11347
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11347
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11348
  %200 = and i32 %199, 16777215, !dbg !11348
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11348
  %202 = load i32, i32* %201, align 4, !dbg !11348
  %203 = shl i32 %202, 24, !dbg !11348
  %204 = or i32 %203, %200, !dbg !11348
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11348
  br label %215, !dbg !11349

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !11350
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !11352
  call void @llvm.dbg.value(metadata i32 %206, metadata !11141, metadata !DIExpression()), !dbg !11153
  br label %207, !dbg !11353

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11354
  %209 = and i32 %208, 512, !dbg !11354
  %210 = icmp eq i32 %209, 0, !dbg !11355
  br i1 %210, label %215, label %211, !dbg !11353

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #25, !dbg !11356
  %213 = sub i32 %212, %206, !dbg !11359
  %214 = icmp ugt i32 %213, 2, !dbg !11360
  br i1 %214, label %385, label %207, !dbg !11361, !llvm.loop !11362

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !11364
  %217 = and i32 %216, 8, !dbg !11366
  %218 = icmp eq i32 %217, 0, !dbg !11367
  br i1 %218, label %243, label %219, !dbg !11368

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11369
  %221 = load i32, i32* %220, align 4, !dbg !11369
  %222 = icmp eq i32 %221, 0, !dbg !11372
  br i1 %222, label %233, label %223, !dbg !11373

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !11374
  %224 = tail call i32 @HAL_GetTick() #25, !dbg !11376
  call void @llvm.dbg.value(metadata i32 %224, metadata !11141, metadata !DIExpression()), !dbg !11153
  br label %225, !dbg !11377

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11378
  %227 = and i32 %226, 2, !dbg !11378
  %228 = icmp eq i32 %227, 0, !dbg !11379
  br i1 %228, label %229, label %243, !dbg !11377

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !11380
  %231 = sub i32 %230, %224, !dbg !11383
  %232 = icmp ugt i32 %231, 2, !dbg !11384
  br i1 %232, label %385, label %225, !dbg !11385, !llvm.loop !11386

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !11388
  %234 = tail call i32 @HAL_GetTick() #25, !dbg !11390
  call void @llvm.dbg.value(metadata i32 %234, metadata !11141, metadata !DIExpression()), !dbg !11153
  br label %235, !dbg !11391

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11392
  %237 = and i32 %236, 2, !dbg !11392
  %238 = icmp eq i32 %237, 0, !dbg !11393
  br i1 %238, label %243, label %239, !dbg !11391

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #25, !dbg !11394
  %241 = sub i32 %240, %234, !dbg !11397
  %242 = icmp ugt i32 %241, 2, !dbg !11398
  br i1 %242, label %385, label %235, !dbg !11399, !llvm.loop !11400

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !11402
  %245 = and i32 %244, 4, !dbg !11403
  %246 = icmp eq i32 %245, 0, !dbg !11404
  br i1 %246, label %320, label %247, !dbg !11405

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !11145, metadata !DIExpression()), !dbg !11406
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11407
  %249 = and i32 %248, 268435456, !dbg !11407
  %250 = icmp eq i32 %249, 0, !dbg !11407
  br i1 %250, label %251, label %258, !dbg !11408

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !11409
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !11409
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11149, metadata !DIExpression()), !dbg !11409
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11409
  %254 = or i32 %253, 268435456, !dbg !11409
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11409
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11409
  %256 = and i32 %255, 268435456, !dbg !11409
  store volatile i32 %256, i32* %2, align 4, !dbg !11409
  %257 = load volatile i32, i32* %2, align 4, !dbg !11409
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !11410
  call void @llvm.dbg.value(metadata i32 1, metadata !11145, metadata !DIExpression()), !dbg !11406
  br label %258, !dbg !11411

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !11145, metadata !DIExpression()), !dbg !11406
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11412
  %260 = and i32 %259, 256, !dbg !11412
  %261 = icmp eq i32 %260, 0, !dbg !11412
  br i1 %261, label %262, label %274, !dbg !11414

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11415
  %264 = or i32 %263, 256, !dbg !11415
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11415
  %265 = tail call i32 @HAL_GetTick() #25, !dbg !11417
  call void @llvm.dbg.value(metadata i32 %265, metadata !11141, metadata !DIExpression()), !dbg !11153
  br label %266, !dbg !11418

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11419
  %268 = and i32 %267, 256, !dbg !11419
  %269 = icmp eq i32 %268, 0, !dbg !11419
  br i1 %269, label %270, label %274, !dbg !11418

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #25, !dbg !11420
  %272 = sub i32 %271, %265, !dbg !11423
  %273 = icmp ugt i32 %272, 100, !dbg !11424
  br i1 %273, label %385, label %266, !dbg !11425, !llvm.loop !11426

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11428
  %276 = load i32, i32* %275, align 4, !dbg !11428
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !11431

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11432
  %279 = or i32 %278, 256, !dbg !11432
  br label %295, !dbg !11432

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11434
  %282 = and i32 %281, -257, !dbg !11434
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11434
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11434
  %284 = and i32 %283, -1025, !dbg !11434
  br label %295, !dbg !11434

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11437
  %287 = or i32 %286, 1024, !dbg !11437
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11437
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11437
  %289 = or i32 %288, 256, !dbg !11437
  br label %295, !dbg !11437

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11440
  %292 = and i32 %291, -257, !dbg !11440
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11440
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11440
  %294 = and i32 %293, -1025, !dbg !11440
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11442
  %297 = load i32, i32* %275, align 4, !dbg !11443
  %298 = icmp eq i32 %297, 0, !dbg !11445
  %299 = tail call i32 @HAL_GetTick() #25, !dbg !11446
  call void @llvm.dbg.value(metadata i32 %299, metadata !11141, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.value(metadata i32 %299, metadata !11141, metadata !DIExpression()), !dbg !11153
  br i1 %298, label %308, label %300, !dbg !11447

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11448
  %302 = and i32 %301, 512, !dbg !11448
  %303 = icmp eq i32 %302, 0, !dbg !11450
  br i1 %303, label %304, label %316, !dbg !11451

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #25, !dbg !11452
  %306 = sub i32 %305, %299, !dbg !11455
  %307 = icmp ugt i32 %306, 5000, !dbg !11456
  br i1 %307, label %385, label %300, !dbg !11457, !llvm.loop !11458

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11460
  %310 = and i32 %309, 512, !dbg !11460
  %311 = icmp eq i32 %310, 0, !dbg !11462
  br i1 %311, label %316, label %312, !dbg !11463

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #25, !dbg !11464
  %314 = sub i32 %313, %299, !dbg !11467
  %315 = icmp ugt i32 %314, 5000, !dbg !11468
  br i1 %315, label %385, label %308, !dbg !11469, !llvm.loop !11470

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !11472

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11473
  %319 = and i32 %318, -268435457, !dbg !11473
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11473
  br label %320, !dbg !11476

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11477
  %322 = load i32, i32* %321, align 4, !dbg !11477
  %323 = icmp eq i32 %322, 0, !dbg !11479
  br i1 %323, label %384, label %324, !dbg !11480

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !11481
  br i1 %325, label %366, label %326, !dbg !11484

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !11485
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11488
  %328 = tail call i32 @HAL_GetTick() #25, !dbg !11488
  call void @llvm.dbg.value(metadata i32 %328, metadata !11141, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.value(metadata i32 %328, metadata !11141, metadata !DIExpression()), !dbg !11153
  br i1 %327, label %329, label %358, !dbg !11489

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11490
  %331 = and i32 %330, 33554432, !dbg !11490
  %332 = icmp eq i32 %331, 0, !dbg !11492
  br i1 %332, label %337, label %333, !dbg !11493

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #25, !dbg !11494
  %335 = sub i32 %334, %328, !dbg !11497
  %336 = icmp ugt i32 %335, 2, !dbg !11498
  br i1 %336, label %385, label %329, !dbg !11499, !llvm.loop !11500

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11502
  %339 = and i32 %338, -16580609, !dbg !11502
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11502
  %341 = load i32, i32* %340, align 4, !dbg !11502
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11502
  %343 = load i32, i32* %342, align 4, !dbg !11502
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11502
  %345 = load i32, i32* %344, align 4, !dbg !11502
  %346 = or i32 %339, %341, !dbg !11502
  %347 = or i32 %346, %343, !dbg !11502
  %348 = or i32 %347, %345, !dbg !11502
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11502
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11503
  %349 = tail call i32 @HAL_GetTick() #25, !dbg !11504
  call void @llvm.dbg.value(metadata i32 %349, metadata !11141, metadata !DIExpression()), !dbg !11153
  br label %350, !dbg !11505

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11506
  %352 = and i32 %351, 33554432, !dbg !11506
  %353 = icmp eq i32 %352, 0, !dbg !11507
  br i1 %353, label %354, label %384, !dbg !11505

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #25, !dbg !11508
  %356 = sub i32 %355, %349, !dbg !11511
  %357 = icmp ugt i32 %356, 2, !dbg !11512
  br i1 %357, label %385, label %350, !dbg !11513, !llvm.loop !11514

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11516
  %360 = and i32 %359, 33554432, !dbg !11516
  %361 = icmp eq i32 %360, 0, !dbg !11518
  br i1 %361, label %384, label %362, !dbg !11519

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #25, !dbg !11520
  %364 = sub i32 %363, %328, !dbg !11523
  %365 = icmp ugt i32 %364, 2, !dbg !11524
  br i1 %365, label %385, label %358, !dbg !11525, !llvm.loop !11526

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !11528
  br i1 %367, label %385, label %368, !dbg !11531

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11532
  call void @llvm.dbg.value(metadata i32 %369, metadata !11144, metadata !DIExpression()), !dbg !11153
  %370 = and i32 %369, 65536, !dbg !11534
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11536
  %372 = load i32, i32* %371, align 4, !dbg !11536
  %373 = icmp eq i32 %370, %372, !dbg !11537
  br i1 %373, label %374, label %385, !dbg !11538

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !11539
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11540
  %377 = load i32, i32* %376, align 4, !dbg !11540
  %378 = icmp eq i32 %375, %377, !dbg !11541
  br i1 %378, label %379, label %385, !dbg !11542

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !11543
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11544
  %382 = load i32, i32* %381, align 4, !dbg !11544
  %383 = icmp eq i32 %380, %382, !dbg !11545
  br i1 %383, label %384, label %385, !dbg !11546

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !11547

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !11153
  ret i32 %386, !dbg !11548
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #14 !dbg !11549 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11551, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata i32 0, metadata !11553, metadata !DIExpression()), !dbg !11560
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11561
  %4 = and i32 %3, 240, !dbg !11561
  %5 = icmp eq i32 %4, 0, !dbg !11562
  br i1 %5, label %6, label %31, !dbg !11563

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11564
  %8 = and i32 %7, 268435456, !dbg !11564
  %9 = icmp eq i32 %8, 0, !dbg !11564
  br i1 %9, label %12, label %10, !dbg !11565

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11566
  call void @llvm.dbg.value(metadata i32 %11, metadata !11552, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11560
  br label %22, !dbg !11568

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !11569
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !11569
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11554, metadata !DIExpression()), !dbg !11569
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11569
  %15 = or i32 %14, 268435456, !dbg !11569
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11569
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11569
  %17 = and i32 %16, 268435456, !dbg !11569
  store volatile i32 %17, i32* %2, align 4, !dbg !11569
  %18 = load volatile i32, i32* %2, align 4, !dbg !11569
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !11570
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11571
  call void @llvm.dbg.value(metadata i32 %19, metadata !11552, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !11560
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11572
  %21 = and i32 %20, -268435457, !dbg !11572
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !11572
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !11573
  call void @llvm.dbg.value(metadata i32 %24, metadata !11552, metadata !DIExpression()), !dbg !11560
  %25 = icmp eq i32 %24, 6144, !dbg !11574
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !11576
  call void @llvm.dbg.value(metadata i32 undef, metadata !11553, metadata !DIExpression()), !dbg !11560
  br i1 %27, label %28, label %31, !dbg !11577

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11579
  %30 = or i32 %29, 4, !dbg !11579
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11579
  br label %31, !dbg !11579

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11577
  %34 = and i32 %33, -2, !dbg !11577
  %35 = or i32 %34, %32, !dbg !11577
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11577
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11582
  %37 = and i32 %36, 1, !dbg !11582
  %38 = xor i32 %37, %32, !dbg !11560
  ret i32 %38, !dbg !11584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11585 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11598, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.value(metadata i32 %1, metadata !11599, metadata !DIExpression()), !dbg !11602
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11603
  br i1 %3, label %136, label %4, !dbg !11605

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11606
  %6 = and i32 %5, 1, !dbg !11606
  %7 = icmp ult i32 %6, %1, !dbg !11608
  br i1 %7, label %8, label %20, !dbg !11609

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !11610
  br i1 %9, label %10, label %13, !dbg !11614

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11615
  %12 = or i32 %11, 4, !dbg !11615
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11615
  br label %13, !dbg !11615

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11614
  %15 = and i32 %14, -2, !dbg !11614
  %16 = or i32 %15, %1, !dbg !11614
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11614
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11617
  %18 = and i32 %17, 1, !dbg !11617
  %19 = icmp eq i32 %18, %1, !dbg !11619
  br i1 %19, label %20, label %136, !dbg !11620

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11621
  %22 = load i32, i32* %21, align 4, !dbg !11621
  %23 = and i32 %22, 2, !dbg !11623
  %24 = icmp eq i32 %23, 0, !dbg !11624
  br i1 %24, label %32, label %25, !dbg !11625

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11626
  %27 = and i32 %26, -241, !dbg !11626
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11626
  %29 = load i32, i32* %28, align 4, !dbg !11626
  %30 = or i32 %27, %29, !dbg !11626
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11626
  %31 = load i32, i32* %21, align 4, !dbg !11628
  br label %32, !dbg !11630

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !11628
  %34 = and i32 %33, 1, !dbg !11631
  %35 = icmp eq i32 %34, 0, !dbg !11632
  br i1 %35, label %93, label %36, !dbg !11633

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11634
  %38 = load i32, i32* %37, align 4, !dbg !11634
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !11637

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11638
  %41 = and i32 %40, 131072, !dbg !11638
  %42 = icmp eq i32 %41, 0, !dbg !11641
  br i1 %42, label %136, label %55, !dbg !11642

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11643
  %45 = and i32 %44, 33554432, !dbg !11643
  %46 = icmp eq i32 %45, 0, !dbg !11647
  br i1 %46, label %136, label %55, !dbg !11648

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11649
  %49 = and i32 %48, 2, !dbg !11649
  %50 = icmp eq i32 %49, 0, !dbg !11653
  br i1 %50, label %136, label %55, !dbg !11654

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11655
  %53 = and i32 %52, 512, !dbg !11655
  %54 = icmp eq i32 %53, 0, !dbg !11658
  br i1 %54, label %136, label %55, !dbg !11659

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11660
  %57 = and i32 %56, -4, !dbg !11660
  %58 = or i32 %57, %38, !dbg !11660
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11660
  %59 = tail call i32 @HAL_GetTick() #25, !dbg !11661
  call void @llvm.dbg.value(metadata i32 %59, metadata !11600, metadata !DIExpression()), !dbg !11602
  %60 = load i32, i32* %37, align 4, !dbg !11662
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !11664

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11665
  %63 = and i32 %62, 12, !dbg !11665
  %64 = icmp eq i32 %63, 8, !dbg !11667
  br i1 %64, label %93, label %65, !dbg !11668

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !11669
  %67 = sub i32 %66, %59, !dbg !11672
  %68 = icmp ugt i32 %67, 5000, !dbg !11673
  br i1 %68, label %136, label %61, !dbg !11674, !llvm.loop !11675

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11677
  %71 = and i32 %70, 12, !dbg !11677
  %72 = icmp eq i32 %71, 12, !dbg !11680
  br i1 %72, label %93, label %73, !dbg !11681

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #25, !dbg !11682
  %75 = sub i32 %74, %59, !dbg !11685
  %76 = icmp ugt i32 %75, 5000, !dbg !11686
  br i1 %76, label %136, label %69, !dbg !11687, !llvm.loop !11688

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11690
  %79 = and i32 %78, 12, !dbg !11690
  %80 = icmp eq i32 %79, 4, !dbg !11693
  br i1 %80, label %93, label %81, !dbg !11694

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !11695
  %83 = sub i32 %82, %59, !dbg !11698
  %84 = icmp ugt i32 %83, 5000, !dbg !11699
  br i1 %84, label %136, label %77, !dbg !11700, !llvm.loop !11701

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11703
  %87 = and i32 %86, 12, !dbg !11703
  %88 = icmp eq i32 %87, 0, !dbg !11705
  br i1 %88, label %93, label %89, !dbg !11706

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #25, !dbg !11707
  %91 = sub i32 %90, %59, !dbg !11710
  %92 = icmp ugt i32 %91, 5000, !dbg !11711
  br i1 %92, label %136, label %85, !dbg !11712, !llvm.loop !11713

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11715
  %95 = and i32 %94, 1, !dbg !11715
  %96 = icmp ugt i32 %95, %1, !dbg !11717
  br i1 %96, label %97, label %103, !dbg !11718

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11719
  %99 = and i32 %98, -2, !dbg !11719
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11719
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11722
  %101 = and i32 %100, 1, !dbg !11722
  %102 = icmp eq i32 %101, 0, !dbg !11724
  br i1 %102, label %103, label %136, !dbg !11725

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !11726
  %105 = and i32 %104, 4, !dbg !11728
  %106 = icmp eq i32 %105, 0, !dbg !11729
  br i1 %106, label %114, label %107, !dbg !11730

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11731
  %109 = and i32 %108, -1793, !dbg !11731
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11731
  %111 = load i32, i32* %110, align 4, !dbg !11731
  %112 = or i32 %109, %111, !dbg !11731
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11731
  %113 = load i32, i32* %21, align 4, !dbg !11733
  br label %114, !dbg !11735

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !11733
  %116 = and i32 %115, 8, !dbg !11736
  %117 = icmp eq i32 %116, 0, !dbg !11737
  br i1 %117, label %125, label %118, !dbg !11738

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11739
  %120 = and i32 %119, -14337, !dbg !11739
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11739
  %122 = load i32, i32* %121, align 4, !dbg !11739
  %123 = shl i32 %122, 3, !dbg !11739
  %124 = or i32 %123, %120, !dbg !11739
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11739
  br label %125, !dbg !11741

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11742
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11743
  %128 = lshr i32 %127, 4, !dbg !11744
  %129 = and i32 %128, 15, !dbg !11744
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !11745
  %131 = load i8, i8* %130, align 1, !dbg !11745
  %132 = zext i8 %131 to i32, !dbg !11745
  %133 = lshr i32 %126, %132, !dbg !11746
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !11747
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !11748
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #25, !dbg !11749
  call void @llvm.dbg.value(metadata i32 %135, metadata !11601, metadata !DIExpression()), !dbg !11602
  br label %136, !dbg !11750

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !11602
  ret i32 %137, !dbg !11751
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !11752 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11760
  call void @llvm.dbg.value(metadata i32 %1, metadata !11754, metadata !DIExpression()), !dbg !11761
  %2 = lshr i32 %1, 2, !dbg !11762
  %3 = and i32 %2, 3, !dbg !11762
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !11762

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !11759, metadata !DIExpression()), !dbg !11761
  br label %26, !dbg !11763

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !11766
  %7 = and i32 %6, 15, !dbg !11766
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !11768
  %9 = load i8, i8* %8, align 1, !dbg !11768
  call void @llvm.dbg.value(metadata i8 %9, metadata !11755, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11761
  %10 = lshr i32 %1, 22, !dbg !11769
  %11 = and i32 %10, 3, !dbg !11769
  %12 = add nuw nsw i32 %11, 1, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %12, metadata !11756, metadata !DIExpression()), !dbg !11761
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11771
  %14 = and i32 %13, 65536, !dbg !11771
  %15 = icmp eq i32 %14, 0, !dbg !11773
  %16 = zext i8 %9 to i32, !dbg !11774
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !11774
  %18 = mul nuw i32 %17, %16, !dbg !11774
  %19 = udiv i32 %18, %12, !dbg !11775
  call void @llvm.dbg.value(metadata i32 %19, metadata !11757, metadata !DIExpression()), !dbg !11761
  call void @llvm.dbg.value(metadata i32 %19, metadata !11759, metadata !DIExpression()), !dbg !11761
  br label %26, !dbg !11776

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11777
  %23 = lshr i32 %22, 13, !dbg !11779
  %24 = and i32 %23, 7, !dbg !11779
  call void @llvm.dbg.value(metadata i32 %24, metadata !11758, metadata !DIExpression()), !dbg !11761
  %25 = shl nuw nsw i32 65536, %24, !dbg !11780
  call void @llvm.dbg.value(metadata i32 %25, metadata !11759, metadata !DIExpression()), !dbg !11761
  br label %26, !dbg !11781

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !11782
  call void @llvm.dbg.value(metadata i32 %27, metadata !11759, metadata !DIExpression()), !dbg !11761
  ret i32 %27, !dbg !11783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11784 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11786, metadata !DIExpression()), !dbg !11801
  call void @llvm.dbg.value(metadata i32 %1, metadata !11787, metadata !DIExpression()), !dbg !11801
  call void @llvm.dbg.value(metadata i32 %2, metadata !11788, metadata !DIExpression()), !dbg !11801
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11802
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11802
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11789, metadata !DIExpression()), !dbg !11803
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11804
  store i32 2, i32* %7, align 4, !dbg !11805
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11806
  store i32 2, i32* %8, align 4, !dbg !11807
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11808
  store i32 0, i32* %9, align 4, !dbg !11809
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11810
  store i32 256, i32* %10, align 4, !dbg !11811
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11812
  store i32 0, i32* %11, align 4, !dbg !11813
  %12 = bitcast i32* %5 to i8*, !dbg !11814
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !11814
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11799, metadata !DIExpression()), !dbg !11814
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11814
  %14 = or i32 %13, 1, !dbg !11814
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11814
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !11814
  %16 = and i32 %15, 1, !dbg !11814
  store volatile i32 %16, i32* %5, align 4, !dbg !11814
  %17 = load volatile i32, i32* %5, align 4, !dbg !11814
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !11815
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11816
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11817
  %19 = and i32 %18, -1996488705, !dbg !11817
  %20 = or i32 %2, %1, !dbg !11817
  %21 = or i32 %20, %19, !dbg !11817
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11817
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11818
  ret void, !dbg !11818
}

; Function Attrs: optsize
declare !dbg !11819 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11823 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11824
  ret void, !dbg !11825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11826 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11827
  ret void, !dbg !11828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11829 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11830
  ret i32 %1, !dbg !11831
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11832 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11833
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11834
  %3 = lshr i32 %2, 8, !dbg !11835
  %4 = and i32 %3, 7, !dbg !11835
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11836
  %6 = load i8, i8* %5, align 1, !dbg !11836
  %7 = zext i8 %6 to i32, !dbg !11836
  %8 = lshr i32 %1, %7, !dbg !11837
  ret i32 %8, !dbg !11838
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11839 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11840
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11841
  %3 = lshr i32 %2, 11, !dbg !11842
  %4 = and i32 %3, 7, !dbg !11842
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11843
  %6 = load i8, i8* %5, align 1, !dbg !11843
  %7 = zext i8 %6 to i32, !dbg !11843
  %8 = lshr i32 %1, %7, !dbg !11844
  ret i32 %8, !dbg !11845
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !11846 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11850, metadata !DIExpression()), !dbg !11851
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11852
  store i32 31, i32* %2, align 4, !dbg !11853
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11854
  %4 = and i32 %3, 262144, !dbg !11856
  %5 = icmp eq i32 %4, 0, !dbg !11857
  br i1 %5, label %8, label %6, !dbg !11858

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11859
  store i32 5, i32* %7, align 4, !dbg !11861
  br label %15, !dbg !11862

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11863
  %10 = and i32 %9, 65536, !dbg !11865
  %11 = icmp eq i32 %10, 0, !dbg !11866
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11867
  br i1 %11, label %14, label %13, !dbg !11868

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !11869
  br label %15, !dbg !11871

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11872
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11874
  %17 = and i32 %16, 1, !dbg !11876
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11877
  store i32 %17, i32* %18, align 4, !dbg !11879
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11880
  %20 = lshr i32 %19, 8, !dbg !11881
  %21 = and i32 %20, 31, !dbg !11881
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11882
  store i32 %21, i32* %22, align 4, !dbg !11883
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11884
  %24 = lshr i32 %23, 8, !dbg !11886
  %25 = and i32 %24, 1, !dbg !11886
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !11887
  store i32 %25, i32* %26, align 4, !dbg !11889
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11890
  %28 = lshr i32 %27, 24, !dbg !11891
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !11892
  store i32 %28, i32* %29, align 4, !dbg !11893
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11894
  %31 = and i32 %30, 57344, !dbg !11895
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !11896
  store i32 %31, i32* %32, align 4, !dbg !11897
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11898
  %34 = and i32 %33, 1024, !dbg !11900
  %35 = icmp eq i32 %34, 0, !dbg !11901
  br i1 %35, label %38, label %36, !dbg !11902

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11903
  store i32 5, i32* %37, align 4, !dbg !11905
  br label %45, !dbg !11906

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11907
  %40 = and i32 %39, 256, !dbg !11909
  %41 = icmp eq i32 %40, 0, !dbg !11910
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11911
  br i1 %41, label %44, label %43, !dbg !11912

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !11913
  br label %45, !dbg !11915

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !11916
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11918
  %47 = and i32 %46, 1, !dbg !11920
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11921
  store i32 %47, i32* %48, align 4, !dbg !11923
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11924
  %50 = and i32 %49, 16777216, !dbg !11926
  %51 = icmp eq i32 %50, 0, !dbg !11927
  %52 = select i1 %51, i32 1, i32 2, !dbg !11928
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !11929
  store i32 %52, i32* %53, align 4, !dbg !11931
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11932
  %55 = and i32 %54, 65536, !dbg !11933
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !11934
  store i32 %55, i32* %56, align 4, !dbg !11935
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11936
  %58 = and i32 %57, 3932160, !dbg !11937
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !11938
  store i32 %58, i32* %59, align 4, !dbg !11939
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11940
  %61 = and i32 %60, 12582912, !dbg !11941
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !11942
  store i32 %61, i32* %62, align 4, !dbg !11943
  ret void, !dbg !11944
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11945 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11949, metadata !DIExpression()), !dbg !11951
  call void @llvm.dbg.value(metadata i32* %1, metadata !11950, metadata !DIExpression()), !dbg !11951
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11952
  store i32 15, i32* %3, align 4, !dbg !11953
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11954
  %5 = and i32 %4, 3, !dbg !11955
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11956
  store i32 %5, i32* %6, align 4, !dbg !11957
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11958
  %8 = and i32 %7, 240, !dbg !11959
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11960
  store i32 %8, i32* %9, align 4, !dbg !11961
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11962
  %11 = and i32 %10, 1792, !dbg !11963
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11964
  store i32 %11, i32* %12, align 4, !dbg !11965
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11966
  %14 = lshr i32 %13, 3, !dbg !11967
  %15 = and i32 %14, 1792, !dbg !11967
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11968
  store i32 %15, i32* %16, align 4, !dbg !11969
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11970
  %18 = and i32 %17, 1, !dbg !11970
  store i32 %18, i32* %1, align 4, !dbg !11971
  ret void, !dbg !11972
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11973 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11974
  %2 = and i32 %1, 128, !dbg !11974
  %3 = icmp eq i32 %2, 0, !dbg !11974
  br i1 %3, label %5, label %4, !dbg !11976

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11977
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11979
  br label %5, !dbg !11980

5:                                                ; preds = %4, %0
  ret void, !dbg !11981
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11982 {
  ret void, !dbg !11983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11984 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11987, metadata !DIExpression()), !dbg !11988
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11989
  ret void, !dbg !11990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11994, metadata !DIExpression()), !dbg !11996
  call void @llvm.dbg.value(metadata i32 1000, metadata !11995, metadata !DIExpression()), !dbg !11996
  %2 = udiv i32 %0, 1000, !dbg !11997
  %3 = add nsw i32 %2, -1, !dbg !11998
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11999
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12000
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12001
  ret void, !dbg !12002
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #14 !dbg !12003 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12005, metadata !DIExpression()), !dbg !12008
  %3 = bitcast i32* %2 to i8*, !dbg !12009
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12009
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12006, metadata !DIExpression()), !dbg !12010
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12011
  store volatile i32 %4, i32* %2, align 4, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %0, metadata !12007, metadata !DIExpression()), !dbg !12008
  %5 = load volatile i32, i32* %2, align 4, !dbg !12012
  %6 = icmp eq i32 %0, -1, !dbg !12013
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12007, metadata !DIExpression()), !dbg !12008
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %8, metadata !12007, metadata !DIExpression()), !dbg !12008
  br label %9, !dbg !12015

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12007, metadata !DIExpression()), !dbg !12008
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12016
  call void @llvm.dbg.value(metadata i32 undef, metadata !12007, metadata !DIExpression()), !dbg !12008
  %12 = shl i32 %11, 15, !dbg !12008
  %13 = ashr i32 %12, 31, !dbg !12008
  %14 = add i32 %13, %10, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %14, metadata !12007, metadata !DIExpression()), !dbg !12008
  %15 = icmp eq i32 %14, 0, !dbg !12019
  br i1 %15, label %16, label %9, !dbg !12015

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12020
  ret void, !dbg !12020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12023, metadata !DIExpression()), !dbg !12024
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12025
  ret void, !dbg !12026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12027 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12032, metadata !DIExpression()), !dbg !12035
  call void @llvm.dbg.value(metadata i32 0, metadata !12033, metadata !DIExpression()), !dbg !12035
  call void @llvm.dbg.value(metadata i32 0, metadata !12034, metadata !DIExpression()), !dbg !12035
  %2 = add i32 %0, -32000001, !dbg !12036
  %3 = icmp ult i32 %2, -32000000, !dbg !12036
  br i1 %3, label %22, label %4, !dbg !12036

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12038
  %6 = icmp eq i32 %5, 2048, !dbg !12041
  br i1 %6, label %7, label %9, !dbg !12042

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !12043
  call void @llvm.dbg.value(metadata i32 undef, metadata !12034, metadata !DIExpression()), !dbg !12035
  br i1 %8, label %16, label %17, !dbg !12046

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12047
  %11 = icmp eq i32 %10, 4096, !dbg !12049
  br i1 %11, label %12, label %14, !dbg !12050

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !12051
  call void @llvm.dbg.value(metadata i32 undef, metadata !12034, metadata !DIExpression()), !dbg !12035
  br i1 %13, label %16, label %17, !dbg !12046

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !12054
  call void @llvm.dbg.value(metadata i32 undef, metadata !12034, metadata !DIExpression()), !dbg !12035
  br i1 %15, label %16, label %17, !dbg !12046

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #24, !dbg !12057
  br label %17, !dbg !12060

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #24, !dbg !12061
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12062
  %20 = icmp ne i32 %19, %18, !dbg !12064
  %21 = zext i1 %20 to i32, !dbg !12065
  br label %22, !dbg !12065

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !12035
  call void @llvm.dbg.value(metadata i32 %23, metadata !12033, metadata !DIExpression()), !dbg !12035
  ret i32 %23, !dbg !12066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12067 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12068
  %2 = and i32 %1, 6144, !dbg !12068
  ret i32 %2, !dbg !12069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #15 !dbg !12070 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12071
  %2 = or i32 %1, 4, !dbg !12071
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12071
  ret void, !dbg !12072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12075, metadata !DIExpression()), !dbg !12076
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12077
  %3 = and i32 %2, -2, !dbg !12077
  %4 = or i32 %3, %0, !dbg !12077
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12077
  ret void, !dbg !12078
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12079 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12080
  %2 = and i32 %1, 1, !dbg !12080
  ret i32 %2, !dbg !12081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12082 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12099, metadata !DIExpression()), !dbg !12103
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12100, metadata !DIExpression()), !dbg !12103
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12104
  %4 = icmp eq i32 %3, 0, !dbg !12106
  br i1 %4, label %5, label %19, !dbg !12107

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #24, !dbg !12108
  call void @llvm.dbg.value(metadata i32 %6, metadata !12102, metadata !DIExpression()), !dbg !12103
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.189() #24, !dbg !12110
  %8 = icmp eq i32 %7, 1, !dbg !12112
  br i1 %8, label %13, label %9, !dbg !12113

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.190() #24, !dbg !12114
  br label %10, !dbg !12116

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.189() #24, !dbg !12117
  %12 = icmp eq i32 %11, 1, !dbg !12118
  br i1 %12, label %13, label %10, !dbg !12116, !llvm.loop !12119

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !12121
  %15 = load i32, i32* %14, align 4, !dbg !12121
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !12122
  %17 = load i32, i32* %16, align 4, !dbg !12122
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.191(i32 noundef 0, i32 noundef %15, i32 noundef %17) #24, !dbg !12123
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !12124
  call void @llvm.dbg.value(metadata i32 %18, metadata !12101, metadata !DIExpression()), !dbg !12103
  br label %19, !dbg !12125

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !12126
  call void @llvm.dbg.value(metadata i32 %20, metadata !12101, metadata !DIExpression()), !dbg !12103
  ret i32 %20, !dbg !12127
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12128 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12132, metadata !DIExpression()), !dbg !12133
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.193() #24, !dbg !12134
  %2 = icmp ne i32 %1, 0, !dbg !12136
  %3 = zext i1 %2 to i32, !dbg !12137
  call void @llvm.dbg.value(metadata i32 %3, metadata !12132, metadata !DIExpression()), !dbg !12133
  ret i32 %3, !dbg !12138
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12143, metadata !DIExpression()), !dbg !12146
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !12144, metadata !DIExpression()), !dbg !12146
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !12147
  %4 = load i32, i32* %3, align 4, !dbg !12147
  %5 = lshr i32 %4, 18, !dbg !12148
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !12149
  %7 = load i8, i8* %6, align 1, !dbg !12149
  %8 = zext i8 %7 to i32, !dbg !12150
  %9 = mul i32 %8, %0, !dbg !12151
  call void @llvm.dbg.value(metadata i32 %9, metadata !12145, metadata !DIExpression()), !dbg !12146
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !12152
  %11 = load i32, i32* %10, align 4, !dbg !12152
  %12 = lshr i32 %11, 22, !dbg !12153
  %13 = add nuw nsw i32 %12, 1, !dbg !12154
  %14 = udiv i32 %9, %13, !dbg !12155
  call void @llvm.dbg.value(metadata i32 %14, metadata !12145, metadata !DIExpression()), !dbg !12146
  ret i32 %14, !dbg !12156
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.189() unnamed_addr #16 !dbg !12157 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12158
  %2 = lshr i32 %1, 1, !dbg !12159
  %3 = and i32 %2, 1, !dbg !12159
  ret i32 %3, !dbg !12160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.190() unnamed_addr #15 !dbg !12161 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12162
  %2 = or i32 %1, 1, !dbg !12162
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12162
  ret void, !dbg !12163
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.191(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12166, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.value(metadata i32 %1, metadata !12167, metadata !DIExpression()), !dbg !12169
  call void @llvm.dbg.value(metadata i32 %2, metadata !12168, metadata !DIExpression()), !dbg !12169
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12170
  %5 = and i32 %4, -16580609, !dbg !12170
  %6 = or i32 %1, %0, !dbg !12170
  %7 = or i32 %6, %2, !dbg !12170
  %8 = or i32 %7, %5, !dbg !12170
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12170
  ret void, !dbg !12171
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12176, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12177, metadata !DIExpression()), !dbg !12180
  call void @llvm.dbg.value(metadata i32 0, metadata !12178, metadata !DIExpression()), !dbg !12180
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12181
  %4 = load i32, i32* %3, align 4, !dbg !12181
  %5 = lshr i32 %4, 4, !dbg !12181
  %6 = and i32 %5, 15, !dbg !12181
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12181
  %8 = load i8, i8* %7, align 1, !dbg !12181
  %9 = zext i8 %8 to i32, !dbg !12181
  %10 = lshr i32 %0, %9, !dbg !12181
  call void @llvm.dbg.value(metadata i32 %10, metadata !12179, metadata !DIExpression()), !dbg !12180
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12182
  %12 = icmp ult i32 %11, %10, !dbg !12184
  br i1 %12, label %13, label %16, !dbg !12185

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %14, metadata !12178, metadata !DIExpression()), !dbg !12180
  %15 = icmp eq i32 %14, 0, !dbg !12188
  br i1 %15, label %16, label %30, !dbg !12190

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.192() #24, !dbg !12191
  br label %17, !dbg !12193

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.193() #24, !dbg !12194
  %19 = icmp eq i32 %18, 1, !dbg !12195
  br i1 %19, label %20, label %17, !dbg !12193, !llvm.loop !12196

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12198
  tail call fastcc void @LL_RCC_SetAHBPrescaler.194(i32 noundef %21) #24, !dbg !12199
  tail call fastcc void @LL_RCC_SetSysClkSource.195() #24, !dbg !12200
  br label %22, !dbg !12201

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.196() #24, !dbg !12202
  %24 = icmp eq i32 %23, 12, !dbg !12203
  br i1 %24, label %25, label %22, !dbg !12201, !llvm.loop !12204

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12206
  %27 = load i32, i32* %26, align 4, !dbg !12206
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.197(i32 noundef %27) #24, !dbg !12207
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12208
  %29 = load i32, i32* %28, align 4, !dbg !12208
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.198(i32 noundef %29) #24, !dbg !12209
  br label %30, !dbg !12210

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12211
  %33 = icmp ugt i32 %32, %10, !dbg !12213
  br i1 %33, label %34, label %36, !dbg !12214

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12215
  call void @llvm.dbg.value(metadata i32 %35, metadata !12178, metadata !DIExpression()), !dbg !12180
  br label %36, !dbg !12217

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12180
  call void @llvm.dbg.value(metadata i32 %37, metadata !12178, metadata !DIExpression()), !dbg !12180
  %38 = icmp eq i32 %37, 0, !dbg !12218
  br i1 %38, label %39, label %40, !dbg !12220

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12221
  br label %40, !dbg !12223

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.192() unnamed_addr #15 !dbg !12225 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12226
  %2 = or i32 %1, 16777216, !dbg !12226
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12226
  ret void, !dbg !12227
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.193() unnamed_addr #16 !dbg !12228 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12229
  %2 = lshr i32 %1, 25, !dbg !12230
  %3 = and i32 %2, 1, !dbg !12230
  ret i32 %3, !dbg !12231
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.194(i32 noundef %0) unnamed_addr #15 !dbg !12232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12234, metadata !DIExpression()), !dbg !12235
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12236
  %3 = and i32 %2, -241, !dbg !12236
  %4 = or i32 %3, %0, !dbg !12236
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12236
  ret void, !dbg !12237
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.195() unnamed_addr #15 !dbg !12238 {
  call void @llvm.dbg.value(metadata i32 3, metadata !12240, metadata !DIExpression()), !dbg !12241
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12242
  %2 = or i32 %1, 3, !dbg !12242
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12242
  ret void, !dbg !12243
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.196() unnamed_addr #16 !dbg !12244 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12245
  %2 = and i32 %1, 12, !dbg !12245
  ret i32 %2, !dbg !12246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.197(i32 noundef %0) unnamed_addr #15 !dbg !12247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12249, metadata !DIExpression()), !dbg !12250
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12251
  %3 = and i32 %2, -1793, !dbg !12251
  %4 = or i32 %3, %0, !dbg !12251
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12251
  ret void, !dbg !12252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.198(i32 noundef %0) unnamed_addr #15 !dbg !12253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12255, metadata !DIExpression()), !dbg !12256
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12257
  %3 = and i32 %2, -14337, !dbg !12257
  %4 = or i32 %3, %0, !dbg !12257
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12257
  ret void, !dbg !12258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12259 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12263, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata i32 %1, metadata !12264, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !12265, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12266, metadata !DIExpression()), !dbg !12269
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12270
  %6 = icmp eq i32 %5, 0, !dbg !12272
  br i1 %6, label %7, label %25, !dbg !12273

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #24, !dbg !12274
  call void @llvm.dbg.value(metadata i32 %8, metadata !12268, metadata !DIExpression()), !dbg !12269
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12276
  %10 = icmp eq i32 %9, 1, !dbg !12278
  br i1 %10, label %19, label %11, !dbg !12279

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12280
  br i1 %12, label %13, label %14, !dbg !12283

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12284
  br label %15, !dbg !12286

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !12287
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !12289
  br label %16, !dbg !12290

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !12291
  %18 = icmp eq i32 %17, 1, !dbg !12292
  br i1 %18, label %19, label %16, !dbg !12290, !llvm.loop !12293

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !12295
  %21 = load i32, i32* %20, align 4, !dbg !12295
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !12296
  %23 = load i32, i32* %22, align 4, !dbg !12296
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.191(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #24, !dbg !12297
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12298
  call void @llvm.dbg.value(metadata i32 %24, metadata !12267, metadata !DIExpression()), !dbg !12269
  br label %25, !dbg !12299

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !12300
  call void @llvm.dbg.value(metadata i32 %26, metadata !12267, metadata !DIExpression()), !dbg !12269
  ret i32 %26, !dbg !12301
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !12302 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12303
  %2 = lshr i32 %1, 17, !dbg !12304
  %3 = and i32 %2, 1, !dbg !12304
  ret i32 %3, !dbg !12305
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12306 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12307
  %2 = or i32 %1, 262144, !dbg !12307
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12307
  ret void, !dbg !12308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !12309 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  %2 = and i32 %1, -262145, !dbg !12310
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12310
  ret void, !dbg !12311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !12312 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12313
  %2 = or i32 %1, 65536, !dbg !12313
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12313
  ret void, !dbg !12314
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12315 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12318, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 undef, metadata !12318, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 undef, metadata !12318, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12334
  ret void, !dbg !12335
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12336 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12340, metadata !DIExpression()), !dbg !12342
  %2 = icmp eq i8* %0, null, !dbg !12343
  br i1 %2, label %29, label %3, !dbg !12345

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12346
  %5 = icmp eq i8 %4, 0, !dbg !12347
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12348
  br i1 %6, label %29, label %8, !dbg !12348

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12341, metadata !DIExpression()), !dbg !12342
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12349

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12341, metadata !DIExpression()), !dbg !12342
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12351
  br i1 %10, label %11, label %15, !dbg !12356

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12357
  %13 = load i8*, i8** %12, align 4, !dbg !12357
  %14 = icmp eq i8* %13, %0, !dbg !12358
  br i1 %14, label %29, label %15, !dbg !12359

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12360
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12341, metadata !DIExpression()), !dbg !12342
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12361
  br i1 %17, label %7, label %8, !dbg !12362, !llvm.loop !12363

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12341, metadata !DIExpression()), !dbg !12342
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12365
  br i1 %20, label %21, label %26, !dbg !12369

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12370
  %23 = load i8*, i8** %22, align 4, !dbg !12370
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12371
  %25 = icmp eq i32 %24, 0, !dbg !12372
  br i1 %25, label %29, label %26, !dbg !12373

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12374
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12341, metadata !DIExpression()), !dbg !12342
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12375
  br i1 %28, label %29, label %18, !dbg !12349, !llvm.loop !12376

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12342
  ret %struct.device* %30, !dbg !12378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12379 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12383, metadata !DIExpression()), !dbg !12384
  %2 = icmp eq %struct.device* %0, null, !dbg !12385
  br i1 %2, label %14, label %3, !dbg !12387

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12388
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12388
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12389
  %7 = load i8, i8* %6, align 1, !dbg !12389
  %8 = and i8 %7, 1, !dbg !12389
  %9 = icmp eq i8 %8, 0, !dbg !12389
  br i1 %9, label %14, label %10, !dbg !12390

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12391
  %12 = load i8, i8* %11, align 1, !dbg !12391
  %13 = icmp eq i8 %12, 0, !dbg !12392
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12384
  ret i1 %15, !dbg !12393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12394 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12399, metadata !DIExpression()), !dbg !12400
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12401
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12402
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12403 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12411, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12412, metadata !DIExpression()), !dbg !12416
  call void @llvm.dbg.value(metadata i8* %2, metadata !12413, metadata !DIExpression()), !dbg !12416
  %5 = bitcast i32* %4 to i8*, !dbg !12417
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12417
  call void @llvm.dbg.value(metadata i32 0, metadata !12414, metadata !DIExpression()), !dbg !12416
  store i32 0, i32* %4, align 4, !dbg !12418
  call void @llvm.dbg.value(metadata i32* %4, metadata !12414, metadata !DIExpression(DW_OP_deref)), !dbg !12416
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12419
  call void @llvm.dbg.value(metadata i16* %6, metadata !12415, metadata !DIExpression()), !dbg !12416
  %7 = load i32, i32* %4, align 4, !dbg !12420
  call void @llvm.dbg.value(metadata i32 %7, metadata !12414, metadata !DIExpression()), !dbg !12416
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12421
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12422
  ret i32 %8, !dbg !12423
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12428, metadata !DIExpression()), !dbg !12434
  call void @llvm.dbg.value(metadata i32* %1, metadata !12429, metadata !DIExpression()), !dbg !12434
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12435
  %4 = load i16*, i16** %3, align 4, !dbg !12435
  call void @llvm.dbg.value(metadata i16* %4, metadata !12430, metadata !DIExpression()), !dbg !12434
  %5 = icmp eq i16* %4, null, !dbg !12436
  br i1 %5, label %14, label %6, !dbg !12437

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12438
  call void @llvm.dbg.value(metadata i32 %7, metadata !12431, metadata !DIExpression()), !dbg !12438
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12439
  %9 = load i16, i16* %8, align 2, !dbg !12439
  %10 = add i16 %9, -32767, !dbg !12440
  %11 = icmp ult i16 %10, 2, !dbg !12440
  %12 = add i32 %7, 1, !dbg !12441
  call void @llvm.dbg.value(metadata i32 %12, metadata !12431, metadata !DIExpression()), !dbg !12438
  br i1 %11, label %13, label %6, !dbg !12440, !llvm.loop !12443

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12446
  br label %14, !dbg !12447

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12449 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12453, metadata !DIExpression()), !dbg !12464
  call void @llvm.dbg.value(metadata i32 %1, metadata !12454, metadata !DIExpression()), !dbg !12464
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12455, metadata !DIExpression()), !dbg !12464
  call void @llvm.dbg.value(metadata i8* %3, metadata !12456, metadata !DIExpression()), !dbg !12464
  call void @llvm.dbg.value(metadata i32 0, metadata !12457, metadata !DIExpression()), !dbg !12465
  %5 = icmp eq i32 %1, 0, !dbg !12466
  br i1 %5, label %16, label %8, !dbg !12467

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12457, metadata !DIExpression()), !dbg !12465
  %7 = icmp eq i32 %15, %1, !dbg !12466
  br i1 %7, label %16, label %8, !dbg !12467, !llvm.loop !12468

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12457, metadata !DIExpression()), !dbg !12465
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12470
  %11 = load i16, i16* %10, align 2, !dbg !12470
  call void @llvm.dbg.value(metadata i16 %11, metadata !12459, metadata !DIExpression()), !dbg !12471
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12472
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12462, metadata !DIExpression()), !dbg !12471
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12473
  call void @llvm.dbg.value(metadata i32 %13, metadata !12463, metadata !DIExpression()), !dbg !12471
  %14 = icmp slt i32 %13, 0, !dbg !12474
  %15 = add nuw i32 %9, 1, !dbg !12476
  call void @llvm.dbg.value(metadata i32 %15, metadata !12457, metadata !DIExpression()), !dbg !12465
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !12478 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12482, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12483, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12484, metadata !DIExpression()), !dbg !12485
  %2 = sext i16 %0 to i32, !dbg !12486
  %3 = icmp slt i16 %0, 1, !dbg !12488
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12489
  %6 = add nsw i32 %2, -1, !dbg !12489
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12489
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12489
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12483, metadata !DIExpression()), !dbg !12485
  ret %struct.device* %8, !dbg !12490
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12491 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12493, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12494, metadata !DIExpression()), !dbg !12498
  call void @llvm.dbg.value(metadata i8* %2, metadata !12495, metadata !DIExpression()), !dbg !12498
  %5 = bitcast i32* %4 to i8*, !dbg !12499
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12499
  call void @llvm.dbg.value(metadata i32 0, metadata !12496, metadata !DIExpression()), !dbg !12498
  store i32 0, i32* %4, align 4, !dbg !12500
  call void @llvm.dbg.value(metadata i32* %4, metadata !12496, metadata !DIExpression(DW_OP_deref)), !dbg !12498
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12501
  call void @llvm.dbg.value(metadata i16* %6, metadata !12497, metadata !DIExpression()), !dbg !12498
  %7 = load i32, i32* %4, align 4, !dbg !12502
  call void @llvm.dbg.value(metadata i32 %7, metadata !12496, metadata !DIExpression()), !dbg !12498
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12503
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12504
  ret i32 %8, !dbg !12505
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12506 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12508, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32* %1, metadata !12509, metadata !DIExpression()), !dbg !12513
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12514
  %4 = load i16*, i16** %3, align 4, !dbg !12514
  call void @llvm.dbg.value(metadata i16* %4, metadata !12510, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 0, metadata !12511, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i32 0, metadata !12512, metadata !DIExpression()), !dbg !12513
  %5 = icmp eq i16* %4, null, !dbg !12515
  br i1 %5, label %22, label %6, !dbg !12517

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12511, metadata !DIExpression()), !dbg !12513
  call void @llvm.dbg.value(metadata i16* %8, metadata !12510, metadata !DIExpression()), !dbg !12513
  %9 = load i16, i16* %8, align 2, !dbg !12518
  %10 = icmp eq i16 %9, -32768, !dbg !12522
  call void @llvm.dbg.value(metadata i32 undef, metadata !12511, metadata !DIExpression()), !dbg !12513
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12523
  call void @llvm.dbg.value(metadata i16* %11, metadata !12510, metadata !DIExpression()), !dbg !12513
  %12 = zext i1 %10 to i32, !dbg !12524
  %13 = add i32 %7, %12, !dbg !12524
  call void @llvm.dbg.value(metadata i32 %13, metadata !12511, metadata !DIExpression()), !dbg !12513
  %14 = icmp eq i32 %13, 2, !dbg !12525
  br i1 %14, label %15, label %6, !dbg !12526

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12513
  call void @llvm.dbg.value(metadata i32 %16, metadata !12512, metadata !DIExpression()), !dbg !12513
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12527
  %18 = load i16, i16* %17, align 2, !dbg !12527
  %19 = icmp eq i16 %18, 32767, !dbg !12528
  %20 = add i32 %16, 1, !dbg !12529
  call void @llvm.dbg.value(metadata i32 %20, metadata !12512, metadata !DIExpression()), !dbg !12513
  br i1 %19, label %21, label %15, !dbg !12531, !llvm.loop !12532

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12534
  br label %22, !dbg !12535

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12536
  call void @llvm.dbg.value(metadata i16* %23, metadata !12510, metadata !DIExpression()), !dbg !12513
  ret i16* %23, !dbg !12537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12538 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12541
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12542
  ret i32* %2, !dbg !12543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12544 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12695, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12696, metadata !DIExpression()), !dbg !12698
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12697, metadata !DIExpression()), !dbg !12698
  ret void, !dbg !12699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12704, metadata !DIExpression()), !dbg !12706
  call void @llvm.dbg.value(metadata i32 %1, metadata !12705, metadata !DIExpression()), !dbg !12706
  ret void, !dbg !12707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12712, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.value(metadata i32 %1, metadata !12713, metadata !DIExpression()), !dbg !12714
  ret void, !dbg !12715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12720, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.value(metadata i8* %1, metadata !12721, metadata !DIExpression()), !dbg !12722
  ret i32 -134, !dbg !12723
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12728, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata i8* %1, metadata !12729, metadata !DIExpression()), !dbg !12730
  ret i32 -134, !dbg !12731
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12732 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12735, metadata !DIExpression()), !dbg !12736
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12737, !srcloc !12743
  call void @llvm.dbg.value(metadata i32 undef, metadata !12740, metadata !DIExpression()) #23, !dbg !12744
  call void @llvm.dbg.value(metadata i32 undef, metadata !12741, metadata !DIExpression()) #23, !dbg !12744
  br label %3, !dbg !12745

3:                                                ; preds = %3, %1
  br label %3, !dbg !12746, !llvm.loop !12749
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12756, metadata !DIExpression()), !dbg !12758
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12757, metadata !DIExpression()), !dbg !12758
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.203, i32 0, i32 0), i32 noundef 69) #25, !dbg !12759
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12764
  unreachable, !dbg !12764
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12765 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12767, metadata !DIExpression()), !dbg !12768
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12769
  unreachable, !dbg !12769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12772, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12773, metadata !DIExpression()), !dbg !12776
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12777, !srcloc !12743
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12777
  call void @llvm.dbg.value(metadata i32 %4, metadata !12740, metadata !DIExpression()) #23, !dbg !12779
  call void @llvm.dbg.value(metadata i32 undef, metadata !12741, metadata !DIExpression()) #23, !dbg !12779
  call void @llvm.dbg.value(metadata i32 %4, metadata !12774, metadata !DIExpression()), !dbg !12776
  %5 = tail call fastcc %struct.k_thread* @k_current_get.206() #26, !dbg !12780
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12775, metadata !DIExpression()), !dbg !12776
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !12781
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.207, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !12781
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12786
  br i1 %7, label %20, label %8, !dbg !12788

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12789, metadata !DIExpression()), !dbg !12794
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12796
  %10 = load i32, i32* %9, align 4, !dbg !12796
  %11 = and i32 %10, 511, !dbg !12797
  %12 = icmp eq i32 %11, 0, !dbg !12798
  br i1 %12, label %14, label %13, !dbg !12799

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.208, i32 0, i32 0), i32 noundef 69) #25, !dbg !12800
  br label %14, !dbg !12806

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12807
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.209, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !12807
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12812
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12789, metadata !DIExpression()), !dbg !12813
  %16 = load i32, i32* %9, align 4, !dbg !12818
  %17 = and i32 %16, 511, !dbg !12819
  %18 = icmp eq i32 %17, 0, !dbg !12820
  br i1 %18, label %22, label %19, !dbg !12821

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12822, metadata !DIExpression()) #23, !dbg !12825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12828, !srcloc !12829
  br label %25, !dbg !12830

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12807
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.209, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !12807
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12812
  br label %22, !dbg !12831

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12832
  call void @llvm.dbg.value(metadata i32 %4, metadata !12822, metadata !DIExpression()) #23, !dbg !12835
  call void @llvm.dbg.value(metadata i32 %4, metadata !12822, metadata !DIExpression()) #23, !dbg !12838
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12776
  br i1 %23, label %25, label %24, !dbg !12840

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.210(%struct.k_thread* noundef %5) #24, !dbg !12841
  br label %25, !dbg !12844

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12844
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.206() unnamed_addr #11 !dbg !12845 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.218() #26, !dbg !12849
  ret %struct.k_thread* %1, !dbg !12850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !12851 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12855, metadata !DIExpression()), !dbg !12856
  %2 = icmp ult i32 %0, 5, !dbg !12857
  br i1 %2, label %3, label %6, !dbg !12857

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12857
  %5 = load i8*, i8** %4, align 4, !dbg !12857
  br label %6, !dbg !12857

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.212, i32 0, i32 0), %1 ], !dbg !12858
  ret i8* %7, !dbg !12860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12861 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12865, metadata !DIExpression()), !dbg !12867
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12868
  br i1 %2, label %9, label %3, !dbg !12869

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12870
  call void @llvm.dbg.value(metadata i8* %4, metadata !12866, metadata !DIExpression()), !dbg !12867
  %5 = icmp eq i8* %4, null, !dbg !12871
  br i1 %5, label %9, label %6, !dbg !12873

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12874
  %8 = icmp eq i8 %7, 0, !dbg !12875
  br i1 %8, label %9, label %10, !dbg !12876

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.211, i32 0, i32 0), metadata !12866, metadata !DIExpression()), !dbg !12867
  br label %10, !dbg !12877

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.211, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12867
  call void @llvm.dbg.value(metadata i8* %11, metadata !12866, metadata !DIExpression()), !dbg !12867
  ret i8* %11, !dbg !12879
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.210(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12880 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12884, metadata !DIExpression()), !dbg !12885
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12886, !srcloc !12888
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12889
  ret void, !dbg !12890
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.218() unnamed_addr #11 !dbg !12891 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12892, !srcloc !12894
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12895
  ret %struct.k_thread* %1, !dbg !12896
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12897 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12901, metadata !DIExpression()), !dbg !12904
  call void @llvm.dbg.value(metadata i32 %1, metadata !12902, metadata !DIExpression()), !dbg !12904
  call void @llvm.dbg.value(metadata i32 %2, metadata !12903, metadata !DIExpression()), !dbg !12904
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12905
  ret void, !dbg !12906
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12907 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12911, metadata !DIExpression()), !dbg !12914
  call void @llvm.dbg.value(metadata i8* %1, metadata !12912, metadata !DIExpression()), !dbg !12914
  call void @llvm.dbg.value(metadata i32 %2, metadata !12913, metadata !DIExpression()), !dbg !12914
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12915
  ret void, !dbg !12916
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12917 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12918
  ret void, !dbg !12919
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12922, metadata !DIExpression()), !dbg !12923
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12924
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12925
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12926
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12927
  %4 = trunc i32 %0 to i8, !dbg !12928
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12929
  store i8 %4, i8* %5, align 4, !dbg !12930
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12931
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12932
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12933
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12934
  store i8* %8, i8** %9, align 4, !dbg !12935
  ret void, !dbg !12936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12939, metadata !DIExpression()), !dbg !12945
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12946
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12940, metadata !DIExpression()), !dbg !12945
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12947
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12941, metadata !DIExpression()), !dbg !12945
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.225, i32 0, i32 0), metadata !12944, metadata !DIExpression()), !dbg !12945
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12948
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12949
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.225, i32 0, i32 0)) #25, !dbg !12950
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12951
  ret void, !dbg !12952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12953 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12957, metadata !DIExpression()), !dbg !12958
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12959
  ret i8* %2, !dbg !12960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12961 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12966, metadata !DIExpression()), !dbg !12967
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12968
  %3 = load i8, i8* %2, align 1, !dbg !12969
  %4 = and i8 %3, -5, !dbg !12969
  store i8 %4, i8* %2, align 1, !dbg !12969
  ret void, !dbg !12970
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12971 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12974
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12975
  %3 = ptrtoint i8* %2 to i32, !dbg !12984
  %4 = add i32 %3, 2048, !dbg !12985
  call void @llvm.dbg.value(metadata i32 %4, metadata !12979, metadata !DIExpression()) #23, !dbg !12986
  call void @llvm.dbg.value(metadata i32 %4, metadata !12987, metadata !DIExpression()) #23, !dbg !12990
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12992, !srcloc !12993
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12994
  %6 = or i32 %5, 512, !dbg !12994
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12994
  tail call fastcc void @__NVIC_SetPriority.228(i32 noundef -2, i32 noundef 255) #25, !dbg !12995
  tail call fastcc void @__NVIC_SetPriority.228(i32 noundef -5, i32 noundef 0) #25, !dbg !12998
  tail call fastcc void @__NVIC_SetPriority.228(i32 noundef -12, i32 noundef 0) #25, !dbg !12999
  tail call fastcc void @__NVIC_SetPriority.228(i32 noundef -11, i32 noundef 0) #25, !dbg !13000
  tail call fastcc void @__NVIC_SetPriority.228(i32 noundef -10, i32 noundef 0) #25, !dbg !13001
  tail call fastcc void @__NVIC_SetPriority.228(i32 noundef -4, i32 noundef 0) #25, !dbg !13002
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13003
  %8 = or i32 %7, 458752, !dbg !13003
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13003
  tail call void @z_arm_fault_init() #25, !dbg !13004
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13005
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13006
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13009
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13010
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13011
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13012
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13012
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12973, metadata !DIExpression()), !dbg !13013
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13014
  call void @z_device_state_init() #25, !dbg !13015
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13016
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13017
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13018
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13019
  unreachable, !dbg !13019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2079, metadata !DIExpression()), !dbg !13020
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13021
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13021
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2080, metadata !DIExpression()), !dbg !13020
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2080, metadata !DIExpression()), !dbg !13020
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13022
  br i1 %7, label %8, label %35, !dbg !13023

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2080, metadata !DIExpression()), !dbg !13020
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13024
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13024
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2090, metadata !DIExpression()), !dbg !13025
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13026
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13026
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13027
  call void @llvm.dbg.value(metadata i32 %14, metadata !2094, metadata !DIExpression()), !dbg !13025
  %15 = icmp eq %struct.device* %11, null, !dbg !13028
  br i1 %15, label %32, label %16, !dbg !13030

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13031
  br i1 %17, label %26, label %18, !dbg !13034

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13035
  call void @llvm.dbg.value(metadata i32 %19, metadata !2094, metadata !DIExpression()), !dbg !13025
  %20 = icmp ult i32 %19, 255, !dbg !13037
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13037
  call void @llvm.dbg.value(metadata i32 %21, metadata !2094, metadata !DIExpression()), !dbg !13025
  %22 = trunc i32 %21 to i8, !dbg !13038
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13039
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13039
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13040
  store i8 %22, i8* %25, align 1, !dbg !13041
  br label %26, !dbg !13042

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13043
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13043
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13044
  %30 = load i8, i8* %29, align 1, !dbg !13045
  %31 = or i8 %30, 1, !dbg !13045
  store i8 %31, i8* %29, align 1, !dbg !13045
  br label %32, !dbg !13046

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13047
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2080, metadata !DIExpression()), !dbg !13020
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13022
  br i1 %34, label %8, label %35, !dbg !13023, !llvm.loop !13048

35:                                               ; preds = %32, %1
  ret void, !dbg !13050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.228(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13053, metadata !DIExpression()), !dbg !13055
  call void @llvm.dbg.value(metadata i32 %1, metadata !13054, metadata !DIExpression()), !dbg !13055
  %3 = trunc i32 %1 to i8, !dbg !13056
  %4 = shl i8 %3, 4, !dbg !13056
  %5 = and i32 %0, 15, !dbg !13059
  %6 = add nsw i32 %5, -4, !dbg !13060
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13061
  store volatile i8 %4, i8* %7, align 1, !dbg !13062
  ret void, !dbg !13063
}

; Function Attrs: optsize
declare !dbg !13064 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13065 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13068, metadata !DIExpression()), !dbg !13069
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13070
  store i8 1, i8* %2, align 1, !dbg !13071
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13072
  store i8 1, i8* %3, align 4, !dbg !13073
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13074
  store i32 0, i32* %4, align 4, !dbg !13075
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13076
  store i32 0, i32* %5, align 4, !dbg !13077
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13078
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13079
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13080
  ret void, !dbg !13081
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13082 {
  tail call void @z_sched_init() #25, !dbg !13087
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13088
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.229, i32 0, i32 0)) #25, !dbg !13089
  call void @llvm.dbg.value(metadata i8* %1, metadata !13086, metadata !DIExpression()), !dbg !13090
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13091
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13092
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13093
  ret i8* %1, !dbg !13094
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13095 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13099, metadata !DIExpression()), !dbg !13100
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13101
  unreachable, !dbg !13102
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13103 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13105, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i8* %1, metadata !13106, metadata !DIExpression()), !dbg !13108
  call void @llvm.dbg.value(metadata i8* %2, metadata !13107, metadata !DIExpression()), !dbg !13108
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13109
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13110
  tail call void @boot_banner() #25, !dbg !13111
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13112
  tail call void @z_init_static_threads() #25, !dbg !13113
  tail call void @main() #25, !dbg !13114
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13115
  %5 = and i8 %4, -2, !dbg !13115
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13115
  ret void, !dbg !13116
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13117 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13127, metadata !DIExpression()), !dbg !13129
  call void @llvm.dbg.value(metadata i8* %1, metadata !13128, metadata !DIExpression()), !dbg !13129
  ret void, !dbg !13130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13131 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13133, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata i8* %1, metadata !13134, metadata !DIExpression()), !dbg !13135
  ret void, !dbg !13136
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13137 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13138, !srcloc !13145
  call void @llvm.dbg.value(metadata i32 %1, metadata !13141, metadata !DIExpression()) #23, !dbg !13146
  %2 = icmp ne i32 %1, 0, !dbg !13147
  ret i1 %2, !dbg !13148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13149 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13150
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13151
  %3 = load i8, i8* %2, align 4, !dbg !13152
  %4 = or i8 %3, 1, !dbg !13152
  store i8 %4, i8* %2, align 4, !dbg !13152
  ret void, !dbg !13153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13154 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13155
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13156
  %3 = load i8, i8* %2, align 4, !dbg !13157
  %4 = and i8 %3, -2, !dbg !13157
  store i8 %4, i8* %2, align 4, !dbg !13157
  ret void, !dbg !13158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13159 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13160
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13161
  %3 = load i8, i8* %2, align 4, !dbg !13161
  %4 = and i8 %3, 1, !dbg !13162
  %5 = icmp ne i8 %4, 0, !dbg !13163
  ret i1 %5, !dbg !13164
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13165 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13169, metadata !DIExpression()), !dbg !13171
  call void @llvm.dbg.value(metadata i8* %1, metadata !13170, metadata !DIExpression()), !dbg !13171
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13172
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13174
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13169, metadata !DIExpression()), !dbg !13171
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13175
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13176
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13177
  store i8 0, i8* %8, align 1, !dbg !13178
  ret i32 0, !dbg !13179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13180 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13184, metadata !DIExpression()), !dbg !13185
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13186
  ret i8* %2, !dbg !13187
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13188 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13192, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.value(metadata i8* %1, metadata !13193, metadata !DIExpression()), !dbg !13195
  call void @llvm.dbg.value(metadata i32 %2, metadata !13194, metadata !DIExpression()), !dbg !13195
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13196
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13197
  ret i32 0, !dbg !13198
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2220, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i8* %1, metadata !2221, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i32 %2, metadata !2222, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i32 0, metadata !2223, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i8 undef, metadata !2225, metadata !DIExpression()), !dbg !13199
  %4 = icmp eq i8* %1, null, !dbg !13200
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13202
  br i1 %6, label %46, label %7, !dbg !13202

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13203
  %9 = load i8, i8* %8, align 1, !dbg !13203
  call void @llvm.dbg.value(metadata i8 %9, metadata !2225, metadata !DIExpression()), !dbg !13199
  %10 = add i32 %2, -1, !dbg !13204
  call void @llvm.dbg.value(metadata i32 %10, metadata !2222, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i8 0, metadata !2226, metadata !DIExpression()), !dbg !13205
  call void @llvm.dbg.value(metadata i8 %9, metadata !2225, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i32 0, metadata !2223, metadata !DIExpression()), !dbg !13199
  %11 = icmp eq i8 %9, 0, !dbg !13206
  br i1 %11, label %12, label %15, !dbg !13208

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13209
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13210
  store i8 0, i8* %14, align 1, !dbg !13211
  br label %46, !dbg !13212

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2226, metadata !DIExpression()), !dbg !13205
  call void @llvm.dbg.value(metadata i8 %17, metadata !2225, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i32 %18, metadata !2223, metadata !DIExpression()), !dbg !13199
  %19 = zext i8 %17 to i32, !dbg !13213
  %20 = zext i8 %16 to i32, !dbg !13214
  %21 = shl nuw i32 1, %20, !dbg !13214
  call void @llvm.dbg.value(metadata i32 %21, metadata !2224, metadata !DIExpression()), !dbg !13199
  %22 = and i32 %21, %19, !dbg !13216
  %23 = icmp eq i32 %22, 0, !dbg !13218
  br i1 %23, label %42, label %24, !dbg !13219

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13220
  %26 = sub i32 %10, %18, !dbg !13221
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13222
  %28 = load i8*, i8** %27, align 4, !dbg !13222
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13223
  %30 = load i32, i32* %29, align 4, !dbg !13223
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13224
  %32 = add i32 %31, %18, !dbg !13225
  call void @llvm.dbg.value(metadata i32 %32, metadata !2223, metadata !DIExpression()), !dbg !13199
  %33 = trunc i32 %21 to i8, !dbg !13226
  %34 = xor i8 %33, -1, !dbg !13226
  %35 = and i8 %17, %34, !dbg !13226
  call void @llvm.dbg.value(metadata i8 %35, metadata !2225, metadata !DIExpression()), !dbg !13199
  %36 = icmp eq i8 %35, 0, !dbg !13227
  br i1 %36, label %12, label %37, !dbg !13229

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13230
  %39 = sub i32 %10, %32, !dbg !13232
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.232, i32 0, i32 0), i32 noundef 1) #24, !dbg !13233
  %41 = add i32 %40, %32, !dbg !13234
  call void @llvm.dbg.value(metadata i32 %41, metadata !2223, metadata !DIExpression()), !dbg !13199
  br label %42, !dbg !13235

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13199
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13199
  call void @llvm.dbg.value(metadata i8 %44, metadata !2225, metadata !DIExpression()), !dbg !13199
  call void @llvm.dbg.value(metadata i32 %43, metadata !2223, metadata !DIExpression()), !dbg !13199
  %45 = add i8 %16, 1, !dbg !13236
  call void @llvm.dbg.value(metadata i8 %45, metadata !2226, metadata !DIExpression()), !dbg !13205
  br label %15, !dbg !13208

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.233, i32 0, i32 0), %3 ], !dbg !13199
  ret i8* %47, !dbg !13237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13242, metadata !DIExpression()), !dbg !13247
  call void @llvm.dbg.value(metadata i32 %1, metadata !13243, metadata !DIExpression()), !dbg !13247
  call void @llvm.dbg.value(metadata i8* %2, metadata !13244, metadata !DIExpression()), !dbg !13247
  call void @llvm.dbg.value(metadata i32 %3, metadata !13245, metadata !DIExpression()), !dbg !13247
  %5 = icmp ult i32 %1, %3, !dbg !13248
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13248
  call void @llvm.dbg.value(metadata i32 %6, metadata !13246, metadata !DIExpression()), !dbg !13247
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13249
  ret i32 %6, !dbg !13250
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13251 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13255, metadata !DIExpression()), !dbg !13256
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13257
  ret void, !dbg !13258
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13268, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13269, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata i32 %2, metadata !13270, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13271, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata i8* %4, metadata !13272, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata i8* %5, metadata !13273, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata i8* %6, metadata !13274, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata i32 %7, metadata !13275, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata i32 %8, metadata !13276, metadata !DIExpression()), !dbg !13279
  call void @llvm.dbg.value(metadata i8* %9, metadata !13277, metadata !DIExpression()), !dbg !13279
  %11 = icmp eq i32 %7, 15, !dbg !13280
  br i1 %11, label %12, label %15, !dbg !13280

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13280
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13280
  br i1 %14, label %19, label %18, !dbg !13280

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13280
  %17 = icmp ult i32 %16, 31, !dbg !13280
  br i1 %17, label %19, label %18, !dbg !13280

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.245, i32 0, i32 0), i32 noundef 536) #25, !dbg !13284
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.246, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13284
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.245, i32 0, i32 0), i32 noundef 536) #25, !dbg !13284
  unreachable, !dbg !13284

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13286
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13287
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13288
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13289
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13290
  call void @llvm.dbg.value(metadata i8* %22, metadata !13278, metadata !DIExpression()), !dbg !13279
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13291
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13292
  store i8* null, i8** %23, align 4, !dbg !13293
  %24 = icmp eq i8* %9, null, !dbg !13294
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13296
  br i1 %24, label %29, label %26, !dbg !13297

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13298
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13300
  store i8 0, i8* %28, align 1, !dbg !13301
  br label %30, !dbg !13302

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13303
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13305
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13305
  br i1 %32, label %36, label %33, !dbg !13307

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13308
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13308
  br label %36, !dbg !13309

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13279
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13310
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13312
  ret i8* %22, !dbg !13313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13314 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13318, metadata !DIExpression()), !dbg !13319
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13320
  ret i1 %2, !dbg !13321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13322 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13327, metadata !DIExpression()), !dbg !13328
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13329
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13330
  ret void, !dbg !13331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13332 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13337, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 %1, metadata !13338, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 %2, metadata !13339, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.value(metadata i32 %3, metadata !13340, metadata !DIExpression()), !dbg !13341
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13342
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13343
  %6 = trunc i32 %3 to i8, !dbg !13344
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13345
  store i8 %6, i8* %7, align 4, !dbg !13346
  %8 = trunc i32 %2 to i8, !dbg !13347
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13348
  store i8 %8, i8* %9, align 1, !dbg !13349
  %10 = trunc i32 %1 to i8, !dbg !13350
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13351
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13351
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13351
  store i8 %10, i8* %13, align 2, !dbg !13352
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13353
  store i8 0, i8* %14, align 1, !dbg !13354
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13355
  ret void, !dbg !13356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13357 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13361, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13362, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i32 %2, metadata !13363, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i32 0, metadata !13368, metadata !DIExpression()), !dbg !13369
  %4 = add i32 %2, 7, !dbg !13370
  %5 = and i32 %4, -8, !dbg !13370
  %6 = add i32 %5, 64, !dbg !13370
  call void @llvm.dbg.value(metadata i32 %6, metadata !13364, metadata !DIExpression()), !dbg !13369
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.247(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13372
  call void @llvm.dbg.value(metadata i8* %7, metadata !13367, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i32 %5, metadata !13365, metadata !DIExpression()), !dbg !13369
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13373
  call void @llvm.dbg.value(metadata i8* %8, metadata !13366, metadata !DIExpression()), !dbg !13369
  call void @llvm.dbg.value(metadata i32 0, metadata !13368, metadata !DIExpression()), !dbg !13369
  %9 = ptrtoint i8* %7 to i32, !dbg !13374
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13375
  store i32 %9, i32* %10, align 4, !dbg !13376
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13377
  store i32 %5, i32* %11, align 4, !dbg !13378
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13379
  store i32 0, i32* %12, align 4, !dbg !13380
  call void @llvm.dbg.value(metadata i8* %8, metadata !13366, metadata !DIExpression()), !dbg !13369
  ret i8* %8, !dbg !13381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.247(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13382 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13386, metadata !DIExpression()), !dbg !13387
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13388
  ret i8* %2, !dbg !13389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13390 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13395, metadata !DIExpression()), !dbg !13396
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13397
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13398
  ret void, !dbg !13399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13400 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13402, metadata !DIExpression()), !dbg !13403
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13404
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13405
  ret void, !dbg !13406
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13407 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13411, metadata !DIExpression()), !dbg !13412
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13413
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13414
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13415
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13416
  ret void, !dbg !13417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13418 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13423, metadata !DIExpression()), !dbg !13424
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13425
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13426
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13427
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13428
  ret void, !dbg !13429
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13430 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13447, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13438, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13439, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i32 %2, metadata !13440, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13441, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8* %4, metadata !13442, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8* %5, metadata !13443, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8* %6, metadata !13444, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i32 %7, metadata !13445, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i32 %8, metadata !13446, metadata !DIExpression()), !dbg !13448
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13449, !srcloc !13145
  call void @llvm.dbg.value(metadata i32 %11, metadata !13141, metadata !DIExpression()) #23, !dbg !13454
  %12 = icmp eq i32 %11, 0, !dbg !13455
  br i1 %12, label %14, label %13, !dbg !13456

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.245, i32 0, i32 0), i32 noundef 647) #25, !dbg !13457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.251, i32 0, i32 0)) #25, !dbg !13457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.245, i32 0, i32 0), i32 noundef 647) #25, !dbg !13457
  unreachable, !dbg !13457

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13447, metadata !DIExpression()), !dbg !13448
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13459
  %17 = icmp eq i64 %15, -1, !dbg !13460
  br i1 %17, label %19, label %18, !dbg !13462

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13463
  br label %19, !dbg !13465

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13466
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13467 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13472, metadata !DIExpression()), !dbg !13473
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13471, metadata !DIExpression()), !dbg !13473
  %4 = icmp eq i64 %3, 0, !dbg !13474
  br i1 %4, label %5, label %6, !dbg !13476

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13477
  br label %7, !dbg !13479

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13480
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13483 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13487, metadata !DIExpression()), !dbg !13488
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13489, !srcloc !13491
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13492
  ret void, !dbg !13493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13494 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13497, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13496, metadata !DIExpression()), !dbg !13498
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13499
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13500
  ret void, !dbg !13501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13502 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13504, metadata !DIExpression()), !dbg !13524
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13525

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.245, i32 0, i32 0), i32 noundef 750) #25, !dbg !13529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.255, i32 0, i32 0)) #25, !dbg !13529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.245, i32 0, i32 0), i32 noundef 750) #25, !dbg !13529
  unreachable, !dbg !13529

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13504, metadata !DIExpression()), !dbg !13524
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13532
  br i1 %4, label %6, label %5, !dbg !13533

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13534
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13522, metadata !DIExpression()), !dbg !13535
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13536

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13540
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13540
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13542
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13542
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13543
  %12 = load i32, i32* %11, align 4, !dbg !13543
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13544
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13544
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13545
  %16 = load i8*, i8** %15, align 4, !dbg !13545
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13546
  %18 = load i8*, i8** %17, align 4, !dbg !13546
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13547
  %20 = load i8*, i8** %19, align 4, !dbg !13547
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13548
  %22 = load i32, i32* %21, align 4, !dbg !13548
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13549
  %24 = load i32, i32* %23, align 4, !dbg !13549
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13550
  %26 = load i8*, i8** %25, align 4, !dbg !13550
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13551
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13552
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13553
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13554
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13554
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13555
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13504, metadata !DIExpression()), !dbg !13524
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13556
  br i1 %32, label %1, label %2, !dbg !13525, !llvm.loop !13557

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.245, i32 0, i32 0), i32 noundef 781) #25, !dbg !13559
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.255, i32 0, i32 0)) #25, !dbg !13559
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.245, i32 0, i32 0), i32 noundef 781) #25, !dbg !13559
  unreachable, !dbg !13559

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13522, metadata !DIExpression()), !dbg !13535
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13562
  br i1 %36, label %38, label %37, !dbg !13563

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !13564
  ret void, !dbg !13565

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13566
  %40 = load i32, i32* %39, align 4, !dbg !13566
  %41 = icmp eq i32 %40, -1, !dbg !13569
  br i1 %41, label %50, label %42, !dbg !13570

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13571
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13571
  %45 = icmp sgt i32 %40, 0, !dbg !13573
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13573
  %47 = zext i32 %46 to i64, !dbg !13573
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !13573
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13574
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13574
  br label %50, !dbg !13575

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13576
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13522, metadata !DIExpression()), !dbg !13535
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13577
  br i1 %52, label %33, label %34, !dbg !13536, !llvm.loop !13578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !13580 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13585, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.value(metadata i64 %0, metadata !13587, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i32 1000, metadata !13592, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i32 10000, metadata !13593, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i8 1, metadata !13594, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i8 0, metadata !13595, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i8 1, metadata !13596, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i8 0, metadata !13597, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i8 1, metadata !13598, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i8 0, metadata !13599, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i64 0, metadata !13600, metadata !DIExpression()), !dbg !13604
  call void @llvm.dbg.value(metadata i64 0, metadata !13600, metadata !DIExpression()), !dbg !13604
  %2 = mul i64 %0, 10, !dbg !13606
  ret i64 %2, !dbg !13612
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13613 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13615, metadata !DIExpression()), !dbg !13619
  call void @llvm.dbg.value(metadata i8* %1, metadata !13616, metadata !DIExpression()), !dbg !13619
  call void @llvm.dbg.value(metadata i8* %2, metadata !13617, metadata !DIExpression()), !dbg !13619
  call void @llvm.dbg.value(metadata i8* %3, metadata !13618, metadata !DIExpression()), !dbg !13619
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13620
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13621
  %7 = load i8, i8* %6, align 4, !dbg !13622
  %8 = or i8 %7, 4, !dbg !13622
  store i8 %8, i8* %6, align 4, !dbg !13622
  tail call void @z_thread_essential_clear() #24, !dbg !13623
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13624
  unreachable, !dbg !13624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13625 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13630, metadata !DIExpression()), !dbg !13632
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13633
  %3 = load i32, i32* %2, align 4, !dbg !13633
  call void @llvm.dbg.value(metadata i32 %3, metadata !13631, metadata !DIExpression()), !dbg !13632
  %4 = icmp eq i32 %3, 0, !dbg !13634
  br i1 %4, label %10, label %5, !dbg !13636

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13637
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13640
  %8 = zext i8 %7 to i32, !dbg !13641
  %9 = icmp eq i32 %6, %8, !dbg !13642
  br i1 %9, label %11, label %10, !dbg !13643

10:                                               ; preds = %5, %1
  br label %11, !dbg !13644

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13632
  ret i1 %12, !dbg !13645
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13646 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13648, metadata !DIExpression()), !dbg !13649
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13650
  %3 = load i32, i32* %2, align 4, !dbg !13650
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13652
  %5 = zext i8 %4 to i32, !dbg !13653
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13654
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13655
  %8 = or i32 %7, %5, !dbg !13656
  %9 = icmp eq i32 %3, %8, !dbg !13657
  br i1 %9, label %10, label %11, !dbg !13658

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13659
  br label %11, !dbg !13660

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13662 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13666, metadata !DIExpression()), !dbg !13667
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13668
  %3 = zext i8 %2 to i32, !dbg !13669
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13670
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13671
  %6 = or i32 %5, %3, !dbg !13672
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13673
  store i32 %6, i32* %7, align 4, !dbg !13674
  ret void, !dbg !13675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13676 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13680, metadata !DIExpression()), !dbg !13681
  ret i32 -134, !dbg !13682
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13687, metadata !DIExpression()), !dbg !13689
  call void @llvm.dbg.value(metadata i32 %1, metadata !13688, metadata !DIExpression()), !dbg !13689
  ret i32 -134, !dbg !13690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13691 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13698, metadata !DIExpression()), !dbg !13700
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13699, metadata !DIExpression()), !dbg !13700
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13701
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13703
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13700
  ret i32 %6, !dbg !13704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13705 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13709, metadata !DIExpression()), !dbg !13710
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13711
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13710
  ret i32 %3, !dbg !13713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13714 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13716
  ret void, !dbg !13717
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13718 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13720, metadata !DIExpression()), !dbg !13723
  call void @llvm.dbg.value(metadata i8* %1, metadata !13721, metadata !DIExpression()), !dbg !13723
  call void @llvm.dbg.value(metadata i8* %2, metadata !13722, metadata !DIExpression()), !dbg !13723
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13724
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13724
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13724
  %7 = load i8, i8* %6, align 2, !dbg !13724
  %8 = icmp sgt i8 %7, -1, !dbg !13724
  br i1 %8, label %10, label %9, !dbg !13727

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.265, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 39) #25, !dbg !13728
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.266, i32 0, i32 0), i32 noundef 39) #25, !dbg !13728
  unreachable, !dbg !13728

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13730, !srcloc !13737
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()) #23, !dbg !13738
  call void @llvm.dbg.value(metadata i32 undef, metadata !13734, metadata !DIExpression()) #23, !dbg !13738
  tail call fastcc void @k_cpu_idle() #24, !dbg !13739
  br label %10, !dbg !13740, !llvm.loop !13741
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13743 {
  tail call void @arch_cpu_idle() #25, !dbg !13744
  ret void, !dbg !13745
}

; Function Attrs: optsize
declare !dbg !13746 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13747 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13758, metadata !DIExpression()), !dbg !13759
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13760
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13761
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13762
  store i32 0, i32* %3, align 4, !dbg !13763
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13764
  tail call fastcc void @z_waitq_init.267(%struct._wait_q_t* noundef %4) #24, !dbg !13765
  ret i32 0, !dbg !13766
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.267(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13767 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13771, metadata !DIExpression()), !dbg !13772
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13773
  tail call fastcc void @sys_dlist_init.268(%struct._dnode* noundef %2) #24, !dbg !13774
  ret void, !dbg !13775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.268(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13776 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13781, metadata !DIExpression()), !dbg !13782
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13783
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13784
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13785
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13786
  ret void, !dbg !13787
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13788 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13797, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13796, metadata !DIExpression()), !dbg !13809
  call void @llvm.dbg.value(metadata i8 0, metadata !13804, metadata !DIExpression()), !dbg !13809
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13810, !srcloc !13819
  call void @llvm.dbg.value(metadata i32 %4, metadata !13813, metadata !DIExpression()) #23, !dbg !13820
  %5 = icmp eq i32 %4, 0, !dbg !13821
  br i1 %5, label %7, label %6, !dbg !13822

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 101) #25, !dbg !13823
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.274, i32 0, i32 0)) #25, !dbg !13823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 101) #25, !dbg !13823
  unreachable, !dbg !13823

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.275, metadata !13825, metadata !DIExpression()) #23, !dbg !13832
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13834, !srcloc !13840
  call void @llvm.dbg.value(metadata i32 undef, metadata !13837, metadata !DIExpression()) #23, !dbg !13841
  call void @llvm.dbg.value(metadata i32 undef, metadata !13838, metadata !DIExpression()) #23, !dbg !13841
  call void @llvm.dbg.value(metadata i32 undef, metadata !13831, metadata !DIExpression()) #23, !dbg !13832
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13842
  br i1 %9, label %11, label %10, !dbg !13845

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 148) #25, !dbg !13846
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.278, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13846
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 148) #25, !dbg !13846
  unreachable, !dbg !13846

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13834
  call void @llvm.dbg.value(metadata i32 %12, metadata !13837, metadata !DIExpression()) #23, !dbg !13841
  call void @llvm.dbg.value(metadata i32 %12, metadata !13831, metadata !DIExpression()) #23, !dbg !13832
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13848
  call void @llvm.dbg.value(metadata i32 %12, metadata !13799, metadata !DIExpression()), !dbg !13809
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13849
  %14 = load i32, i32* %13, align 4, !dbg !13849
  %15 = icmp eq i32 %14, 0, !dbg !13849
  br i1 %15, label %21, label %16, !dbg !13849

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13849
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13849
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13849
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13849
  br i1 %20, label %27, label %39, !dbg !13851, !prof !13852

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13853
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13855
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13855
  %25 = load i8, i8* %24, align 2, !dbg !13855
  %26 = sext i8 %25 to i32, !dbg !13853
  br label %30, !dbg !13856

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13857
  %29 = load i32, i32* %28, align 4, !dbg !13857
  br label %30, !dbg !13856

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13858
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13856
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13859
  store i32 %32, i32* %33, align 4, !dbg !13860
  %34 = add i32 %14, 1, !dbg !13861
  store i32 %34, i32* %13, align 4, !dbg !13861
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13862
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13863
  call void @llvm.dbg.value(metadata i32 undef, metadata !13864, metadata !DIExpression()) #23, !dbg !13870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.275, metadata !13869, metadata !DIExpression()) #23, !dbg !13870
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13872
  br i1 %36, label %38, label %37, !dbg !13875

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 194) #25, !dbg !13876
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13876
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 194) #25, !dbg !13876
  unreachable, !dbg !13876

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13864, metadata !DIExpression()) #23, !dbg !13870
  call void @llvm.dbg.value(metadata i32 %12, metadata !13878, metadata !DIExpression()) #23, !dbg !13881
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13883, !srcloc !13884
  br label %97, !dbg !13885

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13886
  br i1 %40, label %41, label %45, !dbg !13888, !prof !13889

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13864, metadata !DIExpression()) #23, !dbg !13890
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.275, metadata !13869, metadata !DIExpression()) #23, !dbg !13890
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13893
  br i1 %42, label %44, label %43, !dbg !13894

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 194) #25, !dbg !13895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 194) #25, !dbg !13895
  unreachable, !dbg !13895

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13864, metadata !DIExpression()) #23, !dbg !13890
  call void @llvm.dbg.value(metadata i32 %12, metadata !13878, metadata !DIExpression()) #23, !dbg !13896
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13898, !srcloc !13884
  br label %97, !dbg !13899

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13900
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13900
  %48 = load i8, i8* %47, align 2, !dbg !13900
  %49 = sext i8 %48 to i32, !dbg !13901
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13902
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13902
  %52 = load i8, i8* %51, align 2, !dbg !13902
  %53 = sext i8 %52 to i32, !dbg !13903
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13904
  call void @llvm.dbg.value(metadata i32 %54, metadata !13798, metadata !DIExpression()), !dbg !13809
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13905
  br i1 %55, label %56, label %58, !dbg !13907

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13908
  call void @llvm.dbg.value(metadata i1 %57, metadata !13804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13809
  br label %58, !dbg !13910

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13804, metadata !DIExpression()), !dbg !13809
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13911
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13912
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.275, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !13912
  call void @llvm.dbg.value(metadata i32 %62, metadata !13805, metadata !DIExpression()), !dbg !13809
  %63 = icmp eq i32 %62, 0, !dbg !13913
  br i1 %63, label %97, label %64, !dbg !13915

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.275, metadata !13825, metadata !DIExpression()) #23, !dbg !13916
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13918, !srcloc !13840
  call void @llvm.dbg.value(metadata i32 undef, metadata !13837, metadata !DIExpression()) #23, !dbg !13920
  call void @llvm.dbg.value(metadata i32 undef, metadata !13838, metadata !DIExpression()) #23, !dbg !13920
  call void @llvm.dbg.value(metadata i32 undef, metadata !13831, metadata !DIExpression()) #23, !dbg !13916
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13921
  br i1 %66, label %68, label %67, !dbg !13922

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 148) #25, !dbg !13923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.278, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 148) #25, !dbg !13923
  unreachable, !dbg !13923

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13918
  call void @llvm.dbg.value(metadata i32 %69, metadata !13837, metadata !DIExpression()) #23, !dbg !13920
  call void @llvm.dbg.value(metadata i32 %69, metadata !13831, metadata !DIExpression()) #23, !dbg !13916
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %69, metadata !13799, metadata !DIExpression()), !dbg !13809
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13925
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13925
  br i1 %71, label %90, label %72, !dbg !13926, !prof !13889

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13927
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13806, metadata !DIExpression()), !dbg !13928
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13929
  br i1 %74, label %83, label %75, !dbg !13930

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13931
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13931
  %78 = load i8, i8* %77, align 2, !dbg !13931
  %79 = sext i8 %78 to i32, !dbg !13932
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13933
  %81 = load i32, i32* %80, align 4, !dbg !13933
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13934
  br label %86, !dbg !13930

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13935
  %85 = load i32, i32* %84, align 4, !dbg !13935
  br label %86, !dbg !13930

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13930
  call void @llvm.dbg.value(metadata i32 %87, metadata !13798, metadata !DIExpression()), !dbg !13809
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13936
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13937
  call void @llvm.dbg.value(metadata i1 %89, metadata !13804, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13809
  call void @llvm.dbg.value(metadata i8 poison, metadata !13804, metadata !DIExpression()), !dbg !13809
  br i1 %89, label %91, label %93, !dbg !13938

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13804, metadata !DIExpression()), !dbg !13809
  br i1 %59, label %91, label %93, !dbg !13938

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13939
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.275, [1 x i32] %92) #25, !dbg !13939
  br label %97, !dbg !13942

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13864, metadata !DIExpression()) #23, !dbg !13943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.275, metadata !13869, metadata !DIExpression()) #23, !dbg !13943
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13946
  br i1 %94, label %96, label %95, !dbg !13947

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 194) #25, !dbg !13948
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !13948
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 194) #25, !dbg !13948
  unreachable, !dbg !13948

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13864, metadata !DIExpression()) #23, !dbg !13943
  call void @llvm.dbg.value(metadata i32 %69, metadata !13878, metadata !DIExpression()) #23, !dbg !13949
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13951, !srcloc !13884
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13809
  ret i32 %98, !dbg !13952
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13957, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.value(metadata i32 %1, metadata !13958, metadata !DIExpression()), !dbg !13960
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13961
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13961
  call void @llvm.dbg.value(metadata i32 %4, metadata !13959, metadata !DIExpression()), !dbg !13960
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13962
  call void @llvm.dbg.value(metadata i32 %5, metadata !13959, metadata !DIExpression()), !dbg !13960
  ret i32 %5, !dbg !13963
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13964 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13968, metadata !DIExpression()), !dbg !13970
  call void @llvm.dbg.value(metadata i32 %1, metadata !13969, metadata !DIExpression()), !dbg !13970
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13971
  ret i1 %3, !dbg !13972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13973 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13977, metadata !DIExpression()), !dbg !13979
  call void @llvm.dbg.value(metadata i32 %1, metadata !13978, metadata !DIExpression()), !dbg !13979
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13980
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13980
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13982
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13982
  %7 = load i8, i8* %6, align 2, !dbg !13982
  %8 = sext i8 %7 to i32, !dbg !13983
  %9 = icmp eq i32 %8, %1, !dbg !13984
  br i1 %9, label %12, label %10, !dbg !13985

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13986
  br label %12, !dbg !13988

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13979
  ret i1 %13, !dbg !13989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13990 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13994, metadata !DIExpression()), !dbg !13995
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13996
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13997
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13998
  ret %struct.k_thread* %4, !dbg !13999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14000 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14004, metadata !DIExpression()), !dbg !14005
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14006
  br i1 %2, label %6, label %3, !dbg !14006

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14007
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14007
  br label %6, !dbg !14006

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14006
  ret %struct._dnode* %7, !dbg !14008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14009 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14013, metadata !DIExpression()), !dbg !14014
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14015
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14015
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14016
  ret i1 %4, !dbg !14017
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14018 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14020, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 %1, metadata !14021, metadata !DIExpression()), !dbg !14022
  %3 = icmp slt i32 %0, %1, !dbg !14023
  ret i1 %3, !dbg !14024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !14025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14027, metadata !DIExpression()), !dbg !14028
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !14029
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !14029
  ret i32 %3, !dbg !14030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !14031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14035, metadata !DIExpression()), !dbg !14036
  %2 = icmp sgt i32 %0, -128, !dbg !14037
  ret i1 %2, !dbg !14038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !14039 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14041, metadata !DIExpression()), !dbg !14045
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14046, !srcloc !13819
  call void @llvm.dbg.value(metadata i32 %2, metadata !13813, metadata !DIExpression()) #23, !dbg !14051
  %3 = icmp eq i32 %2, 0, !dbg !14052
  br i1 %3, label %5, label %4, !dbg !14053

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.272, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 205) #25, !dbg !14054
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.274, i32 0, i32 0)) #25, !dbg !14054
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 205) #25, !dbg !14054
  unreachable, !dbg !14054

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14056
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !14056
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14056
  br i1 %8, label %41, label %9, !dbg !14058

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14059
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !14059
  br i1 %11, label %12, label %41, !dbg !14061

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14062
  %14 = load i32, i32* %13, align 4, !dbg !14062
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !14065

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.283, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 229) #25, !dbg !14066
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.273, i32 0, i32 0), i32 noundef 229) #25, !dbg !14066
  unreachable, !dbg !14066

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !14068
  store i32 %17, i32* %13, align 4, !dbg !14068
  br label %41, !dbg !14071

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.275, metadata !13825, metadata !DIExpression()) #23, !dbg !14072
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14074, !srcloc !13840
  call void @llvm.dbg.value(metadata i32 undef, metadata !13837, metadata !DIExpression()) #23, !dbg !14076
  call void @llvm.dbg.value(metadata i32 undef, metadata !13838, metadata !DIExpression()) #23, !dbg !14076
  call void @llvm.dbg.value(metadata i32 undef, metadata !13831, metadata !DIExpression()) #23, !dbg !14072
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !14077
  br i1 %20, label %22, label %21, !dbg !14078

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 148) #25, !dbg !14079
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.278, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !14079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 148) #25, !dbg !14079
  unreachable, !dbg !14079

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !14074
  call void @llvm.dbg.value(metadata i32 %23, metadata !13837, metadata !DIExpression()) #23, !dbg !14076
  call void @llvm.dbg.value(metadata i32 %23, metadata !13831, metadata !DIExpression()) #23, !dbg !14072
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !14080
  call void @llvm.dbg.value(metadata i32 %23, metadata !14043, metadata !DIExpression()), !dbg !14045
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14081
  %25 = load i32, i32* %24, align 4, !dbg !14081
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !14082
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14083
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !14084
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14042, metadata !DIExpression()), !dbg !14045
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !14085
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !14086
  br i1 %29, label %37, label %30, !dbg !14088

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !14089
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !14089
  %33 = load i8, i8* %32, align 2, !dbg !14089
  %34 = sext i8 %33 to i32, !dbg !14091
  store i32 %34, i32* %24, align 4, !dbg !14092
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14093, metadata !DIExpression()), !dbg !14099
  call void @llvm.dbg.value(metadata i32 0, metadata !14098, metadata !DIExpression()), !dbg !14099
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !14101
  store i32 0, i32* %35, align 4, !dbg !14102
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !14103
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !14104
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.275, [1 x i32] %36) #25, !dbg !14104
  br label %41, !dbg !14105

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !14106
  call void @llvm.dbg.value(metadata i32 undef, metadata !13864, metadata !DIExpression()) #23, !dbg !14108
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.275, metadata !13869, metadata !DIExpression()) #23, !dbg !14108
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !14110
  br i1 %38, label %40, label %39, !dbg !14111

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.279, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 194) #25, !dbg !14112
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.280, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.275) #25, !dbg !14112
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.277, i32 0, i32 0), i32 noundef 194) #25, !dbg !14112
  unreachable, !dbg !14112

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13864, metadata !DIExpression()) #23, !dbg !14108
  call void @llvm.dbg.value(metadata i32 %23, metadata !13878, metadata !DIExpression()) #23, !dbg !14113
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14115, !srcloc !13884
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !14045
  ret i32 %42, !dbg !14116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14117 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14121, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14122, metadata !DIExpression()), !dbg !14125
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14126
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14126
  %5 = load i8, i8* %4, align 2, !dbg !14126
  call void @llvm.dbg.value(metadata i8 %5, metadata !14123, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14125
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14127
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14127
  %8 = load i8, i8* %7, align 2, !dbg !14127
  call void @llvm.dbg.value(metadata i8 %8, metadata !14124, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14125
  %9 = icmp eq i8 %8, %5, !dbg !14128
  %10 = sext i8 %5 to i32, !dbg !14130
  %11 = sext i8 %8 to i32, !dbg !14130
  %12 = sub nsw i32 %11, %10, !dbg !14130
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14130
  ret i32 %13, !dbg !14131
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14132 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14136, metadata !DIExpression()), !dbg !14137
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14138
  %3 = icmp eq i32 %2, 0, !dbg !14140
  br i1 %3, label %8, label %4, !dbg !14141

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14142
  %6 = add i32 %5, %2, !dbg !14144
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14145
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14146
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14147
  br label %8, !dbg !14148

8:                                                ; preds = %4, %1
  ret void, !dbg !14149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14150 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14154, metadata !DIExpression()), !dbg !14156
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14157
  call void @llvm.dbg.value(metadata i32 %1, metadata !14155, metadata !DIExpression()), !dbg !14156
  ret i32 %1, !dbg !14158
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14163, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 %1, metadata !14164, metadata !DIExpression()), !dbg !14172
  call void @llvm.dbg.value(metadata i32 0, metadata !14165, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !14181
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14183, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !14190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !14181
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14191
  br i1 %4, label %6, label %5, !dbg !14194

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14195
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14195
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14195
  unreachable, !dbg !14195

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !14181
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14197
  call void @llvm.dbg.value(metadata i32 undef, metadata !14171, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata i32 undef, metadata !14165, metadata !DIExpression()), !dbg !14173
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14198
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14201
  %8 = icmp sgt i32 %0, 0, !dbg !14202
  %9 = icmp sgt i32 %7, 2, !dbg !14204
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14204
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14204
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14205
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14206
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14207
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !14214
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14216
  br i1 %12, label %14, label %13, !dbg !14219

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14220
  unreachable, !dbg !14220

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14183
  call void @llvm.dbg.value(metadata i32 %15, metadata !14186, metadata !DIExpression()) #23, !dbg !14190
  call void @llvm.dbg.value(metadata i32 %15, metadata !14180, metadata !DIExpression()) #23, !dbg !14181
  call void @llvm.dbg.value(metadata i32 %15, metadata !14171, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14214
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !14225
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14227, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !14165, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata i32 undef, metadata !14165, metadata !DIExpression()), !dbg !14173
  ret void, !dbg !14229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14230 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14232, metadata !DIExpression()), !dbg !14233
  call void @llvm.dbg.value(metadata i32 %0, metadata !14234, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14249
  call void @llvm.dbg.value(metadata i32 1000, metadata !14237, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.value(metadata i32 10000, metadata !14238, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.value(metadata i8 1, metadata !14239, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.value(metadata i1 true, metadata !14240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14249
  call void @llvm.dbg.value(metadata i1 true, metadata !14241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14249
  call void @llvm.dbg.value(metadata i8 0, metadata !14242, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.value(metadata i1 true, metadata !14243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14249
  call void @llvm.dbg.value(metadata i1 false, metadata !14244, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14249
  call void @llvm.dbg.value(metadata i64 0, metadata !14245, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.value(metadata i64 0, metadata !14245, metadata !DIExpression()), !dbg !14249
  %2 = mul i32 %0, 10, !dbg !14251
  ret i32 %2, !dbg !14257
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14258 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14260, metadata !DIExpression()), !dbg !14262
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !14263
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14265, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14267
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !14267
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !14263
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14268
  br i1 %3, label %5, label %4, !dbg !14269

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14270
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14270
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14270
  unreachable, !dbg !14270

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %6, metadata !14186, metadata !DIExpression()) #23, !dbg !14267
  call void @llvm.dbg.value(metadata i32 %6, metadata !14180, metadata !DIExpression()) #23, !dbg !14263
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14271
  call void @llvm.dbg.value(metadata i32 %6, metadata !14261, metadata !DIExpression()), !dbg !14262
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14272
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14274
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14275
  br i1 %9, label %10, label %14, !dbg !14276

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14277
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14279
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !14279
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14281
  br i1 %11, label %13, label %12, !dbg !14282

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14283
  unreachable, !dbg !14283

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14208, metadata !DIExpression()) #23, !dbg !14279
  call void @llvm.dbg.value(metadata i32 %6, metadata !14222, metadata !DIExpression()) #23, !dbg !14284
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14286, !srcloc !14228
  br label %33, !dbg !14287

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14288
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14289
  %16 = icmp eq i32 %15, 0, !dbg !14289
  br i1 %16, label %27, label %17, !dbg !14291

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14292
  br i1 %18, label %19, label %27, !dbg !14293

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14294
  %21 = icmp sgt i32 %20, %0, !dbg !14297
  br i1 %21, label %25, label %22, !dbg !14298

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14299
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14299
  call void @llvm.dbg.value(metadata i32 %24, metadata !14261, metadata !DIExpression()), !dbg !14262
  br label %28, !dbg !14301

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14302
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14302
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14304
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14262
  call void @llvm.dbg.value(metadata i32 %29, metadata !14261, metadata !DIExpression()), !dbg !14262
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !14306
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14308
  br i1 %30, label %32, label %31, !dbg !14309

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14310
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14310
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14310
  unreachable, !dbg !14310

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14208, metadata !DIExpression()) #23, !dbg !14306
  call void @llvm.dbg.value(metadata i32 %29, metadata !14222, metadata !DIExpression()) #23, !dbg !14311
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14313, !srcloc !14228
  br label %33, !dbg !14314

33:                                               ; preds = %32, %13
  ret void, !dbg !14314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14315 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14319, metadata !DIExpression()), !dbg !14321
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14322
  %3 = icmp eq i32 %2, 0, !dbg !14322
  br i1 %3, label %16, label %4, !dbg !14323

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14324
  br i1 %5, label %16, label %6, !dbg !14325

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14326
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14326
  %9 = load i8, i8* %8, align 2, !dbg !14326
  %10 = sext i8 %9 to i32, !dbg !14327
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14328
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.297(i32 noundef %10, i32 noundef %11) #24, !dbg !14329
  br i1 %12, label %16, label %13, !dbg !14330

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14331
  %15 = xor i1 %14, true, !dbg !14332
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14321
  call void @llvm.dbg.value(metadata i1 %17, metadata !14320, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14321
  ret i1 %17, !dbg !14333
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14334 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14338, metadata !DIExpression()), !dbg !14340
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14341
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14339, metadata !DIExpression()), !dbg !14340
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14342
  br i1 %3, label %5, label %4, !dbg !14344

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14345
  br label %5, !dbg !14347

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14338, metadata !DIExpression()), !dbg !14340
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14348
  ret i32 %6, !dbg !14349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14350 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14352, metadata !DIExpression()), !dbg !14354
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14355
  %3 = load i8, i8* %2, align 1, !dbg !14355
  call void @llvm.dbg.value(metadata i8 %3, metadata !14353, metadata !DIExpression()), !dbg !14354
  %4 = and i8 %3, 31, !dbg !14356
  %5 = icmp ne i8 %4, 0, !dbg !14357
  ret i1 %5, !dbg !14358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14359 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14361, metadata !DIExpression()), !dbg !14362
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14363
  br i1 %2, label %3, label %7, !dbg !14365

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14366, metadata !DIExpression()) #23, !dbg !14369
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14372
  %5 = load i8, i8* %4, align 1, !dbg !14373
  %6 = and i8 %5, 127, !dbg !14373
  store i8 %6, i8* %4, align 1, !dbg !14373
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14374, metadata !DIExpression()) #23, !dbg !14377
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14381
  br label %7, !dbg !14382

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14383, metadata !DIExpression()) #23, !dbg !14386
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14388
  %9 = load i8, i8* %8, align 1, !dbg !14389
  %10 = or i8 %9, -128, !dbg !14389
  store i8 %10, i8* %8, align 1, !dbg !14389
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !14393
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14397, metadata !DIExpression()) #23, !dbg !14405
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14403, metadata !DIExpression()) #23, !dbg !14405
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14407
  br i1 %11, label %12, label %13, !dbg !14410

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !14411
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !14411
  unreachable, !dbg !14411

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.292(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14413
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14404, metadata !DIExpression()) #23, !dbg !14405
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14415
  br i1 %15, label %26, label %16, !dbg !14413

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14404, metadata !DIExpression()) #23, !dbg !14405
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14417
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14404, metadata !DIExpression()) #23, !dbg !14405
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14418
  %20 = icmp sgt i32 %19, 0, !dbg !14421
  br i1 %20, label %21, label %23, !dbg !14422

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14423
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14425
  br label %28, !dbg !14426

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14415
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14404, metadata !DIExpression()) #23, !dbg !14405
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14415
  br i1 %25, label %26, label %16, !dbg !14413, !llvm.loop !14427

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14429
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14430
  br label %28, !dbg !14431

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14432
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14433
  %31 = zext i1 %30 to i32, !dbg !14433
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14434
  ret void, !dbg !14435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14436 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14438, metadata !DIExpression()), !dbg !14439
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14440
  ret i1 %2, !dbg !14441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14442 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14444, metadata !DIExpression()), !dbg !14446
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14445, metadata !DIExpression()), !dbg !14446
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14447
  br i1 %3, label %4, label %5, !dbg !14450

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14451
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14451
  unreachable, !dbg !14451

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14453
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14454
  ret void, !dbg !14455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14458, metadata !DIExpression()), !dbg !14459
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14460
  ret i1 %2, !dbg !14461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.292(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14462 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14466, metadata !DIExpression()), !dbg !14467
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.295(%struct._dnode* noundef %0) #24, !dbg !14468
  br i1 %2, label %6, label %3, !dbg !14468

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14469
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14469
  br label %6, !dbg !14468

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14468
  ret %struct._dnode* %7, !dbg !14470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14471 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14475, metadata !DIExpression()), !dbg !14479
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14476, metadata !DIExpression()), !dbg !14479
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14480
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14480
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14477, metadata !DIExpression()), !dbg !14479
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14481
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14482
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14483
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14484
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14485
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14486
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14487
  ret void, !dbg !14488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14489 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14493, metadata !DIExpression()), !dbg !14495
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14494, metadata !DIExpression()), !dbg !14495
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14496
  br i1 %3, label %6, label %4, !dbg !14497

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14498
  br label %6, !dbg !14497

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14497
  ret %struct._dnode* %7, !dbg !14499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14500 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14504, metadata !DIExpression()), !dbg !14507
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14505, metadata !DIExpression()), !dbg !14507
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14508
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14508
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14506, metadata !DIExpression()), !dbg !14507
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14509
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14510
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14511
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14512
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14513
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14514
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14515
  ret void, !dbg !14516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14517 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14519, metadata !DIExpression()), !dbg !14521
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14522
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14529, metadata !DIExpression()) #23, !dbg !14531
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14532
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14533
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14533
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14520, metadata !DIExpression()), !dbg !14521
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14534, metadata !DIExpression()) #23, !dbg !14540
  call void @llvm.dbg.value(metadata i32 %0, metadata !14539, metadata !DIExpression()) #23, !dbg !14540
  %6 = icmp eq i32 %0, 0, !dbg !14543
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14545
  br i1 %6, label %8, label %18, !dbg !14546

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14547
  br i1 %9, label %10, label %11, !dbg !14550

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.293, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 137) #25, !dbg !14551
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !14551
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 137) #25, !dbg !14551
  unreachable, !dbg !14551

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14553
  br i1 %12, label %18, label %13, !dbg !14555

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14556
  br i1 %14, label %18, label %15, !dbg !14558

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14559
  %17 = icmp eq i32 %16, 0, !dbg !14559
  br i1 %17, label %21, label %18, !dbg !14561

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14562
  br i1 %19, label %21, label %20, !dbg !14565

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14566
  br label %21, !dbg !14568

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14545
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14545
  ret void, !dbg !14569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14570 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14574, metadata !DIExpression()), !dbg !14577
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14575, metadata !DIExpression()), !dbg !14577
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.292(%struct._dnode* noundef %0) #24, !dbg !14578
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14576, metadata !DIExpression()), !dbg !14577
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14575, metadata !DIExpression()), !dbg !14577
  ret %struct.k_thread* %3, !dbg !14579
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14580 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14582, metadata !DIExpression()), !dbg !14583
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14584
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14585
  %4 = xor i1 %3, true, !dbg !14586
  ret i1 %4, !dbg !14587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14588 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14590, metadata !DIExpression()), !dbg !14591
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14592
  %3 = load i16, i16* %2, align 2, !dbg !14592
  %4 = icmp ult i16 %3, 128, !dbg !14593
  %5 = zext i1 %4 to i32, !dbg !14593
  ret i32 %5, !dbg !14594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14595 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14601, metadata !DIExpression()), !dbg !14602
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14603
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14604
  %4 = xor i1 %3, true, !dbg !14605
  ret i1 %4, !dbg !14606
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14607 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14613, metadata !DIExpression()), !dbg !14614
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14615
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14615
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14616
  ret i1 %4, !dbg !14617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14618 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14620, metadata !DIExpression()), !dbg !14622
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14621, metadata !DIExpression()), !dbg !14622
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14623
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14623
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14624
  br i1 %5, label %9, label %6, !dbg !14625

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14626
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14626
  br label %9, !dbg !14625

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14625
  ret %struct._dnode* %10, !dbg !14627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.295(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14628 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14632, metadata !DIExpression()), !dbg !14633
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14634
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14634
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14635
  ret i1 %4, !dbg !14636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14637 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14641, metadata !DIExpression()), !dbg !14644
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14645
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14645
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14642, metadata !DIExpression()), !dbg !14644
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14646
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14646
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14643, metadata !DIExpression()), !dbg !14644
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14647
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14648
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14649
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14650
  tail call fastcc void @sys_dnode_init.296(%struct._dnode* noundef %0) #24, !dbg !14651
  ret void, !dbg !14652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.296(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14653 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14655, metadata !DIExpression()), !dbg !14656
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14657
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14658
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14659
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14660
  ret void, !dbg !14661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14666, metadata !DIExpression()), !dbg !14668
  call void @llvm.dbg.value(metadata i32 %1, metadata !14667, metadata !DIExpression()), !dbg !14668
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14669
  %4 = load i8, i8* %3, align 1, !dbg !14669
  %5 = zext i8 %4 to i32, !dbg !14670
  %6 = and i32 %5, %1, !dbg !14671
  %7 = icmp ne i32 %6, 0, !dbg !14672
  ret i1 %7, !dbg !14673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.297(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14674 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14676, metadata !DIExpression()), !dbg !14678
  call void @llvm.dbg.value(metadata i32 %1, metadata !14677, metadata !DIExpression()), !dbg !14678
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.298(i32 noundef %0, i32 noundef %1) #24, !dbg !14679
  ret i1 %3, !dbg !14680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.298(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14683, metadata !DIExpression()), !dbg !14685
  call void @llvm.dbg.value(metadata i32 %1, metadata !14684, metadata !DIExpression()), !dbg !14685
  %3 = icmp slt i32 %0, %1, !dbg !14686
  ret i1 %3, !dbg !14687
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14690, metadata !DIExpression()), !dbg !14694
  call void @llvm.dbg.value(metadata i32 0, metadata !14691, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !14696
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14698, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14700
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !14700
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !14696
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14701
  br i1 %3, label %5, label %4, !dbg !14702

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14703
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14703
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14703
  unreachable, !dbg !14703

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14700
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !14696
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14704
  call void @llvm.dbg.value(metadata i32 undef, metadata !14693, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14691, metadata !DIExpression()), !dbg !14695
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14705
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14710
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !14710
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14712
  br i1 %6, label %8, label %7, !dbg !14713

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14714
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14714
  unreachable, !dbg !14714

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14698
  call void @llvm.dbg.value(metadata i32 %9, metadata !14186, metadata !DIExpression()) #23, !dbg !14700
  call void @llvm.dbg.value(metadata i32 %9, metadata !14180, metadata !DIExpression()) #23, !dbg !14696
  call void @llvm.dbg.value(metadata i32 %9, metadata !14693, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !14715
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14717, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !14691, metadata !DIExpression()), !dbg !14695
  call void @llvm.dbg.value(metadata i32 undef, metadata !14691, metadata !DIExpression()), !dbg !14695
  ret void, !dbg !14718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14719 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14721, metadata !DIExpression()), !dbg !14722
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14723
  br i1 %2, label %27, label %3, !dbg !14725

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14726
  br i1 %4, label %5, label %27, !dbg !14727

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14383, metadata !DIExpression()) #23, !dbg !14728
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14731
  %7 = load i8, i8* %6, align 1, !dbg !14732
  %8 = or i8 %7, -128, !dbg !14732
  store i8 %8, i8* %6, align 1, !dbg !14732
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !14733
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14397, metadata !DIExpression()) #23, !dbg !14735
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14403, metadata !DIExpression()) #23, !dbg !14735
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14737
  br i1 %9, label %10, label %11, !dbg !14738

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !14739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !14739
  unreachable, !dbg !14739

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.292(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14740
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14404, metadata !DIExpression()) #23, !dbg !14735
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14741
  br i1 %13, label %24, label %14, !dbg !14740

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14404, metadata !DIExpression()) #23, !dbg !14735
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14742
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14404, metadata !DIExpression()) #23, !dbg !14735
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14743
  %18 = icmp sgt i32 %17, 0, !dbg !14744
  br i1 %18, label %19, label %21, !dbg !14745

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14746
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14747
  br label %26, !dbg !14748

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14741
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14404, metadata !DIExpression()) #23, !dbg !14735
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14741
  br i1 %23, label %24, label %14, !dbg !14740, !llvm.loop !14749

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14751
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14752
  br label %26, !dbg !14753

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14754
  br label %27, !dbg !14755

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14759, metadata !DIExpression()), !dbg !14760
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14761
  br i1 %2, label %6, label %3, !dbg !14762

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14763
  %5 = xor i1 %4, true, !dbg !14762
  br label %6, !dbg !14762

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14764
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14765 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14767, metadata !DIExpression()), !dbg !14771
  call void @llvm.dbg.value(metadata i32 0, metadata !14768, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !14773
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14775, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14777
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !14777
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !14773
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14778
  br i1 %3, label %5, label %4, !dbg !14779

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14780
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14780
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14780
  unreachable, !dbg !14780

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14777
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !14773
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14781
  call void @llvm.dbg.value(metadata i32 undef, metadata !14770, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()), !dbg !14772
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14785
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !14785
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14787
  br i1 %6, label %8, label %7, !dbg !14788

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14789
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14789
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14789
  unreachable, !dbg !14789

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14775
  call void @llvm.dbg.value(metadata i32 %9, metadata !14186, metadata !DIExpression()) #23, !dbg !14777
  call void @llvm.dbg.value(metadata i32 %9, metadata !14180, metadata !DIExpression()) #23, !dbg !14773
  call void @llvm.dbg.value(metadata i32 %9, metadata !14770, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14785
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !14790
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14792, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !14768, metadata !DIExpression()), !dbg !14772
  call void @llvm.dbg.value(metadata i32 undef, metadata !14768, metadata !DIExpression()), !dbg !14772
  ret void, !dbg !14793
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14794 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14796, metadata !DIExpression()), !dbg !14798
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !14799
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14801, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14803
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !14803
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !14799
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14804
  br i1 %3, label %5, label %4, !dbg !14805

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14806
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14806
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14806
  unreachable, !dbg !14806

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14801
  call void @llvm.dbg.value(metadata i32 %6, metadata !14186, metadata !DIExpression()) #23, !dbg !14803
  call void @llvm.dbg.value(metadata i32 %6, metadata !14180, metadata !DIExpression()) #23, !dbg !14799
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14807
  call void @llvm.dbg.value(metadata i32 %6, metadata !14797, metadata !DIExpression()), !dbg !14798
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14808
  br i1 %7, label %8, label %12, !dbg !14810

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !14811
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14814
  br i1 %9, label %11, label %10, !dbg !14815

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14816
  unreachable, !dbg !14816

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14208, metadata !DIExpression()) #23, !dbg !14811
  call void @llvm.dbg.value(metadata i32 %6, metadata !14222, metadata !DIExpression()) #23, !dbg !14817
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14819, !srcloc !14228
  br label %14, !dbg !14820

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.303(%struct.k_thread* noundef %0) #24, !dbg !14821
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14822
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14823
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14823
  br label %14, !dbg !14824

14:                                               ; preds = %12, %11
  ret void, !dbg !14824
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14825 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14827, metadata !DIExpression()), !dbg !14828
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14829
  %3 = load i8, i8* %2, align 1, !dbg !14829
  %4 = and i8 %3, 4, !dbg !14830
  %5 = icmp eq i8 %4, 0, !dbg !14831
  ret i1 %5, !dbg !14832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.303(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14833 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14835, metadata !DIExpression()), !dbg !14836
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14837
  %3 = load i8, i8* %2, align 1, !dbg !14838
  %4 = and i8 %3, -5, !dbg !14838
  store i8 %4, i8* %2, align 1, !dbg !14838
  ret void, !dbg !14839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14840 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14843, metadata !DIExpression()), !dbg !14844
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14842, metadata !DIExpression()), !dbg !14844
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14845
  br i1 %4, label %5, label %12, !dbg !14847

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14848
  br i1 %6, label %7, label %12, !dbg !14849

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #23, !dbg !14856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14855, metadata !DIExpression()) #23, !dbg !14856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14859, metadata !DIExpression()) #23, !dbg !14864
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14866
  br i1 %8, label %10, label %9, !dbg !14869

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !14870
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14870
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !14870
  unreachable, !dbg !14870

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14850, metadata !DIExpression()) #23, !dbg !14856
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14872
  br label %16, !dbg !14873

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14874
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14213, metadata !DIExpression()) #23, !dbg !14874
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14877
  br i1 %13, label %15, label %14, !dbg !14878

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14879
  unreachable, !dbg !14879

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14208, metadata !DIExpression()) #23, !dbg !14874
  call void @llvm.dbg.value(metadata i32 %3, metadata !14222, metadata !DIExpression()) #23, !dbg !14880
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14882, !srcloc !14228
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14888, metadata !DIExpression()), !dbg !14889
  call void @llvm.dbg.value(metadata i32 %0, metadata !14890, metadata !DIExpression()), !dbg !14895
  %2 = icmp eq i32 %0, 0, !dbg !14897
  br i1 %2, label %3, label %6, !dbg !14898

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14899, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %4, metadata !14902, metadata !DIExpression()) #23, !dbg !14907
  %5 = icmp eq i32 %4, 0, !dbg !14908
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14889
  ret i1 %7, !dbg !14909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14910 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14913
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14912, metadata !DIExpression()), !dbg !14914
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14915
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14916
  ret i1 %3, !dbg !14917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14920, metadata !DIExpression()), !dbg !14922
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14923
  call void @llvm.dbg.value(metadata i32 %2, metadata !14921, metadata !DIExpression()), !dbg !14922
  ret i32 %2, !dbg !14924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14925 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14927, metadata !DIExpression()), !dbg !14931
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14932
  call void @llvm.dbg.value(metadata i32 0, metadata !14928, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !14934
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14936, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !14938
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !14938
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !14934
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14939
  br i1 %4, label %6, label %5, !dbg !14940

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14941
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14941
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !14941
  unreachable, !dbg !14941

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14936
  call void @llvm.dbg.value(metadata i32 %7, metadata !14186, metadata !DIExpression()) #23, !dbg !14938
  call void @llvm.dbg.value(metadata i32 %7, metadata !14180, metadata !DIExpression()) #23, !dbg !14934
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14942
  call void @llvm.dbg.value(metadata i32 %7, metadata !14930, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i32 undef, metadata !14928, metadata !DIExpression()), !dbg !14933
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14943
  br i1 %8, label %9, label %13, !dbg !14947

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14366, metadata !DIExpression()) #23, !dbg !14948
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14951
  %11 = load i8, i8* %10, align 1, !dbg !14952
  %12 = and i8 %11, 127, !dbg !14952
  store i8 %12, i8* %10, align 1, !dbg !14952
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14374, metadata !DIExpression()) #23, !dbg !14953
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14955
  br label %13, !dbg !14956

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14957
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14958
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14959
  %16 = zext i1 %15 to i32, !dbg !14959
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14960
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !14961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !14961
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14963
  br i1 %17, label %19, label %18, !dbg !14964

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14965
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !14965
  unreachable, !dbg !14965

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14208, metadata !DIExpression()) #23, !dbg !14961
  call void @llvm.dbg.value(metadata i32 %7, metadata !14222, metadata !DIExpression()) #23, !dbg !14966
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14968, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !14928, metadata !DIExpression()), !dbg !14933
  call void @llvm.dbg.value(metadata i32 undef, metadata !14928, metadata !DIExpression()), !dbg !14933
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14969
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14971
  br i1 %21, label %22, label %23, !dbg !14972

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14973
  br label %23, !dbg !14975

23:                                               ; preds = %22, %19
  ret void, !dbg !14976
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14977 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14979, metadata !DIExpression()), !dbg !14980
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14981
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14982
  ret i32 %3, !dbg !14983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14984 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14986, metadata !DIExpression()), !dbg !14987
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14988
  %3 = load i8, i8* %2, align 1, !dbg !14989
  %4 = or i8 %3, 16, !dbg !14989
  store i8 %4, i8* %2, align 1, !dbg !14989
  ret void, !dbg !14990
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14991 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14992, !srcloc !14189
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14992
  call void @llvm.dbg.value(metadata i32 %2, metadata !14186, metadata !DIExpression()) #23, !dbg !14994
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !14994
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14995
  ret void, !dbg !14996
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14999, metadata !DIExpression()), !dbg !15000
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15001
  br i1 %2, label %3, label %5, !dbg !15003

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15004
  br label %6, !dbg !15006

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14222, metadata !DIExpression()) #23, !dbg !15007
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15010, !srcloc !14228
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15014, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15017
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15019, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15021
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15017
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15022
  br i1 %3, label %5, label %4, !dbg !15023

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15024
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15024
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15024
  unreachable, !dbg !15024

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15019
  call void @llvm.dbg.value(metadata i32 %6, metadata !14186, metadata !DIExpression()) #23, !dbg !15021
  call void @llvm.dbg.value(metadata i32 %6, metadata !14180, metadata !DIExpression()) #23, !dbg !15017
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15025
  call void @llvm.dbg.value(metadata i32 %6, metadata !15015, metadata !DIExpression()), !dbg !15016
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15026
  br i1 %7, label %12, label %8, !dbg !15028

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15029
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15032
  br i1 %9, label %11, label %10, !dbg !15033

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15034
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15034
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15034
  unreachable, !dbg !15034

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14208, metadata !DIExpression()) #23, !dbg !15029
  call void @llvm.dbg.value(metadata i32 %6, metadata !14222, metadata !DIExpression()) #23, !dbg !15035
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15037, !srcloc !14228
  br label %14, !dbg !15038

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15039
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15040
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15041
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15041
  br label %14, !dbg !15042

14:                                               ; preds = %12, %11
  ret void, !dbg !15042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15043 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15045, metadata !DIExpression()), !dbg !15046
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15047
  %3 = load i8, i8* %2, align 1, !dbg !15047
  %4 = and i8 %3, 16, !dbg !15048
  %5 = icmp ne i8 %4, 0, !dbg !15049
  ret i1 %5, !dbg !15050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15051 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15053, metadata !DIExpression()), !dbg !15054
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15055
  %3 = load i8, i8* %2, align 1, !dbg !15056
  %4 = and i8 %3, -17, !dbg !15056
  store i8 %4, i8* %2, align 1, !dbg !15056
  ret void, !dbg !15057
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15058 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15068, metadata !DIExpression()), !dbg !15072
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15066, metadata !DIExpression()), !dbg !15072
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15067, metadata !DIExpression()), !dbg !15072
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15073
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15073
  br i1 %5, label %9, label %6, !dbg !15073

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15073
  br i1 %7, label %9, label %8, !dbg !15076

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.306, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 773) #25, !dbg !15077
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 773) #25, !dbg !15077
  unreachable, !dbg !15077

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15069, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15080
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15082, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15084
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15084
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15080
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15085
  br i1 %11, label %13, label %12, !dbg !15086

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15087
  unreachable, !dbg !15087

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15084
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15080
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15088
  call void @llvm.dbg.value(metadata i32 undef, metadata !15071, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i32 undef, metadata !15069, metadata !DIExpression()), !dbg !15079
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15089
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15092
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15094
  br i1 %14, label %16, label %15, !dbg !15095

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15096
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15096
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15096
  unreachable, !dbg !15096

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15082
  call void @llvm.dbg.value(metadata i32 %17, metadata !14186, metadata !DIExpression()) #23, !dbg !15084
  call void @llvm.dbg.value(metadata i32 %17, metadata !14180, metadata !DIExpression()) #23, !dbg !15080
  call void @llvm.dbg.value(metadata i32 %17, metadata !15071, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15092
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15097
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15099, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !15069, metadata !DIExpression()), !dbg !15079
  call void @llvm.dbg.value(metadata i32 undef, metadata !15069, metadata !DIExpression()), !dbg !15079
  ret void, !dbg !15100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15101 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15103, metadata !DIExpression()), !dbg !15104
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15105
  %3 = load i8, i8* %2, align 1, !dbg !15105
  %4 = and i8 %3, 1, !dbg !15106
  %5 = icmp ne i8 %4, 0, !dbg !15107
  ret i1 %5, !dbg !15108
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15109 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15113, metadata !DIExpression()), !dbg !15114
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15111, metadata !DIExpression()), !dbg !15114
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15112, metadata !DIExpression()), !dbg !15114
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15115
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15116
  ret void, !dbg !15117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15118 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15122, metadata !DIExpression()), !dbg !15124
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15123, metadata !DIExpression()), !dbg !15124
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15125
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15126
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15127
  br i1 %3, label %24, label %4, !dbg !15129

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15130
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15132
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15133
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14397, metadata !DIExpression()) #23, !dbg !15134
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14403, metadata !DIExpression()) #23, !dbg !15134
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15136
  br i1 %7, label %8, label %9, !dbg !15137

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15138
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15138
  unreachable, !dbg !15138

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.292(%struct._dnode* noundef nonnull %6) #25, !dbg !15139
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14404, metadata !DIExpression()) #23, !dbg !15134
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15140
  br i1 %11, label %22, label %12, !dbg !15139

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14404, metadata !DIExpression()) #23, !dbg !15134
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15141
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14404, metadata !DIExpression()) #23, !dbg !15134
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15142
  %16 = icmp sgt i32 %15, 0, !dbg !15143
  br i1 %16, label %17, label %19, !dbg !15144

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15145
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15146
  br label %24, !dbg !15147

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15140
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14404, metadata !DIExpression()) #23, !dbg !15134
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15140
  br i1 %21, label %22, label %12, !dbg !15139, !llvm.loop !15148

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15150
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15151
  br label %24, !dbg !15152

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15154 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15159, metadata !DIExpression()), !dbg !15160
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15158, metadata !DIExpression()), !dbg !15160
  %4 = icmp eq i64 %3, -1, !dbg !15161
  br i1 %4, label %6, label %5, !dbg !15163

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.307(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15164
  br label %6, !dbg !15166

6:                                                ; preds = %5, %2
  ret void, !dbg !15167
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.307(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15168 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15171, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15170, metadata !DIExpression()), !dbg !15172
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15173
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15174
  ret void, !dbg !15175
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15176 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15178, metadata !DIExpression()), !dbg !15186
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15187
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15187
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15179, metadata !DIExpression()), !dbg !15186
  call void @llvm.dbg.value(metadata i32 0, metadata !15180, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15189
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15191, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15193
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15193
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15189
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15194
  br i1 %5, label %7, label %6, !dbg !15195

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15196
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15196
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15196
  unreachable, !dbg !15196

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15193
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15189
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15197
  call void @llvm.dbg.value(metadata i32 undef, metadata !15182, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()), !dbg !15188
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15198
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15199
  %10 = load i8, i8* %9, align 1, !dbg !15199
  %11 = and i8 %10, 40, !dbg !15200
  %12 = icmp eq i8 %11, 0, !dbg !15200
  call void @llvm.dbg.value(metadata i1 %12, metadata !15183, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15201
  br i1 %12, label %13, label %20, !dbg !15202

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15203
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15203
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15203
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15207
  br i1 %17, label %19, label %18, !dbg !15208

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15209
  br label %19, !dbg !15211

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.303(%struct.k_thread* noundef nonnull %3) #24, !dbg !15212
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15213
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15214
  br label %20, !dbg !15215

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15216
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15218
  br i1 %21, label %23, label %22, !dbg !15219

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15220
  unreachable, !dbg !15220

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15191
  call void @llvm.dbg.value(metadata i32 %24, metadata !14186, metadata !DIExpression()) #23, !dbg !15193
  call void @llvm.dbg.value(metadata i32 %24, metadata !14180, metadata !DIExpression()) #23, !dbg !15189
  call void @llvm.dbg.value(metadata i32 %24, metadata !15182, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15216
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15221
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15223, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !15180, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.value(metadata i32 undef, metadata !15180, metadata !DIExpression()), !dbg !15188
  ret void, !dbg !15224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15225 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15227, metadata !DIExpression()), !dbg !15228
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15229
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15230
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15231
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15232
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15233
  ret void, !dbg !15234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15235 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15239, metadata !DIExpression()), !dbg !15240
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15241
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15241
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15241
  br i1 %4, label %5, label %6, !dbg !15244

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.310, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 726) #25, !dbg !15245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 726) #25, !dbg !15245
  unreachable, !dbg !15245

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15248 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15250, metadata !DIExpression()), !dbg !15251
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15252
  %3 = load i8, i8* %2, align 1, !dbg !15253
  %4 = and i8 %3, -3, !dbg !15253
  store i8 %4, i8* %2, align 1, !dbg !15253
  ret void, !dbg !15254
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15255 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15257, metadata !DIExpression()), !dbg !15258
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15259
  br i1 %2, label %3, label %7, !dbg !15261

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14366, metadata !DIExpression()) #23, !dbg !15262
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15265
  %5 = load i8, i8* %4, align 1, !dbg !15266
  %6 = and i8 %5, 127, !dbg !15266
  store i8 %6, i8* %4, align 1, !dbg !15266
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14374, metadata !DIExpression()) #23, !dbg !15267
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15269
  br label %7, !dbg !15270

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15271
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15272
  %10 = zext i1 %9 to i32, !dbg !15272
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15273
  ret void, !dbg !15274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15277, metadata !DIExpression()), !dbg !15278
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15279
  %3 = load i8, i8* %2, align 1, !dbg !15280
  %4 = or i8 %3, 2, !dbg !15280
  store i8 %4, i8* %2, align 1, !dbg !15280
  ret void, !dbg !15281
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15282 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15284, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata i32 0, metadata !15285, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15290
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15292, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15290
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15295
  br i1 %3, label %5, label %4, !dbg !15296

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15297
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15297
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15297
  unreachable, !dbg !15297

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15290
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15298
  call void @llvm.dbg.value(metadata i32 undef, metadata !15287, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15285, metadata !DIExpression()), !dbg !15289
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15299
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15302
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15304
  br i1 %6, label %8, label %7, !dbg !15305

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15306
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15306
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15306
  unreachable, !dbg !15306

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15292
  call void @llvm.dbg.value(metadata i32 %9, metadata !14186, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 %9, metadata !14180, metadata !DIExpression()) #23, !dbg !15290
  call void @llvm.dbg.value(metadata i32 %9, metadata !15287, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15302
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15307
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15309, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !15285, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !15285, metadata !DIExpression()), !dbg !15289
  ret void, !dbg !15310
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15311 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15317, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata i32 %0, metadata !15315, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15316, metadata !DIExpression()), !dbg !15322
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15323
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15324
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15325
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15326
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %6, metadata !15318, metadata !DIExpression()), !dbg !15322
  call void @llvm.dbg.value(metadata i32 0, metadata !15319, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15329
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15331, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15329
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15334
  br i1 %8, label %10, label %9, !dbg !15335

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15336
  unreachable, !dbg !15336

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15329
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15337
  call void @llvm.dbg.value(metadata i32 undef, metadata !15321, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 undef, metadata !15319, metadata !DIExpression()), !dbg !15328
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15338
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15342
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15343
  br i1 %13, label %14, label %15, !dbg !15344

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15345
  br label %15, !dbg !15347

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15348
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15350
  br i1 %16, label %18, label %17, !dbg !15351

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15352
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15352
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15352
  unreachable, !dbg !15352

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15331
  call void @llvm.dbg.value(metadata i32 %19, metadata !14186, metadata !DIExpression()) #23, !dbg !15333
  call void @llvm.dbg.value(metadata i32 %19, metadata !14180, metadata !DIExpression()) #23, !dbg !15329
  call void @llvm.dbg.value(metadata i32 %19, metadata !15321, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15348
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15353
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15355, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !15319, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 undef, metadata !15319, metadata !DIExpression()), !dbg !15328
  ret i32 %6, !dbg !15356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15357 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15362, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata i64 undef, metadata !15364, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15361, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15363, metadata !DIExpression()), !dbg !15365
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15366
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15367
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15368
  br i1 %6, label %7, label %8, !dbg !15371

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 846) #25, !dbg !15372
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 846) #25, !dbg !15372
  unreachable, !dbg !15372

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15374
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15376, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15374
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15379
  br i1 %10, label %12, label %11, !dbg !15380

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15381
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15381
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15381
  unreachable, !dbg !15381

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15374
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15382
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15383
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14859, metadata !DIExpression()) #23, !dbg !15385
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15387
  br i1 %14, label %16, label %15, !dbg !15388

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15389
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15389
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15389
  unreachable, !dbg !15389

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #23, !dbg !15390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14855, metadata !DIExpression()) #23, !dbg !15390
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14859, metadata !DIExpression()) #23, !dbg !15392
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15394
  br i1 %17, label %19, label %18, !dbg !15395

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15396
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15396
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !15396
  unreachable, !dbg !15396

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14850, metadata !DIExpression()) #23, !dbg !15390
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15397
  ret i32 %21, !dbg !15398
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15399 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15403, metadata !DIExpression()), !dbg !15408
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15404, metadata !DIExpression()), !dbg !15408
  call void @llvm.dbg.value(metadata i32 0, metadata !15405, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15410
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15412, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15414
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15414
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15410
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15415
  br i1 %3, label %5, label %4, !dbg !15416

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15417
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15417
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15417
  unreachable, !dbg !15417

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15414
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15410
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15418
  call void @llvm.dbg.value(metadata i32 undef, metadata !15407, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15404, metadata !DIExpression()), !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !15405, metadata !DIExpression()), !dbg !15409
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15419
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15404, metadata !DIExpression()), !dbg !15408
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15422
  br i1 %8, label %10, label %9, !dbg !15424

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15425
  br label %10, !dbg !15427

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15428
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15430
  br i1 %11, label %13, label %12, !dbg !15431

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15432
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15432
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15432
  unreachable, !dbg !15432

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15412
  call void @llvm.dbg.value(metadata i32 %14, metadata !14186, metadata !DIExpression()) #23, !dbg !15414
  call void @llvm.dbg.value(metadata i32 %14, metadata !14180, metadata !DIExpression()) #23, !dbg !15410
  call void @llvm.dbg.value(metadata i32 %14, metadata !15407, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15428
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15433
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15435, !srcloc !14228
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15404, metadata !DIExpression()), !dbg !15408
  call void @llvm.dbg.value(metadata i32 undef, metadata !15405, metadata !DIExpression()), !dbg !15409
  ret %struct.k_thread* %7, !dbg !15436
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15437 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15439, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15440, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 0, metadata !15441, metadata !DIExpression()), !dbg !15445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15446
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15448, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15450
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15450
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15446
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15451
  br i1 %3, label %5, label %4, !dbg !15452

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15453
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15453
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15453
  unreachable, !dbg !15453

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15450
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15446
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15443, metadata !DIExpression()), !dbg !15445
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15440, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()), !dbg !15445
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15455
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15440, metadata !DIExpression()), !dbg !15444
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15458
  br i1 %8, label %11, label %9, !dbg !15460

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15461
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15463
  br label %11, !dbg !15464

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15465
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15465
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15467
  br i1 %12, label %14, label %13, !dbg !15468

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15469
  unreachable, !dbg !15469

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15448
  call void @llvm.dbg.value(metadata i32 %15, metadata !14186, metadata !DIExpression()) #23, !dbg !15450
  call void @llvm.dbg.value(metadata i32 %15, metadata !14180, metadata !DIExpression()) #23, !dbg !15446
  call void @llvm.dbg.value(metadata i32 %15, metadata !15443, metadata !DIExpression()), !dbg !15445
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15470
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15472, !srcloc !14228
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15440, metadata !DIExpression()), !dbg !15444
  call void @llvm.dbg.value(metadata i32 undef, metadata !15441, metadata !DIExpression()), !dbg !15445
  ret %struct.k_thread* %7, !dbg !15473
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15474 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15476, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15284, metadata !DIExpression()) #23, !dbg !15478
  call void @llvm.dbg.value(metadata i32 0, metadata !15285, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15481
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15483, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15481
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15486
  br i1 %3, label %5, label %4, !dbg !15487

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15488
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15488
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15488
  unreachable, !dbg !15488

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15481
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15489
  call void @llvm.dbg.value(metadata i32 undef, metadata !15287, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15285, metadata !DIExpression()) #23, !dbg !15480
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15491
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15491
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15493
  br i1 %6, label %8, label %7, !dbg !15494

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15495
  unreachable, !dbg !15495

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15483
  call void @llvm.dbg.value(metadata i32 %9, metadata !14186, metadata !DIExpression()) #23, !dbg !15485
  call void @llvm.dbg.value(metadata i32 %9, metadata !14180, metadata !DIExpression()) #23, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %9, metadata !15287, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15491
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15496
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15498, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !15285, metadata !DIExpression()) #23, !dbg !15480
  call void @llvm.dbg.value(metadata i32 undef, metadata !15285, metadata !DIExpression()) #23, !dbg !15480
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15499
  ret void, !dbg !15500
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15503, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i32 %1, metadata !15504, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i8 0, metadata !15505, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i32 0, metadata !15506, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15511
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15513, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15515
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15515
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15511
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15516
  br i1 %4, label %6, label %5, !dbg !15517

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15518
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15518
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15518
  unreachable, !dbg !15518

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15515
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15511
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15519
  call void @llvm.dbg.value(metadata i32 undef, metadata !15508, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.value(metadata i8 poison, metadata !15505, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i32 undef, metadata !15506, metadata !DIExpression()), !dbg !15510
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15520
  call void @llvm.dbg.value(metadata i1 %9, metadata !15505, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15509
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15523

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14366, metadata !DIExpression()) #23, !dbg !15524
  %14 = load i8, i8* %7, align 1, !dbg !15530
  %15 = and i8 %14, 127, !dbg !15530
  store i8 %15, i8* %7, align 1, !dbg !15530
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14374, metadata !DIExpression()) #23, !dbg !15531
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15533
  store i8 %12, i8* %11, align 2, !dbg !15534
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14383, metadata !DIExpression()) #23, !dbg !15535
  %16 = load i8, i8* %7, align 1, !dbg !15537
  %17 = or i8 %16, -128, !dbg !15537
  store i8 %17, i8* %7, align 1, !dbg !15537
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !15538
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14397, metadata !DIExpression()) #23, !dbg !15540
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14403, metadata !DIExpression()) #23, !dbg !15540
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15542
  br i1 %18, label %19, label %20, !dbg !15543

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15544
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15544
  unreachable, !dbg !15544

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.292(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15545
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14404, metadata !DIExpression()) #23, !dbg !15540
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15546
  br i1 %22, label %32, label %23, !dbg !15545

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14404, metadata !DIExpression()) #23, !dbg !15540
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15547
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14404, metadata !DIExpression()) #23, !dbg !15540
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15548
  %27 = icmp sgt i32 %26, 0, !dbg !15549
  br i1 %27, label %28, label %29, !dbg !15550

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15551
  br label %33, !dbg !15552

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15546
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14404, metadata !DIExpression()) #23, !dbg !15540
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15546
  br i1 %31, label %32, label %23, !dbg !15545, !llvm.loop !15553

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15555
  br label %33, !dbg !15556

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15557
  br label %35, !dbg !15558

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15559
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15561
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15561
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15563
  br i1 %36, label %38, label %37, !dbg !15564

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15565
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15565
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15565
  unreachable, !dbg !15565

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15513
  call void @llvm.dbg.value(metadata i32 %39, metadata !14186, metadata !DIExpression()) #23, !dbg !15515
  call void @llvm.dbg.value(metadata i32 %39, metadata !14180, metadata !DIExpression()) #23, !dbg !15511
  call void @llvm.dbg.value(metadata i32 %39, metadata !15508, metadata !DIExpression()), !dbg !15510
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15561
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15566
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15568, !srcloc !14228
  call void @llvm.dbg.value(metadata i8 poison, metadata !15505, metadata !DIExpression()), !dbg !15509
  call void @llvm.dbg.value(metadata i32 undef, metadata !15506, metadata !DIExpression()), !dbg !15510
  ret i1 %9, !dbg !15569
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15570 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15574, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.value(metadata i32 %1, metadata !15575, metadata !DIExpression()), !dbg !15577
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15578
  call void @llvm.dbg.value(metadata i1 %3, metadata !15576, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15577
  br i1 %3, label %4, label %12, !dbg !15579

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15581
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15582
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15582
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15582
  %9 = load i8, i8* %8, align 1, !dbg !15582
  %10 = icmp eq i8 %9, 0, !dbg !15583
  br i1 %10, label %11, label %12, !dbg !15584

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15585
  br label %12, !dbg !15587

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15589 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15591, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15595
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15597, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15595
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15600
  br i1 %2, label %4, label %3, !dbg !15601

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15602
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15602
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15602
  unreachable, !dbg !15602

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15595
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15603
  call void @llvm.dbg.value(metadata i32 undef, metadata !15593, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15591, metadata !DIExpression()), !dbg !15594
  tail call fastcc void @z_sched_lock() #24, !dbg !15604
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15607
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15609
  br i1 %5, label %7, label %6, !dbg !15610

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15611
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15611
  unreachable, !dbg !15611

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15597
  call void @llvm.dbg.value(metadata i32 %8, metadata !14186, metadata !DIExpression()) #23, !dbg !15599
  call void @llvm.dbg.value(metadata i32 %8, metadata !14180, metadata !DIExpression()) #23, !dbg !15595
  call void @llvm.dbg.value(metadata i32 %8, metadata !15593, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15607
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15612
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15614, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !15591, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata i32 undef, metadata !15591, metadata !DIExpression()), !dbg !15594
  ret void, !dbg !15615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15616 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15617, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %1, metadata !14902, metadata !DIExpression()) #23, !dbg !15622
  %2 = icmp eq i32 %1, 0, !dbg !15623
  br i1 %2, label %4, label %3, !dbg !15624

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.321, i32 0, i32 0), i32 noundef 253) #25, !dbg !15625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.321, i32 0, i32 0), i32 noundef 253) #25, !dbg !15625
  unreachable, !dbg !15625

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15627
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15627
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15627
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15627
  %9 = load i8, i8* %8, align 1, !dbg !15627
  %10 = icmp eq i8 %9, 1, !dbg !15627
  br i1 %10, label %11, label %12, !dbg !15630

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.322, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.321, i32 0, i32 0), i32 noundef 254) #25, !dbg !15631
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15631
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.321, i32 0, i32 0), i32 noundef 254) #25, !dbg !15631
  unreachable, !dbg !15631

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15633
  store i8 %13, i8* %8, align 1, !dbg !15633
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15634, !srcloc !15636
  ret void, !dbg !15637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15638 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15640, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15644
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15646, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15644
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15649
  br i1 %2, label %4, label %3, !dbg !15650

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15651
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15651
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15651
  unreachable, !dbg !15651

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15648
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15644
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15652
  call void @llvm.dbg.value(metadata i32 undef, metadata !15642, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.value(metadata i32 undef, metadata !15640, metadata !DIExpression()), !dbg !15643
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15653
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15653
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15653
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15653
  %9 = load i8, i8* %8, align 1, !dbg !15653
  %10 = icmp eq i8 %9, 0, !dbg !15653
  br i1 %10, label %11, label %12, !dbg !15658

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 999) #25, !dbg !15659
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15659
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 999) #25, !dbg !15659
  unreachable, !dbg !15659

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15661, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %13, metadata !14902, metadata !DIExpression()) #23, !dbg !15666
  %14 = icmp eq i32 %13, 0, !dbg !15667
  br i1 %14, label %16, label %15, !dbg !15668

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15669
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15669
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15669
  unreachable, !dbg !15669

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15671
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15672
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15672
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15672
  %21 = load i8, i8* %20, align 1, !dbg !15673
  %22 = add i8 %21, 1, !dbg !15673
  store i8 %22, i8* %20, align 1, !dbg !15673
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15675
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !15675
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15677
  br i1 %23, label %25, label %24, !dbg !15678

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15679
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15679
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !15679
  unreachable, !dbg !15679

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15646
  call void @llvm.dbg.value(metadata i32 %26, metadata !14186, metadata !DIExpression()) #23, !dbg !15648
  call void @llvm.dbg.value(metadata i32 %26, metadata !14180, metadata !DIExpression()) #23, !dbg !15644
  call void @llvm.dbg.value(metadata i32 %26, metadata !15642, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !15675
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !15680
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15682, !srcloc !14228
  call void @llvm.dbg.value(metadata i32 1, metadata !15640, metadata !DIExpression()), !dbg !15643
  call void @llvm.dbg.value(metadata i32 undef, metadata !15640, metadata !DIExpression()), !dbg !15643
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15683
  ret void, !dbg !15684
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15685 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15686
  ret %struct.k_thread* %1, !dbg !15687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15688 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15692, metadata !DIExpression()), !dbg !15697
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15693, metadata !DIExpression()), !dbg !15697
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15698
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15694, metadata !DIExpression()), !dbg !15697
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15699
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15695, metadata !DIExpression()), !dbg !15697
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15700
  call void @llvm.dbg.value(metadata i32 %5, metadata !15696, metadata !DIExpression()), !dbg !15697
  %6 = icmp sgt i32 %5, 0, !dbg !15701
  br i1 %6, label %17, label %7, !dbg !15703

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15704
  br i1 %8, label %17, label %9, !dbg !15706

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15707
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15707
  %12 = load i32, i32* %11, align 8, !dbg !15707
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15709
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15709
  %15 = load i32, i32* %14, align 8, !dbg !15709
  %16 = icmp ult i32 %12, %15, !dbg !15710
  br label %17, !dbg !15711

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15712
  ret i1 %18, !dbg !15713
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15714 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15731, metadata !DIExpression()), !dbg !15746
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15732, metadata !DIExpression()), !dbg !15746
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15747
  br i1 %4, label %5, label %6, !dbg !15750

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15751
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15751
  unreachable, !dbg !15751

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15753
  %8 = load i32, i32* %7, align 4, !dbg !15754
  %9 = add nsw i32 %8, 1, !dbg !15754
  store i32 %9, i32* %7, align 4, !dbg !15754
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15755
  store i32 %8, i32* %10, align 8, !dbg !15756
  %11 = load i32, i32* %7, align 4, !dbg !15757
  %12 = icmp eq i32 %11, 0, !dbg !15758
  br i1 %12, label %13, label %35, !dbg !15759

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15760
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15760
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15734, metadata !DIExpression()), !dbg !15760
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15760
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15760
  %17 = load i32, i32* %16, align 4, !dbg !15760
  %18 = shl i32 %17, 2, !dbg !15760
  %19 = alloca i8, i32 %18, align 8, !dbg !15760
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15760
  store i8* %19, i8** %20, align 4, !dbg !15760
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15760
  %22 = alloca i8, i32 %17, align 8, !dbg !15760
  store i8* %22, i8** %21, align 4, !dbg !15760
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15760
  store i32 -1, i32* %23, align 4, !dbg !15760
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15761
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15743, metadata !DIExpression()), !dbg !15762
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15733, metadata !DIExpression()), !dbg !15746
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15763
  br i1 %25, label %26, label %27, !dbg !15760

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15763
  br label %35, !dbg !15764

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15733, metadata !DIExpression()), !dbg !15746
  %29 = load i32, i32* %7, align 4, !dbg !15765
  %30 = add nsw i32 %29, 1, !dbg !15765
  store i32 %30, i32* %7, align 4, !dbg !15765
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15767
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15767
  store i32 %29, i32* %32, align 8, !dbg !15768
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15761
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15743, metadata !DIExpression()), !dbg !15762
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15733, metadata !DIExpression()), !dbg !15746
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15763
  br i1 %34, label %26, label %27, !dbg !15760, !llvm.loop !15769

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15771
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15772
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15773
  ret void, !dbg !15774
}

; Function Attrs: optsize
declare !dbg !15775 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15780 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15783 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15785, metadata !DIExpression()), !dbg !15787
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15786, metadata !DIExpression()), !dbg !15787
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15788
  br i1 %3, label %4, label %5, !dbg !15791

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15792
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15792
  unreachable, !dbg !15792

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15794
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15795
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15796
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15797
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15797
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15799
  br i1 %10, label %11, label %13, !dbg !15800

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15801
  store i32 0, i32* %12, align 4, !dbg !15803
  br label %13, !dbg !15804

13:                                               ; preds = %11, %5
  ret void, !dbg !15805
}

; Function Attrs: optsize
declare !dbg !15806 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15807 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15811, metadata !DIExpression()), !dbg !15814
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15812, metadata !DIExpression()), !dbg !15814
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15815
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !15816
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15813, metadata !DIExpression()), !dbg !15814
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15812, metadata !DIExpression()), !dbg !15814
  ret %struct.k_thread* %4, !dbg !15817
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15818 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15822, metadata !DIExpression()), !dbg !15823
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15824
  ret %struct.rbnode* %2, !dbg !15825
}

; Function Attrs: optsize
declare !dbg !15826 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #17 !dbg !15829 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15839, metadata !DIExpression()), !dbg !15843
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15844
  %3 = load i32, i32* %2, align 4, !dbg !15844
  %4 = icmp eq i32 %3, 0, !dbg !15846
  br i1 %4, label %10, label %5, !dbg !15847

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15840, metadata !DIExpression()), !dbg !15843
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15848, !range !7540
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15849
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15841, metadata !DIExpression()), !dbg !15843
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.292(%struct._dnode* noundef %7) #24, !dbg !15850
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15842, metadata !DIExpression()), !dbg !15843
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15840, metadata !DIExpression()), !dbg !15843
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15843
  ret %struct.k_thread* %11, !dbg !15851
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15852 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15856, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.value(metadata i32 0, metadata !15857, metadata !DIExpression()), !dbg !15859
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.326(%struct._wait_q_t* noundef %0) #24, !dbg !15860
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15858, metadata !DIExpression()), !dbg !15859
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15861
  br i1 %3, label %8, label %4, !dbg !15862

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15863
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15865
  call void @llvm.dbg.value(metadata i32 1, metadata !15857, metadata !DIExpression()), !dbg !15859
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.326(%struct._wait_q_t* noundef %0) #24, !dbg !15860
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15858, metadata !DIExpression()), !dbg !15859
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15861
  br i1 %7, label %8, label %4, !dbg !15862, !llvm.loop !15866

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15859
  ret i32 %9, !dbg !15868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.326(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15869 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15871, metadata !DIExpression()), !dbg !15872
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15873
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.292(%struct._dnode* noundef %2) #24, !dbg !15874
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15875
  ret %struct.k_thread* %4, !dbg !15876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !15877 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15886, metadata !DIExpression()), !dbg !15887
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15888
  tail call fastcc void @sys_dlist_init.327(%struct._dnode* noundef nonnull %2) #24, !dbg !15889
  ret void, !dbg !15890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.327(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15891 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15895, metadata !DIExpression()), !dbg !15896
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15897
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15898
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15899
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15900
  ret void, !dbg !15901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15902 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15903
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15904
  ret void, !dbg !15905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15906 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15911, metadata !DIExpression()), !dbg !15912
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15913
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15913
  %4 = load i8, i8* %3, align 2, !dbg !15913
  %5 = sext i8 %4 to i32, !dbg !15914
  ret i32 %5, !dbg !15915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15916 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15920, metadata !DIExpression()), !dbg !15923
  call void @llvm.dbg.value(metadata i32 %1, metadata !15921, metadata !DIExpression()), !dbg !15923
  %3 = add i32 %1, 16, !dbg !15924
  %4 = icmp ult i32 %3, 31, !dbg !15924
  br i1 %4, label %6, label %5, !dbg !15924

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15928
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.331, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15928
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15928
  unreachable, !dbg !15928

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15930, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %7, metadata !14902, metadata !DIExpression()) #23, !dbg !15935
  %8 = icmp eq i32 %7, 0, !dbg !15936
  br i1 %8, label %10, label %9, !dbg !15937

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15938
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15938
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15938
  unreachable, !dbg !15938

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15922, metadata !DIExpression()), !dbg !15923
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15940
  ret void, !dbg !15941
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15942 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15943
  br i1 %1, label %8, label %2, !dbg !15944

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15945
  br i1 %3, label %8, label %4, !dbg !15946

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15947
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15948
  %7 = xor i1 %6, true, !dbg !15946
  br label %8, !dbg !15946

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15950 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15951, !range !6719
  %2 = icmp eq i8 %1, 0, !dbg !15951
  ret i1 %2, !dbg !15952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15953 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15956, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %1, metadata !14902, metadata !DIExpression()) #23, !dbg !15961
  %2 = icmp eq i32 %1, 0, !dbg !15962
  br i1 %2, label %4, label %3, !dbg !15963

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !15964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15964
  unreachable, !dbg !15964

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !15966
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15968, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15966
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15971
  br i1 %6, label %8, label %7, !dbg !15972

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15973
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15973
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !15973
  unreachable, !dbg !15973

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !15966
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15974
  call void @llvm.dbg.value(metadata i32 undef, metadata !15955, metadata !DIExpression()), !dbg !15975
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15976
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14366, metadata !DIExpression()) #23, !dbg !15979
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15981
  %11 = load i8, i8* %10, align 1, !dbg !15982
  %12 = and i8 %11, 127, !dbg !15982
  store i8 %12, i8* %10, align 1, !dbg !15982
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14374, metadata !DIExpression()) #23, !dbg !15983
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15985
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15986
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14383, metadata !DIExpression()) #23, !dbg !15987
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15989
  %15 = load i8, i8* %14, align 1, !dbg !15990
  %16 = or i8 %15, -128, !dbg !15990
  store i8 %16, i8* %14, align 1, !dbg !15990
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14390, metadata !DIExpression()) #23, !dbg !15991
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14397, metadata !DIExpression()) #23, !dbg !15993
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14403, metadata !DIExpression()) #23, !dbg !15993
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15995
  br i1 %17, label %18, label %19, !dbg !15996

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.290, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 186) #25, !dbg !15997
  unreachable, !dbg !15997

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.292(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15998
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14404, metadata !DIExpression()) #23, !dbg !15993
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15999
  br i1 %21, label %32, label %22, !dbg !15998

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14404, metadata !DIExpression()) #23, !dbg !15993
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16000
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14404, metadata !DIExpression()) #23, !dbg !15993
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16001
  %26 = icmp sgt i32 %25, 0, !dbg !16002
  br i1 %26, label %27, label %29, !dbg !16003

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16004
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16005
  br label %34, !dbg !16006

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15999
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14404, metadata !DIExpression()) #23, !dbg !15993
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15999
  br i1 %31, label %32, label %22, !dbg !15998, !llvm.loop !16007

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16009
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16010
  br label %34, !dbg !16011

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16012
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #23, !dbg !16013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14855, metadata !DIExpression()) #23, !dbg !16013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14859, metadata !DIExpression()) #23, !dbg !16015
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16017
  br i1 %35, label %37, label %36, !dbg !16018

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16019
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16019
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16019
  unreachable, !dbg !16019

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15968
  call void @llvm.dbg.value(metadata i32 %38, metadata !14186, metadata !DIExpression()) #23, !dbg !15970
  call void @llvm.dbg.value(metadata i32 %38, metadata !14180, metadata !DIExpression()) #23, !dbg !15966
  call void @llvm.dbg.value(metadata i32 %38, metadata !15955, metadata !DIExpression()), !dbg !15975
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #23, !dbg !16013
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16020
  ret void, !dbg !16021
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16022 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16026, metadata !DIExpression()), !dbg !16029
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16030, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %3, metadata !14902, metadata !DIExpression()) #23, !dbg !16035
  %4 = icmp eq i32 %3, 0, !dbg !16036
  br i1 %4, label %6, label %5, !dbg !16037

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16038
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16038
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16038
  unreachable, !dbg !16038

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16040
  br i1 %7, label %8, label %10, !dbg !16042

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16043
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16045
  br label %15, !dbg !16046

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16027, metadata !DIExpression()), !dbg !16029
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16047
  %12 = sext i32 %11 to i64, !dbg !16047
  call void @llvm.dbg.value(metadata i64 %12, metadata !16027, metadata !DIExpression()), !dbg !16029
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16048
  %14 = trunc i64 %13 to i32, !dbg !16048
  call void @llvm.dbg.value(metadata i32 %14, metadata !16028, metadata !DIExpression()), !dbg !16029
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16029
  ret i32 %16, !dbg !16049
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16050 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16054, metadata !DIExpression()), !dbg !16055
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16056, !srcloc !16058
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16059
  ret void, !dbg !16060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16061 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16065, metadata !DIExpression()), !dbg !16069
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16070, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %2, metadata !14902, metadata !DIExpression()) #23, !dbg !16075
  %3 = icmp eq i32 %2, 0, !dbg !16076
  br i1 %3, label %5, label %4, !dbg !16077

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16078
  unreachable, !dbg !16078

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16080
  br i1 %6, label %7, label %8, !dbg !16082

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16083
  br label %43, !dbg !16085

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16067, metadata !DIExpression()), !dbg !16069
  %9 = icmp sgt i64 %0, -3, !dbg !16086
  br i1 %9, label %10, label %14, !dbg !16088

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16089
  %12 = trunc i64 %0 to i32, !dbg !16091
  %13 = add i32 %11, %12, !dbg !16091
  call void @llvm.dbg.value(metadata i32 %13, metadata !16066, metadata !DIExpression()), !dbg !16069
  br label %17, !dbg !16092

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16093
  %16 = sub i32 -2, %15, !dbg !16093
  call void @llvm.dbg.value(metadata i32 %16, metadata !16066, metadata !DIExpression()), !dbg !16069
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16095
  call void @llvm.dbg.value(metadata i32 %18, metadata !16066, metadata !DIExpression()), !dbg !16069
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !16096
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16098, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16100
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !16100
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !16096
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16101
  br i1 %20, label %22, label %21, !dbg !16102

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16103
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16103
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16103
  unreachable, !dbg !16103

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16100
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !16096
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16068, metadata !DIExpression()), !dbg !16069
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16105
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16106
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16107
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16108
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16109
  tail call fastcc void @z_add_thread_timeout.307(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16109
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16110
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16111
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #23, !dbg !16112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14855, metadata !DIExpression()) #23, !dbg !16112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14859, metadata !DIExpression()) #23, !dbg !16114
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16116
  br i1 %27, label %29, label %28, !dbg !16117

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16118
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16118
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16118
  unreachable, !dbg !16118

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16098
  call void @llvm.dbg.value(metadata i32 %30, metadata !14186, metadata !DIExpression()) #23, !dbg !16100
  call void @llvm.dbg.value(metadata i32 %30, metadata !14180, metadata !DIExpression()) #23, !dbg !16096
  call void @llvm.dbg.value(metadata i32 %30, metadata !16068, metadata !DIExpression()), !dbg !16069
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #23, !dbg !16112
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16119
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16120
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16120
  br i1 %33, label %34, label %35, !dbg !16123

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16124
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.294, i32 0, i32 0)) #25, !dbg !16124
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16124
  unreachable, !dbg !16124

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16126
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16127
  %38 = zext i32 %37 to i64, !dbg !16127
  %39 = sub nsw i64 %36, %38, !dbg !16128
  call void @llvm.dbg.value(metadata i64 %39, metadata !16065, metadata !DIExpression()), !dbg !16069
  %40 = icmp sgt i64 %39, 0, !dbg !16129
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16129
  %42 = trunc i64 %41 to i32, !dbg !16129
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16069
  ret i32 %44, !dbg !16130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16131 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16133, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.value(metadata i64 %0, metadata !14234, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i32 10000, metadata !14237, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i32 1000, metadata !14238, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i8 1, metadata !14239, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i1 false, metadata !14240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16135
  call void @llvm.dbg.value(metadata i1 false, metadata !14241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16135
  call void @llvm.dbg.value(metadata i8 0, metadata !14242, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i1 false, metadata !14243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16135
  call void @llvm.dbg.value(metadata i1 true, metadata !14244, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16135
  call void @llvm.dbg.value(metadata i64 0, metadata !14245, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i64 0, metadata !14245, metadata !DIExpression()), !dbg !16135
  call void @llvm.dbg.value(metadata i64 %0, metadata !14234, metadata !DIExpression()), !dbg !16135
  %2 = udiv i64 %0, 10, !dbg !16137
  ret i64 %2, !dbg !16141
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16142 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16143, !srcloc !16145
  tail call void @z_impl_k_yield() #24, !dbg !16146
  ret void, !dbg !16147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16152, metadata !DIExpression()), !dbg !16154
  %2 = sext i32 %0 to i64, !dbg !16155
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16156
  call void @llvm.dbg.value(metadata i64 %3, metadata !16153, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16154
  %4 = shl i64 %3, 32, !dbg !16157
  %5 = ashr exact i64 %4, 32, !dbg !16157
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16158
  call void @llvm.dbg.value(metadata i32 %6, metadata !16153, metadata !DIExpression()), !dbg !16154
  %7 = sext i32 %6 to i64, !dbg !16159
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16160
  %9 = trunc i64 %8 to i32, !dbg !16160
  ret i32 %9, !dbg !16161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16162 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16164, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.value(metadata i64 %0, metadata !14234, metadata !DIExpression()), !dbg !16166
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14237, metadata !DIExpression()), !dbg !16166
  call void @llvm.dbg.value(metadata i32 10000, metadata !14238, metadata !DIExpression()), !dbg !16166
  call void @llvm.dbg.value(metadata i8 1, metadata !14239, metadata !DIExpression()), !dbg !16166
  call void @llvm.dbg.value(metadata i1 false, metadata !14240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16166
  call void @llvm.dbg.value(metadata i1 true, metadata !14241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16166
  call void @llvm.dbg.value(metadata i8 0, metadata !14242, metadata !DIExpression()), !dbg !16166
  call void @llvm.dbg.value(metadata i1 false, metadata !14243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16166
  call void @llvm.dbg.value(metadata i1 true, metadata !14244, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16166
  call void @llvm.dbg.value(metadata i64 0, metadata !14245, metadata !DIExpression()), !dbg !16166
  call void @llvm.dbg.value(metadata i64 0, metadata !14245, metadata !DIExpression()), !dbg !16166
  %2 = add i64 %0, 99, !dbg !16168
  call void @llvm.dbg.value(metadata i64 %2, metadata !14234, metadata !DIExpression()), !dbg !16166
  %3 = udiv i64 %2, 100, !dbg !16169
  ret i64 %3, !dbg !16170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16171 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16173, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.value(metadata i64 %0, metadata !14234, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata i32 10000, metadata !14237, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14238, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata i8 1, metadata !14239, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata i1 false, metadata !14240, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16175
  call void @llvm.dbg.value(metadata i1 false, metadata !14241, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16175
  call void @llvm.dbg.value(metadata i8 0, metadata !14242, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata i1 true, metadata !14243, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16175
  call void @llvm.dbg.value(metadata i1 false, metadata !14244, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16175
  call void @llvm.dbg.value(metadata i64 0, metadata !14245, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata i64 0, metadata !14245, metadata !DIExpression()), !dbg !16175
  %2 = mul i64 %0, 100, !dbg !16177
  ret i64 %2, !dbg !16179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16180 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16182, metadata !DIExpression()), !dbg !16183
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16184
  br i1 %2, label %14, label %3, !dbg !16186

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16187
  %5 = icmp slt i32 %4, 0, !dbg !16189
  br i1 %5, label %6, label %10, !dbg !16190

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16191
  %8 = load i8, i8* %7, align 1, !dbg !16191
  %9 = icmp eq i8 %8, 16, !dbg !16194
  br i1 %9, label %10, label %14, !dbg !16195

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16196
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16197
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16198, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %11, metadata !14902, metadata !DIExpression()) #23, !dbg !16202
  %12 = icmp eq i32 %11, 0, !dbg !16203
  br i1 %12, label %13, label %14, !dbg !16204

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16205
  br label %14, !dbg !16207

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16209 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16211, metadata !DIExpression()), !dbg !16212
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16213
  %3 = load i8, i8* %2, align 1, !dbg !16213
  %4 = and i8 %3, 2, !dbg !16214
  %5 = icmp ne i8 %4, 0, !dbg !16215
  ret i1 %5, !dbg !16216
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16217 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16222
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16221, metadata !DIExpression()), !dbg !16223
  ret %struct.k_thread* %1, !dbg !16224
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16225 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16226, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %1, metadata !14902, metadata !DIExpression()) #23, !dbg !16229
  %2 = icmp eq i32 %1, 0, !dbg !16230
  br i1 %2, label %3, label %8, !dbg !16231

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16232
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16233
  %6 = icmp ne i32 %5, 0, !dbg !16231
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16235 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16237, metadata !DIExpression()), !dbg !16239
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !16240
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16242, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16244
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !16244
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !16240
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16245
  br i1 %3, label %5, label %4, !dbg !16246

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16247
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16247
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16247
  unreachable, !dbg !16247

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16242
  call void @llvm.dbg.value(metadata i32 %6, metadata !14186, metadata !DIExpression()) #23, !dbg !16244
  call void @llvm.dbg.value(metadata i32 %6, metadata !14180, metadata !DIExpression()) #23, !dbg !16240
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16248
  call void @llvm.dbg.value(metadata i32 %6, metadata !16238, metadata !DIExpression()), !dbg !16239
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16249
  %8 = load i8, i8* %7, align 4, !dbg !16249
  %9 = and i8 %8, 1, !dbg !16251
  %10 = icmp eq i8 %9, 0, !dbg !16252
  br i1 %10, label %15, label %11, !dbg !16253

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !16254
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16257
  br i1 %12, label %14, label %13, !dbg !16258

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16259
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16259
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16259
  unreachable, !dbg !16259

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14208, metadata !DIExpression()) #23, !dbg !16254
  call void @llvm.dbg.value(metadata i32 %6, metadata !14222, metadata !DIExpression()) #23, !dbg !16260
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16262, !srcloc !14228
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.340, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16263
  unreachable, !dbg !16263

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16267
  %17 = load i8, i8* %16, align 1, !dbg !16267
  %18 = and i8 %17, 8, !dbg !16269
  %19 = icmp eq i8 %18, 0, !dbg !16270
  br i1 %19, label %24, label %20, !dbg !16271

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !16272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !16272
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16275
  br i1 %21, label %23, label %22, !dbg !16276

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16277
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16277
  unreachable, !dbg !16277

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14208, metadata !DIExpression()) #23, !dbg !16272
  call void @llvm.dbg.value(metadata i32 %6, metadata !14222, metadata !DIExpression()) #23, !dbg !16278
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16280, !srcloc !14228
  br label %39, !dbg !16281

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16282
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16283
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16285
  br i1 %26, label %27, label %35, !dbg !16286

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16287, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %28, metadata !14902, metadata !DIExpression()) #23, !dbg !16290
  %29 = icmp eq i32 %28, 0, !dbg !16291
  br i1 %29, label %30, label %35, !dbg !16292

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #23, !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14855, metadata !DIExpression()) #23, !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14859, metadata !DIExpression()) #23, !dbg !16296
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16298
  br i1 %31, label %33, label %32, !dbg !16299

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16300
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16300
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16300
  unreachable, !dbg !16300

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14850, metadata !DIExpression()) #23, !dbg !16293
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16301
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16302
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.341, i32 0, i32 0)) #25, !dbg !16302
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16302
  unreachable, !dbg !16302

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !16306
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !16306
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16308
  br i1 %36, label %38, label %37, !dbg !16309

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16310
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16310
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16310
  unreachable, !dbg !16310

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14208, metadata !DIExpression()) #23, !dbg !16306
  call void @llvm.dbg.value(metadata i32 %6, metadata !14222, metadata !DIExpression()) #23, !dbg !16311
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16313, !srcloc !14228
  br label %39, !dbg !16314

39:                                               ; preds = %38, %23
  ret void, !dbg !16314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16315 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16317, metadata !DIExpression()), !dbg !16318
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16319
  %3 = load i8, i8* %2, align 1, !dbg !16319
  %4 = and i8 %3, 8, !dbg !16321
  %5 = icmp eq i8 %4, 0, !dbg !16322
  br i1 %5, label %6, label %20, !dbg !16323

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16324
  %8 = or i8 %7, 8, !dbg !16324
  store i8 %8, i8* %2, align 1, !dbg !16324
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16326
  br i1 %9, label %10, label %12, !dbg !16328

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14366, metadata !DIExpression()) #23, !dbg !16329
  %11 = and i8 %8, 95, !dbg !16332
  store i8 %11, i8* %2, align 1, !dbg !16332
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14374, metadata !DIExpression()) #23, !dbg !16333
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16335
  br label %12, !dbg !16336

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16337
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16337
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16339
  br i1 %15, label %17, label %16, !dbg !16340

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16341
  br label %17, !dbg !16343

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16344
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16345
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16346
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16347
  br label %20, !dbg !16348

20:                                               ; preds = %17, %1
  ret void, !dbg !16349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16350 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16354, metadata !DIExpression()), !dbg !16356
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.326(%struct._wait_q_t* noundef %0) #24, !dbg !16357
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16355, metadata !DIExpression()), !dbg !16356
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16358
  br i1 %3, label %10, label %4, !dbg !16359

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16360
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16362
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16363, metadata !DIExpression()), !dbg !16369
  call void @llvm.dbg.value(metadata i32 0, metadata !16368, metadata !DIExpression()), !dbg !16369
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16371
  store i32 0, i32* %7, align 4, !dbg !16372
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16373
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.326(%struct._wait_q_t* noundef %0) #24, !dbg !16357
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16355, metadata !DIExpression()), !dbg !16356
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16358
  br i1 %9, label %10, label %4, !dbg !16359, !llvm.loop !16374

10:                                               ; preds = %4, %1
  ret void, !dbg !16376
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16377 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16382, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16381, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !16386
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16388, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !16390
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !16386
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16391
  br i1 %4, label %6, label %5, !dbg !16392

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16393
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16393
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16393
  unreachable, !dbg !16393

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16388
  call void @llvm.dbg.value(metadata i32 %7, metadata !14186, metadata !DIExpression()) #23, !dbg !16390
  call void @llvm.dbg.value(metadata i32 %7, metadata !14180, metadata !DIExpression()) #23, !dbg !16386
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16394
  call void @llvm.dbg.value(metadata i32 %7, metadata !16383, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i32 0, metadata !16384, metadata !DIExpression()), !dbg !16385
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16395
  %9 = load i8, i8* %8, align 1, !dbg !16395
  %10 = and i8 %9, 8, !dbg !16397
  %11 = icmp eq i8 %10, 0, !dbg !16398
  br i1 %11, label %12, label %35, !dbg !16399

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16382, metadata !DIExpression()), !dbg !16385
  %14 = icmp eq i64 %13, 0, !dbg !16400
  br i1 %14, label %35, label %15, !dbg !16402

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16403
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16405
  br i1 %17, label %35, label %18, !dbg !16406

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16407
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16407
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16408
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16409
  br i1 %22, label %35, label %23, !dbg !16410

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16411, !srcloc !14906
  call void @llvm.dbg.value(metadata i32 %24, metadata !14902, metadata !DIExpression()) #23, !dbg !16417
  %25 = icmp eq i32 %24, 0, !dbg !16418
  br i1 %25, label %27, label %26, !dbg !16419

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.344, i32 0, i32 0)) #25, !dbg !16420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.291, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16420
  unreachable, !dbg !16420

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16422
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16423
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16424
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16425
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16426
  call void @llvm.dbg.value(metadata i32 undef, metadata !14850, metadata !DIExpression()) #23, !dbg !16427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14855, metadata !DIExpression()) #23, !dbg !16427
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14859, metadata !DIExpression()) #23, !dbg !16429
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16431
  br i1 %31, label %33, label %32, !dbg !16432

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16433
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16433
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 225) #25, !dbg !16433
  unreachable, !dbg !16433

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14850, metadata !DIExpression()) #23, !dbg !16427
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16434
  call void @llvm.dbg.value(metadata i32 %34, metadata !16384, metadata !DIExpression()), !dbg !16385
  br label %40, !dbg !16435

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16436
  call void @llvm.dbg.value(metadata i32 %36, metadata !16384, metadata !DIExpression()), !dbg !16385
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !16437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !16437
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16439
  br i1 %37, label %39, label %38, !dbg !16440

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16441
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16441
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16441
  unreachable, !dbg !16441

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14208, metadata !DIExpression()) #23, !dbg !16437
  call void @llvm.dbg.value(metadata i32 %7, metadata !14222, metadata !DIExpression()) #23, !dbg !16442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16444, !srcloc !14228
  br label %40, !dbg !16445

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16385
  ret i32 %41, !dbg !16446
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16447 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16451, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i32 %1, metadata !16452, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i8* %2, metadata !16453, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i8 0, metadata !16455, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i32 0, metadata !16456, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14174, metadata !DIExpression()) #23, !dbg !16461
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16463, !srcloc !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()) #23, !dbg !16465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !16461
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16466
  br i1 %5, label %7, label %6, !dbg !16467

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.285, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16468
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.287, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16468
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 148) #25, !dbg !16468
  unreachable, !dbg !16468

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14186, metadata !DIExpression()) #23, !dbg !16465
  call void @llvm.dbg.value(metadata i32 undef, metadata !14180, metadata !DIExpression()) #23, !dbg !16461
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16469
  call void @llvm.dbg.value(metadata i32 undef, metadata !16458, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i8 poison, metadata !16455, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i32 undef, metadata !16456, metadata !DIExpression()), !dbg !16460
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16470
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16454, metadata !DIExpression()), !dbg !16459
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16473
  br i1 %10, label %15, label %11, !dbg !16475

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16476, metadata !DIExpression()), !dbg !16484
  call void @llvm.dbg.value(metadata i32 %1, metadata !16482, metadata !DIExpression()), !dbg !16484
  call void @llvm.dbg.value(metadata i8* %2, metadata !16483, metadata !DIExpression()), !dbg !16484
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16363, metadata !DIExpression()), !dbg !16487
  call void @llvm.dbg.value(metadata i32 %1, metadata !16368, metadata !DIExpression()), !dbg !16487
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16489
  store i32 %1, i32* %12, align 4, !dbg !16490
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16491
  store i8* %2, i8** %13, align 4, !dbg !16492
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16493
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16494
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16495
  call void @llvm.dbg.value(metadata i8 1, metadata !16455, metadata !DIExpression()), !dbg !16459
  br label %15, !dbg !16496

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16455, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !16497
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14213, metadata !DIExpression()) #23, !dbg !16497
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16499
  br i1 %16, label %18, label %17, !dbg !16500

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16501
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.289, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16501
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.286, i32 0, i32 0), i32 noundef 194) #25, !dbg !16501
  unreachable, !dbg !16501

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16459
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16463
  call void @llvm.dbg.value(metadata i32 %20, metadata !14186, metadata !DIExpression()) #23, !dbg !16465
  call void @llvm.dbg.value(metadata i32 %20, metadata !14180, metadata !DIExpression()) #23, !dbg !16461
  call void @llvm.dbg.value(metadata i32 %20, metadata !16458, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.value(metadata i32 undef, metadata !14208, metadata !DIExpression()) #23, !dbg !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !14222, metadata !DIExpression()) #23, !dbg !16502
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16504, !srcloc !14228
  call void @llvm.dbg.value(metadata i8 poison, metadata !16455, metadata !DIExpression()), !dbg !16459
  call void @llvm.dbg.value(metadata i32 undef, metadata !16456, metadata !DIExpression()), !dbg !16460
  ret i1 %19, !dbg !16505
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16506 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16512, metadata !DIExpression()), !dbg !16517
  call void @llvm.dbg.value(metadata i64 undef, metadata !16514, metadata !DIExpression()), !dbg !16517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16511, metadata !DIExpression()), !dbg !16517
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16513, metadata !DIExpression()), !dbg !16517
  call void @llvm.dbg.value(metadata i8** %4, metadata !16515, metadata !DIExpression()), !dbg !16517
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16518
  call void @llvm.dbg.value(metadata i32 %6, metadata !16516, metadata !DIExpression()), !dbg !16517
  %7 = icmp eq i8** %4, null, !dbg !16519
  br i1 %7, label %12, label %8, !dbg !16521

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16522
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16524
  %11 = load i8*, i8** %10, align 4, !dbg !16524
  store i8* %11, i8** %4, align 4, !dbg !16525
  br label %12, !dbg !16526

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !16528 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16541, metadata !DIExpression()), !dbg !16542
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16543
  tail call fastcc void @z_waitq_init.345(%struct._wait_q_t* noundef %2) #24, !dbg !16544
  ret i32 0, !dbg !16545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.345(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16546 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16551, metadata !DIExpression()), !dbg !16552
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16553
  tail call fastcc void @sys_dlist_init.346(%struct._dnode* noundef %2) #24, !dbg !16554
  ret void, !dbg !16555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.346(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16556 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16561, metadata !DIExpression()), !dbg !16562
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16563
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16564
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16565
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16566
  ret void, !dbg !16567
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16568 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16570, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.349, metadata !16658, metadata !DIExpression()) #23, !dbg !16665
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16667, !srcloc !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !16670, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 undef, metadata !16671, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 undef, metadata !16664, metadata !DIExpression()) #23, !dbg !16665
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16675
  br i1 %3, label %5, label %4, !dbg !16678

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16679
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16679
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16679
  unreachable, !dbg !16679

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16667
  call void @llvm.dbg.value(metadata i32 %6, metadata !16670, metadata !DIExpression()) #23, !dbg !16674
  call void @llvm.dbg.value(metadata i32 %6, metadata !16664, metadata !DIExpression()) #23, !dbg !16665
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16681
  call void @llvm.dbg.value(metadata i32 %6, metadata !16571, metadata !DIExpression()), !dbg !16657
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16682
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !16683
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16576, metadata !DIExpression()), !dbg !16657
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16684
  br i1 %9, label %13, label %10, !dbg !16686

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16687, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.value(metadata i32 0, metadata !16692, metadata !DIExpression()), !dbg !16693
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !16696
  store i32 0, i32* %11, align 4, !dbg !16697
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !16698
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16699
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.349, [1 x i32] %12) #25, !dbg !16699
  br label %17, !dbg !16700

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16701, metadata !DIExpression()) #23, !dbg !16707
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.349, metadata !16706, metadata !DIExpression()) #23, !dbg !16707
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16710
  br i1 %14, label %16, label %15, !dbg !16713

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !16714
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 194) #25, !dbg !16714
  unreachable, !dbg !16714

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !16701, metadata !DIExpression()) #23, !dbg !16707
  call void @llvm.dbg.value(metadata i32 %6, metadata !16716, metadata !DIExpression()) #23, !dbg !16719
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16721, !srcloc !16722
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !16723
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16724 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16726, metadata !DIExpression()), !dbg !16730
  call void @llvm.dbg.value(metadata i32 0, metadata !16729, metadata !DIExpression()), !dbg !16730
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.349, metadata !16658, metadata !DIExpression()) #23, !dbg !16731
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16733, !srcloc !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !16670, metadata !DIExpression()) #23, !dbg !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16671, metadata !DIExpression()) #23, !dbg !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16664, metadata !DIExpression()) #23, !dbg !16731
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16736
  br i1 %3, label %5, label %4, !dbg !16737

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16738
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16738
  unreachable, !dbg !16738

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16670, metadata !DIExpression()) #23, !dbg !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16664, metadata !DIExpression()) #23, !dbg !16731
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16728, metadata !DIExpression()), !dbg !16730
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !16729, metadata !DIExpression()), !dbg !16730
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16740
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16727, metadata !DIExpression()), !dbg !16730
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16741
  br i1 %8, label %16, label %9, !dbg !16742

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !16729, metadata !DIExpression()), !dbg !16730
  %12 = add nuw nsw i32 %11, 1, !dbg !16743
  call void @llvm.dbg.value(metadata i32 %12, metadata !16729, metadata !DIExpression()), !dbg !16730
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16687, metadata !DIExpression()), !dbg !16745
  call void @llvm.dbg.value(metadata i32 0, metadata !16692, metadata !DIExpression()), !dbg !16745
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !16747
  store i32 0, i32* %13, align 4, !dbg !16748
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !16749
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16740
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16727, metadata !DIExpression()), !dbg !16730
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16741
  br i1 %15, label %16, label %9, !dbg !16742, !llvm.loop !16750

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !16730
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !16733
  call void @llvm.dbg.value(metadata i32 %18, metadata !16670, metadata !DIExpression()) #23, !dbg !16735
  call void @llvm.dbg.value(metadata i32 %18, metadata !16664, metadata !DIExpression()) #23, !dbg !16731
  call void @llvm.dbg.value(metadata i32 %18, metadata !16728, metadata !DIExpression()), !dbg !16730
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !16752
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.349, [1 x i32] %19) #25, !dbg !16752
  ret i32 %17, !dbg !16753
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16754 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16771, metadata !DIExpression()), !dbg !16774
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16769, metadata !DIExpression()), !dbg !16774
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !16770, metadata !DIExpression()), !dbg !16774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.349, metadata !16658, metadata !DIExpression()) #23, !dbg !16775
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16777, !srcloc !16673
  call void @llvm.dbg.value(metadata i32 undef, metadata !16670, metadata !DIExpression()) #23, !dbg !16779
  call void @llvm.dbg.value(metadata i32 undef, metadata !16671, metadata !DIExpression()) #23, !dbg !16779
  call void @llvm.dbg.value(metadata i32 undef, metadata !16664, metadata !DIExpression()) #23, !dbg !16775
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16780
  br i1 %5, label %7, label %6, !dbg !16781

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 148) #25, !dbg !16782
  unreachable, !dbg !16782

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16777
  call void @llvm.dbg.value(metadata i32 %8, metadata !16670, metadata !DIExpression()) #23, !dbg !16779
  call void @llvm.dbg.value(metadata i32 %8, metadata !16664, metadata !DIExpression()) #23, !dbg !16775
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.349) #25, !dbg !16783
  call void @llvm.dbg.value(metadata i32 %8, metadata !16772, metadata !DIExpression()), !dbg !16774
  tail call fastcc void @k_mutex_unlock.358(%struct.k_mutex* noundef %1) #24, !dbg !16784
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16785
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16786
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.349, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !16786
  call void @llvm.dbg.value(metadata i32 %11, metadata !16773, metadata !DIExpression()), !dbg !16774
  tail call fastcc void @k_mutex_lock.359(%struct.k_mutex* noundef %1) #24, !dbg !16787
  ret i32 %11, !dbg !16788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.358(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16789 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16793, metadata !DIExpression()), !dbg !16794
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16795, !srcloc !16797
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !16798
  ret void, !dbg !16799
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.359(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16800 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16805, metadata !DIExpression()), !dbg !16806
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16804, metadata !DIExpression()), !dbg !16806
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16807, !srcloc !16809
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !16810
  ret void, !dbg !16811
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16812 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16814
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16815
  ret void, !dbg !16816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16817 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16827, metadata !DIExpression()), !dbg !16844
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16825, metadata !DIExpression()), !dbg !16844
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16826, metadata !DIExpression()), !dbg !16844
  %5 = icmp eq i64 %4, -1, !dbg !16845
  br i1 %5, label %63, label %6, !dbg !16847

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16848
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.364(%struct._dnode* noundef %7) #24, !dbg !16848
  br i1 %8, label %9, label %10, !dbg !16851

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.367, i32 0, i32 0), i32 noundef 99) #25, !dbg !16852
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.368, i32 0, i32 0)) #25, !dbg !16852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.367, i32 0, i32 0), i32 noundef 99) #25, !dbg !16852
  unreachable, !dbg !16852

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16854
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16855
  call void @llvm.dbg.value(metadata i32 0, metadata !16828, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !16864
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16866, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !16873
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !16873
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !16864
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16874
  br i1 %13, label %15, label %14, !dbg !16877

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !16878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.371, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !16878
  unreachable, !dbg !16878

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16866
  call void @llvm.dbg.value(metadata i32 %16, metadata !16869, metadata !DIExpression()) #23, !dbg !16873
  call void @llvm.dbg.value(metadata i32 %16, metadata !16863, metadata !DIExpression()) #23, !dbg !16864
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16880
  call void @llvm.dbg.value(metadata i32 %16, metadata !16834, metadata !DIExpression()), !dbg !16856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16828, metadata !DIExpression()), !dbg !16856
  %17 = icmp slt i64 %4, -1, !dbg !16881
  br i1 %17, label %18, label %24, !dbg !16882

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16883
  %20 = add i64 %4, %19, !dbg !16884
  %21 = sub i64 -2, %20, !dbg !16884
  call void @llvm.dbg.value(metadata i64 %21, metadata !16838, metadata !DIExpression()), !dbg !16885
  %22 = icmp sgt i64 %21, 1, !dbg !16886
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16886
  br label %29, !dbg !16887

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16888
  %26 = tail call fastcc i32 @elapsed.372() #24, !dbg !16890
  %27 = sext i32 %26 to i64, !dbg !16890
  %28 = add nsw i64 %25, %27, !dbg !16891
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16892
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16893
  store i64 %30, i64* %31, align 8, !dbg !16894
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16895
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16835, metadata !DIExpression()), !dbg !16897
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16898
  br i1 %33, label %48, label %34, !dbg !16898

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16899
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16835, metadata !DIExpression()), !dbg !16897
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16903
  %38 = load i64, i64* %37, align 8, !dbg !16903
  %39 = icmp slt i64 %35, %38, !dbg !16904
  br i1 %39, label %40, label %44, !dbg !16905

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16903
  %42 = sub nsw i64 %38, %35, !dbg !16906
  store i64 %42, i64* %41, align 8, !dbg !16906
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16908
  tail call fastcc void @sys_dlist_insert.373(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16909
  br label %49, !dbg !16910

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16911
  store i64 %45, i64* %31, align 8, !dbg !16911
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16912
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16835, metadata !DIExpression()), !dbg !16897
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16898
  br i1 %47, label %48, label %34, !dbg !16898, !llvm.loop !16913

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.374(%struct._dnode* noundef nonnull %7) #24, !dbg !16915
  br label %49, !dbg !16918

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16919
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16920
  br i1 %51, label %52, label %59, !dbg !16921

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16922
  call void @llvm.dbg.value(metadata i32 %53, metadata !16841, metadata !DIExpression()), !dbg !16923
  %54 = icmp ne i32 %53, 0, !dbg !16924
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16926
  br i1 %57, label %59, label %58, !dbg !16926

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16927
  br label %59, !dbg !16929

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !16936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !16936
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16938
  br i1 %60, label %62, label %61, !dbg !16941

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !16942
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.376, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !16942
  unreachable, !dbg !16942

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16930, metadata !DIExpression()) #23, !dbg !16936
  call void @llvm.dbg.value(metadata i32 %16, metadata !16944, metadata !DIExpression()) #23, !dbg !16947
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16949, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 undef, metadata !16828, metadata !DIExpression()), !dbg !16856
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.364(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16952 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16958, metadata !DIExpression()), !dbg !16959
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16960
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16960
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16961
  ret i1 %4, !dbg !16962
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.372() unnamed_addr #1 !dbg !16963 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16966
  %2 = icmp eq i32 %1, 0, !dbg !16967
  br i1 %2, label %3, label %5, !dbg !16966

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16968
  br label %5, !dbg !16966

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16966
  ret i32 %6, !dbg !16969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16970 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.379() #24, !dbg !16976
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16974, metadata !DIExpression()), !dbg !16977
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16978
  ret %struct._timeout* %2, !dbg !16979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.373(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16980 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16984, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16985, metadata !DIExpression()), !dbg !16988
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16989
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16989
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16986, metadata !DIExpression()), !dbg !16988
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16990
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16991
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16992
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16993
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16994
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16995
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16996
  ret void, !dbg !16997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16998 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17002, metadata !DIExpression()), !dbg !17004
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17005
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.377(%struct._dnode* noundef %2) #24, !dbg !17006
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17003, metadata !DIExpression()), !dbg !17004
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17007
  ret %struct._timeout* %4, !dbg !17008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.374(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17009 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17014, metadata !DIExpression()), !dbg !17017
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17015, metadata !DIExpression()), !dbg !17017
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17018
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17016, metadata !DIExpression()), !dbg !17017
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17019
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17020
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17021
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17022
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17023
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17024
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17025
  ret void, !dbg !17026
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17027 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17032
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17029, metadata !DIExpression()), !dbg !17033
  %2 = tail call fastcc i32 @elapsed.372() #24, !dbg !17034
  call void @llvm.dbg.value(metadata i32 %2, metadata !17030, metadata !DIExpression()), !dbg !17033
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17035
  br i1 %3, label %14, label %4, !dbg !17037

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17038
  %6 = load i64, i64* %5, align 8, !dbg !17038
  %7 = sext i32 %2 to i64, !dbg !17039
  %8 = sub nsw i64 %6, %7, !dbg !17040
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17041
  br i1 %9, label %14, label %10, !dbg !17042

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17043
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17043
  %13 = trunc i64 %12 to i32, !dbg !17043
  call void @llvm.dbg.value(metadata i32 %13, metadata !17031, metadata !DIExpression()), !dbg !17033
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17045
  call void @llvm.dbg.value(metadata i32 %15, metadata !17031, metadata !DIExpression()), !dbg !17033
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17046
  %17 = icmp ne i32 %16, 0, !dbg !17048
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17049
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17049
  call void @llvm.dbg.value(metadata i32 %20, metadata !17031, metadata !DIExpression()), !dbg !17033
  ret i32 %20, !dbg !17050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.377(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17051 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17055, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17056, metadata !DIExpression()), !dbg !17057
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17058
  br i1 %2, label %5, label %3, !dbg !17059

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.378(%struct._dnode* noundef nonnull %0) #24, !dbg !17060
  br label %5, !dbg !17059

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17059
  ret %struct._dnode* %6, !dbg !17061
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.378(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17062 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17064, metadata !DIExpression()), !dbg !17066
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17065, metadata !DIExpression()), !dbg !17066
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17067
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17068
  br i1 %3, label %7, label %4, !dbg !17069

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17070
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17070
  br label %7, !dbg !17069

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17069
  ret %struct._dnode* %8, !dbg !17071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.379() unnamed_addr #8 !dbg !17072 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17076, metadata !DIExpression()), !dbg !17077
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.380() #24, !dbg !17078
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17078
  ret %struct._dnode* %3, !dbg !17079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.380() unnamed_addr #8 !dbg !17080 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17084, metadata !DIExpression()), !dbg !17085
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17086
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17087
  ret i1 %2, !dbg !17088
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17089 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17093, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 -22, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 0, metadata !17095, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17100
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17102, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17100
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17105
  br i1 %3, label %5, label %4, !dbg !17106

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.371, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17107
  unreachable, !dbg !17107

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17100
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17108
  call void @llvm.dbg.value(metadata i32 undef, metadata !17097, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata i32 -22, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !17095, metadata !DIExpression()), !dbg !17099
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17094, metadata !DIExpression()), !dbg !17098
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.364(%struct._dnode* noundef %6) #24, !dbg !17109
  br i1 %7, label %8, label %9, !dbg !17113

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17114
  call void @llvm.dbg.value(metadata i32 0, metadata !17094, metadata !DIExpression()), !dbg !17098
  br label %9, !dbg !17116

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17098
  call void @llvm.dbg.value(metadata i32 %10, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17117
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17119
  br i1 %11, label %13, label %12, !dbg !17120

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.376, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17121
  unreachable, !dbg !17121

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17102
  call void @llvm.dbg.value(metadata i32 %14, metadata !16869, metadata !DIExpression()) #23, !dbg !17104
  call void @llvm.dbg.value(metadata i32 %14, metadata !16863, metadata !DIExpression()) #23, !dbg !17100
  call void @llvm.dbg.value(metadata i32 %14, metadata !17097, metadata !DIExpression()), !dbg !17099
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17117
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17124, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 %10, metadata !17094, metadata !DIExpression()), !dbg !17098
  call void @llvm.dbg.value(metadata i32 undef, metadata !17095, metadata !DIExpression()), !dbg !17099
  ret i32 %10, !dbg !17125
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17126 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17128, metadata !DIExpression()), !dbg !17129
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17130
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17132
  br i1 %3, label %10, label %4, !dbg !17133

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17134
  %6 = load i64, i64* %5, align 8, !dbg !17134
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17136
  %8 = load i64, i64* %7, align 8, !dbg !17137
  %9 = add nsw i64 %8, %6, !dbg !17137
  store i64 %9, i64* %7, align 8, !dbg !17137
  br label %10, !dbg !17138

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17139
  tail call fastcc void @sys_dlist_remove.383(%struct._dnode* noundef %11) #24, !dbg !17140
  ret void, !dbg !17141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.383(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17142 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17146, metadata !DIExpression()), !dbg !17149
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17150
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17150
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17147, metadata !DIExpression()), !dbg !17149
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17151
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17151
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17148, metadata !DIExpression()), !dbg !17149
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17152
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17153
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17154
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17155
  tail call fastcc void @sys_dnode_init.384(%struct._dnode* noundef %0) #24, !dbg !17156
  ret void, !dbg !17157
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.384(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17158 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17160, metadata !DIExpression()), !dbg !17161
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17162
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17163
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17164
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17165
  ret void, !dbg !17166
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17167 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17173, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i64 0, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 0, metadata !17175, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17180
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17182, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17180
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17185
  br i1 %3, label %5, label %4, !dbg !17186

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17187
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.371, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17187
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17187
  unreachable, !dbg !17187

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17180
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17188
  call void @llvm.dbg.value(metadata i32 undef, metadata !17177, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i64 0, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !17175, metadata !DIExpression()), !dbg !17179
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17189
  call void @llvm.dbg.value(metadata i64 %6, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17192
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17192
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17194
  br i1 %7, label %9, label %8, !dbg !17195

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17196
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.376, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17196
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17196
  unreachable, !dbg !17196

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17182
  call void @llvm.dbg.value(metadata i32 %10, metadata !16869, metadata !DIExpression()) #23, !dbg !17184
  call void @llvm.dbg.value(metadata i32 %10, metadata !16863, metadata !DIExpression()) #23, !dbg !17180
  call void @llvm.dbg.value(metadata i32 %10, metadata !17177, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17192
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17199, !srcloc !16950
  call void @llvm.dbg.value(metadata i64 %6, metadata !17174, metadata !DIExpression()), !dbg !17178
  call void @llvm.dbg.value(metadata i32 undef, metadata !17175, metadata !DIExpression()), !dbg !17179
  ret i64 %6, !dbg !17200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17201 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17203, metadata !DIExpression()), !dbg !17207
  call void @llvm.dbg.value(metadata i64 0, metadata !17204, metadata !DIExpression()), !dbg !17207
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.385(%struct._timeout* noundef %0) #24, !dbg !17208
  br i1 %2, label %21, label %3, !dbg !17210

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17211
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17205, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.value(metadata i64 0, metadata !17204, metadata !DIExpression()), !dbg !17207
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17213
  br i1 %5, label %16, label %6, !dbg !17215

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17205, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.value(metadata i64 %8, metadata !17204, metadata !DIExpression()), !dbg !17207
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17216
  %10 = load i64, i64* %9, align 8, !dbg !17216
  %11 = add nsw i64 %10, %8, !dbg !17218
  call void @llvm.dbg.value(metadata i64 %11, metadata !17204, metadata !DIExpression()), !dbg !17207
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17219
  br i1 %12, label %16, label %13, !dbg !17221

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17222
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17205, metadata !DIExpression()), !dbg !17212
  call void @llvm.dbg.value(metadata i64 %11, metadata !17204, metadata !DIExpression()), !dbg !17207
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17213
  br i1 %15, label %16, label %6, !dbg !17215, !llvm.loop !17223

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17207
  call void @llvm.dbg.value(metadata i64 %17, metadata !17204, metadata !DIExpression()), !dbg !17207
  %18 = tail call fastcc i32 @elapsed.372() #24, !dbg !17225
  %19 = sext i32 %18 to i64, !dbg !17225
  %20 = sub nsw i64 %17, %19, !dbg !17226
  br label %21, !dbg !17227

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17207
  ret i64 %22, !dbg !17228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.385(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17229 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17233, metadata !DIExpression()), !dbg !17234
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17235
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.364(%struct._dnode* noundef %2) #24, !dbg !17236
  %4 = xor i1 %3, true, !dbg !17237
  ret i1 %4, !dbg !17238
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17239 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17241, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata i64 0, metadata !17242, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata i32 0, metadata !17243, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17248
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17250, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17248
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17253
  br i1 %3, label %5, label %4, !dbg !17254

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17255
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.371, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17255
  unreachable, !dbg !17255

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17248
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17245, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata i64 0, metadata !17242, metadata !DIExpression()), !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !17243, metadata !DIExpression()), !dbg !17247
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17257
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17260
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17242, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17261
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17263
  br i1 %8, label %10, label %9, !dbg !17264

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.376, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17265
  unreachable, !dbg !17265

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17250
  call void @llvm.dbg.value(metadata i32 %11, metadata !16869, metadata !DIExpression()) #23, !dbg !17252
  call void @llvm.dbg.value(metadata i32 %11, metadata !16863, metadata !DIExpression()) #23, !dbg !17248
  call void @llvm.dbg.value(metadata i32 %11, metadata !17245, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17242, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17246
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17261
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17266
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17268, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 undef, metadata !17243, metadata !DIExpression()), !dbg !17247
  %12 = add i64 %7, %6, !dbg !17269
  ret i64 %12, !dbg !17270
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17271 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 0, metadata !17274, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17279
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17281, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17279
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17284
  br i1 %2, label %4, label %3, !dbg !17285

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.371, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17286
  unreachable, !dbg !17286

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17279
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17287
  call void @llvm.dbg.value(metadata i32 undef, metadata !17276, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.value(metadata i32 -1, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17274, metadata !DIExpression()), !dbg !17278
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17288
  call void @llvm.dbg.value(metadata i32 %5, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17291
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17291
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17293
  br i1 %6, label %8, label %7, !dbg !17294

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17295
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.376, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17295
  unreachable, !dbg !17295

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17281
  call void @llvm.dbg.value(metadata i32 %9, metadata !16869, metadata !DIExpression()) #23, !dbg !17283
  call void @llvm.dbg.value(metadata i32 %9, metadata !16863, metadata !DIExpression()) #23, !dbg !17279
  call void @llvm.dbg.value(metadata i32 %9, metadata !17276, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17291
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17298, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 %5, metadata !17273, metadata !DIExpression()), !dbg !17277
  call void @llvm.dbg.value(metadata i32 undef, metadata !17274, metadata !DIExpression()), !dbg !17278
  ret i32 %5, !dbg !17299
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17302, metadata !DIExpression()), !dbg !17312
  call void @llvm.dbg.value(metadata i1 %1, metadata !17303, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17312
  call void @llvm.dbg.value(metadata i32 0, metadata !17304, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17314
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17316, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17314
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17319
  br i1 %4, label %6, label %5, !dbg !17320

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.371, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17321
  unreachable, !dbg !17321

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17318
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17314
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17322
  call void @llvm.dbg.value(metadata i32 undef, metadata !17306, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !17304, metadata !DIExpression()), !dbg !17313
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17323
  call void @llvm.dbg.value(metadata i32 %7, metadata !17307, metadata !DIExpression()), !dbg !17324
  call void @llvm.dbg.value(metadata i1 undef, metadata !17310, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17324
  %8 = icmp slt i32 %7, 2, !dbg !17325
  call void @llvm.dbg.value(metadata i1 %8, metadata !17311, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17324
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17326
  call void @llvm.dbg.value(metadata i1 %9, metadata !17310, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17324
  br i1 %10, label %14, label %11, !dbg !17326

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17328
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17328
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17330
  br label %14, !dbg !17331

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17332
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17334
  br i1 %15, label %17, label %16, !dbg !17335

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.376, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17336
  unreachable, !dbg !17336

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17316
  call void @llvm.dbg.value(metadata i32 %18, metadata !16869, metadata !DIExpression()) #23, !dbg !17318
  call void @llvm.dbg.value(metadata i32 %18, metadata !16863, metadata !DIExpression()) #23, !dbg !17314
  call void @llvm.dbg.value(metadata i32 %18, metadata !17306, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17332
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17339, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 1, metadata !17304, metadata !DIExpression()), !dbg !17313
  call void @llvm.dbg.value(metadata i32 undef, metadata !17304, metadata !DIExpression()), !dbg !17313
  ret void, !dbg !17340
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17341 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17345, metadata !DIExpression()), !dbg !17350
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17352
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17354, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17352
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17357
  br i1 %3, label %5, label %4, !dbg !17358

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17359
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.371, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17359
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17359
  unreachable, !dbg !17359

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17356
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17352
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17360
  call void @llvm.dbg.value(metadata i32 undef, metadata !17346, metadata !DIExpression()), !dbg !17350
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !17346, metadata !DIExpression()), !dbg !17350
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17361
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17362
  br i1 %7, label %37, label %8, !dbg !17363

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17350
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17364
  %14 = load i64, i64* %13, align 8, !dbg !17364
  %15 = sext i32 %11 to i64, !dbg !17365
  %16 = icmp sgt i64 %14, %15, !dbg !17366
  br i1 %16, label %35, label %17, !dbg !17367

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17347, metadata !DIExpression()), !dbg !17368
  %18 = trunc i64 %14 to i32, !dbg !17369
  call void @llvm.dbg.value(metadata i32 %18, metadata !17349, metadata !DIExpression()), !dbg !17368
  %19 = sext i32 %18 to i64, !dbg !17370
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17371
  %21 = add i64 %20, %19, !dbg !17371
  store i64 %21, i64* @curr_tick, align 8, !dbg !17371
  store i64 0, i64* %13, align 8, !dbg !17372
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17373
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17374
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17374
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17376
  br i1 %22, label %24, label %23, !dbg !17377

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17378
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.376, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17378
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17378
  unreachable, !dbg !17378

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16930, metadata !DIExpression()) #23, !dbg !17374
  call void @llvm.dbg.value(metadata i32 %12, metadata !16944, metadata !DIExpression()) #23, !dbg !17379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17381, !srcloc !16950
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17382
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17382
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17384
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17386, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17384
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17389
  br i1 %28, label %30, label %29, !dbg !17390

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17391
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.371, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17391
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17391
  unreachable, !dbg !17391

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17388
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17384
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17392
  call void @llvm.dbg.value(metadata i32 undef, metadata !17346, metadata !DIExpression()), !dbg !17350
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17393
  %32 = sub nsw i32 %31, %18, !dbg !17393
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !17346, metadata !DIExpression()), !dbg !17350
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17361
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17362
  br i1 %34, label %37, label %8, !dbg !17363, !llvm.loop !17394

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17396
  store i64 %36, i64* %13, align 8, !dbg !17396
  br label %41, !dbg !17399

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17350
  %40 = sext i32 %39 to i64, !dbg !17400
  br label %41, !dbg !17400

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17400
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17401
  %45 = add i64 %44, %42, !dbg !17401
  store i64 %45, i64* @curr_tick, align 8, !dbg !17401
  store i32 0, i32* @announce_remaining, align 4, !dbg !17402
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17403
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17404
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17405
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17407
  br i1 %47, label %49, label %48, !dbg !17408

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17409
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.376, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17409
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17409
  unreachable, !dbg !17409

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17350
  call void @llvm.dbg.value(metadata i32 %50, metadata !16930, metadata !DIExpression()) #23, !dbg !17405
  call void @llvm.dbg.value(metadata i32 %50, metadata !16944, metadata !DIExpression()) #23, !dbg !17410
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17412, !srcloc !16950
  ret void, !dbg !17413
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17414 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17418, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i32 0, metadata !17419, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16857, metadata !DIExpression()) #23, !dbg !17424
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17426, !srcloc !16872
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16870, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17424
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17429
  br i1 %2, label %4, label %3, !dbg !17430

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.369, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17431
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.371, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17431
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 148) #25, !dbg !17431
  unreachable, !dbg !17431

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16869, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 undef, metadata !16863, metadata !DIExpression()) #23, !dbg !17424
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17432
  call void @llvm.dbg.value(metadata i32 undef, metadata !17421, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata i64 0, metadata !17418, metadata !DIExpression()), !dbg !17422
  call void @llvm.dbg.value(metadata i32 undef, metadata !17419, metadata !DIExpression()), !dbg !17423
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17433
  %6 = tail call fastcc i32 @elapsed.372() #24, !dbg !17436
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17418, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17422
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17437
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16935, metadata !DIExpression()) #23, !dbg !17437
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17439
  br i1 %7, label %9, label %8, !dbg !17440

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.365, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.375, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17441
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.376, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17441
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.370, i32 0, i32 0), i32 noundef 194) #25, !dbg !17441
  unreachable, !dbg !17441

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17426
  call void @llvm.dbg.value(metadata i32 %10, metadata !16869, metadata !DIExpression()) #23, !dbg !17428
  call void @llvm.dbg.value(metadata i32 %10, metadata !16863, metadata !DIExpression()) #23, !dbg !17424
  call void @llvm.dbg.value(metadata i32 %10, metadata !17421, metadata !DIExpression()), !dbg !17423
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17418, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17422
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17418, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17422
  call void @llvm.dbg.value(metadata i32 undef, metadata !16930, metadata !DIExpression()) #23, !dbg !17437
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()) #23, !dbg !17442
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17444, !srcloc !16950
  call void @llvm.dbg.value(metadata i32 undef, metadata !17419, metadata !DIExpression()), !dbg !17423
  %11 = sext i32 %6 to i64, !dbg !17436
  %12 = add i64 %5, %11, !dbg !17445
  ret i64 %12, !dbg !17446
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17447 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17448
  %2 = trunc i64 %1 to i32, !dbg !17449
  ret i32 %2, !dbg !17450
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17451 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17452
  ret i64 %1, !dbg !17453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17456, metadata !DIExpression()), !dbg !17463
  %2 = icmp eq i32 %0, 0, !dbg !17464
  br i1 %2, label %10, label %3, !dbg !17466

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17467
  call void @llvm.dbg.value(metadata i32 %4, metadata !17457, metadata !DIExpression()), !dbg !17463
  %5 = shl i32 %0, 5, !dbg !17468
  call void @llvm.dbg.value(metadata i32 %5, metadata !17458, metadata !DIExpression()), !dbg !17463
  br label %6, !dbg !17469

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17470
  call void @llvm.dbg.value(metadata i32 %7, metadata !17459, metadata !DIExpression()), !dbg !17471
  %8 = sub i32 %7, %4, !dbg !17472
  %9 = icmp ult i32 %8, %5, !dbg !17474
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17476 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17477
  ret i32 %1, !dbg !17478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17479 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17481
  ret i32 %1, !dbg !17482
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17483 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17487, metadata !DIExpression()), !dbg !17489
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17490

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17491
  br label %14, !dbg !17495

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17488, metadata !DIExpression()), !dbg !17489
  %6 = icmp slt i64 %2, -1, !dbg !17496
  br i1 %6, label %7, label %9, !dbg !17499

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17500
  br label %14, !dbg !17501

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17503
  %11 = icmp ugt i64 %2, 1, !dbg !17504
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17504
  %13 = add nsw i64 %10, %12, !dbg !17505
  br label %14, !dbg !17506

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17507
  ret i64 %15, !dbg !17508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17509 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.394, i32 0, i32 0)) #25, !dbg !17511
  ret void, !dbg !17512
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!875, !2, !2524, !27, !271, !297, !2526, !2528, !2562, !2564, !307, !371, !2566, !2569, !2580, !2626, !2628, !2656, !2684, !2727, !2799, !2844, !400, !543, !2872, !579, !589, !614, !722, !903, !2877, !1019, !1085, !1354, !1594, !2898, !1709, !1796, !2900, !2971, !3020, !1831, !3023, !1838, !2211, !3041, !2231, !2342, !2460, !3043, !2485, !3046}
!llvm.ident = !{!3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048, !3048}
!llvm.module.flags = !{!3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "count_mutex", scope: !27, file: !116, line: 16, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !143, !154}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "count_threshold_cv", scope: !27, file: !116, line: 17, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/condvar/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "count", scope: !27, file: !116, line: 14, type: !109, isLocal: true, isDefinition: true)
!143 = !DIGlobalVariableExpression(var: !144, expr: !DIExpression())
!144 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 21, type: !145, isLocal: false, isDefinition: true, align: 512)
!145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 26112, elements: !151)
!146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !148)
!147 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!148 = !{!149}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !146, file: !147, line: 48, baseType: !150, size: 8)
!150 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!151 = !{!152, !153}
!152 = !DISubrange(count: 3)
!153 = !DISubrange(count: 1088)
!154 = !DIGlobalVariableExpression(var: !155, expr: !DIExpression())
!155 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 23, type: !156, isLocal: true, isDefinition: true)
!156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 3840, elements: !261)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !159)
!158 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!159 = !{!160, !209, !222, !223, !224, !228, !229, !237, !256}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !157, file: !158, line: 247, baseType: !161, size: 384)
!161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !162)
!162 = !{!163, !177, !179, !182, !183, !196, !197, !198}
!163 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 60, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 60, size: 64, elements: !165)
!165 = !{!166, !168}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !164, file: !158, line: 61, baseType: !167, size: 64)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !164, file: !158, line: 62, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !171)
!170 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!171 = !{!172}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !169, file: !170, line: 50, baseType: !173, size: 64)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !175)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!175 = !{!176}
!176 = !DISubrange(count: 2)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !161, file: !158, line: 68, baseType: !178, size: 32, offset: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !161, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !181)
!181 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !161, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!183 = !DIDerivedType(tag: DW_TAG_member, scope: !161, file: !158, line: 90, baseType: !184, size: 16, offset: 112)
!184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !161, file: !158, line: 90, size: 16, elements: !185)
!185 = !{!186, !193}
!186 = !DIDerivedType(tag: DW_TAG_member, scope: !184, file: !158, line: 91, baseType: !187, size: 16)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !184, file: !158, line: 91, size: 16, elements: !188)
!188 = !{!189, !192}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !187, file: !158, line: 96, baseType: !190, size: 8)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !191)
!191 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !187, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !184, file: !158, line: 100, baseType: !194, size: 16)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !195)
!195 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !161, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !161, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !161, file: !158, line: 131, baseType: !199, size: 192, offset: 192)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !200)
!200 = !{!201, !202, !208}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !199, file: !122, line: 245, baseType: !167, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !199, file: !122, line: 246, baseType: !203, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !204)
!204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 32)
!205 = !DISubroutineType(types: !206)
!206 = !{null, !207}
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !199, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !157, file: !158, line: 250, baseType: !210, size: 288, offset: 384)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220, !221}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !210, file: !211, line: 26, baseType: !110, size: 32)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !210, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !210, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !210, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !210, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !210, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !210, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !210, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !210, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !157, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !157, file: !158, line: 256, baseType: !121, size: 64, offset: 704)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !226)
!226 = !{!227}
!227 = !DISubrange(count: 32)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !157, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !157, file: !158, line: 300, baseType: !230, size: 96, offset: 1056)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !231)
!231 = !{!232, !233, !236}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !230, file: !158, line: 153, baseType: !22, size: 32)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !230, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !235, line: 214, baseType: !32)
!235 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!236 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !230, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !157, file: !158, line: 325, baseType: !238, size: 32, offset: 1152)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 32)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !240)
!240 = !{!241, !250, !251}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !239, file: !118, line: 5074, baseType: !242, size: 96)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !244)
!243 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!244 = !{!245, !248, !249}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !242, file: !243, line: 57, baseType: !246, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !243, line: 57, flags: DIFlagFwdDecl)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !242, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !242, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !239, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !239, file: !118, line: 5076, baseType: !252, size: 32, offset: 160)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !254)
!253 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !252, file: !253, line: 52, baseType: !22, size: 32)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !157, file: !158, line: 343, baseType: !257, size: 64, offset: 1184)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !258)
!258 = !{!259, !260}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !257, file: !211, line: 63, baseType: !110, size: 32)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !257, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!261 = !{!152}
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!273 = !{!22, !107, !24, !274, !276, !278, !234, !109, !281, !282, !283, !284, !285, !286, !194, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !307, file: !337, line: 60, type: !338, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !336, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!309 = !{!310, !330}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 372, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !313, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !313, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !313, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !313, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !313, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !313, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !313, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !313, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !313, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !313, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !313, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !313, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !313, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 364, baseType: !332)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 64, elements: !333)
!333 = !{!334, !335}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !332, file: !312, line: 362, baseType: !316, size: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !332, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!336 = !{!305}
!337 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !341)
!340 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!341 = !{!342, !368}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !339, file: !340, line: 60, baseType: !343, size: 32)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DISubroutineType(types: !345)
!345 = !{!109, !346}
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !348)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !350)
!349 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!350 = !{!351, !352, !353, !354, !361, !362}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !348, file: !349, line: 380, baseType: !279, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !348, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !348, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !348, file: !349, line: 386, baseType: !355, size: 32, offset: 96)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 32)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !357)
!357 = !{!358, !359}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !356, file: !349, line: 359, baseType: !180, size: 8)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !356, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!360 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !348, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !348, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 32)
!364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !365)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !349, line: 43, baseType: !366)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !367)
!367 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !339, file: !340, line: 65, baseType: !346, size: 32, offset: 32)
!369 = !DIGlobalVariableExpression(var: !370, expr: !DIExpression())
!370 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !371, file: !374, line: 71, type: !375, isLocal: true, isDefinition: true, align: 32)
!371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !372, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !373, splitDebugInlining: false, nameTableKind: None)
!372 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!373 = !{!369}
!374 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !376)
!376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !377)
!377 = !{!378, !397}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !376, file: !340, line: 60, baseType: !379, size: 32)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!380 = !DISubroutineType(types: !381)
!381 = !{!109, !382}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !385)
!385 = !{!386, !387, !388, !389, !395, !396}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !384, file: !349, line: 380, baseType: !279, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !384, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !384, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !384, file: !349, line: 386, baseType: !390, size: 32, offset: 96)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !392)
!392 = !{!393, !394}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !391, file: !349, line: 359, baseType: !180, size: 8)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !391, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !384, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !384, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !376, file: !340, line: 65, baseType: !382, size: 32, offset: 32)
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !400, file: !407, line: 17, type: !536, isLocal: false, isDefinition: true)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !402, globals: !403, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!402 = !{!234, !109, !110, !107}
!403 = !{!398, !404, !532}
!404 = !DIGlobalVariableExpression(var: !405, expr: !DIExpression())
!405 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !406, file: !407, line: 198, type: !518, isLocal: true, isDefinition: true)
!406 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !407, file: !407, line: 175, type: !408, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !513)
!407 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!408 = !DISubroutineType(types: !409)
!409 = !{null, !410}
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !412)
!412 = !{!413, !471, !483, !484, !485, !486, !487, !493, !508}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !411, file: !158, line: 247, baseType: !414, size: 384)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !415)
!415 = !{!416, !440, !447, !448, !449, !458, !459, !460}
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !414, file: !158, line: 60, baseType: !417, size: 64)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !414, file: !158, line: 60, size: 64, elements: !418)
!418 = !{!419, !434}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !417, file: !158, line: 61, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !421)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !422)
!422 = !{!423, !429}
!423 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !127, line: 38, baseType: !424, size: 32)
!424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !127, line: 38, size: 32, elements: !425)
!425 = !{!426, !428}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !424, file: !127, line: 39, baseType: !427, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 32)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !424, file: !127, line: 40, baseType: !427, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !127, line: 42, baseType: !430, size: 32, offset: 32)
!430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !127, line: 42, size: 32, elements: !431)
!431 = !{!432, !433}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !430, file: !127, line: 43, baseType: !427, size: 32)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !430, file: !127, line: 44, baseType: !427, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !417, file: !158, line: 62, baseType: !435, size: 64)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !436)
!436 = !{!437}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !435, file: !170, line: 50, baseType: !438, size: 64)
!438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !439, size: 64, elements: !175)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !414, file: !158, line: 68, baseType: !441, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !443)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !444)
!444 = !{!445}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !443, file: !122, line: 232, baseType: !446, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !421)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !414, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !414, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !414, file: !158, line: 90, baseType: !450, size: 16, offset: 112)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !414, file: !158, line: 90, size: 16, elements: !451)
!451 = !{!452, !457}
!452 = !DIDerivedType(tag: DW_TAG_member, scope: !450, file: !158, line: 91, baseType: !453, size: 16)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !450, file: !158, line: 91, size: 16, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !453, file: !158, line: 96, baseType: !190, size: 8)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !453, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !450, file: !158, line: 100, baseType: !194, size: 16)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !414, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !414, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !414, file: !158, line: 131, baseType: !461, size: 192, offset: 192)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !462)
!462 = !{!463, !464, !470}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !461, file: !122, line: 245, baseType: !420, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !461, file: !122, line: 246, baseType: !465, size: 32, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{null, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !461, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !411, file: !158, line: 250, baseType: !472, size: 288, offset: 384)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !473)
!473 = !{!474, !475, !476, !477, !478, !479, !480, !481, !482}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !472, file: !211, line: 26, baseType: !110, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !472, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !472, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !472, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !472, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !472, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !472, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !472, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !472, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !411, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !411, file: !158, line: 256, baseType: !442, size: 64, offset: 704)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !411, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !411, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !411, file: !158, line: 300, baseType: !488, size: 96, offset: 1056)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !489)
!489 = !{!490, !491, !492}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !488, file: !158, line: 153, baseType: !22, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !488, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !488, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !411, file: !158, line: 325, baseType: !494, size: 32, offset: 1152)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !496)
!496 = !{!497, !503, !504}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !495, file: !118, line: 5074, baseType: !498, size: 96)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !499)
!499 = !{!500, !501, !502}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !498, file: !243, line: 57, baseType: !246, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !498, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !498, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !495, file: !118, line: 5075, baseType: !442, size: 64, offset: 96)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !495, file: !118, line: 5076, baseType: !505, size: 32, offset: 160)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !506)
!506 = !{!507}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !505, file: !253, line: 52, baseType: !22, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !411, file: !158, line: 343, baseType: !509, size: 64, offset: 1184)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !510)
!510 = !{!511, !512}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !509, file: !211, line: 63, baseType: !110, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !509, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!513 = !{!514, !515, !516, !517}
!514 = !DILocalVariable(name: "thread", arg: 1, scope: !406, file: !407, line: 175, type: !410)
!515 = !DILocalVariable(name: "region_num", scope: !406, file: !407, line: 200, type: !180)
!516 = !DILocalVariable(name: "guard_start", scope: !406, file: !407, line: 265, type: !22)
!517 = !DILocalVariable(name: "guard_size", scope: !406, file: !407, line: 266, type: !234)
!518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 96, elements: !530)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !520, line: 52, size: 96, elements: !521)
!520 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!521 = !{!522, !523, !524}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !519, file: !520, line: 53, baseType: !22, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !519, file: !520, line: 54, baseType: !234, size: 32, offset: 32)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !519, file: !520, line: 55, baseType: !525, size: 32, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !526, line: 151, baseType: !527)
!526 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !526, line: 149, size: 32, elements: !528)
!528 = !{!529}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !527, file: !526, line: 150, baseType: !110, size: 32)
!530 = !{!531}
!531 = !DISubrange(count: 1)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "static_regions", scope: !400, file: !407, line: 62, type: !534, isLocal: true, isDefinition: true)
!534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 96, elements: !530)
!535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !519)
!536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !538)
!538 = !{!539, !540}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !537, file: !291, line: 17, baseType: !279, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !537, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !543, file: !576, line: 39, type: !180, isLocal: true, isDefinition: true)
!543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !545, globals: !575, splitDebugInlining: false, nameTableKind: None)
!544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!545 = !{!546, !107, !109, !563, !180}
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !548, line: 1168, baseType: !549)
!548 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 1155, size: 352, elements: !550)
!550 = !{!551, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !549, file: !548, line: 1157, baseType: !552, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !549, file: !548, line: 1158, baseType: !316, size: 32, offset: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !549, file: !548, line: 1159, baseType: !316, size: 32, offset: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !549, file: !548, line: 1160, baseType: !316, size: 32, offset: 96)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !549, file: !548, line: 1161, baseType: !316, size: 32, offset: 128)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !549, file: !548, line: 1162, baseType: !316, size: 32, offset: 160)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !549, file: !548, line: 1163, baseType: !316, size: 32, offset: 192)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !549, file: !548, line: 1164, baseType: !316, size: 32, offset: 224)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !549, file: !548, line: 1165, baseType: !316, size: 32, offset: 256)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !549, file: !548, line: 1166, baseType: !316, size: 32, offset: 288)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !549, file: !548, line: 1167, baseType: !316, size: 32, offset: 320)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 32)
!564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !566, line: 27, size: 96, elements: !567)
!566 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !565, file: !566, line: 29, baseType: !110, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !565, file: !566, line: 31, baseType: !279, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !565, file: !566, line: 37, baseType: !571, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !526, line: 146, baseType: !572)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !526, line: 141, size: 32, elements: !573)
!573 = !{!574}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !572, file: !526, line: 143, baseType: !110, size: 32)
!575 = !{!541}
!576 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!577 = !DIGlobalVariableExpression(var: !578, expr: !DIExpression())
!578 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !579, file: !586, line: 21, type: !302, isLocal: true, isDefinition: true)
!579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !580, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !581, globals: !585, splitDebugInlining: false, nameTableKind: None)
!580 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!581 = !{!582, !109, !107}
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !584, line: 22, baseType: !109)
!584 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!585 = !{!577}
!586 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !589, file: !594, line: 13, type: !611, isLocal: true, isDefinition: true)
!589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !591, splitDebugInlining: false, nameTableKind: None)
!590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!591 = !{!592, !587}
!592 = !DIGlobalVariableExpression(var: !593, expr: !DIExpression())
!593 = distinct !DIGlobalVariable(name: "mpu_config", scope: !589, file: !594, line: 37, type: !595, isLocal: false, isDefinition: true)
!594 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !596)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !566, line: 41, size: 64, elements: !597)
!597 = !{!598, !599}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !596, file: !566, line: 43, baseType: !110, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !596, file: !566, line: 45, baseType: !600, size: 32, offset: 32)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !566, line: 27, size: 96, elements: !603)
!603 = !{!604, !605, !606}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !602, file: !566, line: 29, baseType: !110, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !602, file: !566, line: 31, baseType: !279, size: 32, offset: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !602, file: !566, line: 37, baseType: !607, size: 32, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !526, line: 146, baseType: !608)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !526, line: 141, size: 32, elements: !609)
!609 = !{!610}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !608, file: !526, line: 143, baseType: !110, size: 32)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !601, size: 192, elements: !175)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !614, file: !711, line: 36, type: !712, isLocal: true, isDefinition: true, align: 32)
!614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !615, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !616, retainedTypes: !628, globals: !710, splitDebugInlining: false, nameTableKind: None)
!615 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!616 = !{!617, !623}
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !618, line: 506, baseType: !32, size: 32, elements: !619)
!618 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!619 = !{!620, !621, !622}
!620 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!621 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!622 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!623 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !618, line: 512, baseType: !32, size: 32, elements: !624)
!624 = !{!625, !626, !627}
!625 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!626 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!627 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!628 = !{!629, !699, !704, !664, !623, !617, !709, !107}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 32)
!630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !631)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !618, line: 523, size: 288, elements: !632)
!632 = !{!633, !654, !660, !665, !669, !670, !671, !675, !695}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !631, file: !618, line: 524, baseType: !634, size: 32)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 32)
!635 = !DISubroutineType(types: !636)
!636 = !{!109, !637, !652, !653}
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 32)
!638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !639)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !640)
!640 = !{!641, !642, !643, !644, !650, !651}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !639, file: !349, line: 380, baseType: !279, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !639, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !639, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !639, file: !349, line: 386, baseType: !645, size: 32, offset: 96)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 32)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !647)
!647 = !{!648, !649}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !646, file: !349, line: 359, baseType: !180, size: 8)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !646, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !639, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !639, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !618, line: 237, baseType: !180)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !618, line: 257, baseType: !110)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !631, file: !618, line: 530, baseType: !655, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 32)
!656 = !DISubroutineType(types: !657)
!657 = !{!109, !637, !658}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !618, line: 229, baseType: !110)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !631, file: !618, line: 532, baseType: !661, size: 32, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 32)
!662 = !DISubroutineType(types: !663)
!663 = !{!109, !637, !664, !659}
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !618, line: 216, baseType: !110)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !631, file: !618, line: 535, baseType: !666, size: 32, offset: 96)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 32)
!667 = !DISubroutineType(types: !668)
!668 = !{!109, !637, !664}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !631, file: !618, line: 537, baseType: !666, size: 32, offset: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !631, file: !618, line: 539, baseType: !666, size: 32, offset: 160)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !631, file: !618, line: 541, baseType: !672, size: 32, offset: 192)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!673 = !DISubroutineType(types: !674)
!674 = !{!109, !637, !652, !617, !623}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !631, file: !618, line: 544, baseType: !676, size: 32, offset: 224)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 32)
!677 = !DISubroutineType(types: !678)
!678 = !{!109, !637, !679, !360}
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !618, line: 478, size: 96, elements: !681)
!681 = !{!682, !689, !694}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !680, file: !618, line: 482, baseType: !683, size: 32)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !684, line: 33, baseType: !685)
!684 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !684, line: 29, size: 32, elements: !686)
!686 = !{!687}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !685, file: !684, line: 30, baseType: !688, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 32)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !680, file: !618, line: 485, baseType: !690, size: 32, offset: 32)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !618, line: 464, baseType: !691)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 32)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !637, !679, !664}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !680, file: !618, line: 493, baseType: !664, size: 32, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !631, file: !618, line: 547, baseType: !696, size: 32, offset: 256)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 32)
!697 = !DISubroutineType(types: !698)
!698 = !{!110, !637}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !618, line: 428, size: 32, elements: !702)
!702 = !{!703}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !701, file: !618, line: 434, baseType: !664, size: 32)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !706)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !618, line: 441, size: 32, elements: !707)
!707 = !{!708}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !706, file: !618, line: 447, baseType: !664, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 32)
!710 = !{!612}
!711 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !714)
!714 = !{!715, !719}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !713, file: !340, line: 60, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!717 = !DISubroutineType(types: !718)
!718 = !{!109, !637}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !713, file: !340, line: 65, baseType: !637, size: 32, offset: 32)
!720 = !DIGlobalVariableExpression(var: !721, expr: !DIExpression())
!721 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !722, file: !794, line: 48, type: !870, isLocal: true, isDefinition: true)
!722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !724, retainedTypes: !780, globals: !791, splitDebugInlining: false, nameTableKind: None)
!723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!724 = !{!30, !725}
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 69, baseType: !109, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779}
!727 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!728 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!729 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!730 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!731 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!732 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!733 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!734 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!735 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!736 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!737 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!738 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!739 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!740 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!741 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!742 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!743 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!744 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!745 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!746 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!747 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!748 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!749 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!750 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!751 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!752 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!753 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!754 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!755 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!756 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!757 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!758 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!759 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!760 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!761 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!762 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!763 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!764 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!765 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!766 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!767 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!768 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!769 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!770 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!771 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!772 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!773 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!774 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!775 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!776 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!777 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!778 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!779 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!780 = !{!234, !109, !107, !781}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 270, baseType: !783)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 262, size: 192, elements: !784)
!784 = !{!785, !786, !787, !788, !789, !790}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !783, file: !312, line: 264, baseType: !316, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !783, file: !312, line: 265, baseType: !316, size: 32, offset: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !783, file: !312, line: 266, baseType: !316, size: 32, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !783, file: !312, line: 267, baseType: !316, size: 32, offset: 96)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !783, file: !312, line: 268, baseType: !316, size: 32, offset: 128)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !783, file: !312, line: 269, baseType: !316, size: 32, offset: 160)
!791 = !{!792, !798, !814, !825, !842, !720, !844, !858, !860, !862, !864, !866, !868}
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !722, file: !794, line: 424, type: !795, isLocal: false, isDefinition: true, align: 16)
!794 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 64, elements: !796)
!796 = !{!797}
!797 = !DISubrange(count: 4)
!798 = !DIGlobalVariableExpression(var: !799, expr: !DIExpression())
!799 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !722, file: !794, line: 424, type: !800, isLocal: false, isDefinition: true, align: 32)
!800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !801)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !802)
!802 = !{!803, !804, !805, !806, !812, !813}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !801, file: !349, line: 380, baseType: !279, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !801, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !801, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !801, file: !349, line: 386, baseType: !807, size: 32, offset: 96)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !808, file: !349, line: 359, baseType: !180, size: 8)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !808, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !801, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !801, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !722, file: !794, line: 424, type: !816, isLocal: true, isDefinition: true, align: 32)
!816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !817)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !818)
!818 = !{!819, !824}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !817, file: !340, line: 60, baseType: !820, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 32)
!821 = !DISubroutineType(types: !822)
!822 = !{!109, !823}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !817, file: !340, line: 65, baseType: !823, size: 32, offset: 32)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "exti_data", scope: !722, file: !794, line: 423, type: !827, isLocal: true, isDefinition: true)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !794, line: 107, size: 1024, elements: !828)
!828 = !{!829}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !827, file: !794, line: 109, baseType: !830, size: 1024)
!830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !831, size: 1024, elements: !840)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !794, line: 101, size: 64, elements: !832)
!832 = !{!833, !839}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !831, file: !794, line: 102, baseType: !834, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !835, line: 63, baseType: !836)
!835 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 32)
!837 = !DISubroutineType(types: !838)
!838 = !{null, !109, !107}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !831, file: !794, line: 103, baseType: !107, size: 32, offset: 32)
!840 = !{!841}
!841 = !DISubrange(count: 16)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !722, file: !794, line: 424, type: !808, isLocal: true, isDefinition: true, align: 8)
!844 = !DIGlobalVariableExpression(var: !845, expr: !DIExpression())
!845 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !846, file: !794, line: 493, type: !851, isLocal: true, isDefinition: true, align: 32)
!846 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !794, file: !794, line: 460, type: !847, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !849)
!847 = !DISubroutineType(types: !848)
!848 = !{null, !823}
!849 = !{!850}
!850 = !DILocalVariable(name: "dev", arg: 1, scope: !846, file: !794, line: 460, type: !823)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !852)
!852 = !{!853, !855, !856, !857}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !851, file: !10, line: 55, baseType: !854, size: 32)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !851, file: !10, line: 57, baseType: !854, size: 32, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !851, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !851, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !846, file: !794, line: 497, type: !851, isLocal: true, isDefinition: true, align: 32)
!860 = !DIGlobalVariableExpression(var: !861, expr: !DIExpression())
!861 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !846, file: !794, line: 507, type: !851, isLocal: true, isDefinition: true, align: 32)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !846, file: !794, line: 512, type: !851, isLocal: true, isDefinition: true, align: 32)
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !846, file: !794, line: 516, type: !851, isLocal: true, isDefinition: true, align: 32)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !846, file: !794, line: 523, type: !851, isLocal: true, isDefinition: true, align: 32)
!868 = !DIGlobalVariableExpression(var: !869, expr: !DIExpression())
!869 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !846, file: !794, line: 527, type: !851, isLocal: true, isDefinition: true, align: 32)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !871, size: 512, elements: !840)
!871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !872)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 127, baseType: !725)
!873 = !DIGlobalVariableExpression(var: !874, expr: !DIExpression())
!874 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !875, file: !880, line: 21, type: !900, isLocal: false, isDefinition: true, align: 16)
!875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !876, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !877, splitDebugInlining: false, nameTableKind: None)
!876 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!877 = !{!878, !873, !884, !886, !888, !890, !892, !894, !896, !898}
!878 = !DIGlobalVariableExpression(var: !879, expr: !DIExpression())
!879 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !875, file: !880, line: 16, type: !881, isLocal: false, isDefinition: true, align: 16)
!880 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 176, elements: !882)
!882 = !{!883}
!883 = !DISubrange(count: 11)
!884 = !DIGlobalVariableExpression(var: !885, expr: !DIExpression())
!885 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !875, file: !880, line: 28, type: !795, isLocal: false, isDefinition: true, align: 16)
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !875, file: !880, line: 35, type: !795, isLocal: false, isDefinition: true, align: 16)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !875, file: !880, line: 42, type: !795, isLocal: false, isDefinition: true, align: 16)
!890 = !DIGlobalVariableExpression(var: !891, expr: !DIExpression())
!891 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !875, file: !880, line: 49, type: !795, isLocal: false, isDefinition: true, align: 16)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !875, file: !880, line: 56, type: !795, isLocal: false, isDefinition: true, align: 16)
!894 = !DIGlobalVariableExpression(var: !895, expr: !DIExpression())
!895 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !875, file: !880, line: 63, type: !795, isLocal: false, isDefinition: true, align: 16)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !875, file: !880, line: 70, type: !795, isLocal: false, isDefinition: true, align: 16)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !875, file: !880, line: 77, type: !795, isLocal: false, isDefinition: true, align: 16)
!900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 48, elements: !261)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !903, file: !947, line: 398, type: !978, isLocal: true, isDefinition: true)
!903 = distinct !DICompileUnit(language: DW_LANG_C99, file: !904, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !905, retainedTypes: !918, globals: !944, splitDebugInlining: false, nameTableKind: None)
!904 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!905 = !{!906, !30, !911}
!906 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !907, line: 190, baseType: !32, size: 32, elements: !908)
!907 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!908 = !{!909, !910}
!909 = !DIEnumerator(name: "SUCCESS", value: 0)
!910 = !DIEnumerator(name: "ERROR", value: 1)
!911 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !912, line: 44, baseType: !32, size: 32, elements: !913)
!912 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!913 = !{!914, !915, !916, !917}
!914 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!915 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!916 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!917 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!918 = !{!107, !109, !110, !919, !937, !943}
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !921)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !922)
!922 = !{!923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !921, file: !312, line: 372, baseType: !316, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !921, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !921, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !921, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !921, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !921, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !921, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !921, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !921, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !921, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !921, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !921, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !921, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !921, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !939, line: 343, size: 64, elements: !940)
!939 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!940 = !{!941, !942}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !938, file: !939, line: 344, baseType: !110, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !938, file: !939, line: 345, baseType: !110, size: 32, offset: 32)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!944 = !{!945, !949, !965, !976, !901}
!945 = !DIGlobalVariableExpression(var: !946, expr: !DIExpression())
!946 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !903, file: !947, line: 752, type: !948, isLocal: false, isDefinition: true, align: 16)
!947 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 512, elements: !226)
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !903, file: !947, line: 752, type: !951, isLocal: false, isDefinition: true, align: 32)
!951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !952)
!952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !953)
!953 = !{!954, !955, !956, !957, !963, !964}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !952, file: !349, line: 380, baseType: !279, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !952, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !952, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !952, file: !349, line: 386, baseType: !958, size: 32, offset: 96)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !960)
!960 = !{!961, !962}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !959, file: !349, line: 359, baseType: !180, size: 8)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !959, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !952, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !952, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!965 = !DIGlobalVariableExpression(var: !966, expr: !DIExpression())
!966 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !903, file: !947, line: 752, type: !967, isLocal: true, isDefinition: true, align: 32)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !969)
!969 = !{!970, !975}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !968, file: !340, line: 60, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{!109, !974}
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !968, file: !340, line: 65, baseType: !974, size: 32, offset: 32)
!976 = !DIGlobalVariableExpression(var: !977, expr: !DIExpression())
!977 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !903, file: !947, line: 752, type: !959, isLocal: true, isDefinition: true, align: 8)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !912, line: 100, size: 224, elements: !979)
!979 = !{!980, !986, !987, !996, !1001, !1006, !1012}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !978, file: !912, line: 101, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !912, line: 76, baseType: !982)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = !DISubroutineType(types: !984)
!984 = !{!109, !974, !985}
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !912, line: 56, baseType: !107)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !978, file: !912, line: 102, baseType: !981, size: 32, offset: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !978, file: !912, line: 103, baseType: !988, size: 32, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !912, line: 83, baseType: !989)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DISubroutineType(types: !991)
!991 = !{!109, !974, !985, !992, !107}
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !912, line: 72, baseType: !993)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DISubroutineType(types: !995)
!995 = !{null, !974, !985, !107}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !978, file: !912, line: 104, baseType: !997, size: 32, offset: 96)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !912, line: 79, baseType: !998)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 32)
!999 = !DISubroutineType(types: !1000)
!1000 = !{!109, !974, !985, !943}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !978, file: !912, line: 105, baseType: !1002, size: 32, offset: 128)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !912, line: 88, baseType: !1003)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!911, !974, !985}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !978, file: !912, line: 106, baseType: !1007, size: 32, offset: 160)
!1007 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !912, line: 92, baseType: !1008)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!109, !974, !985, !1011}
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !912, line: 64, baseType: !107)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !978, file: !912, line: 107, baseType: !1013, size: 32, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !912, line: 96, baseType: !1014)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 32)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!109, !974, !985, !107}
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1019, file: !1076, line: 603, type: !1078, isLocal: true, isDefinition: true, align: 32)
!1019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1020, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1021, globals: !1073, splitDebugInlining: false, nameTableKind: None)
!1020 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!1021 = !{!107, !109, !1022}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1025, line: 336, size: 160, elements: !1026)
!1025 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1026 = !{!1027, !1047, !1051, !1055, !1068}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1024, file: !1025, line: 365, baseType: !1028, size: 32)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!109, !1031, !1046}
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1034)
!1034 = !{!1035, !1036, !1037, !1038, !1044, !1045}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1033, file: !349, line: 380, baseType: !279, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1033, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1033, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1033, file: !349, line: 386, baseType: !1039, size: 32, offset: 96)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1041)
!1041 = !{!1042, !1043}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1040, file: !349, line: 359, baseType: !180, size: 8)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1040, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1033, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1033, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1024, file: !1025, line: 366, baseType: !1048, size: 32, offset: 32)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 32)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{null, !1031, !181}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1024, file: !1025, line: 374, baseType: !1052, size: 32, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 32)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!109, !1031}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1024, file: !1025, line: 377, baseType: !1056, size: 32, offset: 96)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 32)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!109, !1031, !1059}
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1061)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1025, line: 122, size: 64, elements: !1062)
!1062 = !{!1063, !1064, !1065, !1066, !1067}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1061, file: !1025, line: 123, baseType: !110, size: 32)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1061, file: !1025, line: 124, baseType: !180, size: 8, offset: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1061, file: !1025, line: 125, baseType: !180, size: 8, offset: 40)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1061, file: !1025, line: 126, baseType: !180, size: 8, offset: 48)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1061, file: !1025, line: 127, baseType: !180, size: 8, offset: 56)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1024, file: !1025, line: 379, baseType: !1069, size: 32, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!109, !1031, !1072}
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 32)
!1073 = !{!1017, !1074}
!1074 = !DIGlobalVariableExpression(var: !1075, expr: !DIExpression())
!1075 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1019, file: !1076, line: 38, type: !1077, isLocal: true, isDefinition: true)
!1076 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1079)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1079, file: !340, line: 60, baseType: !1052, size: 32)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1079, file: !340, line: 65, baseType: !1031, size: 32, offset: 32)
!1083 = !DIGlobalVariableExpression(var: !1084, expr: !DIExpression())
!1084 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1085, file: !1235, line: 762, type: !1333, isLocal: true, isDefinition: true)
!1085 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1086, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1087, retainedTypes: !1094, globals: !1232, splitDebugInlining: false, nameTableKind: None)
!1086 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!1087 = !{!30, !617, !623, !1088, !911}
!1088 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !835, line: 43, baseType: !32, size: 32, elements: !1089)
!1089 = !{!1090, !1091, !1092, !1093}
!1090 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1091 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1092 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1093 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1094 = !{!107, !109, !1095, !1159, !1164, !664, !623, !617, !1169, !1170, !110, !1184, !1140, !285, !1192, !1193}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !618, line: 523, size: 288, elements: !1098)
!1098 = !{!1099, !1118, !1122, !1126, !1130, !1131, !1132, !1136, !1155}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1097, file: !618, line: 524, baseType: !1100, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!109, !1103, !652, !653}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1106)
!1106 = !{!1107, !1108, !1109, !1110, !1116, !1117}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1105, file: !349, line: 380, baseType: !279, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1105, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1105, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1105, file: !349, line: 386, baseType: !1111, size: 32, offset: 96)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1113)
!1113 = !{!1114, !1115}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1112, file: !349, line: 359, baseType: !180, size: 8)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1112, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1105, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1105, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1097, file: !618, line: 530, baseType: !1119, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!109, !1103, !658}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1097, file: !618, line: 532, baseType: !1123, size: 32, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!109, !1103, !664, !659}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1097, file: !618, line: 535, baseType: !1127, size: 32, offset: 96)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!109, !1103, !664}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1097, file: !618, line: 537, baseType: !1127, size: 32, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1097, file: !618, line: 539, baseType: !1127, size: 32, offset: 160)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1097, file: !618, line: 541, baseType: !1133, size: 32, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!109, !1103, !652, !617, !623}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1097, file: !618, line: 544, baseType: !1137, size: 32, offset: 224)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 32)
!1138 = !DISubroutineType(types: !1139)
!1139 = !{!109, !1103, !1140, !360}
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !618, line: 478, size: 96, elements: !1142)
!1142 = !{!1143, !1149, !1154}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1141, file: !618, line: 482, baseType: !1144, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !684, line: 33, baseType: !1145)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !684, line: 29, size: 32, elements: !1146)
!1146 = !{!1147}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1145, file: !684, line: 30, baseType: !1148, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1141, file: !618, line: 485, baseType: !1150, size: 32, offset: 32)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !618, line: 464, baseType: !1151)
!1151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1152, size: 32)
!1152 = !DISubroutineType(types: !1153)
!1153 = !{null, !1103, !1140, !664}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1141, file: !618, line: 493, baseType: !664, size: 32, offset: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1097, file: !618, line: 547, baseType: !1156, size: 32, offset: 256)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!110, !1103}
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1161)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !618, line: 428, size: 32, elements: !1162)
!1162 = !{!1163}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1161, file: !618, line: 434, baseType: !664, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1166)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !618, line: 441, size: 32, elements: !1167)
!1167 = !{!1168}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1166, file: !618, line: 447, baseType: !664, size: 32)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 314, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 303, size: 320, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1172, file: !312, line: 305, baseType: !316, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1172, file: !312, line: 306, baseType: !316, size: 32, offset: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1172, file: !312, line: 307, baseType: !316, size: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1172, file: !312, line: 308, baseType: !316, size: 32, offset: 96)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1172, file: !312, line: 309, baseType: !316, size: 32, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1172, file: !312, line: 310, baseType: !316, size: 32, offset: 160)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1172, file: !312, line: 311, baseType: !316, size: 32, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1172, file: !312, line: 312, baseType: !316, size: 32, offset: 224)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1172, file: !312, line: 313, baseType: !1183, size: 64, offset: 256)
!1183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !175)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 325, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 320, size: 192, elements: !1187)
!1187 = !{!1188, !1189, !1190}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1186, file: !312, line: 322, baseType: !316, size: 32)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1186, file: !312, line: 323, baseType: !316, size: 32, offset: 32)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1186, file: !312, line: 324, baseType: !1191, size: 128, offset: 64)
!1191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !796)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !912, line: 100, size: 224, elements: !1196)
!1196 = !{!1197, !1202, !1203, !1212, !1217, !1222, !1227}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1195, file: !912, line: 101, baseType: !1198, size: 32)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !912, line: 76, baseType: !1199)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 32)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!109, !1103, !985}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1195, file: !912, line: 102, baseType: !1198, size: 32, offset: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1195, file: !912, line: 103, baseType: !1204, size: 32, offset: 64)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !912, line: 83, baseType: !1205)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 32)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!109, !1103, !985, !1208, !107}
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !912, line: 72, baseType: !1209)
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 32)
!1210 = !DISubroutineType(types: !1211)
!1211 = !{null, !1103, !985, !107}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1195, file: !912, line: 104, baseType: !1213, size: 32, offset: 96)
!1213 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !912, line: 79, baseType: !1214)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 32)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{!109, !1103, !985, !943}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1195, file: !912, line: 105, baseType: !1218, size: 32, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !912, line: 88, baseType: !1219)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!911, !1103, !985}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1195, file: !912, line: 106, baseType: !1223, size: 32, offset: 160)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !912, line: 92, baseType: !1224)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DISubroutineType(types: !1226)
!1226 = !{!109, !1103, !985, !1011}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1195, file: !912, line: 107, baseType: !1228, size: 32, offset: 192)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !912, line: 96, baseType: !1229)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 32)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!109, !1103, !985, !107}
!1232 = !{!1233, !1239, !1241, !1251, !1256, !1258, !1260, !1265, !1267, !1269, !1274, !1276, !1278, !1280, !1282, !1284, !1289, !1291, !1293, !1307, !1309, !1311, !1313, !1315, !1317, !1319, !1321, !1323, !1325, !1327, !1083, !1329, !1331, !1344, !1346, !1348, !1350}
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1085, file: !1235, line: 762, type: !1236, isLocal: false, isDefinition: true, align: 16)
!1235 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 128, elements: !1237)
!1237 = !{!1238}
!1238 = !DISubrange(count: 8)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1085, file: !1235, line: 762, type: !1104, isLocal: false, isDefinition: true, align: 32)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1085, file: !1235, line: 762, type: !1243, isLocal: true, isDefinition: true, align: 32)
!1243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1244)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !1245)
!1245 = !{!1246, !1250}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1244, file: !340, line: 60, baseType: !1247, size: 32)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 32)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!109, !1103}
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1244, file: !340, line: 65, baseType: !1103, size: 32, offset: 32)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1085, file: !1235, line: 766, type: !1253, isLocal: false, isDefinition: true, align: 16)
!1253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 144, elements: !1254)
!1254 = !{!1255}
!1255 = !DISubrange(count: 9)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1085, file: !1235, line: 766, type: !1104, isLocal: false, isDefinition: true, align: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1085, file: !1235, line: 766, type: !1243, isLocal: true, isDefinition: true, align: 32)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1085, file: !1235, line: 770, type: !1262, isLocal: false, isDefinition: true, align: 16)
!1262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 96, elements: !1263)
!1263 = !{!1264}
!1264 = !DISubrange(count: 6)
!1265 = !DIGlobalVariableExpression(var: !1266, expr: !DIExpression())
!1266 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1085, file: !1235, line: 770, type: !1104, isLocal: false, isDefinition: true, align: 32)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1085, file: !1235, line: 770, type: !1243, isLocal: true, isDefinition: true, align: 32)
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1270 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1085, file: !1235, line: 774, type: !1271, isLocal: false, isDefinition: true, align: 16)
!1271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 80, elements: !1272)
!1272 = !{!1273}
!1273 = !DISubrange(count: 5)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1085, file: !1235, line: 774, type: !1104, isLocal: false, isDefinition: true, align: 32)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1085, file: !1235, line: 774, type: !1243, isLocal: true, isDefinition: true, align: 32)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1085, file: !1235, line: 778, type: !1271, isLocal: false, isDefinition: true, align: 16)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1085, file: !1235, line: 778, type: !1104, isLocal: false, isDefinition: true, align: 32)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1085, file: !1235, line: 778, type: !1243, isLocal: true, isDefinition: true, align: 32)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1085, file: !1235, line: 790, type: !1286, isLocal: false, isDefinition: true, align: 16)
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 112, elements: !1287)
!1287 = !{!1288}
!1288 = !DISubrange(count: 7)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1085, file: !1235, line: 790, type: !1104, isLocal: false, isDefinition: true, align: 32)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1085, file: !1235, line: 790, type: !1243, isLocal: true, isDefinition: true, align: 32)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1085, file: !1235, line: 762, type: !1295, isLocal: true, isDefinition: true)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1296, line: 237, size: 128, elements: !1297)
!1296 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1297 = !{!1298, !1299, !1300}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1295, file: !1296, line: 239, baseType: !1166, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1295, file: !1296, line: 241, baseType: !1103, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1295, file: !1296, line: 243, baseType: !1301, size: 64, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !684, line: 40, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !684, line: 35, size: 64, elements: !1303)
!1303 = !{!1304, !1306}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1302, file: !684, line: 36, baseType: !1305, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1144, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1302, file: !684, line: 37, baseType: !1305, size: 32, offset: 32)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1085, file: !1235, line: 762, type: !1112, isLocal: true, isDefinition: true, align: 8)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1085, file: !1235, line: 766, type: !1295, isLocal: true, isDefinition: true)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1085, file: !1235, line: 766, type: !1112, isLocal: true, isDefinition: true, align: 8)
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1085, file: !1235, line: 770, type: !1295, isLocal: true, isDefinition: true)
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1085, file: !1235, line: 770, type: !1112, isLocal: true, isDefinition: true, align: 8)
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1085, file: !1235, line: 774, type: !1295, isLocal: true, isDefinition: true)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1085, file: !1235, line: 774, type: !1112, isLocal: true, isDefinition: true, align: 8)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1085, file: !1235, line: 778, type: !1295, isLocal: true, isDefinition: true)
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1085, file: !1235, line: 778, type: !1112, isLocal: true, isDefinition: true, align: 8)
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1085, file: !1235, line: 790, type: !1295, isLocal: true, isDefinition: true)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1085, file: !1235, line: 790, type: !1112, isLocal: true, isDefinition: true, align: 8)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1085, file: !1235, line: 656, type: !1096, isLocal: true, isDefinition: true)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1085, file: !1235, line: 766, type: !1333, isLocal: true, isDefinition: true)
!1333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1296, line: 224, size: 160, elements: !1335)
!1335 = !{!1336, !1337, !1338, !1339}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1334, file: !1296, line: 226, baseType: !1161, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1334, file: !1296, line: 228, baseType: !943, size: 32, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1334, file: !1296, line: 230, baseType: !109, size: 32, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1334, file: !1296, line: 231, baseType: !1340, size: 64, offset: 96)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !939, line: 343, size: 64, elements: !1341)
!1341 = !{!1342, !1343}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1340, file: !939, line: 344, baseType: !110, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1340, file: !939, line: 345, baseType: !110, size: 32, offset: 32)
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1085, file: !1235, line: 770, type: !1333, isLocal: true, isDefinition: true)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1085, file: !1235, line: 774, type: !1333, isLocal: true, isDefinition: true)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1349 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1085, file: !1235, line: 778, type: !1333, isLocal: true, isDefinition: true)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1085, file: !1235, line: 790, type: !1333, isLocal: true, isDefinition: true)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1354, file: !1492, line: 44, type: !1587, isLocal: false, isDefinition: true)
!1354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1356, retainedTypes: !1389, globals: !1489, splitDebugInlining: false, nameTableKind: None)
!1355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!1356 = !{!30, !1357, !1364, !1371, !1378, !1384, !911}
!1357 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1025, line: 47, baseType: !32, size: 32, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1362, !1363}
!1359 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1360 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1361 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1362 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1363 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1364 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1025, line: 75, baseType: !32, size: 32, elements: !1365)
!1365 = !{!1366, !1367, !1368, !1369, !1370}
!1366 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1367 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1368 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1369 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1370 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1371 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1025, line: 92, baseType: !32, size: 32, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377}
!1373 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1374 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1375 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1376 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1377 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1378 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1025, line: 84, baseType: !32, size: 32, elements: !1379)
!1379 = !{!1380, !1381, !1382, !1383}
!1380 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1381 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1382 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1383 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1025, line: 107, baseType: !32, size: 32, elements: !1385)
!1385 = !{!1386, !1387, !1388}
!1386 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1387 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1388 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1389 = !{!107, !109, !1390, !181, !180, !1439, !110, !985, !1450, !194}
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1025, line: 336, size: 160, elements: !1393)
!1393 = !{!1394, !1413, !1417, !1421, !1434}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1392, file: !1025, line: 365, baseType: !1395, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!109, !1398, !1046}
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1401)
!1401 = !{!1402, !1403, !1404, !1405, !1411, !1412}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1400, file: !349, line: 380, baseType: !279, size: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1400, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1400, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1400, file: !349, line: 386, baseType: !1406, size: 32, offset: 96)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1408)
!1408 = !{!1409, !1410}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1407, file: !349, line: 359, baseType: !180, size: 8)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1407, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1400, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1400, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1392, file: !1025, line: 366, baseType: !1414, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{null, !1398, !181}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1392, file: !1025, line: 374, baseType: !1418, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 32)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!109, !1398}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1392, file: !1025, line: 377, baseType: !1422, size: 32, offset: 96)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!109, !1398, !1425}
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1025, line: 122, size: 64, elements: !1428)
!1428 = !{!1429, !1430, !1431, !1432, !1433}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1427, file: !1025, line: 123, baseType: !110, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1427, file: !1025, line: 124, baseType: !180, size: 8, offset: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1427, file: !1025, line: 125, baseType: !180, size: 8, offset: 40)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1427, file: !1025, line: 126, baseType: !180, size: 8, offset: 48)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1427, file: !1025, line: 127, baseType: !180, size: 8, offset: 56)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1392, file: !1025, line: 379, baseType: !1435, size: 32, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!109, !1398, !1438}
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 505, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 496, size: 224, elements: !1442)
!1442 = !{!1443, !1444, !1445, !1446, !1447, !1448, !1449}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1441, file: !312, line: 498, baseType: !316, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1441, file: !312, line: 499, baseType: !316, size: 32, offset: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1441, file: !312, line: 500, baseType: !316, size: 32, offset: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1441, file: !312, line: 501, baseType: !316, size: 32, offset: 96)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1441, file: !312, line: 502, baseType: !316, size: 32, offset: 128)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1441, file: !312, line: 503, baseType: !316, size: 32, offset: 160)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1441, file: !312, line: 504, baseType: !316, size: 32, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1452)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !912, line: 100, size: 224, elements: !1453)
!1453 = !{!1454, !1459, !1460, !1469, !1474, !1479, !1484}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1452, file: !912, line: 101, baseType: !1455, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !912, line: 76, baseType: !1456)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!109, !1398, !985}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1452, file: !912, line: 102, baseType: !1455, size: 32, offset: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1452, file: !912, line: 103, baseType: !1461, size: 32, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !912, line: 83, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 32)
!1463 = !DISubroutineType(types: !1464)
!1464 = !{!109, !1398, !985, !1465, !107}
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !912, line: 72, baseType: !1466)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 32)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{null, !1398, !985, !107}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1452, file: !912, line: 104, baseType: !1470, size: 32, offset: 96)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !912, line: 79, baseType: !1471)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 32)
!1472 = !DISubroutineType(types: !1473)
!1473 = !{!109, !1398, !985, !943}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1452, file: !912, line: 105, baseType: !1475, size: 32, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !912, line: 88, baseType: !1476)
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 32)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!911, !1398, !985}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1452, file: !912, line: 106, baseType: !1480, size: 32, offset: 160)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !912, line: 92, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 32)
!1482 = !DISubroutineType(types: !1483)
!1483 = !{!109, !1398, !985, !1011}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1452, file: !912, line: 107, baseType: !1485, size: 32, offset: 192)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !912, line: 96, baseType: !1486)
!1486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1487, size: 32)
!1487 = !DISubroutineType(types: !1488)
!1488 = !{!109, !1398, !985, !107}
!1489 = !{!1352, !1490, !1493, !1495, !1502, !1504, !1506, !1508, !1510, !1512, !1556, !1559, !1561, !1564, !1567, !1569, !1575, !1577, !1579, !1581, !1583, !1585}
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1354, file: !1492, line: 1914, type: !1236, isLocal: false, isDefinition: true, align: 16)
!1492 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1493 = !DIGlobalVariableExpression(var: !1494, expr: !DIExpression())
!1494 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1354, file: !1492, line: 1914, type: !1399, isLocal: false, isDefinition: true, align: 32)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1354, file: !1492, line: 1914, type: !1497, isLocal: true, isDefinition: true, align: 32)
!1497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1498, file: !340, line: 60, baseType: !1418, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1498, file: !340, line: 65, baseType: !1398, size: 32, offset: 32)
!1502 = !DIGlobalVariableExpression(var: !1503, expr: !DIExpression())
!1503 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1354, file: !1492, line: 1914, type: !1236, isLocal: false, isDefinition: true, align: 16)
!1504 = !DIGlobalVariableExpression(var: !1505, expr: !DIExpression())
!1505 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1354, file: !1492, line: 1914, type: !1399, isLocal: false, isDefinition: true, align: 32)
!1506 = !DIGlobalVariableExpression(var: !1507, expr: !DIExpression())
!1507 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1354, file: !1492, line: 1914, type: !1497, isLocal: true, isDefinition: true, align: 32)
!1508 = !DIGlobalVariableExpression(var: !1509, expr: !DIExpression())
!1509 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1354, file: !1492, line: 1914, type: !1407, isLocal: true, isDefinition: true, align: 8)
!1510 = !DIGlobalVariableExpression(var: !1511, expr: !DIExpression())
!1511 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1354, file: !1492, line: 1914, type: !1407, isLocal: true, isDefinition: true, align: 8)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1354, file: !1492, line: 1914, type: !1514, isLocal: true, isDefinition: true)
!1514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1516, line: 22, size: 224, elements: !1517)
!1516 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1517 = !{!1518, !1519, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1515, file: !1516, line: 24, baseType: !1439, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1515, file: !1516, line: 26, baseType: !1520, size: 32, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1522)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !939, line: 343, size: 64, elements: !1523)
!1523 = !{!1524, !1525}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1522, file: !939, line: 344, baseType: !110, size: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1522, file: !939, line: 345, baseType: !110, size: 32, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1515, file: !1516, line: 28, baseType: !234, size: 32, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1515, file: !1516, line: 30, baseType: !360, size: 8, offset: 96)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1515, file: !1516, line: 32, baseType: !109, size: 32, offset: 128)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1515, file: !1516, line: 34, baseType: !360, size: 8, offset: 160)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1515, file: !1516, line: 36, baseType: !360, size: 8, offset: 168)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1515, file: !1516, line: 38, baseType: !360, size: 8, offset: 176)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1515, file: !1516, line: 40, baseType: !360, size: 8, offset: 184)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1515, file: !1516, line: 41, baseType: !1534, size: 32, offset: 192)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1537, line: 60, size: 64, elements: !1538)
!1537 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1538 = !{!1539, !1555}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1536, file: !1537, line: 69, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1537, line: 50, size: 64, elements: !1543)
!1543 = !{!1544, !1553, !1554}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1542, file: !1537, line: 52, baseType: !1545, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1547)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1548, line: 37, baseType: !1549)
!1548 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1548, line: 32, size: 64, elements: !1550)
!1550 = !{!1551, !1552}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1549, file: !1548, line: 34, baseType: !110, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1549, file: !1548, line: 36, baseType: !110, size: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1542, file: !1537, line: 54, baseType: !180, size: 8, offset: 32)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1542, file: !1537, line: 56, baseType: !180, size: 8, offset: 40)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1536, file: !1537, line: 71, baseType: !180, size: 8, offset: 32)
!1556 = !DIGlobalVariableExpression(var: !1557, expr: !DIExpression())
!1557 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1354, file: !1492, line: 1914, type: !1558, isLocal: true, isDefinition: true)
!1558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1521, size: 64, elements: !530)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1354, file: !1492, line: 1914, type: !1535, isLocal: true, isDefinition: true)
!1561 = !DIGlobalVariableExpression(var: !1562, expr: !DIExpression())
!1562 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1354, file: !1492, line: 1914, type: !1563, isLocal: true, isDefinition: true)
!1563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1541, size: 64, elements: !530)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1354, file: !1492, line: 1914, type: !1566, isLocal: true, isDefinition: true)
!1566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1546, size: 128, elements: !175)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1354, file: !1492, line: 1539, type: !1391, isLocal: true, isDefinition: true)
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1354, file: !1492, line: 1914, type: !1571, isLocal: true, isDefinition: true)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1516, line: 74, size: 64, elements: !1572)
!1572 = !{!1573, !1574}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1571, file: !1516, line: 76, baseType: !110, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1571, file: !1516, line: 78, baseType: !1398, size: 32, offset: 32)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1354, file: !1492, line: 1914, type: !1514, isLocal: true, isDefinition: true)
!1577 = !DIGlobalVariableExpression(var: !1578, expr: !DIExpression())
!1578 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1354, file: !1492, line: 1914, type: !1558, isLocal: true, isDefinition: true)
!1579 = !DIGlobalVariableExpression(var: !1580, expr: !DIExpression())
!1580 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1354, file: !1492, line: 1914, type: !1535, isLocal: true, isDefinition: true)
!1581 = !DIGlobalVariableExpression(var: !1582, expr: !DIExpression())
!1582 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1354, file: !1492, line: 1914, type: !1563, isLocal: true, isDefinition: true)
!1583 = !DIGlobalVariableExpression(var: !1584, expr: !DIExpression())
!1584 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1354, file: !1492, line: 1914, type: !1566, isLocal: true, isDefinition: true)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1354, file: !1492, line: 1914, type: !1571, isLocal: true, isDefinition: true)
!1587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1588)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1589)
!1589 = !{!1590, !1591}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1588, file: !291, line: 17, baseType: !279, size: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1588, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1594, file: !1672, line: 65, type: !316, isLocal: true, isDefinition: true)
!1594 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1595, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1596, retainedTypes: !1597, globals: !1669, splitDebugInlining: false, nameTableKind: None)
!1595 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!1596 = !{!725}
!1597 = !{!103, !1598, !854, !180, !110, !1606, !1637}
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !548, line: 712, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 706, size: 128, elements: !1601)
!1601 = !{!1602, !1603, !1604, !1605}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1600, file: !548, line: 708, baseType: !316, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1600, file: !548, line: 709, baseType: !316, size: 32, offset: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1600, file: !548, line: 710, baseType: !316, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1600, file: !548, line: 711, baseType: !552, size: 32, offset: 96)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !548, line: 360, baseType: !1608)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 345, size: 28704, elements: !1609)
!1609 = !{!1610, !1612, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1627, !1632, !1636}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1608, file: !548, line: 347, baseType: !1611, size: 256)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1237)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1608, file: !548, line: 348, baseType: !1613, size: 768, offset: 256)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1614)
!1614 = !{!1615}
!1615 = !DISubrange(count: 24)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1608, file: !548, line: 349, baseType: !1611, size: 256, offset: 1024)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1608, file: !548, line: 350, baseType: !1613, size: 768, offset: 1280)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1608, file: !548, line: 351, baseType: !1611, size: 256, offset: 2048)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1608, file: !548, line: 352, baseType: !1613, size: 768, offset: 2304)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1608, file: !548, line: 353, baseType: !1611, size: 256, offset: 3072)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1608, file: !548, line: 354, baseType: !1613, size: 768, offset: 3328)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1608, file: !548, line: 355, baseType: !1611, size: 256, offset: 4096)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1608, file: !548, line: 356, baseType: !1624, size: 1792, offset: 4352)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1625)
!1625 = !{!1626}
!1626 = !DISubrange(count: 56)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1608, file: !548, line: 357, baseType: !1628, size: 1920, offset: 6144)
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 1920, elements: !1630)
!1629 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !180)
!1630 = !{!1631}
!1631 = !DISubrange(count: 240)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1608, file: !548, line: 358, baseType: !1633, size: 20608, offset: 8064)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1634)
!1634 = !{!1635}
!1635 = !DISubrange(count: 644)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1608, file: !548, line: 359, baseType: !316, size: 32, offset: 28672)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !1640)
!1640 = !{!1641, !1642, !1643, !1644, !1645, !1646, !1647, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1660, !1661, !1662, !1664, !1666, !1668}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1639, file: !548, line: 381, baseType: !552, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1639, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1639, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1639, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1639, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1639, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1639, file: !548, line: 387, baseType: !1648, size: 96, offset: 192)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 96, elements: !1649)
!1649 = !{!1650}
!1650 = !DISubrange(count: 12)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1639, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1639, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1639, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1639, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1639, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1639, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1639, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1639, file: !548, line: 395, baseType: !1659, size: 64, offset: 512)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !552, size: 64, elements: !175)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1639, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1639, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1639, file: !548, line: 398, baseType: !1663, size: 128, offset: 640)
!1663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !552, size: 128, elements: !796)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1639, file: !548, line: 399, baseType: !1665, size: 160, offset: 768)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !552, size: 160, elements: !1272)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1639, file: !548, line: 400, baseType: !1667, size: 160, offset: 928)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1272)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1639, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!1669 = !{!1670, !1696, !1701, !1703, !1705, !1592}
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1594, file: !1672, line: 285, type: !1673, isLocal: true, isDefinition: true, align: 32)
!1672 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !1675)
!1675 = !{!1676, !1695}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1674, file: !340, line: 60, baseType: !1677, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!109, !1680}
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1682)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1683)
!1683 = !{!1684, !1685, !1686, !1687, !1693, !1694}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1682, file: !349, line: 380, baseType: !279, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1682, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1682, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1682, file: !349, line: 386, baseType: !1688, size: 32, offset: 96)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 32)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1690)
!1690 = !{!1691, !1692}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1689, file: !349, line: 359, baseType: !180, size: 8)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1689, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1682, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1682, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1674, file: !340, line: 65, baseType: !1680, size: 32, offset: 32)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "lock", scope: !1594, file: !1672, line: 34, type: !1698, isLocal: true, isDefinition: true)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !1699)
!1699 = !{!1700}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1698, file: !253, line: 52, baseType: !22, size: 32)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "last_load", scope: !1594, file: !1672, line: 36, type: !110, isLocal: true, isDefinition: true)
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1594, file: !1672, line: 48, type: !110, isLocal: true, isDefinition: true)
!1705 = !DIGlobalVariableExpression(var: !1706, expr: !DIExpression())
!1706 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1594, file: !1672, line: 54, type: !110, isLocal: true, isDefinition: true)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1709, file: !1790, line: 22, type: !1792, isLocal: true, isDefinition: true)
!1709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1710, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !616, retainedTypes: !1711, globals: !1787, splitDebugInlining: false, nameTableKind: None)
!1710 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!1711 = !{!1712, !1776, !1781, !664, !623, !617, !1786, !107}
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1714)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !618, line: 523, size: 288, elements: !1715)
!1715 = !{!1716, !1735, !1739, !1743, !1747, !1748, !1749, !1753, !1772}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1714, file: !618, line: 524, baseType: !1717, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!109, !1720, !652, !653}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1722)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1723)
!1723 = !{!1724, !1725, !1726, !1727, !1733, !1734}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1722, file: !349, line: 380, baseType: !279, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1722, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1722, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1722, file: !349, line: 386, baseType: !1728, size: 32, offset: 96)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1730)
!1730 = !{!1731, !1732}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1729, file: !349, line: 359, baseType: !180, size: 8)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1729, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1722, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1722, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1714, file: !618, line: 530, baseType: !1736, size: 32, offset: 32)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!1737 = !DISubroutineType(types: !1738)
!1738 = !{!109, !1720, !658}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1714, file: !618, line: 532, baseType: !1740, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 32)
!1741 = !DISubroutineType(types: !1742)
!1742 = !{!109, !1720, !664, !659}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1714, file: !618, line: 535, baseType: !1744, size: 32, offset: 96)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!109, !1720, !664}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1714, file: !618, line: 537, baseType: !1744, size: 32, offset: 128)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1714, file: !618, line: 539, baseType: !1744, size: 32, offset: 160)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1714, file: !618, line: 541, baseType: !1750, size: 32, offset: 192)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1751 = !DISubroutineType(types: !1752)
!1752 = !{!109, !1720, !652, !617, !623}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1714, file: !618, line: 544, baseType: !1754, size: 32, offset: 224)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = !DISubroutineType(types: !1756)
!1756 = !{!109, !1720, !1757, !360}
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !618, line: 478, size: 96, elements: !1759)
!1759 = !{!1760, !1766, !1771}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1758, file: !618, line: 482, baseType: !1761, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !684, line: 33, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !684, line: 29, size: 32, elements: !1763)
!1763 = !{!1764}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1762, file: !684, line: 30, baseType: !1765, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1758, file: !618, line: 485, baseType: !1767, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !618, line: 464, baseType: !1768)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DISubroutineType(types: !1770)
!1770 = !{null, !1720, !1757, !664}
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1758, file: !618, line: 493, baseType: !664, size: 32, offset: 64)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1714, file: !618, line: 547, baseType: !1773, size: 32, offset: 256)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 32)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!110, !1720}
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1778)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !618, line: 428, size: 32, elements: !1779)
!1779 = !{!1780}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1778, file: !618, line: 434, baseType: !664, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !618, line: 441, size: 32, elements: !1784)
!1784 = !{!1785}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1783, file: !618, line: 447, baseType: !664, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 32)
!1787 = !{!1788, !1707}
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1789 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1709, file: !1790, line: 37, type: !1791, isLocal: true, isDefinition: true)
!1790 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !234)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1793, size: 352, elements: !882)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1794 = !DIGlobalVariableExpression(var: !1795, expr: !DIExpression())
!1795 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1796, file: !1820, line: 129, type: !1828, isLocal: false, isDefinition: true)
!1796 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1797, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1798, globals: !1817, splitDebugInlining: false, nameTableKind: None)
!1797 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!1798 = !{!1799}
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !1801)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !1802)
!1802 = !{!1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1801, file: !312, line: 372, baseType: !316, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1801, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1801, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1801, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1801, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1801, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1801, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1801, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1801, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1801, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1801, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1801, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1801, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1801, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!1817 = !{!1818, !1821, !1825, !1794}
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1796, file: !1820, line: 126, type: !110, isLocal: false, isDefinition: true)
!1820 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1821 = !DIGlobalVariableExpression(var: !1822, expr: !DIExpression())
!1822 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1796, file: !1820, line: 127, type: !1823, isLocal: false, isDefinition: true)
!1823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1824, size: 72, elements: !1254)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!1825 = !DIGlobalVariableExpression(var: !1826, expr: !DIExpression())
!1826 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1796, file: !1820, line: 128, type: !1827, isLocal: false, isDefinition: true)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1824, size: 128, elements: !840)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1824, size: 64, elements: !1237)
!1829 = !DIGlobalVariableExpression(var: !1830, expr: !DIExpression())
!1830 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1831, file: !1834, line: 23, type: !1835, isLocal: false, isDefinition: true)
!1831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1833, splitDebugInlining: false, nameTableKind: None)
!1832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!1833 = !{!1829}
!1834 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1838, file: !1842, line: 37, type: !2096, isLocal: false, isDefinition: true)
!1838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1839, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1840, retainedTypes: !1849, globals: !1922, splitDebugInlining: false, nameTableKind: None)
!1839 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!1840 = !{!1841, !30, !725}
!1841 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1842, line: 63, baseType: !32, size: 32, elements: !1843)
!1842 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1843 = !{!1844, !1845, !1846, !1847, !1848}
!1844 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1845 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1846 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1847 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1848 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1849 = !{!234, !107, !109, !1850, !285, !110, !1880, !854, !180, !1905}
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1853, line: 51, size: 64, elements: !1854)
!1853 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1854 = !{!1855, !1875}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1852, file: !1853, line: 52, baseType: !1856, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1853, line: 38, baseType: !1857)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!109, !1860, !286, !194}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !1863)
!1863 = !{!1864, !1865, !1866, !1867, !1873, !1874}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1862, file: !349, line: 380, baseType: !279, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1862, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1862, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1862, file: !349, line: 386, baseType: !1868, size: 32, offset: 96)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1869, file: !349, line: 359, baseType: !180, size: 8)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1869, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1862, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1862, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1852, file: !1853, line: 53, baseType: !1876, size: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1853, line: 47, baseType: !1877)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = !DISubroutineType(types: !1879)
!1879 = !{!109, !1860, !286, !194, !110}
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !1882)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !1883)
!1883 = !{!1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1882, file: !548, line: 381, baseType: !552, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1882, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1882, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1882, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1882, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1882, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1882, file: !548, line: 387, baseType: !1648, size: 96, offset: 192)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1882, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1882, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1882, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1882, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1882, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1882, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1882, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1882, file: !548, line: 395, baseType: !1659, size: 64, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1882, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1882, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1882, file: !548, line: 398, baseType: !1663, size: 128, offset: 640)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1882, file: !548, line: 399, baseType: !1665, size: 160, offset: 768)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1882, file: !548, line: 400, baseType: !1667, size: 160, offset: 928)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1882, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !548, line: 360, baseType: !1907)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 345, size: 28704, elements: !1908)
!1908 = !{!1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1907, file: !548, line: 347, baseType: !1611, size: 256)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1907, file: !548, line: 348, baseType: !1613, size: 768, offset: 256)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1907, file: !548, line: 349, baseType: !1611, size: 256, offset: 1024)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1907, file: !548, line: 350, baseType: !1613, size: 768, offset: 1280)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1907, file: !548, line: 351, baseType: !1611, size: 256, offset: 2048)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1907, file: !548, line: 352, baseType: !1613, size: 768, offset: 2304)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1907, file: !548, line: 353, baseType: !1611, size: 256, offset: 3072)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1907, file: !548, line: 354, baseType: !1613, size: 768, offset: 3328)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1907, file: !548, line: 355, baseType: !1611, size: 256, offset: 4096)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1907, file: !548, line: 356, baseType: !1624, size: 1792, offset: 4352)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1907, file: !548, line: 357, baseType: !1628, size: 1920, offset: 6144)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1907, file: !548, line: 358, baseType: !1633, size: 20608, offset: 8064)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1907, file: !548, line: 359, baseType: !316, size: 32, offset: 28672)
!1922 = !{!1836, !1923, !2049, !2056, !2058, !2061, !2066, !2068, !2073}
!1923 = !DIGlobalVariableExpression(var: !1924, expr: !DIExpression())
!1924 = distinct !DIGlobalVariable(name: "_kernel", scope: !1838, file: !1842, line: 40, type: !1925, isLocal: false, isDefinition: true)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1926)
!1926 = !{!1927, !2044}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1925, file: !122, line: 159, baseType: !1928, size: 192)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 192, elements: !530)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1930)
!1930 = !{!1931, !1932, !1933, !2037, !2038, !2039, !2040}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1929, file: !122, line: 102, baseType: !110, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1929, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1929, file: !122, line: 108, baseType: !1934, size: 32, offset: 64)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 32)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !1936)
!1936 = !{!1937, !1995, !2007, !2008, !2009, !2010, !2011, !2017, !2032}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1935, file: !158, line: 247, baseType: !1938, size: 384)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !1939)
!1939 = !{!1940, !1964, !1971, !1972, !1973, !1982, !1983, !1984}
!1940 = !DIDerivedType(tag: DW_TAG_member, scope: !1938, file: !158, line: 60, baseType: !1941, size: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1938, file: !158, line: 60, size: 64, elements: !1942)
!1942 = !{!1943, !1958}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1941, file: !158, line: 61, baseType: !1944, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1945)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1946)
!1946 = !{!1947, !1953}
!1947 = !DIDerivedType(tag: DW_TAG_member, scope: !1945, file: !127, line: 38, baseType: !1948, size: 32)
!1948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1945, file: !127, line: 38, size: 32, elements: !1949)
!1949 = !{!1950, !1952}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1948, file: !127, line: 39, baseType: !1951, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1948, file: !127, line: 40, baseType: !1951, size: 32)
!1953 = !DIDerivedType(tag: DW_TAG_member, scope: !1945, file: !127, line: 42, baseType: !1954, size: 32, offset: 32)
!1954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1945, file: !127, line: 42, size: 32, elements: !1955)
!1955 = !{!1956, !1957}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1954, file: !127, line: 43, baseType: !1951, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1954, file: !127, line: 44, baseType: !1951, size: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1941, file: !158, line: 62, baseType: !1959, size: 64)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !1960)
!1960 = !{!1961}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1959, file: !170, line: 50, baseType: !1962, size: 64)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1963, size: 64, elements: !175)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1938, file: !158, line: 68, baseType: !1965, size: 32, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1967)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1968)
!1968 = !{!1969}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1967, file: !122, line: 232, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1945)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1938, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1938, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!1973 = !DIDerivedType(tag: DW_TAG_member, scope: !1938, file: !158, line: 90, baseType: !1974, size: 16, offset: 112)
!1974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1938, file: !158, line: 90, size: 16, elements: !1975)
!1975 = !{!1976, !1981}
!1976 = !DIDerivedType(tag: DW_TAG_member, scope: !1974, file: !158, line: 91, baseType: !1977, size: 16)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1974, file: !158, line: 91, size: 16, elements: !1978)
!1978 = !{!1979, !1980}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1977, file: !158, line: 96, baseType: !190, size: 8)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1977, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1974, file: !158, line: 100, baseType: !194, size: 16)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1938, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1938, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1938, file: !158, line: 131, baseType: !1985, size: 192, offset: 192)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !1986)
!1986 = !{!1987, !1988, !1994}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1985, file: !122, line: 245, baseType: !1944, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1985, file: !122, line: 246, baseType: !1989, size: 32, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !1990)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = !DISubroutineType(types: !1992)
!1992 = !{null, !1993}
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1985, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1935, file: !158, line: 250, baseType: !1996, size: 288, offset: 384)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1996, file: !211, line: 26, baseType: !110, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1996, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1996, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1996, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1996, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1996, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1996, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1996, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1996, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1935, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1935, file: !158, line: 256, baseType: !1966, size: 64, offset: 704)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1935, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1935, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1935, file: !158, line: 300, baseType: !2012, size: 96, offset: 1056)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2013)
!2013 = !{!2014, !2015, !2016}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2012, file: !158, line: 153, baseType: !22, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2012, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2012, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1935, file: !158, line: 325, baseType: !2018, size: 32, offset: 1152)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2020)
!2020 = !{!2021, !2027, !2028}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2019, file: !118, line: 5074, baseType: !2022, size: 96)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2023)
!2023 = !{!2024, !2025, !2026}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2022, file: !243, line: 57, baseType: !246, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2022, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2022, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2019, file: !118, line: 5075, baseType: !1966, size: 64, offset: 96)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2019, file: !118, line: 5076, baseType: !2029, size: 32, offset: 160)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2030)
!2030 = !{!2031}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2029, file: !253, line: 52, baseType: !22, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1935, file: !158, line: 343, baseType: !2033, size: 64, offset: 1184)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2034)
!2034 = !{!2035, !2036}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2033, file: !211, line: 63, baseType: !110, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2033, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1929, file: !122, line: 111, baseType: !1934, size: 32, offset: 96)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1929, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1929, file: !122, line: 127, baseType: !180, size: 8, offset: 160)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1929, file: !122, line: 153, baseType: !2041, offset: 168)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2042, line: 33, elements: !2043)
!2042 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2043 = !{}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1925, file: !122, line: 170, baseType: !2045, size: 96, offset: 192)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2046)
!2046 = !{!2047, !2048}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2045, file: !122, line: 86, baseType: !1934, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2045, file: !122, line: 90, baseType: !1970, size: 64, offset: 32)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1838, file: !1842, line: 43, type: !2051, isLocal: false, isDefinition: true, align: 512)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 8704, elements: !2055)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !2053)
!2053 = !{!2054}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2052, file: !147, line: 48, baseType: !150, size: 8)
!2055 = !{!153}
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1838, file: !1842, line: 44, type: !1935, isLocal: false, isDefinition: true)
!2058 = !DIGlobalVariableExpression(var: !2059, expr: !DIExpression())
!2059 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1838, file: !1842, line: 48, type: !2060, isLocal: false, isDefinition: true)
!2060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1935, size: 1280, elements: !530)
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1838, file: !1842, line: 86, type: !2063, isLocal: false, isDefinition: true, align: 512)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 16896, elements: !2064)
!2064 = !{!531, !2065}
!2065 = !DISubrange(count: 2112)
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1838, file: !1842, line: 217, type: !360, isLocal: false, isDefinition: true)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1838, file: !1842, line: 50, type: !2070, isLocal: true, isDefinition: true, align: 512)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 2560, elements: !2071)
!2071 = !{!531, !2072}
!2072 = !DISubrange(count: 320)
!2073 = !DIGlobalVariableExpression(var: !2074, expr: !DIExpression())
!2074 = distinct !DIGlobalVariable(name: "levels", scope: !2075, file: !1842, line: 232, type: !2095, isLocal: true, isDefinition: true)
!2075 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1842, file: !1842, line: 230, type: !2076, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !2078)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{null, !1841}
!2078 = !{!2079, !2080, !2090, !2094}
!2079 = !DILocalVariable(name: "level", arg: 1, scope: !2075, file: !1842, line: 230, type: !1841)
!2080 = !DILocalVariable(name: "entry", scope: !2075, file: !1842, line: 244, type: !2081)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2083)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !340, line: 51, size: 64, elements: !2084)
!2084 = !{!2085, !2089}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2083, file: !340, line: 60, baseType: !2086, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 32)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{!109, !1860}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2083, file: !340, line: 65, baseType: !1860, size: 32, offset: 32)
!2090 = !DILocalVariable(name: "dev", scope: !2091, file: !1842, line: 247, type: !1860)
!2091 = distinct !DILexicalBlock(scope: !2092, file: !1842, line: 246, column: 64)
!2092 = distinct !DILexicalBlock(scope: !2093, file: !1842, line: 246, column: 2)
!2093 = distinct !DILexicalBlock(scope: !2075, file: !1842, line: 246, column: 2)
!2094 = !DILocalVariable(name: "rc", scope: !2091, file: !1842, line: 248, type: !109)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2081, size: 192, elements: !1263)
!2096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2097)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2098)
!2098 = !{!2099, !2100}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2097, file: !291, line: 17, baseType: !279, size: 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2097, file: !291, line: 18, baseType: !180, size: 8, offset: 32)
!2101 = !DIGlobalVariableExpression(var: !2102, expr: !DIExpression())
!2102 = distinct !DIGlobalVariable(name: "states_str", scope: !2103, file: !2104, line: 276, type: !2228, isLocal: true, isDefinition: true)
!2103 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2104, file: !2104, line: 271, type: !2105, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2219)
!2104 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2105 = !DISubroutineType(types: !2106)
!2106 = !{!279, !2107, !285, !234}
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2108)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2110)
!2110 = !{!2111, !2169, !2181, !2182, !2183, !2184, !2185, !2191, !2206}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2109, file: !158, line: 247, baseType: !2112, size: 384)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2113)
!2113 = !{!2114, !2138, !2145, !2146, !2147, !2156, !2157, !2158}
!2114 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !158, line: 60, baseType: !2115, size: 64)
!2115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2112, file: !158, line: 60, size: 64, elements: !2116)
!2116 = !{!2117, !2132}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2115, file: !158, line: 61, baseType: !2118, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2119)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2120)
!2120 = !{!2121, !2127}
!2121 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !127, line: 38, baseType: !2122, size: 32)
!2122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !127, line: 38, size: 32, elements: !2123)
!2123 = !{!2124, !2126}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2122, file: !127, line: 39, baseType: !2125, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2122, file: !127, line: 40, baseType: !2125, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !127, line: 42, baseType: !2128, size: 32, offset: 32)
!2128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !127, line: 42, size: 32, elements: !2129)
!2129 = !{!2130, !2131}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2128, file: !127, line: 43, baseType: !2125, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2128, file: !127, line: 44, baseType: !2125, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2115, file: !158, line: 62, baseType: !2133, size: 64)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2134)
!2134 = !{!2135}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2133, file: !170, line: 50, baseType: !2136, size: 64)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2137, size: 64, elements: !175)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2112, file: !158, line: 68, baseType: !2139, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2141)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2142)
!2142 = !{!2143}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2141, file: !122, line: 232, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2119)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2112, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2112, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2147 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !158, line: 90, baseType: !2148, size: 16, offset: 112)
!2148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2112, file: !158, line: 90, size: 16, elements: !2149)
!2149 = !{!2150, !2155}
!2150 = !DIDerivedType(tag: DW_TAG_member, scope: !2148, file: !158, line: 91, baseType: !2151, size: 16)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2148, file: !158, line: 91, size: 16, elements: !2152)
!2152 = !{!2153, !2154}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2151, file: !158, line: 96, baseType: !190, size: 8)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2151, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2148, file: !158, line: 100, baseType: !194, size: 16)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2112, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2112, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2112, file: !158, line: 131, baseType: !2159, size: 192, offset: 192)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2160)
!2160 = !{!2161, !2162, !2168}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2159, file: !122, line: 245, baseType: !2118, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2159, file: !122, line: 246, baseType: !2163, size: 32, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2164)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 32)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{null, !2167}
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2159, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2109, file: !158, line: 250, baseType: !2170, size: 288, offset: 384)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2171)
!2171 = !{!2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2170, file: !211, line: 26, baseType: !110, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2170, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2170, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2170, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2170, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2170, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2170, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2170, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2170, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2109, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2109, file: !158, line: 256, baseType: !2140, size: 64, offset: 704)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2109, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2109, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2109, file: !158, line: 300, baseType: !2186, size: 96, offset: 1056)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2187)
!2187 = !{!2188, !2189, !2190}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2186, file: !158, line: 153, baseType: !22, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2186, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2186, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2109, file: !158, line: 325, baseType: !2192, size: 32, offset: 1152)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 32)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2194)
!2194 = !{!2195, !2201, !2202}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2193, file: !118, line: 5074, baseType: !2196, size: 96)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2197)
!2197 = !{!2198, !2199, !2200}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2196, file: !243, line: 57, baseType: !246, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2196, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2196, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2193, file: !118, line: 5075, baseType: !2140, size: 64, offset: 96)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2193, file: !118, line: 5076, baseType: !2203, size: 32, offset: 160)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2204)
!2204 = !{!2205}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2203, file: !253, line: 52, baseType: !22, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2109, file: !158, line: 343, baseType: !2207, size: 64, offset: 1184)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2208)
!2208 = !{!2209, !2210}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2207, file: !211, line: 63, baseType: !110, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2207, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2211 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2212, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2213, globals: !2215, splitDebugInlining: false, nameTableKind: None)
!2212 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2213 = !{!107, !279, !103, !180, !22, !109, !2214, !24, !234, !285, !110, !111}
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2215 = !{!2101, !2216}
!2216 = !DIGlobalVariableExpression(var: !2217, expr: !DIExpression())
!2217 = distinct !DIGlobalVariable(name: "states_sz", scope: !2103, file: !2104, line: 279, type: !2218, isLocal: true, isDefinition: true)
!2218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1791, size: 256, elements: !1237)
!2219 = !{!2220, !2221, !2222, !2223, !2224, !2225, !2226}
!2220 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2103, file: !2104, line: 271, type: !2107)
!2221 = !DILocalVariable(name: "buf", arg: 2, scope: !2103, file: !2104, line: 271, type: !285)
!2222 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2103, file: !2104, line: 271, type: !234)
!2223 = !DILocalVariable(name: "off", scope: !2103, file: !2104, line: 273, type: !234)
!2224 = !DILocalVariable(name: "bit", scope: !2103, file: !2104, line: 274, type: !180)
!2225 = !DILocalVariable(name: "thread_state", scope: !2103, file: !2104, line: 275, type: !180)
!2226 = !DILocalVariable(name: "index", scope: !2227, file: !2104, line: 293, type: !180)
!2227 = distinct !DILexicalBlock(scope: !2103, file: !2104, line: 293, column: 2)
!2228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1237)
!2229 = !DIGlobalVariableExpression(var: !2230, expr: !DIExpression())
!2230 = distinct !DIGlobalVariable(name: "lock", scope: !2231, file: !2339, line: 47, type: !2330, isLocal: true, isDefinition: true)
!2231 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2232, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2233, globals: !2338, splitDebugInlining: false, nameTableKind: None)
!2232 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2233 = !{!360, !107, !109, !2234, !2249}
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2236)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2237)
!2237 = !{!2238, !2244}
!2238 = !DIDerivedType(tag: DW_TAG_member, scope: !2236, file: !127, line: 38, baseType: !2239, size: 32)
!2239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2236, file: !127, line: 38, size: 32, elements: !2240)
!2240 = !{!2241, !2243}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2239, file: !127, line: 39, baseType: !2242, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2239, file: !127, line: 40, baseType: !2242, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, scope: !2236, file: !127, line: 42, baseType: !2245, size: 32, offset: 32)
!2245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2236, file: !127, line: 42, size: 32, elements: !2246)
!2246 = !{!2247, !2248}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2245, file: !127, line: 43, baseType: !2242, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2245, file: !127, line: 44, baseType: !2242, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2251)
!2251 = !{!2252, !2296, !2308, !2309, !2310, !2311, !2312, !2318, !2333}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2250, file: !158, line: 247, baseType: !2253, size: 384)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2254)
!2254 = !{!2255, !2265, !2272, !2273, !2274, !2283, !2284, !2285}
!2255 = !DIDerivedType(tag: DW_TAG_member, scope: !2253, file: !158, line: 60, baseType: !2256, size: 64)
!2256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2253, file: !158, line: 60, size: 64, elements: !2257)
!2257 = !{!2258, !2259}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2256, file: !158, line: 61, baseType: !2235, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2256, file: !158, line: 62, baseType: !2260, size: 64)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2261)
!2261 = !{!2262}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2260, file: !170, line: 50, baseType: !2263, size: 64)
!2263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2264, size: 64, elements: !175)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2253, file: !158, line: 68, baseType: !2266, size: 32, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2268)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2269)
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2268, file: !122, line: 232, baseType: !2271, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2236)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2253, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2253, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2274 = !DIDerivedType(tag: DW_TAG_member, scope: !2253, file: !158, line: 90, baseType: !2275, size: 16, offset: 112)
!2275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2253, file: !158, line: 90, size: 16, elements: !2276)
!2276 = !{!2277, !2282}
!2277 = !DIDerivedType(tag: DW_TAG_member, scope: !2275, file: !158, line: 91, baseType: !2278, size: 16)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2275, file: !158, line: 91, size: 16, elements: !2279)
!2279 = !{!2280, !2281}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2278, file: !158, line: 96, baseType: !190, size: 8)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2278, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2275, file: !158, line: 100, baseType: !194, size: 16)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2253, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2253, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2253, file: !158, line: 131, baseType: !2286, size: 192, offset: 192)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2287)
!2287 = !{!2288, !2289, !2295}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2286, file: !122, line: 245, baseType: !2235, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2286, file: !122, line: 246, baseType: !2290, size: 32, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2291)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 32)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{null, !2294}
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2286, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2250, file: !158, line: 250, baseType: !2297, size: 288, offset: 384)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2298)
!2298 = !{!2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2297, file: !211, line: 26, baseType: !110, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2297, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2297, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2297, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2297, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2297, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2297, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2297, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2297, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2250, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2250, file: !158, line: 256, baseType: !2267, size: 64, offset: 704)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2250, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2250, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2250, file: !158, line: 300, baseType: !2313, size: 96, offset: 1056)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2314)
!2314 = !{!2315, !2316, !2317}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2313, file: !158, line: 153, baseType: !22, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2313, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2313, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2250, file: !158, line: 325, baseType: !2319, size: 32, offset: 1152)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 32)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2321)
!2321 = !{!2322, !2328, !2329}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2320, file: !118, line: 5074, baseType: !2323, size: 96)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2324)
!2324 = !{!2325, !2326, !2327}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2323, file: !243, line: 57, baseType: !246, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2323, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2323, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2320, file: !118, line: 5075, baseType: !2267, size: 64, offset: 96)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2320, file: !118, line: 5076, baseType: !2330, size: 32, offset: 160)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2331)
!2331 = !{!2332}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2330, file: !253, line: 52, baseType: !22, size: 32)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2250, file: !158, line: 343, baseType: !2334, size: 64, offset: 1184)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2335)
!2335 = !{!2336, !2337}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2334, file: !211, line: 63, baseType: !110, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2334, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2338 = !{!2229}
!2339 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2340 = !DIGlobalVariableExpression(var: !2341, expr: !DIExpression())
!2341 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2342, file: !2453, line: 56, type: !2440, isLocal: false, isDefinition: true)
!2342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2343, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2344, globals: !2450, splitDebugInlining: false, nameTableKind: None)
!2343 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2344 = !{!2345, !285, !107, !2448, !286, !103, !854, !109, !110, !111, !2449}
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !2347)
!2347 = !{!2348, !2406, !2418, !2419, !2420, !2421, !2422, !2428, !2443}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2346, file: !158, line: 247, baseType: !2349, size: 384)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !2350)
!2350 = !{!2351, !2375, !2382, !2383, !2384, !2393, !2394, !2395}
!2351 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !158, line: 60, baseType: !2352, size: 64)
!2352 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2349, file: !158, line: 60, size: 64, elements: !2353)
!2353 = !{!2354, !2369}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2352, file: !158, line: 61, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2357)
!2357 = !{!2358, !2364}
!2358 = !DIDerivedType(tag: DW_TAG_member, scope: !2356, file: !127, line: 38, baseType: !2359, size: 32)
!2359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2356, file: !127, line: 38, size: 32, elements: !2360)
!2360 = !{!2361, !2363}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2359, file: !127, line: 39, baseType: !2362, size: 32)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2359, file: !127, line: 40, baseType: !2362, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, scope: !2356, file: !127, line: 42, baseType: !2365, size: 32, offset: 32)
!2365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2356, file: !127, line: 42, size: 32, elements: !2366)
!2366 = !{!2367, !2368}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2365, file: !127, line: 43, baseType: !2362, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2365, file: !127, line: 44, baseType: !2362, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2352, file: !158, line: 62, baseType: !2370, size: 64)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !2371)
!2371 = !{!2372}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2370, file: !170, line: 50, baseType: !2373, size: 64)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 64, elements: !175)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2349, file: !158, line: 68, baseType: !2376, size: 32, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2379)
!2379 = !{!2380}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2378, file: !122, line: 232, baseType: !2381, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2356)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2349, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2349, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!2384 = !DIDerivedType(tag: DW_TAG_member, scope: !2349, file: !158, line: 90, baseType: !2385, size: 16, offset: 112)
!2385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2349, file: !158, line: 90, size: 16, elements: !2386)
!2386 = !{!2387, !2392}
!2387 = !DIDerivedType(tag: DW_TAG_member, scope: !2385, file: !158, line: 91, baseType: !2388, size: 16)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2385, file: !158, line: 91, size: 16, elements: !2389)
!2389 = !{!2390, !2391}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2388, file: !158, line: 96, baseType: !190, size: 8)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2388, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2385, file: !158, line: 100, baseType: !194, size: 16)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2349, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2349, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2349, file: !158, line: 131, baseType: !2396, size: 192, offset: 192)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2397)
!2397 = !{!2398, !2399, !2405}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2396, file: !122, line: 245, baseType: !2355, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2396, file: !122, line: 246, baseType: !2400, size: 32, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2401)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 32)
!2402 = !DISubroutineType(types: !2403)
!2403 = !{null, !2404}
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2396, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2346, file: !158, line: 250, baseType: !2407, size: 288, offset: 384)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !2408)
!2408 = !{!2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2407, file: !211, line: 26, baseType: !110, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2407, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2407, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2407, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2407, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2407, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2407, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2407, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2407, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2346, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2346, file: !158, line: 256, baseType: !2377, size: 64, offset: 704)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2346, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2346, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2346, file: !158, line: 300, baseType: !2423, size: 96, offset: 1056)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !2424)
!2424 = !{!2425, !2426, !2427}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2423, file: !158, line: 153, baseType: !22, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2423, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2423, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2346, file: !158, line: 325, baseType: !2429, size: 32, offset: 1152)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2431)
!2431 = !{!2432, !2438, !2439}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2430, file: !118, line: 5074, baseType: !2433, size: 96)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !2434)
!2434 = !{!2435, !2436, !2437}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2433, file: !243, line: 57, baseType: !246, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2433, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2433, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2430, file: !118, line: 5075, baseType: !2377, size: 64, offset: 96)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2430, file: !118, line: 5076, baseType: !2440, size: 32, offset: 160)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2441)
!2441 = !{!2442}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2440, file: !253, line: 52, baseType: !22, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2346, file: !158, line: 343, baseType: !2444, size: 64, offset: 1184)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2444, file: !211, line: 63, baseType: !110, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2444, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 32)
!2450 = !{!2340, !2451, !2454, !2456}
!2451 = !DIGlobalVariableExpression(var: !2452, expr: !DIExpression())
!2452 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2342, file: !2453, line: 404, type: !109, isLocal: true, isDefinition: true)
!2453 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2454 = !DIGlobalVariableExpression(var: !2455, expr: !DIExpression())
!2455 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2342, file: !2453, line: 405, type: !109, isLocal: true, isDefinition: true)
!2456 = !DIGlobalVariableExpression(var: !2457, expr: !DIExpression())
!2457 = distinct !DIGlobalVariable(name: "pending_current", scope: !2342, file: !2453, line: 425, type: !2345, isLocal: true, isDefinition: true)
!2458 = !DIGlobalVariableExpression(var: !2459, expr: !DIExpression())
!2459 = distinct !DIGlobalVariable(name: "lock", scope: !2460, file: !2479, line: 14, type: !2480, isLocal: true, isDefinition: true)
!2460 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2461, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2462, globals: !2478, splitDebugInlining: false, nameTableKind: None)
!2461 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2462 = !{!107, !103, !109, !2463}
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2466)
!2466 = !{!2467, !2473}
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2465, file: !127, line: 38, baseType: !2468, size: 32)
!2468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2465, file: !127, line: 38, size: 32, elements: !2469)
!2469 = !{!2470, !2472}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2468, file: !127, line: 39, baseType: !2471, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2468, file: !127, line: 40, baseType: !2471, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !2465, file: !127, line: 42, baseType: !2474, size: 32, offset: 32)
!2474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2465, file: !127, line: 42, size: 32, elements: !2475)
!2475 = !{!2476, !2477}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2474, file: !127, line: 43, baseType: !2471, size: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2474, file: !127, line: 44, baseType: !2471, size: 32)
!2478 = !{!2458}
!2479 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2481)
!2481 = !{!2482}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2480, file: !253, line: 52, baseType: !22, size: 32)
!2483 = !DIGlobalVariableExpression(var: !2484, expr: !DIExpression())
!2484 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2485, file: !2515, line: 19, type: !2521, isLocal: true, isDefinition: true)
!2485 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2486, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2487, globals: !2512, splitDebugInlining: false, nameTableKind: None)
!2486 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2487 = !{!103, !107, !854, !110, !111, !109, !2488, !285, !105}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 32)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2490)
!2490 = !{!2491, !2506, !2511}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2489, file: !122, line: 245, baseType: !2492, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2493)
!2493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2494)
!2494 = !{!2495, !2501}
!2495 = !DIDerivedType(tag: DW_TAG_member, scope: !2493, file: !127, line: 38, baseType: !2496, size: 32)
!2496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2493, file: !127, line: 38, size: 32, elements: !2497)
!2497 = !{!2498, !2500}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2496, file: !127, line: 39, baseType: !2499, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2496, file: !127, line: 40, baseType: !2499, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, scope: !2493, file: !127, line: 42, baseType: !2502, size: 32, offset: 32)
!2502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2493, file: !127, line: 42, size: 32, elements: !2503)
!2503 = !{!2504, !2505}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2502, file: !127, line: 43, baseType: !2499, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2502, file: !127, line: 44, baseType: !2499, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2489, file: !122, line: 246, baseType: !2507, size: 32, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2508)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 32)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{null, !2488}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2489, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2512 = !{!2513, !2483, !2516, !2518}
!2513 = !DIGlobalVariableExpression(var: !2514, expr: !DIExpression())
!2514 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2485, file: !2515, line: 15, type: !111, isLocal: true, isDefinition: true)
!2515 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2516 = !DIGlobalVariableExpression(var: !2517, expr: !DIExpression())
!2517 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2485, file: !2515, line: 25, type: !109, isLocal: true, isDefinition: true)
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2485, file: !2515, line: 17, type: !2520, isLocal: true, isDefinition: true)
!2520 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2493)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !2522)
!2522 = !{!2523}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2521, file: !253, line: 52, baseType: !22, size: 32)
!2524 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2525, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2525 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2526 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2527, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2527 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2530, retainedTypes: !2550, splitDebugInlining: false, nameTableKind: None)
!2529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2530 = !{!2531, !2539}
!2531 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2532, line: 69, baseType: !32, size: 32, elements: !2533)
!2532 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2533 = !{!2534, !2535, !2536, !2537, !2538}
!2534 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2535 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2536 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2537 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2538 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2539 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2532, line: 56, baseType: !32, size: 32, elements: !2540)
!2540 = !{!2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549}
!2541 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2542 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2543 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2544 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2545 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2546 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2547 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2548 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2549 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2550 = !{!109, !2531, !2539, !2551, !191, !367, !2553, !2554, !181, !195, !279, !234, !107, !22, !32, !281, !2556, !2557, !102, !282, !106, !283, !2552, !2558, !2559, !2560, !2561}
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2532, line: 31, baseType: !2552)
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !235, line: 329, baseType: !32)
!2554 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2532, line: 32, baseType: !2555)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !235, line: 145, baseType: !109)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 32)
!2562 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2563, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2563 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2568, splitDebugInlining: false, nameTableKind: None)
!2567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2568 = !{!279, !181, !109, !32}
!2569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2570, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2571, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2570 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2571 = !{!2572, !30}
!2572 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2573, line: 27, baseType: !32, size: 32, elements: !2574)
!2573 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2574 = !{!2575, !2576, !2577, !2578, !2579}
!2575 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2576 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2577 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2578 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2579 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2580 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2581, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2582, retainedTypes: !2583, splitDebugInlining: false, nameTableKind: None)
!2581 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2582 = !{!725, !2572, !30}
!2583 = !{!872, !2584, !107, !109, !854, !110, !180, !2601}
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !548, line: 360, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 345, size: 28704, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2586, file: !548, line: 347, baseType: !1611, size: 256)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2586, file: !548, line: 348, baseType: !1613, size: 768, offset: 256)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2586, file: !548, line: 349, baseType: !1611, size: 256, offset: 1024)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2586, file: !548, line: 350, baseType: !1613, size: 768, offset: 1280)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2586, file: !548, line: 351, baseType: !1611, size: 256, offset: 2048)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2586, file: !548, line: 352, baseType: !1613, size: 768, offset: 2304)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2586, file: !548, line: 353, baseType: !1611, size: 256, offset: 3072)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2586, file: !548, line: 354, baseType: !1613, size: 768, offset: 3328)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2586, file: !548, line: 355, baseType: !1611, size: 256, offset: 4096)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2586, file: !548, line: 356, baseType: !1624, size: 1792, offset: 4352)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2586, file: !548, line: 357, baseType: !1628, size: 1920, offset: 6144)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2586, file: !548, line: 358, baseType: !1633, size: 20608, offset: 8064)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2586, file: !548, line: 359, baseType: !316, size: 32, offset: 28672)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2603)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2604)
!2604 = !{!2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2603, file: !548, line: 381, baseType: !552, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2603, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2603, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2603, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2603, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2603, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2603, file: !548, line: 387, baseType: !1648, size: 96, offset: 192)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2603, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2603, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2603, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2603, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2603, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2603, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2603, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2603, file: !548, line: 395, baseType: !1659, size: 64, offset: 512)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2603, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2603, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2603, file: !548, line: 398, baseType: !1663, size: 128, offset: 640)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2603, file: !548, line: 399, baseType: !1665, size: 160, offset: 768)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2603, file: !548, line: 400, baseType: !1667, size: 160, offset: 928)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2603, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2626 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2627, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2627 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2630, splitDebugInlining: false, nameTableKind: None)
!2629 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2630 = !{!107, !109, !22, !2631}
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2632, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2633)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2634)
!2634 = !{!2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2633, file: !548, line: 381, baseType: !552, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2633, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2633, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2633, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2633, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2633, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2633, file: !548, line: 387, baseType: !1648, size: 96, offset: 192)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2633, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2633, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2633, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2633, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2633, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2633, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2633, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2633, file: !548, line: 395, baseType: !1659, size: 64, offset: 512)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2633, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2633, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2633, file: !548, line: 398, baseType: !1663, size: 128, offset: 640)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2633, file: !548, line: 399, baseType: !1665, size: 160, offset: 768)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2633, file: !548, line: 400, baseType: !1667, size: 160, offset: 928)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2633, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2656 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2657, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2658, splitDebugInlining: false, nameTableKind: None)
!2657 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2658 = !{!2659, !107, !109}
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2661)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2662)
!2662 = !{!2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2661, file: !548, line: 381, baseType: !552, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2661, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2661, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2661, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2661, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2661, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2661, file: !548, line: 387, baseType: !1648, size: 96, offset: 192)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2661, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2661, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2661, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2661, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2661, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2661, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2661, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2661, file: !548, line: 395, baseType: !1659, size: 64, offset: 512)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2661, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2661, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2661, file: !548, line: 398, baseType: !1663, size: 128, offset: 640)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2661, file: !548, line: 399, baseType: !1665, size: 160, offset: 768)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2661, file: !548, line: 400, baseType: !1667, size: 160, offset: 928)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2661, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2684 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2685, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2686, splitDebugInlining: false, nameTableKind: None)
!2685 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2686 = !{!2687, !110, !107, !109}
!2687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 32)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2689, line: 98, size: 256, elements: !2690)
!2689 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2690 = !{!2691, !2696, !2701, !2706, !2711, !2716, !2721, !2726}
!2691 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !2689, line: 99, baseType: !2692, size: 32)
!2692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2688, file: !2689, line: 99, size: 32, elements: !2693)
!2693 = !{!2694, !2695}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2692, file: !2689, line: 99, baseType: !110, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2692, file: !2689, line: 99, baseType: !110, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !2689, line: 100, baseType: !2697, size: 32, offset: 32)
!2697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2688, file: !2689, line: 100, size: 32, elements: !2698)
!2698 = !{!2699, !2700}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2697, file: !2689, line: 100, baseType: !110, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2697, file: !2689, line: 100, baseType: !110, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !2689, line: 101, baseType: !2702, size: 32, offset: 64)
!2702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2688, file: !2689, line: 101, size: 32, elements: !2703)
!2703 = !{!2704, !2705}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2702, file: !2689, line: 101, baseType: !110, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2702, file: !2689, line: 101, baseType: !110, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !2689, line: 102, baseType: !2707, size: 32, offset: 96)
!2707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2688, file: !2689, line: 102, size: 32, elements: !2708)
!2708 = !{!2709, !2710}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2707, file: !2689, line: 102, baseType: !110, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2707, file: !2689, line: 102, baseType: !110, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !2689, line: 103, baseType: !2712, size: 32, offset: 128)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2688, file: !2689, line: 103, size: 32, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2712, file: !2689, line: 103, baseType: !110, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2712, file: !2689, line: 103, baseType: !110, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !2689, line: 104, baseType: !2717, size: 32, offset: 160)
!2717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2688, file: !2689, line: 104, size: 32, elements: !2718)
!2718 = !{!2719, !2720}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2717, file: !2689, line: 104, baseType: !110, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2717, file: !2689, line: 104, baseType: !110, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !2689, line: 105, baseType: !2722, size: 32, offset: 192)
!2722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2688, file: !2689, line: 105, size: 32, elements: !2723)
!2723 = !{!2724, !2725}
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2722, file: !2689, line: 105, baseType: !110, size: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2722, file: !2689, line: 105, baseType: !110, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2688, file: !2689, line: 106, baseType: !110, size: 32, offset: 224)
!2727 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2728, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2571, retainedTypes: !2729, splitDebugInlining: false, nameTableKind: None)
!2728 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2729 = !{!2730, !107, !109, !2755, !2798, !110}
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2732)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2733)
!2733 = !{!2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2732, file: !548, line: 381, baseType: !552, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2732, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2732, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2732, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2732, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2732, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2732, file: !548, line: 387, baseType: !1648, size: 96, offset: 192)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2732, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2732, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2732, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2732, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2732, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2732, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2732, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2732, file: !548, line: 395, baseType: !1659, size: 64, offset: 512)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2732, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2732, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2732, file: !548, line: 398, baseType: !1663, size: 128, offset: 640)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2732, file: !548, line: 399, baseType: !1665, size: 160, offset: 768)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2732, file: !548, line: 400, baseType: !1667, size: 160, offset: 928)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2732, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2689, line: 141, baseType: !2757)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2689, line: 97, size: 256, elements: !2758)
!2758 = !{!2759}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2757, file: !2689, line: 107, baseType: !2760, size: 256)
!2760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2689, line: 98, size: 256, elements: !2761)
!2761 = !{!2762, !2767, !2772, !2777, !2782, !2787, !2792, !2797}
!2762 = !DIDerivedType(tag: DW_TAG_member, scope: !2760, file: !2689, line: 99, baseType: !2763, size: 32)
!2763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2760, file: !2689, line: 99, size: 32, elements: !2764)
!2764 = !{!2765, !2766}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2763, file: !2689, line: 99, baseType: !110, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2763, file: !2689, line: 99, baseType: !110, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, scope: !2760, file: !2689, line: 100, baseType: !2768, size: 32, offset: 32)
!2768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2760, file: !2689, line: 100, size: 32, elements: !2769)
!2769 = !{!2770, !2771}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2768, file: !2689, line: 100, baseType: !110, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2768, file: !2689, line: 100, baseType: !110, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, scope: !2760, file: !2689, line: 101, baseType: !2773, size: 32, offset: 64)
!2773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2760, file: !2689, line: 101, size: 32, elements: !2774)
!2774 = !{!2775, !2776}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2773, file: !2689, line: 101, baseType: !110, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2773, file: !2689, line: 101, baseType: !110, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, scope: !2760, file: !2689, line: 102, baseType: !2778, size: 32, offset: 96)
!2778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2760, file: !2689, line: 102, size: 32, elements: !2779)
!2779 = !{!2780, !2781}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2778, file: !2689, line: 102, baseType: !110, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2778, file: !2689, line: 102, baseType: !110, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, scope: !2760, file: !2689, line: 103, baseType: !2783, size: 32, offset: 128)
!2783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2760, file: !2689, line: 103, size: 32, elements: !2784)
!2784 = !{!2785, !2786}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2783, file: !2689, line: 103, baseType: !110, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2783, file: !2689, line: 103, baseType: !110, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, scope: !2760, file: !2689, line: 104, baseType: !2788, size: 32, offset: 160)
!2788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2760, file: !2689, line: 104, size: 32, elements: !2789)
!2789 = !{!2790, !2791}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2788, file: !2689, line: 104, baseType: !110, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2788, file: !2689, line: 104, baseType: !110, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, scope: !2760, file: !2689, line: 105, baseType: !2793, size: 32, offset: 192)
!2793 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2760, file: !2689, line: 105, size: 32, elements: !2794)
!2794 = !{!2795, !2796}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2793, file: !2689, line: 105, baseType: !110, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2793, file: !2689, line: 105, baseType: !110, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2760, file: !2689, line: 106, baseType: !110, size: 32, offset: 224)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 32)
!2799 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2800, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1596, retainedTypes: !2801, splitDebugInlining: false, nameTableKind: None)
!2800 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2801 = !{!872, !854, !180, !110, !2802, !2819}
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !548, line: 360, baseType: !2804)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 345, size: 28704, elements: !2805)
!2805 = !{!2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2804, file: !548, line: 347, baseType: !1611, size: 256)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2804, file: !548, line: 348, baseType: !1613, size: 768, offset: 256)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2804, file: !548, line: 349, baseType: !1611, size: 256, offset: 1024)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2804, file: !548, line: 350, baseType: !1613, size: 768, offset: 1280)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2804, file: !548, line: 351, baseType: !1611, size: 256, offset: 2048)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2804, file: !548, line: 352, baseType: !1613, size: 768, offset: 2304)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2804, file: !548, line: 353, baseType: !1611, size: 256, offset: 3072)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2804, file: !548, line: 354, baseType: !1613, size: 768, offset: 3328)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2804, file: !548, line: 355, baseType: !1611, size: 256, offset: 4096)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2804, file: !548, line: 356, baseType: !1624, size: 1792, offset: 4352)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2804, file: !548, line: 357, baseType: !1628, size: 1920, offset: 6144)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2804, file: !548, line: 358, baseType: !1633, size: 20608, offset: 8064)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2804, file: !548, line: 359, baseType: !316, size: 32, offset: 28672)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2821)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2822)
!2822 = !{!2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2821, file: !548, line: 381, baseType: !552, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2821, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2821, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2821, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2821, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2821, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2821, file: !548, line: 387, baseType: !1648, size: 96, offset: 192)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2821, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2821, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2821, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2821, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2821, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2821, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2821, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2821, file: !548, line: 395, baseType: !1659, size: 64, offset: 512)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2821, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2821, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2821, file: !548, line: 398, baseType: !1663, size: 128, offset: 640)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2821, file: !548, line: 399, baseType: !1665, size: 160, offset: 768)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2821, file: !548, line: 400, baseType: !1667, size: 160, offset: 928)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2821, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2844 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2845, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2846, splitDebugInlining: false, nameTableKind: None)
!2845 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2846 = !{!2847, !107, !109}
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2848, size: 32)
!2848 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !548, line: 402, baseType: !2849)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 379, size: 1120, elements: !2850)
!2850 = !{!2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2849, file: !548, line: 381, baseType: !552, size: 32)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2849, file: !548, line: 382, baseType: !316, size: 32, offset: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2849, file: !548, line: 383, baseType: !316, size: 32, offset: 64)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2849, file: !548, line: 384, baseType: !316, size: 32, offset: 96)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2849, file: !548, line: 385, baseType: !316, size: 32, offset: 128)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2849, file: !548, line: 386, baseType: !316, size: 32, offset: 160)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2849, file: !548, line: 387, baseType: !1648, size: 96, offset: 192)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2849, file: !548, line: 388, baseType: !316, size: 32, offset: 288)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2849, file: !548, line: 389, baseType: !316, size: 32, offset: 320)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2849, file: !548, line: 390, baseType: !316, size: 32, offset: 352)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2849, file: !548, line: 391, baseType: !316, size: 32, offset: 384)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2849, file: !548, line: 392, baseType: !316, size: 32, offset: 416)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2849, file: !548, line: 393, baseType: !316, size: 32, offset: 448)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2849, file: !548, line: 394, baseType: !316, size: 32, offset: 480)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2849, file: !548, line: 395, baseType: !1659, size: 64, offset: 512)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2849, file: !548, line: 396, baseType: !552, size: 32, offset: 576)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2849, file: !548, line: 397, baseType: !552, size: 32, offset: 608)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2849, file: !548, line: 398, baseType: !1663, size: 128, offset: 640)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2849, file: !548, line: 399, baseType: !1665, size: 160, offset: 768)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2849, file: !548, line: 400, baseType: !1667, size: 160, offset: 928)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2849, file: !548, line: 401, baseType: !316, size: 32, offset: 1088)
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2874, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2874 = !{!150, !285, !234, !1046, !2875, !181, !107}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!2877 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2878, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2879, splitDebugInlining: false, nameTableKind: None)
!2878 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2879 = !{!2880}
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !2882)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !2883)
!2883 = !{!2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2882, file: !312, line: 372, baseType: !316, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2882, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2882, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2882, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2882, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2882, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2882, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2882, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2882, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2882, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2882, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2882, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2882, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2882, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!2898 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2899, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2899 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2902, retainedTypes: !2918, splitDebugInlining: false, nameTableKind: None)
!2901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2902 = !{!2903, !2910, !2914}
!2903 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2904, line: 39, baseType: !32, size: 32, elements: !2905)
!2904 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2905 = !{!2906, !2907, !2908, !2909}
!2906 = !DIEnumerator(name: "HAL_OK", value: 0)
!2907 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2908 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2909 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2910 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !907, line: 183, baseType: !32, size: 32, elements: !2911)
!2911 = !{!2912, !2913}
!2912 = !DIEnumerator(name: "DISABLE", value: 0)
!2913 = !DIEnumerator(name: "ENABLE", value: 1)
!2914 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !907, line: 177, baseType: !32, size: 32, elements: !2915)
!2915 = !{!2916, !2917}
!2916 = !DIEnumerator(name: "RESET", value: 0)
!2917 = !DIEnumerator(name: "SET", value: 1)
!2918 = !{!2919, !107, !110, !180, !2937, !2938, !2944, !194, !2957, !111, !2970}
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !2921)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !2922)
!2922 = !{!2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2921, file: !312, line: 372, baseType: !316, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2921, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2921, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2921, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2921, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2921, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2921, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2921, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2921, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2921, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2921, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2921, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2921, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2921, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 364, baseType: !2940)
!2940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 64, elements: !2941)
!2941 = !{!2942, !2943}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2940, file: !312, line: 362, baseType: !316, size: 32)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2940, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 286, baseType: !2946)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 275, size: 288, elements: !2947)
!2947 = !{!2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2946, file: !312, line: 277, baseType: !316, size: 32)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2946, file: !312, line: 278, baseType: !316, size: 32, offset: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2946, file: !312, line: 279, baseType: !316, size: 32, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2946, file: !312, line: 280, baseType: !316, size: 32, offset: 96)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2946, file: !312, line: 281, baseType: !316, size: 32, offset: 128)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2946, file: !312, line: 282, baseType: !316, size: 32, offset: 160)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2946, file: !312, line: 283, baseType: !316, size: 32, offset: 192)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2946, file: !312, line: 284, baseType: !316, size: 32, offset: 224)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2946, file: !312, line: 285, baseType: !316, size: 32, offset: 256)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 314, baseType: !2959)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 303, size: 320, elements: !2960)
!2960 = !{!2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2959, file: !312, line: 305, baseType: !316, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2959, file: !312, line: 306, baseType: !316, size: 32, offset: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2959, file: !312, line: 307, baseType: !316, size: 32, offset: 64)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2959, file: !312, line: 308, baseType: !316, size: 32, offset: 96)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2959, file: !312, line: 309, baseType: !316, size: 32, offset: 128)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2959, file: !312, line: 310, baseType: !316, size: 32, offset: 160)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2959, file: !312, line: 311, baseType: !316, size: 32, offset: 192)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2959, file: !312, line: 312, baseType: !316, size: 32, offset: 224)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2959, file: !312, line: 313, baseType: !1183, size: 64, offset: 256)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!2971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2972, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2973, retainedTypes: !2974, splitDebugInlining: false, nameTableKind: None)
!2972 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!2973 = !{!906}
!2974 = !{!2975, !110, !2983, !2989, !3002}
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !548, line: 712, baseType: !2977)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !548, line: 706, size: 128, elements: !2978)
!2978 = !{!2979, !2980, !2981, !2982}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2977, file: !548, line: 708, baseType: !316, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2977, file: !548, line: 709, baseType: !316, size: 32, offset: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2977, file: !548, line: 710, baseType: !316, size: 32, offset: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2977, file: !548, line: 711, baseType: !552, size: 32, offset: 96)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 364, baseType: !2985)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 360, size: 64, elements: !2986)
!2986 = !{!2987, !2988}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2985, file: !312, line: 362, baseType: !316, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2985, file: !312, line: 363, baseType: !316, size: 32, offset: 32)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 286, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 275, size: 288, elements: !2992)
!2992 = !{!2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2991, file: !312, line: 277, baseType: !316, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2991, file: !312, line: 278, baseType: !316, size: 32, offset: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2991, file: !312, line: 279, baseType: !316, size: 32, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2991, file: !312, line: 280, baseType: !316, size: 32, offset: 96)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2991, file: !312, line: 281, baseType: !316, size: 32, offset: 128)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2991, file: !312, line: 282, baseType: !316, size: 32, offset: 160)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2991, file: !312, line: 283, baseType: !316, size: 32, offset: 192)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2991, file: !312, line: 284, baseType: !316, size: 32, offset: 224)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2991, file: !312, line: 285, baseType: !316, size: 32, offset: 256)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 32)
!3003 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 386, baseType: !3004)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 448, elements: !3005)
!3005 = !{!3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3004, file: !312, line: 372, baseType: !316, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3004, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3004, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3004, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3004, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3004, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3004, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3004, file: !312, line: 379, baseType: !316, size: 32, offset: 224)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3004, file: !312, line: 380, baseType: !316, size: 32, offset: 256)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3004, file: !312, line: 381, baseType: !316, size: 32, offset: 288)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3004, file: !312, line: 382, baseType: !316, size: 32, offset: 320)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3004, file: !312, line: 383, baseType: !316, size: 32, offset: 352)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3004, file: !312, line: 384, baseType: !316, size: 32, offset: 384)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3004, file: !312, line: 385, baseType: !316, size: 32, offset: 416)
!3020 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3022, splitDebugInlining: false, nameTableKind: None)
!3021 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!3022 = !{!107, !234}
!3023 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3024, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3025, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3024 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!3025 = !{!3026, !3033, !2572, !30}
!3026 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3027, line: 14, baseType: !32, size: 32, elements: !3028)
!3027 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3028 = !{!3029, !3030, !3031, !3032}
!3029 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3030 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3031 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3032 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3033 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3027, line: 42, baseType: !32, size: 32, elements: !3034)
!3034 = !{!3035, !3036, !3037, !3038, !3039, !3040}
!3035 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3036 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3037 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3038 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3039 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3040 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!3043 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3044, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3045, splitDebugInlining: false, nameTableKind: None)
!3044 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!3045 = !{!22, !107, !109}
!3046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!3048 = !{!"Ubuntu clang version 14.0.6"}
!3049 = !{i32 7, !"Dwarf Version", i32 4}
!3050 = !{i32 2, !"Debug Info Version", i32 3}
!3051 = !{i32 1, !"wchar_size", i32 4}
!3052 = !{i32 1, !"min_enum_size", i32 4}
!3053 = !{i32 1, !"branch-target-enforcement", i32 0}
!3054 = !{i32 1, !"sign-return-address", i32 0}
!3055 = !{i32 1, !"sign-return-address-all", i32 0}
!3056 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3057 = !{i32 7, !"frame-pointer", i32 2}
!3058 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3059, file: !3059, line: 26, type: !3060, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2524, retainedNodes: !2043)
!3059 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3060 = !DISubroutineType(types: !3061)
!3061 = !{null}
!3062 = !DILocation(line: 28, column: 1, scope: !3058)
!3063 = !{i64 2152498578, i64 2152498598, i64 2152498661}
!3064 = !DILocation(line: 29, column: 1, scope: !3058)
!3065 = !{i64 2152498993, i64 2152499013, i64 2152499076}
!3066 = !DILocation(line: 30, column: 1, scope: !3058)
!3067 = !{i64 2152499412, i64 2152499432, i64 2152499495}
!3068 = !DILocation(line: 31, column: 1, scope: !3058)
!3069 = !{i64 2152499831, i64 2152499851, i64 2152499914}
!3070 = !DILocation(line: 33, column: 1, scope: !3058)
!3071 = !{i64 2152500123, i64 2152500143, i64 2152500206}
!3072 = !DILocation(line: 35, column: 1, scope: !3058)
!3073 = !{i64 2152500448, i64 2152500468, i64 2152500531}
!3074 = !DILocation(line: 50, column: 1, scope: !3058)
!3075 = !{i64 2152500875, i64 2152500895, i64 2152500958}
!3076 = !DILocation(line: 54, column: 1, scope: !3058)
!3077 = !{i64 2152501314, i64 2152501334, i64 2152501397}
!3078 = !DILocation(line: 61, column: 1, scope: !3058)
!3079 = !{i64 2152501631, i64 2152501651, i64 2152501714}
!3080 = !DILocation(line: 63, column: 1, scope: !3058)
!3081 = !{i64 2152502011, i64 2152502031, i64 2152502094}
!3082 = !DILocation(line: 64, column: 1, scope: !3058)
!3083 = !{i64 2152502533, i64 2152502553, i64 2152502616}
!3084 = !DILocation(line: 65, column: 1, scope: !3058)
!3085 = !{i64 2152503031, i64 2152503051, i64 2152503114}
!3086 = !DILocation(line: 66, column: 1, scope: !3058)
!3087 = !{i64 2152503513, i64 2152503533, i64 2152503596}
!3088 = !DILocation(line: 67, column: 1, scope: !3058)
!3089 = !{i64 2152504020, i64 2152504040, i64 2152504103}
!3090 = !DILocation(line: 68, column: 1, scope: !3058)
!3091 = !{i64 2152504508, i64 2152504528, i64 2152504591}
!3092 = !DILocation(line: 70, column: 1, scope: !3058)
!3093 = !{i64 2152504976, i64 2152504996, i64 2152505059}
!3094 = !DILocation(line: 71, column: 1, scope: !3058)
!3095 = !{i64 2152505418, i64 2152505438, i64 2152505501}
!3096 = !DILocation(line: 72, column: 1, scope: !3058)
!3097 = !{i64 2152505876, i64 2152505896, i64 2152505959}
!3098 = !DILocation(line: 79, column: 1, scope: !3058)
!3099 = !{i64 2152510391, i64 2152510411, i64 2152510474}
!3100 = !DILocation(line: 80, column: 1, scope: !3058)
!3101 = !{i64 2152510902, i64 2152510922, i64 2152510985}
!3102 = !DILocation(line: 82, column: 1, scope: !3058)
!3103 = !{i64 2152511393, i64 2152511413, i64 2152511476}
!3104 = !DILocation(line: 97, column: 1, scope: !3058)
!3105 = !{i64 2152511730, i64 2152511750, i64 2152511813}
!3106 = !DILocation(line: 99, column: 1, scope: !3058)
!3107 = !{i64 2152511948, i64 2152511968, i64 2152512031}
!3108 = !DILocation(line: 102, column: 1, scope: !3058)
!3109 = !{i64 2152512205, i64 2152512225, i64 2152512288}
!3110 = !DILocation(line: 105, column: 1, scope: !3058)
!3111 = !{i64 2152512445, i64 2152512465, i64 2152512528}
!3112 = !DILocation(line: 115, column: 1, scope: !3058)
!3113 = !{i64 2152512784, i64 2152512804, i64 2152512867}
!3114 = !DILocation(line: 118, column: 1, scope: !3058)
!3115 = !{i64 2152513128, i64 2152513148, i64 2152513211}
!3116 = !DILocation(line: 32, column: 1, scope: !3117)
!3117 = !DILexicalBlockFile(scope: !3058, file: !3118, discriminator: 0)
!3118 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3119 = !{i64 2152513484, i64 2152513504, i64 2152513567}
!3120 = !DILocation(line: 33, column: 1, scope: !3117)
!3121 = !{i64 2152513996, i64 2152514016, i64 2152514079}
!3122 = !DILocation(line: 53, column: 1, scope: !3117)
!3123 = !{i64 2152514504, i64 2152514524, i64 2152514587}
!3124 = !DILocation(line: 54, column: 1, scope: !3117)
!3125 = !{i64 2152514922, i64 2152514942, i64 2152515005}
!3126 = !DILocation(line: 55, column: 1, scope: !3117)
!3127 = !{i64 2152515340, i64 2152515360, i64 2152515423}
!3128 = !DILocation(line: 56, column: 1, scope: !3117)
!3129 = !{i64 2152515758, i64 2152515778, i64 2152515841}
!3130 = !DILocation(line: 57, column: 1, scope: !3117)
!3131 = !{i64 2152516176, i64 2152516196, i64 2152516259}
!3132 = !DILocation(line: 58, column: 1, scope: !3117)
!3133 = !{i64 2152516594, i64 2152516614, i64 2152516677}
!3134 = !DILocation(line: 59, column: 1, scope: !3117)
!3135 = !{i64 2152517012, i64 2152517032, i64 2152517095}
!3136 = !DILocation(line: 60, column: 1, scope: !3117)
!3137 = !{i64 2152517436, i64 2152517456, i64 2152517519}
!3138 = !DILocation(line: 61, column: 1, scope: !3117)
!3139 = !{i64 2152517753, i64 2152517773, i64 2152517836}
!3140 = !DILocation(line: 70, column: 1, scope: !3117)
!3141 = !{i64 2152517982, i64 2152518002, i64 2152518065}
!3142 = !DILocation(line: 72, column: 1, scope: !3117)
!3143 = !{i64 2152518314, i64 2152518334, i64 2152518397}
!3144 = !DILocation(line: 73, column: 1, scope: !3117)
!3145 = !{i64 2152518764, i64 2152518784, i64 2152518847}
!3146 = !DILocation(line: 74, column: 1, scope: !3117)
!3147 = !{i64 2152519214, i64 2152519234, i64 2152519297}
!3148 = !DILocation(line: 75, column: 1, scope: !3117)
!3149 = !{i64 2152519664, i64 2152519684, i64 2152519747}
!3150 = !DILocation(line: 76, column: 1, scope: !3117)
!3151 = !{i64 2152524175, i64 2152524195, i64 2152524258}
!3152 = !DILocation(line: 77, column: 1, scope: !3117)
!3153 = !{i64 2152524625, i64 2152524645, i64 2152524708}
!3154 = !DILocation(line: 78, column: 1, scope: !3117)
!3155 = !{i64 2152525075, i64 2152525095, i64 2152525158}
!3156 = !DILocation(line: 79, column: 1, scope: !3117)
!3157 = !{i64 2152525525, i64 2152525545, i64 2152525608}
!3158 = !DILocation(line: 80, column: 1, scope: !3117)
!3159 = !{i64 2152525978, i64 2152525998, i64 2152526061}
!3160 = !DILocation(line: 84, column: 1, scope: !3117)
!3161 = !{i64 2152526310, i64 2152526330, i64 2152526393}
!3162 = !DILocation(line: 91, column: 1, scope: !3117)
!3163 = !{i64 2152526707, i64 2152526727, i64 2152526790}
!3164 = !DILocation(line: 93, column: 1, scope: !3117)
!3165 = !{i64 2152527074, i64 2152527094, i64 2152527157}
!3166 = !DILocation(line: 106, column: 1, scope: !3117)
!3167 = !{i64 2152527344, i64 2152527364, i64 2152527427}
!3168 = !DILocation(line: 11, column: 1, scope: !3169)
!3169 = !DILexicalBlockFile(scope: !3058, file: !3170, discriminator: 0)
!3170 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3171 = distinct !DISubprogram(name: "inc_count", scope: !116, file: !116, line: 25, type: !3172, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3174)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{null, !107, !107, !107}
!3174 = !{!3175, !3176, !3177, !3178, !3179}
!3175 = !DILocalVariable(name: "p1", arg: 1, scope: !3171, file: !116, line: 25, type: !107)
!3176 = !DILocalVariable(name: "p2", arg: 2, scope: !3171, file: !116, line: 25, type: !107)
!3177 = !DILocalVariable(name: "p3", arg: 3, scope: !3171, file: !116, line: 25, type: !107)
!3178 = !DILocalVariable(name: "i", scope: !3171, file: !116, line: 27, type: !109)
!3179 = !DILocalVariable(name: "my_id", scope: !3171, file: !116, line: 28, type: !102)
!3180 = !DILocation(line: 0, scope: !3171)
!3181 = !DILocation(line: 28, column: 15, scope: !3171)
!3182 = !DILocation(line: 30, column: 2, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3171, file: !116, line: 30, column: 2)
!3184 = !DILocation(line: 31, column: 3, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3186, file: !116, line: 30, column: 31)
!3186 = distinct !DILexicalBlock(scope: !3183, file: !116, line: 30, column: 2)
!3187 = !DILocation(line: 32, column: 8, scope: !3185)
!3188 = !DILocation(line: 40, column: 13, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3185, file: !116, line: 40, column: 7)
!3190 = !DILocation(line: 40, column: 7, scope: !3185)
!3191 = !DILocation(line: 41, column: 4, scope: !3192)
!3192 = distinct !DILexicalBlock(scope: !3189, file: !116, line: 40, column: 29)
!3193 = !DILocation(line: 43, column: 4, scope: !3192)
!3194 = !DILocation(line: 44, column: 4, scope: !3192)
!3195 = !DILocation(line: 47, column: 27, scope: !3185)
!3196 = !DILocation(line: 45, column: 3, scope: !3192)
!3197 = !DILocation(line: 46, column: 3, scope: !3185)
!3198 = !DILocation(line: 48, column: 3, scope: !3185)
!3199 = !DILocation(line: 51, column: 3, scope: !3185)
!3200 = !DILocation(line: 30, column: 27, scope: !3186)
!3201 = !DILocation(line: 30, column: 16, scope: !3186)
!3202 = distinct !{!3202, !3182, !3203}
!3203 = !DILocation(line: 52, column: 2, scope: !3183)
!3204 = !DILocation(line: 53, column: 1, scope: !3171)
!3205 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3206, file: !3206, line: 927, type: !3207, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3214)
!3206 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!109, !3209, !3210}
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3210 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3211)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3212)
!3212 = !{!3213}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3211, file: !104, line: 66, baseType: !103, size: 64)
!3214 = !{!3215, !3216}
!3215 = !DILocalVariable(name: "mutex", arg: 1, scope: !3205, file: !3206, line: 927, type: !3209)
!3216 = !DILocalVariable(name: "timeout", arg: 2, scope: !3205, file: !3206, line: 927, type: !3210)
!3217 = !DILocation(line: 0, scope: !3205)
!3218 = !DILocation(line: 936, column: 2, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3205, file: !3206, line: 936, column: 2)
!3220 = !{i64 2152225350}
!3221 = !DILocation(line: 937, column: 9, scope: !3205)
!3222 = !DILocation(line: 937, column: 2, scope: !3205)
!3223 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3206, file: !3206, line: 976, type: !3224, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3227)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{!109, !3226}
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3227 = !{!3228}
!3228 = !DILocalVariable(name: "condvar", arg: 1, scope: !3223, file: !3206, line: 976, type: !3226)
!3229 = !DILocation(line: 0, scope: !3223)
!3230 = !DILocation(line: 984, column: 2, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3223, file: !3206, line: 984, column: 2)
!3232 = !{i64 2152225554}
!3233 = !DILocation(line: 985, column: 9, scope: !3223)
!3234 = !DILocation(line: 985, column: 2, scope: !3223)
!3235 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3206, file: !3206, line: 944, type: !3236, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3238)
!3236 = !DISubroutineType(types: !3237)
!3237 = !{!109, !3209}
!3238 = !{!3239}
!3239 = !DILocalVariable(name: "mutex", arg: 1, scope: !3235, file: !3206, line: 944, type: !3209)
!3240 = !DILocation(line: 0, scope: !3235)
!3241 = !DILocation(line: 952, column: 2, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3235, file: !3206, line: 952, column: 2)
!3243 = !{i64 2152225418}
!3244 = !DILocation(line: 953, column: 9, scope: !3235)
!3245 = !DILocation(line: 953, column: 2, scope: !3235)
!3246 = distinct !DISubprogram(name: "k_sleep", scope: !3206, file: !3206, line: 91, type: !3247, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3249)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!854, !3210}
!3249 = !{!3250}
!3250 = !DILocalVariable(name: "timeout", arg: 1, scope: !3246, file: !3206, line: 91, type: !3210)
!3251 = !DILocation(line: 0, scope: !3246)
!3252 = !DILocation(line: 99, column: 2, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3246, file: !3206, line: 99, column: 2)
!3254 = !{i64 2152221982}
!3255 = !DILocation(line: 100, column: 9, scope: !3246)
!3256 = !DILocation(line: 100, column: 2, scope: !3246)
!3257 = distinct !DISubprogram(name: "watch_count", scope: !116, file: !116, line: 55, type: !3172, scopeLine: 56, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3258)
!3258 = !{!3259, !3260, !3261, !3262}
!3259 = !DILocalVariable(name: "p1", arg: 1, scope: !3257, file: !116, line: 55, type: !107)
!3260 = !DILocalVariable(name: "p2", arg: 2, scope: !3257, file: !116, line: 55, type: !107)
!3261 = !DILocalVariable(name: "p3", arg: 3, scope: !3257, file: !116, line: 55, type: !107)
!3262 = !DILocalVariable(name: "my_id", scope: !3257, file: !116, line: 57, type: !102)
!3263 = !DILocation(line: 0, scope: !3257)
!3264 = !DILocation(line: 57, column: 15, scope: !3257)
!3265 = !DILocation(line: 59, column: 2, scope: !3257)
!3266 = !DILocation(line: 61, column: 2, scope: !3257)
!3267 = !DILocation(line: 62, column: 9, scope: !3257)
!3268 = !DILocation(line: 62, column: 15, scope: !3257)
!3269 = !DILocation(line: 62, column: 2, scope: !3257)
!3270 = !DILocation(line: 63, column: 3, scope: !3271)
!3271 = distinct !DILexicalBlock(scope: !3257, file: !116, line: 62, column: 30)
!3272 = !DILocation(line: 65, column: 3, scope: !3271)
!3273 = !DILocation(line: 68, column: 27, scope: !3271)
!3274 = !DILocation(line: 67, column: 3, scope: !3271)
!3275 = distinct !{!3275, !3269, !3276}
!3276 = !DILocation(line: 69, column: 2, scope: !3257)
!3277 = !DILocation(line: 70, column: 2, scope: !3257)
!3278 = !DILocation(line: 72, column: 8, scope: !3257)
!3279 = !DILocation(line: 73, column: 2, scope: !3257)
!3280 = !DILocation(line: 74, column: 2, scope: !3257)
!3281 = !DILocation(line: 75, column: 2, scope: !3257)
!3282 = !DILocation(line: 76, column: 1, scope: !3257)
!3283 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3206, file: !3206, line: 1008, type: !3284, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3286)
!3284 = !DISubroutineType(types: !3285)
!3285 = !{!109, !3226, !3209, !3210}
!3286 = !{!3287, !3288, !3289}
!3287 = !DILocalVariable(name: "condvar", arg: 1, scope: !3283, file: !3206, line: 1008, type: !3226)
!3288 = !DILocalVariable(name: "mutex", arg: 2, scope: !3283, file: !3206, line: 1008, type: !3209)
!3289 = !DILocalVariable(name: "timeout", arg: 3, scope: !3283, file: !3206, line: 1008, type: !3210)
!3290 = !DILocation(line: 0, scope: !3283)
!3291 = !DILocation(line: 1018, column: 2, scope: !3292)
!3292 = distinct !DILexicalBlock(scope: !3283, file: !3206, line: 1018, column: 2)
!3293 = !{i64 2152225690}
!3294 = !DILocation(line: 1019, column: 9, scope: !3283)
!3295 = !DILocation(line: 1019, column: 2, scope: !3283)
!3296 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 78, type: !3060, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3297)
!3297 = !{!3298, !3299, !3300, !3301}
!3298 = !DILocalVariable(name: "t1", scope: !3296, file: !116, line: 80, type: !102)
!3299 = !DILocalVariable(name: "t2", scope: !3296, file: !116, line: 80, type: !102)
!3300 = !DILocalVariable(name: "t3", scope: !3296, file: !116, line: 80, type: !102)
!3301 = !DILocalVariable(name: "i", scope: !3296, file: !116, line: 81, type: !109)
!3302 = !DILocation(line: 0, scope: !3296)
!3303 = !DILocation(line: 83, column: 8, scope: !3296)
!3304 = !DILocation(line: 85, column: 2, scope: !3296)
!3305 = !DILocation(line: 89, column: 2, scope: !3296)
!3306 = !DILocation(line: 93, column: 2, scope: !3296)
!3307 = !DILocation(line: 98, column: 2, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3296, file: !116, line: 98, column: 2)
!3309 = !DILocation(line: 99, column: 18, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !116, line: 98, column: 36)
!3311 = distinct !DILexicalBlock(scope: !3308, file: !116, line: 98, column: 2)
!3312 = !DILocation(line: 99, column: 3, scope: !3310)
!3313 = !DILocation(line: 98, column: 32, scope: !3311)
!3314 = !DILocation(line: 98, column: 16, scope: !3311)
!3315 = distinct !{!3315, !3307, !3316}
!3316 = !DILocation(line: 100, column: 2, scope: !3308)
!3317 = !DILocation(line: 103, column: 22, scope: !3296)
!3318 = !DILocation(line: 102, column: 2, scope: !3296)
!3319 = !DILocation(line: 104, column: 1, scope: !3296)
!3320 = distinct !DISubprogram(name: "k_thread_create", scope: !3206, file: !3206, line: 24, type: !3321, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3329)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{!3323, !266, !3324, !234, !3327, !107, !107, !107, !109, !110, !3210}
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !266)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3326, line: 44, baseType: !146)
!3326 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3327 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3326, line: 46, baseType: !3328)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 32)
!3329 = !{!3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339}
!3330 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3320, file: !3206, line: 24, type: !266)
!3331 = !DILocalVariable(name: "stack", arg: 2, scope: !3320, file: !3206, line: 24, type: !3324)
!3332 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3320, file: !3206, line: 24, type: !234)
!3333 = !DILocalVariable(name: "entry", arg: 4, scope: !3320, file: !3206, line: 24, type: !3327)
!3334 = !DILocalVariable(name: "p1", arg: 5, scope: !3320, file: !3206, line: 24, type: !107)
!3335 = !DILocalVariable(name: "p2", arg: 6, scope: !3320, file: !3206, line: 24, type: !107)
!3336 = !DILocalVariable(name: "p3", arg: 7, scope: !3320, file: !3206, line: 24, type: !107)
!3337 = !DILocalVariable(name: "prio", arg: 8, scope: !3320, file: !3206, line: 24, type: !109)
!3338 = !DILocalVariable(name: "options", arg: 9, scope: !3320, file: !3206, line: 24, type: !110)
!3339 = !DILocalVariable(name: "delay", arg: 10, scope: !3320, file: !3206, line: 24, type: !3210)
!3340 = !DILocation(line: 0, scope: !3320)
!3341 = !DILocation(line: 49, column: 2, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3320, file: !3206, line: 49, column: 2)
!3343 = !{i64 2152221778}
!3344 = !DILocation(line: 50, column: 9, scope: !3320)
!3345 = !DILocation(line: 50, column: 2, scope: !3320)
!3346 = distinct !DISubprogram(name: "k_thread_join", scope: !3206, file: !3206, line: 74, type: !3347, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3349)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!109, !266, !3210}
!3349 = !{!3350, !3351}
!3350 = !DILocalVariable(name: "thread", arg: 1, scope: !3346, file: !3206, line: 74, type: !266)
!3351 = !DILocalVariable(name: "timeout", arg: 2, scope: !3346, file: !3206, line: 74, type: !3210)
!3352 = !DILocation(line: 0, scope: !3346)
!3353 = !DILocation(line: 83, column: 2, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3346, file: !3206, line: 83, column: 2)
!3355 = !{i64 2152221914}
!3356 = !DILocation(line: 84, column: 9, scope: !3346)
!3357 = !DILocation(line: 84, column: 2, scope: !3346)
!3358 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3359, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3368)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{!109, !107, !234, !110, !279, !3361}
!3361 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3362, line: 99, baseType: !3363)
!3362 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3362, line: 40, baseType: !3364)
!3364 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3365)
!3365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3366)
!3366 = !{!3367}
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3365, file: !288, line: 18, baseType: !107, size: 32)
!3368 = !{!3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3404, !3413, !3416, !3417, !3420, !3423, !3426, !3429, !3435}
!3369 = !DILocalVariable(name: "packaged", arg: 1, scope: !3358, file: !288, line: 233, type: !107)
!3370 = !DILocalVariable(name: "len", arg: 2, scope: !3358, file: !288, line: 233, type: !234)
!3371 = !DILocalVariable(name: "flags", arg: 3, scope: !3358, file: !288, line: 233, type: !110)
!3372 = !DILocalVariable(name: "fmt", arg: 4, scope: !3358, file: !288, line: 234, type: !279)
!3373 = !DILocalVariable(name: "ap", arg: 5, scope: !3358, file: !288, line: 234, type: !3361)
!3374 = !DILocalVariable(name: "buf0", scope: !3358, file: !288, line: 247, type: !286)
!3375 = !DILocalVariable(name: "buf", scope: !3358, file: !288, line: 248, type: !286)
!3376 = !DILocalVariable(name: "size", scope: !3358, file: !288, line: 249, type: !32)
!3377 = !DILocalVariable(name: "align", scope: !3358, file: !288, line: 250, type: !32)
!3378 = !DILocalVariable(name: "str_ptr_pos", scope: !3358, file: !288, line: 251, type: !3379)
!3379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 128, elements: !840)
!3380 = !DILocalVariable(name: "str_ptr_arg", scope: !3358, file: !288, line: 252, type: !3379)
!3381 = !DILocalVariable(name: "s_idx", scope: !3358, file: !288, line: 253, type: !32)
!3382 = !DILocalVariable(name: "s_rw_cnt", scope: !3358, file: !288, line: 254, type: !32)
!3383 = !DILocalVariable(name: "s_ro_cnt", scope: !3358, file: !288, line: 255, type: !32)
!3384 = !DILocalVariable(name: "arg_idx", scope: !3358, file: !288, line: 256, type: !109)
!3385 = !DILocalVariable(name: "i", scope: !3358, file: !288, line: 257, type: !32)
!3386 = !DILocalVariable(name: "s", scope: !3358, file: !288, line: 258, type: !279)
!3387 = !DILocalVariable(name: "parsing", scope: !3358, file: !288, line: 259, type: !360)
!3388 = !DILocalVariable(name: "rws_pos_en", scope: !3358, file: !288, line: 263, type: !360)
!3389 = !DILocalVariable(name: "fros_cnt", scope: !3358, file: !288, line: 268, type: !109)
!3390 = !DILocalVariable(name: "is_str_arg", scope: !3358, file: !288, line: 269, type: !360)
!3391 = !DILocalVariable(name: "pkg_hdr", scope: !3358, file: !288, line: 270, type: !3392)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 32)
!3393 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3394, line: 78, size: 32, elements: !3395)
!3394 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3395 = !{!3396, !3403}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3393, file: !3394, line: 80, baseType: !3397, size: 32)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3394, line: 45, size: 32, elements: !3398)
!3398 = !{!3399, !3400, !3401, !3402}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3397, file: !3394, line: 47, baseType: !180, size: 8)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3397, file: !3394, line: 50, baseType: !180, size: 8, offset: 8)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3397, file: !3394, line: 53, baseType: !180, size: 8, offset: 16)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3397, file: !3394, line: 56, baseType: !180, size: 8, offset: 24)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3393, file: !3394, line: 82, baseType: !107, size: 32)
!3404 = !DILocalVariable(name: "v", scope: !3405, file: !288, line: 567, type: !3409)
!3405 = distinct !DILexicalBlock(scope: !3406, file: !288, line: 562, column: 14)
!3406 = distinct !DILexicalBlock(scope: !3407, file: !288, line: 481, column: 18)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !288, line: 466, column: 3)
!3408 = distinct !DILexicalBlock(scope: !3358, file: !288, line: 343, column: 15)
!3409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3358, file: !288, line: 567, size: 64, elements: !3410)
!3410 = !{!3411, !3412}
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3409, file: !288, line: 567, baseType: !277, size: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3409, file: !288, line: 567, baseType: !275, size: 64)
!3413 = !DILocalVariable(name: "is_ro", scope: !3414, file: !288, line: 620, type: !360)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !288, line: 613, column: 19)
!3415 = distinct !DILexicalBlock(scope: !3408, file: !288, line: 613, column: 7)
!3416 = !DILocalVariable(name: "do_ro", scope: !3414, file: !288, line: 621, type: !360)
!3417 = !DILocalVariable(name: "s_ptr_idx", scope: !3418, file: !288, line: 626, type: !110)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !288, line: 625, column: 11)
!3419 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 623, column: 8)
!3420 = !DILocalVariable(name: "v", scope: !3421, file: !288, line: 684, type: !109)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !288, line: 683, column: 35)
!3422 = distinct !DILexicalBlock(scope: !3415, file: !288, line: 683, column: 14)
!3423 = !DILocalVariable(name: "v", scope: !3424, file: !288, line: 691, type: !102)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !288, line: 690, column: 36)
!3425 = distinct !DILexicalBlock(scope: !3422, file: !288, line: 690, column: 14)
!3426 = !DILocalVariable(name: "v", scope: !3427, file: !288, line: 698, type: !106)
!3427 = distinct !DILexicalBlock(scope: !3428, file: !288, line: 697, column: 41)
!3428 = distinct !DILexicalBlock(scope: !3425, file: !288, line: 697, column: 14)
!3429 = !DILocalVariable(name: "pos", scope: !3430, file: !288, line: 762, type: !180)
!3430 = distinct !DILexicalBlock(scope: !3431, file: !288, line: 757, column: 31)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !288, line: 757, column: 3)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !288, line: 757, column: 3)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !288, line: 756, column: 16)
!3434 = distinct !DILexicalBlock(scope: !3358, file: !288, line: 756, column: 6)
!3435 = !DILabel(scope: !3414, name: "process_string", file: !288, line: 615)
!3436 = !DILocation(line: 0, scope: !3358)
!3437 = !DILocation(line: 251, column: 2, scope: !3358)
!3438 = !DILocation(line: 251, column: 10, scope: !3358)
!3439 = !DILocation(line: 252, column: 2, scope: !3358)
!3440 = !DILocation(line: 252, column: 10, scope: !3358)
!3441 = !DILocation(line: 263, column: 29, scope: !3358)
!3442 = !DILocation(line: 263, column: 21, scope: !3358)
!3443 = !DILocation(line: 268, column: 21, scope: !3358)
!3444 = !DILocation(line: 268, column: 19, scope: !3358)
!3445 = !DILocation(line: 273, column: 6, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3358, file: !288, line: 273, column: 6)
!3447 = !DILocation(line: 273, column: 26, scope: !3446)
!3448 = !DILocation(line: 273, column: 6, scope: !3358)
!3449 = !DILocation(line: 297, column: 6, scope: !3358)
!3450 = !DILocation(line: 305, column: 11, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3358, file: !288, line: 305, column: 6)
!3452 = !DILocation(line: 305, column: 6, scope: !3358)
!3453 = !DILocation(line: 327, column: 19, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3358, file: !288, line: 327, column: 6)
!3455 = !DILocation(line: 327, column: 22, scope: !3454)
!3456 = !DILocation(line: 327, column: 33, scope: !3454)
!3457 = !DILocation(line: 327, column: 50, scope: !3454)
!3458 = !DILocation(line: 327, column: 6, scope: !3358)
!3459 = !DILocation(line: 338, column: 9, scope: !3358)
!3460 = !DILocation(line: 341, column: 2, scope: !3358)
!3461 = !DILocation(line: 472, column: 8, scope: !3407)
!3462 = !DILocation(line: 473, column: 14, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !288, line: 473, column: 9)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !288, line: 472, column: 18)
!3465 = distinct !DILexicalBlock(scope: !3407, file: !288, line: 472, column: 8)
!3466 = !DILocation(line: 473, column: 9, scope: !3464)
!3467 = !DILocation(line: 479, column: 5, scope: !3464)
!3468 = !DILocation(line: 468, column: 9, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3407, file: !288, line: 468, column: 8)
!3470 = !DILocation(line: 468, column: 8, scope: !3469)
!3471 = !DILocation(line: 468, column: 15, scope: !3469)
!3472 = !DILocation(line: 468, column: 8, scope: !3407)
!3473 = distinct !{!3473, !3474, !3475}
!3474 = !DILocation(line: 343, column: 2, scope: !3358)
!3475 = !DILocation(line: 712, column: 2, scope: !3358)
!3476 = !DILocation(line: 481, column: 4, scope: !3407)
!3477 = !DILocation(line: 484, column: 12, scope: !3406)
!3478 = !DILocation(line: 485, column: 5, scope: !3406)
!3479 = !DILocation(line: 505, column: 5, scope: !3406)
!3480 = !DILocation(line: 518, column: 5, scope: !3406)
!3481 = !DILocation(line: 523, column: 5, scope: !3406)
!3482 = !DILocation(line: 532, column: 9, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3406, file: !288, line: 532, column: 9)
!3484 = !DILocation(line: 532, column: 17, scope: !3483)
!3485 = !DILocation(line: 532, column: 9, scope: !3406)
!3486 = !DILocation(line: 533, column: 10, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !288, line: 533, column: 10)
!3488 = distinct !DILexicalBlock(scope: !3483, file: !288, line: 532, column: 25)
!3489 = !DILocation(line: 533, column: 18, scope: !3487)
!3490 = !DILocation(line: 0, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3405, file: !288, line: 569, column: 9)
!3492 = !DILocation(line: 0, scope: !3405)
!3493 = !DILocation(line: 579, column: 20, scope: !3405)
!3494 = !DILocation(line: 579, column: 11, scope: !3405)
!3495 = !DILocation(line: 580, column: 9, scope: !3405)
!3496 = !DILocation(line: 582, column: 21, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3498, file: !288, line: 582, column: 10)
!3498 = distinct !DILexicalBlock(scope: !3499, file: !288, line: 580, column: 23)
!3499 = distinct !DILexicalBlock(scope: !3405, file: !288, line: 580, column: 9)
!3500 = !DILocation(line: 582, column: 28, scope: !3497)
!3501 = !DILocation(line: 582, column: 10, scope: !3498)
!3502 = !DILocation(line: 0, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !288, line: 587, column: 17)
!3504 = distinct !DILexicalBlock(scope: !3498, file: !288, line: 585, column: 10)
!3505 = !DILocation(line: 593, column: 9, scope: !3405)
!3506 = !DILocation(line: 600, column: 5, scope: !3406)
!3507 = !DILocation(line: 605, column: 18, scope: !3408)
!3508 = !DILocation(line: 605, column: 9, scope: !3408)
!3509 = !DILocation(line: 608, column: 20, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3408, file: !288, line: 608, column: 7)
!3511 = !DILocation(line: 608, column: 23, scope: !3510)
!3512 = !DILocation(line: 608, column: 34, scope: !3510)
!3513 = !DILocation(line: 608, column: 41, scope: !3510)
!3514 = !DILocation(line: 608, column: 7, scope: !3408)
!3515 = !DILocation(line: 613, column: 7, scope: !3408)
!3516 = !DILocation(line: 614, column: 8, scope: !3414)
!3517 = !DILocation(line: 614, column: 4, scope: !3414)
!3518 = !DILocation(line: 256, column: 6, scope: !3358)
!3519 = !DILocation(line: 254, column: 15, scope: !3358)
!3520 = !DILocation(line: 320, column: 7, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3451, file: !288, line: 305, column: 20)
!3522 = !DILocation(line: 615, column: 1, scope: !3414)
!3523 = !DILocation(line: 616, column: 8, scope: !3414)
!3524 = !DILocation(line: 617, column: 5, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3526, file: !288, line: 616, column: 22)
!3526 = distinct !DILexicalBlock(scope: !3414, file: !288, line: 616, column: 8)
!3527 = !DILocation(line: 617, column: 25, scope: !3525)
!3528 = !DILocation(line: 618, column: 4, scope: !3525)
!3529 = !DILocation(line: 620, column: 26, scope: !3414)
!3530 = !DILocation(line: 620, column: 29, scope: !3414)
!3531 = !DILocation(line: 620, column: 17, scope: !3414)
!3532 = !DILocation(line: 620, column: 43, scope: !3414)
!3533 = !DILocation(line: 0, scope: !3414)
!3534 = !DILocation(line: 623, column: 14, scope: !3419)
!3535 = !DILocation(line: 626, column: 26, scope: !3418)
!3536 = !DILocation(line: 626, column: 37, scope: !3418)
!3537 = !DILocation(line: 0, scope: !3418)
!3538 = !DILocation(line: 634, column: 15, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3418, file: !288, line: 634, column: 9)
!3540 = !DILocation(line: 635, column: 6, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3542, file: !288, line: 635, column: 6)
!3542 = distinct !DILexicalBlock(scope: !3543, file: !288, line: 635, column: 6)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !288, line: 635, column: 6)
!3544 = distinct !DILexicalBlock(scope: !3539, file: !288, line: 634, column: 44)
!3545 = !DILocation(line: 639, column: 15, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3418, file: !288, line: 639, column: 9)
!3547 = !DILocation(line: 639, column: 9, scope: !3418)
!3548 = !DILocation(line: 640, column: 6, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !288, line: 640, column: 6)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !288, line: 640, column: 6)
!3551 = distinct !DILexicalBlock(scope: !3552, file: !288, line: 640, column: 6)
!3552 = distinct !DILexicalBlock(scope: !3546, file: !288, line: 639, column: 43)
!3553 = !DILocation(line: 644, column: 9, scope: !3418)
!3554 = !DILocation(line: 649, column: 27, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !288, line: 644, column: 23)
!3556 = distinct !DILexicalBlock(scope: !3418, file: !288, line: 644, column: 9)
!3557 = !DILocation(line: 649, column: 6, scope: !3555)
!3558 = !DILocation(line: 649, column: 25, scope: !3555)
!3559 = !DILocation(line: 650, column: 27, scope: !3555)
!3560 = !DILocation(line: 650, column: 6, scope: !3555)
!3561 = !DILocation(line: 650, column: 25, scope: !3555)
!3562 = !DILocation(line: 651, column: 10, scope: !3555)
!3563 = !DILocation(line: 653, column: 26, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !288, line: 651, column: 17)
!3565 = distinct !DILexicalBlock(scope: !3555, file: !288, line: 651, column: 10)
!3566 = !DILocation(line: 654, column: 15, scope: !3564)
!3567 = !DILocation(line: 655, column: 6, scope: !3564)
!3568 = !DILocation(line: 656, column: 15, scope: !3569)
!3569 = distinct !DILexicalBlock(scope: !3565, file: !288, line: 655, column: 13)
!3570 = !DILocation(line: 658, column: 16, scope: !3556)
!3571 = !DILocation(line: 663, column: 10, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !288, line: 658, column: 23)
!3573 = distinct !DILexicalBlock(scope: !3556, file: !288, line: 658, column: 16)
!3574 = !DILocation(line: 664, column: 5, scope: !3572)
!3575 = !DILocation(line: 664, column: 16, scope: !3573)
!3576 = !DILocation(line: 669, column: 10, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3578, file: !288, line: 664, column: 28)
!3578 = distinct !DILexicalBlock(scope: !3573, file: !288, line: 664, column: 16)
!3579 = !DILocation(line: 670, column: 5, scope: !3577)
!3580 = !DILocation(line: 675, column: 13, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3578, file: !288, line: 670, column: 12)
!3582 = !DILocation(line: 675, column: 27, scope: !3581)
!3583 = !DILocation(line: 675, column: 10, scope: !3581)
!3584 = !DILocation(line: 678, column: 10, scope: !3418)
!3585 = !DILocation(line: 680, column: 8, scope: !3414)
!3586 = !DILocation(line: 683, column: 14, scope: !3415)
!3587 = !DILocation(line: 684, column: 12, scope: !3421)
!3588 = !DILocation(line: 0, scope: !3421)
!3589 = !DILocation(line: 686, column: 8, scope: !3421)
!3590 = !DILocation(line: 687, column: 5, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3592, file: !288, line: 686, column: 22)
!3592 = distinct !DILexicalBlock(scope: !3421, file: !288, line: 686, column: 8)
!3593 = !DILocation(line: 687, column: 17, scope: !3591)
!3594 = !DILocation(line: 688, column: 4, scope: !3591)
!3595 = !DILocation(line: 698, column: 18, scope: !3427)
!3596 = !DILocation(line: 0, scope: !3427)
!3597 = !DILocation(line: 700, column: 8, scope: !3427)
!3598 = !DILocation(line: 704, column: 6, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !288, line: 703, column: 12)
!3600 = distinct !DILexicalBlock(scope: !3601, file: !288, line: 701, column: 9)
!3601 = distinct !DILexicalBlock(scope: !3602, file: !288, line: 700, column: 22)
!3602 = distinct !DILexicalBlock(scope: !3427, file: !288, line: 700, column: 8)
!3603 = !DILocation(line: 704, column: 24, scope: !3599)
!3604 = !DILocation(line: 706, column: 4, scope: !3601)
!3605 = !DILocation(line: 709, column: 4, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !288, line: 709, column: 4)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !288, line: 709, column: 4)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !288, line: 709, column: 4)
!3609 = distinct !DILexicalBlock(scope: !3428, file: !288, line: 708, column: 10)
!3610 = !DILocation(line: 0, scope: !3422)
!3611 = !DILocation(line: 0, scope: !3408)
!3612 = !DILocation(line: 720, column: 6, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3358, file: !288, line: 720, column: 6)
!3614 = !DILocation(line: 720, column: 17, scope: !3613)
!3615 = !DILocation(line: 720, column: 31, scope: !3613)
!3616 = !DILocation(line: 720, column: 6, scope: !3358)
!3617 = !DILocation(line: 721, column: 3, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3619, file: !288, line: 721, column: 3)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !288, line: 721, column: 3)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !288, line: 721, column: 3)
!3621 = distinct !DILexicalBlock(scope: !3613, file: !288, line: 720, column: 38)
!3622 = !DILocation(line: 729, column: 6, scope: !3358)
!3623 = !DILocation(line: 730, column: 21, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !288, line: 729, column: 20)
!3625 = distinct !DILexicalBlock(scope: !3358, file: !288, line: 729, column: 6)
!3626 = !DILocation(line: 730, column: 27, scope: !3624)
!3627 = !DILocation(line: 730, column: 3, scope: !3624)
!3628 = !DILocation(line: 737, column: 22, scope: !3358)
!3629 = !DILocation(line: 737, column: 20, scope: !3358)
!3630 = !DILocation(line: 0, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3358, file: !288, line: 739, column: 6)
!3632 = !DILocation(line: 745, column: 17, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3631, file: !288, line: 743, column: 9)
!3634 = !DILocation(line: 745, column: 25, scope: !3633)
!3635 = !DILocation(line: 746, column: 17, scope: !3633)
!3636 = !DILocation(line: 746, column: 28, scope: !3633)
!3637 = !DILocation(line: 749, column: 29, scope: !3358)
!3638 = !DILocation(line: 749, column: 16, scope: !3358)
!3639 = !DILocation(line: 749, column: 27, scope: !3358)
!3640 = !DILocation(line: 756, column: 6, scope: !3434)
!3641 = !DILocation(line: 756, column: 6, scope: !3358)
!3642 = !DILocation(line: 757, column: 3, scope: !3432)
!3643 = !DILocation(line: 758, column: 10, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3430, file: !288, line: 758, column: 8)
!3645 = !DILocation(line: 758, column: 25, scope: !3644)
!3646 = !DILocation(line: 758, column: 8, scope: !3430)
!3647 = !DILocation(line: 0, scope: !3430)
!3648 = !DILocation(line: 765, column: 8, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3430, file: !288, line: 765, column: 8)
!3650 = !DILocation(line: 765, column: 19, scope: !3649)
!3651 = !DILocation(line: 765, column: 23, scope: !3649)
!3652 = !DILocation(line: 765, column: 8, scope: !3430)
!3653 = !DILocation(line: 762, column: 33, scope: !3430)
!3654 = !DILocation(line: 769, column: 8, scope: !3430)
!3655 = !DILocation(line: 769, column: 11, scope: !3430)
!3656 = !DILocation(line: 757, column: 27, scope: !3431)
!3657 = !DILocation(line: 757, column: 17, scope: !3431)
!3658 = distinct !{!3658, !3642, !3659}
!3659 = !DILocation(line: 770, column: 3, scope: !3432)
!3660 = !DILocation(line: 774, column: 16, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !288, line: 774, column: 2)
!3662 = distinct !DILexicalBlock(scope: !3358, file: !288, line: 774, column: 2)
!3663 = !DILocation(line: 774, column: 2, scope: !3662)
!3664 = !DILocation(line: 776, column: 16, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !288, line: 776, column: 7)
!3666 = distinct !DILexicalBlock(scope: !3661, file: !288, line: 774, column: 30)
!3667 = !DILocation(line: 776, column: 19, scope: !3665)
!3668 = !DILocation(line: 776, column: 34, scope: !3665)
!3669 = !DILocation(line: 776, column: 7, scope: !3666)
!3670 = !DILocation(line: 780, column: 7, scope: !3666)
!3671 = !DILocation(line: 782, column: 13, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !288, line: 780, column: 19)
!3673 = distinct !DILexicalBlock(scope: !3666, file: !288, line: 780, column: 7)
!3674 = !DILocation(line: 782, column: 8, scope: !3672)
!3675 = !DILocation(line: 782, column: 11, scope: !3672)
!3676 = !DILocation(line: 783, column: 3, scope: !3672)
!3677 = !DILocation(line: 785, column: 26, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3673, file: !288, line: 783, column: 10)
!3679 = !DILocation(line: 785, column: 41, scope: !3678)
!3680 = !DILocation(line: 785, column: 24, scope: !3678)
!3681 = !DILocation(line: 785, column: 8, scope: !3678)
!3682 = !DILocation(line: 787, column: 52, scope: !3678)
!3683 = !DILocation(line: 789, column: 11, scope: !3678)
!3684 = !DILocation(line: 789, column: 21, scope: !3678)
!3685 = !DILocation(line: 0, scope: !3673)
!3686 = !DILocation(line: 793, column: 7, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3666, file: !288, line: 793, column: 7)
!3688 = !DILocation(line: 793, column: 18, scope: !3687)
!3689 = !DILocation(line: 793, column: 22, scope: !3687)
!3690 = !DILocation(line: 793, column: 29, scope: !3687)
!3691 = !DILocation(line: 793, column: 7, scope: !3666)
!3692 = !DILocation(line: 797, column: 12, scope: !3666)
!3693 = !DILocation(line: 797, column: 7, scope: !3666)
!3694 = !DILocation(line: 797, column: 10, scope: !3666)
!3695 = !DILocation(line: 799, column: 3, scope: !3666)
!3696 = !DILocation(line: 800, column: 7, scope: !3666)
!3697 = !DILocation(line: 801, column: 2, scope: !3666)
!3698 = !DILocation(line: 338, column: 4, scope: !3358)
!3699 = !DILocation(line: 774, column: 26, scope: !3661)
!3700 = distinct !{!3700, !3663, !3701}
!3701 = !DILocation(line: 801, column: 2, scope: !3662)
!3702 = !DILocation(line: 808, column: 9, scope: !3358)
!3703 = !DILocation(line: 808, column: 2, scope: !3358)
!3704 = !DILocation(line: 813, column: 1, scope: !3358)
!3705 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3706, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3708)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!360, !279}
!3708 = !{!3709}
!3709 = !DILocalVariable(name: "addr", arg: 1, scope: !3705, file: !288, line: 33, type: !279)
!3710 = !DILocation(line: 0, scope: !3705)
!3711 = !DILocation(line: 41, column: 9, scope: !3705)
!3712 = !DILocation(line: 41, column: 2, scope: !3705)
!3713 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3714, file: !3714, line: 24, type: !3715, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3717)
!3714 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3715 = !DISubroutineType(types: !3716)
!3716 = !{!360, !13}
!3717 = !{!3718}
!3718 = !DILocalVariable(name: "addr", arg: 1, scope: !3713, file: !3714, line: 24, type: !13)
!3719 = !DILocation(line: 0, scope: !3713)
!3720 = !DILocation(line: 49, column: 30, scope: !3713)
!3721 = !DILocation(line: 49, column: 57, scope: !3713)
!3722 = !DILocation(line: 49, column: 2, scope: !3713)
!3723 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3724, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3726)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!109, !107, !234, !110, !279, null}
!3726 = !{!3727, !3728, !3729, !3730, !3731, !3732}
!3727 = !DILocalVariable(name: "packaged", arg: 1, scope: !3723, file: !288, line: 815, type: !107)
!3728 = !DILocalVariable(name: "len", arg: 2, scope: !3723, file: !288, line: 815, type: !234)
!3729 = !DILocalVariable(name: "flags", arg: 3, scope: !3723, file: !288, line: 815, type: !110)
!3730 = !DILocalVariable(name: "format", arg: 4, scope: !3723, file: !288, line: 816, type: !279)
!3731 = !DILocalVariable(name: "ap", scope: !3723, file: !288, line: 818, type: !3361)
!3732 = !DILocalVariable(name: "ret", scope: !3723, file: !288, line: 819, type: !109)
!3733 = !DILocation(line: 0, scope: !3723)
!3734 = !DILocation(line: 818, column: 2, scope: !3723)
!3735 = !DILocation(line: 818, column: 10, scope: !3723)
!3736 = !DILocation(line: 821, column: 2, scope: !3723)
!3737 = !DILocation(line: 822, column: 8, scope: !3723)
!3738 = !DILocation(line: 823, column: 2, scope: !3723)
!3739 = !DILocation(line: 825, column: 1, scope: !3723)
!3740 = !DILocation(line: 824, column: 2, scope: !3723)
!3741 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3742, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3752)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{!109, !3744, !3748, !107, !107}
!3744 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3394, line: 297, baseType: !3745)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 32)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!109, null}
!3748 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3394, line: 328, baseType: !3749)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 32)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!109, !3744, !107, !279, !3361}
!3752 = !{!3753, !3754, !3755, !3756, !3757, !3758, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771}
!3753 = !DILocalVariable(name: "out", arg: 1, scope: !3741, file: !288, line: 827, type: !3744)
!3754 = !DILocalVariable(name: "formatter", arg: 2, scope: !3741, file: !288, line: 828, type: !3748)
!3755 = !DILocalVariable(name: "ctx", arg: 3, scope: !3741, file: !288, line: 829, type: !107)
!3756 = !DILocalVariable(name: "packaged", arg: 4, scope: !3741, file: !288, line: 829, type: !107)
!3757 = !DILocalVariable(name: "buf", scope: !3741, file: !288, line: 831, type: !286)
!3758 = !DILocalVariable(name: "hdr", scope: !3741, file: !288, line: 832, type: !3759)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 32)
!3760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3394, line: 96, size: 64, elements: !3761)
!3761 = !{!3762, !3763}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3760, file: !3394, line: 98, baseType: !3393, size: 32)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3760, file: !3394, line: 101, baseType: !285, size: 32, offset: 32)
!3764 = !DILocalVariable(name: "s", scope: !3741, file: !288, line: 833, type: !285)
!3765 = !DILocalVariable(name: "ps", scope: !3741, file: !288, line: 833, type: !284)
!3766 = !DILocalVariable(name: "i", scope: !3741, file: !288, line: 834, type: !32)
!3767 = !DILocalVariable(name: "args_size", scope: !3741, file: !288, line: 834, type: !32)
!3768 = !DILocalVariable(name: "s_nbr", scope: !3741, file: !288, line: 834, type: !32)
!3769 = !DILocalVariable(name: "ros_nbr", scope: !3741, file: !288, line: 834, type: !32)
!3770 = !DILocalVariable(name: "rws_nbr", scope: !3741, file: !288, line: 834, type: !32)
!3771 = !DILocalVariable(name: "s_idx", scope: !3741, file: !288, line: 834, type: !32)
!3772 = !DILocation(line: 0, scope: !3741)
!3773 = !DILocation(line: 836, column: 10, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3741, file: !288, line: 836, column: 6)
!3775 = !DILocation(line: 836, column: 6, scope: !3741)
!3776 = !DILocation(line: 842, column: 28, scope: !3741)
!3777 = !DILocation(line: 842, column: 14, scope: !3741)
!3778 = !DILocation(line: 852, column: 16, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3780, file: !288, line: 852, column: 2)
!3780 = distinct !DILexicalBlock(scope: !3741, file: !288, line: 852, column: 2)
!3781 = !DILocation(line: 852, column: 2, scope: !3780)
!3782 = !DILocation(line: 841, column: 28, scope: !3741)
!3783 = !DILocation(line: 841, column: 14, scope: !3741)
!3784 = !DILocation(line: 841, column: 32, scope: !3741)
!3785 = !DILocation(line: 847, column: 19, scope: !3741)
!3786 = !DILocation(line: 843, column: 28, scope: !3741)
!3787 = !DILocation(line: 843, column: 14, scope: !3741)
!3788 = !DILocation(line: 847, column: 31, scope: !3741)
!3789 = !DILocation(line: 844, column: 28, scope: !3741)
!3790 = !DILocation(line: 844, column: 14, scope: !3741)
!3791 = !DILocation(line: 847, column: 45, scope: !3741)
!3792 = !DILocation(line: 847, column: 41, scope: !3741)
!3793 = !DILocation(line: 854, column: 24, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3779, file: !288, line: 852, column: 30)
!3795 = !DILocation(line: 854, column: 11, scope: !3794)
!3796 = !DILocation(line: 855, column: 30, scope: !3794)
!3797 = !DILocation(line: 855, column: 22, scope: !3794)
!3798 = !DILocation(line: 855, column: 8, scope: !3794)
!3799 = !DILocation(line: 857, column: 7, scope: !3794)
!3800 = !DILocation(line: 859, column: 8, scope: !3794)
!3801 = !DILocation(line: 859, column: 18, scope: !3794)
!3802 = !DILocation(line: 859, column: 5, scope: !3794)
!3803 = !DILocation(line: 852, column: 26, scope: !3779)
!3804 = distinct !{!3804, !3781, !3805}
!3805 = !DILocation(line: 860, column: 2, scope: !3780)
!3806 = !DILocation(line: 863, column: 6, scope: !3741)
!3807 = !DILocation(line: 866, column: 56, scope: !3741)
!3808 = !DILocation(line: 866, column: 9, scope: !3741)
!3809 = !DILocation(line: 866, column: 2, scope: !3741)
!3810 = !DILocation(line: 867, column: 1, scope: !3741)
!3811 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3812, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3814)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!109, !3744, !3748, !107, !279, !107}
!3814 = !{!3815, !3816, !3817, !3818, !3819, !3820}
!3815 = !DILocalVariable(name: "out", arg: 1, scope: !3811, file: !288, line: 179, type: !3744)
!3816 = !DILocalVariable(name: "formatter", arg: 2, scope: !3811, file: !288, line: 180, type: !3748)
!3817 = !DILocalVariable(name: "ctx", arg: 3, scope: !3811, file: !288, line: 181, type: !107)
!3818 = !DILocalVariable(name: "fmt", arg: 4, scope: !3811, file: !288, line: 182, type: !279)
!3819 = !DILocalVariable(name: "buf", arg: 5, scope: !3811, file: !288, line: 182, type: !107)
!3820 = !DILocalVariable(name: "u", scope: !3811, file: !288, line: 187, type: !3821)
!3821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3811, file: !288, line: 184, size: 32, elements: !3822)
!3822 = !{!3823, !3824}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3821, file: !288, line: 185, baseType: !3361, size: 32)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3821, file: !288, line: 186, baseType: !107, size: 32)
!3825 = !DILocation(line: 0, scope: !3811)
!3826 = !DILocation(line: 191, column: 9, scope: !3811)
!3827 = !DILocation(line: 191, column: 2, scope: !3811)
!3828 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3829, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3831)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!360, !279, !109}
!3831 = !{!3832, !3833, !3834, !3835, !3836}
!3832 = !DILocalVariable(name: "fmt", arg: 1, scope: !3828, file: !288, line: 881, type: !279)
!3833 = !DILocalVariable(name: "n", arg: 2, scope: !3828, file: !288, line: 881, type: !109)
!3834 = !DILocalVariable(name: "c", scope: !3828, file: !288, line: 883, type: !150)
!3835 = !DILocalVariable(name: "mod", scope: !3828, file: !288, line: 884, type: !360)
!3836 = !DILocalVariable(name: "cnt", scope: !3828, file: !288, line: 885, type: !109)
!3837 = !DILocation(line: 0, scope: !3828)
!3838 = !DILocation(line: 887, column: 14, scope: !3828)
!3839 = !DILocation(line: 887, column: 22, scope: !3828)
!3840 = !DILocation(line: 887, column: 2, scope: !3828)
!3841 = !DILocation(line: 887, column: 18, scope: !3828)
!3842 = !DILocation(line: 888, column: 7, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3828, file: !288, line: 887, column: 31)
!3844 = !DILocation(line: 889, column: 12, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !288, line: 889, column: 8)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !288, line: 888, column: 12)
!3847 = distinct !DILexicalBlock(scope: !3843, file: !288, line: 888, column: 7)
!3848 = !DILocation(line: 889, column: 8, scope: !3846)
!3849 = !DILocation(line: 890, column: 11, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !288, line: 890, column: 9)
!3851 = distinct !DILexicalBlock(scope: !3845, file: !288, line: 889, column: 18)
!3852 = !DILocation(line: 890, column: 9, scope: !3851)
!3853 = !DILocation(line: 892, column: 16, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !288, line: 892, column: 16)
!3855 = !DILocation(line: 892, column: 16, scope: !3850)
!3856 = !DILocation(line: 895, column: 15, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3845, file: !288, line: 895, column: 15)
!3858 = !DILocation(line: 895, column: 15, scope: !3845)
!3859 = !DILocation(line: 900, column: 9, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3843, file: !288, line: 900, column: 7)
!3861 = !DILocation(line: 900, column: 7, scope: !3843)
!3862 = distinct !{!3862, !3840, !3863}
!3863 = !DILocation(line: 903, column: 2, scope: !3828)
!3864 = !DILocation(line: 906, column: 1, scope: !3828)
!3865 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3866, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3868)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{!360, !150}
!3868 = !{!3869}
!3869 = !DILocalVariable(name: "c", arg: 1, scope: !3865, file: !288, line: 873, type: !150)
!3870 = !DILocation(line: 0, scope: !3865)
!3871 = !DILocation(line: 875, column: 19, scope: !3865)
!3872 = !DILocation(line: 875, column: 2, scope: !3865)
!3873 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3874, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3880)
!3874 = !DISubroutineType(types: !3875)
!3875 = !{!109, !107, !234, !3876, !107, !110, !2798, !234}
!3876 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3394, line: 308, baseType: !3877)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 32)
!3878 = !DISubroutineType(types: !3879)
!3879 = !{!109, !13, !234, !107}
!3880 = !{!3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3898, !3899, !3900, !3901, !3902, !3908, !3911, !3912, !3913, !3915, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3931, !3934, !3935, !3936, !3937, !3938, !3939, !3941, !3944, !3945, !3946}
!3881 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3873, file: !288, line: 908, type: !107)
!3882 = !DILocalVariable(name: "in_len", arg: 2, scope: !3873, file: !288, line: 909, type: !234)
!3883 = !DILocalVariable(name: "cb", arg: 3, scope: !3873, file: !288, line: 910, type: !3876)
!3884 = !DILocalVariable(name: "ctx", arg: 4, scope: !3873, file: !288, line: 911, type: !107)
!3885 = !DILocalVariable(name: "flags", arg: 5, scope: !3873, file: !288, line: 912, type: !110)
!3886 = !DILocalVariable(name: "strl", arg: 6, scope: !3873, file: !288, line: 913, type: !2798)
!3887 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3873, file: !288, line: 914, type: !234)
!3888 = !DILocalVariable(name: "buf", scope: !3873, file: !288, line: 918, type: !286)
!3889 = !DILocalVariable(name: "buf32", scope: !3873, file: !288, line: 919, type: !943)
!3890 = !DILocalVariable(name: "args_size", scope: !3873, file: !288, line: 920, type: !32)
!3891 = !DILocalVariable(name: "ros_nbr", scope: !3873, file: !288, line: 920, type: !32)
!3892 = !DILocalVariable(name: "rws_nbr", scope: !3873, file: !288, line: 920, type: !32)
!3893 = !DILocalVariable(name: "fmt_present", scope: !3873, file: !288, line: 921, type: !360)
!3894 = !DILocalVariable(name: "rw_cpy", scope: !3873, file: !288, line: 922, type: !360)
!3895 = !DILocalVariable(name: "ro_cpy", scope: !3873, file: !288, line: 923, type: !360)
!3896 = !DILocalVariable(name: "in_desc", scope: !3873, file: !288, line: 924, type: !3897)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 32)
!3898 = !DILocalVariable(name: "out_len", scope: !3873, file: !288, line: 960, type: !109)
!3899 = !DILocalVariable(name: "fmt", scope: !3873, file: !288, line: 965, type: !279)
!3900 = !DILocalVariable(name: "str_pos", scope: !3873, file: !288, line: 966, type: !286)
!3901 = !DILocalVariable(name: "strl_cnt", scope: !3873, file: !288, line: 967, type: !234)
!3902 = !DILocalVariable(name: "i", scope: !3903, file: !288, line: 973, type: !109)
!3903 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 973, column: 4)
!3904 = distinct !DILexicalBlock(scope: !3905, file: !288, line: 972, column: 15)
!3905 = distinct !DILexicalBlock(scope: !3906, file: !288, line: 972, column: 7)
!3906 = distinct !DILexicalBlock(scope: !3907, file: !288, line: 970, column: 18)
!3907 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 970, column: 6)
!3908 = !DILocalVariable(name: "str", scope: !3909, file: !288, line: 974, type: !279)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !288, line: 973, column: 38)
!3910 = distinct !DILexicalBlock(scope: !3903, file: !288, line: 973, column: 4)
!3911 = !DILocalVariable(name: "len", scope: !3909, file: !288, line: 975, type: !109)
!3912 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3906, file: !288, line: 990, type: !360)
!3913 = !DILocalVariable(name: "i", scope: !3914, file: !288, line: 995, type: !109)
!3914 = distinct !DILexicalBlock(scope: !3906, file: !288, line: 995, column: 3)
!3915 = !DILocalVariable(name: "arg_idx", scope: !3916, file: !288, line: 996, type: !180)
!3916 = distinct !DILexicalBlock(scope: !3917, file: !288, line: 995, column: 37)
!3917 = distinct !DILexicalBlock(scope: !3914, file: !288, line: 995, column: 3)
!3918 = !DILocalVariable(name: "arg_pos", scope: !3916, file: !288, line: 997, type: !180)
!3919 = !DILocalVariable(name: "str", scope: !3916, file: !288, line: 998, type: !279)
!3920 = !DILocalVariable(name: "is_ro", scope: !3916, file: !288, line: 999, type: !360)
!3921 = !DILocalVariable(name: "len", scope: !3916, file: !288, line: 1000, type: !109)
!3922 = !DILocalVariable(name: "out_desc", scope: !3873, file: !288, line: 1038, type: !3397)
!3923 = !DILocalVariable(name: "cpy_str_pos", scope: !3873, file: !288, line: 1040, type: !3379)
!3924 = !DILocalVariable(name: "keep_str_pos", scope: !3873, file: !288, line: 1042, type: !3379)
!3925 = !DILocalVariable(name: "scpy_cnt", scope: !3873, file: !288, line: 1043, type: !180)
!3926 = !DILocalVariable(name: "keep_cnt", scope: !3873, file: !288, line: 1044, type: !180)
!3927 = !DILocalVariable(name: "dst", scope: !3873, file: !288, line: 1045, type: !286)
!3928 = !DILocalVariable(name: "rv", scope: !3873, file: !288, line: 1046, type: !109)
!3929 = !DILocalVariable(name: "i", scope: !3930, file: !288, line: 1074, type: !109)
!3930 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 1074, column: 2)
!3931 = !DILocalVariable(name: "arg_idx", scope: !3932, file: !288, line: 1075, type: !180)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !288, line: 1074, column: 36)
!3933 = distinct !DILexicalBlock(scope: !3930, file: !288, line: 1074, column: 2)
!3934 = !DILocalVariable(name: "arg_pos", scope: !3932, file: !288, line: 1076, type: !180)
!3935 = !DILocalVariable(name: "str", scope: !3932, file: !288, line: 1077, type: !279)
!3936 = !DILocalVariable(name: "is_ro", scope: !3932, file: !288, line: 1078, type: !360)
!3937 = !DILocalVariable(name: "in_desc_backup", scope: !3873, file: !288, line: 1114, type: !3397)
!3938 = !DILocalVariable(name: "strs_len", scope: !3873, file: !288, line: 1134, type: !234)
!3939 = !DILocalVariable(name: "i", scope: !3940, file: !288, line: 1143, type: !109)
!3940 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 1143, column: 2)
!3941 = !DILocalVariable(name: "loc", scope: !3942, file: !288, line: 1144, type: !180)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !288, line: 1143, column: 37)
!3943 = distinct !DILexicalBlock(scope: !3940, file: !288, line: 1143, column: 2)
!3944 = !DILocalVariable(name: "str", scope: !3942, file: !288, line: 1145, type: !279)
!3945 = !DILocalVariable(name: "str_len", scope: !3942, file: !288, line: 1146, type: !194)
!3946 = !DILabel(scope: !3947, name: "calculate_string_length", file: !288, line: 1021)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !288, line: 1020, column: 56)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !288, line: 1020, column: 15)
!3949 = distinct !DILexicalBlock(scope: !3916, file: !288, line: 1014, column: 8)
!3950 = !DILocation(line: 0, scope: !3873)
!3951 = !DILocation(line: 916, column: 2, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !288, line: 916, column: 2)
!3953 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 916, column: 2)
!3954 = !DILocation(line: 916, column: 2, scope: !3953)
!3955 = !DILocation(line: 916, column: 2, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3952, file: !288, line: 916, column: 2)
!3957 = !DILocation(line: 919, column: 20, scope: !3873)
!3958 = !DILocation(line: 921, column: 27, scope: !3873)
!3959 = !DILocation(line: 921, column: 21, scope: !3873)
!3960 = !DILocation(line: 926, column: 18, scope: !3873)
!3961 = !DILocation(line: 926, column: 11, scope: !3873)
!3962 = !DILocation(line: 926, column: 34, scope: !3873)
!3963 = !DILocation(line: 931, column: 21, scope: !3873)
!3964 = !DILocation(line: 931, column: 12, scope: !3873)
!3965 = !DILocation(line: 932, column: 11, scope: !3873)
!3966 = !DILocation(line: 932, column: 19, scope: !3873)
!3967 = !DILocation(line: 938, column: 21, scope: !3873)
!3968 = !DILocation(line: 938, column: 12, scope: !3873)
!3969 = !DILocation(line: 939, column: 19, scope: !3873)
!3970 = !DILocation(line: 939, column: 23, scope: !3873)
!3971 = !DILocation(line: 946, column: 14, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 946, column: 6)
!3973 = !DILocation(line: 947, column: 7, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !288, line: 947, column: 7)
!3975 = distinct !DILexicalBlock(scope: !3972, file: !288, line: 946, column: 26)
!3976 = !DILocation(line: 947, column: 7, scope: !3975)
!3977 = !DILocation(line: 948, column: 4, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3974, file: !288, line: 947, column: 11)
!3979 = !DILocation(line: 949, column: 3, scope: !3978)
!3980 = !DILocation(line: 958, column: 23, scope: !3873)
!3981 = !DILocation(line: 958, column: 14, scope: !3873)
!3982 = !DILocation(line: 958, column: 27, scope: !3873)
!3983 = !DILocation(line: 965, column: 41, scope: !3873)
!3984 = !DILocation(line: 965, column: 20, scope: !3873)
!3985 = !DILocation(line: 966, column: 22, scope: !3873)
!3986 = !DILocation(line: 970, column: 9, scope: !3907)
!3987 = !DILocation(line: 970, column: 6, scope: !3873)
!3988 = !DILocation(line: 972, column: 7, scope: !3906)
!3989 = !DILocation(line: 0, scope: !3903)
!3990 = !DILocation(line: 973, column: 4, scope: !3903)
!3991 = !DILocation(line: 974, column: 46, scope: !3909)
!3992 = !DILocation(line: 974, column: 40, scope: !3909)
!3993 = !DILocation(line: 974, column: 23, scope: !3909)
!3994 = !DILocation(line: 0, scope: !3909)
!3995 = !DILocation(line: 975, column: 15, scope: !3909)
!3996 = !DILocation(line: 978, column: 14, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3909, file: !288, line: 978, column: 9)
!3998 = !DILocation(line: 979, column: 25, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3997, file: !288, line: 978, column: 38)
!4000 = !DILocation(line: 979, column: 19, scope: !3999)
!4001 = !DILocation(line: 979, column: 6, scope: !3999)
!4002 = !DILocation(line: 979, column: 23, scope: !3999)
!4003 = !DILocation(line: 980, column: 5, scope: !3999)
!4004 = !DILocation(line: 981, column: 13, scope: !3909)
!4005 = !DILocation(line: 982, column: 12, scope: !3909)
!4006 = !DILocation(line: 973, column: 34, scope: !3910)
!4007 = !DILocation(line: 973, column: 22, scope: !3910)
!4008 = distinct !{!4008, !3990, !4009}
!4009 = !DILocation(line: 983, column: 4, scope: !3903)
!4010 = !DILocation(line: 985, column: 16, scope: !4011)
!4011 = distinct !DILexicalBlock(scope: !4012, file: !288, line: 985, column: 8)
!4012 = distinct !DILexicalBlock(scope: !3905, file: !288, line: 984, column: 10)
!4013 = !DILocation(line: 967, column: 9, scope: !3873)
!4014 = !DILocation(line: 971, column: 11, scope: !3906)
!4015 = !DILocation(line: 0, scope: !3906)
!4016 = !DILocation(line: 0, scope: !3914)
!4017 = !DILocation(line: 995, column: 21, scope: !3917)
!4018 = !DILocation(line: 995, column: 3, scope: !3914)
!4019 = !DILocation(line: 990, column: 34, scope: !3906)
!4020 = !DILocation(line: 990, column: 26, scope: !3906)
!4021 = !DILocation(line: 996, column: 30, scope: !3916)
!4022 = !DILocation(line: 0, scope: !3916)
!4023 = !DILocation(line: 997, column: 30, scope: !3916)
!4024 = !DILocation(line: 997, column: 22, scope: !3916)
!4025 = !DILocation(line: 998, column: 39, scope: !3916)
!4026 = !DILocation(line: 998, column: 22, scope: !3916)
!4027 = !DILocation(line: 999, column: 17, scope: !3916)
!4028 = !DILocation(line: 1002, column: 20, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !3916, file: !288, line: 1002, column: 8)
!4030 = !DILocation(line: 996, column: 22, scope: !3916)
!4031 = !DILocation(line: 1002, column: 35, scope: !4029)
!4032 = !DILocation(line: 1002, column: 23, scope: !4029)
!4033 = !DILocation(line: 1002, column: 8, scope: !3916)
!4034 = !DILocation(line: 1003, column: 5, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !288, line: 1003, column: 5)
!4036 = distinct !DILexicalBlock(scope: !4037, file: !288, line: 1003, column: 5)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !288, line: 1003, column: 5)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !288, line: 1003, column: 5)
!4039 = distinct !DILexicalBlock(scope: !4029, file: !288, line: 1002, column: 45)
!4040 = !DILocation(line: 1010, column: 13, scope: !4039)
!4041 = !DILocation(line: 1011, column: 5, scope: !4039)
!4042 = !DILocation(line: 1014, column: 8, scope: !3916)
!4043 = !DILocation(line: 1015, column: 9, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !3949, file: !288, line: 1014, column: 15)
!4045 = !DILocation(line: 1018, column: 14, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !288, line: 1017, column: 12)
!4047 = distinct !DILexicalBlock(scope: !4044, file: !288, line: 1015, column: 9)
!4048 = !DILocation(line: 1020, column: 4, scope: !4044)
!4049 = !DILocation(line: 1020, column: 15, scope: !3949)
!4050 = !DILocation(line: 1021, column: 1, scope: !3947)
!4051 = !DILocation(line: 1022, column: 11, scope: !3947)
!4052 = !DILocation(line: 1025, column: 14, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !3947, file: !288, line: 1025, column: 9)
!4054 = !DILocation(line: 1026, column: 25, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4053, file: !288, line: 1025, column: 38)
!4056 = !DILocation(line: 1026, column: 19, scope: !4055)
!4057 = !DILocation(line: 1026, column: 6, scope: !4055)
!4058 = !DILocation(line: 1026, column: 23, scope: !4055)
!4059 = !DILocation(line: 1027, column: 5, scope: !4055)
!4060 = !DILocation(line: 1031, column: 21, scope: !3947)
!4061 = !DILocation(line: 1031, column: 13, scope: !3947)
!4062 = !DILocation(line: 1032, column: 4, scope: !3947)
!4063 = !DILocation(line: 995, column: 33, scope: !3917)
!4064 = distinct !{!4064, !4018, !4065}
!4065 = !DILocation(line: 1033, column: 3, scope: !3914)
!4066 = !DILocation(line: 1040, column: 10, scope: !3873)
!4067 = !DILocation(line: 1042, column: 10, scope: !3873)
!4068 = !DILocation(line: 1052, column: 6, scope: !3873)
!4069 = !DILocation(line: 1055, column: 9, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !288, line: 1052, column: 14)
!4071 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 1052, column: 6)
!4072 = !DILocation(line: 1056, column: 2, scope: !4070)
!4073 = !DILocation(line: 1056, column: 21, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4071, file: !288, line: 1056, column: 13)
!4075 = !DILocation(line: 1066, column: 3, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !288, line: 1065, column: 11)
!4077 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 1065, column: 6)
!4078 = !DILocation(line: 1067, column: 2, scope: !4076)
!4079 = !DILocation(line: 1068, column: 10, scope: !3873)
!4080 = !DILocation(line: 0, scope: !3930)
!4081 = !DILocation(line: 1074, column: 20, scope: !3933)
!4082 = !DILocation(line: 1074, column: 2, scope: !3930)
!4083 = !DILocation(line: 1110, column: 24, scope: !3873)
!4084 = !DILocation(line: 1053, column: 12, scope: !4070)
!4085 = !DILocation(line: 1054, column: 12, scope: !4070)
!4086 = !DILocation(line: 1108, column: 30, scope: !3873)
!4087 = !DILocation(line: 1108, column: 40, scope: !3873)
!4088 = !DILocation(line: 1108, column: 38, scope: !3873)
!4089 = !DILocation(line: 1109, column: 31, scope: !3873)
!4090 = !DILocation(line: 1109, column: 24, scope: !3873)
!4091 = !DILocation(line: 1110, column: 31, scope: !3873)
!4092 = !DILocation(line: 1114, column: 31, scope: !3873)
!4093 = !DILocation(line: 1114, column: 48, scope: !3873)
!4094 = !DILocation(line: 1115, column: 13, scope: !3873)
!4095 = !DILocation(line: 1118, column: 7, scope: !3873)
!4096 = !DILocation(line: 1119, column: 9, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 1119, column: 6)
!4098 = !DILocation(line: 1119, column: 6, scope: !3873)
!4099 = !DILocation(line: 1075, column: 29, scope: !3932)
!4100 = !DILocation(line: 1075, column: 21, scope: !3932)
!4101 = !DILocation(line: 0, scope: !3932)
!4102 = !DILocation(line: 1076, column: 29, scope: !3932)
!4103 = !DILocation(line: 1076, column: 21, scope: !3932)
!4104 = !DILocation(line: 1077, column: 38, scope: !3932)
!4105 = !DILocation(line: 1077, column: 21, scope: !3932)
!4106 = !DILocation(line: 1078, column: 16, scope: !3932)
!4107 = !DILocation(line: 1080, column: 19, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !3932, file: !288, line: 1080, column: 7)
!4109 = !DILocation(line: 1080, column: 34, scope: !4108)
!4110 = !DILocation(line: 1080, column: 22, scope: !4108)
!4111 = !DILocation(line: 1080, column: 7, scope: !3932)
!4112 = !DILocation(line: 1084, column: 7, scope: !3932)
!4113 = !DILocation(line: 1085, column: 8, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4115, file: !288, line: 1084, column: 14)
!4115 = distinct !DILexicalBlock(scope: !3932, file: !288, line: 1084, column: 7)
!4116 = !DILocation(line: 1086, column: 5, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !288, line: 1086, column: 5)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !288, line: 1086, column: 5)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !288, line: 1085, column: 49)
!4120 = distinct !DILexicalBlock(scope: !4114, file: !288, line: 1085, column: 8)
!4121 = !DILocation(line: 1086, column: 5, scope: !4118)
!4122 = !DILocation(line: 1086, column: 5, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4117, file: !288, line: 1086, column: 5)
!4124 = !DILocation(line: 1087, column: 25, scope: !4119)
!4125 = !DILocation(line: 1087, column: 5, scope: !4119)
!4126 = !DILocation(line: 1088, column: 4, scope: !4119)
!4127 = !DILocation(line: 1088, column: 15, scope: !4120)
!4128 = !DILocation(line: 1089, column: 5, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4130, file: !288, line: 1089, column: 5)
!4130 = distinct !DILexicalBlock(scope: !4131, file: !288, line: 1089, column: 5)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !288, line: 1088, column: 61)
!4132 = distinct !DILexicalBlock(scope: !4120, file: !288, line: 1088, column: 15)
!4133 = !DILocation(line: 1089, column: 5, scope: !4130)
!4134 = !DILocation(line: 1089, column: 5, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4129, file: !288, line: 1089, column: 5)
!4136 = !DILocation(line: 1090, column: 26, scope: !4131)
!4137 = !DILocation(line: 1090, column: 5, scope: !4131)
!4138 = !DILocation(line: 1091, column: 4, scope: !4131)
!4139 = !DILocation(line: 1095, column: 8, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4115, file: !288, line: 1094, column: 10)
!4141 = !DILocation(line: 1096, column: 5, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4143, file: !288, line: 1096, column: 5)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !288, line: 1096, column: 5)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !288, line: 1095, column: 49)
!4145 = distinct !DILexicalBlock(scope: !4140, file: !288, line: 1095, column: 8)
!4146 = !DILocation(line: 1096, column: 5, scope: !4143)
!4147 = !DILocation(line: 1096, column: 5, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4142, file: !288, line: 1096, column: 5)
!4149 = !DILocation(line: 1097, column: 25, scope: !4144)
!4150 = !DILocation(line: 1097, column: 5, scope: !4144)
!4151 = !DILocation(line: 1098, column: 4, scope: !4144)
!4152 = !DILocation(line: 1099, column: 5, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4154, file: !288, line: 1099, column: 5)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !288, line: 1099, column: 5)
!4155 = distinct !DILexicalBlock(scope: !4145, file: !288, line: 1098, column: 11)
!4156 = !DILocation(line: 1099, column: 5, scope: !4154)
!4157 = !DILocation(line: 1099, column: 5, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4153, file: !288, line: 1099, column: 5)
!4159 = !DILocation(line: 1100, column: 26, scope: !4155)
!4160 = !DILocation(line: 1100, column: 5, scope: !4155)
!4161 = !DILocation(line: 1100, column: 30, scope: !4155)
!4162 = !DILocation(line: 1101, column: 26, scope: !4155)
!4163 = !DILocation(line: 1101, column: 5, scope: !4155)
!4164 = !DILocation(line: 0, scope: !4115)
!4165 = !DILocation(line: 1074, column: 32, scope: !3933)
!4166 = distinct !{!4166, !4082, !4167}
!4167 = !DILocation(line: 1104, column: 2, scope: !3930)
!4168 = !DILocation(line: 1124, column: 13, scope: !3873)
!4169 = !DILocation(line: 1127, column: 10, scope: !3873)
!4170 = !DILocation(line: 1127, column: 7, scope: !3873)
!4171 = !DILocation(line: 1128, column: 9, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 1128, column: 6)
!4173 = !DILocation(line: 1128, column: 6, scope: !3873)
!4174 = !DILocation(line: 1134, column: 27, scope: !3873)
!4175 = !DILocation(line: 1136, column: 7, scope: !3873)
!4176 = !DILocation(line: 1137, column: 9, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !3873, file: !288, line: 1137, column: 6)
!4178 = !DILocation(line: 1137, column: 6, scope: !3873)
!4179 = !DILocation(line: 1131, column: 10, scope: !3873)
!4180 = !DILocation(line: 1140, column: 10, scope: !3873)
!4181 = !DILocation(line: 0, scope: !3940)
!4182 = !DILocation(line: 1143, column: 20, scope: !3943)
!4183 = !DILocation(line: 1143, column: 2, scope: !3940)
!4184 = !DILocation(line: 1144, column: 3, scope: !3942)
!4185 = !DILocation(line: 1144, column: 17, scope: !3942)
!4186 = !DILocation(line: 0, scope: !3942)
!4187 = !DILocation(line: 1144, column: 11, scope: !3942)
!4188 = !DILocation(line: 1145, column: 38, scope: !3942)
!4189 = !DILocation(line: 1145, column: 21, scope: !3942)
!4190 = !DILocation(line: 1146, column: 22, scope: !3942)
!4191 = !DILocation(line: 1146, column: 29, scope: !3942)
!4192 = !DILocation(line: 1148, column: 8, scope: !3942)
!4193 = !DILocation(line: 1149, column: 10, scope: !4194)
!4194 = distinct !DILexicalBlock(scope: !3942, file: !288, line: 1149, column: 7)
!4195 = !DILocation(line: 1149, column: 7, scope: !3942)
!4196 = !DILocation(line: 1154, column: 8, scope: !3942)
!4197 = !DILocation(line: 1155, column: 10, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !3942, file: !288, line: 1155, column: 7)
!4199 = !DILocation(line: 1155, column: 7, scope: !3942)
!4200 = !DILocation(line: 1159, column: 2, scope: !3943)
!4201 = !DILocation(line: 1152, column: 11, scope: !3942)
!4202 = !DILocation(line: 1158, column: 11, scope: !3942)
!4203 = !DILocation(line: 1143, column: 33, scope: !3943)
!4204 = distinct !{!4204, !4183, !4205}
!4205 = !DILocation(line: 1159, column: 2, scope: !3940)
!4206 = !DILocation(line: 1162, column: 8, scope: !3873)
!4207 = !DILocation(line: 1164, column: 2, scope: !3873)
!4208 = !DILocation(line: 1165, column: 1, scope: !3873)
!4209 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4210, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4212)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{!234, !107}
!4212 = !{!4213, !4214, !4215, !4216, !4217, !4218, !4219}
!4213 = !DILocalVariable(name: "packaged", arg: 1, scope: !4209, file: !288, line: 196, type: !107)
!4214 = !DILocalVariable(name: "buf", scope: !4209, file: !288, line: 200, type: !286)
!4215 = !DILocalVariable(name: "start", scope: !4209, file: !288, line: 201, type: !286)
!4216 = !DILocalVariable(name: "args_size", scope: !4209, file: !288, line: 202, type: !32)
!4217 = !DILocalVariable(name: "s_nbr", scope: !4209, file: !288, line: 202, type: !32)
!4218 = !DILocalVariable(name: "ros_nbr", scope: !4209, file: !288, line: 202, type: !32)
!4219 = !DILocalVariable(name: "i", scope: !4220, file: !288, line: 215, type: !109)
!4220 = distinct !DILexicalBlock(scope: !4209, file: !288, line: 215, column: 2)
!4221 = !DILocation(line: 0, scope: !4209)
!4222 = !DILocation(line: 198, column: 2, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !288, line: 198, column: 2)
!4224 = distinct !DILexicalBlock(scope: !4209, file: !288, line: 198, column: 2)
!4225 = !DILocation(line: 198, column: 2, scope: !4224)
!4226 = !DILocation(line: 198, column: 2, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4223, file: !288, line: 198, column: 2)
!4228 = !DILocation(line: 204, column: 14, scope: !4209)
!4229 = !DILocation(line: 204, column: 21, scope: !4209)
!4230 = !DILocation(line: 205, column: 14, scope: !4209)
!4231 = !DILocation(line: 206, column: 14, scope: !4209)
!4232 = !DILocation(line: 209, column: 6, scope: !4209)
!4233 = !DILocation(line: 212, column: 6, scope: !4209)
!4234 = !DILocation(line: 0, scope: !4220)
!4235 = !DILocation(line: 215, column: 20, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4220, file: !288, line: 215, column: 2)
!4237 = !DILocation(line: 215, column: 2, scope: !4220)
!4238 = !DILocation(line: 220, column: 33, scope: !4209)
!4239 = !DILocation(line: 220, column: 2, scope: !4209)
!4240 = !DILocation(line: 216, column: 6, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4236, file: !288, line: 215, column: 34)
!4242 = !DILocation(line: 217, column: 10, scope: !4241)
!4243 = !DILocation(line: 217, column: 36, scope: !4241)
!4244 = !DILocation(line: 217, column: 7, scope: !4241)
!4245 = !DILocation(line: 215, column: 30, scope: !4236)
!4246 = distinct !{!4246, !4237, !4247}
!4247 = !DILocation(line: 218, column: 2, scope: !4220)
!4248 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4249, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4251)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{!109, !3876, !107, !279, !194}
!4251 = !{!4252, !4253, !4254, !4255}
!4252 = !DILocalVariable(name: "cb", arg: 1, scope: !4248, file: !288, line: 223, type: !3876)
!4253 = !DILocalVariable(name: "ctx", arg: 2, scope: !4248, file: !288, line: 223, type: !107)
!4254 = !DILocalVariable(name: "str", arg: 3, scope: !4248, file: !288, line: 223, type: !279)
!4255 = !DILocalVariable(name: "strl", arg: 4, scope: !4248, file: !288, line: 223, type: !194)
!4256 = !DILocation(line: 0, scope: !4248)
!4257 = !DILocation(line: 225, column: 9, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4248, file: !288, line: 225, column: 6)
!4259 = !DILocation(line: 225, column: 6, scope: !4248)
!4260 = !DILocation(line: 226, column: 14, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4258, file: !288, line: 225, column: 18)
!4262 = !DILocation(line: 226, column: 12, scope: !4261)
!4263 = !DILocation(line: 226, column: 3, scope: !4261)
!4264 = !DILocation(line: 229, column: 14, scope: !4248)
!4265 = !DILocation(line: 229, column: 9, scope: !4248)
!4266 = !DILocation(line: 229, column: 27, scope: !4248)
!4267 = !DILocation(line: 229, column: 39, scope: !4248)
!4268 = !DILocation(line: 230, column: 17, scope: !4248)
!4269 = !DILocation(line: 230, column: 9, scope: !4248)
!4270 = !DILocation(line: 230, column: 2, scope: !4248)
!4271 = !DILocation(line: 231, column: 1, scope: !4248)
!4272 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4273)
!4273 = !{!4274}
!4274 = !DILocalVariable(name: "c", arg: 1, scope: !4272, file: !301, line: 45, type: !109)
!4275 = !DILocation(line: 0, scope: !4272)
!4276 = !DILocation(line: 50, column: 2, scope: !4272)
!4277 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4278, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4280)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{null, !302}
!4280 = !{!4281}
!4281 = !DILocalVariable(name: "fn", arg: 1, scope: !4277, file: !301, line: 63, type: !302)
!4282 = !DILocation(line: 0, scope: !4277)
!4283 = !DILocation(line: 65, column: 12, scope: !4277)
!4284 = !DILocation(line: 66, column: 1, scope: !4277)
!4285 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4286, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2043)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!107}
!4288 = !DILocation(line: 78, column: 9, scope: !4285)
!4289 = !DILocation(line: 78, column: 2, scope: !4285)
!4290 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4291, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4299)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{null, !279, !4293}
!4293 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3362, line: 99, baseType: !4294)
!4294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3362, line: 40, baseType: !4295)
!4295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4296)
!4296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4297)
!4297 = !{!4298}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4296, file: !301, line: 79, baseType: !107, size: 32)
!4299 = !{!4300, !4301, !4302}
!4300 = !DILocalVariable(name: "fmt", arg: 1, scope: !4290, file: !301, line: 113, type: !279)
!4301 = !DILocalVariable(name: "ap", arg: 2, scope: !4290, file: !301, line: 113, type: !4293)
!4302 = !DILocalVariable(name: "ctx", scope: !4303, file: !301, line: 121, type: !4305)
!4303 = distinct !DILexicalBlock(scope: !4304, file: !301, line: 120, column: 27)
!4304 = distinct !DILexicalBlock(scope: !4290, file: !301, line: 120, column: 6)
!4305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4306)
!4306 = !{!4307, !4308}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4305, file: !301, line: 85, baseType: !32, size: 32)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4305, file: !301, line: 86, baseType: !4309, offset: 32)
!4309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, elements: !4310)
!4310 = !{!4311}
!4311 = !DISubrange(count: 0)
!4312 = !DILocation(line: 0, scope: !4290)
!4313 = !DILocation(line: 148, column: 3, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4304, file: !301, line: 138, column: 9)
!4315 = !DILocation(line: 155, column: 1, scope: !4290)
!4316 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4317, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4319)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{!109, !109, !107}
!4319 = !{!4320, !4321}
!4320 = !DILocalVariable(name: "c", arg: 1, scope: !4316, file: !301, line: 107, type: !109)
!4321 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4316, file: !301, line: 107, type: !107)
!4322 = !DILocation(line: 0, scope: !4316)
!4323 = !DILocation(line: 110, column: 9, scope: !4316)
!4324 = !DILocation(line: 110, column: 2, scope: !4316)
!4325 = distinct !DISubprogram(name: "cbvprintf", scope: !3394, file: !3394, line: 739, type: !4326, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4328)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!109, !3744, !107, !279, !4293}
!4328 = !{!4329, !4330, !4331, !4332}
!4329 = !DILocalVariable(name: "out", arg: 1, scope: !4325, file: !3394, line: 739, type: !3744)
!4330 = !DILocalVariable(name: "ctx", arg: 2, scope: !4325, file: !3394, line: 739, type: !107)
!4331 = !DILocalVariable(name: "format", arg: 3, scope: !4325, file: !3394, line: 739, type: !279)
!4332 = !DILocalVariable(name: "ap", arg: 4, scope: !4325, file: !3394, line: 739, type: !4293)
!4333 = !DILocation(line: 0, scope: !4325)
!4334 = !DILocation(line: 741, column: 9, scope: !4325)
!4335 = !DILocation(line: 741, column: 2, scope: !4325)
!4336 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4337, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4339)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{null, !285, !234}
!4339 = !{!4340, !4341, !4342}
!4340 = !DILocalVariable(name: "c", arg: 1, scope: !4336, file: !301, line: 157, type: !285)
!4341 = !DILocalVariable(name: "n", arg: 2, scope: !4336, file: !301, line: 157, type: !234)
!4342 = !DILocalVariable(name: "i", scope: !4336, file: !301, line: 159, type: !234)
!4343 = !DILocation(line: 0, scope: !4336)
!4344 = !DILocation(line: 164, column: 16, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4346, file: !301, line: 164, column: 2)
!4346 = distinct !DILexicalBlock(scope: !4336, file: !301, line: 164, column: 2)
!4347 = !DILocation(line: 164, column: 2, scope: !4346)
!4348 = !DILocation(line: 165, column: 3, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4345, file: !301, line: 164, column: 26)
!4350 = !DILocation(line: 165, column: 13, scope: !4349)
!4351 = !DILocation(line: 164, column: 22, scope: !4345)
!4352 = distinct !{!4352, !4347, !4353}
!4353 = !DILocation(line: 166, column: 2, scope: !4346)
!4354 = !DILocation(line: 171, column: 1, scope: !4336)
!4355 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4356, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4358)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{null, !279, null}
!4358 = !{!4359, !4360}
!4359 = !DILocalVariable(name: "fmt", arg: 1, scope: !4355, file: !301, line: 203, type: !279)
!4360 = !DILocalVariable(name: "ap", scope: !4355, file: !301, line: 205, type: !4293)
!4361 = !DILocation(line: 0, scope: !4355)
!4362 = !DILocation(line: 205, column: 2, scope: !4355)
!4363 = !DILocation(line: 205, column: 10, scope: !4355)
!4364 = !DILocation(line: 207, column: 2, scope: !4355)
!4365 = !DILocation(line: 209, column: 2, scope: !4355)
!4366 = !DILocation(line: 211, column: 2, scope: !4355)
!4367 = !DILocation(line: 212, column: 1, scope: !4355)
!4368 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4369, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4371)
!4369 = !DISubroutineType(types: !4370)
!4370 = !{!109, !285, !234, !279, null}
!4371 = !{!4372, !4373, !4374, !4375, !4376}
!4372 = !DILocalVariable(name: "str", arg: 1, scope: !4368, file: !301, line: 239, type: !285)
!4373 = !DILocalVariable(name: "size", arg: 2, scope: !4368, file: !301, line: 239, type: !234)
!4374 = !DILocalVariable(name: "fmt", arg: 3, scope: !4368, file: !301, line: 239, type: !279)
!4375 = !DILocalVariable(name: "ap", scope: !4368, file: !301, line: 241, type: !4293)
!4376 = !DILocalVariable(name: "ret", scope: !4368, file: !301, line: 242, type: !109)
!4377 = !DILocation(line: 0, scope: !4368)
!4378 = !DILocation(line: 241, column: 2, scope: !4368)
!4379 = !DILocation(line: 241, column: 10, scope: !4368)
!4380 = !DILocation(line: 244, column: 2, scope: !4368)
!4381 = !DILocation(line: 245, column: 8, scope: !4368)
!4382 = !DILocation(line: 246, column: 2, scope: !4368)
!4383 = !DILocation(line: 249, column: 1, scope: !4368)
!4384 = !DILocation(line: 248, column: 2, scope: !4368)
!4385 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4386, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4388)
!4386 = !DISubroutineType(types: !4387)
!4387 = !{!109, !285, !234, !279, !4293}
!4388 = !{!4389, !4390, !4391, !4392, !4393}
!4389 = !DILocalVariable(name: "str", arg: 1, scope: !4385, file: !301, line: 251, type: !285)
!4390 = !DILocalVariable(name: "size", arg: 2, scope: !4385, file: !301, line: 251, type: !234)
!4391 = !DILocalVariable(name: "fmt", arg: 3, scope: !4385, file: !301, line: 251, type: !279)
!4392 = !DILocalVariable(name: "ap", arg: 4, scope: !4385, file: !301, line: 251, type: !4293)
!4393 = !DILocalVariable(name: "ctx", scope: !4385, file: !301, line: 253, type: !4394)
!4394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4395)
!4395 = !{!4396, !4397, !4398}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4394, file: !301, line: 218, baseType: !285, size: 32)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4394, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4394, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4399 = !DILocation(line: 0, scope: !4385)
!4400 = !DILocation(line: 253, column: 2, scope: !4385)
!4401 = !DILocation(line: 253, column: 21, scope: !4385)
!4402 = !DILocation(line: 253, column: 27, scope: !4385)
!4403 = !DILocation(line: 255, column: 2, scope: !4385)
!4404 = !DILocation(line: 257, column: 10, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4385, file: !301, line: 257, column: 6)
!4406 = !DILocation(line: 257, column: 22, scope: !4405)
!4407 = !DILocation(line: 257, column: 16, scope: !4405)
!4408 = !DILocation(line: 257, column: 6, scope: !4385)
!4409 = !DILocation(line: 258, column: 3, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4405, file: !301, line: 257, column: 27)
!4411 = !DILocation(line: 258, column: 18, scope: !4410)
!4412 = !DILocation(line: 259, column: 2, scope: !4410)
!4413 = !DILocation(line: 262, column: 1, scope: !4385)
!4414 = !DILocation(line: 261, column: 2, scope: !4385)
!4415 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4416, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4419)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!109, !109, !4418}
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 32)
!4419 = !{!4420, !4421}
!4420 = !DILocalVariable(name: "c", arg: 1, scope: !4415, file: !301, line: 223, type: !109)
!4421 = !DILocalVariable(name: "ctx", arg: 2, scope: !4415, file: !301, line: 223, type: !4418)
!4422 = !DILocation(line: 0, scope: !4415)
!4423 = !DILocation(line: 225, column: 11, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4415, file: !301, line: 225, column: 6)
!4425 = !DILocation(line: 225, column: 15, scope: !4424)
!4426 = !DILocation(line: 0, scope: !4424)
!4427 = !DILocation(line: 225, column: 23, scope: !4424)
!4428 = !DILocation(line: 225, column: 45, scope: !4424)
!4429 = !DILocation(line: 225, column: 37, scope: !4424)
!4430 = !DILocation(line: 225, column: 6, scope: !4415)
!4431 = !DILocation(line: 226, column: 8, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4424, file: !301, line: 225, column: 50)
!4433 = !DILocation(line: 226, column: 13, scope: !4432)
!4434 = !DILocation(line: 227, column: 3, scope: !4432)
!4435 = !DILocation(line: 230, column: 29, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4415, file: !301, line: 230, column: 6)
!4437 = !DILocation(line: 230, column: 17, scope: !4436)
!4438 = !DILocation(line: 230, column: 6, scope: !4415)
!4439 = !DILocation(line: 231, column: 22, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4436, file: !301, line: 230, column: 34)
!4441 = !DILocation(line: 231, column: 3, scope: !4440)
!4442 = !DILocation(line: 231, column: 26, scope: !4440)
!4443 = !DILocation(line: 232, column: 2, scope: !4440)
!4444 = !DILocation(line: 233, column: 28, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4436, file: !301, line: 232, column: 9)
!4446 = !DILocation(line: 233, column: 22, scope: !4445)
!4447 = !DILocation(line: 233, column: 3, scope: !4445)
!4448 = !DILocation(line: 233, column: 26, scope: !4445)
!4449 = !DILocation(line: 237, column: 1, scope: !4415)
!4450 = distinct !DISubprogram(name: "z_thread_entry", scope: !4451, file: !4451, line: 30, type: !4452, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !4454)
!4451 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4452 = !DISubroutineType(types: !4453)
!4453 = !{null, !3327, !107, !107, !107}
!4454 = !{!4455, !4456, !4457, !4458}
!4455 = !DILocalVariable(name: "entry", arg: 1, scope: !4450, file: !4451, line: 30, type: !3327)
!4456 = !DILocalVariable(name: "p1", arg: 2, scope: !4450, file: !4451, line: 31, type: !107)
!4457 = !DILocalVariable(name: "p2", arg: 3, scope: !4450, file: !4451, line: 31, type: !107)
!4458 = !DILocalVariable(name: "p3", arg: 4, scope: !4450, file: !4451, line: 31, type: !107)
!4459 = !DILocation(line: 0, scope: !4450)
!4460 = !DILocation(line: 36, column: 2, scope: !4450)
!4461 = !DILocation(line: 38, column: 17, scope: !4450)
!4462 = !DILocation(line: 38, column: 2, scope: !4450)
!4463 = !DILocation(line: 45, column: 2, scope: !4450)
!4464 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4465, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !2043)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{!4467}
!4467 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !4468)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 32)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !4470)
!4470 = !{!4471, !4529, !4541, !4542, !4543, !4544, !4545, !4551, !4566}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4469, file: !158, line: 247, baseType: !4472, size: 384)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !4473)
!4473 = !{!4474, !4498, !4505, !4506, !4507, !4516, !4517, !4518}
!4474 = !DIDerivedType(tag: DW_TAG_member, scope: !4472, file: !158, line: 60, baseType: !4475, size: 64)
!4475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4472, file: !158, line: 60, size: 64, elements: !4476)
!4476 = !{!4477, !4492}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4475, file: !158, line: 61, baseType: !4478, size: 64)
!4478 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4479)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4480)
!4480 = !{!4481, !4487}
!4481 = !DIDerivedType(tag: DW_TAG_member, scope: !4479, file: !127, line: 38, baseType: !4482, size: 32)
!4482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4479, file: !127, line: 38, size: 32, elements: !4483)
!4483 = !{!4484, !4486}
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4482, file: !127, line: 39, baseType: !4485, size: 32)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 32)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4482, file: !127, line: 40, baseType: !4485, size: 32)
!4487 = !DIDerivedType(tag: DW_TAG_member, scope: !4479, file: !127, line: 42, baseType: !4488, size: 32, offset: 32)
!4488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4479, file: !127, line: 42, size: 32, elements: !4489)
!4489 = !{!4490, !4491}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4488, file: !127, line: 43, baseType: !4485, size: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4488, file: !127, line: 44, baseType: !4485, size: 32)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4475, file: !158, line: 62, baseType: !4493, size: 64)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !4494)
!4494 = !{!4495}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4493, file: !170, line: 50, baseType: !4496, size: 64)
!4496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4497, size: 64, elements: !175)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 32)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4472, file: !158, line: 68, baseType: !4499, size: 32, offset: 64)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4500, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4501)
!4501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4502)
!4502 = !{!4503}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4501, file: !122, line: 232, baseType: !4504, size: 64)
!4504 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4479)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4472, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4472, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!4507 = !DIDerivedType(tag: DW_TAG_member, scope: !4472, file: !158, line: 90, baseType: !4508, size: 16, offset: 112)
!4508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4472, file: !158, line: 90, size: 16, elements: !4509)
!4509 = !{!4510, !4515}
!4510 = !DIDerivedType(tag: DW_TAG_member, scope: !4508, file: !158, line: 91, baseType: !4511, size: 16)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4508, file: !158, line: 91, size: 16, elements: !4512)
!4512 = !{!4513, !4514}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4511, file: !158, line: 96, baseType: !190, size: 8)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4511, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4508, file: !158, line: 100, baseType: !194, size: 16)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4472, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4472, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4472, file: !158, line: 131, baseType: !4519, size: 192, offset: 192)
!4519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4520)
!4520 = !{!4521, !4522, !4528}
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4519, file: !122, line: 245, baseType: !4478, size: 64)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4519, file: !122, line: 246, baseType: !4523, size: 32, offset: 64)
!4523 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4524)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 32)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{null, !4527}
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4519, size: 32)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4519, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4469, file: !158, line: 250, baseType: !4530, size: 288, offset: 384)
!4530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !4531)
!4531 = !{!4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4530, file: !211, line: 26, baseType: !110, size: 32)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4530, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4530, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4530, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4530, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4530, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4530, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4530, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4530, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4469, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4469, file: !158, line: 256, baseType: !4500, size: 64, offset: 704)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4469, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4469, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4469, file: !158, line: 300, baseType: !4546, size: 96, offset: 1056)
!4546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !4547)
!4547 = !{!4548, !4549, !4550}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4546, file: !158, line: 153, baseType: !22, size: 32)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4546, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4546, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4469, file: !158, line: 325, baseType: !4552, size: 32, offset: 1152)
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 32)
!4553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4554)
!4554 = !{!4555, !4561, !4562}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4553, file: !118, line: 5074, baseType: !4556, size: 96)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !4557)
!4557 = !{!4558, !4559, !4560}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4556, file: !243, line: 57, baseType: !246, size: 32)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4556, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4556, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4553, file: !118, line: 5075, baseType: !4500, size: 64, offset: 96)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4553, file: !118, line: 5076, baseType: !4563, size: 32, offset: 160)
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !4564)
!4564 = !{!4565}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4563, file: !253, line: 52, baseType: !22, size: 32)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4469, file: !158, line: 343, baseType: !4567, size: 64, offset: 1184)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !4568)
!4568 = !{!4569, !4570}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4567, file: !211, line: 63, baseType: !110, size: 32)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4567, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!4571 = !DILocation(line: 535, column: 9, scope: !4464)
!4572 = !DILocation(line: 535, column: 2, scope: !4464)
!4573 = distinct !DISubprogram(name: "k_thread_abort", scope: !3206, file: !3206, line: 188, type: !4574, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !4576)
!4574 = !DISubroutineType(types: !4575)
!4575 = !{null, !4467}
!4576 = !{!4577}
!4577 = !DILocalVariable(name: "thread", arg: 1, scope: !4573, file: !3206, line: 188, type: !4467)
!4578 = !DILocation(line: 0, scope: !4573)
!4579 = !DILocation(line: 197, column: 2, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4573, file: !3206, line: 197, column: 2)
!4581 = !{i64 2152220857}
!4582 = !DILocation(line: 198, column: 2, scope: !4573)
!4583 = !DILocation(line: 199, column: 1, scope: !4573)
!4584 = distinct !DISubprogram(name: "z_current_get", scope: !3206, file: !3206, line: 173, type: !4465, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2526, retainedNodes: !2043)
!4585 = !DILocation(line: 180, column: 2, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4584, file: !3206, line: 180, column: 2)
!4587 = !{i64 2152220789}
!4588 = !DILocation(line: 181, column: 9, scope: !4584)
!4589 = !DILocation(line: 181, column: 2, scope: !4584)
!4590 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2532, file: !2532, line: 1338, type: !4591, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !4599)
!4591 = !DISubroutineType(types: !4592)
!4592 = !{!109, !3744, !107, !279, !4593, !110}
!4593 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3362, line: 99, baseType: !4594)
!4594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3362, line: 40, baseType: !4595)
!4595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2532, baseType: !4596)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4597)
!4597 = !{!4598}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4596, file: !2532, baseType: !107, size: 32)
!4599 = !{!4600, !4601, !4602, !4603, !4604, !4605, !4609, !4610, !4611, !4613, !4618, !4661, !4664, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4676, !4677, !4678, !4682, !4685, !4687, !4690, !4691, !4692, !4697, !4703, !4706, !4710, !4716, !4720, !4723, !4725, !4728}
!4600 = !DILocalVariable(name: "out", arg: 1, scope: !4590, file: !2532, line: 1338, type: !3744)
!4601 = !DILocalVariable(name: "ctx", arg: 2, scope: !4590, file: !2532, line: 1338, type: !107)
!4602 = !DILocalVariable(name: "fp", arg: 3, scope: !4590, file: !2532, line: 1338, type: !279)
!4603 = !DILocalVariable(name: "ap", arg: 4, scope: !4590, file: !2532, line: 1339, type: !4593)
!4604 = !DILocalVariable(name: "flags", arg: 5, scope: !4590, file: !2532, line: 1339, type: !110)
!4605 = !DILocalVariable(name: "buf", scope: !4590, file: !2532, line: 1341, type: !4606)
!4606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 176, elements: !4607)
!4607 = !{!4608}
!4608 = !DISubrange(count: 22)
!4609 = !DILocalVariable(name: "count", scope: !4590, file: !2532, line: 1342, type: !234)
!4610 = !DILocalVariable(name: "sint", scope: !4590, file: !2532, line: 1343, type: !2551)
!4611 = !DILocalVariable(name: "tagged_ap", scope: !4590, file: !2532, line: 1345, type: !4612)
!4612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !360)
!4613 = !DILocalVariable(name: "rc", scope: !4614, file: !2532, line: 1377, type: !109)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !2532, line: 1377, column: 4)
!4615 = distinct !DILexicalBlock(scope: !4616, file: !2532, line: 1376, column: 19)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1376, column: 7)
!4617 = distinct !DILexicalBlock(scope: !4590, file: !2532, line: 1375, column: 19)
!4618 = !DILocalVariable(name: "state", scope: !4617, file: !2532, line: 1395, type: !4619)
!4619 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4590, file: !2532, line: 1392, size: 192, elements: !4620)
!4620 = !{!4621, !4629}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4619, file: !2532, line: 1393, baseType: !4622, size: 64)
!4622 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2532, line: 166, size: 64, elements: !4623)
!4623 = !{!4624, !4625, !4626, !4627, !4628}
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4622, file: !2532, line: 168, baseType: !2551, size: 64)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4622, file: !2532, line: 171, baseType: !2554, size: 64)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4622, file: !2532, line: 174, baseType: !277, size: 64)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4622, file: !2532, line: 177, baseType: !275, size: 64)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4622, file: !2532, line: 180, baseType: !107, size: 32)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4619, file: !2532, line: 1394, baseType: !4630, size: 96, offset: 64)
!4630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2532, line: 189, size: 96, elements: !4631)
!4631 = !{!4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4656}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4630, file: !2532, line: 191, baseType: !360, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4630, file: !2532, line: 194, baseType: !360, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4630, file: !2532, line: 197, baseType: !360, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4630, file: !2532, line: 200, baseType: !360, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4630, file: !2532, line: 203, baseType: !360, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4630, file: !2532, line: 206, baseType: !360, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4630, file: !2532, line: 209, baseType: !360, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4630, file: !2532, line: 212, baseType: !360, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4630, file: !2532, line: 219, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4630, file: !2532, line: 222, baseType: !360, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4630, file: !2532, line: 229, baseType: !360, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4630, file: !2532, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4630, file: !2532, line: 238, baseType: !360, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4630, file: !2532, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4630, file: !2532, line: 244, baseType: !360, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4630, file: !2532, line: 247, baseType: !360, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4630, file: !2532, line: 252, baseType: !360, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4630, file: !2532, line: 257, baseType: !360, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4630, file: !2532, line: 260, baseType: !181, size: 8, offset: 24)
!4651 = !DIDerivedType(tag: DW_TAG_member, scope: !4630, file: !2532, line: 262, baseType: !4652, size: 32, offset: 32)
!4652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4630, file: !2532, line: 262, size: 32, elements: !4653)
!4653 = !{!4654, !4655}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4652, file: !2532, line: 267, baseType: !109, size: 32)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4652, file: !2532, line: 289, baseType: !109, size: 32)
!4656 = !DIDerivedType(tag: DW_TAG_member, scope: !4630, file: !2532, line: 292, baseType: !4657, size: 32, offset: 64)
!4657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4630, file: !2532, line: 292, size: 32, elements: !4658)
!4658 = !{!4659, !4660}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4657, file: !2532, line: 297, baseType: !109, size: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4657, file: !2532, line: 306, baseType: !109, size: 32)
!4661 = !DILocalVariable(name: "conv", scope: !4617, file: !2532, line: 1400, type: !4662)
!4662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4663)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 32)
!4664 = !DILocalVariable(name: "value", scope: !4617, file: !2532, line: 1401, type: !4665)
!4665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4666)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 32)
!4667 = !DILocalVariable(name: "sp", scope: !4617, file: !2532, line: 1402, type: !279)
!4668 = !DILocalVariable(name: "width", scope: !4617, file: !2532, line: 1403, type: !109)
!4669 = !DILocalVariable(name: "precision", scope: !4617, file: !2532, line: 1404, type: !109)
!4670 = !DILocalVariable(name: "bps", scope: !4617, file: !2532, line: 1405, type: !279)
!4671 = !DILocalVariable(name: "bpe", scope: !4617, file: !2532, line: 1406, type: !279)
!4672 = !DILocalVariable(name: "sign", scope: !4617, file: !2532, line: 1407, type: !150)
!4673 = !DILocalVariable(name: "arg", scope: !4674, file: !2532, line: 1432, type: !109)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !2532, line: 1431, column: 24)
!4675 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1431, column: 7)
!4676 = !DILocalVariable(name: "specifier_cat", scope: !4617, file: !2532, line: 1468, type: !2531)
!4677 = !DILocalVariable(name: "length_mod", scope: !4617, file: !2532, line: 1470, type: !2539)
!4678 = !DILocalVariable(name: "rc", scope: !4679, file: !2532, line: 1575, type: !109)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !2532, line: 1575, column: 4)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2532, line: 1574, column: 43)
!4681 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1574, column: 7)
!4682 = !DILocalVariable(name: "rc", scope: !4683, file: !2532, line: 1584, type: !109)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2532, line: 1584, column: 4)
!4684 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1582, column: 28)
!4685 = !DILocalVariable(name: "len", scope: !4686, file: !2532, line: 1589, type: !234)
!4686 = distinct !DILexicalBlock(scope: !4684, file: !2532, line: 1586, column: 13)
!4687 = !DILocalVariable(name: "len", scope: !4688, file: !2532, line: 1641, type: !234)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2532, line: 1640, column: 24)
!4689 = distinct !DILexicalBlock(scope: !4684, file: !2532, line: 1640, column: 8)
!4690 = !DILocalVariable(name: "nj_len", scope: !4617, file: !2532, line: 1722, type: !234)
!4691 = !DILocalVariable(name: "pad_len", scope: !4617, file: !2532, line: 1723, type: !109)
!4692 = !DILocalVariable(name: "pad", scope: !4693, file: !2532, line: 1751, type: !150)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !2532, line: 1750, column: 26)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !2532, line: 1750, column: 8)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !2532, line: 1747, column: 18)
!4696 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1747, column: 7)
!4697 = !DILocalVariable(name: "rc", scope: !4698, file: !2532, line: 1758, type: !109)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !2532, line: 1758, column: 7)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !2532, line: 1757, column: 21)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !2532, line: 1757, column: 10)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !2532, line: 1756, column: 26)
!4702 = distinct !DILexicalBlock(scope: !4693, file: !2532, line: 1756, column: 9)
!4703 = !DILocalVariable(name: "rc", scope: !4704, file: !2532, line: 1765, type: !109)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !2532, line: 1765, column: 6)
!4705 = distinct !DILexicalBlock(scope: !4693, file: !2532, line: 1764, column: 25)
!4706 = !DILocalVariable(name: "rc", scope: !4707, file: !2532, line: 1774, type: !109)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !2532, line: 1774, column: 4)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !2532, line: 1773, column: 18)
!4709 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1773, column: 7)
!4710 = !DILocalVariable(name: "rc", scope: !4711, file: !2532, line: 1819, type: !109)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2532, line: 1819, column: 5)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !2532, line: 1818, column: 44)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !2532, line: 1818, column: 8)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2532, line: 1817, column: 10)
!4715 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1777, column: 7)
!4716 = !DILocalVariable(name: "rc", scope: !4717, file: !2532, line: 1823, type: !109)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2532, line: 1823, column: 5)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !2532, line: 1822, column: 26)
!4719 = distinct !DILexicalBlock(scope: !4714, file: !2532, line: 1822, column: 8)
!4720 = !DILocalVariable(name: "rc", scope: !4721, file: !2532, line: 1828, type: !109)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !2532, line: 1828, column: 5)
!4722 = distinct !DILexicalBlock(scope: !4714, file: !2532, line: 1827, column: 26)
!4723 = !DILocalVariable(name: "rc", scope: !4724, file: !2532, line: 1831, type: !109)
!4724 = distinct !DILexicalBlock(scope: !4714, file: !2532, line: 1831, column: 4)
!4725 = !DILocalVariable(name: "rc", scope: !4726, file: !2532, line: 1836, type: !109)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !2532, line: 1836, column: 4)
!4727 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1835, column: 21)
!4728 = !DILabel(scope: !4684, name: "prec_int_pad0", file: !2532, line: 1634)
!4729 = !DILocation(line: 0, scope: !4590)
!4730 = !DILocation(line: 1341, column: 2, scope: !4590)
!4731 = !DILocation(line: 1341, column: 7, scope: !4590)
!4732 = !DILocation(line: 1375, column: 2, scope: !4590)
!4733 = !DILocation(line: 1342, column: 9, scope: !4590)
!4734 = !DILocation(line: 1375, column: 9, scope: !4590)
!4735 = !DILocation(line: 1377, column: 4, scope: !4614)
!4736 = !DILocation(line: 0, scope: !4614)
!4737 = !DILocation(line: 1377, column: 4, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4614, file: !2532, line: 1377, column: 4)
!4739 = distinct !{!4739, !4732, !4740}
!4740 = !DILocation(line: 1839, column: 2, scope: !4590)
!4741 = !DILocation(line: 1392, column: 3, scope: !4617)
!4742 = !DILocation(line: 1395, column: 5, scope: !4617)
!4743 = !DILocation(line: 0, scope: !4617)
!4744 = !DILocation(line: 1409, column: 8, scope: !4617)
!4745 = !DILocation(line: 1414, column: 13, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1414, column: 7)
!4747 = !DILocation(line: 1414, column: 7, scope: !4617)
!4748 = !DILocation(line: 1415, column: 12, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4746, file: !2532, line: 1414, column: 25)
!4750 = !DILocation(line: 1417, column: 14, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4749, file: !2532, line: 1417, column: 8)
!4752 = !DILocation(line: 1417, column: 8, scope: !4749)
!4753 = !DILocation(line: 1418, column: 21, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4751, file: !2532, line: 1417, column: 19)
!4755 = !DILocation(line: 1419, column: 13, scope: !4754)
!4756 = !DILocation(line: 1420, column: 4, scope: !4754)
!4757 = !DILocation(line: 1421, column: 20, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4746, file: !2532, line: 1421, column: 14)
!4759 = !DILocation(line: 1421, column: 14, scope: !4746)
!4760 = !DILocation(line: 1431, column: 13, scope: !4675)
!4761 = !DILocation(line: 1431, column: 7, scope: !4617)
!4762 = !DILocation(line: 1432, column: 14, scope: !4674)
!4763 = !DILocation(line: 0, scope: !4674)
!4764 = !DILocation(line: 1434, column: 12, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4674, file: !2532, line: 1434, column: 8)
!4766 = !DILocation(line: 1434, column: 8, scope: !4674)
!4767 = !DILocation(line: 1435, column: 24, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4765, file: !2532, line: 1434, column: 17)
!4769 = !DILocation(line: 1436, column: 4, scope: !4768)
!4770 = !DILocation(line: 1439, column: 20, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4675, file: !2532, line: 1439, column: 14)
!4772 = !DILocation(line: 1439, column: 14, scope: !4675)
!4773 = !DILocation(line: 1469, column: 37, scope: !4617)
!4774 = !DILocation(line: 1448, column: 20, scope: !4617)
!4775 = !DILocation(line: 1449, column: 22, scope: !4617)
!4776 = !DILocation(line: 1471, column: 34, scope: !4617)
!4777 = !DILocation(line: 1478, column: 7, scope: !4617)
!4778 = !DILocation(line: 1479, column: 4, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !2532, line: 1478, column: 40)
!4780 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1478, column: 7)
!4781 = !DILocation(line: 1484, column: 19, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4779, file: !2532, line: 1479, column: 24)
!4783 = !DILocation(line: 1484, column: 17, scope: !4782)
!4784 = !DILocation(line: 1485, column: 5, scope: !4782)
!4785 = !DILocation(line: 1492, column: 20, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4787, file: !2532, line: 1491, column: 12)
!4787 = distinct !DILexicalBlock(scope: !4782, file: !2532, line: 1487, column: 9)
!4788 = !DILocation(line: 1492, column: 18, scope: !4786)
!4789 = !DILocation(line: 1494, column: 5, scope: !4782)
!4790 = !DILocation(line: 1497, column: 23, scope: !4782)
!4791 = !DILocation(line: 1496, column: 17, scope: !4782)
!4792 = !DILocation(line: 1498, column: 5, scope: !4782)
!4793 = !DILocation(line: 1501, column: 23, scope: !4782)
!4794 = !DILocation(line: 1500, column: 17, scope: !4782)
!4795 = !DILocation(line: 1502, column: 5, scope: !4782)
!4796 = !DILocation(line: 1513, column: 23, scope: !4782)
!4797 = !DILocation(line: 1513, column: 6, scope: !4782)
!4798 = !DILocation(line: 1512, column: 17, scope: !4782)
!4799 = !DILocation(line: 1514, column: 5, scope: !4782)
!4800 = !DILocation(line: 0, scope: !4782)
!4801 = !DILocation(line: 1516, column: 8, scope: !4779)
!4802 = !DILocation(line: 1517, column: 19, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !2532, line: 1516, column: 33)
!4804 = distinct !DILexicalBlock(scope: !4779, file: !2532, line: 1516, column: 8)
!4805 = !DILocation(line: 1517, column: 17, scope: !4803)
!4806 = !DILocation(line: 1518, column: 4, scope: !4803)
!4807 = !DILocation(line: 1519, column: 19, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4809, file: !2532, line: 1518, column: 39)
!4809 = distinct !DILexicalBlock(scope: !4804, file: !2532, line: 1518, column: 15)
!4810 = !DILocation(line: 1519, column: 17, scope: !4808)
!4811 = !DILocation(line: 1520, column: 4, scope: !4808)
!4812 = !DILocation(line: 1522, column: 4, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !2532, line: 1521, column: 47)
!4814 = distinct !DILexicalBlock(scope: !4780, file: !2532, line: 1521, column: 14)
!4815 = !DILocation(line: 1527, column: 19, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4813, file: !2532, line: 1522, column: 24)
!4817 = !DILocation(line: 1527, column: 17, scope: !4816)
!4818 = !DILocation(line: 1528, column: 5, scope: !4816)
!4819 = !DILocation(line: 0, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4816, file: !2532, line: 1530, column: 9)
!4821 = !DILocation(line: 1540, column: 23, scope: !4816)
!4822 = !DILocation(line: 1539, column: 17, scope: !4816)
!4823 = !DILocation(line: 1542, column: 5, scope: !4816)
!4824 = !DILocation(line: 1545, column: 23, scope: !4816)
!4825 = !DILocation(line: 1544, column: 17, scope: !4816)
!4826 = !DILocation(line: 1547, column: 5, scope: !4816)
!4827 = !DILocation(line: 1551, column: 23, scope: !4816)
!4828 = !DILocation(line: 1551, column: 6, scope: !4816)
!4829 = !DILocation(line: 1550, column: 17, scope: !4816)
!4830 = !DILocation(line: 1552, column: 5, scope: !4816)
!4831 = !DILocation(line: 0, scope: !4816)
!4832 = !DILocation(line: 1554, column: 8, scope: !4813)
!4833 = !DILocation(line: 1555, column: 19, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4835, file: !2532, line: 1554, column: 33)
!4835 = distinct !DILexicalBlock(scope: !4813, file: !2532, line: 1554, column: 8)
!4836 = !DILocation(line: 1555, column: 17, scope: !4834)
!4837 = !DILocation(line: 1556, column: 4, scope: !4834)
!4838 = !DILocation(line: 1557, column: 19, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !2532, line: 1556, column: 39)
!4840 = distinct !DILexicalBlock(scope: !4835, file: !2532, line: 1556, column: 15)
!4841 = !DILocation(line: 1557, column: 17, scope: !4839)
!4842 = !DILocation(line: 1558, column: 4, scope: !4839)
!4843 = !DILocation(line: 0, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !2532, line: 1560, column: 8)
!4845 = distinct !DILexicalBlock(scope: !4846, file: !2532, line: 1559, column: 45)
!4846 = distinct !DILexicalBlock(scope: !4814, file: !2532, line: 1559, column: 14)
!4847 = !DILocation(line: 1566, column: 17, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4849, file: !2532, line: 1565, column: 46)
!4849 = distinct !DILexicalBlock(scope: !4846, file: !2532, line: 1565, column: 14)
!4850 = !DILocation(line: 1566, column: 15, scope: !4848)
!4851 = !DILocation(line: 1567, column: 3, scope: !4848)
!4852 = !DILocation(line: 1574, column: 21, scope: !4681)
!4853 = !DILocation(line: 1575, column: 4, scope: !4679)
!4854 = !DILocation(line: 0, scope: !4679)
!4855 = !DILocation(line: 1575, column: 4, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4679, file: !2532, line: 1575, column: 4)
!4857 = !DILocation(line: 1582, column: 17, scope: !4617)
!4858 = !DILocation(line: 1582, column: 3, scope: !4617)
!4859 = !DILocation(line: 1584, column: 4, scope: !4683)
!4860 = !DILocation(line: 0, scope: !4683)
!4861 = !DILocation(line: 1584, column: 4, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4683, file: !2532, line: 1584, column: 4)
!4863 = !DILocation(line: 1587, column: 31, scope: !4686)
!4864 = !DILocation(line: 1591, column: 18, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4686, file: !2532, line: 1591, column: 8)
!4866 = !DILocation(line: 1591, column: 8, scope: !4686)
!4867 = !DILocation(line: 1592, column: 11, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4865, file: !2532, line: 1591, column: 24)
!4869 = !DILocation(line: 0, scope: !4686)
!4870 = !DILocation(line: 1593, column: 4, scope: !4868)
!4871 = !DILocation(line: 1594, column: 11, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4865, file: !2532, line: 1593, column: 11)
!4873 = !DILocation(line: 1604, column: 51, scope: !4684)
!4874 = !DILocation(line: 1604, column: 13, scope: !4684)
!4875 = !DILocation(line: 1604, column: 11, scope: !4684)
!4876 = !DILocation(line: 1606, column: 4, scope: !4684)
!4877 = !DILocation(line: 1609, column: 14, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4684, file: !2532, line: 1609, column: 8)
!4879 = !DILocation(line: 1609, column: 8, scope: !4684)
!4880 = !DILocation(line: 1619, column: 18, scope: !4684)
!4881 = !DILocation(line: 1620, column: 13, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4684, file: !2532, line: 1620, column: 8)
!4883 = !DILocation(line: 1620, column: 8, scope: !4684)
!4884 = !DILocation(line: 1622, column: 36, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4882, file: !2532, line: 1620, column: 18)
!4886 = !DILocation(line: 1622, column: 17, scope: !4885)
!4887 = !DILocation(line: 1623, column: 4, scope: !4885)
!4888 = !DILocation(line: 1632, column: 29, scope: !4684)
!4889 = !DILocation(line: 1632, column: 10, scope: !4684)
!4890 = !DILocation(line: 1632, column: 4, scope: !4684)
!4891 = !DILocation(line: 1407, column: 8, scope: !4617)
!4892 = !DILocation(line: 0, scope: !4684)
!4893 = !DILocation(line: 1634, column: 3, scope: !4684)
!4894 = !DILocation(line: 1640, column: 18, scope: !4689)
!4895 = !DILocation(line: 1640, column: 8, scope: !4684)
!4896 = !DILocation(line: 1729, column: 13, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1729, column: 7)
!4898 = !DILocation(line: 1641, column: 22, scope: !4688)
!4899 = !DILocation(line: 0, scope: !4688)
!4900 = !DILocation(line: 1646, column: 21, scope: !4688)
!4901 = !DILocation(line: 1649, column: 13, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4688, file: !2532, line: 1649, column: 9)
!4903 = !DILocation(line: 1649, column: 9, scope: !4688)
!4904 = !DILocation(line: 1650, column: 35, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4902, file: !2532, line: 1649, column: 34)
!4906 = !DILocation(line: 1650, column: 23, scope: !4905)
!4907 = !DILocation(line: 1651, column: 5, scope: !4905)
!4908 = !DILocation(line: 1660, column: 15, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4684, file: !2532, line: 1660, column: 8)
!4910 = !DILocation(line: 1660, column: 19, scope: !4909)
!4911 = !DILocation(line: 1660, column: 8, scope: !4684)
!4912 = !DILocation(line: 1661, column: 23, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4909, file: !2532, line: 1660, column: 28)
!4914 = !DILocation(line: 1661, column: 11, scope: !4913)
!4915 = !DILocation(line: 1665, column: 22, scope: !4913)
!4916 = !DILocation(line: 1666, column: 21, scope: !4913)
!4917 = !DILocation(line: 1668, column: 5, scope: !4913)
!4918 = !DILocation(line: 1677, column: 30, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !2532, line: 1676, column: 49)
!4920 = distinct !DILexicalBlock(scope: !4684, file: !2532, line: 1676, column: 8)
!4921 = !DILocation(line: 1677, column: 5, scope: !4919)
!4922 = !DILocation(line: 1680, column: 4, scope: !4684)
!4923 = !DILocation(line: 0, scope: !4865)
!4924 = !DILocation(line: 1597, column: 14, scope: !4686)
!4925 = !DILocation(line: 1699, column: 11, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1699, column: 7)
!4927 = !DILocation(line: 1699, column: 7, scope: !4617)
!4928 = !DILocation(line: 1725, column: 7, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1725, column: 7)
!4930 = !DILocation(line: 1725, column: 12, scope: !4929)
!4931 = !DILocation(line: 1747, column: 13, scope: !4696)
!4932 = !DILocation(line: 1747, column: 7, scope: !4617)
!4933 = !DILocation(line: 1722, column: 24, scope: !4617)
!4934 = !DILocation(line: 1725, column: 7, scope: !4617)
!4935 = !DILocation(line: 1729, column: 7, scope: !4617)
!4936 = !DILocation(line: 1736, column: 13, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4617, file: !2532, line: 1736, column: 7)
!4938 = !DILocation(line: 1735, column: 19, scope: !4617)
!4939 = !DILocation(line: 1736, column: 7, scope: !4617)
!4940 = !DILocation(line: 1748, column: 10, scope: !4695)
!4941 = !DILocation(line: 1750, column: 15, scope: !4694)
!4942 = !DILocation(line: 1750, column: 8, scope: !4695)
!4943 = !DILocation(line: 0, scope: !4693)
!4944 = !DILocation(line: 1756, column: 15, scope: !4702)
!4945 = !DILocation(line: 1756, column: 9, scope: !4693)
!4946 = !DILocation(line: 1758, column: 7, scope: !4698)
!4947 = !DILocation(line: 0, scope: !4698)
!4948 = !DILocation(line: 1758, column: 7, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4698, file: !2532, line: 1758, column: 7)
!4950 = !DILocation(line: 1764, column: 5, scope: !4693)
!4951 = !DILocation(line: 0, scope: !4695)
!4952 = !DILocation(line: 1764, column: 20, scope: !4693)
!4953 = !DILocation(line: 1764, column: 17, scope: !4693)
!4954 = !DILocation(line: 1765, column: 6, scope: !4704)
!4955 = !DILocation(line: 0, scope: !4704)
!4956 = !DILocation(line: 1765, column: 6, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4704, file: !2532, line: 1765, column: 6)
!4958 = distinct !{!4958, !4950, !4959}
!4959 = !DILocation(line: 1766, column: 5, scope: !4693)
!4960 = !DILocation(line: 1773, column: 12, scope: !4709)
!4961 = !DILocation(line: 1773, column: 7, scope: !4617)
!4962 = !DILocation(line: 1773, column: 7, scope: !4709)
!4963 = !DILocation(line: 1774, column: 4, scope: !4707)
!4964 = !DILocation(line: 0, scope: !4707)
!4965 = !DILocation(line: 1774, column: 4, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4707, file: !2532, line: 1774, column: 4)
!4967 = !DILocation(line: 1818, column: 8, scope: !4713)
!4968 = !DILocation(line: 1818, column: 27, scope: !4713)
!4969 = !DILocation(line: 1818, column: 25, scope: !4713)
!4970 = !DILocation(line: 1818, column: 8, scope: !4714)
!4971 = !DILocation(line: 1819, column: 5, scope: !4711)
!4972 = !DILocation(line: 0, scope: !4711)
!4973 = !DILocation(line: 1819, column: 5, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4711, file: !2532, line: 1819, column: 5)
!4975 = !DILocation(line: 1822, column: 14, scope: !4719)
!4976 = !DILocation(line: 1822, column: 8, scope: !4714)
!4977 = !DILocation(line: 1823, column: 5, scope: !4717)
!4978 = !DILocation(line: 0, scope: !4717)
!4979 = !DILocation(line: 1823, column: 5, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4717, file: !2532, line: 1823, column: 5)
!4981 = !DILocation(line: 1826, column: 20, scope: !4714)
!4982 = !DILocation(line: 1827, column: 4, scope: !4714)
!4983 = !DILocation(line: 0, scope: !4714)
!4984 = !DILocation(line: 1827, column: 21, scope: !4714)
!4985 = !DILocation(line: 1827, column: 18, scope: !4714)
!4986 = !DILocation(line: 1828, column: 5, scope: !4721)
!4987 = !DILocation(line: 0, scope: !4721)
!4988 = !DILocation(line: 1828, column: 5, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4721, file: !2532, line: 1828, column: 5)
!4990 = distinct !{!4990, !4982, !4991}
!4991 = !DILocation(line: 1829, column: 4, scope: !4714)
!4992 = !DILocation(line: 1831, column: 4, scope: !4724)
!4993 = !DILocation(line: 0, scope: !4724)
!4994 = !DILocation(line: 1831, column: 4, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4724, file: !2532, line: 1831, column: 4)
!4996 = !DILocation(line: 1835, column: 16, scope: !4617)
!4997 = !DILocation(line: 1835, column: 3, scope: !4617)
!4998 = !DILocation(line: 1836, column: 4, scope: !4726)
!4999 = !DILocation(line: 0, scope: !4726)
!5000 = !DILocation(line: 1836, column: 4, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4726, file: !2532, line: 1836, column: 4)
!5002 = !DILocation(line: 1837, column: 4, scope: !4727)
!5003 = distinct !{!5003, !4997, !5004}
!5004 = !DILocation(line: 1838, column: 3, scope: !4617)
!5005 = !DILocation(line: 1844, column: 1, scope: !4590)
!5006 = distinct !DISubprogram(name: "extract_conversion", scope: !2532, file: !2532, line: 642, type: !5007, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5009)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{!279, !4663, !279}
!5009 = !{!5010, !5011}
!5010 = !DILocalVariable(name: "conv", arg: 1, scope: !5006, file: !2532, line: 642, type: !4663)
!5011 = !DILocalVariable(name: "sp", arg: 2, scope: !5006, file: !2532, line: 643, type: !279)
!5012 = !DILocation(line: 0, scope: !5006)
!5013 = !DILocation(line: 645, column: 10, scope: !5006)
!5014 = !DILocation(line: 653, column: 2, scope: !5006)
!5015 = !DILocation(line: 654, column: 6, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5006, file: !2532, line: 654, column: 6)
!5017 = !DILocation(line: 654, column: 10, scope: !5016)
!5018 = !DILocation(line: 654, column: 6, scope: !5006)
!5019 = !DILocation(line: 655, column: 24, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5016, file: !2532, line: 654, column: 18)
!5021 = !DILocation(line: 655, column: 19, scope: !5020)
!5022 = !DILocation(line: 656, column: 3, scope: !5020)
!5023 = !DILocation(line: 659, column: 7, scope: !5006)
!5024 = !DILocation(line: 660, column: 7, scope: !5006)
!5025 = !DILocation(line: 661, column: 7, scope: !5006)
!5026 = !DILocation(line: 662, column: 7, scope: !5006)
!5027 = !DILocation(line: 663, column: 7, scope: !5006)
!5028 = !DILocation(line: 665, column: 2, scope: !5006)
!5029 = !DILocation(line: 666, column: 1, scope: !5006)
!5030 = distinct !DISubprogram(name: "outs", scope: !2532, file: !2532, line: 1319, type: !5031, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5033)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{!109, !3744, !107, !279, !279}
!5033 = !{!5034, !5035, !5036, !5037, !5038, !5039}
!5034 = !DILocalVariable(name: "out", arg: 1, scope: !5030, file: !2532, line: 1319, type: !3744)
!5035 = !DILocalVariable(name: "ctx", arg: 2, scope: !5030, file: !2532, line: 1320, type: !107)
!5036 = !DILocalVariable(name: "sp", arg: 3, scope: !5030, file: !2532, line: 1321, type: !279)
!5037 = !DILocalVariable(name: "ep", arg: 4, scope: !5030, file: !2532, line: 1322, type: !279)
!5038 = !DILocalVariable(name: "count", scope: !5030, file: !2532, line: 1324, type: !234)
!5039 = !DILocalVariable(name: "rc", scope: !5040, file: !2532, line: 1327, type: !109)
!5040 = distinct !DILexicalBlock(scope: !5030, file: !2532, line: 1326, column: 45)
!5041 = !DILocation(line: 0, scope: !5030)
!5042 = !DILocation(line: 1326, column: 2, scope: !5030)
!5043 = !DILocation(line: 1324, column: 9, scope: !5030)
!5044 = !DILocation(line: 1326, column: 13, scope: !5030)
!5045 = !DILocation(line: 1326, column: 19, scope: !5030)
!5046 = !DILocation(line: 1327, column: 21, scope: !5040)
!5047 = !DILocation(line: 1326, column: 36, scope: !5030)
!5048 = !DILocation(line: 1326, column: 39, scope: !5030)
!5049 = !DILocation(line: 1327, column: 24, scope: !5040)
!5050 = !DILocation(line: 1327, column: 16, scope: !5040)
!5051 = !DILocation(line: 1327, column: 12, scope: !5040)
!5052 = !DILocation(line: 0, scope: !5040)
!5053 = !DILocation(line: 1329, column: 10, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5040, file: !2532, line: 1329, column: 7)
!5055 = !DILocation(line: 1329, column: 7, scope: !5040)
!5056 = distinct !{!5056, !5042, !5057}
!5057 = !DILocation(line: 1333, column: 2, scope: !5030)
!5058 = !DILocation(line: 1336, column: 1, scope: !5030)
!5059 = distinct !DISubprogram(name: "encode_uint", scope: !2532, file: !2532, line: 788, type: !5060, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5062)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{!285, !2554, !4663, !285, !279}
!5062 = !{!5063, !5064, !5065, !5066, !5067, !5068, !5070, !5071}
!5063 = !DILocalVariable(name: "value", arg: 1, scope: !5059, file: !2532, line: 788, type: !2554)
!5064 = !DILocalVariable(name: "conv", arg: 2, scope: !5059, file: !2532, line: 789, type: !4663)
!5065 = !DILocalVariable(name: "bps", arg: 3, scope: !5059, file: !2532, line: 790, type: !285)
!5066 = !DILocalVariable(name: "bpe", arg: 4, scope: !5059, file: !2532, line: 791, type: !279)
!5067 = !DILocalVariable(name: "upcase", scope: !5059, file: !2532, line: 793, type: !360)
!5068 = !DILocalVariable(name: "radix", scope: !5059, file: !2532, line: 794, type: !5069)
!5069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5070 = !DILocalVariable(name: "bp", scope: !5059, file: !2532, line: 795, type: !285)
!5071 = !DILocalVariable(name: "lsv", scope: !5072, file: !2532, line: 798, type: !32)
!5072 = distinct !DILexicalBlock(scope: !5059, file: !2532, line: 797, column: 5)
!5073 = !DILocation(line: 0, scope: !5059)
!5074 = !DILocation(line: 793, column: 35, scope: !5059)
!5075 = !DILocation(line: 793, column: 24, scope: !5059)
!5076 = !DILocation(line: 793, column: 16, scope: !5059)
!5077 = !DILocation(line: 794, column: 29, scope: !5059)
!5078 = !DILocation(line: 795, column: 24, scope: !5059)
!5079 = !DILocation(line: 795, column: 17, scope: !5059)
!5080 = !DILocation(line: 797, column: 2, scope: !5059)
!5081 = !DILocation(line: 802, column: 9, scope: !5072)
!5082 = !DILocation(line: 798, column: 22, scope: !5072)
!5083 = !DILocation(line: 0, scope: !5072)
!5084 = !DILocation(line: 800, column: 16, scope: !5072)
!5085 = !DILocation(line: 800, column: 11, scope: !5072)
!5086 = !DILocation(line: 800, column: 4, scope: !5072)
!5087 = !DILocation(line: 800, column: 9, scope: !5072)
!5088 = !DILocation(line: 803, column: 18, scope: !5059)
!5089 = !DILocation(line: 803, column: 24, scope: !5059)
!5090 = !DILocation(line: 803, column: 2, scope: !5072)
!5091 = distinct !{!5091, !5080, !5092}
!5092 = !DILocation(line: 803, column: 37, scope: !5059)
!5093 = !DILocation(line: 808, column: 12, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5059, file: !2532, line: 808, column: 6)
!5095 = !DILocation(line: 808, column: 6, scope: !5059)
!5096 = !DILocation(line: 809, column: 7, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5094, file: !2532, line: 808, column: 23)
!5098 = !DILocation(line: 813, column: 3, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5100, file: !2532, line: 811, column: 27)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !2532, line: 811, column: 14)
!5101 = distinct !DILexicalBlock(scope: !5097, file: !2532, line: 809, column: 7)
!5102 = !DILocation(line: 0, scope: !5101)
!5103 = !DILocation(line: 818, column: 2, scope: !5059)
!5104 = distinct !DISubprogram(name: "store_count", scope: !2532, file: !2532, line: 1280, type: !5105, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5109)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{null, !5107, !107, !109}
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 32)
!5108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4630)
!5109 = !{!5110, !5111, !5112}
!5110 = !DILocalVariable(name: "conv", arg: 1, scope: !5104, file: !2532, line: 1280, type: !5107)
!5111 = !DILocalVariable(name: "dp", arg: 2, scope: !5104, file: !2532, line: 1281, type: !107)
!5112 = !DILocalVariable(name: "count", arg: 3, scope: !5104, file: !2532, line: 1282, type: !109)
!5113 = !DILocation(line: 0, scope: !5104)
!5114 = !DILocation(line: 1284, column: 38, scope: !5104)
!5115 = !DILocation(line: 1284, column: 2, scope: !5104)
!5116 = !DILocation(line: 1286, column: 4, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5104, file: !2532, line: 1284, column: 50)
!5118 = !DILocation(line: 1286, column: 14, scope: !5117)
!5119 = !DILocation(line: 1287, column: 3, scope: !5117)
!5120 = !DILocation(line: 1289, column: 24, scope: !5117)
!5121 = !DILocation(line: 1289, column: 22, scope: !5117)
!5122 = !DILocation(line: 1290, column: 3, scope: !5117)
!5123 = !DILocation(line: 1292, column: 18, scope: !5117)
!5124 = !DILocation(line: 1292, column: 4, scope: !5117)
!5125 = !DILocation(line: 1292, column: 16, scope: !5117)
!5126 = !DILocation(line: 1293, column: 3, scope: !5117)
!5127 = !DILocation(line: 1295, column: 4, scope: !5117)
!5128 = !DILocation(line: 1295, column: 15, scope: !5117)
!5129 = !DILocation(line: 1296, column: 3, scope: !5117)
!5130 = !DILocation(line: 1298, column: 22, scope: !5117)
!5131 = !DILocation(line: 1298, column: 4, scope: !5117)
!5132 = !DILocation(line: 1298, column: 20, scope: !5117)
!5133 = !DILocation(line: 1299, column: 3, scope: !5117)
!5134 = !DILocation(line: 1301, column: 21, scope: !5117)
!5135 = !DILocation(line: 1301, column: 4, scope: !5117)
!5136 = !DILocation(line: 1301, column: 19, scope: !5117)
!5137 = !DILocation(line: 1302, column: 3, scope: !5117)
!5138 = !DILocation(line: 1304, column: 4, scope: !5117)
!5139 = !DILocation(line: 1304, column: 17, scope: !5117)
!5140 = !DILocation(line: 1305, column: 3, scope: !5117)
!5141 = !DILocation(line: 1307, column: 4, scope: !5117)
!5142 = !DILocation(line: 1307, column: 20, scope: !5117)
!5143 = !DILocation(line: 1308, column: 3, scope: !5117)
!5144 = !DILocation(line: 1316, column: 1, scope: !5104)
!5145 = distinct !DISubprogram(name: "isupper", scope: !5146, file: !5146, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5147)
!5146 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5147 = !{!5148}
!5148 = !DILocalVariable(name: "a", arg: 1, scope: !5145, file: !5146, line: 16, type: !109)
!5149 = !DILocation(line: 0, scope: !5145)
!5150 = !DILocation(line: 18, column: 29, scope: !5145)
!5151 = !DILocation(line: 18, column: 45, scope: !5145)
!5152 = !DILocation(line: 18, column: 2, scope: !5145)
!5153 = distinct !DISubprogram(name: "conversion_radix", scope: !2532, file: !2532, line: 761, type: !5154, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5156)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{!234, !150}
!5156 = !{!5157}
!5157 = !DILocalVariable(name: "specifier", arg: 1, scope: !5153, file: !2532, line: 761, type: !150)
!5158 = !DILocation(line: 0, scope: !5153)
!5159 = !DILocation(line: 763, column: 2, scope: !5153)
!5160 = !DILocation(line: 770, column: 3, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5153, file: !2532, line: 763, column: 21)
!5162 = !DILocation(line: 774, column: 3, scope: !5161)
!5163 = !DILocation(line: 0, scope: !5161)
!5164 = !DILocation(line: 776, column: 1, scope: !5153)
!5165 = distinct !DISubprogram(name: "extract_flags", scope: !2532, file: !2532, line: 339, type: !5007, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5166)
!5166 = !{!5167, !5168, !5169}
!5167 = !DILocalVariable(name: "conv", arg: 1, scope: !5165, file: !2532, line: 339, type: !4663)
!5168 = !DILocalVariable(name: "sp", arg: 2, scope: !5165, file: !2532, line: 340, type: !279)
!5169 = !DILocalVariable(name: "loop", scope: !5165, file: !2532, line: 342, type: !360)
!5170 = !DILocation(line: 0, scope: !5165)
!5171 = !DILocation(line: 344, column: 2, scope: !5165)
!5172 = !DILocation(line: 345, column: 11, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5165, file: !2532, line: 344, column: 5)
!5174 = !DILocation(line: 345, column: 3, scope: !5173)
!5175 = !DILocation(line: 351, column: 4, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5173, file: !2532, line: 345, column: 16)
!5177 = !DILocation(line: 354, column: 4, scope: !5176)
!5178 = !DILocation(line: 357, column: 4, scope: !5176)
!5179 = !DILocation(line: 360, column: 4, scope: !5176)
!5180 = !DILocation(line: 0, scope: !5176)
!5181 = !DILocation(line: 370, column: 12, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5165, file: !2532, line: 370, column: 6)
!5183 = !DILocation(line: 370, column: 22, scope: !5182)
!5184 = !DILocation(line: 371, column: 19, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5182, file: !2532, line: 370, column: 42)
!5186 = !DILocation(line: 372, column: 2, scope: !5185)
!5187 = !DILocation(line: 376, column: 2, scope: !5165)
!5188 = distinct !DISubprogram(name: "extract_width", scope: !2532, file: !2532, line: 388, type: !5007, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5189)
!5189 = !{!5190, !5191, !5192, !5193}
!5190 = !DILocalVariable(name: "conv", arg: 1, scope: !5188, file: !2532, line: 388, type: !4663)
!5191 = !DILocalVariable(name: "sp", arg: 2, scope: !5188, file: !2532, line: 389, type: !279)
!5192 = !DILocalVariable(name: "wp", scope: !5188, file: !2532, line: 398, type: !279)
!5193 = !DILocalVariable(name: "width", scope: !5188, file: !2532, line: 399, type: !234)
!5194 = !DILocation(line: 0, scope: !5188)
!5195 = !DILocation(line: 391, column: 8, scope: !5188)
!5196 = !DILocation(line: 391, column: 22, scope: !5188)
!5197 = !DILocation(line: 393, column: 6, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5188, file: !2532, line: 393, column: 6)
!5199 = !DILocation(line: 393, column: 10, scope: !5198)
!5200 = !DILocation(line: 393, column: 6, scope: !5188)
!5201 = !DILocation(line: 394, column: 20, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5198, file: !2532, line: 393, column: 18)
!5203 = !DILocation(line: 395, column: 10, scope: !5202)
!5204 = !DILocation(line: 395, column: 3, scope: !5202)
!5205 = !DILocation(line: 399, column: 17, scope: !5188)
!5206 = !DILocation(line: 401, column: 6, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5188, file: !2532, line: 401, column: 6)
!5208 = !DILocation(line: 401, column: 9, scope: !5207)
!5209 = !DILocation(line: 401, column: 6, scope: !5188)
!5210 = !DILocation(line: 402, column: 23, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5207, file: !2532, line: 401, column: 16)
!5212 = !DILocation(line: 403, column: 9, scope: !5211)
!5213 = !DILocation(line: 403, column: 21, scope: !5211)
!5214 = !DILocation(line: 405, column: 11, scope: !5211)
!5215 = !DILocation(line: 404, column: 21, scope: !5211)
!5216 = !DILocation(line: 406, column: 2, scope: !5211)
!5217 = !DILocation(line: 409, column: 1, scope: !5188)
!5218 = distinct !DISubprogram(name: "extract_prec", scope: !2532, file: !2532, line: 420, type: !5007, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5219)
!5219 = !{!5220, !5221, !5222}
!5220 = !DILocalVariable(name: "conv", arg: 1, scope: !5218, file: !2532, line: 420, type: !4663)
!5221 = !DILocalVariable(name: "sp", arg: 2, scope: !5218, file: !2532, line: 421, type: !279)
!5222 = !DILocalVariable(name: "prec", scope: !5218, file: !2532, line: 435, type: !234)
!5223 = !DILocation(line: 0, scope: !5218)
!5224 = !DILocation(line: 423, column: 24, scope: !5218)
!5225 = !DILocation(line: 423, column: 28, scope: !5218)
!5226 = !DILocation(line: 423, column: 8, scope: !5218)
!5227 = !DILocation(line: 423, column: 21, scope: !5218)
!5228 = !DILocation(line: 425, column: 6, scope: !5218)
!5229 = !DILocation(line: 428, column: 2, scope: !5218)
!5230 = !DILocation(line: 430, column: 6, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5218, file: !2532, line: 430, column: 6)
!5232 = !DILocation(line: 430, column: 10, scope: !5231)
!5233 = !DILocation(line: 430, column: 6, scope: !5218)
!5234 = !DILocation(line: 431, column: 19, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5231, file: !2532, line: 430, column: 18)
!5236 = !DILocation(line: 432, column: 10, scope: !5235)
!5237 = !DILocation(line: 432, column: 3, scope: !5235)
!5238 = !DILocation(line: 435, column: 16, scope: !5218)
!5239 = !DILocation(line: 437, column: 8, scope: !5218)
!5240 = !DILocation(line: 437, column: 19, scope: !5218)
!5241 = !DILocation(line: 439, column: 10, scope: !5218)
!5242 = !DILocation(line: 438, column: 20, scope: !5218)
!5243 = !DILocation(line: 441, column: 9, scope: !5218)
!5244 = !DILocation(line: 442, column: 1, scope: !5218)
!5245 = distinct !DISubprogram(name: "extract_length", scope: !2532, file: !2532, line: 453, type: !5007, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5246)
!5246 = !{!5247, !5248}
!5247 = !DILocalVariable(name: "conv", arg: 1, scope: !5245, file: !2532, line: 453, type: !4663)
!5248 = !DILocalVariable(name: "sp", arg: 2, scope: !5245, file: !2532, line: 454, type: !279)
!5249 = !DILocation(line: 0, scope: !5245)
!5250 = !DILocation(line: 456, column: 10, scope: !5245)
!5251 = !DILocation(line: 456, column: 2, scope: !5245)
!5252 = !DILocation(line: 458, column: 8, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5254, file: !2532, line: 458, column: 7)
!5254 = distinct !DILexicalBlock(scope: !5245, file: !2532, line: 456, column: 15)
!5255 = !DILocation(line: 458, column: 7, scope: !5253)
!5256 = !DILocation(line: 458, column: 13, scope: !5253)
!5257 = !DILocation(line: 0, scope: !5253)
!5258 = !DILocation(line: 458, column: 7, scope: !5254)
!5259 = !DILocation(line: 459, column: 21, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5253, file: !2532, line: 458, column: 21)
!5261 = !DILocation(line: 460, column: 4, scope: !5260)
!5262 = !DILocation(line: 461, column: 3, scope: !5260)
!5263 = !DILocation(line: 462, column: 21, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5253, file: !2532, line: 461, column: 10)
!5265 = !DILocation(line: 466, column: 8, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5254, file: !2532, line: 466, column: 7)
!5267 = !DILocation(line: 466, column: 7, scope: !5266)
!5268 = !DILocation(line: 466, column: 13, scope: !5266)
!5269 = !DILocation(line: 0, scope: !5266)
!5270 = !DILocation(line: 466, column: 7, scope: !5254)
!5271 = !DILocation(line: 467, column: 21, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5266, file: !2532, line: 466, column: 21)
!5273 = !DILocation(line: 468, column: 4, scope: !5272)
!5274 = !DILocation(line: 469, column: 3, scope: !5272)
!5275 = !DILocation(line: 470, column: 21, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5266, file: !2532, line: 469, column: 10)
!5277 = !DILocation(line: 474, column: 9, scope: !5254)
!5278 = !DILocation(line: 474, column: 20, scope: !5254)
!5279 = !DILocation(line: 475, column: 3, scope: !5254)
!5280 = !DILocation(line: 476, column: 3, scope: !5254)
!5281 = !DILocation(line: 478, column: 9, scope: !5254)
!5282 = !DILocation(line: 478, column: 20, scope: !5254)
!5283 = !DILocation(line: 479, column: 3, scope: !5254)
!5284 = !DILocation(line: 480, column: 3, scope: !5254)
!5285 = !DILocation(line: 482, column: 9, scope: !5254)
!5286 = !DILocation(line: 482, column: 20, scope: !5254)
!5287 = !DILocation(line: 483, column: 3, scope: !5254)
!5288 = !DILocation(line: 484, column: 3, scope: !5254)
!5289 = !DILocation(line: 486, column: 9, scope: !5254)
!5290 = !DILocation(line: 486, column: 20, scope: !5254)
!5291 = !DILocation(line: 487, column: 3, scope: !5254)
!5292 = !DILocation(line: 492, column: 21, scope: !5254)
!5293 = !DILocation(line: 493, column: 3, scope: !5254)
!5294 = !DILocation(line: 495, column: 9, scope: !5254)
!5295 = !DILocation(line: 495, column: 20, scope: !5254)
!5296 = !DILocation(line: 496, column: 3, scope: !5254)
!5297 = !DILocation(line: 498, column: 2, scope: !5245)
!5298 = distinct !DISubprogram(name: "extract_specifier", scope: !2532, file: !2532, line: 513, type: !5007, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5299)
!5299 = !{!5300, !5301, !5302, !5303}
!5300 = !DILocalVariable(name: "conv", arg: 1, scope: !5298, file: !2532, line: 513, type: !4663)
!5301 = !DILocalVariable(name: "sp", arg: 2, scope: !5298, file: !2532, line: 514, type: !279)
!5302 = !DILocalVariable(name: "unsupported", scope: !5298, file: !2532, line: 516, type: !360)
!5303 = !DILabel(scope: !5304, name: "int_conv", file: !2532, line: 526)
!5304 = distinct !DILexicalBlock(scope: !5298, file: !2532, line: 520, column: 27)
!5305 = !DILocation(line: 0, scope: !5298)
!5306 = !DILocation(line: 518, column: 20, scope: !5298)
!5307 = !DILocation(line: 518, column: 8, scope: !5298)
!5308 = !DILocation(line: 518, column: 18, scope: !5298)
!5309 = !DILocation(line: 520, column: 2, scope: !5298)
!5310 = !DILocation(line: 525, column: 3, scope: !5304)
!5311 = !DILocation(line: 0, scope: !5304)
!5312 = !DILocation(line: 526, column: 1, scope: !5304)
!5313 = !DILocation(line: 528, column: 24, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5304, file: !2532, line: 528, column: 7)
!5315 = !DILocation(line: 528, column: 7, scope: !5304)
!5316 = !DILocation(line: 535, column: 23, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5304, file: !2532, line: 535, column: 7)
!5318 = !DILocation(line: 535, column: 7, scope: !5304)
!5319 = !DILocation(line: 536, column: 36, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5317, file: !2532, line: 535, column: 31)
!5321 = !DILocation(line: 537, column: 3, scope: !5320)
!5322 = !DILocation(line: 570, column: 9, scope: !5304)
!5323 = !DILocation(line: 570, column: 23, scope: !5304)
!5324 = !DILocation(line: 575, column: 4, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5326, file: !2532, line: 573, column: 48)
!5326 = distinct !DILexicalBlock(scope: !5304, file: !2532, line: 573, column: 7)
!5327 = !DILocation(line: 603, column: 9, scope: !5304)
!5328 = !DILocation(line: 603, column: 23, scope: !5304)
!5329 = !DILocation(line: 605, column: 24, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5304, file: !2532, line: 605, column: 7)
!5331 = !DILocation(line: 605, column: 7, scope: !5304)
!5332 = !DILocation(line: 612, column: 9, scope: !5304)
!5333 = !DILocation(line: 612, column: 23, scope: !5304)
!5334 = !DILocation(line: 619, column: 24, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5304, file: !2532, line: 619, column: 7)
!5336 = !DILocation(line: 619, column: 7, scope: !5304)
!5337 = !DILocation(line: 625, column: 9, scope: !5304)
!5338 = !DILocation(line: 625, column: 17, scope: !5304)
!5339 = !DILocation(line: 626, column: 3, scope: !5304)
!5340 = !DILocation(line: 629, column: 20, scope: !5298)
!5341 = !DILocation(line: 629, column: 8, scope: !5298)
!5342 = !DILocation(line: 518, column: 23, scope: !5298)
!5343 = !DILocation(line: 631, column: 2, scope: !5298)
!5344 = distinct !DISubprogram(name: "extract_decimal", scope: !2532, file: !2532, line: 318, type: !5345, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5347)
!5345 = !DISubroutineType(types: !5346)
!5346 = !{!234, !278}
!5347 = !{!5348, !5349, !5350}
!5348 = !DILocalVariable(name: "str", arg: 1, scope: !5344, file: !2532, line: 318, type: !278)
!5349 = !DILocalVariable(name: "sp", scope: !5344, file: !2532, line: 320, type: !279)
!5350 = !DILocalVariable(name: "val", scope: !5344, file: !2532, line: 321, type: !234)
!5351 = !DILocation(line: 0, scope: !5344)
!5352 = !DILocation(line: 320, column: 19, scope: !5344)
!5353 = !DILocation(line: 323, column: 37, scope: !5344)
!5354 = !DILocation(line: 323, column: 17, scope: !5344)
!5355 = !DILocation(line: 323, column: 9, scope: !5344)
!5356 = !DILocation(line: 323, column: 2, scope: !5344)
!5357 = !DILocation(line: 324, column: 13, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5344, file: !2532, line: 323, column: 43)
!5359 = !DILocation(line: 324, column: 24, scope: !5358)
!5360 = !DILocation(line: 324, column: 19, scope: !5358)
!5361 = !DILocation(line: 324, column: 27, scope: !5358)
!5362 = distinct !{!5362, !5356, !5363}
!5363 = !DILocation(line: 325, column: 2, scope: !5344)
!5364 = !DILocation(line: 326, column: 7, scope: !5344)
!5365 = !DILocation(line: 327, column: 2, scope: !5344)
!5366 = distinct !DISubprogram(name: "isdigit", scope: !5146, file: !5146, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2528, retainedNodes: !5367)
!5367 = !{!5368}
!5368 = !DILocalVariable(name: "a", arg: 1, scope: !5366, file: !5146, line: 43, type: !109)
!5369 = !DILocation(line: 0, scope: !5366)
!5370 = !DILocation(line: 45, column: 29, scope: !5366)
!5371 = !DILocation(line: 45, column: 45, scope: !5366)
!5372 = !DILocation(line: 45, column: 2, scope: !5366)
!5373 = distinct !DISubprogram(name: "assert_post_action", scope: !5374, file: !5374, line: 26, type: !5375, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !5377)
!5374 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5375 = !DISubroutineType(types: !5376)
!5376 = !{null, !279, !32}
!5377 = !{!5378, !5379}
!5378 = !DILocalVariable(name: "file", arg: 1, scope: !5373, file: !5374, line: 26, type: !279)
!5379 = !DILocalVariable(name: "line", arg: 2, scope: !5373, file: !5374, line: 26, type: !32)
!5380 = !DILocation(line: 0, scope: !5373)
!5381 = !DILocation(line: 43, column: 2, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5373, file: !5374, line: 43, column: 2)
!5383 = !{i64 2152226201, i64 2152226217, i64 2152226243, i64 2152226271, i64 2152226291}
!5384 = !DILocation(line: 44, column: 1, scope: !5373)
!5385 = distinct !DISubprogram(name: "assert_print", scope: !5374, file: !5374, line: 46, type: !4356, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2562, retainedNodes: !5386)
!5386 = !{!5387, !5388}
!5387 = !DILocalVariable(name: "fmt", arg: 1, scope: !5385, file: !5374, line: 46, type: !279)
!5388 = !DILocalVariable(name: "ap", scope: !5385, file: !5374, line: 48, type: !5389)
!5389 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3362, line: 99, baseType: !5390)
!5390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3362, line: 40, baseType: !5391)
!5391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5374, baseType: !5392)
!5392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5393)
!5393 = !{!5394}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5392, file: !5374, line: 48, baseType: !107, size: 32)
!5395 = !DILocation(line: 0, scope: !5385)
!5396 = !DILocation(line: 48, column: 2, scope: !5385)
!5397 = !DILocation(line: 48, column: 10, scope: !5385)
!5398 = !DILocation(line: 50, column: 2, scope: !5385)
!5399 = !DILocation(line: 52, column: 2, scope: !5385)
!5400 = !DILocation(line: 54, column: 2, scope: !5385)
!5401 = !DILocation(line: 55, column: 1, scope: !5385)
!5402 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5403, file: !5403, line: 9, type: !3060, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !2043)
!5403 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!5404 = !DILocation(line: 11, column: 1, scope: !5402)
!5405 = !{i64 2147564571, i64 2147564614, i64 2147564654}
!5406 = !DILocation(line: 12, column: 1, scope: !5402)
!5407 = !{i64 2147568798, i64 2147568841, i64 2147568881}
!5408 = !DILocation(line: 13, column: 1, scope: !5402)
!5409 = !{i64 2147569007, i64 2147569050, i64 2147569090}
!5410 = !DILocation(line: 14, column: 1, scope: !5402)
!5411 = !{i64 2147569176, i64 2147569219, i64 2147569259}
!5412 = !DILocation(line: 15, column: 1, scope: !5402)
!5413 = !{i64 2147569339, i64 2147569382, i64 2147569422}
!5414 = !DILocation(line: 16, column: 1, scope: !5402)
!5415 = !{i64 2147569523, i64 2147569566, i64 2147569606}
!5416 = !DILocation(line: 17, column: 1, scope: !5402)
!5417 = !{i64 2147569702, i64 2147569745, i64 2147569785}
!5418 = !DILocation(line: 18, column: 1, scope: !5402)
!5419 = !{i64 2147569944, i64 2147569987, i64 2147570027}
!5420 = !DILocation(line: 19, column: 1, scope: !5402)
!5421 = !{i64 2147570179, i64 2147570222, i64 2147570262}
!5422 = !DILocation(line: 20, column: 1, scope: !5402)
!5423 = !{i64 2147570365, i64 2147570408, i64 2147570448}
!5424 = !DILocation(line: 21, column: 1, scope: !5402)
!5425 = !{i64 2147570581, i64 2147570624, i64 2147570664}
!5426 = !DILocation(line: 22, column: 1, scope: !5402)
!5427 = !{i64 2147570784, i64 2147570827, i64 2147570867}
!5428 = !DILocation(line: 23, column: 1, scope: !5402)
!5429 = !{i64 2147570987, i64 2147571030, i64 2147571070}
!5430 = !DILocation(line: 24, column: 1, scope: !5402)
!5431 = !{i64 2147571162, i64 2147571205, i64 2147571245}
!5432 = !DILocation(line: 25, column: 1, scope: !5402)
!5433 = !{i64 2147571370, i64 2147571413, i64 2147571453}
!5434 = !DILocation(line: 26, column: 1, scope: !5402)
!5435 = !{i64 2147571574, i64 2147571617, i64 2147571657}
!5436 = !DILocation(line: 27, column: 1, scope: !5402)
!5437 = !{i64 2147571767, i64 2147571810, i64 2147571850}
!5438 = !DILocation(line: 28, column: 1, scope: !5402)
!5439 = !{i64 2147571969, i64 2147572012, i64 2147572052}
!5440 = !DILocation(line: 29, column: 1, scope: !5402)
!5441 = !{i64 2147572168, i64 2147572211, i64 2147572251}
!5442 = !DILocation(line: 30, column: 1, scope: !5402)
!5443 = !{i64 2147572395, i64 2147572438, i64 2147572478}
!5444 = !DILocation(line: 31, column: 1, scope: !5402)
!5445 = !{i64 2147572597, i64 2147572640, i64 2147572680}
!5446 = !DILocation(line: 32, column: 1, scope: !5402)
!5447 = !{i64 2147572812, i64 2147572855, i64 2147572895}
!5448 = !DILocation(line: 33, column: 1, scope: !5402)
!5449 = !{i64 2147573029, i64 2147573072, i64 2147573112}
!5450 = !DILocation(line: 34, column: 1, scope: !5402)
!5451 = !{i64 2147573201, i64 2147573244, i64 2147573284}
!5452 = !DILocation(line: 35, column: 1, scope: !5402)
!5453 = !{i64 2147573403, i64 2147573446, i64 2147573486}
!5454 = !DILocation(line: 36, column: 1, scope: !5402)
!5455 = !{i64 2147573629, i64 2147573672, i64 2147573712}
!5456 = !DILocation(line: 37, column: 1, scope: !5402)
!5457 = !{i64 2147573828, i64 2147573871, i64 2147573911}
!5458 = !DILocation(line: 38, column: 1, scope: !5402)
!5459 = !{i64 2147574003, i64 2147574046, i64 2147574086}
!5460 = !DILocation(line: 39, column: 1, scope: !5402)
!5461 = !{i64 2147574256, i64 2147574299, i64 2147574339}
!5462 = !DILocation(line: 40, column: 1, scope: !5402)
!5463 = !{i64 2147574494, i64 2147574537, i64 2147574577}
!5464 = !DILocation(line: 41, column: 1, scope: !5402)
!5465 = !{i64 2147574729, i64 2147574772, i64 2147574812}
!5466 = !DILocation(line: 42, column: 1, scope: !5402)
!5467 = !{i64 2147574961, i64 2147575004, i64 2147575044}
!5468 = !DILocation(line: 43, column: 1, scope: !5402)
!5469 = !{i64 2147575187, i64 2147575230, i64 2147575270}
!5470 = !DILocation(line: 44, column: 1, scope: !5402)
!5471 = !{i64 2147575446, i64 2147575489, i64 2147575529}
!5472 = !DILocation(line: 45, column: 1, scope: !5402)
!5473 = !{i64 2147575672, i64 2147575715, i64 2147575755}
!5474 = !DILocation(line: 46, column: 1, scope: !5402)
!5475 = !{i64 2147575913, i64 2147575956, i64 2147575996}
!5476 = !DILocation(line: 47, column: 1, scope: !5402)
!5477 = !{i64 2147576157, i64 2147576200, i64 2147576240}
!5478 = !DILocation(line: 48, column: 1, scope: !5402)
!5479 = !{i64 2147576398, i64 2147576441, i64 2147576481}
!5480 = !DILocation(line: 49, column: 1, scope: !5402)
!5481 = !{i64 2147576633, i64 2147576676, i64 2147576716}
!5482 = !DILocation(line: 50, column: 1, scope: !5402)
!5483 = !{i64 2147576859, i64 2147576902, i64 2147576942}
!5484 = !DILocation(line: 51, column: 1, scope: !5402)
!5485 = !{i64 2147577085, i64 2147577128, i64 2147577168}
!5486 = !DILocation(line: 52, column: 1, scope: !5402)
!5487 = !{i64 2147577329, i64 2147577372, i64 2147577412}
!5488 = !DILocation(line: 53, column: 1, scope: !5402)
!5489 = !{i64 2147581628, i64 2147581671, i64 2147581711}
!5490 = !DILocation(line: 54, column: 1, scope: !5402)
!5491 = !{i64 2147581902, i64 2147581945, i64 2147581985}
!5492 = !DILocation(line: 55, column: 1, scope: !5402)
!5493 = !{i64 2147582140, i64 2147582183, i64 2147582223}
!5494 = !DILocation(line: 56, column: 1, scope: !5402)
!5495 = !{i64 2147582384, i64 2147582427, i64 2147582467}
!5496 = !DILocation(line: 57, column: 1, scope: !5402)
!5497 = !{i64 2147582634, i64 2147582677, i64 2147582717}
!5498 = !DILocation(line: 58, column: 1, scope: !5402)
!5499 = !{i64 2147582881, i64 2147582924, i64 2147582964}
!5500 = !DILocation(line: 59, column: 1, scope: !5402)
!5501 = !{i64 2147583116, i64 2147583159, i64 2147583199}
!5502 = !DILocation(line: 60, column: 1, scope: !5402)
!5503 = !{i64 2147583351, i64 2147583394, i64 2147583434}
!5504 = !DILocation(line: 61, column: 1, scope: !5402)
!5505 = !{i64 2147583586, i64 2147583629, i64 2147583669}
!5506 = !DILocation(line: 62, column: 1, scope: !5402)
!5507 = !{i64 2147583824, i64 2147583867, i64 2147583907}
!5508 = !DILocation(line: 63, column: 1, scope: !5402)
!5509 = !{i64 2147584065, i64 2147584108, i64 2147584148}
!5510 = !DILocation(line: 64, column: 1, scope: !5402)
!5511 = !{i64 2147584324, i64 2147584367, i64 2147584407}
!5512 = !DILocation(line: 65, column: 1, scope: !5402)
!5513 = !{i64 2147584604, i64 2147584647, i64 2147584687}
!5514 = !DILocation(line: 66, column: 1, scope: !5402)
!5515 = !{i64 2147584833, i64 2147584876, i64 2147584916}
!5516 = !DILocation(line: 67, column: 1, scope: !5402)
!5517 = !{i64 2147585041, i64 2147585084, i64 2147585124}
!5518 = !DILocation(line: 68, column: 1, scope: !5402)
!5519 = !{i64 2147585252, i64 2147585295, i64 2147585335}
!5520 = !DILocation(line: 69, column: 1, scope: !5402)
!5521 = !{i64 2147585487, i64 2147585530, i64 2147585570}
!5522 = !DILocation(line: 70, column: 1, scope: !5402)
!5523 = !{i64 2147585716, i64 2147585759, i64 2147585799}
!5524 = !DILocation(line: 71, column: 1, scope: !5402)
!5525 = !{i64 2147585933, i64 2147585976, i64 2147586016}
!5526 = !DILocation(line: 72, column: 1, scope: !5402)
!5527 = !{i64 2147586162, i64 2147586205, i64 2147586245}
!5528 = !DILocation(line: 73, column: 1, scope: !5402)
!5529 = !{i64 2147586400, i64 2147586443, i64 2147586483}
!5530 = !DILocation(line: 74, column: 1, scope: !5402)
!5531 = !{i64 2147586632, i64 2147586675, i64 2147586715}
!5532 = !DILocation(line: 75, column: 1, scope: !5402)
!5533 = !{i64 2147586858, i64 2147586901, i64 2147586941}
!5534 = !DILocation(line: 76, column: 1, scope: !5402)
!5535 = !{i64 2147587075, i64 2147587118, i64 2147587158}
!5536 = !DILocation(line: 77, column: 1, scope: !5402)
!5537 = !{i64 2147587307, i64 2147587350, i64 2147587390}
!5538 = !DILocation(line: 78, column: 1, scope: !5402)
!5539 = !{i64 2147587533, i64 2147587576, i64 2147587616}
!5540 = !DILocation(line: 79, column: 1, scope: !5402)
!5541 = !{i64 2147587747, i64 2147587790, i64 2147587830}
!5542 = !DILocation(line: 80, column: 1, scope: !5402)
!5543 = !{i64 2147587967, i64 2147588010, i64 2147588050}
!5544 = !DILocation(line: 81, column: 1, scope: !5402)
!5545 = !{i64 2147588199, i64 2147588242, i64 2147588282}
!5546 = !DILocation(line: 82, column: 1, scope: !5402)
!5547 = !{i64 2147588407, i64 2147588450, i64 2147588490}
!5548 = !DILocation(line: 83, column: 1, scope: !5402)
!5549 = !{i64 2147588612, i64 2147588655, i64 2147588695}
!5550 = !DILocation(line: 84, column: 1, scope: !5402)
!5551 = !{i64 2147588829, i64 2147588872, i64 2147588912}
!5552 = !DILocation(line: 85, column: 1, scope: !5402)
!5553 = !{i64 2147589043, i64 2147589086, i64 2147589126}
!5554 = !DILocation(line: 86, column: 1, scope: !5402)
!5555 = !{i64 2147589269, i64 2147589312, i64 2147589352}
!5556 = !DILocation(line: 87, column: 1, scope: !5402)
!5557 = !{i64 2147589489, i64 2147589532, i64 2147589572}
!5558 = !DILocation(line: 88, column: 1, scope: !5402)
!5559 = !{i64 2147589694, i64 2147589737, i64 2147589777}
!5560 = !DILocation(line: 89, column: 1, scope: !5402)
!5561 = !{i64 2147593987, i64 2147594030, i64 2147594070}
!5562 = !DILocation(line: 90, column: 1, scope: !5402)
!5563 = !{i64 2147594222, i64 2147594265, i64 2147594305}
!5564 = !DILocation(line: 91, column: 1, scope: !5402)
!5565 = !{i64 2147594472, i64 2147594515, i64 2147594555}
!5566 = !DILocation(line: 92, column: 1, scope: !5402)
!5567 = !{i64 2147594722, i64 2147594765, i64 2147594805}
!5568 = !DILocation(line: 93, column: 1, scope: !5402)
!5569 = !{i64 2147594960, i64 2147595003, i64 2147595043}
!5570 = !DILocation(line: 94, column: 1, scope: !5402)
!5571 = !{i64 2147595171, i64 2147595214, i64 2147595254}
!5572 = !DILocation(line: 95, column: 1, scope: !5402)
!5573 = !{i64 2147595388, i64 2147595431, i64 2147595471}
!5574 = !DILocation(line: 96, column: 1, scope: !5402)
!5575 = !{i64 2147595584, i64 2147595627, i64 2147595667}
!5576 = !DILocation(line: 97, column: 1, scope: !5402)
!5577 = !{i64 2147595786, i64 2147595829, i64 2147595869}
!5578 = !DILocation(line: 98, column: 1, scope: !5402)
!5579 = !{i64 2147595979, i64 2147596022, i64 2147596062}
!5580 = !DILocation(line: 99, column: 1, scope: !5402)
!5581 = !{i64 2147596187, i64 2147596230, i64 2147596270}
!5582 = !DILocation(line: 100, column: 1, scope: !5402)
!5583 = !{i64 2147596383, i64 2147596426, i64 2147596466}
!5584 = !DILocation(line: 101, column: 1, scope: !5402)
!5585 = !{i64 2147596588, i64 2147596631, i64 2147596671}
!5586 = !DILocation(line: 102, column: 1, scope: !5402)
!5587 = !{i64 2147596799, i64 2147596842, i64 2147596882}
!5588 = !DILocation(line: 103, column: 1, scope: !5402)
!5589 = !{i64 2147596998, i64 2147597041, i64 2147597081}
!5590 = !DILocation(line: 104, column: 1, scope: !5402)
!5591 = !{i64 2147597173, i64 2147597216, i64 2147597256}
!5592 = !DILocation(line: 105, column: 1, scope: !5402)
!5593 = !{i64 2147597357, i64 2147597400, i64 2147597440}
!5594 = !DILocation(line: 106, column: 1, scope: !5402)
!5595 = !{i64 2147597559, i64 2147597602, i64 2147597642}
!5596 = !DILocation(line: 107, column: 1, scope: !5402)
!5597 = !{i64 2147597761, i64 2147597804, i64 2147597844}
!5598 = !DILocation(line: 108, column: 1, scope: !5402)
!5599 = !{i64 2147597966, i64 2147598009, i64 2147598049}
!5600 = !DILocation(line: 109, column: 1, scope: !5402)
!5601 = !{i64 2147598159, i64 2147598202, i64 2147598242}
!5602 = !DILocation(line: 110, column: 1, scope: !5402)
!5603 = !{i64 2147598325, i64 2147598368, i64 2147598408}
!5604 = !DILocation(line: 111, column: 1, scope: !5402)
!5605 = !{i64 2147598509, i64 2147598552, i64 2147598592}
!5606 = !DILocation(line: 112, column: 1, scope: !5402)
!5607 = !{i64 2147598699, i64 2147598742, i64 2147598782}
!5608 = !DILocation(line: 113, column: 1, scope: !5402)
!5609 = !{i64 2147598883, i64 2147598926, i64 2147598966}
!5610 = !DILocation(line: 114, column: 1, scope: !5402)
!5611 = !{i64 2147599097, i64 2147599140, i64 2147599180}
!5612 = !DILocation(line: 115, column: 1, scope: !5402)
!5613 = !{i64 2147599308, i64 2147599351, i64 2147599391}
!5614 = !DILocation(line: 116, column: 1, scope: !5402)
!5615 = !{i64 2147599531, i64 2147599574, i64 2147599614}
!5616 = !DILocation(line: 117, column: 1, scope: !5402)
!5617 = !{i64 2147599715, i64 2147599758, i64 2147599798}
!5618 = !DILocation(line: 118, column: 1, scope: !5402)
!5619 = !{i64 2147599929, i64 2147599972, i64 2147600012}
!5620 = !DILocation(line: 119, column: 1, scope: !5402)
!5621 = !{i64 2147600095, i64 2147600138, i64 2147600178}
!5622 = !DILocation(line: 120, column: 1, scope: !5402)
!5623 = !{i64 2147600276, i64 2147600319, i64 2147600359}
!5624 = !DILocation(line: 121, column: 1, scope: !5402)
!5625 = !{i64 2147600469, i64 2147600512, i64 2147600552}
!5626 = !DILocation(line: 122, column: 1, scope: !5402)
!5627 = !{i64 2147600695, i64 2147600738, i64 2147600778}
!5628 = !DILocation(line: 123, column: 1, scope: !5402)
!5629 = !{i64 2147600909, i64 2147600952, i64 2147600992}
!5630 = !DILocation(line: 124, column: 1, scope: !5402)
!5631 = !{i64 2147601135, i64 2147601178, i64 2147601218}
!5632 = !DILocation(line: 125, column: 1, scope: !5402)
!5633 = !{i64 2147601352, i64 2147601395, i64 2147601435}
!5634 = !DILocation(line: 126, column: 1, scope: !5402)
!5635 = !{i64 2147601629, i64 2147601672, i64 2147601712}
!5636 = !DILocation(line: 127, column: 1, scope: !5402)
!5637 = !{i64 2147601855, i64 2147601898, i64 2147601938}
!5638 = !DILocation(line: 128, column: 1, scope: !5402)
!5639 = !{i64 2147602051, i64 2147602094, i64 2147602134}
!5640 = !DILocation(line: 129, column: 1, scope: !5402)
!5641 = !{i64 2147602316, i64 2147602359, i64 2147602399}
!5642 = !DILocation(line: 130, column: 1, scope: !5402)
!5643 = !{i64 2147602530, i64 2147602573, i64 2147602613}
!5644 = !DILocation(line: 131, column: 1, scope: !5402)
!5645 = !{i64 2147602705, i64 2147602748, i64 2147602788}
!5646 = !DILocation(line: 132, column: 1, scope: !5402)
!5647 = !{i64 2147607020, i64 2147607063, i64 2147607103}
!5648 = !DILocation(line: 133, column: 1, scope: !5402)
!5649 = !{i64 2147607219, i64 2147607262, i64 2147607302}
!5650 = !DILocation(line: 134, column: 1, scope: !5402)
!5651 = !{i64 2147607461, i64 2147607504, i64 2147607544}
!5652 = !DILocation(line: 135, column: 1, scope: !5402)
!5653 = !{i64 2147607624, i64 2147607667, i64 2147607707}
!5654 = !DILocation(line: 136, column: 1, scope: !5402)
!5655 = !{i64 2147607811, i64 2147607854, i64 2147607894}
!5656 = !DILocation(line: 137, column: 1, scope: !5402)
!5657 = !{i64 2147608019, i64 2147608062, i64 2147608102}
!5658 = !DILocation(line: 138, column: 1, scope: !5402)
!5659 = !{i64 2147608215, i64 2147608258, i64 2147608298}
!5660 = !DILocation(line: 139, column: 1, scope: !5402)
!5661 = !{i64 2147608408, i64 2147608451, i64 2147608491}
!5662 = !DILocation(line: 140, column: 1, scope: !5402)
!5663 = !{i64 2147608590, i64 2147608633, i64 2147608673}
!5664 = !DILocation(line: 141, column: 1, scope: !5402)
!5665 = !{i64 2147608804, i64 2147608847, i64 2147608887}
!5666 = !DILocation(line: 142, column: 1, scope: !5402)
!5667 = !{i64 2147609015, i64 2147609058, i64 2147609098}
!5668 = !DILocation(line: 143, column: 1, scope: !5402)
!5669 = !{i64 2147609235, i64 2147609278, i64 2147609318}
!5670 = !DILocation(line: 144, column: 1, scope: !5402)
!5671 = !{i64 2147609442, i64 2147609485, i64 2147609525}
!5672 = !DILocation(line: 145, column: 1, scope: !5402)
!5673 = !{i64 2147609715, i64 2147609758, i64 2147609798}
!5674 = !DILocation(line: 146, column: 1, scope: !5402)
!5675 = !{i64 2147609963, i64 2147610006, i64 2147610046}
!5676 = !DILocation(line: 147, column: 1, scope: !5402)
!5677 = !{i64 2147610162, i64 2147610205, i64 2147610245}
!5678 = !DILocation(line: 148, column: 1, scope: !5402)
!5679 = !{i64 2147610397, i64 2147610440, i64 2147610480}
!5680 = !DILocation(line: 149, column: 1, scope: !5402)
!5681 = !{i64 2147610647, i64 2147610690, i64 2147610730}
!5682 = !DILocation(line: 150, column: 1, scope: !5402)
!5683 = !{i64 2147610849, i64 2147610892, i64 2147610932}
!5684 = !DILocation(line: 151, column: 1, scope: !5402)
!5685 = !{i64 2147611072, i64 2147611115, i64 2147611155}
!5686 = !DILocation(line: 152, column: 1, scope: !5402)
!5687 = !{i64 2147611286, i64 2147611329, i64 2147611369}
!5688 = !DILocation(line: 153, column: 1, scope: !5402)
!5689 = !{i64 2147611530, i64 2147611573, i64 2147611613}
!5690 = !DILocation(line: 154, column: 1, scope: !5402)
!5691 = !{i64 2147611759, i64 2147611802, i64 2147611842}
!5692 = !DILocation(line: 155, column: 1, scope: !5402)
!5693 = !{i64 2147611988, i64 2147612031, i64 2147612071}
!5694 = !DILocation(line: 156, column: 1, scope: !5402)
!5695 = !{i64 2147612196, i64 2147612239, i64 2147612279}
!5696 = !DILocation(line: 157, column: 1, scope: !5402)
!5697 = !{i64 2147612434, i64 2147612477, i64 2147612517}
!5698 = !DILocation(line: 158, column: 1, scope: !5402)
!5699 = !{i64 2147612660, i64 2147612703, i64 2147612743}
!5700 = !DILocation(line: 159, column: 1, scope: !5402)
!5701 = !{i64 2147612919, i64 2147612962, i64 2147613002}
!5702 = !DILocation(line: 160, column: 1, scope: !5402)
!5703 = !{i64 2147613139, i64 2147613182, i64 2147613222}
!5704 = !DILocation(line: 161, column: 1, scope: !5402)
!5705 = !{i64 2147613371, i64 2147613414, i64 2147613454}
!5706 = !DILocation(line: 162, column: 1, scope: !5402)
!5707 = !{i64 2147613612, i64 2147613655, i64 2147613695}
!5708 = !DILocation(line: 163, column: 1, scope: !5402)
!5709 = !{i64 2147613853, i64 2147613896, i64 2147613936}
!5710 = !DILocation(line: 164, column: 1, scope: !5402)
!5711 = !{i64 2147614076, i64 2147614119, i64 2147614159}
!5712 = !DILocation(line: 165, column: 1, scope: !5402)
!5713 = !{i64 2147614293, i64 2147614336, i64 2147614376}
!5714 = !DILocation(line: 166, column: 1, scope: !5402)
!5715 = !{i64 2147614534, i64 2147614577, i64 2147614617}
!5716 = !DILocation(line: 167, column: 1, scope: !5402)
!5717 = !{i64 2147614721, i64 2147614764, i64 2147614804}
!5718 = !DILocation(line: 168, column: 1, scope: !5402)
!5719 = !{i64 2147614884, i64 2147614927, i64 2147614967}
!5720 = !DILocation(line: 169, column: 1, scope: !5402)
!5721 = !{i64 2147615089, i64 2147615132, i64 2147615172}
!5722 = !DILocation(line: 170, column: 1, scope: !5402)
!5723 = !{i64 2147615282, i64 2147615325, i64 2147615365}
!5724 = !DILocation(line: 171, column: 1, scope: !5402)
!5725 = !{i64 2147615541, i64 2147615584, i64 2147615624}
!5726 = !DILocation(line: 172, column: 1, scope: !5402)
!5727 = !{i64 2147619825, i64 2147619868, i64 2147619908}
!5728 = !DILocation(line: 173, column: 1, scope: !5402)
!5729 = !{i64 2147620054, i64 2147620097, i64 2147620137}
!5730 = !DILocation(line: 174, column: 1, scope: !5402)
!5731 = !{i64 2147620268, i64 2147620311, i64 2147620351}
!5732 = !DILocation(line: 175, column: 1, scope: !5402)
!5733 = !{i64 2147620470, i64 2147620513, i64 2147620553}
!5734 = !DILocation(line: 176, column: 1, scope: !5402)
!5735 = !{i64 2147620666, i64 2147620709, i64 2147620749}
!5736 = !DILocation(line: 177, column: 1, scope: !5402)
!5737 = !{i64 2147620878, i64 2147620921, i64 2147620961}
!5738 = !DILocation(line: 178, column: 1, scope: !5402)
!5739 = !{i64 2147621099, i64 2147621142, i64 2147621182}
!5740 = !DILocation(line: 179, column: 1, scope: !5402)
!5741 = !{i64 2147621313, i64 2147621356, i64 2147621396}
!5742 = !DILocation(line: 180, column: 1, scope: !5402)
!5743 = !{i64 2147621503, i64 2147621546, i64 2147621586}
!5744 = !DILocation(line: 181, column: 1, scope: !5402)
!5745 = !{i64 2147621702, i64 2147621745, i64 2147621785}
!5746 = !DILocation(line: 182, column: 1, scope: !5402)
!5747 = !{i64 2147621907, i64 2147621950, i64 2147621990}
!5748 = !DILocation(line: 183, column: 1, scope: !5402)
!5749 = !{i64 2147622127, i64 2147622170, i64 2147622210}
!5750 = !DILocation(line: 184, column: 1, scope: !5402)
!5751 = !{i64 2147622328, i64 2147622371, i64 2147622411}
!5752 = !DILocation(line: 185, column: 1, scope: !5402)
!5753 = !{i64 2147622527, i64 2147622570, i64 2147622610}
!5754 = !DILocation(line: 186, column: 1, scope: !5402)
!5755 = !{i64 2147622732, i64 2147622775, i64 2147622815}
!5756 = !DILocation(line: 187, column: 1, scope: !5402)
!5757 = !{i64 2147622901, i64 2147622944, i64 2147622984}
!5758 = !DILocation(line: 188, column: 1, scope: !5402)
!5759 = !{i64 2147623085, i64 2147623128, i64 2147623168}
!5760 = !DILocation(line: 189, column: 1, scope: !5402)
!5761 = !{i64 2147623269, i64 2147623312, i64 2147623352}
!5762 = !DILocation(line: 190, column: 1, scope: !5402)
!5763 = !{i64 2147623456, i64 2147623499, i64 2147623539}
!5764 = !DILocation(line: 191, column: 1, scope: !5402)
!5765 = !{i64 2147623640, i64 2147623683, i64 2147623723}
!5766 = !DILocation(line: 192, column: 1, scope: !5402)
!5767 = !{i64 2147623827, i64 2147623870, i64 2147623910}
!5768 = !DILocation(line: 193, column: 1, scope: !5402)
!5769 = !{i64 2147624039, i64 2147624082, i64 2147624122}
!5770 = !DILocation(line: 194, column: 1, scope: !5402)
!5771 = !{i64 2147624277, i64 2147624320, i64 2147624360}
!5772 = !DILocation(line: 195, column: 1, scope: !5402)
!5773 = !{i64 2147624507, i64 2147624550, i64 2147624590}
!5774 = !DILocation(line: 196, column: 1, scope: !5402)
!5775 = !{i64 2147624736, i64 2147624779, i64 2147624819}
!5776 = !DILocation(line: 197, column: 1, scope: !5402)
!5777 = !{i64 2147624923, i64 2147624966, i64 2147625006}
!5778 = !DILocation(line: 198, column: 1, scope: !5402)
!5779 = !{i64 2147625119, i64 2147625162, i64 2147625202}
!5780 = !DILocation(line: 199, column: 1, scope: !5402)
!5781 = !{i64 2147625327, i64 2147625370, i64 2147625410}
!5782 = !DILocation(line: 200, column: 1, scope: !5402)
!5783 = !{i64 2147625539, i64 2147625582, i64 2147625622}
!5784 = !DILocation(line: 201, column: 1, scope: !5402)
!5785 = !{i64 2147625738, i64 2147625781, i64 2147625821}
!5786 = !DILocation(line: 202, column: 1, scope: !5402)
!5787 = !{i64 2147625976, i64 2147626019, i64 2147626059}
!5788 = !DILocation(line: 203, column: 1, scope: !5402)
!5789 = !{i64 2147626172, i64 2147626215, i64 2147626255}
!5790 = !DILocation(line: 204, column: 1, scope: !5402)
!5791 = !{i64 2147626374, i64 2147626417, i64 2147626457}
!5792 = !DILocation(line: 205, column: 1, scope: !5402)
!5793 = !{i64 2147626567, i64 2147626610, i64 2147626650}
!5794 = !DILocation(line: 206, column: 1, scope: !5402)
!5795 = !{i64 2147626801, i64 2147626844, i64 2147626884}
!5796 = !DILocation(line: 207, column: 1, scope: !5402)
!5797 = !{i64 2147626964, i64 2147627007, i64 2147627047}
!5798 = !DILocation(line: 208, column: 1, scope: !5402)
!5799 = !{i64 2147627203, i64 2147627246, i64 2147627286}
!5800 = !DILocation(line: 209, column: 1, scope: !5402)
!5801 = !{i64 2147627442, i64 2147627485, i64 2147627525}
!5802 = !DILocation(line: 210, column: 1, scope: !5402)
!5803 = !{i64 2147627678, i64 2147627721, i64 2147627761}
!5804 = !DILocation(line: 211, column: 1, scope: !5402)
!5805 = !{i64 2147627908, i64 2147627951, i64 2147627991}
!5806 = !DILocation(line: 212, column: 1, scope: !5402)
!5807 = !{i64 2147628095, i64 2147628138, i64 2147628178}
!5808 = !DILocation(line: 213, column: 1, scope: !5402)
!5809 = !{i64 2147628294, i64 2147628337, i64 2147628377}
!5810 = !DILocation(line: 214, column: 1, scope: !5402)
!5811 = !{i64 2147628565, i64 2147628608, i64 2147628648}
!5812 = !DILocation(line: 215, column: 1, scope: !5402)
!5813 = !{i64 2147628740, i64 2147628783, i64 2147628823}
!5814 = !DILocation(line: 216, column: 1, scope: !5402)
!5815 = !{i64 2147633035, i64 2147633078, i64 2147633118}
!5816 = !DILocation(line: 217, column: 1, scope: !5402)
!5817 = !{i64 2147633243, i64 2147633286, i64 2147633326}
!5818 = !DILocation(line: 218, column: 1, scope: !5402)
!5819 = !{i64 2147633461, i64 2147633504, i64 2147633544}
!5820 = !DILocation(line: 219, column: 1, scope: !5402)
!5821 = !{i64 2147633651, i64 2147633694, i64 2147633734}
!5822 = !DILocation(line: 220, column: 1, scope: !5402)
!5823 = !{i64 2147633883, i64 2147633926, i64 2147633966}
!5824 = !DILocation(line: 221, column: 1, scope: !5402)
!5825 = !{i64 2147634103, i64 2147634146, i64 2147634186}
!5826 = !DILocation(line: 222, column: 1, scope: !5402)
!5827 = !{i64 2147634299, i64 2147634342, i64 2147634382}
!5828 = !DILocation(line: 223, column: 1, scope: !5402)
!5829 = !{i64 2147634505, i64 2147634548, i64 2147634588}
!5830 = !DILocation(line: 224, column: 1, scope: !5402)
!5831 = !{i64 2147634710, i64 2147634753, i64 2147634793}
!5832 = !DILocation(line: 225, column: 1, scope: !5402)
!5833 = !{i64 2147634936, i64 2147634979, i64 2147635019}
!5834 = !DILocation(line: 226, column: 1, scope: !5402)
!5835 = !{i64 2147635144, i64 2147635187, i64 2147635227}
!5836 = !DILocation(line: 227, column: 1, scope: !5402)
!5837 = !{i64 2147635340, i64 2147635383, i64 2147635423}
!5838 = !DILocation(line: 228, column: 1, scope: !5402)
!5839 = !{i64 2147635572, i64 2147635615, i64 2147635655}
!5840 = !DILocation(line: 229, column: 1, scope: !5402)
!5841 = !{i64 2147635756, i64 2147635799, i64 2147635839}
!5842 = !DILocation(line: 230, column: 1, scope: !5402)
!5843 = !{i64 2147635965, i64 2147636008, i64 2147636048}
!5844 = !DILocation(line: 231, column: 1, scope: !5402)
!5845 = !{i64 2147636173, i64 2147636216, i64 2147636256}
!5846 = !DILocation(line: 232, column: 1, scope: !5402)
!5847 = !{i64 2147636369, i64 2147636412, i64 2147636452}
!5848 = !DILocation(line: 233, column: 1, scope: !5402)
!5849 = !{i64 2147636553, i64 2147636596, i64 2147636636}
!5850 = !DILocation(line: 234, column: 1, scope: !5402)
!5851 = !{i64 2147636779, i64 2147636822, i64 2147636862}
!5852 = !DILocation(line: 235, column: 1, scope: !5402)
!5853 = !{i64 2147637005, i64 2147637048, i64 2147637088}
!5854 = !DILocation(line: 236, column: 1, scope: !5402)
!5855 = !{i64 2147637231, i64 2147637274, i64 2147637314}
!5856 = !DILocation(line: 237, column: 1, scope: !5402)
!5857 = !{i64 2147637457, i64 2147637500, i64 2147637540}
!5858 = !DILocation(line: 238, column: 1, scope: !5402)
!5859 = !{i64 2147637683, i64 2147637726, i64 2147637766}
!5860 = !DILocation(line: 239, column: 1, scope: !5402)
!5861 = !{i64 2147637915, i64 2147637958, i64 2147637998}
!5862 = !DILocation(line: 240, column: 1, scope: !5402)
!5863 = !{i64 2147638153, i64 2147638196, i64 2147638236}
!5864 = !DILocation(line: 241, column: 1, scope: !5402)
!5865 = !{i64 2147638385, i64 2147638428, i64 2147638468}
!5866 = !DILocation(line: 242, column: 1, scope: !5402)
!5867 = !{i64 2147638587, i64 2147638630, i64 2147638670}
!5868 = !DILocation(line: 243, column: 1, scope: !5402)
!5869 = !{i64 2147638837, i64 2147638880, i64 2147638920}
!5870 = !DILocation(line: 244, column: 1, scope: !5402)
!5871 = !{i64 2147639075, i64 2147639118, i64 2147639158}
!5872 = !DILocation(line: 245, column: 1, scope: !5402)
!5873 = !{i64 2147639283, i64 2147639326, i64 2147639366}
!5874 = !DILocation(line: 246, column: 1, scope: !5402)
!5875 = !{i64 2147639479, i64 2147639522, i64 2147639562}
!5876 = !DILocation(line: 247, column: 1, scope: !5402)
!5877 = !{i64 2147639663, i64 2147639706, i64 2147639746}
!5878 = !DILocation(line: 248, column: 1, scope: !5402)
!5879 = !{i64 2147639880, i64 2147639923, i64 2147639963}
!5880 = !DILocation(line: 249, column: 1, scope: !5402)
!5881 = !{i64 2147640085, i64 2147640128, i64 2147640168}
!5882 = !DILocation(line: 250, column: 1, scope: !5402)
!5883 = !{i64 2147640320, i64 2147640363, i64 2147640403}
!5884 = !DILocation(line: 251, column: 1, scope: !5402)
!5885 = !{i64 2147640543, i64 2147640586, i64 2147640626}
!5886 = !DILocation(line: 252, column: 1, scope: !5402)
!5887 = !{i64 2147640766, i64 2147640809, i64 2147640849}
!5888 = !DILocation(line: 253, column: 1, scope: !5402)
!5889 = !{i64 2147641004, i64 2147641047, i64 2147641087}
!5890 = !DILocation(line: 254, column: 1, scope: !5402)
!5891 = !{i64 2147641242, i64 2147641285, i64 2147641325}
!5892 = !DILocation(line: 255, column: 1, scope: !5402)
!5893 = !{i64 2147641459, i64 2147641502, i64 2147641542}
!5894 = !DILocation(line: 256, column: 1, scope: !5402)
!5895 = !{i64 2147645725, i64 2147645768, i64 2147645808}
!5896 = !DILocation(line: 257, column: 1, scope: !5402)
!5897 = !{i64 2147645918, i64 2147645961, i64 2147646001}
!5898 = !DILocation(line: 258, column: 1, scope: !5402)
!5899 = !{i64 2147646171, i64 2147646214, i64 2147646254}
!5900 = !DILocation(line: 259, column: 1, scope: !5402)
!5901 = !{i64 2147646379, i64 2147646422, i64 2147646462}
!5902 = !DILocation(line: 260, column: 1, scope: !5402)
!5903 = !{i64 2147646575, i64 2147646618, i64 2147646658}
!5904 = !DILocation(line: 261, column: 1, scope: !5402)
!5905 = !{i64 2147646789, i64 2147646832, i64 2147646872}
!5906 = !DILocation(line: 262, column: 1, scope: !5402)
!5907 = !{i64 2147646997, i64 2147647040, i64 2147647080}
!5908 = !DILocation(line: 263, column: 1, scope: !5402)
!5909 = !{i64 2147647187, i64 2147647230, i64 2147647270}
!5910 = !DILocation(line: 264, column: 1, scope: !5402)
!5911 = !{i64 2147647401, i64 2147647444, i64 2147647484}
!5912 = !DILocation(line: 265, column: 1, scope: !5402)
!5913 = !{i64 2147647663, i64 2147647706, i64 2147647746}
!5914 = !DILocation(line: 266, column: 1, scope: !5402)
!5915 = !{i64 2147647874, i64 2147647917, i64 2147647957}
!5916 = !DILocation(line: 267, column: 1, scope: !5402)
!5917 = !{i64 2147648118, i64 2147648161, i64 2147648201}
!5918 = !DILocation(line: 268, column: 1, scope: !5402)
!5919 = !{i64 2147648329, i64 2147648372, i64 2147648412}
!5920 = !DILocation(line: 269, column: 1, scope: !5402)
!5921 = !{i64 2147648558, i64 2147648601, i64 2147648641}
!5922 = !DILocation(line: 270, column: 1, scope: !5402)
!5923 = !{i64 2147648823, i64 2147648866, i64 2147648906}
!5924 = !DILocation(line: 271, column: 1, scope: !5402)
!5925 = !{i64 2147649028, i64 2147649071, i64 2147649111}
!5926 = !DILocation(line: 272, column: 1, scope: !5402)
!5927 = !{i64 2147649224, i64 2147649267, i64 2147649307}
!5928 = !DILocation(line: 273, column: 1, scope: !5402)
!5929 = !{i64 2147649447, i64 2147649490, i64 2147649530}
!5930 = !DILocation(line: 274, column: 1, scope: !5402)
!5931 = !{i64 2147649610, i64 2147649653, i64 2147649693}
!5932 = !DILocation(line: 275, column: 1, scope: !5402)
!5933 = !{i64 2147649815, i64 2147649858, i64 2147649898}
!5934 = !DILocation(line: 276, column: 1, scope: !5402)
!5935 = !{i64 2147650035, i64 2147650078, i64 2147650118}
!5936 = !DILocation(line: 277, column: 1, scope: !5402)
!5937 = !{i64 2147650249, i64 2147650292, i64 2147650332}
!5938 = !DILocation(line: 278, column: 1, scope: !5402)
!5939 = !{i64 2147650493, i64 2147650536, i64 2147650576}
!5940 = !DILocation(line: 279, column: 1, scope: !5402)
!5941 = !{i64 2147650725, i64 2147650768, i64 2147650808}
!5942 = !DILocation(line: 280, column: 1, scope: !5402)
!5943 = !{i64 2147650939, i64 2147650982, i64 2147651022}
!5944 = !DILocation(line: 281, column: 1, scope: !5402)
!5945 = !{i64 2147651150, i64 2147651193, i64 2147651233}
!5946 = !DILocation(line: 282, column: 1, scope: !5402)
!5947 = !{i64 2147651343, i64 2147651386, i64 2147651426}
!5948 = !DILocation(line: 283, column: 1, scope: !5402)
!5949 = !{i64 2147651542, i64 2147651585, i64 2147651625}
!5950 = !DILocation(line: 284, column: 1, scope: !5402)
!5951 = !{i64 2147651714, i64 2147651757, i64 2147651797}
!5952 = !DILocation(line: 285, column: 1, scope: !5402)
!5953 = !{i64 2147651907, i64 2147651950, i64 2147651990}
!5954 = !DILocation(line: 286, column: 1, scope: !5402)
!5955 = !{i64 2147652079, i64 2147652122, i64 2147652162}
!5956 = !DILocation(line: 287, column: 1, scope: !5402)
!5957 = !{i64 2147652269, i64 2147652312, i64 2147652352}
!5958 = !DILocation(line: 288, column: 1, scope: !5402)
!5959 = !{i64 2147652462, i64 2147652505, i64 2147652545}
!5960 = !DILocation(line: 289, column: 1, scope: !5402)
!5961 = !{i64 2147652658, i64 2147652701, i64 2147652741}
!5962 = !DILocation(line: 290, column: 1, scope: !5402)
!5963 = !{i64 2147652821, i64 2147652864, i64 2147652904}
!5964 = !DILocation(line: 291, column: 1, scope: !5402)
!5965 = !{i64 2147653023, i64 2147653066, i64 2147653106}
!5966 = !DILocation(line: 292, column: 1, scope: !5402)
!5967 = !{i64 2147653234, i64 2147653277, i64 2147653317}
!5968 = !DILocation(line: 293, column: 1, scope: !5402)
!5969 = !{i64 2147653439, i64 2147653482, i64 2147653522}
!5970 = !DILocation(line: 294, column: 1, scope: !5402)
!5971 = !{i64 2147653647, i64 2147653690, i64 2147653730}
!5972 = !DILocation(line: 295, column: 1, scope: !5402)
!5973 = !{i64 2147653840, i64 2147653883, i64 2147653923}
!5974 = !DILocation(line: 296, column: 1, scope: !5402)
!5975 = !{i64 2147654027, i64 2147654070, i64 2147654110}
!5976 = !DILocation(line: 297, column: 1, scope: !5402)
!5977 = !{i64 2147654193, i64 2147654236, i64 2147654276}
!5978 = !DILocation(line: 298, column: 1, scope: !5402)
!5979 = !{i64 2147654420, i64 2147654463, i64 2147654503}
!5980 = !DILocation(line: 299, column: 1, scope: !5402)
!5981 = !{i64 2147654637, i64 2147654680, i64 2147654720}
!5982 = !DILocation(line: 300, column: 1, scope: !5402)
!5983 = !{i64 2147658924, i64 2147658967, i64 2147659007}
!5984 = !DILocation(line: 301, column: 1, scope: !5402)
!5985 = !{i64 2147659129, i64 2147659172, i64 2147659212}
!5986 = !DILocation(line: 302, column: 1, scope: !5402)
!5987 = !{i64 2147659346, i64 2147659389, i64 2147659429}
!5988 = !DILocation(line: 303, column: 1, scope: !5402)
!5989 = !{i64 2147659638, i64 2147659681, i64 2147659721}
!5990 = !DILocation(line: 304, column: 1, scope: !5402)
!5991 = !{i64 2147659870, i64 2147659913, i64 2147659953}
!5992 = !DILocation(line: 305, column: 1, scope: !5402)
!5993 = !{i64 2147660087, i64 2147660130, i64 2147660170}
!5994 = !DILocation(line: 306, column: 1, scope: !5402)
!5995 = !{i64 2147660294, i64 2147660337, i64 2147660377}
!5996 = !DILocation(line: 307, column: 1, scope: !5402)
!5997 = !{i64 2147660495, i64 2147660538, i64 2147660578}
!5998 = !DILocation(line: 308, column: 1, scope: !5402)
!5999 = !{i64 2147660727, i64 2147660770, i64 2147660810}
!6000 = !DILocation(line: 309, column: 1, scope: !5402)
!6001 = !{i64 2147660935, i64 2147660978, i64 2147661018}
!6002 = !DILocation(line: 310, column: 1, scope: !5402)
!6003 = !{i64 2147661125, i64 2147661168, i64 2147661208}
!6004 = !DILocation(line: 311, column: 1, scope: !5402)
!6005 = !{i64 2147661351, i64 2147661394, i64 2147661434}
!6006 = !DILocation(line: 312, column: 1, scope: !5402)
!6007 = !{i64 2147661540, i64 2147661583, i64 2147661623}
!6008 = !DILocation(line: 313, column: 1, scope: !5402)
!6009 = !{i64 2147661811, i64 2147661854, i64 2147661894}
!6010 = !DILocation(line: 314, column: 1, scope: !5402)
!6011 = !{i64 2147662031, i64 2147662074, i64 2147662114}
!6012 = !DILocation(line: 315, column: 1, scope: !5402)
!6013 = !{i64 2147662284, i64 2147662327, i64 2147662367}
!6014 = !DILocation(line: 316, column: 1, scope: !5402)
!6015 = !{i64 2147662492, i64 2147662535, i64 2147662575}
!6016 = !DILocation(line: 317, column: 1, scope: !5402)
!6017 = !{i64 2147662724, i64 2147662767, i64 2147662807}
!6018 = !DILocation(line: 318, column: 1, scope: !5402)
!6019 = !{i64 2147662935, i64 2147662978, i64 2147663018}
!6020 = !DILocation(line: 319, column: 1, scope: !5402)
!6021 = !{i64 2147663125, i64 2147663168, i64 2147663208}
!6022 = !DILocation(line: 320, column: 1, scope: !5402)
!6023 = !{i64 2147663339, i64 2147663382, i64 2147663422}
!6024 = !DILocation(line: 321, column: 1, scope: !5402)
!6025 = !{i64 2147663538, i64 2147663581, i64 2147663621}
!6026 = !DILocation(line: 322, column: 1, scope: !5402)
!6027 = !{i64 2147663725, i64 2147663768, i64 2147663808}
!6028 = !DILocation(line: 323, column: 1, scope: !5402)
!6029 = !{i64 2147663933, i64 2147663976, i64 2147664016}
!6030 = !DILocation(line: 324, column: 1, scope: !5402)
!6031 = !{i64 2147664162, i64 2147664205, i64 2147664245}
!6032 = !DILocation(line: 325, column: 1, scope: !5402)
!6033 = !{i64 2147664364, i64 2147664407, i64 2147664447}
!6034 = !DILocation(line: 326, column: 1, scope: !5402)
!6035 = !{i64 2147664563, i64 2147664606, i64 2147664646}
!6036 = !DILocation(line: 327, column: 1, scope: !5402)
!6037 = !{i64 2147664780, i64 2147664823, i64 2147664863}
!6038 = !DILocation(line: 329, column: 1, scope: !5402)
!6039 = distinct !DISubprogram(name: "stm32l1_init", scope: !337, file: !337, line: 31, type: !344, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6040)
!6040 = !{!6041, !6042}
!6041 = !DILocalVariable(name: "arg", arg: 1, scope: !6039, file: !337, line: 31, type: !346)
!6042 = !DILocalVariable(name: "key", scope: !6039, file: !337, line: 33, type: !110)
!6043 = !DILocation(line: 0, scope: !6039)
!6044 = !DILocation(line: 55, column: 2, scope: !6045, inlinedAt: !6052)
!6045 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6046, file: !6046, line: 42, type: !6047, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6049)
!6046 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!32}
!6049 = !{!6050, !6051}
!6050 = !DILocalVariable(name: "key", scope: !6045, file: !6046, line: 44, type: !32)
!6051 = !DILocalVariable(name: "tmp", scope: !6045, file: !6046, line: 53, type: !32)
!6052 = distinct !DILocation(line: 37, column: 8, scope: !6039)
!6053 = !{i64 1527914}
!6054 = !DILocation(line: 0, scope: !6045, inlinedAt: !6052)
!6055 = !DILocalVariable(name: "key", arg: 1, scope: !6056, file: !6046, line: 84, type: !32)
!6056 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6059)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{null, !32}
!6059 = !{!6055}
!6060 = !DILocation(line: 0, scope: !6056, inlinedAt: !6061)
!6061 = distinct !DILocation(line: 44, column: 2, scope: !6039)
!6062 = !DILocation(line: 95, column: 2, scope: !6056, inlinedAt: !6061)
!6063 = !{i64 1528731}
!6064 = !DILocation(line: 48, column: 18, scope: !6039)
!6065 = !DILocation(line: 54, column: 2, scope: !6039)
!6066 = !DILocation(line: 55, column: 2, scope: !6039)
!6067 = !DILocation(line: 57, column: 2, scope: !6039)
!6068 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !6069, file: !6069, line: 531, type: !6070, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6072)
!6069 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6070 = !DISubroutineType(types: !6071)
!6071 = !{null, !110}
!6072 = !{!6073, !6074}
!6073 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6068, file: !6069, line: 531, type: !110)
!6074 = !DILocalVariable(name: "tmpreg", scope: !6068, file: !6069, line: 533, type: !316)
!6075 = !DILocation(line: 0, scope: !6068)
!6076 = !DILocation(line: 533, column: 3, scope: !6068)
!6077 = !DILocation(line: 533, column: 17, scope: !6068)
!6078 = !DILocation(line: 534, column: 3, scope: !6068)
!6079 = !DILocation(line: 536, column: 12, scope: !6068)
!6080 = !DILocation(line: 536, column: 10, scope: !6068)
!6081 = !DILocation(line: 537, column: 9, scope: !6068)
!6082 = !DILocation(line: 538, column: 1, scope: !6068)
!6083 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !6084, file: !6084, line: 272, type: !6070, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6085)
!6084 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6085 = !{!6086}
!6086 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !6083, file: !6084, line: 272, type: !110)
!6087 = !DILocation(line: 0, scope: !6083)
!6088 = !DILocation(line: 274, column: 3, scope: !6083)
!6089 = !DILocation(line: 275, column: 1, scope: !6083)
!6090 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !374, file: !374, line: 26, type: !380, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !371, retainedNodes: !6091)
!6091 = !{!6092}
!6092 = !DILocalVariable(name: "dev", arg: 1, scope: !6090, file: !374, line: 26, type: !382)
!6093 = !DILocation(line: 0, scope: !6090)
!6094 = !DILocation(line: 68, column: 2, scope: !6090)
!6095 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6096, file: !6096, line: 14, type: !4356, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6097)
!6096 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6097 = !{!6098, !6099}
!6098 = !DILocalVariable(name: "fmt", arg: 1, scope: !6095, file: !6096, line: 14, type: !279)
!6099 = !DILocalVariable(name: "ap", scope: !6095, file: !6096, line: 16, type: !6100)
!6100 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3362, line: 99, baseType: !6101)
!6101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3362, line: 40, baseType: !6102)
!6102 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6096, baseType: !6103)
!6103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6104)
!6104 = !{!6105}
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6103, file: !6096, line: 16, baseType: !107, size: 32)
!6106 = !DILocation(line: 0, scope: !6095)
!6107 = !DILocation(line: 16, column: 2, scope: !6095)
!6108 = !DILocation(line: 16, column: 10, scope: !6095)
!6109 = !DILocation(line: 18, column: 2, scope: !6095)
!6110 = !DILocation(line: 19, column: 2, scope: !6095)
!6111 = !DILocation(line: 20, column: 2, scope: !6095)
!6112 = !DILocation(line: 21, column: 1, scope: !6095)
!6113 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6096, file: !6096, line: 23, type: !6114, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6116)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{null, !279, !6100}
!6116 = !{!6117, !6118}
!6117 = !DILocalVariable(name: "fmt", arg: 1, scope: !6113, file: !6096, line: 23, type: !279)
!6118 = !DILocalVariable(name: "ap", arg: 2, scope: !6113, file: !6096, line: 23, type: !6100)
!6119 = !DILocation(line: 0, scope: !6113)
!6120 = !DILocation(line: 25, column: 2, scope: !6113)
!6121 = !DILocation(line: 26, column: 1, scope: !6113)
!6122 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6096, file: !6096, line: 52, type: !6123, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6125)
!6123 = !DISubroutineType(types: !6124)
!6124 = !{null, !109, !13, !234}
!6125 = !{!6126, !6127, !6128, !6129}
!6126 = !DILocalVariable(name: "level", arg: 1, scope: !6122, file: !6096, line: 52, type: !109)
!6127 = !DILocalVariable(name: "data", arg: 2, scope: !6122, file: !6096, line: 52, type: !13)
!6128 = !DILocalVariable(name: "size", arg: 3, scope: !6122, file: !6096, line: 52, type: !234)
!6129 = !DILocalVariable(name: "data_buffer", scope: !6122, file: !6096, line: 54, type: !279)
!6130 = !DILocation(line: 0, scope: !6122)
!6131 = !DILocation(line: 55, column: 14, scope: !6122)
!6132 = !DILocation(line: 55, column: 2, scope: !6122)
!6133 = !DILocation(line: 56, column: 3, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6122, file: !6096, line: 55, column: 20)
!6135 = !DILocation(line: 57, column: 3, scope: !6134)
!6136 = !DILocation(line: 59, column: 7, scope: !6134)
!6137 = distinct !{!6137, !6132, !6138}
!6138 = !DILocation(line: 65, column: 2, scope: !6122)
!6139 = !DILocation(line: 66, column: 1, scope: !6122)
!6140 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6141, file: !6141, line: 175, type: !6142, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6144)
!6141 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6142 = !DISubroutineType(types: !6143)
!6143 = !{!150, !109}
!6144 = !{!6145}
!6145 = !DILocalVariable(name: "level", arg: 1, scope: !6140, file: !6141, line: 175, type: !109)
!6146 = !DILocation(line: 0, scope: !6140)
!6147 = !DILocation(line: 177, column: 2, scope: !6140)
!6148 = !DILocation(line: 189, column: 1, scope: !6140)
!6149 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6096, file: !6096, line: 28, type: !6150, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6152)
!6150 = !DISubroutineType(types: !6151)
!6151 = !{null, !279, !234}
!6152 = !{!6153, !6154, !6155, !6157, !6159}
!6153 = !DILocalVariable(name: "data", arg: 1, scope: !6149, file: !6096, line: 28, type: !279)
!6154 = !DILocalVariable(name: "length", arg: 2, scope: !6149, file: !6096, line: 28, type: !234)
!6155 = !DILocalVariable(name: "i", scope: !6156, file: !6096, line: 30, type: !234)
!6156 = distinct !DILexicalBlock(scope: !6149, file: !6096, line: 30, column: 2)
!6157 = !DILocalVariable(name: "i", scope: !6158, file: !6096, line: 40, type: !234)
!6158 = distinct !DILexicalBlock(scope: !6149, file: !6096, line: 40, column: 2)
!6159 = !DILocalVariable(name: "c", scope: !6160, file: !6096, line: 42, type: !181)
!6160 = distinct !DILexicalBlock(scope: !6161, file: !6096, line: 41, column: 19)
!6161 = distinct !DILexicalBlock(scope: !6162, file: !6096, line: 41, column: 7)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !6096, line: 40, column: 54)
!6163 = distinct !DILexicalBlock(scope: !6158, file: !6096, line: 40, column: 2)
!6164 = !DILocation(line: 0, scope: !6149)
!6165 = !DILocation(line: 0, scope: !6156)
!6166 = !DILocation(line: 30, column: 2, scope: !6156)
!6167 = !DILocation(line: 38, column: 2, scope: !6149)
!6168 = !DILocation(line: 0, scope: !6158)
!6169 = !DILocation(line: 40, column: 2, scope: !6158)
!6170 = !DILocation(line: 31, column: 9, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6172, file: !6096, line: 31, column: 7)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !6096, line: 30, column: 54)
!6173 = distinct !DILexicalBlock(scope: !6156, file: !6096, line: 30, column: 2)
!6174 = !DILocation(line: 31, column: 7, scope: !6172)
!6175 = !DILocation(line: 32, column: 35, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6171, file: !6096, line: 31, column: 19)
!6177 = !DILocation(line: 32, column: 20, scope: !6176)
!6178 = !DILocation(line: 32, column: 4, scope: !6176)
!6179 = !DILocation(line: 33, column: 3, scope: !6176)
!6180 = !DILocation(line: 34, column: 4, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6171, file: !6096, line: 33, column: 10)
!6182 = !DILocation(line: 30, column: 50, scope: !6173)
!6183 = !DILocation(line: 30, column: 24, scope: !6173)
!6184 = distinct !{!6184, !6166, !6185}
!6185 = !DILocation(line: 36, column: 2, scope: !6156)
!6186 = !DILocation(line: 49, column: 2, scope: !6149)
!6187 = !DILocation(line: 50, column: 1, scope: !6149)
!6188 = !DILocation(line: 41, column: 9, scope: !6161)
!6189 = !DILocation(line: 41, column: 7, scope: !6162)
!6190 = !DILocation(line: 42, column: 22, scope: !6160)
!6191 = !DILocation(line: 0, scope: !6160)
!6192 = !DILocation(line: 44, column: 25, scope: !6160)
!6193 = !DILocation(line: 44, column: 17, scope: !6160)
!6194 = !DILocation(line: 44, column: 33, scope: !6160)
!6195 = !DILocation(line: 44, column: 4, scope: !6160)
!6196 = !DILocation(line: 45, column: 3, scope: !6160)
!6197 = !DILocation(line: 46, column: 4, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6161, file: !6096, line: 45, column: 10)
!6199 = !DILocation(line: 40, column: 50, scope: !6163)
!6200 = !DILocation(line: 40, column: 24, scope: !6163)
!6201 = distinct !{!6201, !6169, !6202}
!6202 = !DILocation(line: 48, column: 2, scope: !6158)
!6203 = distinct !DISubprogram(name: "isprint", scope: !5146, file: !5146, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2566, retainedNodes: !6204)
!6204 = !{!6205}
!6205 = !DILocalVariable(name: "c", arg: 1, scope: !6203, file: !5146, line: 37, type: !109)
!6206 = !DILocation(line: 0, scope: !6203)
!6207 = !DILocation(line: 39, column: 38, scope: !6203)
!6208 = !DILocation(line: 39, column: 2, scope: !6203)
!6209 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6210, file: !6210, line: 57, type: !6211, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6257)
!6210 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6211 = !DISubroutineType(types: !6212)
!6212 = !{null, !32, !6213}
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6214, size: 32)
!6214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6215)
!6215 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2689, line: 141, baseType: !6216)
!6216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2689, line: 97, size: 256, elements: !6217)
!6217 = !{!6218}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6216, file: !2689, line: 107, baseType: !6219, size: 256)
!6219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2689, line: 98, size: 256, elements: !6220)
!6220 = !{!6221, !6226, !6231, !6236, !6241, !6246, !6251, !6256}
!6221 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !2689, line: 99, baseType: !6222, size: 32)
!6222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6219, file: !2689, line: 99, size: 32, elements: !6223)
!6223 = !{!6224, !6225}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6222, file: !2689, line: 99, baseType: !110, size: 32)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6222, file: !2689, line: 99, baseType: !110, size: 32)
!6226 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !2689, line: 100, baseType: !6227, size: 32, offset: 32)
!6227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6219, file: !2689, line: 100, size: 32, elements: !6228)
!6228 = !{!6229, !6230}
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6227, file: !2689, line: 100, baseType: !110, size: 32)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6227, file: !2689, line: 100, baseType: !110, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !2689, line: 101, baseType: !6232, size: 32, offset: 64)
!6232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6219, file: !2689, line: 101, size: 32, elements: !6233)
!6233 = !{!6234, !6235}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6232, file: !2689, line: 101, baseType: !110, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6232, file: !2689, line: 101, baseType: !110, size: 32)
!6236 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !2689, line: 102, baseType: !6237, size: 32, offset: 96)
!6237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6219, file: !2689, line: 102, size: 32, elements: !6238)
!6238 = !{!6239, !6240}
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6237, file: !2689, line: 102, baseType: !110, size: 32)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6237, file: !2689, line: 102, baseType: !110, size: 32)
!6241 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !2689, line: 103, baseType: !6242, size: 32, offset: 128)
!6242 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6219, file: !2689, line: 103, size: 32, elements: !6243)
!6243 = !{!6244, !6245}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6242, file: !2689, line: 103, baseType: !110, size: 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6242, file: !2689, line: 103, baseType: !110, size: 32)
!6246 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !2689, line: 104, baseType: !6247, size: 32, offset: 160)
!6247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6219, file: !2689, line: 104, size: 32, elements: !6248)
!6248 = !{!6249, !6250}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6247, file: !2689, line: 104, baseType: !110, size: 32)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6247, file: !2689, line: 104, baseType: !110, size: 32)
!6251 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !2689, line: 105, baseType: !6252, size: 32, offset: 192)
!6252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6219, file: !2689, line: 105, size: 32, elements: !6253)
!6253 = !{!6254, !6255}
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6252, file: !2689, line: 105, baseType: !110, size: 32)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6252, file: !2689, line: 105, baseType: !110, size: 32)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6219, file: !2689, line: 106, baseType: !110, size: 32, offset: 224)
!6257 = !{!6258, !6259}
!6258 = !DILocalVariable(name: "reason", arg: 1, scope: !6209, file: !6210, line: 57, type: !32)
!6259 = !DILocalVariable(name: "esf", arg: 2, scope: !6209, file: !6210, line: 57, type: !6213)
!6260 = !DILocation(line: 0, scope: !6209)
!6261 = !DILocation(line: 60, column: 10, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6209, file: !6210, line: 60, column: 6)
!6263 = !DILocation(line: 60, column: 6, scope: !6209)
!6264 = !DILocation(line: 61, column: 3, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6262, file: !6210, line: 60, column: 19)
!6266 = !DILocation(line: 62, column: 2, scope: !6265)
!6267 = !DILocation(line: 63, column: 2, scope: !6209)
!6268 = !DILocation(line: 64, column: 1, scope: !6209)
!6269 = distinct !DISubprogram(name: "esf_dump", scope: !6210, file: !6210, line: 20, type: !6270, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6272)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{null, !6213}
!6272 = !{!6273}
!6273 = !DILocalVariable(name: "esf", arg: 1, scope: !6269, file: !6210, line: 20, type: !6213)
!6274 = !DILocation(line: 0, scope: !6269)
!6275 = !DILocation(line: 22, column: 2, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !6210, line: 22, column: 2)
!6277 = distinct !DILexicalBlock(scope: !6278, file: !6210, line: 22, column: 2)
!6278 = distinct !DILexicalBlock(scope: !6279, file: !6210, line: 22, column: 2)
!6279 = distinct !DILexicalBlock(scope: !6269, file: !6210, line: 22, column: 2)
!6280 = !DILocation(line: 24, column: 2, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !6210, line: 24, column: 2)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !6210, line: 24, column: 2)
!6283 = distinct !DILexicalBlock(scope: !6284, file: !6210, line: 24, column: 2)
!6284 = distinct !DILexicalBlock(scope: !6269, file: !6210, line: 24, column: 2)
!6285 = !DILocation(line: 26, column: 2, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !6210, line: 26, column: 2)
!6287 = distinct !DILexicalBlock(scope: !6288, file: !6210, line: 26, column: 2)
!6288 = distinct !DILexicalBlock(scope: !6289, file: !6210, line: 26, column: 2)
!6289 = distinct !DILexicalBlock(scope: !6269, file: !6210, line: 26, column: 2)
!6290 = !DILocation(line: 53, column: 2, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !6210, line: 53, column: 2)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !6210, line: 53, column: 2)
!6293 = distinct !DILexicalBlock(scope: !6294, file: !6210, line: 53, column: 2)
!6294 = distinct !DILexicalBlock(scope: !6269, file: !6210, line: 53, column: 2)
!6295 = !DILocation(line: 55, column: 1, scope: !6269)
!6296 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6210, file: !6210, line: 82, type: !6297, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6312)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{null, !6213, !6299}
!6299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6300, size: 32)
!6300 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6301)
!6301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6302)
!6302 = !{!6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311}
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6301, file: !211, line: 26, baseType: !110, size: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6301, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6301, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6301, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6301, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6301, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6301, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6301, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6301, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6312 = !{!6313, !6314, !6315}
!6313 = !DILocalVariable(name: "esf", arg: 1, scope: !6296, file: !6210, line: 82, type: !6213)
!6314 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6296, file: !6210, line: 82, type: !6299)
!6315 = !DILocalVariable(name: "reason", scope: !6296, file: !6210, line: 88, type: !32)
!6316 = !DILocation(line: 0, scope: !6296)
!6317 = !DILocation(line: 88, column: 35, scope: !6296)
!6318 = !DILocation(line: 108, column: 2, scope: !6296)
!6319 = !DILocation(line: 131, column: 1, scope: !6296)
!6320 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6210, file: !6210, line: 133, type: !6321, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2569, retainedNodes: !6323)
!6321 = !DISubroutineType(types: !6322)
!6322 = !{null, !107}
!6323 = !{!6324, !6325, !6326}
!6324 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6320, file: !6210, line: 133, type: !107)
!6325 = !DILocalVariable(name: "ssf_contents", scope: !6320, file: !6210, line: 135, type: !943)
!6326 = !DILocalVariable(name: "oops_esf", scope: !6320, file: !6210, line: 136, type: !6215)
!6327 = !DILocation(line: 0, scope: !6320)
!6328 = !DILocation(line: 136, column: 2, scope: !6320)
!6329 = !DILocation(line: 136, column: 15, scope: !6320)
!6330 = !DILocation(line: 139, column: 22, scope: !6320)
!6331 = !DILocation(line: 139, column: 17, scope: !6320)
!6332 = !DILocation(line: 139, column: 20, scope: !6320)
!6333 = !DILocation(line: 141, column: 2, scope: !6320)
!6334 = !DILocation(line: 142, column: 2, scope: !6320)
!6335 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6336, file: !6336, line: 40, type: !6057, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !6337)
!6336 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6337 = !{!6338}
!6338 = !DILocalVariable(name: "irq", arg: 1, scope: !6335, file: !6336, line: 40, type: !32)
!6339 = !DILocation(line: 0, scope: !6335)
!6340 = !DILocation(line: 42, column: 2, scope: !6335)
!6341 = !DILocation(line: 43, column: 1, scope: !6335)
!6342 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !548, file: !548, line: 1508, type: !6343, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !6345)
!6343 = !DISubroutineType(types: !6344)
!6344 = !{null, !872}
!6345 = !{!6346}
!6346 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6342, file: !548, line: 1508, type: !872)
!6347 = !DILocation(line: 0, scope: !6342)
!6348 = !DILocation(line: 1510, column: 23, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6342, file: !548, line: 1510, column: 7)
!6350 = !DILocation(line: 1510, column: 7, scope: !6342)
!6351 = !DILocation(line: 1512, column: 5, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6349, file: !548, line: 1511, column: 3)
!6353 = !{i64 2149972977}
!6354 = !DILocation(line: 1513, column: 81, scope: !6352)
!6355 = !DILocation(line: 1513, column: 60, scope: !6352)
!6356 = !DILocation(line: 1513, column: 34, scope: !6352)
!6357 = !DILocation(line: 1513, column: 5, scope: !6352)
!6358 = !DILocation(line: 1513, column: 43, scope: !6352)
!6359 = !DILocation(line: 1514, column: 5, scope: !6352)
!6360 = !{i64 2149973091}
!6361 = !DILocation(line: 1515, column: 3, scope: !6352)
!6362 = !DILocation(line: 1516, column: 1, scope: !6342)
!6363 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6336, file: !6336, line: 45, type: !6057, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !6364)
!6364 = !{!6365}
!6365 = !DILocalVariable(name: "irq", arg: 1, scope: !6363, file: !6336, line: 45, type: !32)
!6366 = !DILocation(line: 0, scope: !6363)
!6367 = !DILocation(line: 47, column: 2, scope: !6363)
!6368 = !DILocation(line: 48, column: 1, scope: !6363)
!6369 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !548, file: !548, line: 1546, type: !6343, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !6370)
!6370 = !{!6371}
!6371 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6369, file: !548, line: 1546, type: !872)
!6372 = !DILocation(line: 0, scope: !6369)
!6373 = !DILocation(line: 1548, column: 23, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6369, file: !548, line: 1548, column: 7)
!6375 = !DILocation(line: 1548, column: 7, scope: !6369)
!6376 = !DILocation(line: 1550, column: 81, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6374, file: !548, line: 1549, column: 3)
!6378 = !DILocation(line: 1550, column: 60, scope: !6377)
!6379 = !DILocation(line: 1550, column: 34, scope: !6377)
!6380 = !DILocation(line: 1550, column: 5, scope: !6377)
!6381 = !DILocation(line: 1550, column: 43, scope: !6377)
!6382 = !DILocation(line: 271, column: 3, scope: !6383, inlinedAt: !6385)
!6383 = distinct !DISubprogram(name: "__DSB", scope: !6384, file: !6384, line: 269, type: !3060, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !2043)
!6384 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6385 = distinct !DILocation(line: 1551, column: 5, scope: !6377)
!6386 = !{i64 2430479}
!6387 = !DILocation(line: 260, column: 3, scope: !6388, inlinedAt: !6389)
!6388 = distinct !DISubprogram(name: "__ISB", scope: !6384, file: !6384, line: 258, type: !3060, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !2043)
!6389 = distinct !DILocation(line: 1552, column: 5, scope: !6377)
!6390 = !{i64 2430196}
!6391 = !DILocation(line: 1553, column: 3, scope: !6377)
!6392 = !DILocation(line: 1554, column: 1, scope: !6369)
!6393 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6336, file: !6336, line: 50, type: !6394, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !6396)
!6394 = !DISubroutineType(types: !6395)
!6395 = !{!109, !32}
!6396 = !{!6397}
!6397 = !DILocalVariable(name: "irq", arg: 1, scope: !6393, file: !6336, line: 50, type: !32)
!6398 = !DILocation(line: 0, scope: !6393)
!6399 = !DILocation(line: 52, column: 20, scope: !6393)
!6400 = !DILocation(line: 52, column: 9, scope: !6393)
!6401 = !DILocation(line: 52, column: 41, scope: !6393)
!6402 = !DILocation(line: 52, column: 39, scope: !6393)
!6403 = !DILocation(line: 52, column: 2, scope: !6393)
!6404 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6336, file: !6336, line: 64, type: !6405, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !6407)
!6405 = !DISubroutineType(types: !6406)
!6406 = !{null, !32, !32, !110}
!6407 = !{!6408, !6409, !6410}
!6408 = !DILocalVariable(name: "irq", arg: 1, scope: !6404, file: !6336, line: 64, type: !32)
!6409 = !DILocalVariable(name: "prio", arg: 2, scope: !6404, file: !6336, line: 64, type: !32)
!6410 = !DILocalVariable(name: "flags", arg: 3, scope: !6404, file: !6336, line: 64, type: !110)
!6411 = !DILocation(line: 0, scope: !6404)
!6412 = !DILocation(line: 83, column: 8, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !6336, line: 82, column: 9)
!6414 = distinct !DILexicalBlock(scope: !6404, file: !6336, line: 76, column: 6)
!6415 = !DILocation(line: 91, column: 2, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6417, file: !6336, line: 91, column: 2)
!6417 = distinct !DILexicalBlock(scope: !6404, file: !6336, line: 91, column: 2)
!6418 = !DILocation(line: 91, column: 2, scope: !6417)
!6419 = !DILocation(line: 91, column: 2, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6416, file: !6336, line: 91, column: 2)
!6421 = !DILocation(line: 95, column: 2, scope: !6404)
!6422 = !DILocation(line: 96, column: 1, scope: !6404)
!6423 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !548, file: !548, line: 1638, type: !6424, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !6426)
!6424 = !DISubroutineType(types: !6425)
!6425 = !{null, !872, !110}
!6426 = !{!6427, !6428}
!6427 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6423, file: !548, line: 1638, type: !872)
!6428 = !DILocalVariable(name: "priority", arg: 2, scope: !6423, file: !548, line: 1638, type: !110)
!6429 = !DILocation(line: 0, scope: !6423)
!6430 = !DILocation(line: 0, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6423, file: !548, line: 1640, column: 7)
!6432 = !DILocation(line: 1640, column: 7, scope: !6423)
!6433 = !DILocation(line: 1648, column: 1, scope: !6423)
!6434 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6336, file: !6336, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2580, retainedNodes: !6435)
!6435 = !{!6436}
!6436 = !DILocalVariable(name: "unused", arg: 1, scope: !6434, file: !6336, line: 155, type: !13)
!6437 = !DILocation(line: 0, scope: !6434)
!6438 = !DILocation(line: 159, column: 2, scope: !6434)
!6439 = !DILocation(line: 160, column: 1, scope: !6434)
!6440 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6441, file: !6441, line: 87, type: !3060, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2626, retainedNodes: !2043)
!6441 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6442 = !DILocation(line: 89, column: 2, scope: !6440)
!6443 = !DILocation(line: 90, column: 2, scope: !6440)
!6444 = !DILocation(line: 91, column: 1, scope: !6440)
!6445 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6441, file: !6441, line: 23, type: !3060, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!6446 = !DISubprogram(name: "z_arm_int_exit", scope: !6447, file: !6447, line: 153, type: !3060, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!6447 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6448 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6449, file: !6449, line: 256, type: !3060, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !2043)
!6449 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6450 = !DILocation(line: 258, column: 2, scope: !6448)
!6451 = !DILocation(line: 262, column: 2, scope: !6448)
!6452 = !DILocation(line: 263, column: 2, scope: !6448)
!6453 = !DILocation(line: 267, column: 2, scope: !6448)
!6454 = !DILocation(line: 268, column: 2, scope: !6448)
!6455 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6449, file: !6449, line: 53, type: !3060, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !2043)
!6456 = !DILocation(line: 55, column: 12, scope: !6455)
!6457 = !DILocation(line: 271, column: 3, scope: !6458, inlinedAt: !6459)
!6458 = distinct !DISubprogram(name: "__DSB", scope: !6384, file: !6384, line: 269, type: !3060, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !2043)
!6459 = distinct !DILocation(line: 56, column: 2, scope: !6455)
!6460 = !{i64 2429150}
!6461 = !DILocation(line: 260, column: 3, scope: !6462, inlinedAt: !6463)
!6462 = distinct !DISubprogram(name: "__ISB", scope: !6384, file: !6384, line: 258, type: !3060, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2628, retainedNodes: !2043)
!6463 = distinct !DILocation(line: 57, column: 2, scope: !6455)
!6464 = !{i64 2428867}
!6465 = !DILocation(line: 58, column: 1, scope: !6455)
!6466 = distinct !DISubprogram(name: "arch_swap", scope: !6467, file: !6467, line: 33, type: !6394, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2656, retainedNodes: !6468)
!6467 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6468 = !{!6469}
!6469 = !DILocalVariable(name: "key", arg: 1, scope: !6466, file: !6467, line: 33, type: !32)
!6470 = !DILocation(line: 0, scope: !6466)
!6471 = !DILocation(line: 36, column: 2, scope: !6466)
!6472 = !DILocation(line: 36, column: 17, scope: !6466)
!6473 = !DILocation(line: 36, column: 25, scope: !6466)
!6474 = !DILocation(line: 37, column: 37, scope: !6466)
!6475 = !DILocation(line: 37, column: 17, scope: !6466)
!6476 = !DILocation(line: 37, column: 35, scope: !6466)
!6477 = !DILocation(line: 41, column: 12, scope: !6466)
!6478 = !DILocalVariable(name: "key", arg: 1, scope: !6479, file: !6046, line: 84, type: !32)
!6479 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2656, retainedNodes: !6480)
!6480 = !{!6478}
!6481 = !DILocation(line: 0, scope: !6479, inlinedAt: !6482)
!6482 = distinct !DILocation(line: 44, column: 2, scope: !6466)
!6483 = !DILocation(line: 95, column: 2, scope: !6479, inlinedAt: !6482)
!6484 = !{i64 1652150}
!6485 = !DILocation(line: 53, column: 9, scope: !6466)
!6486 = !DILocation(line: 53, column: 24, scope: !6466)
!6487 = !DILocation(line: 53, column: 2, scope: !6466)
!6488 = distinct !DISubprogram(name: "arch_new_thread", scope: !6489, file: !6489, line: 56, type: !6490, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6600)
!6489 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6490 = !DISubroutineType(types: !6491)
!6491 = !{null, !6492, !6595, !285, !3327, !107, !107, !107}
!6492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6493, size: 32)
!6493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !6494)
!6494 = !{!6495, !6553, !6565, !6566, !6567, !6568, !6569, !6575, !6590}
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6493, file: !158, line: 247, baseType: !6496, size: 384)
!6496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !6497)
!6497 = !{!6498, !6522, !6529, !6530, !6531, !6540, !6541, !6542}
!6498 = !DIDerivedType(tag: DW_TAG_member, scope: !6496, file: !158, line: 60, baseType: !6499, size: 64)
!6499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6496, file: !158, line: 60, size: 64, elements: !6500)
!6500 = !{!6501, !6516}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6499, file: !158, line: 61, baseType: !6502, size: 64)
!6502 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6503)
!6503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6504)
!6504 = !{!6505, !6511}
!6505 = !DIDerivedType(tag: DW_TAG_member, scope: !6503, file: !127, line: 38, baseType: !6506, size: 32)
!6506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6503, file: !127, line: 38, size: 32, elements: !6507)
!6507 = !{!6508, !6510}
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6506, file: !127, line: 39, baseType: !6509, size: 32)
!6509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6503, size: 32)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6506, file: !127, line: 40, baseType: !6509, size: 32)
!6511 = !DIDerivedType(tag: DW_TAG_member, scope: !6503, file: !127, line: 42, baseType: !6512, size: 32, offset: 32)
!6512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6503, file: !127, line: 42, size: 32, elements: !6513)
!6513 = !{!6514, !6515}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6512, file: !127, line: 43, baseType: !6509, size: 32)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6512, file: !127, line: 44, baseType: !6509, size: 32)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6499, file: !158, line: 62, baseType: !6517, size: 64)
!6517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !6518)
!6518 = !{!6519}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6517, file: !170, line: 50, baseType: !6520, size: 64)
!6520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6521, size: 64, elements: !175)
!6521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 32)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6496, file: !158, line: 68, baseType: !6523, size: 32, offset: 64)
!6523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6524, size: 32)
!6524 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6525)
!6525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6526)
!6526 = !{!6527}
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6525, file: !122, line: 232, baseType: !6528, size: 64)
!6528 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6503)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6496, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6496, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!6531 = !DIDerivedType(tag: DW_TAG_member, scope: !6496, file: !158, line: 90, baseType: !6532, size: 16, offset: 112)
!6532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6496, file: !158, line: 90, size: 16, elements: !6533)
!6533 = !{!6534, !6539}
!6534 = !DIDerivedType(tag: DW_TAG_member, scope: !6532, file: !158, line: 91, baseType: !6535, size: 16)
!6535 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6532, file: !158, line: 91, size: 16, elements: !6536)
!6536 = !{!6537, !6538}
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6535, file: !158, line: 96, baseType: !190, size: 8)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6535, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6532, file: !158, line: 100, baseType: !194, size: 16)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6496, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6496, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6496, file: !158, line: 131, baseType: !6543, size: 192, offset: 192)
!6543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6544)
!6544 = !{!6545, !6546, !6552}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6543, file: !122, line: 245, baseType: !6502, size: 64)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6543, file: !122, line: 246, baseType: !6547, size: 32, offset: 64)
!6547 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6548)
!6548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6549, size: 32)
!6549 = !DISubroutineType(types: !6550)
!6550 = !{null, !6551}
!6551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 32)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6543, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6493, file: !158, line: 250, baseType: !6554, size: 288, offset: 384)
!6554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6555)
!6555 = !{!6556, !6557, !6558, !6559, !6560, !6561, !6562, !6563, !6564}
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6554, file: !211, line: 26, baseType: !110, size: 32)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6554, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6554, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6554, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6554, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6554, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6554, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6554, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6554, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6493, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6493, file: !158, line: 256, baseType: !6524, size: 64, offset: 704)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6493, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6493, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6493, file: !158, line: 300, baseType: !6570, size: 96, offset: 1056)
!6570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !6571)
!6571 = !{!6572, !6573, !6574}
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6570, file: !158, line: 153, baseType: !22, size: 32)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6570, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6570, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6493, file: !158, line: 325, baseType: !6576, size: 32, offset: 1152)
!6576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6577, size: 32)
!6577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6578)
!6578 = !{!6579, !6585, !6586}
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6577, file: !118, line: 5074, baseType: !6580, size: 96)
!6580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !6581)
!6581 = !{!6582, !6583, !6584}
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6580, file: !243, line: 57, baseType: !246, size: 32)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6580, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6580, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6577, file: !118, line: 5075, baseType: !6524, size: 64, offset: 96)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6577, file: !118, line: 5076, baseType: !6587, size: 32, offset: 160)
!6587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !6588)
!6588 = !{!6589}
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6587, file: !253, line: 52, baseType: !22, size: 32)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6493, file: !158, line: 343, baseType: !6591, size: 64, offset: 1184)
!6591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !6592)
!6592 = !{!6593, !6594}
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6591, file: !211, line: 63, baseType: !110, size: 32)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6591, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!6595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6596, size: 32)
!6596 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3326, line: 44, baseType: !6597)
!6597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !6598)
!6598 = !{!6599}
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6597, file: !147, line: 48, baseType: !150, size: 8)
!6600 = !{!6601, !6602, !6603, !6604, !6605, !6606, !6607, !6608}
!6601 = !DILocalVariable(name: "thread", arg: 1, scope: !6488, file: !6489, line: 56, type: !6492)
!6602 = !DILocalVariable(name: "stack", arg: 2, scope: !6488, file: !6489, line: 56, type: !6595)
!6603 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6488, file: !6489, line: 57, type: !285)
!6604 = !DILocalVariable(name: "entry", arg: 4, scope: !6488, file: !6489, line: 57, type: !3327)
!6605 = !DILocalVariable(name: "p1", arg: 5, scope: !6488, file: !6489, line: 58, type: !107)
!6606 = !DILocalVariable(name: "p2", arg: 6, scope: !6488, file: !6489, line: 58, type: !107)
!6607 = !DILocalVariable(name: "p3", arg: 7, scope: !6488, file: !6489, line: 58, type: !107)
!6608 = !DILocalVariable(name: "iframe", scope: !6488, file: !6489, line: 60, type: !2687)
!6609 = !DILocation(line: 0, scope: !6488)
!6610 = !DILocation(line: 85, column: 11, scope: !6488)
!6611 = !DILocation(line: 93, column: 10, scope: !6488)
!6612 = !DILocation(line: 98, column: 13, scope: !6488)
!6613 = !DILocation(line: 100, column: 15, scope: !6488)
!6614 = !DILocation(line: 100, column: 10, scope: !6488)
!6615 = !DILocation(line: 100, column: 13, scope: !6488)
!6616 = !DILocation(line: 101, column: 15, scope: !6488)
!6617 = !DILocation(line: 101, column: 10, scope: !6488)
!6618 = !DILocation(line: 101, column: 13, scope: !6488)
!6619 = !DILocation(line: 102, column: 15, scope: !6488)
!6620 = !DILocation(line: 102, column: 10, scope: !6488)
!6621 = !DILocation(line: 102, column: 13, scope: !6488)
!6622 = !DILocation(line: 103, column: 15, scope: !6488)
!6623 = !DILocation(line: 103, column: 10, scope: !6488)
!6624 = !DILocation(line: 103, column: 13, scope: !6488)
!6625 = !DILocation(line: 106, column: 10, scope: !6488)
!6626 = !DILocation(line: 106, column: 15, scope: !6488)
!6627 = !DILocation(line: 122, column: 29, scope: !6488)
!6628 = !DILocation(line: 122, column: 23, scope: !6488)
!6629 = !DILocation(line: 122, column: 27, scope: !6488)
!6630 = !DILocation(line: 123, column: 15, scope: !6488)
!6631 = !DILocation(line: 123, column: 23, scope: !6488)
!6632 = !DILocation(line: 143, column: 1, scope: !6488)
!6633 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6489, file: !6489, line: 385, type: !6634, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6637)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{!110, !6636, !6636}
!6636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6637 = !{!6638, !6639, !6640, !6643}
!6638 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6633, file: !6489, line: 385, type: !6636)
!6639 = !DILocalVariable(name: "psp", arg: 2, scope: !6633, file: !6489, line: 385, type: !6636)
!6640 = !DILocalVariable(name: "thread", scope: !6633, file: !6489, line: 388, type: !6641)
!6641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6642, size: 32)
!6642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6493)
!6643 = !DILocalVariable(name: "guard_len", scope: !6633, file: !6489, line: 405, type: !110)
!6644 = !DILocation(line: 0, scope: !6633)
!6645 = !DILocation(line: 388, column: 34, scope: !6633)
!6646 = !DILocation(line: 390, column: 13, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6633, file: !6489, line: 390, column: 6)
!6648 = !DILocation(line: 390, column: 6, scope: !6633)
!6649 = !DILocation(line: 438, column: 6, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6633, file: !6489, line: 438, column: 6)
!6651 = !DILocation(line: 438, column: 6, scope: !6633)
!6652 = !DILocation(line: 442, column: 3, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6650, file: !6489, line: 440, column: 22)
!6654 = !DILocation(line: 455, column: 1, scope: !6633)
!6655 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6489, file: !6489, line: 530, type: !6656, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2684, retainedNodes: !6658)
!6656 = !DISubroutineType(types: !6657)
!6657 = !{null, !6492, !285, !3327}
!6658 = !{!6659, !6660, !6661}
!6659 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6655, file: !6489, line: 530, type: !6492)
!6660 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6655, file: !6489, line: 530, type: !285)
!6661 = !DILocalVariable(name: "_main", arg: 3, scope: !6655, file: !6489, line: 531, type: !3327)
!6662 = !DILocation(line: 0, scope: !6655)
!6663 = !DILocation(line: 535, column: 11, scope: !6655)
!6664 = !DILocation(line: 560, column: 2, scope: !6655)
!6665 = !DILocation(line: 576, column: 2, scope: !6655)
!6666 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6667 = !DILocation(line: 603, column: 2, scope: !6655)
!6668 = distinct !DISubprogram(name: "z_arm_fault", scope: !6669, file: !6669, line: 1036, type: !6670, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6685)
!6669 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6670 = !DISubroutineType(types: !6671)
!6671 = !{null, !110, !110, !110, !6672}
!6672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6673, size: 32)
!6673 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !211, line: 37, baseType: !6674)
!6674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !6675)
!6675 = !{!6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6674, file: !211, line: 26, baseType: !110, size: 32)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6674, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6674, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6674, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6674, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6674, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6674, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6674, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6674, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!6685 = !{!6686, !6687, !6688, !6689, !6690, !6691, !6692, !6693, !6694, !6695}
!6686 = !DILocalVariable(name: "msp", arg: 1, scope: !6668, file: !6669, line: 1036, type: !110)
!6687 = !DILocalVariable(name: "psp", arg: 2, scope: !6668, file: !6669, line: 1036, type: !110)
!6688 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6668, file: !6669, line: 1036, type: !110)
!6689 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6668, file: !6669, line: 1037, type: !6672)
!6690 = !DILocalVariable(name: "reason", scope: !6668, file: !6669, line: 1039, type: !110)
!6691 = !DILocalVariable(name: "fault", scope: !6668, file: !6669, line: 1040, type: !109)
!6692 = !DILocalVariable(name: "recoverable", scope: !6668, file: !6669, line: 1041, type: !360)
!6693 = !DILocalVariable(name: "nested_exc", scope: !6668, file: !6669, line: 1041, type: !360)
!6694 = !DILocalVariable(name: "esf", scope: !6668, file: !6669, line: 1042, type: !2755)
!6695 = !DILocalVariable(name: "esf_copy", scope: !6668, file: !6669, line: 1047, type: !2756)
!6696 = !DILocation(line: 0, scope: !6668)
!6697 = !DILocation(line: 1040, column: 19, scope: !6668)
!6698 = !DILocation(line: 1041, column: 2, scope: !6668)
!6699 = !DILocation(line: 1047, column: 2, scope: !6668)
!6700 = !DILocation(line: 1047, column: 15, scope: !6668)
!6701 = !DILocalVariable(name: "key", arg: 1, scope: !6702, file: !6046, line: 84, type: !32)
!6702 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6703)
!6703 = !{!6701}
!6704 = !DILocation(line: 0, scope: !6702, inlinedAt: !6705)
!6705 = distinct !DILocation(line: 1050, column: 2, scope: !6668)
!6706 = !DILocation(line: 95, column: 2, scope: !6702, inlinedAt: !6705)
!6707 = !{i64 1685394}
!6708 = !DILocation(line: 1055, column: 9, scope: !6668)
!6709 = !DILocation(line: 1056, column: 2, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6711, file: !6669, line: 1056, column: 2)
!6711 = distinct !DILexicalBlock(scope: !6668, file: !6669, line: 1056, column: 2)
!6712 = !DILocation(line: 1056, column: 2, scope: !6711)
!6713 = !DILocation(line: 1056, column: 2, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6710, file: !6669, line: 1056, column: 2)
!6715 = !DILocation(line: 1040, column: 24, scope: !6668)
!6716 = !DILocation(line: 1063, column: 11, scope: !6668)
!6717 = !DILocation(line: 1064, column: 6, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6668, file: !6669, line: 1064, column: 6)
!6719 = !{i8 0, i8 2}
!6720 = !DILocation(line: 1064, column: 6, scope: !6668)
!6721 = !DILocation(line: 1070, column: 20, scope: !6668)
!6722 = !DILocation(line: 1070, column: 2, scope: !6668)
!6723 = !DILocation(line: 1089, column: 6, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6668, file: !6669, line: 1089, column: 6)
!6725 = !DILocation(line: 0, scope: !6724)
!6726 = !DILocation(line: 1089, column: 6, scope: !6668)
!6727 = !DILocation(line: 1090, column: 28, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !6669, line: 1090, column: 7)
!6729 = distinct !DILexicalBlock(scope: !6724, file: !6669, line: 1089, column: 18)
!6730 = !DILocation(line: 1090, column: 44, scope: !6728)
!6731 = !DILocation(line: 1090, column: 7, scope: !6729)
!6732 = !DILocation(line: 1091, column: 24, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6728, file: !6669, line: 1090, column: 50)
!6734 = !DILocation(line: 1092, column: 3, scope: !6733)
!6735 = !DILocation(line: 1094, column: 23, scope: !6736)
!6736 = distinct !DILexicalBlock(scope: !6724, file: !6669, line: 1093, column: 9)
!6737 = !DILocation(line: 1097, column: 2, scope: !6668)
!6738 = !DILocation(line: 1098, column: 1, scope: !6668)
!6739 = distinct !DISubprogram(name: "get_esf", scope: !6669, file: !6669, line: 894, type: !6740, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6743)
!6740 = !DISubroutineType(types: !6741)
!6741 = !{!2755, !110, !110, !110, !6742}
!6742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!6743 = !{!6744, !6745, !6746, !6747, !6748, !6749}
!6744 = !DILocalVariable(name: "msp", arg: 1, scope: !6739, file: !6669, line: 894, type: !110)
!6745 = !DILocalVariable(name: "psp", arg: 2, scope: !6739, file: !6669, line: 894, type: !110)
!6746 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6739, file: !6669, line: 894, type: !110)
!6747 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6739, file: !6669, line: 895, type: !6742)
!6748 = !DILocalVariable(name: "alternative_state_exc", scope: !6739, file: !6669, line: 897, type: !360)
!6749 = !DILocalVariable(name: "ptr_esf", scope: !6739, file: !6669, line: 898, type: !2755)
!6750 = !DILocation(line: 0, scope: !6739)
!6751 = !DILocation(line: 900, column: 14, scope: !6739)
!6752 = !DILocation(line: 902, column: 49, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6739, file: !6669, line: 902, column: 6)
!6754 = !DILocation(line: 902, column: 6, scope: !6739)
!6755 = !DILocation(line: 983, column: 44, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6739, file: !6669, line: 983, column: 6)
!6757 = !DILocation(line: 985, column: 3, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !6669, line: 985, column: 3)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !6669, line: 985, column: 3)
!6760 = distinct !DILexicalBlock(scope: !6761, file: !6669, line: 985, column: 3)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !6669, line: 985, column: 3)
!6762 = distinct !DILexicalBlock(scope: !6756, file: !6669, line: 984, column: 47)
!6763 = !DILocation(line: 986, column: 3, scope: !6762)
!6764 = !DILocation(line: 983, column: 18, scope: !6756)
!6765 = !DILocation(line: 991, column: 7, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !6669, line: 990, column: 30)
!6767 = distinct !DILexicalBlock(scope: !6739, file: !6669, line: 990, column: 6)
!6768 = !DILocation(line: 998, column: 16, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6669, line: 995, column: 10)
!6770 = distinct !DILexicalBlock(scope: !6766, file: !6669, line: 991, column: 7)
!6771 = !DILocation(line: 1002, column: 2, scope: !6739)
!6772 = !DILocation(line: 1003, column: 1, scope: !6739)
!6773 = distinct !DISubprogram(name: "fault_handle", scope: !6669, file: !6669, line: 786, type: !6774, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6776)
!6774 = !DISubroutineType(types: !6775)
!6775 = !{!110, !2755, !109, !6742}
!6776 = !{!6777, !6778, !6779, !6780}
!6777 = !DILocalVariable(name: "esf", arg: 1, scope: !6773, file: !6669, line: 786, type: !2755)
!6778 = !DILocalVariable(name: "fault", arg: 2, scope: !6773, file: !6669, line: 786, type: !109)
!6779 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6773, file: !6669, line: 786, type: !6742)
!6780 = !DILocalVariable(name: "reason", scope: !6773, file: !6669, line: 788, type: !110)
!6781 = !DILocation(line: 0, scope: !6773)
!6782 = !DILocation(line: 790, column: 15, scope: !6773)
!6783 = !DILocation(line: 792, column: 2, scope: !6773)
!6784 = !DILocation(line: 794, column: 12, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6773, file: !6669, line: 792, column: 17)
!6786 = !DILocation(line: 795, column: 3, scope: !6785)
!6787 = !DILocation(line: 800, column: 12, scope: !6785)
!6788 = !DILocation(line: 801, column: 3, scope: !6785)
!6789 = !DILocation(line: 803, column: 12, scope: !6785)
!6790 = !DILocation(line: 804, column: 3, scope: !6785)
!6791 = !DILocation(line: 806, column: 12, scope: !6785)
!6792 = !DILocation(line: 807, column: 3, scope: !6785)
!6793 = !DILocation(line: 814, column: 3, scope: !6785)
!6794 = !DILocation(line: 815, column: 3, scope: !6785)
!6795 = !DILocation(line: 820, column: 3, scope: !6785)
!6796 = !DILocation(line: 821, column: 3, scope: !6785)
!6797 = !DILocation(line: 829, column: 2, scope: !6773)
!6798 = distinct !DISubprogram(name: "hard_fault", scope: !6669, file: !6669, line: 709, type: !6799, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6801)
!6799 = !DISubroutineType(types: !6800)
!6800 = !{!110, !2755, !6742}
!6801 = !{!6802, !6803, !6804}
!6802 = !DILocalVariable(name: "esf", arg: 1, scope: !6798, file: !6669, line: 709, type: !2755)
!6803 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6798, file: !6669, line: 709, type: !6742)
!6804 = !DILocalVariable(name: "reason", scope: !6798, file: !6669, line: 711, type: !110)
!6805 = !DILocation(line: 0, scope: !6798)
!6806 = !DILocation(line: 713, column: 2, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !6669, line: 713, column: 2)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6669, line: 713, column: 2)
!6809 = distinct !DILexicalBlock(scope: !6810, file: !6669, line: 713, column: 2)
!6810 = distinct !DILexicalBlock(scope: !6798, file: !6669, line: 713, column: 2)
!6811 = !DILocation(line: 732, column: 15, scope: !6798)
!6812 = !DILocation(line: 734, column: 12, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6798, file: !6669, line: 734, column: 6)
!6814 = !DILocation(line: 734, column: 17, scope: !6813)
!6815 = !DILocation(line: 734, column: 41, scope: !6813)
!6816 = !DILocation(line: 734, column: 6, scope: !6798)
!6817 = !DILocation(line: 735, column: 3, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !6669, line: 735, column: 3)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !6669, line: 735, column: 3)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6669, line: 735, column: 3)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !6669, line: 735, column: 3)
!6822 = distinct !DILexicalBlock(scope: !6813, file: !6669, line: 734, column: 47)
!6823 = !DILocation(line: 736, column: 2, scope: !6822)
!6824 = !DILocation(line: 736, column: 19, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6813, file: !6669, line: 736, column: 13)
!6826 = !DILocation(line: 736, column: 49, scope: !6825)
!6827 = !DILocation(line: 736, column: 13, scope: !6813)
!6828 = !DILocation(line: 737, column: 3, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !6669, line: 737, column: 3)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !6669, line: 737, column: 3)
!6831 = distinct !DILexicalBlock(scope: !6832, file: !6669, line: 737, column: 3)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !6669, line: 737, column: 3)
!6833 = distinct !DILexicalBlock(scope: !6825, file: !6669, line: 736, column: 55)
!6834 = !DILocation(line: 738, column: 2, scope: !6833)
!6835 = !DILocation(line: 738, column: 19, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6825, file: !6669, line: 738, column: 13)
!6837 = !DILocation(line: 738, column: 24, scope: !6836)
!6838 = !DILocation(line: 738, column: 47, scope: !6836)
!6839 = !DILocation(line: 738, column: 13, scope: !6825)
!6840 = !DILocation(line: 739, column: 3, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6842, file: !6669, line: 739, column: 3)
!6842 = distinct !DILexicalBlock(scope: !6843, file: !6669, line: 739, column: 3)
!6843 = distinct !DILexicalBlock(scope: !6844, file: !6669, line: 739, column: 3)
!6844 = distinct !DILexicalBlock(scope: !6845, file: !6669, line: 739, column: 3)
!6845 = distinct !DILexicalBlock(scope: !6836, file: !6669, line: 738, column: 53)
!6846 = !DILocation(line: 740, column: 7, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6845, file: !6669, line: 740, column: 7)
!6848 = !DILocation(line: 740, column: 7, scope: !6845)
!6849 = !DILocation(line: 741, column: 4, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !6669, line: 741, column: 4)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6669, line: 741, column: 4)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !6669, line: 741, column: 4)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !6669, line: 741, column: 4)
!6854 = distinct !DILexicalBlock(scope: !6847, file: !6669, line: 740, column: 38)
!6855 = !DILocation(line: 742, column: 24, scope: !6854)
!6856 = !DILocation(line: 743, column: 3, scope: !6854)
!6857 = !DILocation(line: 743, column: 20, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6847, file: !6669, line: 743, column: 14)
!6859 = !DILocation(line: 743, column: 25, scope: !6858)
!6860 = !DILocation(line: 743, column: 52, scope: !6858)
!6861 = !DILocation(line: 743, column: 14, scope: !6847)
!6862 = !DILocation(line: 744, column: 13, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6858, file: !6669, line: 743, column: 58)
!6864 = !DILocation(line: 745, column: 3, scope: !6863)
!6865 = !DILocation(line: 745, column: 20, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6858, file: !6669, line: 745, column: 14)
!6867 = !DILocation(line: 745, column: 25, scope: !6866)
!6868 = !DILocation(line: 745, column: 52, scope: !6866)
!6869 = !DILocation(line: 745, column: 14, scope: !6858)
!6870 = !DILocation(line: 746, column: 13, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6866, file: !6669, line: 745, column: 58)
!6872 = !DILocation(line: 747, column: 3, scope: !6871)
!6873 = !DILocation(line: 747, column: 20, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6866, file: !6669, line: 747, column: 14)
!6875 = !DILocation(line: 747, column: 52, scope: !6874)
!6876 = !DILocation(line: 747, column: 14, scope: !6866)
!6877 = !DILocation(line: 748, column: 13, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6874, file: !6669, line: 747, column: 58)
!6879 = !DILocation(line: 754, column: 4, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6881, file: !6669, line: 754, column: 4)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6669, line: 754, column: 4)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !6669, line: 754, column: 4)
!6883 = distinct !DILexicalBlock(scope: !6874, file: !6669, line: 753, column: 10)
!6884 = !DILocation(line: 758, column: 3, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !6669, line: 758, column: 3)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !6669, line: 758, column: 3)
!6887 = distinct !DILexicalBlock(scope: !6888, file: !6669, line: 758, column: 3)
!6888 = distinct !DILexicalBlock(scope: !6836, file: !6669, line: 757, column: 9)
!6889 = !DILocation(line: 766, column: 2, scope: !6798)
!6890 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6669, file: !6669, line: 229, type: !6774, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6891)
!6891 = !{!6892, !6893, !6894, !6895, !6896, !6897, !6900}
!6892 = !DILocalVariable(name: "esf", arg: 1, scope: !6890, file: !6669, line: 229, type: !2755)
!6893 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6890, file: !6669, line: 229, type: !109)
!6894 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6890, file: !6669, line: 230, type: !6742)
!6895 = !DILocalVariable(name: "reason", scope: !6890, file: !6669, line: 232, type: !110)
!6896 = !DILocalVariable(name: "mmfar", scope: !6890, file: !6669, line: 233, type: !110)
!6897 = !DILocalVariable(name: "temp", scope: !6898, file: !6669, line: 254, type: !110)
!6898 = distinct !DILexicalBlock(scope: !6899, file: !6669, line: 244, column: 48)
!6899 = distinct !DILexicalBlock(scope: !6890, file: !6669, line: 244, column: 6)
!6900 = !DILocalVariable(name: "min_stack_ptr", scope: !6901, file: !6669, line: 309, type: !110)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !6669, line: 308, column: 43)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !6669, line: 308, column: 7)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6669, line: 289, column: 40)
!6904 = distinct !DILexicalBlock(scope: !6890, file: !6669, line: 288, column: 6)
!6905 = !DILocation(line: 0, scope: !6890)
!6906 = !DILocation(line: 235, column: 2, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6669, line: 235, column: 2)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !6669, line: 235, column: 2)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !6669, line: 235, column: 2)
!6910 = distinct !DILexicalBlock(scope: !6890, file: !6669, line: 235, column: 2)
!6911 = !DILocation(line: 237, column: 12, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6890, file: !6669, line: 237, column: 6)
!6913 = !DILocation(line: 237, column: 17, scope: !6912)
!6914 = !DILocation(line: 237, column: 41, scope: !6912)
!6915 = !DILocation(line: 237, column: 6, scope: !6890)
!6916 = !DILocation(line: 238, column: 3, scope: !6917)
!6917 = distinct !DILexicalBlock(scope: !6918, file: !6669, line: 238, column: 3)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !6669, line: 238, column: 3)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !6669, line: 238, column: 3)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !6669, line: 238, column: 3)
!6921 = distinct !DILexicalBlock(scope: !6912, file: !6669, line: 237, column: 47)
!6922 = !DILocation(line: 240, column: 2, scope: !6921)
!6923 = !DILocation(line: 241, column: 12, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6890, file: !6669, line: 241, column: 6)
!6925 = !DILocation(line: 241, column: 17, scope: !6924)
!6926 = !DILocation(line: 241, column: 43, scope: !6924)
!6927 = !DILocation(line: 241, column: 6, scope: !6890)
!6928 = !DILocation(line: 242, column: 3, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !6669, line: 242, column: 3)
!6930 = distinct !DILexicalBlock(scope: !6931, file: !6669, line: 242, column: 3)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6669, line: 242, column: 3)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6669, line: 242, column: 3)
!6933 = distinct !DILexicalBlock(scope: !6924, file: !6669, line: 241, column: 49)
!6934 = !DILocation(line: 243, column: 2, scope: !6933)
!6935 = !DILocation(line: 244, column: 12, scope: !6899)
!6936 = !DILocation(line: 244, column: 17, scope: !6899)
!6937 = !DILocation(line: 244, column: 42, scope: !6899)
!6938 = !DILocation(line: 244, column: 6, scope: !6890)
!6939 = !DILocation(line: 245, column: 3, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !6669, line: 245, column: 3)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !6669, line: 245, column: 3)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !6669, line: 245, column: 3)
!6943 = distinct !DILexicalBlock(scope: !6898, file: !6669, line: 245, column: 3)
!6944 = !DILocation(line: 254, column: 24, scope: !6898)
!6945 = !DILocation(line: 0, scope: !6898)
!6946 = !DILocation(line: 256, column: 13, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6898, file: !6669, line: 256, column: 7)
!6948 = !DILocation(line: 256, column: 18, scope: !6947)
!6949 = !DILocation(line: 256, column: 44, scope: !6947)
!6950 = !DILocation(line: 256, column: 7, scope: !6898)
!6951 = !DILocation(line: 258, column: 4, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !6669, line: 258, column: 4)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !6669, line: 258, column: 4)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !6669, line: 258, column: 4)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !6669, line: 258, column: 4)
!6956 = distinct !DILexicalBlock(scope: !6947, file: !6669, line: 256, column: 50)
!6957 = !DILocation(line: 259, column: 24, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6956, file: !6669, line: 259, column: 8)
!6959 = !DILocation(line: 259, column: 8, scope: !6956)
!6960 = !DILocation(line: 261, column: 15, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6958, file: !6669, line: 259, column: 30)
!6962 = !DILocation(line: 262, column: 4, scope: !6961)
!6963 = !DILocation(line: 265, column: 12, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6890, file: !6669, line: 265, column: 6)
!6965 = !DILocation(line: 265, column: 17, scope: !6964)
!6966 = !DILocation(line: 265, column: 42, scope: !6964)
!6967 = !DILocation(line: 265, column: 6, scope: !6890)
!6968 = !DILocation(line: 266, column: 3, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !6669, line: 266, column: 3)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6669, line: 266, column: 3)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6669, line: 266, column: 3)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6669, line: 266, column: 3)
!6973 = distinct !DILexicalBlock(scope: !6964, file: !6669, line: 265, column: 48)
!6974 = !DILocation(line: 267, column: 2, scope: !6973)
!6975 = !DILocation(line: 288, column: 12, scope: !6904)
!6976 = !DILocation(line: 288, column: 17, scope: !6904)
!6977 = !DILocation(line: 288, column: 41, scope: !6904)
!6978 = !DILocation(line: 289, column: 9, scope: !6904)
!6979 = !DILocation(line: 289, column: 14, scope: !6904)
!6980 = !DILocation(line: 288, column: 6, scope: !6890)
!6981 = !DILocation(line: 308, column: 12, scope: !6902)
!6982 = !DILocation(line: 308, column: 17, scope: !6902)
!6983 = !DILocation(line: 308, column: 7, scope: !6903)
!6984 = !DILocation(line: 310, column: 6, scope: !6901)
!6985 = !DILocation(line: 309, column: 29, scope: !6901)
!6986 = !DILocation(line: 0, scope: !6901)
!6987 = !DILocation(line: 312, column: 8, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6901, file: !6669, line: 312, column: 8)
!6989 = !DILocation(line: 312, column: 8, scope: !6901)
!6990 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6991, file: !6384, line: 1099, type: !110)
!6991 = distinct !DISubprogram(name: "__set_PSP", scope: !6384, file: !6384, line: 1099, type: !6070, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !6992)
!6992 = !{!6990}
!6993 = !DILocation(line: 0, scope: !6991, inlinedAt: !6994)
!6994 = distinct !DILocation(line: 338, column: 5, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6988, file: !6669, line: 312, column: 23)
!6996 = !DILocation(line: 1101, column: 3, scope: !6991, inlinedAt: !6994)
!6997 = !{i64 2480119}
!6998 = !DILocation(line: 341, column: 4, scope: !6995)
!6999 = !DILocation(line: 342, column: 5, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !7001, file: !6669, line: 342, column: 5)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !6669, line: 342, column: 5)
!7002 = distinct !DILexicalBlock(scope: !6988, file: !6669, line: 341, column: 11)
!7003 = !DILocation(line: 342, column: 5, scope: !7001)
!7004 = !DILocation(line: 342, column: 5, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7000, file: !6669, line: 342, column: 5)
!7006 = !DILocation(line: 366, column: 12, scope: !6890)
!7007 = !DILocation(line: 369, column: 15, scope: !6890)
!7008 = !DILocation(line: 371, column: 2, scope: !6890)
!7009 = distinct !DISubprogram(name: "bus_fault", scope: !6669, file: !6669, line: 383, type: !7010, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7012)
!7010 = !DISubroutineType(types: !7011)
!7011 = !{!109, !2755, !109, !6742}
!7012 = !{!7013, !7014, !7015, !7016, !7017}
!7013 = !DILocalVariable(name: "esf", arg: 1, scope: !7009, file: !6669, line: 383, type: !2755)
!7014 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7009, file: !6669, line: 383, type: !109)
!7015 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7009, file: !6669, line: 383, type: !6742)
!7016 = !DILocalVariable(name: "reason", scope: !7009, file: !6669, line: 385, type: !110)
!7017 = !DILocalVariable(name: "bfar", scope: !7018, file: !6669, line: 405, type: !110)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !6669, line: 395, column: 42)
!7019 = distinct !DILexicalBlock(scope: !7009, file: !6669, line: 395, column: 6)
!7020 = !DILocation(line: 0, scope: !7009)
!7021 = !DILocation(line: 387, column: 2, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !6669, line: 387, column: 2)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !6669, line: 387, column: 2)
!7024 = distinct !DILexicalBlock(scope: !7025, file: !6669, line: 387, column: 2)
!7025 = distinct !DILexicalBlock(scope: !7009, file: !6669, line: 387, column: 2)
!7026 = !DILocation(line: 389, column: 11, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7009, file: !6669, line: 389, column: 6)
!7028 = !DILocation(line: 389, column: 16, scope: !7027)
!7029 = !DILocation(line: 389, column: 6, scope: !7009)
!7030 = !DILocation(line: 390, column: 3, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7032, file: !6669, line: 390, column: 3)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !6669, line: 390, column: 3)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !6669, line: 390, column: 3)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !6669, line: 390, column: 3)
!7035 = distinct !DILexicalBlock(scope: !7027, file: !6669, line: 389, column: 39)
!7036 = !DILocation(line: 391, column: 2, scope: !7035)
!7037 = !DILocation(line: 392, column: 11, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7009, file: !6669, line: 392, column: 6)
!7039 = !DILocation(line: 392, column: 16, scope: !7038)
!7040 = !DILocation(line: 392, column: 6, scope: !7009)
!7041 = !DILocation(line: 393, column: 3, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7043, file: !6669, line: 393, column: 3)
!7043 = distinct !DILexicalBlock(scope: !7044, file: !6669, line: 393, column: 3)
!7044 = distinct !DILexicalBlock(scope: !7045, file: !6669, line: 393, column: 3)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !6669, line: 393, column: 3)
!7046 = distinct !DILexicalBlock(scope: !7038, file: !6669, line: 392, column: 41)
!7047 = !DILocation(line: 394, column: 2, scope: !7046)
!7048 = !DILocation(line: 395, column: 11, scope: !7019)
!7049 = !DILocation(line: 395, column: 16, scope: !7019)
!7050 = !DILocation(line: 395, column: 6, scope: !7009)
!7051 = !DILocation(line: 396, column: 3, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !6669, line: 396, column: 3)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !6669, line: 396, column: 3)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !6669, line: 396, column: 3)
!7055 = distinct !DILexicalBlock(scope: !7018, file: !6669, line: 396, column: 3)
!7056 = !DILocation(line: 405, column: 3, scope: !7018)
!7057 = !DILocation(line: 0, scope: !7018)
!7058 = !DILocation(line: 407, column: 13, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7018, file: !6669, line: 407, column: 7)
!7060 = !DILocation(line: 407, column: 18, scope: !7059)
!7061 = !DILocation(line: 407, column: 44, scope: !7059)
!7062 = !DILocation(line: 407, column: 7, scope: !7018)
!7063 = !DILocation(line: 408, column: 4, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !6669, line: 408, column: 4)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !6669, line: 408, column: 4)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !6669, line: 408, column: 4)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !6669, line: 408, column: 4)
!7068 = distinct !DILexicalBlock(scope: !7059, file: !6669, line: 407, column: 50)
!7069 = !DILocation(line: 409, column: 24, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7068, file: !6669, line: 409, column: 8)
!7071 = !DILocation(line: 409, column: 8, scope: !7068)
!7072 = !DILocation(line: 411, column: 15, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7070, file: !6669, line: 409, column: 30)
!7074 = !DILocation(line: 412, column: 4, scope: !7073)
!7075 = !DILocation(line: 415, column: 11, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7009, file: !6669, line: 415, column: 6)
!7077 = !DILocation(line: 415, column: 16, scope: !7076)
!7078 = !DILocation(line: 415, column: 6, scope: !7009)
!7079 = !DILocation(line: 416, column: 3, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !6669, line: 416, column: 3)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !6669, line: 416, column: 3)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !6669, line: 416, column: 3)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !6669, line: 416, column: 3)
!7084 = distinct !DILexicalBlock(scope: !7076, file: !6669, line: 415, column: 44)
!7085 = !DILocation(line: 417, column: 2, scope: !7084)
!7086 = !DILocation(line: 418, column: 12, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7009, file: !6669, line: 418, column: 6)
!7088 = !DILocation(line: 418, column: 17, scope: !7087)
!7089 = !DILocation(line: 418, column: 41, scope: !7087)
!7090 = !DILocation(line: 418, column: 6, scope: !7009)
!7091 = !DILocation(line: 419, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !6669, line: 419, column: 3)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !6669, line: 419, column: 3)
!7094 = distinct !DILexicalBlock(scope: !7095, file: !6669, line: 419, column: 3)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !6669, line: 419, column: 3)
!7096 = distinct !DILexicalBlock(scope: !7087, file: !6669, line: 418, column: 47)
!7097 = !DILocation(line: 421, column: 2, scope: !7096)
!7098 = !DILocation(line: 524, column: 12, scope: !7009)
!7099 = !DILocation(line: 526, column: 15, scope: !7009)
!7100 = !DILocation(line: 528, column: 2, scope: !7009)
!7101 = distinct !DISubprogram(name: "usage_fault", scope: !6669, file: !6669, line: 539, type: !7102, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7106)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{!110, !7104}
!7104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7105, size: 32)
!7105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2756)
!7106 = !{!7107, !7108}
!7107 = !DILocalVariable(name: "esf", arg: 1, scope: !7101, file: !6669, line: 539, type: !7104)
!7108 = !DILocalVariable(name: "reason", scope: !7101, file: !6669, line: 541, type: !110)
!7109 = !DILocation(line: 0, scope: !7101)
!7110 = !DILocation(line: 543, column: 2, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !6669, line: 543, column: 2)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !6669, line: 543, column: 2)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !6669, line: 543, column: 2)
!7114 = distinct !DILexicalBlock(scope: !7101, file: !6669, line: 543, column: 2)
!7115 = !DILocation(line: 546, column: 12, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7101, file: !6669, line: 546, column: 6)
!7117 = !DILocation(line: 546, column: 17, scope: !7116)
!7118 = !DILocation(line: 546, column: 43, scope: !7116)
!7119 = !DILocation(line: 546, column: 6, scope: !7101)
!7120 = !DILocation(line: 547, column: 3, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !6669, line: 547, column: 3)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !6669, line: 547, column: 3)
!7123 = distinct !DILexicalBlock(scope: !7124, file: !6669, line: 547, column: 3)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !6669, line: 547, column: 3)
!7125 = distinct !DILexicalBlock(scope: !7116, file: !6669, line: 546, column: 49)
!7126 = !DILocation(line: 548, column: 2, scope: !7125)
!7127 = !DILocation(line: 549, column: 12, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7101, file: !6669, line: 549, column: 6)
!7129 = !DILocation(line: 549, column: 17, scope: !7128)
!7130 = !DILocation(line: 549, column: 43, scope: !7128)
!7131 = !DILocation(line: 549, column: 6, scope: !7101)
!7132 = !DILocation(line: 550, column: 3, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !6669, line: 550, column: 3)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !6669, line: 550, column: 3)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !6669, line: 550, column: 3)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !6669, line: 550, column: 3)
!7137 = distinct !DILexicalBlock(scope: !7128, file: !6669, line: 549, column: 49)
!7138 = !DILocation(line: 551, column: 2, scope: !7137)
!7139 = !DILocation(line: 567, column: 12, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7101, file: !6669, line: 567, column: 6)
!7141 = !DILocation(line: 567, column: 17, scope: !7140)
!7142 = !DILocation(line: 567, column: 38, scope: !7140)
!7143 = !DILocation(line: 567, column: 6, scope: !7101)
!7144 = !DILocation(line: 568, column: 3, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !6669, line: 568, column: 3)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !6669, line: 568, column: 3)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !6669, line: 568, column: 3)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !6669, line: 568, column: 3)
!7149 = distinct !DILexicalBlock(scope: !7140, file: !6669, line: 567, column: 44)
!7150 = !DILocation(line: 569, column: 2, scope: !7149)
!7151 = !DILocation(line: 570, column: 12, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7101, file: !6669, line: 570, column: 6)
!7153 = !DILocation(line: 570, column: 17, scope: !7152)
!7154 = !DILocation(line: 570, column: 39, scope: !7152)
!7155 = !DILocation(line: 570, column: 6, scope: !7101)
!7156 = !DILocation(line: 571, column: 3, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !6669, line: 571, column: 3)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !6669, line: 571, column: 3)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !6669, line: 571, column: 3)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !6669, line: 571, column: 3)
!7161 = distinct !DILexicalBlock(scope: !7152, file: !6669, line: 570, column: 45)
!7162 = !DILocation(line: 572, column: 2, scope: !7161)
!7163 = !DILocation(line: 573, column: 12, scope: !7164)
!7164 = distinct !DILexicalBlock(scope: !7101, file: !6669, line: 573, column: 6)
!7165 = !DILocation(line: 573, column: 17, scope: !7164)
!7166 = !DILocation(line: 573, column: 42, scope: !7164)
!7167 = !DILocation(line: 573, column: 6, scope: !7101)
!7168 = !DILocation(line: 574, column: 3, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !6669, line: 574, column: 3)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !6669, line: 574, column: 3)
!7171 = distinct !DILexicalBlock(scope: !7172, file: !6669, line: 574, column: 3)
!7172 = distinct !DILexicalBlock(scope: !7173, file: !6669, line: 574, column: 3)
!7173 = distinct !DILexicalBlock(scope: !7164, file: !6669, line: 573, column: 48)
!7174 = !DILocation(line: 575, column: 2, scope: !7173)
!7175 = !DILocation(line: 576, column: 12, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7101, file: !6669, line: 576, column: 6)
!7177 = !DILocation(line: 576, column: 17, scope: !7176)
!7178 = !DILocation(line: 576, column: 44, scope: !7176)
!7179 = !DILocation(line: 576, column: 6, scope: !7101)
!7180 = !DILocation(line: 577, column: 3, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !6669, line: 577, column: 3)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !6669, line: 577, column: 3)
!7183 = distinct !DILexicalBlock(scope: !7184, file: !6669, line: 577, column: 3)
!7184 = distinct !DILexicalBlock(scope: !7185, file: !6669, line: 577, column: 3)
!7185 = distinct !DILexicalBlock(scope: !7176, file: !6669, line: 576, column: 50)
!7186 = !DILocation(line: 578, column: 2, scope: !7185)
!7187 = !DILocation(line: 581, column: 12, scope: !7101)
!7188 = !DILocation(line: 583, column: 2, scope: !7101)
!7189 = distinct !DISubprogram(name: "debug_monitor", scope: !6669, file: !6669, line: 632, type: !7190, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7192)
!7190 = !DISubroutineType(types: !7191)
!7191 = !{null, !2755, !6742}
!7192 = !{!7193, !7194}
!7193 = !DILocalVariable(name: "esf", arg: 1, scope: !7189, file: !6669, line: 632, type: !2755)
!7194 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7189, file: !6669, line: 632, type: !6742)
!7195 = !DILocation(line: 0, scope: !7189)
!7196 = !DILocation(line: 634, column: 15, scope: !7189)
!7197 = !DILocation(line: 636, column: 2, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7199, file: !6669, line: 636, column: 2)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !6669, line: 636, column: 2)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !6669, line: 636, column: 2)
!7201 = distinct !DILexicalBlock(scope: !7189, file: !6669, line: 636, column: 2)
!7202 = !DILocation(line: 652, column: 1, scope: !7189)
!7203 = distinct !DISubprogram(name: "reserved_exception", scope: !6669, file: !6669, line: 776, type: !7204, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7206)
!7204 = !DISubroutineType(types: !7205)
!7205 = !{null, !7104, !109}
!7206 = !{!7207, !7208}
!7207 = !DILocalVariable(name: "esf", arg: 1, scope: !7203, file: !6669, line: 776, type: !7104)
!7208 = !DILocalVariable(name: "fault", arg: 2, scope: !7203, file: !6669, line: 776, type: !109)
!7209 = !DILocation(line: 0, scope: !7203)
!7210 = !DILocation(line: 780, column: 2, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !6669, line: 780, column: 2)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !6669, line: 780, column: 2)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !6669, line: 780, column: 2)
!7214 = distinct !DILexicalBlock(scope: !7203, file: !6669, line: 780, column: 2)
!7215 = !DILocation(line: 783, column: 1, scope: !7203)
!7216 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6669, file: !6669, line: 658, type: !7217, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !7219)
!7217 = !DISubroutineType(types: !7218)
!7218 = !{!360, !2755}
!7219 = !{!7220, !7221, !7222}
!7220 = !DILocalVariable(name: "esf", arg: 1, scope: !7216, file: !6669, line: 658, type: !2755)
!7221 = !DILocalVariable(name: "ret_addr", scope: !7216, file: !6669, line: 660, type: !2798)
!7222 = !DILocalVariable(name: "fault_insn", scope: !7216, file: !6669, line: 686, type: !194)
!7223 = !DILocation(line: 0, scope: !7216)
!7224 = !DILocation(line: 660, column: 46, scope: !7216)
!7225 = !DILocation(line: 660, column: 23, scope: !7216)
!7226 = !DILocation(line: 682, column: 11, scope: !7216)
!7227 = !DILocation(line: 271, column: 3, scope: !7228, inlinedAt: !7229)
!7228 = distinct !DISubprogram(name: "__DSB", scope: !6384, file: !6384, line: 269, type: !3060, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !2043)
!7229 = distinct !DILocation(line: 683, column: 2, scope: !7216)
!7230 = !{i64 2456254}
!7231 = !DILocation(line: 260, column: 3, scope: !7232, inlinedAt: !7233)
!7232 = distinct !DISubprogram(name: "__ISB", scope: !6384, file: !6384, line: 258, type: !3060, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !2043)
!7233 = distinct !DILocation(line: 684, column: 2, scope: !7216)
!7234 = !{i64 2455971}
!7235 = !DILocation(line: 686, column: 35, scope: !7216)
!7236 = !DILocation(line: 686, column: 24, scope: !7216)
!7237 = !DILocation(line: 688, column: 11, scope: !7216)
!7238 = !DILocation(line: 271, column: 3, scope: !7228, inlinedAt: !7239)
!7239 = distinct !DILocation(line: 689, column: 2, scope: !7216)
!7240 = !DILocation(line: 260, column: 3, scope: !7232, inlinedAt: !7241)
!7241 = distinct !DILocation(line: 690, column: 2, scope: !7216)
!7242 = !DILocation(line: 693, column: 45, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7216, file: !6669, line: 693, column: 6)
!7244 = !DILocation(line: 699, column: 1, scope: !7216)
!7245 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6669, file: !6669, line: 1107, type: !3060, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2727, retainedNodes: !2043)
!7246 = !DILocation(line: 1111, column: 11, scope: !7245)
!7247 = !DILocation(line: 1136, column: 1, scope: !7245)
!7248 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7249, file: !7249, line: 26, type: !3060, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !7250)
!7249 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7250 = !{!7251}
!7251 = !DILocalVariable(name: "irq", scope: !7248, file: !7249, line: 28, type: !109)
!7252 = !DILocation(line: 0, scope: !7248)
!7253 = !DILocation(line: 30, column: 2, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7248, file: !7249, line: 30, column: 2)
!7255 = !DILocation(line: 31, column: 3, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !7249, line: 30, column: 39)
!7257 = distinct !DILexicalBlock(scope: !7254, file: !7249, line: 30, column: 2)
!7258 = !DILocation(line: 30, column: 35, scope: !7257)
!7259 = !DILocation(line: 30, column: 13, scope: !7257)
!7260 = distinct !{!7260, !7253, !7261}
!7261 = !DILocation(line: 32, column: 2, scope: !7254)
!7262 = !DILocation(line: 33, column: 1, scope: !7248)
!7263 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !548, file: !548, line: 1638, type: !6424, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2799, retainedNodes: !7264)
!7264 = !{!7265, !7266}
!7265 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7263, file: !548, line: 1638, type: !872)
!7266 = !DILocalVariable(name: "priority", arg: 2, scope: !7263, file: !548, line: 1638, type: !110)
!7267 = !DILocation(line: 0, scope: !7263)
!7268 = !DILocation(line: 1640, column: 7, scope: !7263)
!7269 = !DILocation(line: 0, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7263, file: !548, line: 1640, column: 7)
!7271 = !DILocation(line: 1648, column: 1, scope: !7263)
!7272 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7273, file: !7273, line: 27, type: !7274, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2844, retainedNodes: !7380)
!7273 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7274 = !DISubroutineType(types: !7275)
!7275 = !{null, !7276}
!7276 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !7277)
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7278, size: 32)
!7278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !7279)
!7279 = !{!7280, !7338, !7350, !7351, !7352, !7353, !7354, !7360, !7375}
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7278, file: !158, line: 247, baseType: !7281, size: 384)
!7281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !7282)
!7282 = !{!7283, !7307, !7314, !7315, !7316, !7325, !7326, !7327}
!7283 = !DIDerivedType(tag: DW_TAG_member, scope: !7281, file: !158, line: 60, baseType: !7284, size: 64)
!7284 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7281, file: !158, line: 60, size: 64, elements: !7285)
!7285 = !{!7286, !7301}
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7284, file: !158, line: 61, baseType: !7287, size: 64)
!7287 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7288)
!7288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7289)
!7289 = !{!7290, !7296}
!7290 = !DIDerivedType(tag: DW_TAG_member, scope: !7288, file: !127, line: 38, baseType: !7291, size: 32)
!7291 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7288, file: !127, line: 38, size: 32, elements: !7292)
!7292 = !{!7293, !7295}
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7291, file: !127, line: 39, baseType: !7294, size: 32)
!7294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7288, size: 32)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7291, file: !127, line: 40, baseType: !7294, size: 32)
!7296 = !DIDerivedType(tag: DW_TAG_member, scope: !7288, file: !127, line: 42, baseType: !7297, size: 32, offset: 32)
!7297 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7288, file: !127, line: 42, size: 32, elements: !7298)
!7298 = !{!7299, !7300}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7297, file: !127, line: 43, baseType: !7294, size: 32)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7297, file: !127, line: 44, baseType: !7294, size: 32)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7284, file: !158, line: 62, baseType: !7302, size: 64)
!7302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !7303)
!7303 = !{!7304}
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7302, file: !170, line: 50, baseType: !7305, size: 64)
!7305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7306, size: 64, elements: !175)
!7306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7302, size: 32)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7281, file: !158, line: 68, baseType: !7308, size: 32, offset: 64)
!7308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7309, size: 32)
!7309 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7310)
!7310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7311)
!7311 = !{!7312}
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7310, file: !122, line: 232, baseType: !7313, size: 64)
!7313 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7288)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7281, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7281, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!7316 = !DIDerivedType(tag: DW_TAG_member, scope: !7281, file: !158, line: 90, baseType: !7317, size: 16, offset: 112)
!7317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7281, file: !158, line: 90, size: 16, elements: !7318)
!7318 = !{!7319, !7324}
!7319 = !DIDerivedType(tag: DW_TAG_member, scope: !7317, file: !158, line: 91, baseType: !7320, size: 16)
!7320 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7317, file: !158, line: 91, size: 16, elements: !7321)
!7321 = !{!7322, !7323}
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7320, file: !158, line: 96, baseType: !190, size: 8)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7320, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7317, file: !158, line: 100, baseType: !194, size: 16)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7281, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7281, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7281, file: !158, line: 131, baseType: !7328, size: 192, offset: 192)
!7328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7329)
!7329 = !{!7330, !7331, !7337}
!7330 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7328, file: !122, line: 245, baseType: !7287, size: 64)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7328, file: !122, line: 246, baseType: !7332, size: 32, offset: 64)
!7332 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7333)
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7334, size: 32)
!7334 = !DISubroutineType(types: !7335)
!7335 = !{null, !7336}
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7328, size: 32)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7328, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7278, file: !158, line: 250, baseType: !7339, size: 288, offset: 384)
!7339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !7340)
!7340 = !{!7341, !7342, !7343, !7344, !7345, !7346, !7347, !7348, !7349}
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7339, file: !211, line: 26, baseType: !110, size: 32)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7339, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7339, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7339, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7339, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7339, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7339, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7339, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7339, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7278, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7278, file: !158, line: 256, baseType: !7309, size: 64, offset: 704)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7278, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7278, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7278, file: !158, line: 300, baseType: !7355, size: 96, offset: 1056)
!7355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !7356)
!7356 = !{!7357, !7358, !7359}
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7355, file: !158, line: 153, baseType: !22, size: 32)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7355, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7355, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7278, file: !158, line: 325, baseType: !7361, size: 32, offset: 1152)
!7361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7362, size: 32)
!7362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7363)
!7363 = !{!7364, !7370, !7371}
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7362, file: !118, line: 5074, baseType: !7365, size: 96)
!7365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !7366)
!7366 = !{!7367, !7368, !7369}
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7365, file: !243, line: 57, baseType: !246, size: 32)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7365, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7365, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7362, file: !118, line: 5075, baseType: !7309, size: 64, offset: 96)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7362, file: !118, line: 5076, baseType: !7372, size: 32, offset: 160)
!7372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !7373)
!7373 = !{!7374}
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7372, file: !253, line: 52, baseType: !22, size: 32)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7278, file: !158, line: 343, baseType: !7376, size: 64, offset: 1184)
!7376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !7377)
!7377 = !{!7378, !7379}
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7376, file: !211, line: 63, baseType: !110, size: 32)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7376, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!7380 = !{!7381}
!7381 = !DILocalVariable(name: "thread", arg: 1, scope: !7272, file: !7273, line: 27, type: !7276)
!7382 = !DILocation(line: 0, scope: !7272)
!7383 = !DILocation(line: 29, column: 6, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7272, file: !7273, line: 29, column: 6)
!7385 = !DILocation(line: 29, column: 15, scope: !7384)
!7386 = !DILocation(line: 29, column: 6, scope: !7272)
!7387 = !DILocation(line: 1031, column: 3, scope: !7388, inlinedAt: !7393)
!7388 = distinct !DISubprogram(name: "__get_IPSR", scope: !6384, file: !6384, line: 1027, type: !7389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2844, retainedNodes: !7391)
!7389 = !DISubroutineType(types: !7390)
!7390 = !{!110}
!7391 = !{!7392}
!7392 = !DILocalVariable(name: "result", scope: !7388, file: !6384, line: 1029, type: !110)
!7393 = distinct !DILocation(line: 48, column: 10, scope: !7394, inlinedAt: !7398)
!7394 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7395, file: !7395, line: 46, type: !7396, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2844, retainedNodes: !2043)
!7395 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7396 = !DISubroutineType(types: !7397)
!7397 = !{!360}
!7398 = distinct !DILocation(line: 30, column: 7, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !7273, line: 30, column: 7)
!7400 = distinct !DILexicalBlock(scope: !7384, file: !7273, line: 29, column: 26)
!7401 = !{i64 2445102}
!7402 = !DILocation(line: 0, scope: !7388, inlinedAt: !7393)
!7403 = !DILocation(line: 48, column: 9, scope: !7394, inlinedAt: !7398)
!7404 = !DILocation(line: 30, column: 7, scope: !7400)
!7405 = !DILocation(line: 42, column: 14, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7399, file: !7273, line: 30, column: 25)
!7407 = !DILocation(line: 48, column: 15, scope: !7406)
!7408 = !DILocation(line: 49, column: 3, scope: !7406)
!7409 = !DILocation(line: 52, column: 2, scope: !7272)
!7410 = !DILocation(line: 53, column: 1, scope: !7272)
!7411 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !407, file: !407, line: 127, type: !3060, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !2043)
!7412 = !DILocation(line: 134, column: 2, scope: !7411)
!7413 = !DILocation(line: 156, column: 1, scope: !7411)
!7414 = !DILocation(line: 0, scope: !406)
!7415 = !DILocation(line: 289, column: 36, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !406, file: !407, line: 285, column: 2)
!7417 = !DILocation(line: 289, column: 42, scope: !7416)
!7418 = !DILocation(line: 300, column: 36, scope: !406)
!7419 = !DILocation(line: 301, column: 35, scope: !406)
!7420 = !DILocation(line: 302, column: 37, scope: !406)
!7421 = !DILocation(line: 311, column: 2, scope: !406)
!7422 = !DILocation(line: 316, column: 1, scope: !406)
!7423 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !576, file: !576, line: 180, type: !3060, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2043)
!7424 = !DILocation(line: 188, column: 12, scope: !7423)
!7425 = !DILocation(line: 271, column: 3, scope: !7426, inlinedAt: !7427)
!7426 = distinct !DISubprogram(name: "__DSB", scope: !6384, file: !6384, line: 269, type: !3060, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2043)
!7427 = distinct !DILocation(line: 192, column: 2, scope: !7423)
!7428 = !{i64 2603929}
!7429 = !DILocation(line: 260, column: 3, scope: !7430, inlinedAt: !7431)
!7430 = distinct !DISubprogram(name: "__ISB", scope: !6384, file: !6384, line: 258, type: !3060, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2043)
!7431 = distinct !DILocation(line: 193, column: 2, scope: !7423)
!7432 = !{i64 2603646}
!7433 = !DILocation(line: 194, column: 1, scope: !7423)
!7434 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !576, file: !576, line: 199, type: !3060, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2043)
!7435 = !DILocation(line: 282, column: 3, scope: !7436, inlinedAt: !7437)
!7436 = distinct !DISubprogram(name: "__DMB", scope: !6384, file: !6384, line: 280, type: !3060, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !2043)
!7437 = distinct !DILocation(line: 202, column: 2, scope: !7434)
!7438 = !{i64 2604205}
!7439 = !DILocation(line: 205, column: 12, scope: !7434)
!7440 = !DILocation(line: 206, column: 1, scope: !7434)
!7441 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !576, file: !576, line: 275, type: !7442, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7455)
!7442 = !DISubroutineType(types: !7443)
!7443 = !{null, !7444, !1824, !6636, !6636}
!7444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7445, size: 32)
!7445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7446)
!7446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !520, line: 52, size: 96, elements: !7447)
!7447 = !{!7448, !7449, !7450}
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7446, file: !520, line: 53, baseType: !22, size: 32)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7446, file: !520, line: 54, baseType: !234, size: 32, offset: 32)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7446, file: !520, line: 55, baseType: !7451, size: 32, offset: 64)
!7451 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !526, line: 151, baseType: !7452)
!7452 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !526, line: 149, size: 32, elements: !7453)
!7453 = !{!7454}
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7452, file: !526, line: 150, baseType: !110, size: 32)
!7455 = !{!7456, !7457, !7458, !7459}
!7456 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7441, file: !576, line: 276, type: !7444)
!7457 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7441, file: !576, line: 276, type: !1824)
!7458 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7441, file: !576, line: 277, type: !6636)
!7459 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7441, file: !576, line: 277, type: !6636)
!7460 = !DILocation(line: 0, scope: !7441)
!7461 = !DILocation(line: 279, column: 6, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7441, file: !576, line: 279, column: 6)
!7463 = !DILocation(line: 280, column: 57, scope: !7462)
!7464 = !DILocation(line: 279, column: 6, scope: !7441)
!7465 = !DILocation(line: 282, column: 3, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !576, line: 282, column: 3)
!7467 = distinct !DILexicalBlock(scope: !7468, file: !576, line: 282, column: 3)
!7468 = distinct !DILexicalBlock(scope: !7469, file: !576, line: 282, column: 3)
!7469 = distinct !DILexicalBlock(scope: !7462, file: !576, line: 280, column: 69)
!7470 = !DILocation(line: 285, column: 1, scope: !7441)
!7471 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7472, file: !7472, line: 220, type: !7473, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7475)
!7472 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7473 = !DISubroutineType(types: !7474)
!7474 = !{!109, !7444, !1824, !6636, !6636}
!7475 = !{!7476, !7477, !7478, !7479, !7480}
!7476 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7471, file: !7472, line: 221, type: !7444)
!7477 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7471, file: !7472, line: 221, type: !1824)
!7478 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7471, file: !7472, line: 222, type: !6636)
!7479 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7471, file: !7472, line: 223, type: !6636)
!7480 = !DILocalVariable(name: "mpu_reg_index", scope: !7471, file: !7472, line: 225, type: !109)
!7481 = !DILocation(line: 0, scope: !7471)
!7482 = !DILocation(line: 225, column: 22, scope: !7471)
!7483 = !DILocation(line: 233, column: 18, scope: !7471)
!7484 = !DILocation(line: 236, column: 23, scope: !7471)
!7485 = !DILocation(line: 236, column: 21, scope: !7471)
!7486 = !DILocation(line: 238, column: 2, scope: !7471)
!7487 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !576, file: !576, line: 105, type: !7488, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7490)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{!109, !7444, !180, !180, !360}
!7490 = !{!7491, !7492, !7493, !7494, !7495, !7496}
!7491 = !DILocalVariable(name: "regions", arg: 1, scope: !7487, file: !576, line: 106, type: !7444)
!7492 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7487, file: !576, line: 106, type: !180)
!7493 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7487, file: !576, line: 106, type: !180)
!7494 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7487, file: !576, line: 107, type: !360)
!7495 = !DILocalVariable(name: "i", scope: !7487, file: !576, line: 109, type: !109)
!7496 = !DILocalVariable(name: "reg_index", scope: !7487, file: !576, line: 110, type: !109)
!7497 = !DILocation(line: 0, scope: !7487)
!7498 = !DILocation(line: 110, column: 18, scope: !7487)
!7499 = !DILocation(line: 112, column: 16, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7501, file: !576, line: 112, column: 2)
!7501 = distinct !DILexicalBlock(scope: !7487, file: !576, line: 112, column: 2)
!7502 = !DILocation(line: 112, column: 2, scope: !7501)
!7503 = !DILocation(line: 113, column: 7, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7505, file: !576, line: 113, column: 7)
!7505 = distinct !DILexicalBlock(scope: !7500, file: !576, line: 112, column: 36)
!7506 = !DILocation(line: 113, column: 18, scope: !7504)
!7507 = !DILocation(line: 113, column: 23, scope: !7504)
!7508 = !DILocation(line: 113, column: 7, scope: !7505)
!7509 = !DILocation(line: 118, column: 23, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7505, file: !576, line: 118, column: 7)
!7511 = !DILocation(line: 119, column: 7, scope: !7510)
!7512 = !DILocation(line: 118, column: 7, scope: !7505)
!7513 = !DILocation(line: 120, column: 4, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !576, line: 120, column: 4)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !576, line: 120, column: 4)
!7516 = distinct !DILexicalBlock(scope: !7517, file: !576, line: 120, column: 4)
!7517 = distinct !DILexicalBlock(scope: !7518, file: !576, line: 120, column: 4)
!7518 = distinct !DILexicalBlock(scope: !7510, file: !576, line: 119, column: 45)
!7519 = !DILocation(line: 121, column: 4, scope: !7518)
!7520 = !DILocation(line: 124, column: 36, scope: !7505)
!7521 = !DILocation(line: 124, column: 15, scope: !7505)
!7522 = !DILocation(line: 126, column: 17, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7505, file: !576, line: 126, column: 7)
!7524 = !DILocation(line: 126, column: 7, scope: !7505)
!7525 = !DILocation(line: 131, column: 12, scope: !7505)
!7526 = !DILocation(line: 132, column: 2, scope: !7505)
!7527 = !DILocation(line: 112, column: 32, scope: !7500)
!7528 = distinct !{!7528, !7502, !7529}
!7529 = !DILocation(line: 132, column: 2, scope: !7501)
!7530 = !DILocation(line: 135, column: 1, scope: !7487)
!7531 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7472, file: !7472, line: 63, type: !7532, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7534)
!7532 = !DISubroutineType(types: !7533)
!7533 = !{!109, !7444}
!7534 = !{!7535, !7536}
!7535 = !DILocalVariable(name: "part", arg: 1, scope: !7531, file: !7472, line: 63, type: !7444)
!7536 = !DILocalVariable(name: "partition_is_valid", scope: !7531, file: !7472, line: 70, type: !109)
!7537 = !DILocation(line: 0, scope: !7531)
!7538 = !DILocation(line: 71, column: 11, scope: !7531)
!7539 = !DILocation(line: 71, column: 37, scope: !7531)
!7540 = !{i32 0, i32 33}
!7541 = !DILocation(line: 72, column: 3, scope: !7531)
!7542 = !DILocation(line: 71, column: 30, scope: !7531)
!7543 = !DILocation(line: 75, column: 11, scope: !7531)
!7544 = !DILocation(line: 75, column: 17, scope: !7531)
!7545 = !DILocation(line: 75, column: 38, scope: !7531)
!7546 = !DILocation(line: 77, column: 2, scope: !7531)
!7547 = distinct !DISubprogram(name: "mpu_configure_region", scope: !576, file: !576, line: 79, type: !7548, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7550)
!7548 = !DISubroutineType(types: !7549)
!7549 = !{!109, !1824, !7444}
!7550 = !{!7551, !7552, !7553}
!7551 = !DILocalVariable(name: "index", arg: 1, scope: !7547, file: !576, line: 79, type: !1824)
!7552 = !DILocalVariable(name: "new_region", arg: 2, scope: !7547, file: !576, line: 80, type: !7444)
!7553 = !DILocalVariable(name: "region_conf", scope: !7547, file: !576, line: 82, type: !565)
!7554 = !DILocation(line: 0, scope: !7547)
!7555 = !DILocation(line: 82, column: 2, scope: !7547)
!7556 = !DILocation(line: 82, column: 24, scope: !7547)
!7557 = !DILocation(line: 87, column: 33, scope: !7547)
!7558 = !DILocation(line: 87, column: 14, scope: !7547)
!7559 = !DILocation(line: 87, column: 19, scope: !7547)
!7560 = !DILocation(line: 91, column: 55, scope: !7547)
!7561 = !DILocation(line: 92, column: 16, scope: !7547)
!7562 = !DILocation(line: 92, column: 53, scope: !7547)
!7563 = !DILocation(line: 91, column: 2, scope: !7547)
!7564 = !DILocation(line: 95, column: 9, scope: !7547)
!7565 = !DILocation(line: 97, column: 1, scope: !7547)
!7566 = !DILocation(line: 95, column: 2, scope: !7547)
!7567 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7472, file: !7472, line: 113, type: !7568, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7573)
!7568 = !DISubroutineType(types: !7569)
!7569 = !{null, !7570, !7571, !110, !110}
!7570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!7571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7572, size: 32)
!7572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7451)
!7573 = !{!7574, !7575, !7576, !7577}
!7574 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7567, file: !7472, line: 114, type: !7570)
!7575 = !DILocalVariable(name: "attr", arg: 2, scope: !7567, file: !7472, line: 115, type: !7571)
!7576 = !DILocalVariable(name: "base", arg: 3, scope: !7567, file: !7472, line: 115, type: !110)
!7577 = !DILocalVariable(name: "size", arg: 4, scope: !7567, file: !7472, line: 115, type: !110)
!7578 = !DILocation(line: 0, scope: !7567)
!7579 = !DILocation(line: 127, column: 23, scope: !7567)
!7580 = !DILocation(line: 127, column: 35, scope: !7567)
!7581 = !DILocation(line: 127, column: 33, scope: !7567)
!7582 = !DILocation(line: 127, column: 10, scope: !7567)
!7583 = !DILocation(line: 127, column: 15, scope: !7567)
!7584 = !DILocation(line: 129, column: 1, scope: !7567)
!7585 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !576, file: !576, line: 57, type: !7586, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7588)
!7586 = !DISubroutineType(types: !7587)
!7587 = !{!109, !1824, !563}
!7588 = !{!7589, !7590}
!7589 = !DILocalVariable(name: "index", arg: 1, scope: !7585, file: !576, line: 57, type: !1824)
!7590 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7585, file: !576, line: 58, type: !563)
!7591 = !DILocation(line: 0, scope: !7585)
!7592 = !DILocation(line: 61, column: 6, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7585, file: !576, line: 61, column: 6)
!7594 = !DILocation(line: 61, column: 12, scope: !7593)
!7595 = !DILocation(line: 61, column: 6, scope: !7585)
!7596 = !DILocation(line: 64, column: 3, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !576, line: 64, column: 3)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !576, line: 64, column: 3)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !576, line: 64, column: 3)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !576, line: 64, column: 3)
!7601 = distinct !DILexicalBlock(scope: !7593, file: !576, line: 61, column: 40)
!7602 = !DILocation(line: 65, column: 3, scope: !7601)
!7603 = !DILocation(line: 71, column: 2, scope: !7585)
!7604 = !DILocation(line: 73, column: 2, scope: !7585)
!7605 = !DILocation(line: 74, column: 1, scope: !7585)
!7606 = distinct !DISubprogram(name: "region_init", scope: !7472, file: !7472, line: 29, type: !7607, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7609)
!7607 = !DISubroutineType(types: !7608)
!7608 = !{null, !6636, !563}
!7609 = !{!7610, !7611}
!7610 = !DILocalVariable(name: "index", arg: 1, scope: !7606, file: !7472, line: 29, type: !6636)
!7611 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7606, file: !7472, line: 30, type: !563)
!7612 = !DILocation(line: 0, scope: !7606)
!7613 = !DILocation(line: 33, column: 2, scope: !7606)
!7614 = !DILocation(line: 47, column: 28, scope: !7606)
!7615 = !DILocation(line: 47, column: 33, scope: !7606)
!7616 = !DILocation(line: 48, column: 26, scope: !7606)
!7617 = !DILocation(line: 47, column: 12, scope: !7606)
!7618 = !DILocation(line: 49, column: 32, scope: !7606)
!7619 = !DILocation(line: 49, column: 37, scope: !7606)
!7620 = !DILocation(line: 49, column: 12, scope: !7606)
!7621 = !DILocation(line: 53, column: 1, scope: !7606)
!7622 = distinct !DISubprogram(name: "set_region_number", scope: !7623, file: !7623, line: 32, type: !6070, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7624)
!7623 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7624 = !{!7625}
!7625 = !DILocalVariable(name: "index", arg: 1, scope: !7622, file: !7623, line: 32, type: !110)
!7626 = !DILocation(line: 0, scope: !7622)
!7627 = !DILocation(line: 34, column: 11, scope: !7622)
!7628 = !DILocation(line: 35, column: 1, scope: !7622)
!7629 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7472, file: !7472, line: 88, type: !7630, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7632)
!7630 = !DISubroutineType(types: !7631)
!7631 = !{!110, !110}
!7632 = !{!7633}
!7633 = !DILocalVariable(name: "size", arg: 1, scope: !7629, file: !7472, line: 88, type: !110)
!7634 = !DILocation(line: 0, scope: !7629)
!7635 = !DILocation(line: 91, column: 11, scope: !7636)
!7636 = distinct !DILexicalBlock(scope: !7629, file: !7472, line: 91, column: 6)
!7637 = !DILocation(line: 91, column: 6, scope: !7629)
!7638 = !DILocation(line: 100, column: 11, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7629, file: !7472, line: 100, column: 6)
!7640 = !DILocation(line: 100, column: 6, scope: !7629)
!7641 = !DILocation(line: 104, column: 35, scope: !7629)
!7642 = !DILocation(line: 104, column: 16, scope: !7629)
!7643 = !DILocation(line: 104, column: 50, scope: !7629)
!7644 = !DILocation(line: 104, column: 72, scope: !7629)
!7645 = !DILocation(line: 104, column: 2, scope: !7629)
!7646 = !DILocation(line: 106, column: 1, scope: !7629)
!7647 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !576, file: !576, line: 307, type: !7648, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7650)
!7648 = !DISubroutineType(types: !7649)
!7649 = !{null, !7444, !180}
!7650 = !{!7651, !7652}
!7651 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7647, file: !576, line: 308, type: !7444)
!7652 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7647, file: !576, line: 308, type: !180)
!7653 = !DILocation(line: 0, scope: !7647)
!7654 = !DILocation(line: 310, column: 6, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7647, file: !576, line: 310, column: 6)
!7656 = !DILocation(line: 311, column: 3, scope: !7655)
!7657 = !DILocation(line: 310, column: 6, scope: !7647)
!7658 = !DILocation(line: 313, column: 3, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !576, line: 313, column: 3)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !576, line: 313, column: 3)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !576, line: 313, column: 3)
!7662 = distinct !DILexicalBlock(scope: !7655, file: !576, line: 311, column: 15)
!7663 = !DILocation(line: 316, column: 1, scope: !7647)
!7664 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7472, file: !7472, line: 249, type: !7665, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7667)
!7665 = !DISubroutineType(types: !7666)
!7666 = !{!109, !7444, !180}
!7667 = !{!7668, !7669, !7670, !7671}
!7668 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7664, file: !7472, line: 250, type: !7444)
!7669 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7664, file: !7472, line: 250, type: !180)
!7670 = !DILocalVariable(name: "mpu_reg_index", scope: !7664, file: !7472, line: 252, type: !109)
!7671 = !DILocalVariable(name: "i", scope: !7672, file: !7472, line: 264, type: !109)
!7672 = distinct !DILexicalBlock(scope: !7673, file: !7472, line: 264, column: 3)
!7673 = distinct !DILexicalBlock(scope: !7674, file: !7472, line: 261, column: 32)
!7674 = distinct !DILexicalBlock(scope: !7664, file: !7472, line: 261, column: 6)
!7675 = !DILocation(line: 0, scope: !7664)
!7676 = !DILocation(line: 252, column: 22, scope: !7664)
!7677 = !DILocation(line: 258, column: 18, scope: !7664)
!7678 = !DILocation(line: 261, column: 20, scope: !7674)
!7679 = !DILocation(line: 261, column: 6, scope: !7664)
!7680 = !DILocation(line: 0, scope: !7672)
!7681 = !DILocation(line: 265, column: 4, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7683, file: !7472, line: 264, column: 59)
!7683 = distinct !DILexicalBlock(scope: !7672, file: !7472, line: 264, column: 3)
!7684 = !DILocation(line: 264, column: 55, scope: !7683)
!7685 = !DILocation(line: 264, column: 33, scope: !7683)
!7686 = !DILocation(line: 264, column: 3, scope: !7672)
!7687 = distinct !{!7687, !7686, !7688}
!7688 = !DILocation(line: 266, column: 3, scope: !7672)
!7689 = !DILocation(line: 269, column: 2, scope: !7664)
!7690 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7691, file: !7691, line: 218, type: !6070, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7692)
!7691 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7692 = !{!7693}
!7693 = !DILocalVariable(name: "rnr", arg: 1, scope: !7690, file: !7691, line: 218, type: !110)
!7694 = !DILocation(line: 0, scope: !7690)
!7695 = !DILocation(line: 220, column: 12, scope: !7690)
!7696 = !DILocation(line: 221, column: 13, scope: !7690)
!7697 = !DILocation(line: 222, column: 1, scope: !7690)
!7698 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !576, file: !576, line: 326, type: !7699, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !7701)
!7699 = !DISubroutineType(types: !7700)
!7700 = !{!109}
!7701 = !{!7702}
!7702 = !DILocalVariable(name: "r_index", scope: !7698, file: !576, line: 328, type: !110)
!7703 = !DILocation(line: 330, column: 17, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7698, file: !576, line: 330, column: 6)
!7705 = !DILocation(line: 330, column: 29, scope: !7704)
!7706 = !DILocation(line: 330, column: 6, scope: !7698)
!7707 = !DILocation(line: 337, column: 3, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7709, file: !576, line: 337, column: 3)
!7709 = distinct !DILexicalBlock(scope: !7710, file: !576, line: 337, column: 3)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !576, line: 337, column: 3)
!7711 = distinct !DILexicalBlock(scope: !7704, file: !576, line: 330, column: 50)
!7712 = !DILocation(line: 347, column: 2, scope: !7698)
!7713 = !DILocation(line: 0, scope: !7698)
!7714 = !DILocation(line: 364, column: 29, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !576, line: 364, column: 2)
!7716 = distinct !DILexicalBlock(scope: !7698, file: !576, line: 364, column: 2)
!7717 = !DILocation(line: 364, column: 2, scope: !7716)
!7718 = !DILocation(line: 365, column: 25, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7715, file: !576, line: 364, column: 66)
!7720 = !DILocation(line: 365, column: 3, scope: !7719)
!7721 = !DILocation(line: 364, column: 62, scope: !7715)
!7722 = distinct !{!7722, !7717, !7723}
!7723 = !DILocation(line: 366, column: 2, scope: !7716)
!7724 = !DILocation(line: 369, column: 23, scope: !7698)
!7725 = !DILocation(line: 369, column: 21, scope: !7698)
!7726 = !DILocation(line: 372, column: 2, scope: !7698)
!7727 = !DILocation(line: 433, column: 2, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !576, line: 433, column: 2)
!7729 = distinct !DILexicalBlock(scope: !7698, file: !576, line: 433, column: 2)
!7730 = !DILocation(line: 433, column: 2, scope: !7729)
!7731 = !DILocation(line: 433, column: 2, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7728, file: !576, line: 433, column: 2)
!7733 = !DILocation(line: 444, column: 1, scope: !7698)
!7734 = distinct !DISubprogram(name: "strcpy", scope: !7735, file: !7735, line: 20, type: !7736, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7740)
!7735 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7736 = !DISubroutineType(types: !7737)
!7737 = !{!285, !7738, !7739}
!7738 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7739 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7740 = !{!7741, !7742, !7743}
!7741 = !DILocalVariable(name: "d", arg: 1, scope: !7734, file: !7735, line: 20, type: !7738)
!7742 = !DILocalVariable(name: "s", arg: 2, scope: !7734, file: !7735, line: 20, type: !7739)
!7743 = !DILocalVariable(name: "dest", scope: !7734, file: !7735, line: 22, type: !285)
!7744 = !DILocation(line: 0, scope: !7734)
!7745 = !DILocation(line: 24, column: 9, scope: !7734)
!7746 = !DILocation(line: 24, column: 12, scope: !7734)
!7747 = !DILocation(line: 24, column: 2, scope: !7734)
!7748 = !DILocation(line: 25, column: 6, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7734, file: !7735, line: 24, column: 21)
!7750 = !DILocation(line: 26, column: 4, scope: !7749)
!7751 = !DILocation(line: 27, column: 4, scope: !7749)
!7752 = distinct !{!7752, !7747, !7753}
!7753 = !DILocation(line: 28, column: 2, scope: !7734)
!7754 = !DILocation(line: 30, column: 5, scope: !7734)
!7755 = !DILocation(line: 32, column: 2, scope: !7734)
!7756 = distinct !DISubprogram(name: "strncpy", scope: !7735, file: !7735, line: 42, type: !7757, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7759)
!7757 = !DISubroutineType(types: !7758)
!7758 = !{!285, !7738, !7739, !234}
!7759 = !{!7760, !7761, !7762, !7763}
!7760 = !DILocalVariable(name: "d", arg: 1, scope: !7756, file: !7735, line: 42, type: !7738)
!7761 = !DILocalVariable(name: "s", arg: 2, scope: !7756, file: !7735, line: 42, type: !7739)
!7762 = !DILocalVariable(name: "n", arg: 3, scope: !7756, file: !7735, line: 42, type: !234)
!7763 = !DILocalVariable(name: "dest", scope: !7756, file: !7735, line: 44, type: !285)
!7764 = !DILocation(line: 0, scope: !7756)
!7765 = !DILocation(line: 46, column: 12, scope: !7756)
!7766 = !DILocation(line: 46, column: 17, scope: !7756)
!7767 = !DILocation(line: 46, column: 20, scope: !7756)
!7768 = !DILocation(line: 46, column: 23, scope: !7756)
!7769 = !DILocation(line: 46, column: 2, scope: !7756)
!7770 = !DILocation(line: 47, column: 6, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7756, file: !7735, line: 46, column: 32)
!7772 = !DILocation(line: 48, column: 4, scope: !7771)
!7773 = !DILocation(line: 49, column: 4, scope: !7771)
!7774 = !DILocation(line: 50, column: 4, scope: !7771)
!7775 = distinct !{!7775, !7769, !7776}
!7776 = !DILocation(line: 51, column: 2, scope: !7756)
!7777 = !DILocation(line: 54, column: 6, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7756, file: !7735, line: 53, column: 16)
!7779 = !DILocation(line: 55, column: 4, scope: !7778)
!7780 = !DILocation(line: 56, column: 4, scope: !7778)
!7781 = !DILocation(line: 53, column: 11, scope: !7756)
!7782 = !DILocation(line: 53, column: 2, scope: !7756)
!7783 = distinct !{!7783, !7782, !7784}
!7784 = !DILocation(line: 57, column: 2, scope: !7756)
!7785 = !DILocation(line: 59, column: 2, scope: !7756)
!7786 = distinct !DISubprogram(name: "strchr", scope: !7735, file: !7735, line: 69, type: !7787, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7789)
!7787 = !DISubroutineType(types: !7788)
!7788 = !{!285, !279, !109}
!7789 = !{!7790, !7791, !7792}
!7790 = !DILocalVariable(name: "s", arg: 1, scope: !7786, file: !7735, line: 69, type: !279)
!7791 = !DILocalVariable(name: "c", arg: 2, scope: !7786, file: !7735, line: 69, type: !109)
!7792 = !DILocalVariable(name: "tmp", scope: !7786, file: !7735, line: 71, type: !150)
!7793 = !DILocation(line: 0, scope: !7786)
!7794 = !DILocation(line: 73, column: 2, scope: !7786)
!7795 = !DILocation(line: 73, column: 10, scope: !7786)
!7796 = !DILocation(line: 73, column: 13, scope: !7786)
!7797 = !DILocation(line: 73, column: 21, scope: !7786)
!7798 = !DILocation(line: 74, column: 4, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7786, file: !7735, line: 73, column: 38)
!7800 = distinct !{!7800, !7794, !7801}
!7801 = !DILocation(line: 75, column: 2, scope: !7786)
!7802 = !DILocation(line: 77, column: 9, scope: !7786)
!7803 = !DILocation(line: 77, column: 2, scope: !7786)
!7804 = distinct !DISubprogram(name: "strrchr", scope: !7735, file: !7735, line: 87, type: !7787, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7805)
!7805 = !{!7806, !7807, !7808}
!7806 = !DILocalVariable(name: "s", arg: 1, scope: !7804, file: !7735, line: 87, type: !279)
!7807 = !DILocalVariable(name: "c", arg: 2, scope: !7804, file: !7735, line: 87, type: !109)
!7808 = !DILocalVariable(name: "match", scope: !7804, file: !7735, line: 89, type: !285)
!7809 = !DILocation(line: 0, scope: !7804)
!7810 = !DILocation(line: 91, column: 2, scope: !7804)
!7811 = !DILocation(line: 92, column: 7, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7813, file: !7735, line: 92, column: 7)
!7813 = distinct !DILexicalBlock(scope: !7804, file: !7735, line: 91, column: 5)
!7814 = !DILocation(line: 92, column: 10, scope: !7812)
!7815 = !DILocation(line: 92, column: 7, scope: !7813)
!7816 = !DILocation(line: 95, column: 13, scope: !7804)
!7817 = !DILocation(line: 95, column: 2, scope: !7813)
!7818 = distinct !{!7818, !7810, !7819}
!7819 = !DILocation(line: 95, column: 15, scope: !7804)
!7820 = !DILocation(line: 97, column: 2, scope: !7804)
!7821 = distinct !DISubprogram(name: "strlen", scope: !7735, file: !7735, line: 107, type: !7822, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7824)
!7822 = !DISubroutineType(types: !7823)
!7823 = !{!234, !279}
!7824 = !{!7825, !7826}
!7825 = !DILocalVariable(name: "s", arg: 1, scope: !7821, file: !7735, line: 107, type: !279)
!7826 = !DILocalVariable(name: "n", scope: !7821, file: !7735, line: 109, type: !234)
!7827 = !DILocation(line: 0, scope: !7821)
!7828 = !DILocation(line: 111, column: 9, scope: !7821)
!7829 = !DILocation(line: 111, column: 12, scope: !7821)
!7830 = !DILocation(line: 111, column: 2, scope: !7821)
!7831 = !DILocation(line: 112, column: 4, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7821, file: !7735, line: 111, column: 21)
!7833 = !DILocation(line: 113, column: 4, scope: !7832)
!7834 = distinct !{!7834, !7830, !7835}
!7835 = !DILocation(line: 114, column: 2, scope: !7821)
!7836 = !DILocation(line: 116, column: 2, scope: !7821)
!7837 = distinct !DISubprogram(name: "strnlen", scope: !7735, file: !7735, line: 126, type: !7838, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7840)
!7838 = !DISubroutineType(types: !7839)
!7839 = !{!234, !279, !234}
!7840 = !{!7841, !7842, !7843}
!7841 = !DILocalVariable(name: "s", arg: 1, scope: !7837, file: !7735, line: 126, type: !279)
!7842 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7837, file: !7735, line: 126, type: !234)
!7843 = !DILocalVariable(name: "n", scope: !7837, file: !7735, line: 128, type: !234)
!7844 = !DILocation(line: 0, scope: !7837)
!7845 = !DILocation(line: 130, column: 9, scope: !7837)
!7846 = !DILocation(line: 130, column: 12, scope: !7837)
!7847 = !DILocation(line: 130, column: 20, scope: !7837)
!7848 = !DILocation(line: 130, column: 2, scope: !7837)
!7849 = !DILocation(line: 131, column: 4, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7837, file: !7735, line: 130, column: 35)
!7851 = !DILocation(line: 132, column: 4, scope: !7850)
!7852 = distinct !{!7852, !7848, !7853}
!7853 = !DILocation(line: 133, column: 2, scope: !7837)
!7854 = !DILocation(line: 135, column: 2, scope: !7837)
!7855 = distinct !DISubprogram(name: "strcmp", scope: !7735, file: !7735, line: 145, type: !7856, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7858)
!7856 = !DISubroutineType(types: !7857)
!7857 = !{!109, !279, !279}
!7858 = !{!7859, !7860}
!7859 = !DILocalVariable(name: "s1", arg: 1, scope: !7855, file: !7735, line: 145, type: !279)
!7860 = !DILocalVariable(name: "s2", arg: 2, scope: !7855, file: !7735, line: 145, type: !279)
!7861 = !DILocation(line: 0, scope: !7855)
!7862 = !DILocation(line: 147, column: 10, scope: !7855)
!7863 = !DILocation(line: 147, column: 17, scope: !7855)
!7864 = !DILocation(line: 147, column: 14, scope: !7855)
!7865 = !DILocation(line: 147, column: 22, scope: !7855)
!7866 = !DILocation(line: 148, column: 5, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7855, file: !7735, line: 147, column: 40)
!7868 = !DILocation(line: 149, column: 5, scope: !7867)
!7869 = distinct !{!7869, !7870, !7871}
!7870 = !DILocation(line: 147, column: 2, scope: !7855)
!7871 = !DILocation(line: 150, column: 2, scope: !7855)
!7872 = !DILocation(line: 152, column: 9, scope: !7855)
!7873 = !DILocation(line: 152, column: 15, scope: !7855)
!7874 = !DILocation(line: 152, column: 13, scope: !7855)
!7875 = !DILocation(line: 152, column: 2, scope: !7855)
!7876 = distinct !DISubprogram(name: "strncmp", scope: !7735, file: !7735, line: 162, type: !7877, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7879)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!109, !279, !279, !234}
!7879 = !{!7880, !7881, !7882}
!7880 = !DILocalVariable(name: "s1", arg: 1, scope: !7876, file: !7735, line: 162, type: !279)
!7881 = !DILocalVariable(name: "s2", arg: 2, scope: !7876, file: !7735, line: 162, type: !279)
!7882 = !DILocalVariable(name: "n", arg: 3, scope: !7876, file: !7735, line: 162, type: !234)
!7883 = !DILocation(line: 0, scope: !7876)
!7884 = !DILocation(line: 164, column: 17, scope: !7876)
!7885 = !DILocation(line: 164, column: 21, scope: !7876)
!7886 = !DILocation(line: 164, column: 28, scope: !7876)
!7887 = !DILocation(line: 164, column: 25, scope: !7876)
!7888 = !DILocation(line: 164, column: 33, scope: !7876)
!7889 = !DILocation(line: 165, column: 5, scope: !7890)
!7890 = distinct !DILexicalBlock(scope: !7876, file: !7735, line: 164, column: 51)
!7891 = !DILocation(line: 166, column: 5, scope: !7890)
!7892 = !DILocation(line: 167, column: 4, scope: !7890)
!7893 = distinct !{!7893, !7894, !7895}
!7894 = !DILocation(line: 164, column: 2, scope: !7876)
!7895 = !DILocation(line: 168, column: 2, scope: !7876)
!7896 = !DILocation(line: 170, column: 25, scope: !7876)
!7897 = !DILocation(line: 170, column: 31, scope: !7876)
!7898 = !DILocation(line: 170, column: 29, scope: !7876)
!7899 = !DILocation(line: 170, column: 9, scope: !7876)
!7900 = !DILocation(line: 170, column: 2, scope: !7876)
!7901 = distinct !DISubprogram(name: "strtok_r", scope: !7735, file: !7735, line: 180, type: !7902, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7904)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!285, !285, !279, !284}
!7904 = !{!7905, !7906, !7907, !7908, !7909}
!7905 = !DILocalVariable(name: "str", arg: 1, scope: !7901, file: !7735, line: 180, type: !285)
!7906 = !DILocalVariable(name: "sep", arg: 2, scope: !7901, file: !7735, line: 180, type: !279)
!7907 = !DILocalVariable(name: "state", arg: 3, scope: !7901, file: !7735, line: 180, type: !284)
!7908 = !DILocalVariable(name: "start", scope: !7901, file: !7735, line: 182, type: !285)
!7909 = !DILocalVariable(name: "end", scope: !7901, file: !7735, line: 182, type: !285)
!7910 = !DILocation(line: 0, scope: !7901)
!7911 = !DILocation(line: 184, column: 10, scope: !7901)
!7912 = !DILocation(line: 184, column: 22, scope: !7901)
!7913 = !DILocation(line: 187, column: 9, scope: !7901)
!7914 = !DILocation(line: 187, column: 16, scope: !7901)
!7915 = !DILocation(line: 187, column: 19, scope: !7901)
!7916 = !DILocation(line: 187, column: 2, scope: !7901)
!7917 = !DILocation(line: 188, column: 8, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7901, file: !7735, line: 187, column: 40)
!7919 = distinct !{!7919, !7916, !7920}
!7920 = !DILocation(line: 189, column: 2, scope: !7901)
!7921 = !DILocation(line: 198, column: 9, scope: !7901)
!7922 = !DILocation(line: 198, column: 18, scope: !7901)
!7923 = !DILocation(line: 198, column: 17, scope: !7901)
!7924 = !DILocation(line: 198, column: 2, scope: !7901)
!7925 = !DILocation(line: 199, column: 6, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7901, file: !7735, line: 198, column: 37)
!7927 = !DILocation(line: 198, column: 14, scope: !7901)
!7928 = distinct !{!7928, !7924, !7929}
!7929 = !DILocation(line: 200, column: 2, scope: !7901)
!7930 = !DILocation(line: 203, column: 8, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7932, file: !7735, line: 202, column: 20)
!7932 = distinct !DILexicalBlock(scope: !7901, file: !7735, line: 202, column: 6)
!7933 = !DILocation(line: 204, column: 16, scope: !7931)
!7934 = !DILocation(line: 205, column: 2, scope: !7931)
!7935 = !DILocation(line: 210, column: 1, scope: !7901)
!7936 = distinct !DISubprogram(name: "strcat", scope: !7735, file: !7735, line: 212, type: !7736, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7937)
!7937 = !{!7938, !7939}
!7938 = !DILocalVariable(name: "dest", arg: 1, scope: !7936, file: !7735, line: 212, type: !7738)
!7939 = !DILocalVariable(name: "src", arg: 2, scope: !7936, file: !7735, line: 212, type: !7739)
!7940 = !DILocation(line: 0, scope: !7936)
!7941 = !DILocation(line: 214, column: 16, scope: !7936)
!7942 = !DILocation(line: 214, column: 14, scope: !7936)
!7943 = !DILocation(line: 214, column: 2, scope: !7936)
!7944 = !DILocation(line: 215, column: 2, scope: !7936)
!7945 = distinct !DISubprogram(name: "strncat", scope: !7735, file: !7735, line: 218, type: !7757, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7946)
!7946 = !{!7947, !7948, !7949, !7950, !7951}
!7947 = !DILocalVariable(name: "dest", arg: 1, scope: !7945, file: !7735, line: 218, type: !7738)
!7948 = !DILocalVariable(name: "src", arg: 2, scope: !7945, file: !7735, line: 218, type: !7739)
!7949 = !DILocalVariable(name: "n", arg: 3, scope: !7945, file: !7735, line: 219, type: !234)
!7950 = !DILocalVariable(name: "orig_dest", scope: !7945, file: !7735, line: 221, type: !285)
!7951 = !DILocalVariable(name: "len", scope: !7945, file: !7735, line: 222, type: !234)
!7952 = !DILocation(line: 0, scope: !7945)
!7953 = !DILocation(line: 222, column: 15, scope: !7945)
!7954 = !DILocation(line: 224, column: 7, scope: !7945)
!7955 = !DILocation(line: 225, column: 14, scope: !7945)
!7956 = !DILocation(line: 225, column: 19, scope: !7945)
!7957 = !DILocation(line: 225, column: 11, scope: !7945)
!7958 = !DILocation(line: 225, column: 23, scope: !7945)
!7959 = !DILocation(line: 225, column: 28, scope: !7945)
!7960 = !DILocation(line: 225, column: 2, scope: !7945)
!7961 = !DILocation(line: 226, column: 17, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7945, file: !7735, line: 225, column: 38)
!7963 = !DILocation(line: 226, column: 8, scope: !7962)
!7964 = !DILocation(line: 226, column: 11, scope: !7962)
!7965 = distinct !{!7965, !7960, !7966}
!7966 = !DILocation(line: 227, column: 2, scope: !7945)
!7967 = !DILocation(line: 228, column: 8, scope: !7945)
!7968 = !DILocation(line: 230, column: 2, scope: !7945)
!7969 = distinct !DISubprogram(name: "memcmp", scope: !7735, file: !7735, line: 239, type: !7970, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !7972)
!7970 = !DISubroutineType(types: !7971)
!7971 = !{!109, !13, !13, !234}
!7972 = !{!7973, !7974, !7975, !7976, !7977}
!7973 = !DILocalVariable(name: "m1", arg: 1, scope: !7969, file: !7735, line: 239, type: !13)
!7974 = !DILocalVariable(name: "m2", arg: 2, scope: !7969, file: !7735, line: 239, type: !13)
!7975 = !DILocalVariable(name: "n", arg: 3, scope: !7969, file: !7735, line: 239, type: !234)
!7976 = !DILocalVariable(name: "c1", scope: !7969, file: !7735, line: 241, type: !279)
!7977 = !DILocalVariable(name: "c2", scope: !7969, file: !7735, line: 242, type: !279)
!7978 = !DILocation(line: 0, scope: !7969)
!7979 = !DILocation(line: 244, column: 7, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7969, file: !7735, line: 244, column: 6)
!7981 = !DILocation(line: 244, column: 6, scope: !7969)
!7982 = !DILocation(line: 248, column: 10, scope: !7969)
!7983 = !DILocation(line: 248, column: 14, scope: !7969)
!7984 = !DILocation(line: 248, column: 19, scope: !7969)
!7985 = !DILocation(line: 248, column: 2, scope: !7969)
!7986 = !DILocation(line: 248, column: 23, scope: !7969)
!7987 = !DILocation(line: 248, column: 30, scope: !7969)
!7988 = !DILocation(line: 248, column: 27, scope: !7969)
!7989 = !DILocation(line: 249, column: 5, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7969, file: !7735, line: 248, column: 36)
!7991 = !DILocation(line: 250, column: 5, scope: !7990)
!7992 = distinct !{!7992, !7985, !7993}
!7993 = !DILocation(line: 251, column: 2, scope: !7969)
!7994 = !DILocation(line: 253, column: 9, scope: !7969)
!7995 = !DILocation(line: 253, column: 15, scope: !7969)
!7996 = !DILocation(line: 253, column: 13, scope: !7969)
!7997 = !DILocation(line: 253, column: 2, scope: !7969)
!7998 = !DILocation(line: 254, column: 1, scope: !7969)
!7999 = distinct !DISubprogram(name: "memmove", scope: !7735, file: !7735, line: 263, type: !8000, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !8002)
!8000 = !DISubroutineType(types: !8001)
!8001 = !{!107, !107, !13, !234}
!8002 = !{!8003, !8004, !8005, !8006, !8007}
!8003 = !DILocalVariable(name: "d", arg: 1, scope: !7999, file: !7735, line: 263, type: !107)
!8004 = !DILocalVariable(name: "s", arg: 2, scope: !7999, file: !7735, line: 263, type: !13)
!8005 = !DILocalVariable(name: "n", arg: 3, scope: !7999, file: !7735, line: 263, type: !234)
!8006 = !DILocalVariable(name: "dest", scope: !7999, file: !7735, line: 265, type: !285)
!8007 = !DILocalVariable(name: "src", scope: !7999, file: !7735, line: 266, type: !279)
!8008 = !DILocation(line: 0, scope: !7999)
!8009 = !DILocation(line: 268, column: 21, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7999, file: !7735, line: 268, column: 6)
!8011 = !DILocation(line: 268, column: 28, scope: !8010)
!8012 = !DILocation(line: 268, column: 6, scope: !7999)
!8013 = !DILocation(line: 280, column: 12, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8010, file: !7735, line: 278, column: 9)
!8015 = !DILocation(line: 280, column: 3, scope: !8014)
!8016 = !DILocation(line: 275, column: 5, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !7735, line: 274, column: 17)
!8018 = distinct !DILexicalBlock(scope: !8010, file: !7735, line: 268, column: 33)
!8019 = !DILocation(line: 276, column: 14, scope: !8017)
!8020 = !DILocation(line: 276, column: 4, scope: !8017)
!8021 = !DILocation(line: 276, column: 12, scope: !8017)
!8022 = !DILocation(line: 274, column: 12, scope: !8018)
!8023 = !DILocation(line: 274, column: 3, scope: !8018)
!8024 = distinct !{!8024, !8023, !8025}
!8025 = !DILocation(line: 277, column: 3, scope: !8018)
!8026 = !DILocation(line: 281, column: 12, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8014, file: !7735, line: 280, column: 17)
!8028 = !DILocation(line: 281, column: 10, scope: !8027)
!8029 = !DILocation(line: 282, column: 8, scope: !8027)
!8030 = !DILocation(line: 283, column: 7, scope: !8027)
!8031 = !DILocation(line: 284, column: 5, scope: !8027)
!8032 = distinct !{!8032, !8015, !8033}
!8033 = !DILocation(line: 285, column: 3, scope: !8014)
!8034 = !DILocation(line: 288, column: 2, scope: !7999)
!8035 = distinct !DISubprogram(name: "memcpy", scope: !7735, file: !7735, line: 298, type: !8036, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !8040)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{!107, !8038, !8039, !234}
!8038 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8039 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8040 = !{!8041, !8042, !8043, !8044, !8045}
!8041 = !DILocalVariable(name: "d", arg: 1, scope: !8035, file: !7735, line: 298, type: !8038)
!8042 = !DILocalVariable(name: "s", arg: 2, scope: !8035, file: !7735, line: 298, type: !8039)
!8043 = !DILocalVariable(name: "n", arg: 3, scope: !8035, file: !7735, line: 298, type: !234)
!8044 = !DILocalVariable(name: "d_byte", scope: !8035, file: !7735, line: 302, type: !1046)
!8045 = !DILocalVariable(name: "s_byte", scope: !8035, file: !7735, line: 303, type: !2875)
!8046 = !DILocation(line: 0, scope: !8035)
!8047 = !DILocation(line: 337, column: 11, scope: !8035)
!8048 = !DILocation(line: 337, column: 2, scope: !8035)
!8049 = !DILocation(line: 338, column: 25, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8035, file: !7735, line: 337, column: 16)
!8051 = !DILocation(line: 338, column: 17, scope: !8050)
!8052 = !DILocation(line: 338, column: 11, scope: !8050)
!8053 = !DILocation(line: 338, column: 15, scope: !8050)
!8054 = !DILocation(line: 339, column: 4, scope: !8050)
!8055 = distinct !{!8055, !8048, !8056}
!8056 = !DILocation(line: 340, column: 2, scope: !8035)
!8057 = !DILocation(line: 342, column: 2, scope: !8035)
!8058 = distinct !DISubprogram(name: "memset", scope: !7735, file: !7735, line: 352, type: !8059, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !8061)
!8059 = !DISubroutineType(types: !8060)
!8060 = !{!107, !107, !109, !234}
!8061 = !{!8062, !8063, !8064, !8065, !8066}
!8062 = !DILocalVariable(name: "buf", arg: 1, scope: !8058, file: !7735, line: 352, type: !107)
!8063 = !DILocalVariable(name: "c", arg: 2, scope: !8058, file: !7735, line: 352, type: !109)
!8064 = !DILocalVariable(name: "n", arg: 3, scope: !8058, file: !7735, line: 352, type: !234)
!8065 = !DILocalVariable(name: "d_byte", scope: !8058, file: !7735, line: 356, type: !1046)
!8066 = !DILocalVariable(name: "c_byte", scope: !8058, file: !7735, line: 357, type: !181)
!8067 = !DILocation(line: 0, scope: !8058)
!8068 = !DILocation(line: 357, column: 25, scope: !8058)
!8069 = !DILocation(line: 389, column: 11, scope: !8058)
!8070 = !DILocation(line: 389, column: 2, scope: !8058)
!8071 = !DILocation(line: 390, column: 11, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8058, file: !7735, line: 389, column: 16)
!8073 = !DILocation(line: 390, column: 15, scope: !8072)
!8074 = !DILocation(line: 391, column: 4, scope: !8072)
!8075 = distinct !{!8075, !8070, !8076}
!8076 = !DILocation(line: 392, column: 2, scope: !8058)
!8077 = !DILocation(line: 394, column: 2, scope: !8058)
!8078 = distinct !DISubprogram(name: "memchr", scope: !7735, file: !7735, line: 404, type: !8079, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !8081)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{!107, !13, !109, !234}
!8081 = !{!8082, !8083, !8084, !8085}
!8082 = !DILocalVariable(name: "s", arg: 1, scope: !8078, file: !7735, line: 404, type: !13)
!8083 = !DILocalVariable(name: "c", arg: 2, scope: !8078, file: !7735, line: 404, type: !109)
!8084 = !DILocalVariable(name: "n", arg: 3, scope: !8078, file: !7735, line: 404, type: !234)
!8085 = !DILocalVariable(name: "p", scope: !8086, file: !7735, line: 407, type: !2875)
!8086 = distinct !DILexicalBlock(scope: !8087, file: !7735, line: 406, column: 14)
!8087 = distinct !DILexicalBlock(scope: !8078, file: !7735, line: 406, column: 6)
!8088 = !DILocation(line: 0, scope: !8078)
!8089 = !DILocation(line: 406, column: 8, scope: !8087)
!8090 = !DILocation(line: 406, column: 6, scope: !8078)
!8091 = !DILocation(line: 409, column: 3, scope: !8086)
!8092 = !DILocation(line: 0, scope: !8086)
!8093 = !DILocation(line: 410, column: 8, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !7735, line: 410, column: 8)
!8095 = distinct !DILexicalBlock(scope: !8086, file: !7735, line: 409, column: 6)
!8096 = !DILocation(line: 410, column: 13, scope: !8094)
!8097 = !DILocation(line: 410, column: 8, scope: !8095)
!8098 = distinct !{!8098, !8091, !8099}
!8099 = !DILocation(line: 414, column: 20, scope: !8086)
!8100 = !DILocation(line: 417, column: 2, scope: !8078)
!8101 = !DILocation(line: 418, column: 1, scope: !8078)
!8102 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !586, file: !586, line: 23, type: !4278, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8103)
!8103 = !{!8104}
!8104 = !DILocalVariable(name: "hook", arg: 1, scope: !8102, file: !586, line: 23, type: !302)
!8105 = !DILocation(line: 0, scope: !8102)
!8106 = !DILocation(line: 25, column: 15, scope: !8102)
!8107 = !DILocation(line: 26, column: 1, scope: !8102)
!8108 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !586, file: !586, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8109)
!8109 = !{!8110}
!8110 = !DILocalVariable(name: "c", arg: 1, scope: !8108, file: !586, line: 14, type: !109)
!8111 = !DILocation(line: 0, scope: !8108)
!8112 = !DILocation(line: 18, column: 2, scope: !8108)
!8113 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !586, file: !586, line: 28, type: !8114, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8116)
!8114 = !DISubroutineType(types: !8115)
!8115 = !{!109, !109, !582}
!8116 = !{!8117, !8118}
!8117 = !DILocalVariable(name: "c", arg: 1, scope: !8113, file: !586, line: 28, type: !109)
!8118 = !DILocalVariable(name: "stream", arg: 2, scope: !8113, file: !586, line: 28, type: !582)
!8119 = !DILocation(line: 0, scope: !8113)
!8120 = !DILocation(line: 30, column: 27, scope: !8113)
!8121 = !DILocation(line: 30, column: 50, scope: !8113)
!8122 = !DILocation(line: 30, column: 9, scope: !8113)
!8123 = !DILocation(line: 30, column: 2, scope: !8113)
!8124 = distinct !DISubprogram(name: "fputc", scope: !586, file: !586, line: 41, type: !8114, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8125)
!8125 = !{!8126, !8127}
!8126 = !DILocalVariable(name: "c", arg: 1, scope: !8124, file: !586, line: 41, type: !109)
!8127 = !DILocalVariable(name: "stream", arg: 2, scope: !8124, file: !586, line: 41, type: !582)
!8128 = !DILocation(line: 0, scope: !8124)
!8129 = !DILocation(line: 43, column: 9, scope: !8124)
!8130 = !DILocation(line: 43, column: 2, scope: !8124)
!8131 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8132, file: !8132, line: 72, type: !8114, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8133)
!8132 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!8133 = !{!8134, !8135}
!8134 = !DILocalVariable(name: "c", arg: 1, scope: !8131, file: !8132, line: 72, type: !109)
!8135 = !DILocalVariable(name: "stream", arg: 2, scope: !8131, file: !8132, line: 72, type: !582)
!8136 = !DILocation(line: 0, scope: !8131)
!8137 = !DILocation(line: 81, column: 2, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8131, file: !8132, line: 81, column: 2)
!8139 = !{i64 2152286406}
!8140 = !DILocation(line: 82, column: 9, scope: !8131)
!8141 = !DILocation(line: 82, column: 2, scope: !8131)
!8142 = distinct !DISubprogram(name: "fputs", scope: !586, file: !586, line: 46, type: !8143, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8146)
!8143 = !DISubroutineType(types: !8144)
!8144 = !{!109, !7739, !8145}
!8145 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !582)
!8146 = !{!8147, !8148, !8149, !8150}
!8147 = !DILocalVariable(name: "s", arg: 1, scope: !8142, file: !586, line: 46, type: !7739)
!8148 = !DILocalVariable(name: "stream", arg: 2, scope: !8142, file: !586, line: 46, type: !8145)
!8149 = !DILocalVariable(name: "len", scope: !8142, file: !586, line: 48, type: !109)
!8150 = !DILocalVariable(name: "ret", scope: !8142, file: !586, line: 49, type: !109)
!8151 = !DILocation(line: 0, scope: !8142)
!8152 = !DILocation(line: 48, column: 12, scope: !8142)
!8153 = !DILocation(line: 51, column: 8, scope: !8142)
!8154 = !DILocation(line: 53, column: 13, scope: !8142)
!8155 = !DILocation(line: 53, column: 9, scope: !8142)
!8156 = !DILocation(line: 53, column: 2, scope: !8142)
!8157 = distinct !DISubprogram(name: "fwrite", scope: !586, file: !586, line: 99, type: !8158, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{!234, !8039, !234, !234, !8145}
!8160 = !{!8161, !8162, !8163, !8164}
!8161 = !DILocalVariable(name: "ptr", arg: 1, scope: !8157, file: !586, line: 99, type: !8039)
!8162 = !DILocalVariable(name: "size", arg: 2, scope: !8157, file: !586, line: 99, type: !234)
!8163 = !DILocalVariable(name: "nitems", arg: 3, scope: !8157, file: !586, line: 99, type: !234)
!8164 = !DILocalVariable(name: "stream", arg: 4, scope: !8157, file: !586, line: 100, type: !8145)
!8165 = !DILocation(line: 0, scope: !8157)
!8166 = !DILocation(line: 102, column: 9, scope: !8157)
!8167 = !DILocation(line: 102, column: 2, scope: !8157)
!8168 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8132, file: !8132, line: 96, type: !8158, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8169)
!8169 = !{!8170, !8171, !8172, !8173}
!8170 = !DILocalVariable(name: "ptr", arg: 1, scope: !8168, file: !8132, line: 96, type: !8039)
!8171 = !DILocalVariable(name: "size", arg: 2, scope: !8168, file: !8132, line: 96, type: !234)
!8172 = !DILocalVariable(name: "nitems", arg: 3, scope: !8168, file: !8132, line: 96, type: !234)
!8173 = !DILocalVariable(name: "stream", arg: 4, scope: !8168, file: !8132, line: 96, type: !8145)
!8174 = !DILocation(line: 0, scope: !8168)
!8175 = !DILocation(line: 107, column: 2, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8168, file: !8132, line: 107, column: 2)
!8177 = !{i64 2152286510}
!8178 = !DILocation(line: 108, column: 9, scope: !8168)
!8179 = !DILocation(line: 108, column: 2, scope: !8168)
!8180 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !586, file: !586, line: 56, type: !8158, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8181)
!8181 = !{!8182, !8183, !8184, !8185, !8186, !8187, !8188, !8189}
!8182 = !DILocalVariable(name: "ptr", arg: 1, scope: !8180, file: !586, line: 56, type: !8039)
!8183 = !DILocalVariable(name: "size", arg: 2, scope: !8180, file: !586, line: 56, type: !234)
!8184 = !DILocalVariable(name: "nitems", arg: 3, scope: !8180, file: !586, line: 57, type: !234)
!8185 = !DILocalVariable(name: "stream", arg: 4, scope: !8180, file: !586, line: 57, type: !8145)
!8186 = !DILocalVariable(name: "i", scope: !8180, file: !586, line: 59, type: !234)
!8187 = !DILocalVariable(name: "j", scope: !8180, file: !586, line: 60, type: !234)
!8188 = !DILocalVariable(name: "p", scope: !8180, file: !586, line: 61, type: !2875)
!8189 = !DILabel(scope: !8180, name: "done", file: !586, line: 82)
!8190 = !DILocation(line: 0, scope: !8180)
!8191 = !DILocation(line: 63, column: 14, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8180, file: !586, line: 63, column: 6)
!8193 = !DILocation(line: 63, column: 24, scope: !8192)
!8194 = !DILocation(line: 72, column: 3, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8180, file: !586, line: 70, column: 5)
!8196 = !DILocation(line: 0, scope: !8195)
!8197 = !DILocation(line: 73, column: 8, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8199, file: !586, line: 73, column: 8)
!8199 = distinct !DILexicalBlock(scope: !8195, file: !586, line: 72, column: 6)
!8200 = !DILocation(line: 73, column: 29, scope: !8198)
!8201 = !DILocation(line: 73, column: 27, scope: !8198)
!8202 = !DILocation(line: 73, column: 21, scope: !8198)
!8203 = !DILocation(line: 73, column: 33, scope: !8198)
!8204 = !DILocation(line: 73, column: 8, scope: !8199)
!8205 = !DILocation(line: 76, column: 5, scope: !8199)
!8206 = !DILocation(line: 77, column: 14, scope: !8195)
!8207 = !DILocation(line: 77, column: 3, scope: !8199)
!8208 = distinct !{!8208, !8194, !8209}
!8209 = !DILocation(line: 77, column: 17, scope: !8195)
!8210 = !DILocation(line: 79, column: 4, scope: !8195)
!8211 = !DILocation(line: 80, column: 13, scope: !8180)
!8212 = !DILocation(line: 80, column: 2, scope: !8195)
!8213 = distinct !{!8213, !8214, !8215}
!8214 = !DILocation(line: 70, column: 2, scope: !8180)
!8215 = !DILocation(line: 80, column: 16, scope: !8180)
!8216 = !DILocation(line: 82, column: 1, scope: !8180)
!8217 = !DILocation(line: 83, column: 17, scope: !8180)
!8218 = !DILocation(line: 83, column: 2, scope: !8180)
!8219 = !DILocation(line: 84, column: 1, scope: !8180)
!8220 = distinct !DISubprogram(name: "puts", scope: !586, file: !586, line: 106, type: !8221, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !579, retainedNodes: !8223)
!8221 = !DISubroutineType(types: !8222)
!8222 = !{!109, !279}
!8223 = !{!8224}
!8224 = !DILocalVariable(name: "s", arg: 1, scope: !8220, file: !586, line: 106, type: !279)
!8225 = !DILocation(line: 0, scope: !8220)
!8226 = !DILocation(line: 108, column: 6, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8220, file: !586, line: 108, column: 6)
!8228 = !DILocation(line: 108, column: 23, scope: !8227)
!8229 = !DILocation(line: 108, column: 6, scope: !8220)
!8230 = !DILocation(line: 112, column: 9, scope: !8220)
!8231 = !DILocation(line: 112, column: 29, scope: !8220)
!8232 = !DILocation(line: 112, column: 2, scope: !8220)
!8233 = !DILocation(line: 113, column: 1, scope: !8220)
!8234 = distinct !DISubprogram(name: "rf_init", scope: !711, file: !711, line: 10, type: !717, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8235)
!8235 = !{!8236, !8237, !8245, !8246}
!8236 = !DILocalVariable(name: "dev", arg: 1, scope: !8234, file: !711, line: 10, type: !637)
!8237 = !DILocalVariable(name: "rf1", scope: !8234, file: !711, line: 12, type: !8238)
!8238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8239)
!8239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !618, line: 271, size: 64, elements: !8240)
!8240 = !{!8241, !8242, !8243}
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8239, file: !618, line: 273, baseType: !637, size: 32)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8239, file: !618, line: 275, baseType: !652, size: 8, offset: 32)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !8239, file: !618, line: 277, baseType: !8244, size: 16, offset: 48)
!8244 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !618, line: 249, baseType: !194)
!8245 = !DILocalVariable(name: "rf2", scope: !8234, file: !711, line: 14, type: !8238)
!8246 = !DILocalVariable(name: "rf3", scope: !8234, file: !711, line: 16, type: !8238)
!8247 = !DILocation(line: 0, scope: !8234)
!8248 = !DILocation(line: 12, column: 2, scope: !8234)
!8249 = !DILocation(line: 12, column: 28, scope: !8234)
!8250 = !DILocation(line: 14, column: 2, scope: !8234)
!8251 = !DILocation(line: 14, column: 28, scope: !8234)
!8252 = !DILocation(line: 16, column: 2, scope: !8234)
!8253 = !DILocation(line: 16, column: 28, scope: !8234)
!8254 = !DILocation(line: 22, column: 27, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8234, file: !711, line: 22, column: 6)
!8256 = !DILocation(line: 22, column: 7, scope: !8255)
!8257 = !DILocation(line: 22, column: 33, scope: !8255)
!8258 = !DILocation(line: 23, column: 7, scope: !8255)
!8259 = !DILocation(line: 23, column: 33, scope: !8255)
!8260 = !DILocation(line: 24, column: 7, scope: !8255)
!8261 = !DILocation(line: 22, column: 6, scope: !8234)
!8262 = !DILocation(line: 28, column: 8, scope: !8234)
!8263 = !DILocation(line: 29, column: 8, scope: !8234)
!8264 = !DILocation(line: 30, column: 8, scope: !8234)
!8265 = !DILocation(line: 32, column: 2, scope: !8234)
!8266 = !DILocation(line: 33, column: 1, scope: !8234)
!8267 = distinct !DISubprogram(name: "device_is_ready", scope: !8268, file: !8268, line: 47, type: !8269, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8271)
!8268 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!8269 = !DISubroutineType(types: !8270)
!8270 = !{!360, !637}
!8271 = !{!8272}
!8272 = !DILocalVariable(name: "dev", arg: 1, scope: !8267, file: !8268, line: 47, type: !637)
!8273 = !DILocation(line: 0, scope: !8267)
!8274 = !DILocation(line: 55, column: 2, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8267, file: !8268, line: 55, column: 2)
!8276 = !{i64 2148930324}
!8277 = !DILocation(line: 56, column: 9, scope: !8267)
!8278 = !DILocation(line: 56, column: 2, scope: !8267)
!8279 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !618, file: !618, line: 731, type: !8280, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8283)
!8280 = !DISubroutineType(types: !8281)
!8281 = !{!109, !8282, !653}
!8282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8238, size: 32)
!8283 = !{!8284, !8285}
!8284 = !DILocalVariable(name: "spec", arg: 1, scope: !8279, file: !618, line: 731, type: !8282)
!8285 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !8279, file: !618, line: 732, type: !653)
!8286 = !DILocation(line: 0, scope: !8279)
!8287 = !DILocation(line: 734, column: 34, scope: !8279)
!8288 = !DILocation(line: 735, column: 13, scope: !8279)
!8289 = !DILocation(line: 736, column: 13, scope: !8279)
!8290 = !DILocation(line: 736, column: 7, scope: !8279)
!8291 = !DILocation(line: 736, column: 22, scope: !8279)
!8292 = !DILocation(line: 734, column: 9, scope: !8279)
!8293 = !DILocation(line: 734, column: 2, scope: !8279)
!8294 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !8295, file: !8295, line: 49, type: !635, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8296)
!8295 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!8296 = !{!8297, !8298, !8299}
!8297 = !DILocalVariable(name: "port", arg: 1, scope: !8294, file: !8295, line: 49, type: !637)
!8298 = !DILocalVariable(name: "pin", arg: 2, scope: !8294, file: !8295, line: 49, type: !652)
!8299 = !DILocalVariable(name: "flags", arg: 3, scope: !8294, file: !8295, line: 49, type: !653)
!8300 = !DILocation(line: 0, scope: !8294)
!8301 = !DILocation(line: 59, column: 2, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8294, file: !8295, line: 59, column: 2)
!8303 = !{i64 2148980418}
!8304 = !DILocation(line: 60, column: 9, scope: !8294)
!8305 = !DILocation(line: 60, column: 2, scope: !8294)
!8306 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !618, file: !618, line: 667, type: !635, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8307)
!8307 = !{!8308, !8309, !8310, !8311, !8312, !8314}
!8308 = !DILocalVariable(name: "port", arg: 1, scope: !8306, file: !618, line: 667, type: !637)
!8309 = !DILocalVariable(name: "pin", arg: 2, scope: !8306, file: !618, line: 668, type: !652)
!8310 = !DILocalVariable(name: "flags", arg: 3, scope: !8306, file: !618, line: 669, type: !653)
!8311 = !DILocalVariable(name: "api", scope: !8306, file: !618, line: 671, type: !629)
!8312 = !DILocalVariable(name: "cfg", scope: !8306, file: !618, line: 673, type: !8313)
!8313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !699)
!8314 = !DILocalVariable(name: "data", scope: !8306, file: !618, line: 675, type: !709)
!8315 = !DILocation(line: 0, scope: !8306)
!8316 = !DILocation(line: 672, column: 41, scope: !8306)
!8317 = !DILocation(line: 674, column: 44, scope: !8306)
!8318 = !DILocation(line: 676, column: 36, scope: !8306)
!8319 = !DILocation(line: 678, column: 2, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8321, file: !618, line: 678, column: 2)
!8321 = distinct !DILexicalBlock(scope: !8306, file: !618, line: 678, column: 2)
!8322 = !DILocation(line: 678, column: 2, scope: !8321)
!8323 = !DILocation(line: 678, column: 2, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8320, file: !618, line: 678, column: 2)
!8325 = !DILocation(line: 681, column: 2, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8327, file: !618, line: 681, column: 2)
!8327 = distinct !DILexicalBlock(scope: !8306, file: !618, line: 681, column: 2)
!8328 = !DILocation(line: 681, column: 2, scope: !8327)
!8329 = !DILocation(line: 681, column: 2, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8326, file: !618, line: 681, column: 2)
!8331 = !DILocation(line: 685, column: 2, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !618, line: 685, column: 2)
!8333 = distinct !DILexicalBlock(scope: !8306, file: !618, line: 685, column: 2)
!8334 = !DILocation(line: 685, column: 2, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8332, file: !618, line: 685, column: 2)
!8336 = !DILocation(line: 689, column: 2, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !618, line: 689, column: 2)
!8338 = distinct !DILexicalBlock(scope: !8306, file: !618, line: 689, column: 2)
!8339 = !DILocation(line: 689, column: 2, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8337, file: !618, line: 689, column: 2)
!8341 = !DILocation(line: 692, column: 2, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !618, line: 692, column: 2)
!8343 = distinct !DILexicalBlock(scope: !8306, file: !618, line: 692, column: 2)
!8344 = !DILocation(line: 692, column: 2, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8342, file: !618, line: 692, column: 2)
!8346 = !DILocation(line: 696, column: 2, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !618, line: 696, column: 2)
!8348 = distinct !DILexicalBlock(scope: !8306, file: !618, line: 696, column: 2)
!8349 = !DILocation(line: 696, column: 2, scope: !8348)
!8350 = !DILocation(line: 696, column: 2, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8347, file: !618, line: 696, column: 2)
!8352 = !DILocation(line: 701, column: 6, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8306, file: !618, line: 700, column: 6)
!8354 = !DILocation(line: 708, column: 2, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8356, file: !618, line: 708, column: 2)
!8356 = distinct !DILexicalBlock(scope: !8306, file: !618, line: 708, column: 2)
!8357 = !DILocation(line: 708, column: 2, scope: !8356)
!8358 = !DILocation(line: 708, column: 2, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8355, file: !618, line: 708, column: 2)
!8360 = !DILocation(line: 711, column: 13, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8306, file: !618, line: 711, column: 6)
!8362 = !DILocation(line: 711, column: 32, scope: !8361)
!8363 = !DILocation(line: 711, column: 6, scope: !8306)
!8364 = !DILocation(line: 712, column: 9, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8361, file: !618, line: 711, column: 38)
!8366 = !DILocation(line: 712, column: 16, scope: !8365)
!8367 = !DILocation(line: 713, column: 2, scope: !8365)
!8368 = !DILocation(line: 714, column: 19, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8361, file: !618, line: 713, column: 9)
!8370 = !DILocation(line: 714, column: 9, scope: !8369)
!8371 = !DILocation(line: 714, column: 16, scope: !8369)
!8372 = !DILocation(line: 706, column: 8, scope: !8306)
!8373 = !DILocation(line: 717, column: 14, scope: !8306)
!8374 = !DILocation(line: 717, column: 9, scope: !8306)
!8375 = !DILocation(line: 717, column: 2, scope: !8306)
!8376 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !8269, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !614, retainedNodes: !8377)
!8377 = !{!8378}
!8378 = !DILocalVariable(name: "dev", arg: 1, scope: !8376, file: !349, line: 730, type: !637)
!8379 = !DILocation(line: 0, scope: !8376)
!8380 = !DILocation(line: 732, column: 9, scope: !8376)
!8381 = !DILocation(line: 732, column: 2, scope: !8376)
!8382 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !794, file: !794, line: 368, type: !847, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8383)
!8383 = !{!8384}
!8384 = !DILocalVariable(name: "dev", arg: 1, scope: !8382, file: !794, line: 368, type: !823)
!8385 = !DILocation(line: 0, scope: !8382)
!8386 = !DILocation(line: 370, column: 2, scope: !8382)
!8387 = !DILocation(line: 371, column: 1, scope: !8382)
!8388 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !794, file: !794, line: 243, type: !8389, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8391)
!8389 = !DISubroutineType(types: !8390)
!8390 = !{null, !109, !109, !823}
!8391 = !{!8392, !8393, !8394, !8395, !8397}
!8392 = !DILocalVariable(name: "min", arg: 1, scope: !8388, file: !794, line: 243, type: !109)
!8393 = !DILocalVariable(name: "max", arg: 2, scope: !8388, file: !794, line: 243, type: !109)
!8394 = !DILocalVariable(name: "dev", arg: 3, scope: !8388, file: !794, line: 243, type: !823)
!8395 = !DILocalVariable(name: "data", scope: !8388, file: !794, line: 245, type: !8396)
!8396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!8397 = !DILocalVariable(name: "line", scope: !8388, file: !794, line: 246, type: !109)
!8398 = !DILocation(line: 0, scope: !8388)
!8399 = !DILocation(line: 245, column: 38, scope: !8388)
!8400 = !DILocation(line: 249, column: 24, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !794, line: 249, column: 2)
!8402 = distinct !DILexicalBlock(scope: !8388, file: !794, line: 249, column: 2)
!8403 = !DILocation(line: 249, column: 2, scope: !8402)
!8404 = !DILocation(line: 251, column: 7, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !794, line: 251, column: 7)
!8406 = distinct !DILexicalBlock(scope: !8401, file: !794, line: 249, column: 39)
!8407 = !DILocation(line: 251, column: 7, scope: !8406)
!8408 = !DILocation(line: 253, column: 4, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8405, file: !794, line: 251, column: 36)
!8410 = !DILocation(line: 256, column: 24, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8409, file: !794, line: 256, column: 8)
!8412 = !DILocation(line: 256, column: 9, scope: !8411)
!8413 = !DILocation(line: 256, column: 8, scope: !8409)
!8414 = !DILocation(line: 260, column: 43, scope: !8409)
!8415 = !DILocation(line: 260, column: 4, scope: !8409)
!8416 = !DILocation(line: 261, column: 3, scope: !8409)
!8417 = !DILocation(line: 249, column: 35, scope: !8401)
!8418 = distinct !{!8418, !8403, !8419}
!8419 = !DILocation(line: 262, column: 2, scope: !8402)
!8420 = !DILocation(line: 263, column: 1, scope: !8388)
!8421 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !794, file: !794, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8422)
!8422 = !{!8423}
!8423 = !DILocalVariable(name: "line", arg: 1, scope: !8421, file: !794, line: 158, type: !109)
!8424 = !DILocation(line: 0, scope: !8421)
!8425 = !DILocation(line: 170, column: 38, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !794, line: 160, column: 17)
!8427 = distinct !DILexicalBlock(scope: !8421, file: !794, line: 160, column: 6)
!8428 = !DILocation(line: 170, column: 10, scope: !8426)
!8429 = !DILocation(line: 176, column: 1, scope: !8421)
!8430 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !794, file: !794, line: 183, type: !8431, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8433)
!8431 = !DISubroutineType(types: !8432)
!8432 = !{null, !109}
!8433 = !{!8434}
!8434 = !DILocalVariable(name: "line", arg: 1, scope: !8430, file: !794, line: 183, type: !109)
!8435 = !DILocation(line: 0, scope: !8430)
!8436 = !DILocation(line: 195, column: 28, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !794, line: 185, column: 17)
!8438 = distinct !DILexicalBlock(scope: !8430, file: !794, line: 185, column: 6)
!8439 = !DILocation(line: 195, column: 3, scope: !8437)
!8440 = !DILocation(line: 200, column: 1, scope: !8430)
!8441 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8442, file: !8442, line: 971, type: !6070, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8443)
!8442 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8443 = !{!8444}
!8444 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8441, file: !8442, line: 971, type: !110)
!8445 = !DILocation(line: 0, scope: !8441)
!8446 = !DILocation(line: 973, column: 3, scope: !8441)
!8447 = !DILocation(line: 974, column: 1, scope: !8441)
!8448 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8442, file: !8442, line: 891, type: !7630, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8449)
!8449 = !{!8450}
!8450 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8448, file: !8442, line: 891, type: !110)
!8451 = !DILocation(line: 0, scope: !8448)
!8452 = !DILocation(line: 893, column: 11, scope: !8448)
!8453 = !DILocation(line: 893, column: 40, scope: !8448)
!8454 = !DILocation(line: 893, column: 3, scope: !8448)
!8455 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !794, file: !794, line: 304, type: !847, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8456)
!8456 = !{!8457}
!8457 = !DILocalVariable(name: "dev", arg: 1, scope: !8455, file: !794, line: 304, type: !823)
!8458 = !DILocation(line: 0, scope: !8455)
!8459 = !DILocation(line: 306, column: 2, scope: !8455)
!8460 = !DILocation(line: 307, column: 1, scope: !8455)
!8461 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !794, file: !794, line: 299, type: !847, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8462)
!8462 = !{!8463}
!8463 = !DILocalVariable(name: "dev", arg: 1, scope: !8461, file: !794, line: 299, type: !823)
!8464 = !DILocation(line: 0, scope: !8461)
!8465 = !DILocation(line: 301, column: 2, scope: !8461)
!8466 = !DILocation(line: 302, column: 1, scope: !8461)
!8467 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !794, file: !794, line: 294, type: !847, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8468)
!8468 = !{!8469}
!8469 = !DILocalVariable(name: "dev", arg: 1, scope: !8467, file: !794, line: 294, type: !823)
!8470 = !DILocation(line: 0, scope: !8467)
!8471 = !DILocation(line: 296, column: 2, scope: !8467)
!8472 = !DILocation(line: 297, column: 1, scope: !8467)
!8473 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !794, file: !794, line: 289, type: !847, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8474)
!8474 = !{!8475}
!8475 = !DILocalVariable(name: "dev", arg: 1, scope: !8473, file: !794, line: 289, type: !823)
!8476 = !DILocation(line: 0, scope: !8473)
!8477 = !DILocation(line: 291, column: 2, scope: !8473)
!8478 = !DILocation(line: 292, column: 1, scope: !8473)
!8479 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !794, file: !794, line: 373, type: !847, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8480)
!8480 = !{!8481}
!8481 = !DILocalVariable(name: "dev", arg: 1, scope: !8479, file: !794, line: 373, type: !823)
!8482 = !DILocation(line: 0, scope: !8479)
!8483 = !DILocation(line: 375, column: 2, scope: !8479)
!8484 = !DILocation(line: 376, column: 1, scope: !8479)
!8485 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !794, file: !794, line: 284, type: !847, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8486)
!8486 = !{!8487}
!8487 = !DILocalVariable(name: "dev", arg: 1, scope: !8485, file: !794, line: 284, type: !823)
!8488 = !DILocation(line: 0, scope: !8485)
!8489 = !DILocation(line: 286, column: 2, scope: !8485)
!8490 = !DILocation(line: 287, column: 1, scope: !8485)
!8491 = distinct !DISubprogram(name: "stm32_exti_init", scope: !794, file: !794, line: 416, type: !821, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8492)
!8492 = !{!8493}
!8493 = !DILocalVariable(name: "dev", arg: 1, scope: !8491, file: !794, line: 416, type: !823)
!8494 = !DILocation(line: 0, scope: !8491)
!8495 = !DILocation(line: 418, column: 2, scope: !8491)
!8496 = !DILocation(line: 420, column: 2, scope: !8491)
!8497 = !DILocation(line: 0, scope: !846)
!8498 = !DILocation(line: 493, column: 2, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !846, file: !794, line: 493, column: 2)
!8500 = !DILocation(line: 497, column: 2, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !846, file: !794, line: 497, column: 2)
!8502 = !DILocation(line: 507, column: 2, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !846, file: !794, line: 507, column: 2)
!8504 = !DILocation(line: 512, column: 2, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !846, file: !794, line: 512, column: 2)
!8506 = !DILocation(line: 516, column: 2, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !846, file: !794, line: 516, column: 2)
!8508 = !DILocation(line: 523, column: 2, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !846, file: !794, line: 523, column: 2)
!8510 = !DILocation(line: 527, column: 2, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !846, file: !794, line: 527, column: 2)
!8512 = !DILocation(line: 607, column: 1, scope: !846)
!8513 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !794, file: !794, line: 112, type: !8431, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8514)
!8514 = !{!8515, !8516}
!8515 = !DILocalVariable(name: "line", arg: 1, scope: !8513, file: !794, line: 112, type: !109)
!8516 = !DILocalVariable(name: "irqnum", scope: !8513, file: !794, line: 114, type: !109)
!8517 = !DILocation(line: 0, scope: !8513)
!8518 = !DILocation(line: 121, column: 11, scope: !8513)
!8519 = !DILocation(line: 130, column: 26, scope: !8513)
!8520 = !DILocation(line: 130, column: 2, scope: !8513)
!8521 = !DILocation(line: 134, column: 2, scope: !8513)
!8522 = !DILocation(line: 135, column: 1, scope: !8513)
!8523 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8442, file: !8442, line: 274, type: !6070, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8524)
!8524 = !{!8525}
!8525 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8523, file: !8442, line: 274, type: !110)
!8526 = !DILocation(line: 0, scope: !8523)
!8527 = !DILocation(line: 276, column: 3, scope: !8523)
!8528 = !DILocation(line: 277, column: 1, scope: !8523)
!8529 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !794, file: !794, line: 137, type: !8431, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8530)
!8530 = !{!8531}
!8531 = !DILocalVariable(name: "line", arg: 1, scope: !8529, file: !794, line: 137, type: !109)
!8532 = !DILocation(line: 0, scope: !8529)
!8533 = !DILocation(line: 141, column: 11, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8529, file: !794, line: 141, column: 6)
!8535 = !DILocation(line: 141, column: 6, scope: !8529)
!8536 = !DILocation(line: 145, column: 28, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8534, file: !794, line: 141, column: 17)
!8538 = !DILocation(line: 145, column: 3, scope: !8537)
!8539 = !DILocation(line: 147, column: 2, scope: !8537)
!8540 = !DILocation(line: 151, column: 1, scope: !8529)
!8541 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8442, file: !8442, line: 322, type: !6070, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8542)
!8542 = !{!8543}
!8543 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8541, file: !8442, line: 322, type: !110)
!8544 = !DILocation(line: 0, scope: !8541)
!8545 = !DILocation(line: 324, column: 3, scope: !8541)
!8546 = !DILocation(line: 325, column: 1, scope: !8541)
!8547 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !794, file: !794, line: 202, type: !8548, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8550)
!8548 = !DISubroutineType(types: !8549)
!8549 = !{null, !109, !109}
!8550 = !{!8551, !8552}
!8551 = !DILocalVariable(name: "line", arg: 1, scope: !8547, file: !794, line: 202, type: !109)
!8552 = !DILocalVariable(name: "trigger", arg: 2, scope: !8547, file: !794, line: 202, type: !109)
!8553 = !DILocation(line: 0, scope: !8547)
!8554 = !DILocation(line: 211, column: 2, scope: !8547)
!8555 = !DILocation(line: 213, column: 36, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8547, file: !794, line: 211, column: 19)
!8557 = !DILocation(line: 213, column: 3, scope: !8556)
!8558 = !DILocation(line: 214, column: 3, scope: !8556)
!8559 = !DILocation(line: 215, column: 3, scope: !8556)
!8560 = !DILocation(line: 217, column: 35, scope: !8556)
!8561 = !DILocation(line: 217, column: 3, scope: !8556)
!8562 = !DILocation(line: 218, column: 3, scope: !8556)
!8563 = !DILocation(line: 219, column: 3, scope: !8556)
!8564 = !DILocation(line: 221, column: 36, scope: !8556)
!8565 = !DILocation(line: 221, column: 3, scope: !8556)
!8566 = !DILocation(line: 222, column: 3, scope: !8556)
!8567 = !DILocation(line: 223, column: 3, scope: !8556)
!8568 = !DILocation(line: 225, column: 35, scope: !8556)
!8569 = !DILocation(line: 225, column: 3, scope: !8556)
!8570 = !DILocation(line: 226, column: 3, scope: !8556)
!8571 = !DILocation(line: 227, column: 3, scope: !8556)
!8572 = !DILocation(line: 232, column: 1, scope: !8547)
!8573 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8442, file: !8442, line: 618, type: !6070, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8574)
!8574 = !{!8575}
!8575 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8573, file: !8442, line: 618, type: !110)
!8576 = !DILocation(line: 0, scope: !8573)
!8577 = !DILocation(line: 620, column: 3, scope: !8573)
!8578 = !DILocation(line: 622, column: 1, scope: !8573)
!8579 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8442, file: !8442, line: 754, type: !6070, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8580)
!8580 = !{!8581}
!8581 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8579, file: !8442, line: 754, type: !110)
!8582 = !DILocation(line: 0, scope: !8579)
!8583 = !DILocation(line: 756, column: 3, scope: !8579)
!8584 = !DILocation(line: 757, column: 1, scope: !8579)
!8585 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8442, file: !8442, line: 572, type: !6070, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8586)
!8586 = !{!8587}
!8587 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8585, file: !8442, line: 572, type: !110)
!8588 = !DILocation(line: 0, scope: !8585)
!8589 = !DILocation(line: 574, column: 3, scope: !8585)
!8590 = !DILocation(line: 576, column: 1, scope: !8585)
!8591 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8442, file: !8442, line: 710, type: !6070, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8592)
!8592 = !{!8593}
!8593 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8591, file: !8442, line: 710, type: !110)
!8594 = !DILocation(line: 0, scope: !8591)
!8595 = !DILocation(line: 712, column: 3, scope: !8591)
!8596 = !DILocation(line: 713, column: 1, scope: !8591)
!8597 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !794, file: !794, line: 433, type: !8598, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8600)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{!109, !109, !834, !107}
!8600 = !{!8601, !8602, !8603, !8604, !8606}
!8601 = !DILocalVariable(name: "line", arg: 1, scope: !8597, file: !794, line: 433, type: !109)
!8602 = !DILocalVariable(name: "cb", arg: 2, scope: !8597, file: !794, line: 433, type: !834)
!8603 = !DILocalVariable(name: "arg", arg: 3, scope: !8597, file: !794, line: 433, type: !107)
!8604 = !DILocalVariable(name: "dev", scope: !8597, file: !794, line: 435, type: !8605)
!8605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!8606 = !DILocalVariable(name: "data", scope: !8597, file: !794, line: 436, type: !8396)
!8607 = !DILocation(line: 0, scope: !8597)
!8608 = !DILocation(line: 438, column: 21, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8597, file: !794, line: 438, column: 6)
!8610 = !DILocation(line: 438, column: 6, scope: !8609)
!8611 = !DILocation(line: 438, column: 6, scope: !8597)
!8612 = !DILocation(line: 442, column: 20, scope: !8597)
!8613 = !DILocation(line: 443, column: 17, scope: !8597)
!8614 = !DILocation(line: 443, column: 22, scope: !8597)
!8615 = !DILocation(line: 445, column: 2, scope: !8597)
!8616 = !DILocation(line: 446, column: 1, scope: !8597)
!8617 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !794, file: !794, line: 448, type: !8431, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !722, retainedNodes: !8618)
!8618 = !{!8619, !8620, !8621}
!8619 = !DILocalVariable(name: "line", arg: 1, scope: !8617, file: !794, line: 448, type: !109)
!8620 = !DILocalVariable(name: "dev", scope: !8617, file: !794, line: 450, type: !8605)
!8621 = !DILocalVariable(name: "data", scope: !8617, file: !794, line: 451, type: !8396)
!8622 = !DILocation(line: 0, scope: !8617)
!8623 = !DILocation(line: 453, column: 17, scope: !8617)
!8624 = !DILocation(line: 453, column: 20, scope: !8617)
!8625 = !DILocation(line: 454, column: 17, scope: !8617)
!8626 = !DILocation(line: 454, column: 22, scope: !8617)
!8627 = !DILocation(line: 455, column: 1, scope: !8617)
!8628 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !947, file: !947, line: 183, type: !983, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8629)
!8629 = !{!8630, !8631, !8632, !8633, !8634}
!8630 = !DILocalVariable(name: "dev", arg: 1, scope: !8628, file: !947, line: 183, type: !974)
!8631 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8628, file: !947, line: 184, type: !985)
!8632 = !DILocalVariable(name: "pclken", scope: !8628, file: !947, line: 186, type: !937)
!8633 = !DILocalVariable(name: "reg", scope: !8628, file: !947, line: 187, type: !2937)
!8634 = !DILocalVariable(name: "reg_val", scope: !8628, file: !947, line: 188, type: !110)
!8635 = !DILocation(line: 0, scope: !8628)
!8636 = !DILocation(line: 192, column: 6, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8628, file: !947, line: 192, column: 6)
!8638 = !DILocation(line: 192, column: 6, scope: !8628)
!8639 = !DILocation(line: 197, column: 52, scope: !8628)
!8640 = !DILocation(line: 197, column: 8, scope: !8628)
!8641 = !DILocation(line: 198, column: 12, scope: !8628)
!8642 = !DILocation(line: 199, column: 21, scope: !8628)
!8643 = !DILocation(line: 199, column: 10, scope: !8628)
!8644 = !DILocation(line: 200, column: 7, scope: !8628)
!8645 = !DILocation(line: 202, column: 2, scope: !8628)
!8646 = !DILocation(line: 203, column: 1, scope: !8628)
!8647 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !947, file: !947, line: 205, type: !983, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8648)
!8648 = !{!8649, !8650, !8651, !8652, !8653}
!8649 = !DILocalVariable(name: "dev", arg: 1, scope: !8647, file: !947, line: 205, type: !974)
!8650 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8647, file: !947, line: 206, type: !985)
!8651 = !DILocalVariable(name: "pclken", scope: !8647, file: !947, line: 208, type: !937)
!8652 = !DILocalVariable(name: "reg", scope: !8647, file: !947, line: 209, type: !2937)
!8653 = !DILocalVariable(name: "reg_val", scope: !8647, file: !947, line: 210, type: !110)
!8654 = !DILocation(line: 0, scope: !8647)
!8655 = !DILocation(line: 214, column: 6, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8647, file: !947, line: 214, column: 6)
!8657 = !DILocation(line: 214, column: 6, scope: !8647)
!8658 = !DILocation(line: 219, column: 52, scope: !8647)
!8659 = !DILocation(line: 219, column: 8, scope: !8647)
!8660 = !DILocation(line: 220, column: 12, scope: !8647)
!8661 = !DILocation(line: 221, column: 22, scope: !8647)
!8662 = !DILocation(line: 221, column: 13, scope: !8647)
!8663 = !DILocation(line: 221, column: 10, scope: !8647)
!8664 = !DILocation(line: 222, column: 7, scope: !8647)
!8665 = !DILocation(line: 224, column: 2, scope: !8647)
!8666 = !DILocation(line: 225, column: 1, scope: !8647)
!8667 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !947, file: !947, line: 262, type: !999, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8668)
!8668 = !{!8669, !8670, !8671, !8672, !8673, !8674, !8675}
!8669 = !DILocalVariable(name: "clock", arg: 1, scope: !8667, file: !947, line: 262, type: !974)
!8670 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8667, file: !947, line: 263, type: !985)
!8671 = !DILocalVariable(name: "rate", arg: 3, scope: !8667, file: !947, line: 264, type: !943)
!8672 = !DILocalVariable(name: "pclken", scope: !8667, file: !947, line: 266, type: !937)
!8673 = !DILocalVariable(name: "ahb_clock", scope: !8667, file: !947, line: 273, type: !110)
!8674 = !DILocalVariable(name: "apb1_clock", scope: !8667, file: !947, line: 274, type: !110)
!8675 = !DILocalVariable(name: "apb2_clock", scope: !8667, file: !947, line: 276, type: !110)
!8676 = !DILocation(line: 0, scope: !8667)
!8677 = !DILocation(line: 273, column: 23, scope: !8667)
!8678 = !DILocation(line: 299, column: 18, scope: !8667)
!8679 = !DILocation(line: 299, column: 2, scope: !8667)
!8680 = !DILocation(line: 374, column: 3, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8667, file: !947, line: 299, column: 23)
!8682 = !DILocation(line: 379, column: 3, scope: !8681)
!8683 = !DILocation(line: 389, column: 3, scope: !8681)
!8684 = !DILocation(line: 0, scope: !8681)
!8685 = !DILocation(line: 396, column: 1, scope: !8667)
!8686 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !947, file: !947, line: 227, type: !1015, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8687)
!8687 = !{!8688, !8689, !8690, !8691, !8692, !8693, !8694, !8695}
!8688 = !DILocalVariable(name: "dev", arg: 1, scope: !8686, file: !947, line: 227, type: !974)
!8689 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8686, file: !947, line: 228, type: !985)
!8690 = !DILocalVariable(name: "data", arg: 3, scope: !8686, file: !947, line: 229, type: !107)
!8691 = !DILocalVariable(name: "pclken", scope: !8686, file: !947, line: 233, type: !937)
!8692 = !DILocalVariable(name: "reg", scope: !8686, file: !947, line: 234, type: !2937)
!8693 = !DILocalVariable(name: "reg_val", scope: !8686, file: !947, line: 235, type: !110)
!8694 = !DILocalVariable(name: "dt_val", scope: !8686, file: !947, line: 235, type: !110)
!8695 = !DILocalVariable(name: "err", scope: !8686, file: !947, line: 236, type: !109)
!8696 = !DILocation(line: 0, scope: !8686)
!8697 = !DILocation(line: 241, column: 30, scope: !8686)
!8698 = !DILocation(line: 241, column: 8, scope: !8686)
!8699 = !DILocation(line: 242, column: 10, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8686, file: !947, line: 242, column: 6)
!8701 = !DILocation(line: 242, column: 6, scope: !8686)
!8702 = !DILocation(line: 247, column: 11, scope: !8686)
!8703 = !DILocation(line: 248, column: 6, scope: !8686)
!8704 = !DILocation(line: 247, column: 44, scope: !8686)
!8705 = !DILocation(line: 250, column: 6, scope: !8686)
!8706 = !DILocation(line: 249, column: 52, scope: !8686)
!8707 = !DILocation(line: 249, column: 8, scope: !8686)
!8708 = !DILocation(line: 251, column: 12, scope: !8686)
!8709 = !DILocation(line: 252, column: 10, scope: !8686)
!8710 = !DILocation(line: 253, column: 7, scope: !8686)
!8711 = !DILocation(line: 255, column: 2, scope: !8686)
!8712 = !DILocation(line: 260, column: 1, scope: !8686)
!8713 = distinct !DISubprogram(name: "enabled_clock", scope: !947, file: !947, line: 100, type: !8714, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8716)
!8714 = !DISubroutineType(types: !8715)
!8715 = !{!109, !110}
!8716 = !{!8717, !8718}
!8717 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8713, file: !947, line: 100, type: !110)
!8718 = !DILocalVariable(name: "r", scope: !8713, file: !947, line: 102, type: !109)
!8719 = !DILocation(line: 0, scope: !8713)
!8720 = !DILocation(line: 104, column: 2, scope: !8713)
!8721 = !DILocation(line: 180, column: 2, scope: !8713)
!8722 = !DILocation(line: 181, column: 1, scope: !8713)
!8723 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !947, file: !947, line: 641, type: !972, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8724)
!8724 = !{!8725, !8726, !8727}
!8725 = !DILocalVariable(name: "dev", arg: 1, scope: !8723, file: !947, line: 641, type: !974)
!8726 = !DILocalVariable(name: "old_flash_freq", scope: !8723, file: !947, line: 664, type: !110)
!8727 = !DILocalVariable(name: "new_flash_freq", scope: !8723, file: !947, line: 665, type: !110)
!8728 = !DILocation(line: 0, scope: !8723)
!8729 = !DILocation(line: 646, column: 2, scope: !8723)
!8730 = !DILocation(line: 667, column: 19, scope: !8723)
!8731 = !DILocation(line: 674, column: 21, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8723, file: !947, line: 674, column: 6)
!8733 = !DILocation(line: 674, column: 6, scope: !8723)
!8734 = !DILocation(line: 675, column: 3, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8732, file: !947, line: 674, column: 59)
!8736 = !DILocation(line: 676, column: 2, scope: !8735)
!8737 = !DILocation(line: 680, column: 2, scope: !8723)
!8738 = !DILocation(line: 683, column: 2, scope: !8723)
!8739 = !DILocation(line: 690, column: 3, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !947, line: 689, column: 9)
!8741 = distinct !DILexicalBlock(scope: !8723, file: !947, line: 685, column: 6)
!8742 = !DILocation(line: 695, column: 2, scope: !8723)
!8743 = !DILocation(line: 696, column: 2, scope: !8723)
!8744 = !DILocation(line: 696, column: 9, scope: !8723)
!8745 = !DILocation(line: 696, column: 34, scope: !8723)
!8746 = distinct !{!8746, !8743, !8747}
!8747 = !DILocation(line: 697, column: 2, scope: !8723)
!8748 = !DILocation(line: 720, column: 21, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8723, file: !947, line: 720, column: 6)
!8750 = !DILocation(line: 720, column: 6, scope: !8723)
!8751 = !DILocation(line: 721, column: 3, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8749, file: !947, line: 720, column: 60)
!8753 = !DILocation(line: 722, column: 2, scope: !8752)
!8754 = !DILocation(line: 725, column: 18, scope: !8723)
!8755 = !DILocation(line: 728, column: 2, scope: !8723)
!8756 = !DILocation(line: 730, column: 2, scope: !8723)
!8757 = !DILocation(line: 745, column: 2, scope: !8723)
!8758 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8759, file: !8759, line: 995, type: !7389, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8759 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8760 = !DILocation(line: 997, column: 21, scope: !8758)
!8761 = !DILocation(line: 997, column: 3, scope: !8758)
!8762 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !947, file: !947, line: 507, type: !3060, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8763 = !DILocation(line: 534, column: 7, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !947, line: 534, column: 7)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !947, line: 532, column: 37)
!8766 = distinct !DILexicalBlock(scope: !8762, file: !947, line: 532, column: 6)
!8767 = !DILocation(line: 534, column: 28, scope: !8764)
!8768 = !DILocation(line: 534, column: 7, scope: !8765)
!8769 = !DILocation(line: 536, column: 4, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8764, file: !947, line: 534, column: 34)
!8771 = !DILocation(line: 537, column: 4, scope: !8770)
!8772 = !DILocation(line: 537, column: 11, scope: !8770)
!8773 = !DILocation(line: 537, column: 32, scope: !8770)
!8774 = distinct !{!8774, !8771, !8775}
!8775 = !DILocation(line: 539, column: 4, scope: !8770)
!8776 = !DILocation(line: 583, column: 3, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !947, line: 577, column: 37)
!8778 = distinct !DILexicalBlock(scope: !8762, file: !947, line: 577, column: 6)
!8779 = !DILocation(line: 584, column: 3, scope: !8777)
!8780 = !DILocation(line: 584, column: 10, scope: !8777)
!8781 = !DILocation(line: 584, column: 31, scope: !8777)
!8782 = distinct !{!8782, !8779, !8783}
!8783 = !DILocation(line: 585, column: 3, scope: !8777)
!8784 = !DILocation(line: 627, column: 1, scope: !8762)
!8785 = distinct !DISubprogram(name: "set_up_plls", scope: !947, file: !947, line: 448, type: !3060, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8786 = !DILocation(line: 460, column: 6, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8785, file: !947, line: 460, column: 6)
!8788 = !DILocation(line: 460, column: 31, scope: !8787)
!8789 = !DILocation(line: 460, column: 6, scope: !8785)
!8790 = !DILocation(line: 461, column: 3, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8787, file: !947, line: 460, column: 67)
!8792 = !DILocation(line: 462, column: 3, scope: !8791)
!8793 = !DILocation(line: 463, column: 2, scope: !8791)
!8794 = !DILocation(line: 464, column: 2, scope: !8785)
!8795 = !DILocation(line: 496, column: 2, scope: !8785)
!8796 = !DILocation(line: 499, column: 2, scope: !8785)
!8797 = !DILocation(line: 500, column: 2, scope: !8785)
!8798 = !DILocation(line: 500, column: 9, scope: !8785)
!8799 = !DILocation(line: 500, column: 30, scope: !8785)
!8800 = distinct !{!8800, !8797, !8801}
!8801 = !DILocation(line: 502, column: 2, scope: !8785)
!8802 = !DILocation(line: 505, column: 1, scope: !8785)
!8803 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8759, file: !8759, line: 944, type: !6070, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8804)
!8804 = !{!8805}
!8805 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8803, file: !8759, line: 944, type: !110)
!8806 = !DILocation(line: 0, scope: !8803)
!8807 = !DILocation(line: 946, column: 3, scope: !8803)
!8808 = !DILocation(line: 947, column: 1, scope: !8803)
!8809 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8759, file: !8759, line: 910, type: !6070, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8810)
!8810 = !{!8811}
!8811 = !DILocalVariable(name: "Source", arg: 1, scope: !8809, file: !8759, line: 910, type: !110)
!8812 = !DILocation(line: 0, scope: !8809)
!8813 = !DILocation(line: 912, column: 3, scope: !8809)
!8814 = !DILocation(line: 913, column: 1, scope: !8809)
!8815 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8759, file: !8759, line: 924, type: !7389, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8816 = !DILocation(line: 926, column: 21, scope: !8815)
!8817 = !DILocation(line: 926, column: 3, scope: !8815)
!8818 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8759, file: !8759, line: 960, type: !6070, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8819)
!8819 = !{!8820}
!8820 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8818, file: !8759, line: 960, type: !110)
!8821 = !DILocation(line: 0, scope: !8818)
!8822 = !DILocation(line: 962, column: 3, scope: !8818)
!8823 = !DILocation(line: 963, column: 1, scope: !8818)
!8824 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8759, file: !8759, line: 976, type: !6070, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !8825)
!8825 = !{!8826}
!8826 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8824, file: !8759, line: 976, type: !110)
!8827 = !DILocation(line: 0, scope: !8824)
!8828 = !DILocation(line: 978, column: 3, scope: !8824)
!8829 = !DILocation(line: 979, column: 1, scope: !8824)
!8830 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !947, file: !947, line: 409, type: !3060, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8831 = !DILocation(line: 412, column: 6, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8830, file: !947, line: 412, column: 6)
!8833 = !DILocation(line: 412, column: 27, scope: !8832)
!8834 = !DILocation(line: 412, column: 6, scope: !8830)
!8835 = !DILocation(line: 414, column: 3, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8832, file: !947, line: 412, column: 33)
!8837 = !DILocation(line: 415, column: 3, scope: !8836)
!8838 = !DILocation(line: 415, column: 10, scope: !8836)
!8839 = !DILocation(line: 415, column: 31, scope: !8836)
!8840 = distinct !{!8840, !8837, !8841}
!8841 = !DILocation(line: 417, column: 3, scope: !8836)
!8842 = !DILocation(line: 421, column: 2, scope: !8830)
!8843 = !DILocation(line: 422, column: 2, scope: !8830)
!8844 = !DILocation(line: 422, column: 9, scope: !8830)
!8845 = !DILocation(line: 422, column: 34, scope: !8830)
!8846 = distinct !{!8846, !8843, !8847}
!8847 = !DILocation(line: 423, column: 2, scope: !8830)
!8848 = !DILocation(line: 424, column: 1, scope: !8830)
!8849 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8759, file: !8759, line: 1180, type: !3060, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8850 = !DILocation(line: 1182, column: 3, scope: !8849)
!8851 = !DILocation(line: 1183, column: 1, scope: !8849)
!8852 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8759, file: !8759, line: 1169, type: !3060, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8853 = !DILocation(line: 1171, column: 3, scope: !8852)
!8854 = !DILocation(line: 1172, column: 1, scope: !8852)
!8855 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8759, file: !8759, line: 1190, type: !7389, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8856 = !DILocation(line: 1192, column: 12, scope: !8855)
!8857 = !DILocation(line: 1192, column: 11, scope: !8855)
!8858 = !DILocation(line: 1192, column: 3, scope: !8855)
!8859 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8759, file: !8759, line: 612, type: !7389, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8860 = !DILocation(line: 614, column: 12, scope: !8859)
!8861 = !DILocation(line: 614, column: 11, scope: !8859)
!8862 = !DILocation(line: 614, column: 3, scope: !8859)
!8863 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8759, file: !8759, line: 592, type: !3060, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8864 = !DILocation(line: 594, column: 3, scope: !8863)
!8865 = !DILocation(line: 595, column: 1, scope: !8863)
!8866 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8759, file: !8759, line: 760, type: !3060, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8867 = !DILocation(line: 762, column: 3, scope: !8866)
!8868 = !DILocation(line: 763, column: 1, scope: !8866)
!8869 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8759, file: !8759, line: 780, type: !7389, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !903, retainedNodes: !2043)
!8870 = !DILocation(line: 782, column: 12, scope: !8869)
!8871 = !DILocation(line: 782, column: 11, scope: !8869)
!8872 = !DILocation(line: 782, column: 3, scope: !8869)
!8873 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8874, file: !8874, line: 48, type: !7389, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2043)
!8874 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8875 = !DILocation(line: 51, column: 3, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !8874, line: 50, column: 37)
!8877 = distinct !DILexicalBlock(scope: !8873, file: !8874, line: 50, column: 6)
!8878 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8874, file: !8874, line: 64, type: !3060, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2043)
!8879 = !DILocation(line: 66, column: 2, scope: !8878)
!8880 = !DILocation(line: 69, column: 1, scope: !8878)
!8881 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8759, file: !8759, line: 1219, type: !8882, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !8884)
!8882 = !DISubroutineType(types: !8883)
!8883 = !{null, !110, !110, !110}
!8884 = !{!8885, !8886, !8887}
!8885 = !DILocalVariable(name: "Source", arg: 1, scope: !8881, file: !8759, line: 1219, type: !110)
!8886 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !8881, file: !8759, line: 1219, type: !110)
!8887 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !8881, file: !8759, line: 1219, type: !110)
!8888 = !DILocation(line: 0, scope: !8881)
!8889 = !DILocation(line: 1221, column: 3, scope: !8881)
!8890 = !DILocation(line: 1222, column: 1, scope: !8881)
!8891 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !8874, file: !8874, line: 75, type: !7389, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2043)
!8892 = !DILocation(line: 77, column: 9, scope: !8891)
!8893 = !DILocation(line: 77, column: 2, scope: !8891)
!8894 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8874, file: !8874, line: 87, type: !3060, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !2043)
!8895 = !DILocation(line: 93, column: 2, scope: !8894)
!8896 = !DILocation(line: 95, column: 1, scope: !8894)
!8897 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !6069, file: !6069, line: 895, type: !6070, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2877, retainedNodes: !8898)
!8898 = !{!8899, !8900}
!8899 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8897, file: !6069, line: 895, type: !110)
!8900 = !DILocalVariable(name: "tmpreg", scope: !8897, file: !6069, line: 897, type: !316)
!8901 = !DILocation(line: 0, scope: !8897)
!8902 = !DILocation(line: 897, column: 3, scope: !8897)
!8903 = !DILocation(line: 897, column: 17, scope: !8897)
!8904 = !DILocation(line: 898, column: 3, scope: !8897)
!8905 = !DILocation(line: 900, column: 12, scope: !8897)
!8906 = !DILocation(line: 900, column: 10, scope: !8897)
!8907 = !DILocation(line: 901, column: 9, scope: !8897)
!8908 = !DILocation(line: 902, column: 1, scope: !8897)
!8909 = distinct !DISubprogram(name: "uart_console_init", scope: !1076, file: !1076, line: 588, type: !1053, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8910)
!8910 = !{!8911}
!8911 = !DILocalVariable(name: "arg", arg: 1, scope: !8909, file: !1076, line: 588, type: !1031)
!8912 = !DILocation(line: 0, scope: !8909)
!8913 = !DILocation(line: 593, column: 7, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8909, file: !1076, line: 593, column: 6)
!8915 = !DILocation(line: 593, column: 6, scope: !8909)
!8916 = !DILocation(line: 597, column: 2, scope: !8909)
!8917 = !DILocation(line: 599, column: 2, scope: !8909)
!8918 = !DILocation(line: 600, column: 1, scope: !8909)
!8919 = distinct !DISubprogram(name: "device_is_ready", scope: !8268, file: !8268, line: 47, type: !8920, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8922)
!8920 = !DISubroutineType(types: !8921)
!8921 = !{!360, !1031}
!8922 = !{!8923}
!8923 = !DILocalVariable(name: "dev", arg: 1, scope: !8919, file: !8268, line: 47, type: !1031)
!8924 = !DILocation(line: 0, scope: !8919)
!8925 = !DILocation(line: 55, column: 2, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8919, file: !8268, line: 55, column: 2)
!8927 = !{i64 2152424485}
!8928 = !DILocation(line: 56, column: 9, scope: !8919)
!8929 = !DILocation(line: 56, column: 2, scope: !8919)
!8930 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1076, file: !1076, line: 573, type: !3060, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !2043)
!8931 = !DILocation(line: 576, column: 2, scope: !8930)
!8932 = !DILocation(line: 579, column: 2, scope: !8930)
!8933 = !DILocation(line: 581, column: 1, scope: !8930)
!8934 = distinct !DISubprogram(name: "console_out", scope: !1076, file: !1076, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8935)
!8935 = !{!8936}
!8936 = !DILocalVariable(name: "c", arg: 1, scope: !8934, file: !1076, line: 77, type: !109)
!8937 = !DILocation(line: 0, scope: !8934)
!8938 = !DILocation(line: 89, column: 11, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8934, file: !1076, line: 89, column: 6)
!8940 = !DILocation(line: 89, column: 6, scope: !8934)
!8941 = !DILocation(line: 90, column: 3, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8939, file: !1076, line: 89, column: 17)
!8943 = !DILocation(line: 91, column: 2, scope: !8942)
!8944 = !DILocation(line: 92, column: 34, scope: !8934)
!8945 = !DILocation(line: 92, column: 2, scope: !8934)
!8946 = !DILocation(line: 94, column: 2, scope: !8934)
!8947 = distinct !DISubprogram(name: "uart_poll_out", scope: !8948, file: !8948, line: 95, type: !1049, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8949)
!8948 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/condvar")
!8949 = !{!8950, !8951}
!8950 = !DILocalVariable(name: "dev", arg: 1, scope: !8947, file: !8948, line: 95, type: !1031)
!8951 = !DILocalVariable(name: "out_char", arg: 2, scope: !8947, file: !8948, line: 95, type: !181)
!8952 = !DILocation(line: 0, scope: !8947)
!8953 = !DILocation(line: 105, column: 2, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8947, file: !8948, line: 105, column: 2)
!8955 = !{i64 2152507876}
!8956 = !DILocation(line: 106, column: 2, scope: !8947)
!8957 = !DILocation(line: 107, column: 1, scope: !8947)
!8958 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1025, file: !1025, line: 574, type: !1049, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8959)
!8959 = !{!8960, !8961, !8962}
!8960 = !DILocalVariable(name: "dev", arg: 1, scope: !8958, file: !1025, line: 574, type: !1031)
!8961 = !DILocalVariable(name: "out_char", arg: 2, scope: !8958, file: !1025, line: 575, type: !181)
!8962 = !DILocalVariable(name: "api", scope: !8958, file: !1025, line: 577, type: !1022)
!8963 = !DILocation(line: 0, scope: !8958)
!8964 = !DILocation(line: 578, column: 40, scope: !8958)
!8965 = !DILocation(line: 580, column: 7, scope: !8958)
!8966 = !DILocation(line: 580, column: 2, scope: !8958)
!8967 = !DILocation(line: 581, column: 1, scope: !8958)
!8968 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !8920, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !8969)
!8969 = !{!8970}
!8970 = !DILocalVariable(name: "dev", arg: 1, scope: !8968, file: !349, line: 730, type: !1031)
!8971 = !DILocation(line: 0, scope: !8968)
!8972 = !DILocation(line: 732, column: 9, scope: !8968)
!8973 = !DILocation(line: 732, column: 2, scope: !8968)
!8974 = distinct !DISubprogram(name: "uart_register_input", scope: !1076, file: !1076, line: 560, type: !8975, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1019, retainedNodes: !9022)
!8975 = !DISubroutineType(types: !8976)
!8976 = !{null, !8977, !8977, !9019}
!8977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8978, size: 32)
!8978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !8979)
!8979 = !{!8980}
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8978, file: !118, line: 2209, baseType: !8981, size: 160)
!8981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !8982)
!8982 = !{!8983, !8996, !9000}
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8981, file: !118, line: 1710, baseType: !8984, size: 64)
!8984 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8985, line: 46, baseType: !8986)
!8985 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8985, line: 41, size: 64, elements: !8987)
!8987 = !{!8988, !8995}
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8986, file: !8985, line: 42, baseType: !8989, size: 32)
!8989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8990, size: 32)
!8990 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8985, line: 39, baseType: !8991)
!8991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8985, line: 35, size: 32, elements: !8992)
!8992 = !{!8993}
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8991, file: !8985, line: 36, baseType: !8994, size: 32)
!8994 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8985, line: 32, baseType: !110)
!8995 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8986, file: !8985, line: 43, baseType: !8989, size: 32, offset: 32)
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8981, file: !118, line: 1711, baseType: !8997, size: 32, offset: 64)
!8997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !8998)
!8998 = !{!8999}
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8997, file: !253, line: 52, baseType: !22, size: 32)
!9000 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8981, file: !118, line: 1712, baseType: !9001, size: 64, offset: 96)
!9001 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !9002)
!9002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !9003)
!9003 = !{!9004}
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9002, file: !122, line: 232, baseType: !9005, size: 64)
!9005 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !9006)
!9006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !9007)
!9007 = !{!9008, !9014}
!9008 = !DIDerivedType(tag: DW_TAG_member, scope: !9006, file: !127, line: 38, baseType: !9009, size: 32)
!9009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9006, file: !127, line: 38, size: 32, elements: !9010)
!9010 = !{!9011, !9013}
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9009, file: !127, line: 39, baseType: !9012, size: 32)
!9012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9006, size: 32)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9009, file: !127, line: 40, baseType: !9012, size: 32)
!9014 = !DIDerivedType(tag: DW_TAG_member, scope: !9006, file: !127, line: 42, baseType: !9015, size: 32, offset: 32)
!9015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9006, file: !127, line: 42, size: 32, elements: !9016)
!9016 = !{!9017, !9018}
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9015, file: !127, line: 43, baseType: !9012, size: 32)
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9015, file: !127, line: 44, baseType: !9012, size: 32)
!9019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9020, size: 32)
!9020 = !DISubroutineType(types: !9021)
!9021 = !{!180, !285, !180}
!9022 = !{!9023, !9024, !9025}
!9023 = !DILocalVariable(name: "avail", arg: 1, scope: !8974, file: !1076, line: 560, type: !8977)
!9024 = !DILocalVariable(name: "lines", arg: 2, scope: !8974, file: !1076, line: 560, type: !8977)
!9025 = !DILocalVariable(name: "completion", arg: 3, scope: !8974, file: !1076, line: 561, type: !9019)
!9026 = !DILocation(line: 0, scope: !8974)
!9027 = !DILocation(line: 566, column: 1, scope: !8974)
!9028 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1235, file: !1235, line: 523, type: !1101, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9029)
!9029 = !{!9030, !9031, !9032, !9033, !9034}
!9030 = !DILocalVariable(name: "dev", arg: 1, scope: !9028, file: !1235, line: 523, type: !1103)
!9031 = !DILocalVariable(name: "pin", arg: 2, scope: !9028, file: !1235, line: 524, type: !652)
!9032 = !DILocalVariable(name: "flags", arg: 3, scope: !9028, file: !1235, line: 524, type: !653)
!9033 = !DILocalVariable(name: "err", scope: !9028, file: !1235, line: 526, type: !109)
!9034 = !DILocalVariable(name: "pincfg", scope: !9028, file: !1235, line: 527, type: !109)
!9035 = !DILocation(line: 0, scope: !9028)
!9036 = !DILocation(line: 527, column: 2, scope: !9028)
!9037 = !DILocation(line: 532, column: 8, scope: !9028)
!9038 = !DILocation(line: 533, column: 10, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9028, file: !1235, line: 533, column: 6)
!9040 = !DILocation(line: 533, column: 6, scope: !9028)
!9041 = !DILocation(line: 543, column: 13, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9028, file: !1235, line: 543, column: 6)
!9043 = !DILocation(line: 543, column: 28, scope: !9042)
!9044 = !DILocation(line: 543, column: 6, scope: !9028)
!9045 = !DILocation(line: 544, column: 14, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !1235, line: 544, column: 7)
!9047 = distinct !DILexicalBlock(scope: !9042, file: !1235, line: 543, column: 34)
!9048 = !DILocation(line: 544, column: 39, scope: !9046)
!9049 = !DILocation(line: 544, column: 7, scope: !9047)
!9050 = !DILocation(line: 545, column: 38, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9046, file: !1235, line: 544, column: 45)
!9052 = !DILocation(line: 545, column: 4, scope: !9051)
!9053 = !DILocation(line: 546, column: 3, scope: !9051)
!9054 = !DILocation(line: 546, column: 21, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9046, file: !1235, line: 546, column: 14)
!9056 = !DILocation(line: 546, column: 45, scope: !9055)
!9057 = !DILocation(line: 546, column: 14, scope: !9046)
!9058 = !DILocation(line: 547, column: 40, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9055, file: !1235, line: 546, column: 51)
!9060 = !DILocation(line: 547, column: 4, scope: !9059)
!9061 = !DILocation(line: 548, column: 3, scope: !9059)
!9062 = !DILocation(line: 551, column: 32, scope: !9028)
!9063 = !DILocation(line: 551, column: 37, scope: !9028)
!9064 = !DILocation(line: 551, column: 2, scope: !9028)
!9065 = !DILocation(line: 554, column: 6, scope: !9028)
!9066 = !DILocation(line: 562, column: 1, scope: !9028)
!9067 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1235, file: !1235, line: 410, type: !9068, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9070)
!9068 = !DISubroutineType(types: !9069)
!9069 = !{!109, !1103, !943}
!9070 = !{!9071, !9072, !9073, !9075}
!9071 = !DILocalVariable(name: "dev", arg: 1, scope: !9067, file: !1235, line: 410, type: !1103)
!9072 = !DILocalVariable(name: "value", arg: 2, scope: !9067, file: !1235, line: 410, type: !943)
!9073 = !DILocalVariable(name: "cfg", scope: !9067, file: !1235, line: 412, type: !9074)
!9074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!9075 = !DILocalVariable(name: "gpio", scope: !9067, file: !1235, line: 413, type: !1170)
!9076 = !DILocation(line: 0, scope: !9067)
!9077 = !DILocation(line: 412, column: 45, scope: !9067)
!9078 = !DILocation(line: 413, column: 44, scope: !9067)
!9079 = !DILocation(line: 415, column: 11, scope: !9067)
!9080 = !DILocation(line: 415, column: 9, scope: !9067)
!9081 = !DILocation(line: 417, column: 2, scope: !9067)
!9082 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1235, file: !1235, line: 420, type: !1124, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9083)
!9083 = !{!9084, !9085, !9086, !9087, !9088, !9089}
!9084 = !DILocalVariable(name: "dev", arg: 1, scope: !9082, file: !1235, line: 420, type: !1103)
!9085 = !DILocalVariable(name: "mask", arg: 2, scope: !9082, file: !1235, line: 421, type: !664)
!9086 = !DILocalVariable(name: "value", arg: 3, scope: !9082, file: !1235, line: 422, type: !659)
!9087 = !DILocalVariable(name: "cfg", scope: !9082, file: !1235, line: 424, type: !9074)
!9088 = !DILocalVariable(name: "gpio", scope: !9082, file: !1235, line: 425, type: !1170)
!9089 = !DILocalVariable(name: "port_value", scope: !9082, file: !1235, line: 426, type: !110)
!9090 = !DILocation(line: 0, scope: !9082)
!9091 = !DILocation(line: 424, column: 45, scope: !9082)
!9092 = !DILocation(line: 425, column: 44, scope: !9082)
!9093 = !DILocation(line: 430, column: 15, scope: !9082)
!9094 = !DILocation(line: 431, column: 46, scope: !9082)
!9095 = !DILocation(line: 431, column: 44, scope: !9082)
!9096 = !DILocation(line: 431, column: 61, scope: !9082)
!9097 = !DILocation(line: 431, column: 53, scope: !9082)
!9098 = !DILocation(line: 431, column: 2, scope: !9082)
!9099 = !DILocation(line: 435, column: 2, scope: !9082)
!9100 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1235, file: !1235, line: 438, type: !1128, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9101)
!9101 = !{!9102, !9103, !9104, !9105}
!9102 = !DILocalVariable(name: "dev", arg: 1, scope: !9100, file: !1235, line: 438, type: !1103)
!9103 = !DILocalVariable(name: "pins", arg: 2, scope: !9100, file: !1235, line: 439, type: !664)
!9104 = !DILocalVariable(name: "cfg", scope: !9100, file: !1235, line: 441, type: !9074)
!9105 = !DILocalVariable(name: "gpio", scope: !9100, file: !1235, line: 442, type: !1170)
!9106 = !DILocation(line: 0, scope: !9100)
!9107 = !DILocation(line: 441, column: 45, scope: !9100)
!9108 = !DILocation(line: 442, column: 44, scope: !9100)
!9109 = !DILocation(line: 448, column: 2, scope: !9100)
!9110 = !DILocation(line: 450, column: 2, scope: !9100)
!9111 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1235, file: !1235, line: 453, type: !1128, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9112)
!9112 = !{!9113, !9114, !9115, !9116}
!9113 = !DILocalVariable(name: "dev", arg: 1, scope: !9111, file: !1235, line: 453, type: !1103)
!9114 = !DILocalVariable(name: "pins", arg: 2, scope: !9111, file: !1235, line: 454, type: !664)
!9115 = !DILocalVariable(name: "cfg", scope: !9111, file: !1235, line: 456, type: !9074)
!9116 = !DILocalVariable(name: "gpio", scope: !9111, file: !1235, line: 457, type: !1170)
!9117 = !DILocation(line: 0, scope: !9111)
!9118 = !DILocation(line: 456, column: 45, scope: !9111)
!9119 = !DILocation(line: 457, column: 44, scope: !9111)
!9120 = !DILocation(line: 467, column: 2, scope: !9111)
!9121 = !DILocation(line: 470, column: 2, scope: !9111)
!9122 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1235, file: !1235, line: 473, type: !1128, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9123)
!9123 = !{!9124, !9125, !9126, !9127}
!9124 = !DILocalVariable(name: "dev", arg: 1, scope: !9122, file: !1235, line: 473, type: !1103)
!9125 = !DILocalVariable(name: "pins", arg: 2, scope: !9122, file: !1235, line: 474, type: !664)
!9126 = !DILocalVariable(name: "cfg", scope: !9122, file: !1235, line: 476, type: !9074)
!9127 = !DILocalVariable(name: "gpio", scope: !9122, file: !1235, line: 477, type: !1170)
!9128 = !DILocation(line: 0, scope: !9122)
!9129 = !DILocation(line: 476, column: 45, scope: !9122)
!9130 = !DILocation(line: 477, column: 44, scope: !9122)
!9131 = !DILocation(line: 484, column: 2, scope: !9122)
!9132 = !DILocation(line: 487, column: 2, scope: !9122)
!9133 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1235, file: !1235, line: 594, type: !1134, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9134)
!9134 = !{!9135, !9136, !9137, !9138, !9139, !9140, !9142, !9143, !9144}
!9135 = !DILocalVariable(name: "dev", arg: 1, scope: !9133, file: !1235, line: 594, type: !1103)
!9136 = !DILocalVariable(name: "pin", arg: 2, scope: !9133, file: !1235, line: 595, type: !652)
!9137 = !DILocalVariable(name: "mode", arg: 3, scope: !9133, file: !1235, line: 596, type: !617)
!9138 = !DILocalVariable(name: "trig", arg: 4, scope: !9133, file: !1235, line: 597, type: !623)
!9139 = !DILocalVariable(name: "cfg", scope: !9133, file: !1235, line: 599, type: !9074)
!9140 = !DILocalVariable(name: "data", scope: !9133, file: !1235, line: 600, type: !9141)
!9141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 32)
!9142 = !DILocalVariable(name: "edge", scope: !9133, file: !1235, line: 601, type: !109)
!9143 = !DILocalVariable(name: "err", scope: !9133, file: !1235, line: 602, type: !109)
!9144 = !DILabel(scope: !9133, name: "exit", file: !1235, line: 643)
!9145 = !DILocation(line: 0, scope: !9133)
!9146 = !DILocation(line: 599, column: 45, scope: !9133)
!9147 = !DILocation(line: 604, column: 6, scope: !9133)
!9148 = !DILocation(line: 605, column: 34, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !1235, line: 605, column: 7)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !1235, line: 604, column: 38)
!9151 = distinct !DILexicalBlock(scope: !9133, file: !1235, line: 604, column: 6)
!9152 = !DILocation(line: 605, column: 7, scope: !9149)
!9153 = !DILocation(line: 605, column: 47, scope: !9149)
!9154 = !DILocation(line: 605, column: 39, scope: !9149)
!9155 = !DILocation(line: 605, column: 7, scope: !9150)
!9156 = !DILocation(line: 606, column: 4, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9149, file: !1235, line: 605, column: 53)
!9158 = !DILocation(line: 607, column: 4, scope: !9157)
!9159 = !DILocation(line: 608, column: 4, scope: !9157)
!9160 = !DILocation(line: 609, column: 3, scope: !9157)
!9161 = !DILocation(line: 600, column: 38, scope: !9133)
!9162 = !DILocation(line: 620, column: 30, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9133, file: !1235, line: 620, column: 6)
!9164 = !DILocation(line: 620, column: 6, scope: !9163)
!9165 = !DILocation(line: 620, column: 57, scope: !9163)
!9166 = !DILocation(line: 620, column: 6, scope: !9133)
!9167 = !DILocation(line: 625, column: 29, scope: !9133)
!9168 = !DILocation(line: 625, column: 2, scope: !9133)
!9169 = !DILocation(line: 627, column: 2, scope: !9133)
!9170 = !DILocation(line: 630, column: 3, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9133, file: !1235, line: 627, column: 16)
!9172 = !DILocation(line: 633, column: 3, scope: !9171)
!9173 = !DILocation(line: 636, column: 3, scope: !9171)
!9174 = !DILocation(line: 639, column: 2, scope: !9133)
!9175 = !DILocation(line: 641, column: 2, scope: !9133)
!9176 = !DILocation(line: 643, column: 1, scope: !9133)
!9177 = !DILocation(line: 644, column: 2, scope: !9133)
!9178 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1235, file: !1235, line: 647, type: !1138, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9179)
!9179 = !{!9180, !9181, !9182, !9183}
!9180 = !DILocalVariable(name: "dev", arg: 1, scope: !9178, file: !1235, line: 647, type: !1103)
!9181 = !DILocalVariable(name: "callback", arg: 2, scope: !9178, file: !1235, line: 648, type: !1140)
!9182 = !DILocalVariable(name: "set", arg: 3, scope: !9178, file: !1235, line: 649, type: !360)
!9183 = !DILocalVariable(name: "data", scope: !9178, file: !1235, line: 651, type: !9141)
!9184 = !DILocation(line: 0, scope: !9178)
!9185 = !DILocation(line: 651, column: 38, scope: !9178)
!9186 = !DILocation(line: 653, column: 37, scope: !9178)
!9187 = !DILocation(line: 653, column: 9, scope: !9178)
!9188 = !DILocation(line: 653, column: 2, scope: !9178)
!9189 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9190, file: !9190, line: 38, type: !9191, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9194)
!9190 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9191 = !DISubroutineType(types: !9192)
!9192 = !{!109, !9193, !1140, !360}
!9193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!9194 = !{!9195, !9196, !9197}
!9195 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9189, file: !9190, line: 38, type: !9193)
!9196 = !DILocalVariable(name: "callback", arg: 2, scope: !9189, file: !9190, line: 39, type: !1140)
!9197 = !DILocalVariable(name: "set", arg: 3, scope: !9189, file: !9190, line: 40, type: !360)
!9198 = !DILocation(line: 0, scope: !9189)
!9199 = !DILocation(line: 42, column: 2, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9201, file: !9190, line: 42, column: 2)
!9201 = distinct !DILexicalBlock(scope: !9189, file: !9190, line: 42, column: 2)
!9202 = !DILocation(line: 42, column: 2, scope: !9201)
!9203 = !DILocation(line: 42, column: 2, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9200, file: !9190, line: 42, column: 2)
!9205 = !DILocation(line: 43, column: 2, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !9190, line: 43, column: 2)
!9207 = distinct !DILexicalBlock(scope: !9189, file: !9190, line: 43, column: 2)
!9208 = !DILocation(line: 43, column: 2, scope: !9207)
!9209 = !DILocation(line: 43, column: 2, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9206, file: !9190, line: 43, column: 2)
!9211 = !DILocation(line: 45, column: 7, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9189, file: !9190, line: 45, column: 6)
!9213 = !DILocation(line: 45, column: 6, scope: !9189)
!9214 = !DILocation(line: 46, column: 56, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9216, file: !9190, line: 46, column: 7)
!9216 = distinct !DILexicalBlock(scope: !9212, file: !9190, line: 45, column: 38)
!9217 = !DILocation(line: 46, column: 8, scope: !9215)
!9218 = !DILocation(line: 46, column: 7, scope: !9216)
!9219 = !DILocation(line: 51, column: 13, scope: !9212)
!9220 = !DILocation(line: 56, column: 43, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !9190, line: 55, column: 11)
!9222 = distinct !DILexicalBlock(scope: !9189, file: !9190, line: 55, column: 6)
!9223 = !DILocation(line: 56, column: 3, scope: !9221)
!9224 = !DILocation(line: 57, column: 2, scope: !9221)
!9225 = !DILocation(line: 60, column: 1, scope: !9189)
!9226 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !684, file: !684, line: 261, type: !9227, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9229)
!9227 = !DISubroutineType(types: !9228)
!9228 = !{!360, !9193}
!9229 = !{!9230}
!9230 = !DILocalVariable(name: "list", arg: 1, scope: !9226, file: !684, line: 261, type: !9193)
!9231 = !DILocation(line: 0, scope: !9226)
!9232 = !DILocation(line: 261, column: 1, scope: !9226)
!9233 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !684, file: !684, line: 417, type: !9234, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9236)
!9234 = !DISubroutineType(types: !9235)
!9235 = !{!360, !9193, !1305}
!9236 = !{!9237, !9238, !9239, !9240}
!9237 = !DILocalVariable(name: "list", arg: 1, scope: !9233, file: !684, line: 417, type: !9193)
!9238 = !DILocalVariable(name: "node", arg: 2, scope: !9233, file: !684, line: 417, type: !1305)
!9239 = !DILocalVariable(name: "prev", scope: !9233, file: !684, line: 417, type: !1305)
!9240 = !DILocalVariable(name: "test", scope: !9233, file: !684, line: 417, type: !1305)
!9241 = !DILocation(line: 0, scope: !9233)
!9242 = !DILocation(line: 417, column: 1, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9233, file: !684, line: 417, column: 1)
!9244 = !DILocation(line: 417, column: 1, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9243, file: !684, line: 417, column: 1)
!9246 = !DILocation(line: 417, column: 1, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9248, file: !684, line: 417, column: 1)
!9248 = distinct !DILexicalBlock(scope: !9245, file: !684, line: 417, column: 1)
!9249 = !DILocation(line: 417, column: 1, scope: !9248)
!9250 = distinct !{!9250, !9242, !9242}
!9251 = !DILocation(line: 417, column: 1, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9247, file: !684, line: 417, column: 1)
!9253 = !DILocation(line: 417, column: 1, scope: !9233)
!9254 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !684, file: !684, line: 298, type: !9255, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9257)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{null, !9193, !1305}
!9257 = !{!9258, !9259}
!9258 = !DILocalVariable(name: "list", arg: 1, scope: !9254, file: !684, line: 298, type: !9193)
!9259 = !DILocalVariable(name: "node", arg: 2, scope: !9254, file: !684, line: 298, type: !1305)
!9260 = !DILocation(line: 0, scope: !9254)
!9261 = !DILocation(line: 298, column: 1, scope: !9254)
!9262 = !DILocation(line: 298, column: 1, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9254, file: !684, line: 298, column: 1)
!9264 = !DILocation(line: 298, column: 1, scope: !9265)
!9265 = distinct !DILexicalBlock(scope: !9263, file: !684, line: 298, column: 1)
!9266 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !684, file: !684, line: 231, type: !9267, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9269)
!9267 = !DISubroutineType(types: !9268)
!9268 = !{!1305, !9193}
!9269 = !{!9270}
!9270 = !DILocalVariable(name: "list", arg: 1, scope: !9266, file: !684, line: 231, type: !9193)
!9271 = !DILocation(line: 0, scope: !9266)
!9272 = !DILocation(line: 233, column: 15, scope: !9266)
!9273 = !DILocation(line: 233, column: 2, scope: !9266)
!9274 = distinct !DISubprogram(name: "z_snode_next_set", scope: !684, file: !684, line: 209, type: !9275, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9277)
!9275 = !DISubroutineType(types: !9276)
!9276 = !{null, !1305, !1305}
!9277 = !{!9278, !9279}
!9278 = !DILocalVariable(name: "parent", arg: 1, scope: !9274, file: !684, line: 209, type: !1305)
!9279 = !DILocalVariable(name: "child", arg: 2, scope: !9274, file: !684, line: 209, type: !1305)
!9280 = !DILocation(line: 0, scope: !9274)
!9281 = !DILocation(line: 211, column: 10, scope: !9274)
!9282 = !DILocation(line: 211, column: 15, scope: !9274)
!9283 = !DILocation(line: 212, column: 1, scope: !9274)
!9284 = distinct !DISubprogram(name: "z_slist_head_set", scope: !684, file: !684, line: 214, type: !9255, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9285)
!9285 = !{!9286, !9287}
!9286 = !DILocalVariable(name: "list", arg: 1, scope: !9284, file: !684, line: 214, type: !9193)
!9287 = !DILocalVariable(name: "node", arg: 2, scope: !9284, file: !684, line: 214, type: !1305)
!9288 = !DILocation(line: 0, scope: !9284)
!9289 = !DILocation(line: 216, column: 8, scope: !9284)
!9290 = !DILocation(line: 216, column: 13, scope: !9284)
!9291 = !DILocation(line: 217, column: 1, scope: !9284)
!9292 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !684, file: !684, line: 243, type: !9267, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9293)
!9293 = !{!9294}
!9294 = !DILocalVariable(name: "list", arg: 1, scope: !9292, file: !684, line: 243, type: !9193)
!9295 = !DILocation(line: 0, scope: !9292)
!9296 = !DILocation(line: 245, column: 15, scope: !9292)
!9297 = !DILocation(line: 245, column: 2, scope: !9292)
!9298 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !684, file: !684, line: 219, type: !9255, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9299)
!9299 = !{!9300, !9301}
!9300 = !DILocalVariable(name: "list", arg: 1, scope: !9298, file: !684, line: 219, type: !9193)
!9301 = !DILocalVariable(name: "node", arg: 2, scope: !9298, file: !684, line: 219, type: !1305)
!9302 = !DILocation(line: 0, scope: !9298)
!9303 = !DILocation(line: 221, column: 8, scope: !9298)
!9304 = !DILocation(line: 221, column: 13, scope: !9298)
!9305 = !DILocation(line: 222, column: 1, scope: !9298)
!9306 = distinct !DISubprogram(name: "sys_slist_remove", scope: !684, file: !684, line: 401, type: !9307, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9309)
!9307 = !DISubroutineType(types: !9308)
!9308 = !{null, !9193, !1305, !1305}
!9309 = !{!9310, !9311, !9312}
!9310 = !DILocalVariable(name: "list", arg: 1, scope: !9306, file: !684, line: 401, type: !9193)
!9311 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9306, file: !684, line: 401, type: !1305)
!9312 = !DILocalVariable(name: "node", arg: 3, scope: !9306, file: !684, line: 401, type: !1305)
!9313 = !DILocation(line: 0, scope: !9306)
!9314 = !DILocation(line: 401, column: 1, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9306, file: !684, line: 401, column: 1)
!9316 = !DILocation(line: 0, scope: !9315)
!9317 = !DILocation(line: 401, column: 1, scope: !9306)
!9318 = !DILocation(line: 401, column: 1, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9315, file: !684, line: 401, column: 1)
!9320 = !DILocation(line: 401, column: 1, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9319, file: !684, line: 401, column: 1)
!9322 = !DILocation(line: 401, column: 1, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9321, file: !684, line: 401, column: 1)
!9324 = !DILocation(line: 401, column: 1, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9315, file: !684, line: 401, column: 1)
!9326 = !DILocation(line: 401, column: 1, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9325, file: !684, line: 401, column: 1)
!9328 = !DILocation(line: 401, column: 1, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9327, file: !684, line: 401, column: 1)
!9330 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !684, file: !684, line: 285, type: !9331, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9333)
!9331 = !DISubroutineType(types: !9332)
!9332 = !{!1305, !1305}
!9333 = !{!9334}
!9334 = !DILocalVariable(name: "node", arg: 1, scope: !9330, file: !684, line: 285, type: !1305)
!9335 = !DILocation(line: 0, scope: !9330)
!9336 = !DILocation(line: 285, column: 1, scope: !9330)
!9337 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !684, file: !684, line: 274, type: !9331, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9338)
!9338 = !{!9339}
!9339 = !DILocalVariable(name: "node", arg: 1, scope: !9337, file: !684, line: 274, type: !1305)
!9340 = !DILocation(line: 0, scope: !9337)
!9341 = !DILocation(line: 274, column: 1, scope: !9337)
!9342 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !684, file: !684, line: 204, type: !9331, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9343)
!9343 = !{!9344}
!9344 = !DILocalVariable(name: "node", arg: 1, scope: !9342, file: !684, line: 204, type: !1305)
!9345 = !DILocation(line: 0, scope: !9342)
!9346 = !DILocation(line: 206, column: 15, scope: !9342)
!9347 = !DILocation(line: 206, column: 2, scope: !9342)
!9348 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1235, file: !1235, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9349)
!9349 = !{!9350, !9351, !9352}
!9350 = !DILocalVariable(name: "pin", arg: 1, scope: !9348, file: !1235, line: 342, type: !109)
!9351 = !DILocalVariable(name: "line", scope: !9348, file: !1235, line: 344, type: !110)
!9352 = !DILocalVariable(name: "port", scope: !9348, file: !1235, line: 345, type: !109)
!9353 = !DILocation(line: 0, scope: !9348)
!9354 = !DILocation(line: 344, column: 18, scope: !9348)
!9355 = !{i32 983040, i32 0}
!9356 = !DILocation(line: 356, column: 9, scope: !9348)
!9357 = !DILocation(line: 370, column: 2, scope: !9348)
!9358 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1235, file: !1235, line: 37, type: !837, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9359)
!9359 = !{!9360, !9361, !9362}
!9360 = !DILocalVariable(name: "line", arg: 1, scope: !9358, file: !1235, line: 37, type: !109)
!9361 = !DILocalVariable(name: "arg", arg: 2, scope: !9358, file: !1235, line: 37, type: !107)
!9362 = !DILocalVariable(name: "data", scope: !9358, file: !1235, line: 39, type: !9141)
!9363 = !DILocation(line: 0, scope: !9358)
!9364 = !DILocation(line: 41, column: 29, scope: !9358)
!9365 = !DILocation(line: 41, column: 39, scope: !9358)
!9366 = !DILocation(line: 41, column: 44, scope: !9358)
!9367 = !DILocation(line: 41, column: 2, scope: !9358)
!9368 = !DILocation(line: 42, column: 1, scope: !9358)
!9369 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1235, file: !1235, line: 376, type: !9370, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9372)
!9370 = !DISubroutineType(types: !9371)
!9371 = !{!109, !109, !109}
!9372 = !{!9373, !9374, !9375, !9377, !9378}
!9373 = !DILocalVariable(name: "port", arg: 1, scope: !9369, file: !1235, line: 376, type: !109)
!9374 = !DILocalVariable(name: "pin", arg: 2, scope: !9369, file: !1235, line: 376, type: !109)
!9375 = !DILocalVariable(name: "clk", scope: !9369, file: !1235, line: 386, type: !9376)
!9376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1103)
!9377 = !DILocalVariable(name: "pclken", scope: !9369, file: !1235, line: 387, type: !1340)
!9378 = !DILocalVariable(name: "ret", scope: !9369, file: !1235, line: 396, type: !109)
!9379 = !DILocation(line: 0, scope: !9369)
!9380 = !DILocation(line: 387, column: 2, scope: !9369)
!9381 = !DILocation(line: 387, column: 22, scope: !9369)
!9382 = !DILocation(line: 399, column: 8, scope: !9369)
!9383 = !DILocation(line: 400, column: 10, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9369, file: !1235, line: 400, column: 6)
!9385 = !DILocation(line: 400, column: 6, scope: !9369)
!9386 = !DILocation(line: 405, column: 2, scope: !9369)
!9387 = !DILocation(line: 407, column: 2, scope: !9369)
!9388 = !DILocation(line: 408, column: 1, scope: !9369)
!9389 = distinct !DISubprogram(name: "clock_control_on", scope: !912, file: !912, line: 123, type: !1200, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9390)
!9390 = !{!9391, !9392, !9393}
!9391 = !DILocalVariable(name: "dev", arg: 1, scope: !9389, file: !912, line: 123, type: !1103)
!9392 = !DILocalVariable(name: "sys", arg: 2, scope: !9389, file: !912, line: 124, type: !985)
!9393 = !DILocalVariable(name: "api", scope: !9389, file: !912, line: 126, type: !1193)
!9394 = !DILocation(line: 0, scope: !9389)
!9395 = !DILocation(line: 127, column: 49, scope: !9389)
!9396 = !DILocation(line: 129, column: 14, scope: !9389)
!9397 = !DILocation(line: 129, column: 9, scope: !9389)
!9398 = !DILocation(line: 129, column: 2, scope: !9389)
!9399 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1235, file: !1235, line: 311, type: !8548, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9400)
!9400 = !{!9401, !9402, !9403}
!9401 = !DILocalVariable(name: "port", arg: 1, scope: !9399, file: !1235, line: 311, type: !109)
!9402 = !DILocalVariable(name: "pin", arg: 2, scope: !9399, file: !1235, line: 311, type: !109)
!9403 = !DILocalVariable(name: "line", scope: !9399, file: !1235, line: 313, type: !110)
!9404 = !DILocation(line: 0, scope: !9399)
!9405 = !DILocation(line: 313, column: 18, scope: !9399)
!9406 = !DILocation(line: 337, column: 2, scope: !9399)
!9407 = !DILocation(line: 340, column: 1, scope: !9399)
!9408 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1235, file: !1235, line: 295, type: !9409, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9411)
!9409 = !DISubroutineType(types: !9410)
!9410 = !{!110, !109}
!9411 = !{!9412}
!9412 = !DILocalVariable(name: "pin", arg: 1, scope: !9408, file: !1235, line: 295, type: !109)
!9413 = !DILocation(line: 0, scope: !9408)
!9414 = !DILocation(line: 307, column: 46, scope: !9408)
!9415 = !DILocation(line: 307, column: 27, scope: !9408)
!9416 = !DILocation(line: 307, column: 32, scope: !9408)
!9417 = !DILocation(line: 307, column: 14, scope: !9408)
!9418 = !DILocation(line: 307, column: 39, scope: !9408)
!9419 = !DILocation(line: 307, column: 2, scope: !9408)
!9420 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !9421, file: !9421, line: 621, type: !9422, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9424)
!9421 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9422 = !DISubroutineType(types: !9423)
!9423 = !{null, !110, !110}
!9424 = !{!9425, !9426}
!9425 = !DILocalVariable(name: "Port", arg: 1, scope: !9420, file: !9421, line: 621, type: !110)
!9426 = !DILocalVariable(name: "Line", arg: 2, scope: !9420, file: !9421, line: 621, type: !110)
!9427 = !DILocation(line: 0, scope: !9420)
!9428 = !DILocation(line: 623, column: 3, scope: !9420)
!9429 = !DILocalVariable(name: "value", arg: 1, scope: !9430, file: !6384, line: 373, type: !110)
!9430 = distinct !DISubprogram(name: "__RBIT", scope: !6384, file: !6384, line: 373, type: !7630, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9431)
!9431 = !{!9429, !9432}
!9432 = !DILocalVariable(name: "result", scope: !9430, file: !6384, line: 375, type: !110)
!9433 = !DILocation(line: 0, scope: !9430, inlinedAt: !9434)
!9434 = distinct !DILocation(line: 623, column: 3, scope: !9420)
!9435 = !DILocation(line: 380, column: 4, scope: !9430, inlinedAt: !9434)
!9436 = !{i64 2452402}
!9437 = !DILocalVariable(name: "value", arg: 1, scope: !9438, file: !6384, line: 403, type: !110)
!9438 = distinct !DISubprogram(name: "__CLZ", scope: !6384, file: !6384, line: 403, type: !9439, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9441)
!9439 = !DISubroutineType(types: !9440)
!9440 = !{!180, !110}
!9441 = !{!9437}
!9442 = !DILocation(line: 0, scope: !9438, inlinedAt: !9443)
!9443 = distinct !DILocation(line: 623, column: 3, scope: !9420)
!9444 = !DILocation(line: 414, column: 7, scope: !9438, inlinedAt: !9443)
!9445 = !DILocation(line: 624, column: 1, scope: !9420)
!9446 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9190, file: !9190, line: 69, type: !9447, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9449)
!9447 = !DISubroutineType(types: !9448)
!9448 = !{null, !9193, !1103, !110}
!9449 = !{!9450, !9451, !9452, !9453, !9454}
!9450 = !DILocalVariable(name: "list", arg: 1, scope: !9446, file: !9190, line: 69, type: !9193)
!9451 = !DILocalVariable(name: "port", arg: 2, scope: !9446, file: !9190, line: 70, type: !1103)
!9452 = !DILocalVariable(name: "pins", arg: 3, scope: !9446, file: !9190, line: 71, type: !110)
!9453 = !DILocalVariable(name: "cb", scope: !9446, file: !9190, line: 73, type: !1140)
!9454 = !DILocalVariable(name: "tmp", scope: !9446, file: !9190, line: 73, type: !1140)
!9455 = !DILocation(line: 0, scope: !9446)
!9456 = !DILocation(line: 75, column: 2, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9446, file: !9190, line: 75, column: 2)
!9458 = !DILocation(line: 0, scope: !9457)
!9459 = !DILocation(line: 76, column: 11, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9461, file: !9190, line: 76, column: 7)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !9190, line: 75, column: 57)
!9462 = distinct !DILexicalBlock(scope: !9457, file: !9190, line: 75, column: 2)
!9463 = !DILocation(line: 76, column: 20, scope: !9460)
!9464 = !DILocation(line: 76, column: 7, scope: !9461)
!9465 = !DILocation(line: 77, column: 4, scope: !9466)
!9466 = distinct !DILexicalBlock(scope: !9467, file: !9190, line: 77, column: 4)
!9467 = distinct !DILexicalBlock(scope: !9468, file: !9190, line: 77, column: 4)
!9468 = distinct !DILexicalBlock(scope: !9460, file: !9190, line: 76, column: 28)
!9469 = !DILocation(line: 77, column: 4, scope: !9467)
!9470 = !DILocation(line: 77, column: 4, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9466, file: !9190, line: 77, column: 4)
!9472 = !DILocation(line: 78, column: 4, scope: !9468)
!9473 = !DILocation(line: 79, column: 3, scope: !9468)
!9474 = !DILocation(line: 75, column: 2, scope: !9462)
!9475 = !DILocation(line: 81, column: 1, scope: !9446)
!9476 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !9421, file: !9421, line: 721, type: !7630, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9477)
!9477 = !{!9478}
!9478 = !DILocalVariable(name: "Line", arg: 1, scope: !9476, file: !9421, line: 721, type: !110)
!9479 = !DILocation(line: 0, scope: !9476)
!9480 = !DILocation(line: 723, column: 21, scope: !9476)
!9481 = !DILocation(line: 0, scope: !9430, inlinedAt: !9482)
!9482 = distinct !DILocation(line: 723, column: 76, scope: !9476)
!9483 = !DILocation(line: 380, column: 4, scope: !9430, inlinedAt: !9482)
!9484 = !DILocation(line: 0, scope: !9438, inlinedAt: !9485)
!9485 = distinct !DILocation(line: 723, column: 76, scope: !9476)
!9486 = !DILocation(line: 414, column: 7, scope: !9438, inlinedAt: !9485)
!9487 = !DILocation(line: 723, column: 73, scope: !9476)
!9488 = !DILocation(line: 723, column: 3, scope: !9476)
!9489 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9490, file: !9490, line: 913, type: !9491, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9493)
!9490 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9491 = !DISubroutineType(types: !9492)
!9492 = !{null, !1170, !110}
!9493 = !{!9494, !9495}
!9494 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9489, file: !9490, line: 913, type: !1170)
!9495 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9489, file: !9490, line: 913, type: !110)
!9496 = !DILocation(line: 0, scope: !9489)
!9497 = !DILocation(line: 918, column: 3, scope: !9489)
!9498 = !DILocation(line: 920, column: 1, scope: !9489)
!9499 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9490, file: !9490, line: 825, type: !9500, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9502)
!9500 = !DISubroutineType(types: !9501)
!9501 = !{!110, !1170}
!9502 = !{!9503}
!9503 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9499, file: !9490, line: 825, type: !1170)
!9504 = !DILocation(line: 0, scope: !9499)
!9505 = !DILocation(line: 827, column: 21, scope: !9499)
!9506 = !DILocation(line: 827, column: 3, scope: !9499)
!9507 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9490, file: !9490, line: 814, type: !9491, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9508)
!9508 = !{!9509, !9510}
!9509 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9507, file: !9490, line: 814, type: !1170)
!9510 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9507, file: !9490, line: 814, type: !110)
!9511 = !DILocation(line: 0, scope: !9507)
!9512 = !DILocation(line: 816, column: 3, scope: !9507)
!9513 = !DILocation(line: 817, column: 1, scope: !9507)
!9514 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9490, file: !9490, line: 773, type: !9500, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9515)
!9515 = !{!9516}
!9516 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9514, file: !9490, line: 773, type: !1170)
!9517 = !DILocation(line: 0, scope: !9514)
!9518 = !DILocation(line: 775, column: 21, scope: !9514)
!9519 = !DILocation(line: 775, column: 3, scope: !9514)
!9520 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1235, file: !1235, line: 47, type: !9521, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9523)
!9521 = !DISubroutineType(types: !9522)
!9522 = !{!109, !653, !281}
!9523 = !{!9524, !9525}
!9524 = !DILocalVariable(name: "flags", arg: 1, scope: !9520, file: !1235, line: 47, type: !653)
!9525 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9520, file: !1235, line: 47, type: !281)
!9526 = !DILocation(line: 0, scope: !9520)
!9527 = !DILocation(line: 50, column: 13, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9520, file: !1235, line: 50, column: 6)
!9529 = !DILocation(line: 50, column: 28, scope: !9528)
!9530 = !DILocation(line: 50, column: 6, scope: !9520)
!9531 = !DILocation(line: 53, column: 11, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9528, file: !1235, line: 50, column: 34)
!9533 = !DILocation(line: 55, column: 14, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9532, file: !1235, line: 55, column: 7)
!9535 = !DILocation(line: 55, column: 35, scope: !9534)
!9536 = !DILocation(line: 55, column: 7, scope: !9532)
!9537 = !DILocation(line: 56, column: 14, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9539, file: !1235, line: 56, column: 8)
!9539 = distinct !DILexicalBlock(scope: !9534, file: !1235, line: 55, column: 41)
!9540 = !DILocation(line: 56, column: 8, scope: !9539)
!9541 = !DILocation(line: 0, scope: !9534)
!9542 = !DILocation(line: 66, column: 14, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9532, file: !1235, line: 66, column: 7)
!9544 = !DILocation(line: 66, column: 30, scope: !9543)
!9545 = !DILocation(line: 66, column: 7, scope: !9532)
!9546 = !DILocation(line: 67, column: 12, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9543, file: !1235, line: 66, column: 36)
!9548 = !DILocation(line: 68, column: 3, scope: !9547)
!9549 = !DILocation(line: 68, column: 21, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9543, file: !1235, line: 68, column: 14)
!9551 = !DILocation(line: 68, column: 39, scope: !9550)
!9552 = !DILocation(line: 68, column: 14, scope: !9543)
!9553 = !DILocation(line: 69, column: 12, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9550, file: !1235, line: 68, column: 45)
!9555 = !DILocation(line: 70, column: 3, scope: !9554)
!9556 = !DILocation(line: 72, column: 21, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9528, file: !1235, line: 72, column: 14)
!9558 = !DILocation(line: 72, column: 35, scope: !9557)
!9559 = !DILocation(line: 72, column: 14, scope: !9528)
!9560 = !DILocation(line: 77, column: 14, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9562, file: !1235, line: 77, column: 7)
!9562 = distinct !DILexicalBlock(scope: !9557, file: !1235, line: 72, column: 41)
!9563 = !DILocation(line: 77, column: 30, scope: !9561)
!9564 = !DILocation(line: 77, column: 7, scope: !9562)
!9565 = !DILocation(line: 0, scope: !9528)
!9566 = !DILocation(line: 90, column: 1, scope: !9520)
!9567 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1235, file: !1235, line: 157, type: !9568, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9570)
!9568 = !DISubroutineType(types: !9569)
!9569 = !{null, !1103, !109, !109, !109}
!9570 = !{!9571, !9572, !9573, !9574, !9575, !9576, !9577, !9578, !9579, !9580, !9581}
!9571 = !DILocalVariable(name: "dev", arg: 1, scope: !9567, file: !1235, line: 157, type: !1103)
!9572 = !DILocalVariable(name: "pin", arg: 2, scope: !9567, file: !1235, line: 157, type: !109)
!9573 = !DILocalVariable(name: "conf", arg: 3, scope: !9567, file: !1235, line: 158, type: !109)
!9574 = !DILocalVariable(name: "func", arg: 4, scope: !9567, file: !1235, line: 158, type: !109)
!9575 = !DILocalVariable(name: "cfg", scope: !9567, file: !1235, line: 160, type: !9074)
!9576 = !DILocalVariable(name: "gpio", scope: !9567, file: !1235, line: 161, type: !1170)
!9577 = !DILocalVariable(name: "pin_ll", scope: !9567, file: !1235, line: 163, type: !109)
!9578 = !DILocalVariable(name: "mode", scope: !9567, file: !1235, line: 227, type: !32)
!9579 = !DILocalVariable(name: "otype", scope: !9567, file: !1235, line: 227, type: !32)
!9580 = !DILocalVariable(name: "ospeed", scope: !9567, file: !1235, line: 227, type: !32)
!9581 = !DILocalVariable(name: "pupd", scope: !9567, file: !1235, line: 227, type: !32)
!9582 = !DILocation(line: 0, scope: !9567)
!9583 = !DILocation(line: 160, column: 45, scope: !9567)
!9584 = !DILocation(line: 161, column: 44, scope: !9567)
!9585 = !DILocation(line: 163, column: 15, scope: !9567)
!9586 = !DILocation(line: 229, column: 14, scope: !9567)
!9587 = !DILocation(line: 246, column: 47, scope: !9567)
!9588 = !DILocation(line: 246, column: 2, scope: !9567)
!9589 = !DILocation(line: 248, column: 43, scope: !9567)
!9590 = !DILocation(line: 248, column: 2, scope: !9567)
!9591 = !DILocation(line: 250, column: 40, scope: !9567)
!9592 = !DILocation(line: 250, column: 2, scope: !9567)
!9593 = !DILocation(line: 252, column: 11, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9567, file: !1235, line: 252, column: 6)
!9595 = !DILocation(line: 252, column: 6, scope: !9567)
!9596 = !DILocation(line: 253, column: 11, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9598, file: !1235, line: 253, column: 7)
!9598 = distinct !DILexicalBlock(scope: !9594, file: !1235, line: 252, column: 36)
!9599 = !DILocation(line: 253, column: 7, scope: !9598)
!9600 = !DILocation(line: 254, column: 4, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9597, file: !1235, line: 253, column: 16)
!9602 = !DILocation(line: 255, column: 3, scope: !9601)
!9603 = !DILocation(line: 256, column: 4, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9597, file: !1235, line: 255, column: 10)
!9605 = !DILocation(line: 260, column: 40, scope: !9567)
!9606 = !DILocation(line: 260, column: 2, scope: !9567)
!9607 = !DILocation(line: 265, column: 1, scope: !9567)
!9608 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1235, file: !1235, line: 137, type: !9409, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9609)
!9609 = !{!9610, !9611}
!9610 = !DILocalVariable(name: "pin", arg: 1, scope: !9608, file: !1235, line: 137, type: !109)
!9611 = !DILocalVariable(name: "pinval", scope: !9608, file: !1235, line: 139, type: !110)
!9612 = !DILocation(line: 0, scope: !9608)
!9613 = !DILocation(line: 149, column: 13, scope: !9608)
!9614 = !DILocation(line: 151, column: 2, scope: !9608)
!9615 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9490, file: !9490, line: 343, type: !9616, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9618)
!9616 = !DISubroutineType(types: !9617)
!9617 = !{null, !1170, !110, !110}
!9618 = !{!9619, !9620, !9621}
!9619 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9615, file: !9490, line: 343, type: !1170)
!9620 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9615, file: !9490, line: 343, type: !110)
!9621 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9615, file: !9490, line: 343, type: !110)
!9622 = !DILocation(line: 0, scope: !9615)
!9623 = !DILocation(line: 345, column: 3, scope: !9615)
!9624 = !DILocation(line: 346, column: 1, scope: !9615)
!9625 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9490, file: !9490, line: 414, type: !9616, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9626)
!9626 = !{!9627, !9628, !9629}
!9627 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9625, file: !9490, line: 414, type: !1170)
!9628 = !DILocalVariable(name: "Pin", arg: 2, scope: !9625, file: !9490, line: 414, type: !110)
!9629 = !DILocalVariable(name: "Speed", arg: 3, scope: !9625, file: !9490, line: 414, type: !110)
!9630 = !DILocation(line: 0, scope: !9625)
!9631 = !DILocation(line: 416, column: 3, scope: !9625)
!9632 = !DILocation(line: 0, scope: !9430, inlinedAt: !9633)
!9633 = distinct !DILocation(line: 416, column: 3, scope: !9625)
!9634 = !DILocation(line: 380, column: 4, scope: !9430, inlinedAt: !9633)
!9635 = !DILocation(line: 0, scope: !9438, inlinedAt: !9636)
!9636 = distinct !DILocation(line: 416, column: 3, scope: !9625)
!9637 = !DILocation(line: 414, column: 7, scope: !9438, inlinedAt: !9636)
!9638 = !DILocation(line: 0, scope: !9430, inlinedAt: !9639)
!9639 = distinct !DILocation(line: 416, column: 3, scope: !9625)
!9640 = !DILocation(line: 0, scope: !9438, inlinedAt: !9641)
!9641 = distinct !DILocation(line: 416, column: 3, scope: !9625)
!9642 = !DILocation(line: 418, column: 1, scope: !9625)
!9643 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9490, file: !9490, line: 485, type: !9616, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9644)
!9644 = !{!9645, !9646, !9647}
!9645 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9643, file: !9490, line: 485, type: !1170)
!9646 = !DILocalVariable(name: "Pin", arg: 2, scope: !9643, file: !9490, line: 485, type: !110)
!9647 = !DILocalVariable(name: "Pull", arg: 3, scope: !9643, file: !9490, line: 485, type: !110)
!9648 = !DILocation(line: 0, scope: !9643)
!9649 = !DILocation(line: 487, column: 3, scope: !9643)
!9650 = !DILocation(line: 0, scope: !9430, inlinedAt: !9651)
!9651 = distinct !DILocation(line: 487, column: 3, scope: !9643)
!9652 = !DILocation(line: 380, column: 4, scope: !9430, inlinedAt: !9651)
!9653 = !DILocation(line: 0, scope: !9438, inlinedAt: !9654)
!9654 = distinct !DILocation(line: 487, column: 3, scope: !9643)
!9655 = !DILocation(line: 414, column: 7, scope: !9438, inlinedAt: !9654)
!9656 = !DILocation(line: 0, scope: !9430, inlinedAt: !9657)
!9657 = distinct !DILocation(line: 487, column: 3, scope: !9643)
!9658 = !DILocation(line: 0, scope: !9438, inlinedAt: !9659)
!9659 = distinct !DILocation(line: 487, column: 3, scope: !9643)
!9660 = !DILocation(line: 488, column: 1, scope: !9643)
!9661 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9490, file: !9490, line: 557, type: !9616, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9662)
!9662 = !{!9663, !9664, !9665}
!9663 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9661, file: !9490, line: 557, type: !1170)
!9664 = !DILocalVariable(name: "Pin", arg: 2, scope: !9661, file: !9490, line: 557, type: !110)
!9665 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9661, file: !9490, line: 557, type: !110)
!9666 = !DILocation(line: 0, scope: !9661)
!9667 = !DILocation(line: 559, column: 3, scope: !9661)
!9668 = !DILocation(line: 0, scope: !9430, inlinedAt: !9669)
!9669 = distinct !DILocation(line: 559, column: 3, scope: !9661)
!9670 = !DILocation(line: 380, column: 4, scope: !9430, inlinedAt: !9669)
!9671 = !DILocation(line: 0, scope: !9438, inlinedAt: !9672)
!9672 = distinct !DILocation(line: 559, column: 3, scope: !9661)
!9673 = !DILocation(line: 414, column: 7, scope: !9438, inlinedAt: !9672)
!9674 = !DILocation(line: 0, scope: !9430, inlinedAt: !9675)
!9675 = distinct !DILocation(line: 559, column: 3, scope: !9661)
!9676 = !DILocation(line: 0, scope: !9438, inlinedAt: !9677)
!9677 = distinct !DILocation(line: 559, column: 3, scope: !9661)
!9678 = !DILocation(line: 561, column: 1, scope: !9661)
!9679 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9490, file: !9490, line: 634, type: !9616, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9680)
!9680 = !{!9681, !9682, !9683}
!9681 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9679, file: !9490, line: 634, type: !1170)
!9682 = !DILocalVariable(name: "Pin", arg: 2, scope: !9679, file: !9490, line: 634, type: !110)
!9683 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9679, file: !9490, line: 634, type: !110)
!9684 = !DILocation(line: 0, scope: !9679)
!9685 = !DILocation(line: 636, column: 3, scope: !9679)
!9686 = !DILocation(line: 0, scope: !9430, inlinedAt: !9687)
!9687 = distinct !DILocation(line: 636, column: 3, scope: !9679)
!9688 = !DILocation(line: 380, column: 4, scope: !9430, inlinedAt: !9687)
!9689 = !DILocation(line: 0, scope: !9438, inlinedAt: !9690)
!9690 = distinct !DILocation(line: 636, column: 3, scope: !9679)
!9691 = !DILocation(line: 414, column: 7, scope: !9438, inlinedAt: !9690)
!9692 = !DILocation(line: 0, scope: !9430, inlinedAt: !9693)
!9693 = distinct !DILocation(line: 636, column: 3, scope: !9679)
!9694 = !DILocation(line: 0, scope: !9438, inlinedAt: !9695)
!9695 = distinct !DILocation(line: 636, column: 3, scope: !9679)
!9696 = !DILocation(line: 638, column: 1, scope: !9679)
!9697 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9490, file: !9490, line: 274, type: !9616, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9698)
!9698 = !{!9699, !9700, !9701}
!9699 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9697, file: !9490, line: 274, type: !1170)
!9700 = !DILocalVariable(name: "Pin", arg: 2, scope: !9697, file: !9490, line: 274, type: !110)
!9701 = !DILocalVariable(name: "Mode", arg: 3, scope: !9697, file: !9490, line: 274, type: !110)
!9702 = !DILocation(line: 0, scope: !9697)
!9703 = !DILocation(line: 276, column: 3, scope: !9697)
!9704 = !DILocation(line: 0, scope: !9430, inlinedAt: !9705)
!9705 = distinct !DILocation(line: 276, column: 3, scope: !9697)
!9706 = !DILocation(line: 380, column: 4, scope: !9430, inlinedAt: !9705)
!9707 = !DILocation(line: 0, scope: !9438, inlinedAt: !9708)
!9708 = distinct !DILocation(line: 276, column: 3, scope: !9697)
!9709 = !DILocation(line: 414, column: 7, scope: !9438, inlinedAt: !9708)
!9710 = !DILocation(line: 0, scope: !9430, inlinedAt: !9711)
!9711 = distinct !DILocation(line: 276, column: 3, scope: !9697)
!9712 = !DILocation(line: 0, scope: !9438, inlinedAt: !9713)
!9713 = distinct !DILocation(line: 276, column: 3, scope: !9697)
!9714 = !DILocation(line: 277, column: 1, scope: !9697)
!9715 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1235, file: !1235, line: 698, type: !1248, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9716)
!9716 = !{!9717, !9718, !9719}
!9717 = !DILocalVariable(name: "dev", arg: 1, scope: !9715, file: !1235, line: 698, type: !1103)
!9718 = !DILocalVariable(name: "data", scope: !9715, file: !1235, line: 700, type: !9141)
!9719 = !DILocalVariable(name: "ret", scope: !9715, file: !1235, line: 701, type: !109)
!9720 = !DILocation(line: 0, scope: !9715)
!9721 = !DILocation(line: 700, column: 38, scope: !9715)
!9722 = !DILocation(line: 703, column: 8, scope: !9715)
!9723 = !DILocation(line: 703, column: 12, scope: !9715)
!9724 = !DILocation(line: 705, column: 7, scope: !9725)
!9725 = distinct !DILexicalBlock(scope: !9715, file: !1235, line: 705, column: 6)
!9726 = !DILocation(line: 705, column: 6, scope: !9715)
!9727 = !DILocation(line: 722, column: 8, scope: !9715)
!9728 = !DILocation(line: 723, column: 10, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9715, file: !1235, line: 723, column: 6)
!9730 = !DILocation(line: 723, column: 6, scope: !9715)
!9731 = !DILocation(line: 731, column: 1, scope: !9715)
!9732 = distinct !DISubprogram(name: "device_is_ready", scope: !8268, file: !8268, line: 47, type: !9733, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9735)
!9733 = !DISubroutineType(types: !9734)
!9734 = !{!360, !1103}
!9735 = !{!9736}
!9736 = !DILocalVariable(name: "dev", arg: 1, scope: !9732, file: !8268, line: 47, type: !1103)
!9737 = !DILocation(line: 0, scope: !9732)
!9738 = !DILocation(line: 55, column: 2, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9732, file: !8268, line: 55, column: 2)
!9740 = !{i64 2152415692}
!9741 = !DILocation(line: 56, column: 9, scope: !9732)
!9742 = !DILocation(line: 56, column: 2, scope: !9732)
!9743 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1235, file: !1235, line: 270, type: !9744, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9746)
!9744 = !DISubroutineType(types: !9745)
!9745 = !{!109, !1103, !360}
!9746 = !{!9747, !9748, !9749, !9750, !9751}
!9747 = !DILocalVariable(name: "dev", arg: 1, scope: !9743, file: !1235, line: 270, type: !1103)
!9748 = !DILocalVariable(name: "on", arg: 2, scope: !9743, file: !1235, line: 270, type: !360)
!9749 = !DILocalVariable(name: "cfg", scope: !9743, file: !1235, line: 272, type: !9074)
!9750 = !DILocalVariable(name: "ret", scope: !9743, file: !1235, line: 273, type: !109)
!9751 = !DILocalVariable(name: "clk", scope: !9743, file: !1235, line: 278, type: !9376)
!9752 = !DILocation(line: 0, scope: !9743)
!9753 = !DILocation(line: 272, column: 45, scope: !9743)
!9754 = !DILocation(line: 282, column: 38, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9756, file: !1235, line: 280, column: 10)
!9756 = distinct !DILexicalBlock(scope: !9743, file: !1235, line: 280, column: 6)
!9757 = !DILocation(line: 282, column: 6, scope: !9755)
!9758 = !DILocation(line: 281, column: 9, scope: !9755)
!9759 = !DILocation(line: 293, column: 1, scope: !9743)
!9760 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !9733, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9761)
!9761 = !{!9762}
!9762 = !DILocalVariable(name: "dev", arg: 1, scope: !9760, file: !349, line: 730, type: !1103)
!9763 = !DILocation(line: 0, scope: !9760)
!9764 = !DILocation(line: 732, column: 9, scope: !9760)
!9765 = !DILocation(line: 732, column: 2, scope: !9760)
!9766 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1235, file: !1235, line: 496, type: !9767, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1085, retainedNodes: !9769)
!9767 = !DISubroutineType(types: !9768)
!9768 = !{!109, !1103, !109, !109, !109}
!9769 = !{!9770, !9771, !9772, !9773, !9774, !9775}
!9770 = !DILocalVariable(name: "dev", arg: 1, scope: !9766, file: !1235, line: 496, type: !1103)
!9771 = !DILocalVariable(name: "pin", arg: 2, scope: !9766, file: !1235, line: 496, type: !109)
!9772 = !DILocalVariable(name: "conf", arg: 3, scope: !9766, file: !1235, line: 496, type: !109)
!9773 = !DILocalVariable(name: "func", arg: 4, scope: !9766, file: !1235, line: 496, type: !109)
!9774 = !DILocalVariable(name: "ret", scope: !9766, file: !1235, line: 498, type: !109)
!9775 = !DILocalVariable(name: "gpio_out", scope: !9776, file: !1235, line: 508, type: !110)
!9776 = distinct !DILexicalBlock(scope: !9777, file: !1235, line: 507, column: 27)
!9777 = distinct !DILexicalBlock(scope: !9766, file: !1235, line: 507, column: 6)
!9778 = !DILocation(line: 0, scope: !9766)
!9779 = !DILocation(line: 505, column: 2, scope: !9766)
!9780 = !DILocation(line: 507, column: 11, scope: !9777)
!9781 = !DILocation(line: 507, column: 6, scope: !9766)
!9782 = !DILocation(line: 508, column: 28, scope: !9776)
!9783 = !DILocation(line: 0, scope: !9776)
!9784 = !DILocation(line: 510, column: 16, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9776, file: !1235, line: 510, column: 7)
!9786 = !DILocation(line: 0, scope: !9785)
!9787 = !DILocation(line: 510, column: 7, scope: !9776)
!9788 = !DILocation(line: 511, column: 4, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9785, file: !1235, line: 510, column: 32)
!9790 = !DILocation(line: 512, column: 3, scope: !9789)
!9791 = !DILocation(line: 513, column: 4, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9793, file: !1235, line: 512, column: 39)
!9793 = distinct !DILexicalBlock(scope: !9785, file: !1235, line: 512, column: 14)
!9794 = !DILocation(line: 514, column: 3, scope: !9792)
!9795 = !DILocation(line: 518, column: 1, scope: !9766)
!9796 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1492, file: !1492, line: 526, type: !1396, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9797)
!9797 = !{!9798, !9799, !9800}
!9798 = !DILocalVariable(name: "dev", arg: 1, scope: !9796, file: !1492, line: 526, type: !1398)
!9799 = !DILocalVariable(name: "c", arg: 2, scope: !9796, file: !1492, line: 526, type: !1046)
!9800 = !DILocalVariable(name: "config", scope: !9796, file: !1492, line: 528, type: !9801)
!9801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!9802 = !DILocation(line: 0, scope: !9796)
!9803 = !DILocation(line: 528, column: 48, scope: !9796)
!9804 = !DILocation(line: 531, column: 40, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9796, file: !1492, line: 531, column: 6)
!9806 = !DILocation(line: 531, column: 6, scope: !9805)
!9807 = !DILocation(line: 531, column: 6, scope: !9796)
!9808 = !DILocation(line: 532, column: 34, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9805, file: !1492, line: 531, column: 48)
!9810 = !DILocation(line: 532, column: 3, scope: !9809)
!9811 = !DILocation(line: 533, column: 2, scope: !9809)
!9812 = !DILocation(line: 539, column: 42, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9796, file: !1492, line: 539, column: 6)
!9814 = !DILocation(line: 539, column: 7, scope: !9813)
!9815 = !DILocation(line: 539, column: 6, scope: !9796)
!9816 = !DILocation(line: 543, column: 52, scope: !9796)
!9817 = !DILocation(line: 543, column: 22, scope: !9796)
!9818 = !DILocation(line: 543, column: 5, scope: !9796)
!9819 = !DILocation(line: 545, column: 2, scope: !9796)
!9820 = !DILocation(line: 546, column: 1, scope: !9796)
!9821 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1492, file: !1492, line: 548, type: !1415, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9822)
!9822 = !{!9823, !9824, !9825, !9826}
!9823 = !DILocalVariable(name: "dev", arg: 1, scope: !9821, file: !1492, line: 548, type: !1398)
!9824 = !DILocalVariable(name: "c", arg: 2, scope: !9821, file: !1492, line: 549, type: !181)
!9825 = !DILocalVariable(name: "config", scope: !9821, file: !1492, line: 551, type: !9801)
!9826 = !DILocalVariable(name: "key", scope: !9821, file: !1492, line: 555, type: !32)
!9827 = !DILocation(line: 0, scope: !9821)
!9828 = !DILocation(line: 551, column: 48, scope: !9821)
!9829 = !DILocation(line: 562, column: 2, scope: !9821)
!9830 = !DILocation(line: 563, column: 41, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !1492, line: 563, column: 7)
!9832 = distinct !DILexicalBlock(scope: !9821, file: !1492, line: 562, column: 12)
!9833 = !DILocation(line: 563, column: 7, scope: !9831)
!9834 = !DILocation(line: 563, column: 7, scope: !9832)
!9835 = !DILocation(line: 55, column: 2, scope: !9836, inlinedAt: !9840)
!9836 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6046, file: !6046, line: 42, type: !6047, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9837)
!9837 = !{!9838, !9839}
!9838 = !DILocalVariable(name: "key", scope: !9836, file: !6046, line: 44, type: !32)
!9839 = !DILocalVariable(name: "tmp", scope: !9836, file: !6046, line: 53, type: !32)
!9840 = distinct !DILocation(line: 564, column: 10, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9831, file: !1492, line: 563, column: 49)
!9842 = !{i64 1701751}
!9843 = !DILocation(line: 0, scope: !9836, inlinedAt: !9840)
!9844 = !DILocation(line: 565, column: 42, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9841, file: !1492, line: 565, column: 8)
!9846 = !DILocation(line: 565, column: 8, scope: !9845)
!9847 = !DILocation(line: 565, column: 8, scope: !9841)
!9848 = !DILocalVariable(name: "key", arg: 1, scope: !9849, file: !6046, line: 84, type: !32)
!9849 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9850)
!9850 = !{!9848}
!9851 = !DILocation(line: 0, scope: !9849, inlinedAt: !9852)
!9852 = distinct !DILocation(line: 568, column: 4, scope: !9841)
!9853 = !DILocation(line: 95, column: 2, scope: !9849, inlinedAt: !9852)
!9854 = !{i64 1702568}
!9855 = !DILocation(line: 569, column: 3, scope: !9841)
!9856 = distinct !{!9856, !9829, !9857}
!9857 = !DILocation(line: 570, column: 2, scope: !9821)
!9858 = !DILocation(line: 592, column: 33, scope: !9821)
!9859 = !DILocation(line: 592, column: 2, scope: !9821)
!9860 = !DILocation(line: 0, scope: !9849, inlinedAt: !9861)
!9861 = distinct !DILocation(line: 593, column: 2, scope: !9821)
!9862 = !DILocation(line: 95, column: 2, scope: !9849, inlinedAt: !9861)
!9863 = !DILocation(line: 594, column: 1, scope: !9821)
!9864 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1492, file: !1492, line: 596, type: !1419, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9865)
!9865 = !{!9866, !9867, !9868}
!9866 = !DILocalVariable(name: "dev", arg: 1, scope: !9864, file: !1492, line: 596, type: !1398)
!9867 = !DILocalVariable(name: "config", scope: !9864, file: !1492, line: 598, type: !9801)
!9868 = !DILocalVariable(name: "err", scope: !9864, file: !1492, line: 599, type: !110)
!9869 = !DILocation(line: 0, scope: !9864)
!9870 = !DILocation(line: 598, column: 48, scope: !9864)
!9871 = !DILocation(line: 606, column: 40, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9864, file: !1492, line: 606, column: 6)
!9873 = !DILocation(line: 606, column: 6, scope: !9872)
!9874 = !DILocation(line: 606, column: 6, scope: !9864)
!9875 = !DILocation(line: 610, column: 39, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9864, file: !1492, line: 610, column: 6)
!9877 = !DILocation(line: 610, column: 6, scope: !9876)
!9878 = !DILocation(line: 610, column: 6, scope: !9864)
!9879 = !DILocation(line: 614, column: 39, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9864, file: !1492, line: 614, column: 6)
!9881 = !DILocation(line: 614, column: 6, scope: !9880)
!9882 = !DILocation(line: 614, column: 6, scope: !9864)
!9883 = !DILocation(line: 619, column: 40, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9864, file: !1492, line: 619, column: 6)
!9885 = !DILocation(line: 619, column: 6, scope: !9884)
!9886 = !DILocation(line: 619, column: 6, scope: !9864)
!9887 = !DILocation(line: 623, column: 10, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9864, file: !1492, line: 623, column: 6)
!9889 = !DILocation(line: 623, column: 6, scope: !9864)
!9890 = !DILocation(line: 624, column: 34, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9888, file: !1492, line: 623, column: 24)
!9892 = !DILocation(line: 624, column: 3, scope: !9891)
!9893 = !DILocation(line: 625, column: 2, scope: !9891)
!9894 = !DILocation(line: 632, column: 10, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9864, file: !1492, line: 632, column: 6)
!9896 = !DILocation(line: 632, column: 6, scope: !9864)
!9897 = !DILocation(line: 633, column: 34, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9895, file: !1492, line: 632, column: 32)
!9899 = !DILocation(line: 633, column: 3, scope: !9898)
!9900 = !DILocation(line: 634, column: 2, scope: !9898)
!9901 = !DILocation(line: 636, column: 10, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9864, file: !1492, line: 636, column: 6)
!9903 = !DILocation(line: 636, column: 6, scope: !9864)
!9904 = !DILocation(line: 637, column: 33, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9902, file: !1492, line: 636, column: 31)
!9906 = !DILocation(line: 637, column: 3, scope: !9905)
!9907 = !DILocation(line: 638, column: 2, scope: !9905)
!9908 = !DILocation(line: 640, column: 10, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9864, file: !1492, line: 640, column: 6)
!9910 = !DILocation(line: 640, column: 6, scope: !9864)
!9911 = !DILocation(line: 641, column: 33, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9909, file: !1492, line: 640, column: 32)
!9913 = !DILocation(line: 641, column: 3, scope: !9912)
!9914 = !DILocation(line: 642, column: 2, scope: !9912)
!9915 = !DILocation(line: 646, column: 32, scope: !9864)
!9916 = !DILocation(line: 646, column: 2, scope: !9864)
!9917 = !DILocation(line: 648, column: 2, scope: !9864)
!9918 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1492, file: !1492, line: 419, type: !1423, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !9919)
!9919 = !{!9920, !9921, !9922, !9923, !9925, !9926, !9927, !9928}
!9920 = !DILocalVariable(name: "dev", arg: 1, scope: !9918, file: !1492, line: 419, type: !1398)
!9921 = !DILocalVariable(name: "cfg", arg: 2, scope: !9918, file: !1492, line: 420, type: !1425)
!9922 = !DILocalVariable(name: "config", scope: !9918, file: !1492, line: 422, type: !9801)
!9923 = !DILocalVariable(name: "data", scope: !9918, file: !1492, line: 423, type: !9924)
!9924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!9925 = !DILocalVariable(name: "parity", scope: !9918, file: !1492, line: 424, type: !6636)
!9926 = !DILocalVariable(name: "stopbits", scope: !9918, file: !1492, line: 425, type: !6636)
!9927 = !DILocalVariable(name: "databits", scope: !9918, file: !1492, line: 426, type: !6636)
!9928 = !DILocalVariable(name: "flowctrl", scope: !9918, file: !1492, line: 428, type: !6636)
!9929 = !DILocation(line: 0, scope: !9918)
!9930 = !DILocation(line: 422, column: 48, scope: !9918)
!9931 = !DILocation(line: 423, column: 38, scope: !9918)
!9932 = !DILocation(line: 424, column: 56, scope: !9918)
!9933 = !DILocation(line: 424, column: 51, scope: !9918)
!9934 = !DILocation(line: 424, column: 26, scope: !9918)
!9935 = !DILocation(line: 425, column: 60, scope: !9918)
!9936 = !DILocation(line: 425, column: 55, scope: !9918)
!9937 = !DILocation(line: 425, column: 28, scope: !9918)
!9938 = !DILocation(line: 426, column: 60, scope: !9918)
!9939 = !DILocation(line: 426, column: 55, scope: !9918)
!9940 = !DILocation(line: 426, column: 28, scope: !9918)
!9941 = !DILocation(line: 428, column: 58, scope: !9918)
!9942 = !DILocation(line: 428, column: 53, scope: !9918)
!9943 = !DILocation(line: 428, column: 28, scope: !9918)
!9944 = !DILocation(line: 431, column: 44, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9918, file: !1492, line: 431, column: 6)
!9946 = !DILocation(line: 438, column: 22, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9918, file: !1492, line: 437, column: 6)
!9948 = !DILocation(line: 437, column: 6, scope: !9918)
!9949 = !DILocation(line: 448, column: 6, scope: !9918)
!9950 = !DILocation(line: 465, column: 47, scope: !9951)
!9951 = distinct !DILexicalBlock(scope: !9918, file: !1492, line: 465, column: 6)
!9952 = !DILocation(line: 475, column: 21, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9918, file: !1492, line: 475, column: 6)
!9954 = !DILocation(line: 475, column: 6, scope: !9918)
!9955 = !DILocation(line: 476, column: 8, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9957, file: !1492, line: 476, column: 7)
!9957 = distinct !DILexicalBlock(scope: !9953, file: !1492, line: 475, column: 49)
!9958 = !DILocation(line: 477, column: 34, scope: !9956)
!9959 = !DILocation(line: 476, column: 7, scope: !9957)
!9960 = !DILocation(line: 482, column: 27, scope: !9918)
!9961 = !DILocation(line: 482, column: 2, scope: !9918)
!9962 = !DILocation(line: 484, column: 16, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9918, file: !1492, line: 484, column: 6)
!9964 = !DILocation(line: 484, column: 13, scope: !9963)
!9965 = !DILocation(line: 484, column: 6, scope: !9918)
!9966 = !DILocation(line: 485, column: 3, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9963, file: !1492, line: 484, column: 44)
!9968 = !DILocation(line: 486, column: 2, scope: !9967)
!9969 = !DILocation(line: 488, column: 18, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9918, file: !1492, line: 488, column: 6)
!9971 = !DILocation(line: 488, column: 15, scope: !9970)
!9972 = !DILocation(line: 488, column: 6, scope: !9918)
!9973 = !DILocation(line: 489, column: 3, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9970, file: !1492, line: 488, column: 48)
!9975 = !DILocation(line: 490, column: 2, scope: !9974)
!9976 = !DILocation(line: 492, column: 18, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9918, file: !1492, line: 492, column: 6)
!9978 = !DILocation(line: 492, column: 15, scope: !9977)
!9979 = !DILocation(line: 492, column: 6, scope: !9918)
!9980 = !DILocation(line: 493, column: 3, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9977, file: !1492, line: 492, column: 48)
!9982 = !DILocation(line: 494, column: 2, scope: !9981)
!9983 = !DILocation(line: 496, column: 18, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9918, file: !1492, line: 496, column: 6)
!9985 = !DILocation(line: 496, column: 15, scope: !9984)
!9986 = !DILocation(line: 496, column: 6, scope: !9918)
!9987 = !DILocation(line: 497, column: 3, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9984, file: !1492, line: 496, column: 46)
!9989 = !DILocation(line: 498, column: 2, scope: !9988)
!9990 = !DILocation(line: 500, column: 11, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9918, file: !1492, line: 500, column: 6)
!9992 = !DILocation(line: 500, column: 29, scope: !9991)
!9993 = !DILocation(line: 500, column: 20, scope: !9991)
!9994 = !DILocation(line: 500, column: 6, scope: !9918)
!9995 = !DILocation(line: 501, column: 3, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9991, file: !1492, line: 500, column: 40)
!9997 = !DILocation(line: 502, column: 26, scope: !9996)
!9998 = !DILocation(line: 502, column: 19, scope: !9996)
!9999 = !DILocation(line: 503, column: 2, scope: !9996)
!10000 = !DILocation(line: 505, column: 26, scope: !9918)
!10001 = !DILocation(line: 505, column: 2, scope: !9918)
!10002 = !DILocation(line: 506, column: 2, scope: !9918)
!10003 = !DILocation(line: 507, column: 1, scope: !9918)
!10004 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1492, file: !1492, line: 509, type: !1436, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10005)
!10005 = !{!10006, !10007, !10008}
!10006 = !DILocalVariable(name: "dev", arg: 1, scope: !10004, file: !1492, line: 509, type: !1398)
!10007 = !DILocalVariable(name: "cfg", arg: 2, scope: !10004, file: !1492, line: 510, type: !1438)
!10008 = !DILocalVariable(name: "data", scope: !10004, file: !1492, line: 512, type: !9924)
!10009 = !DILocation(line: 0, scope: !10004)
!10010 = !DILocation(line: 512, column: 38, scope: !10004)
!10011 = !DILocation(line: 514, column: 24, scope: !10004)
!10012 = !DILocation(line: 514, column: 7, scope: !10004)
!10013 = !DILocation(line: 514, column: 16, scope: !10004)
!10014 = !DILocation(line: 515, column: 41, scope: !10004)
!10015 = !{i32 0, i32 1537}
!10016 = !DILocation(line: 515, column: 16, scope: !10004)
!10017 = !DILocation(line: 515, column: 7, scope: !10004)
!10018 = !DILocation(line: 515, column: 14, scope: !10004)
!10019 = !DILocation(line: 517, column: 3, scope: !10004)
!10020 = !{i32 0, i32 12289}
!10021 = !DILocation(line: 516, column: 19, scope: !10004)
!10022 = !DILocation(line: 516, column: 7, scope: !10004)
!10023 = !DILocation(line: 516, column: 17, scope: !10004)
!10024 = !DILocation(line: 519, column: 3, scope: !10004)
!10025 = !DILocation(line: 519, column: 33, scope: !10004)
!10026 = !DILocation(line: 518, column: 19, scope: !10004)
!10027 = !DILocation(line: 518, column: 7, scope: !10004)
!10028 = !DILocation(line: 518, column: 17, scope: !10004)
!10029 = !DILocation(line: 521, column: 3, scope: !10004)
!10030 = !{i32 0, i32 769}
!10031 = !DILocation(line: 520, column: 19, scope: !10004)
!10032 = !DILocation(line: 520, column: 7, scope: !10004)
!10033 = !DILocation(line: 520, column: 17, scope: !10004)
!10034 = !DILocation(line: 522, column: 2, scope: !10004)
!10035 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1492, file: !1492, line: 205, type: !10036, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10038)
!10036 = !DISubroutineType(types: !10037)
!10037 = !{!110, !1398}
!10038 = !{!10039, !10040}
!10039 = !DILocalVariable(name: "dev", arg: 1, scope: !10035, file: !1492, line: 205, type: !1398)
!10040 = !DILocalVariable(name: "config", scope: !10035, file: !1492, line: 207, type: !9801)
!10041 = !DILocation(line: 0, scope: !10035)
!10042 = !DILocation(line: 207, column: 48, scope: !10035)
!10043 = !DILocation(line: 209, column: 36, scope: !10035)
!10044 = !DILocation(line: 209, column: 9, scope: !10035)
!10045 = !DILocation(line: 209, column: 2, scope: !10035)
!10046 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1492, file: !1492, line: 270, type: !10047, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10049)
!10047 = !DISubroutineType(types: !10048)
!10048 = !{!1364, !110}
!10049 = !{!10050}
!10050 = !DILocalVariable(name: "parity", arg: 1, scope: !10046, file: !1492, line: 270, type: !110)
!10051 = !DILocation(line: 0, scope: !10046)
!10052 = !DILocation(line: 272, column: 2, scope: !10046)
!10053 = !DILocation(line: 281, column: 1, scope: !10046)
!10054 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1492, file: !1492, line: 220, type: !10036, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10055)
!10055 = !{!10056, !10057}
!10056 = !DILocalVariable(name: "dev", arg: 1, scope: !10054, file: !1492, line: 220, type: !1398)
!10057 = !DILocalVariable(name: "config", scope: !10054, file: !1492, line: 222, type: !9801)
!10058 = !DILocation(line: 0, scope: !10054)
!10059 = !DILocation(line: 222, column: 48, scope: !10054)
!10060 = !DILocation(line: 224, column: 44, scope: !10054)
!10061 = !DILocation(line: 224, column: 9, scope: !10054)
!10062 = !DILocation(line: 224, column: 2, scope: !10054)
!10063 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1492, file: !1492, line: 304, type: !10064, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10066)
!10064 = !DISubroutineType(types: !10065)
!10065 = !{!1378, !110}
!10066 = !{!10067}
!10067 = !DILocalVariable(name: "sb", arg: 1, scope: !10063, file: !1492, line: 304, type: !110)
!10068 = !DILocation(line: 0, scope: !10063)
!10069 = !DILocation(line: 306, column: 2, scope: !10063)
!10070 = !DILocation(line: 0, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10063, file: !1492, line: 306, column: 14)
!10072 = !DILocation(line: 323, column: 1, scope: !10063)
!10073 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1492, file: !1492, line: 235, type: !10036, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10074)
!10074 = !{!10075, !10076}
!10075 = !DILocalVariable(name: "dev", arg: 1, scope: !10073, file: !1492, line: 235, type: !1398)
!10076 = !DILocalVariable(name: "config", scope: !10073, file: !1492, line: 237, type: !9801)
!10077 = !DILocation(line: 0, scope: !10073)
!10078 = !DILocation(line: 237, column: 48, scope: !10073)
!10079 = !DILocation(line: 239, column: 39, scope: !10073)
!10080 = !DILocation(line: 239, column: 9, scope: !10073)
!10081 = !DILocation(line: 239, column: 2, scope: !10073)
!10082 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1492, file: !1492, line: 355, type: !10083, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10085)
!10083 = !DISubroutineType(types: !10084)
!10084 = !{!1371, !110, !110}
!10085 = !{!10086, !10087}
!10086 = !DILocalVariable(name: "db", arg: 1, scope: !10082, file: !1492, line: 355, type: !110)
!10087 = !DILocalVariable(name: "p", arg: 2, scope: !10082, file: !1492, line: 356, type: !110)
!10088 = !DILocation(line: 0, scope: !10082)
!10089 = !DILocation(line: 358, column: 2, scope: !10082)
!10090 = !DILocation(line: 384, column: 1, scope: !10082)
!10091 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1492, file: !1492, line: 250, type: !10036, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10092)
!10092 = !{!10093, !10094}
!10093 = !DILocalVariable(name: "dev", arg: 1, scope: !10091, file: !1492, line: 250, type: !1398)
!10094 = !DILocalVariable(name: "config", scope: !10091, file: !1492, line: 252, type: !9801)
!10095 = !DILocation(line: 0, scope: !10091)
!10096 = !DILocation(line: 252, column: 48, scope: !10091)
!10097 = !DILocation(line: 254, column: 40, scope: !10091)
!10098 = !DILocation(line: 254, column: 9, scope: !10091)
!10099 = !DILocation(line: 254, column: 2, scope: !10091)
!10100 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1492, file: !1492, line: 409, type: !10101, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10103)
!10101 = !DISubroutineType(types: !10102)
!10102 = !{!1384, !110}
!10103 = !{!10104}
!10104 = !DILocalVariable(name: "fc", arg: 1, scope: !10100, file: !1492, line: 409, type: !110)
!10105 = !DILocation(line: 0, scope: !10100)
!10106 = !DILocation(line: 411, column: 9, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10100, file: !1492, line: 411, column: 6)
!10108 = !DILocation(line: 416, column: 1, scope: !10100)
!10109 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10110, file: !10110, line: 966, type: !10111, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10113)
!10110 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10111 = !DISubroutineType(types: !10112)
!10112 = !{!110, !1439}
!10113 = !{!10114}
!10114 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10109, file: !10110, line: 966, type: !1439)
!10115 = !DILocation(line: 0, scope: !10109)
!10116 = !DILocation(line: 968, column: 21, scope: !10109)
!10117 = !DILocation(line: 968, column: 3, scope: !10109)
!10118 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10110, file: !10110, line: 600, type: !10111, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10119)
!10119 = !{!10120}
!10120 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10118, file: !10110, line: 600, type: !1439)
!10121 = !DILocation(line: 0, scope: !10118)
!10122 = !DILocation(line: 602, column: 21, scope: !10118)
!10123 = !DILocation(line: 602, column: 3, scope: !10118)
!10124 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10110, file: !10110, line: 819, type: !10111, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10125)
!10125 = !{!10126}
!10126 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10124, file: !10110, line: 819, type: !1439)
!10127 = !DILocation(line: 0, scope: !10124)
!10128 = !DILocation(line: 821, column: 21, scope: !10124)
!10129 = !DILocation(line: 821, column: 3, scope: !10124)
!10130 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10110, file: !10110, line: 546, type: !10111, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10131)
!10131 = !{!10132}
!10132 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10130, file: !10110, line: 546, type: !1439)
!10133 = !DILocation(line: 0, scope: !10130)
!10134 = !DILocation(line: 548, column: 21, scope: !10130)
!10135 = !DILocation(line: 548, column: 3, scope: !10130)
!10136 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1492, file: !1492, line: 257, type: !10137, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10139)
!10137 = !DISubroutineType(types: !10138)
!10138 = !{!110, !1364}
!10139 = !{!10140}
!10140 = !DILocalVariable(name: "parity", arg: 1, scope: !10136, file: !1492, line: 257, type: !1364)
!10141 = !DILocation(line: 0, scope: !10136)
!10142 = !DILocation(line: 259, column: 2, scope: !10136)
!10143 = !DILocation(line: 268, column: 1, scope: !10136)
!10144 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1492, file: !1492, line: 283, type: !10145, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10147)
!10145 = !DISubroutineType(types: !10146)
!10146 = !{!110, !1378}
!10147 = !{!10148}
!10148 = !DILocalVariable(name: "sb", arg: 1, scope: !10144, file: !1492, line: 283, type: !1378)
!10149 = !DILocation(line: 0, scope: !10144)
!10150 = !DILocation(line: 285, column: 2, scope: !10144)
!10151 = !DILocation(line: 0, scope: !10152)
!10152 = distinct !DILexicalBlock(scope: !10144, file: !1492, line: 285, column: 14)
!10153 = !DILocation(line: 302, column: 1, scope: !10144)
!10154 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1492, file: !1492, line: 325, type: !10155, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10157)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{!110, !1371, !1364}
!10157 = !{!10158, !10159}
!10158 = !DILocalVariable(name: "db", arg: 1, scope: !10154, file: !1492, line: 325, type: !1371)
!10159 = !DILocalVariable(name: "p", arg: 2, scope: !10154, file: !1492, line: 326, type: !1364)
!10160 = !DILocation(line: 0, scope: !10154)
!10161 = !DILocation(line: 328, column: 2, scope: !10154)
!10162 = !DILocation(line: 353, column: 1, scope: !10154)
!10163 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1492, file: !1492, line: 393, type: !10164, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10166)
!10164 = !DISubroutineType(types: !10165)
!10165 = !{!110, !1384}
!10166 = !{!10167}
!10167 = !DILocalVariable(name: "fc", arg: 1, scope: !10163, file: !1492, line: 393, type: !1384)
!10168 = !DILocation(line: 0, scope: !10163)
!10169 = !DILocation(line: 395, column: 9, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10163, file: !1492, line: 395, column: 6)
!10171 = !DILocation(line: 400, column: 1, scope: !10163)
!10172 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10110, file: !10110, line: 423, type: !10173, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10175)
!10173 = !DISubroutineType(types: !10174)
!10174 = !{null, !1439}
!10175 = !{!10176}
!10176 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10172, file: !10110, line: 423, type: !1439)
!10177 = !DILocation(line: 0, scope: !10172)
!10178 = !DILocation(line: 425, column: 3, scope: !10172)
!10179 = !DILocation(line: 426, column: 1, scope: !10172)
!10180 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1492, file: !1492, line: 197, type: !10181, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10183)
!10181 = !DISubroutineType(types: !10182)
!10182 = !{null, !1398, !110}
!10183 = !{!10184, !10185, !10186}
!10184 = !DILocalVariable(name: "dev", arg: 1, scope: !10180, file: !1492, line: 197, type: !1398)
!10185 = !DILocalVariable(name: "parity", arg: 2, scope: !10180, file: !1492, line: 198, type: !110)
!10186 = !DILocalVariable(name: "config", scope: !10180, file: !1492, line: 200, type: !9801)
!10187 = !DILocation(line: 0, scope: !10180)
!10188 = !DILocation(line: 200, column: 48, scope: !10180)
!10189 = !DILocation(line: 202, column: 29, scope: !10180)
!10190 = !DILocation(line: 202, column: 2, scope: !10180)
!10191 = !DILocation(line: 203, column: 1, scope: !10180)
!10192 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1492, file: !1492, line: 212, type: !10181, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10193)
!10193 = !{!10194, !10195, !10196}
!10194 = !DILocalVariable(name: "dev", arg: 1, scope: !10192, file: !1492, line: 212, type: !1398)
!10195 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10192, file: !1492, line: 213, type: !110)
!10196 = !DILocalVariable(name: "config", scope: !10192, file: !1492, line: 215, type: !9801)
!10197 = !DILocation(line: 0, scope: !10192)
!10198 = !DILocation(line: 215, column: 48, scope: !10192)
!10199 = !DILocation(line: 217, column: 37, scope: !10192)
!10200 = !DILocation(line: 217, column: 2, scope: !10192)
!10201 = !DILocation(line: 218, column: 1, scope: !10192)
!10202 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1492, file: !1492, line: 227, type: !10181, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10203)
!10203 = !{!10204, !10205, !10206}
!10204 = !DILocalVariable(name: "dev", arg: 1, scope: !10202, file: !1492, line: 227, type: !1398)
!10205 = !DILocalVariable(name: "databits", arg: 2, scope: !10202, file: !1492, line: 228, type: !110)
!10206 = !DILocalVariable(name: "config", scope: !10202, file: !1492, line: 230, type: !9801)
!10207 = !DILocation(line: 0, scope: !10202)
!10208 = !DILocation(line: 230, column: 48, scope: !10202)
!10209 = !DILocation(line: 232, column: 32, scope: !10202)
!10210 = !DILocation(line: 232, column: 2, scope: !10202)
!10211 = !DILocation(line: 233, column: 1, scope: !10202)
!10212 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1492, file: !1492, line: 242, type: !10181, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10213)
!10213 = !{!10214, !10215, !10216}
!10214 = !DILocalVariable(name: "dev", arg: 1, scope: !10212, file: !1492, line: 242, type: !1398)
!10215 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10212, file: !1492, line: 243, type: !110)
!10216 = !DILocalVariable(name: "config", scope: !10212, file: !1492, line: 245, type: !9801)
!10217 = !DILocation(line: 0, scope: !10212)
!10218 = !DILocation(line: 245, column: 48, scope: !10212)
!10219 = !DILocation(line: 247, column: 33, scope: !10212)
!10220 = !DILocation(line: 247, column: 2, scope: !10212)
!10221 = !DILocation(line: 248, column: 1, scope: !10212)
!10222 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1492, file: !1492, line: 107, type: !10181, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10223)
!10223 = !{!10224, !10225, !10226, !10227, !10228}
!10224 = !DILocalVariable(name: "dev", arg: 1, scope: !10222, file: !1492, line: 107, type: !1398)
!10225 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10222, file: !1492, line: 107, type: !110)
!10226 = !DILocalVariable(name: "config", scope: !10222, file: !1492, line: 109, type: !9801)
!10227 = !DILocalVariable(name: "data", scope: !10222, file: !1492, line: 110, type: !9924)
!10228 = !DILocalVariable(name: "clock_rate", scope: !10222, file: !1492, line: 112, type: !110)
!10229 = !DILocation(line: 0, scope: !10222)
!10230 = !DILocation(line: 109, column: 48, scope: !10222)
!10231 = !DILocation(line: 110, column: 38, scope: !10222)
!10232 = !DILocation(line: 112, column: 2, scope: !10222)
!10233 = !DILocation(line: 123, column: 36, scope: !10234)
!10234 = distinct !DILexicalBlock(scope: !10235, file: !1492, line: 123, column: 7)
!10235 = distinct !DILexicalBlock(scope: !10236, file: !1492, line: 122, column: 9)
!10236 = distinct !DILexicalBlock(scope: !10222, file: !1492, line: 115, column: 6)
!10237 = !DILocation(line: 124, column: 42, scope: !10234)
!10238 = !DILocation(line: 123, column: 7, scope: !10234)
!10239 = !DILocation(line: 125, column: 22, scope: !10234)
!10240 = !DILocation(line: 123, column: 7, scope: !10235)
!10241 = !DILocation(line: 126, column: 4, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !1492, line: 126, column: 4)
!10243 = distinct !DILexicalBlock(scope: !10244, file: !1492, line: 126, column: 4)
!10244 = distinct !DILexicalBlock(scope: !10245, file: !1492, line: 126, column: 4)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !1492, line: 126, column: 4)
!10246 = distinct !DILexicalBlock(scope: !10234, file: !1492, line: 125, column: 27)
!10247 = !DILocation(line: 127, column: 4, scope: !10246)
!10248 = !DILocation(line: 176, column: 36, scope: !10222)
!10249 = !DILocation(line: 176, column: 3, scope: !10222)
!10250 = !DILocation(line: 179, column: 32, scope: !10222)
!10251 = !DILocation(line: 180, column: 10, scope: !10222)
!10252 = !DILocation(line: 179, column: 3, scope: !10222)
!10253 = !DILocation(line: 189, column: 3, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !1492, line: 189, column: 3)
!10255 = distinct !DILexicalBlock(scope: !10222, file: !1492, line: 189, column: 3)
!10256 = !DILocation(line: 189, column: 3, scope: !10255)
!10257 = !DILocation(line: 189, column: 3, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10254, file: !1492, line: 189, column: 3)
!10259 = !DILocation(line: 195, column: 1, scope: !10222)
!10260 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10110, file: !10110, line: 409, type: !10173, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10261)
!10261 = !{!10262}
!10262 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10260, file: !10110, line: 409, type: !1439)
!10263 = !DILocation(line: 0, scope: !10260)
!10264 = !DILocation(line: 411, column: 3, scope: !10260)
!10265 = !DILocation(line: 412, column: 1, scope: !10260)
!10266 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !912, file: !912, line: 216, type: !1472, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10267)
!10267 = !{!10268, !10269, !10270, !10271}
!10268 = !DILocalVariable(name: "dev", arg: 1, scope: !10266, file: !912, line: 216, type: !1398)
!10269 = !DILocalVariable(name: "sys", arg: 2, scope: !10266, file: !912, line: 217, type: !985)
!10270 = !DILocalVariable(name: "rate", arg: 3, scope: !10266, file: !912, line: 218, type: !943)
!10271 = !DILocalVariable(name: "api", scope: !10266, file: !912, line: 220, type: !1450)
!10272 = !DILocation(line: 0, scope: !10266)
!10273 = !DILocation(line: 221, column: 49, scope: !10266)
!10274 = !DILocation(line: 223, column: 11, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10266, file: !912, line: 223, column: 6)
!10276 = !DILocation(line: 223, column: 20, scope: !10275)
!10277 = !DILocation(line: 223, column: 6, scope: !10266)
!10278 = !DILocation(line: 227, column: 9, scope: !10266)
!10279 = !DILocation(line: 227, column: 2, scope: !10266)
!10280 = !DILocation(line: 228, column: 1, scope: !10266)
!10281 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6141, file: !6141, line: 175, type: !6142, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10282)
!10282 = !{!10283}
!10283 = !DILocalVariable(name: "level", arg: 1, scope: !10281, file: !6141, line: 175, type: !109)
!10284 = !DILocation(line: 0, scope: !10281)
!10285 = !DILocation(line: 177, column: 2, scope: !10281)
!10286 = !DILocation(line: 189, column: 1, scope: !10281)
!10287 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10110, file: !10110, line: 614, type: !10288, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10290)
!10288 = !DISubroutineType(types: !10289)
!10289 = !{null, !1439, !110}
!10290 = !{!10291, !10292}
!10291 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10287, file: !10110, line: 614, type: !1439)
!10292 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10287, file: !10110, line: 614, type: !110)
!10293 = !DILocation(line: 0, scope: !10287)
!10294 = !DILocation(line: 616, column: 3, scope: !10287)
!10295 = !DILocation(line: 617, column: 1, scope: !10287)
!10296 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10110, file: !10110, line: 1019, type: !10297, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10299)
!10297 = !DISubroutineType(types: !10298)
!10298 = !{null, !1439, !110, !110, !110}
!10299 = !{!10300, !10301, !10302, !10303}
!10300 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10296, file: !10110, line: 1019, type: !1439)
!10301 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10296, file: !10110, line: 1019, type: !110)
!10302 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10296, file: !10110, line: 1019, type: !110)
!10303 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10296, file: !10110, line: 1020, type: !110)
!10304 = !DILocation(line: 0, scope: !10296)
!10305 = !DILocation(line: 1028, column: 30, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !10110, line: 1027, column: 3)
!10307 = distinct !DILexicalBlock(scope: !10296, file: !10110, line: 1022, column: 7)
!10308 = !DILocation(line: 1028, column: 19, scope: !10306)
!10309 = !DILocation(line: 1028, column: 13, scope: !10306)
!10310 = !DILocation(line: 1028, column: 17, scope: !10306)
!10311 = !DILocation(line: 1030, column: 1, scope: !10296)
!10312 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10110, file: !10110, line: 948, type: !10288, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10313)
!10313 = !{!10314, !10315}
!10314 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10312, file: !10110, line: 948, type: !1439)
!10315 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10312, file: !10110, line: 948, type: !110)
!10316 = !DILocation(line: 0, scope: !10312)
!10317 = !DILocation(line: 950, column: 3, scope: !10312)
!10318 = !DILocation(line: 951, column: 1, scope: !10312)
!10319 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10110, file: !10110, line: 587, type: !10288, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10320)
!10320 = !{!10321, !10322}
!10321 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10319, file: !10110, line: 587, type: !1439)
!10322 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10319, file: !10110, line: 587, type: !110)
!10323 = !DILocation(line: 0, scope: !10319)
!10324 = !DILocation(line: 589, column: 3, scope: !10319)
!10325 = !DILocation(line: 590, column: 1, scope: !10319)
!10326 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10110, file: !10110, line: 804, type: !10288, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10327)
!10327 = !{!10328, !10329}
!10328 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10326, file: !10110, line: 804, type: !1439)
!10329 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10326, file: !10110, line: 804, type: !110)
!10330 = !DILocation(line: 0, scope: !10326)
!10331 = !DILocation(line: 806, column: 3, scope: !10326)
!10332 = !DILocation(line: 807, column: 1, scope: !10326)
!10333 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10110, file: !10110, line: 531, type: !10288, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10334)
!10334 = !{!10335, !10336}
!10335 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10333, file: !10110, line: 531, type: !1439)
!10336 = !DILocalVariable(name: "Parity", arg: 2, scope: !10333, file: !10110, line: 531, type: !110)
!10337 = !DILocation(line: 0, scope: !10333)
!10338 = !DILocation(line: 533, column: 3, scope: !10333)
!10339 = !DILocation(line: 534, column: 1, scope: !10333)
!10340 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10110, file: !10110, line: 1769, type: !10111, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10341)
!10341 = !{!10342}
!10342 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10340, file: !10110, line: 1769, type: !1439)
!10343 = !DILocation(line: 0, scope: !10340)
!10344 = !DILocation(line: 1771, column: 11, scope: !10340)
!10345 = !DILocation(line: 1771, column: 46, scope: !10340)
!10346 = !DILocation(line: 1771, column: 3, scope: !10340)
!10347 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10110, file: !10110, line: 1736, type: !10111, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10348)
!10348 = !{!10349}
!10349 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10347, file: !10110, line: 1736, type: !1439)
!10350 = !DILocation(line: 0, scope: !10347)
!10351 = !DILocation(line: 1738, column: 11, scope: !10347)
!10352 = !DILocation(line: 1738, column: 3, scope: !10347)
!10353 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10110, file: !10110, line: 1747, type: !10111, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10354)
!10354 = !{!10355}
!10355 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10353, file: !10110, line: 1747, type: !1439)
!10356 = !DILocation(line: 0, scope: !10353)
!10357 = !DILocation(line: 1749, column: 11, scope: !10353)
!10358 = !DILocation(line: 1749, column: 45, scope: !10353)
!10359 = !DILocation(line: 1749, column: 3, scope: !10353)
!10360 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10110, file: !10110, line: 1826, type: !10111, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10361)
!10361 = !{!10362}
!10362 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10360, file: !10110, line: 1826, type: !1439)
!10363 = !DILocation(line: 0, scope: !10360)
!10364 = !DILocation(line: 1828, column: 11, scope: !10360)
!10365 = !DILocation(line: 1828, column: 46, scope: !10360)
!10366 = !DILocation(line: 1828, column: 3, scope: !10360)
!10367 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10110, file: !10110, line: 1991, type: !10173, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10368)
!10368 = !{!10369}
!10369 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10367, file: !10110, line: 1991, type: !1439)
!10370 = !DILocation(line: 0, scope: !10367)
!10371 = !DILocation(line: 1993, column: 3, scope: !10367)
!10372 = !DILocation(line: 1994, column: 1, scope: !10367)
!10373 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10110, file: !10110, line: 1933, type: !10173, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10374)
!10374 = !{!10375, !10376}
!10375 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10373, file: !10110, line: 1933, type: !1439)
!10376 = !DILocalVariable(name: "tmpreg", scope: !10373, file: !10110, line: 1935, type: !316)
!10377 = !DILocation(line: 0, scope: !10373)
!10378 = !DILocation(line: 1935, column: 3, scope: !10373)
!10379 = !DILocation(line: 1935, column: 17, scope: !10373)
!10380 = !DILocation(line: 1936, column: 20, scope: !10373)
!10381 = !DILocation(line: 1936, column: 10, scope: !10373)
!10382 = !DILocation(line: 1937, column: 10, scope: !10373)
!10383 = !DILocation(line: 1938, column: 20, scope: !10373)
!10384 = !DILocation(line: 1938, column: 10, scope: !10373)
!10385 = !DILocation(line: 1939, column: 10, scope: !10373)
!10386 = !DILocation(line: 1940, column: 1, scope: !10373)
!10387 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10110, file: !10110, line: 1876, type: !10173, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10388)
!10388 = !{!10389, !10390}
!10389 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10387, file: !10110, line: 1876, type: !1439)
!10390 = !DILocalVariable(name: "tmpreg", scope: !10387, file: !10110, line: 1878, type: !316)
!10391 = !DILocation(line: 0, scope: !10387)
!10392 = !DILocation(line: 1878, column: 3, scope: !10387)
!10393 = !DILocation(line: 1878, column: 17, scope: !10387)
!10394 = !DILocation(line: 1879, column: 20, scope: !10387)
!10395 = !DILocation(line: 1879, column: 10, scope: !10387)
!10396 = !DILocation(line: 1880, column: 10, scope: !10387)
!10397 = !DILocation(line: 1881, column: 20, scope: !10387)
!10398 = !DILocation(line: 1881, column: 10, scope: !10387)
!10399 = !DILocation(line: 1882, column: 10, scope: !10387)
!10400 = !DILocation(line: 1883, column: 1, scope: !10387)
!10401 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10110, file: !10110, line: 1895, type: !10173, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10402)
!10402 = !{!10403, !10404}
!10403 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10401, file: !10110, line: 1895, type: !1439)
!10404 = !DILocalVariable(name: "tmpreg", scope: !10401, file: !10110, line: 1897, type: !316)
!10405 = !DILocation(line: 0, scope: !10401)
!10406 = !DILocation(line: 1897, column: 3, scope: !10401)
!10407 = !DILocation(line: 1897, column: 17, scope: !10401)
!10408 = !DILocation(line: 1898, column: 20, scope: !10401)
!10409 = !DILocation(line: 1898, column: 10, scope: !10401)
!10410 = !DILocation(line: 1899, column: 10, scope: !10401)
!10411 = !DILocation(line: 1900, column: 20, scope: !10401)
!10412 = !DILocation(line: 1900, column: 10, scope: !10401)
!10413 = !DILocation(line: 1901, column: 10, scope: !10401)
!10414 = !DILocation(line: 1902, column: 1, scope: !10401)
!10415 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10110, file: !10110, line: 1914, type: !10173, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10416)
!10416 = !{!10417, !10418}
!10417 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10415, file: !10110, line: 1914, type: !1439)
!10418 = !DILocalVariable(name: "tmpreg", scope: !10415, file: !10110, line: 1916, type: !316)
!10419 = !DILocation(line: 0, scope: !10415)
!10420 = !DILocation(line: 1916, column: 3, scope: !10415)
!10421 = !DILocation(line: 1916, column: 17, scope: !10415)
!10422 = !DILocation(line: 1917, column: 20, scope: !10415)
!10423 = !DILocation(line: 1917, column: 10, scope: !10415)
!10424 = !DILocation(line: 1918, column: 10, scope: !10415)
!10425 = !DILocation(line: 1919, column: 20, scope: !10415)
!10426 = !DILocation(line: 1919, column: 10, scope: !10415)
!10427 = !DILocation(line: 1920, column: 10, scope: !10415)
!10428 = !DILocation(line: 1921, column: 1, scope: !10415)
!10429 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10110, file: !10110, line: 1813, type: !10111, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10430)
!10430 = !{!10431}
!10431 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10429, file: !10110, line: 1813, type: !1439)
!10432 = !DILocation(line: 0, scope: !10429)
!10433 = !DILocation(line: 1815, column: 11, scope: !10429)
!10434 = !DILocation(line: 1815, column: 46, scope: !10429)
!10435 = !DILocation(line: 1815, column: 3, scope: !10429)
!10436 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10110, file: !10110, line: 2425, type: !10437, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10439)
!10437 = !DISubroutineType(types: !10438)
!10438 = !{null, !1439, !180}
!10439 = !{!10440, !10441}
!10440 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10436, file: !10110, line: 2425, type: !1439)
!10441 = !DILocalVariable(name: "Value", arg: 2, scope: !10436, file: !10110, line: 2425, type: !180)
!10442 = !DILocation(line: 0, scope: !10436)
!10443 = !DILocation(line: 2427, column: 16, scope: !10436)
!10444 = !DILocation(line: 2427, column: 11, scope: !10436)
!10445 = !DILocation(line: 2427, column: 14, scope: !10436)
!10446 = !DILocation(line: 2428, column: 1, scope: !10436)
!10447 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10110, file: !10110, line: 1791, type: !10111, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10448)
!10448 = !{!10449}
!10449 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10447, file: !10110, line: 1791, type: !1439)
!10450 = !DILocation(line: 0, scope: !10447)
!10451 = !DILocation(line: 1793, column: 11, scope: !10447)
!10452 = !DILocation(line: 1793, column: 47, scope: !10447)
!10453 = !DILocation(line: 1793, column: 3, scope: !10447)
!10454 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10110, file: !10110, line: 2402, type: !10455, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10457)
!10455 = !DISubroutineType(types: !10456)
!10456 = !{!180, !1439}
!10457 = !{!10458}
!10458 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10454, file: !10110, line: 2402, type: !1439)
!10459 = !DILocation(line: 0, scope: !10454)
!10460 = !DILocation(line: 2404, column: 20, scope: !10454)
!10461 = !DILocation(line: 2404, column: 10, scope: !10454)
!10462 = !DILocation(line: 2404, column: 3, scope: !10454)
!10463 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1492, file: !1492, line: 1583, type: !1419, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10464)
!10464 = !{!10465, !10466, !10467, !10468, !10469, !10470}
!10465 = !DILocalVariable(name: "dev", arg: 1, scope: !10463, file: !1492, line: 1583, type: !1398)
!10466 = !DILocalVariable(name: "config", scope: !10463, file: !1492, line: 1585, type: !9801)
!10467 = !DILocalVariable(name: "data", scope: !10463, file: !1492, line: 1586, type: !9924)
!10468 = !DILocalVariable(name: "ll_parity", scope: !10463, file: !1492, line: 1587, type: !110)
!10469 = !DILocalVariable(name: "ll_datawidth", scope: !10463, file: !1492, line: 1588, type: !110)
!10470 = !DILocalVariable(name: "err", scope: !10463, file: !1492, line: 1589, type: !109)
!10471 = !DILocation(line: 0, scope: !10463)
!10472 = !DILocation(line: 1585, column: 48, scope: !10463)
!10473 = !DILocation(line: 1586, column: 38, scope: !10463)
!10474 = !DILocation(line: 1591, column: 2, scope: !10463)
!10475 = !DILocation(line: 1593, column: 29, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10463, file: !1492, line: 1593, column: 6)
!10477 = !DILocation(line: 1593, column: 7, scope: !10476)
!10478 = !DILocation(line: 1593, column: 6, scope: !10463)
!10479 = !DILocation(line: 1594, column: 3, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10481, file: !1492, line: 1594, column: 3)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !1492, line: 1594, column: 3)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !1492, line: 1594, column: 3)
!10483 = distinct !DILexicalBlock(scope: !10484, file: !1492, line: 1594, column: 3)
!10484 = distinct !DILexicalBlock(scope: !10476, file: !1492, line: 1593, column: 37)
!10485 = !DILocation(line: 1595, column: 3, scope: !10484)
!10486 = !DILocation(line: 1599, column: 31, scope: !10463)
!10487 = !DILocation(line: 1599, column: 71, scope: !10463)
!10488 = !DILocation(line: 1599, column: 8, scope: !10463)
!10489 = !DILocation(line: 1600, column: 10, scope: !10490)
!10490 = distinct !DILexicalBlock(scope: !10463, file: !1492, line: 1600, column: 6)
!10491 = !DILocation(line: 1600, column: 6, scope: !10463)
!10492 = !DILocation(line: 1601, column: 3, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !1492, line: 1601, column: 3)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !1492, line: 1601, column: 3)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !1492, line: 1601, column: 3)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !1492, line: 1601, column: 3)
!10497 = distinct !DILexicalBlock(scope: !10490, file: !1492, line: 1600, column: 16)
!10498 = !DILocation(line: 1602, column: 3, scope: !10497)
!10499 = !DILocation(line: 1616, column: 36, scope: !10463)
!10500 = !DILocation(line: 1616, column: 8, scope: !10463)
!10501 = !DILocation(line: 1617, column: 10, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10463, file: !1492, line: 1617, column: 6)
!10503 = !DILocation(line: 1617, column: 6, scope: !10463)
!10504 = !DILocation(line: 1621, column: 27, scope: !10463)
!10505 = !DILocation(line: 1621, column: 2, scope: !10463)
!10506 = !DILocation(line: 1624, column: 40, scope: !10463)
!10507 = !DILocation(line: 1624, column: 2, scope: !10463)
!10508 = !DILocation(line: 1630, column: 14, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10463, file: !1492, line: 1630, column: 6)
!10510 = !DILocation(line: 1630, column: 6, scope: !10463)
!10511 = !DILocation(line: 1640, column: 4, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10513, file: !1492, line: 1640, column: 4)
!10513 = distinct !DILexicalBlock(scope: !10514, file: !1492, line: 1640, column: 4)
!10514 = distinct !DILexicalBlock(scope: !10515, file: !1492, line: 1640, column: 4)
!10515 = distinct !DILexicalBlock(scope: !10516, file: !1492, line: 1640, column: 4)
!10516 = distinct !DILexicalBlock(scope: !10517, file: !1492, line: 1639, column: 28)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !1492, line: 1639, column: 7)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !1492, line: 1638, column: 9)
!10519 = distinct !DILexicalBlock(scope: !10509, file: !1492, line: 1634, column: 13)
!10520 = !DILocation(line: 0, scope: !10509)
!10521 = !DILocation(line: 1649, column: 35, scope: !10463)
!10522 = !DILocation(line: 1649, column: 2, scope: !10463)
!10523 = !DILocation(line: 1654, column: 14, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10463, file: !1492, line: 1654, column: 6)
!10525 = !DILocation(line: 1654, column: 6, scope: !10463)
!10526 = !DILocation(line: 1655, column: 3, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10524, file: !1492, line: 1654, column: 31)
!10528 = !DILocation(line: 1656, column: 2, scope: !10527)
!10529 = !DILocation(line: 1659, column: 37, scope: !10463)
!10530 = !DILocation(line: 1659, column: 2, scope: !10463)
!10531 = !DILocation(line: 1662, column: 14, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10463, file: !1492, line: 1662, column: 6)
!10533 = !DILocation(line: 1662, column: 6, scope: !10463)
!10534 = !DILocation(line: 1663, column: 37, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10532, file: !1492, line: 1662, column: 27)
!10536 = !DILocation(line: 1663, column: 3, scope: !10535)
!10537 = !DILocation(line: 1664, column: 2, scope: !10535)
!10538 = !DILocation(line: 1684, column: 26, scope: !10463)
!10539 = !DILocation(line: 1684, column: 2, scope: !10463)
!10540 = !DILocation(line: 1722, column: 2, scope: !10463)
!10541 = !DILocation(line: 1724, column: 1, scope: !10463)
!10542 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1492, file: !1492, line: 651, type: !10543, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10545)
!10543 = !DISubroutineType(types: !10544)
!10544 = !{null, !1398}
!10545 = !{!10546, !10547, !10548}
!10546 = !DILocalVariable(name: "dev", arg: 1, scope: !10542, file: !1492, line: 651, type: !1398)
!10547 = !DILocalVariable(name: "data", scope: !10542, file: !1492, line: 653, type: !9924)
!10548 = !DILocalVariable(name: "clk", scope: !10542, file: !1492, line: 654, type: !10549)
!10549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1398)
!10550 = !DILocation(line: 0, scope: !10542)
!10551 = !DILocation(line: 653, column: 38, scope: !10542)
!10552 = !DILocation(line: 656, column: 8, scope: !10542)
!10553 = !DILocation(line: 656, column: 14, scope: !10542)
!10554 = !DILocation(line: 657, column: 1, scope: !10542)
!10555 = distinct !DISubprogram(name: "device_is_ready", scope: !8268, file: !8268, line: 47, type: !10556, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10558)
!10556 = !DISubroutineType(types: !10557)
!10557 = !{!360, !1398}
!10558 = !{!10559}
!10559 = !DILocalVariable(name: "dev", arg: 1, scope: !10555, file: !8268, line: 47, type: !1398)
!10560 = !DILocation(line: 0, scope: !10555)
!10561 = !DILocation(line: 55, column: 2, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10555, file: !8268, line: 55, column: 2)
!10563 = !{i64 2152506855}
!10564 = !DILocation(line: 56, column: 9, scope: !10555)
!10565 = !DILocation(line: 56, column: 2, scope: !10555)
!10566 = distinct !DISubprogram(name: "clock_control_on", scope: !912, file: !912, line: 123, type: !1457, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10567)
!10567 = !{!10568, !10569, !10570}
!10568 = !DILocalVariable(name: "dev", arg: 1, scope: !10566, file: !912, line: 123, type: !1398)
!10569 = !DILocalVariable(name: "sys", arg: 2, scope: !10566, file: !912, line: 124, type: !985)
!10570 = !DILocalVariable(name: "api", scope: !10566, file: !912, line: 126, type: !1450)
!10571 = !DILocation(line: 0, scope: !10566)
!10572 = !DILocation(line: 127, column: 49, scope: !10566)
!10573 = !DILocation(line: 129, column: 14, scope: !10566)
!10574 = !DILocation(line: 129, column: 9, scope: !10566)
!10575 = !DILocation(line: 129, column: 2, scope: !10566)
!10576 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1537, file: !1537, line: 342, type: !10577, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10579)
!10577 = !DISubroutineType(types: !10578)
!10578 = !{!109, !1534, !180}
!10579 = !{!10580, !10581, !10582, !10583}
!10580 = !DILocalVariable(name: "config", arg: 1, scope: !10576, file: !1537, line: 342, type: !1534)
!10581 = !DILocalVariable(name: "id", arg: 2, scope: !10576, file: !1537, line: 343, type: !180)
!10582 = !DILocalVariable(name: "ret", scope: !10576, file: !1537, line: 345, type: !109)
!10583 = !DILocalVariable(name: "state", scope: !10576, file: !1537, line: 346, type: !1540)
!10584 = !DILocation(line: 0, scope: !10576)
!10585 = !DILocation(line: 346, column: 2, scope: !10576)
!10586 = !DILocation(line: 348, column: 8, scope: !10576)
!10587 = !DILocation(line: 349, column: 10, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10576, file: !1537, line: 349, column: 6)
!10589 = !DILocation(line: 349, column: 6, scope: !10576)
!10590 = !DILocation(line: 353, column: 44, scope: !10576)
!10591 = !DILocation(line: 353, column: 9, scope: !10576)
!10592 = !DILocation(line: 353, column: 2, scope: !10576)
!10593 = !DILocation(line: 354, column: 1, scope: !10576)
!10594 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10110, file: !10110, line: 496, type: !10288, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10595)
!10595 = !{!10596, !10597}
!10596 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10594, file: !10110, line: 496, type: !1439)
!10597 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10594, file: !10110, line: 496, type: !110)
!10598 = !DILocation(line: 0, scope: !10594)
!10599 = !DILocation(line: 498, column: 3, scope: !10594)
!10600 = !DILocation(line: 499, column: 1, scope: !10594)
!10601 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10110, file: !10110, line: 849, type: !10297, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10602)
!10602 = !{!10603, !10604, !10605, !10606}
!10603 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10601, file: !10110, line: 849, type: !1439)
!10604 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10601, file: !10110, line: 849, type: !110)
!10605 = !DILocalVariable(name: "Parity", arg: 3, scope: !10601, file: !10110, line: 849, type: !110)
!10606 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10601, file: !10110, line: 850, type: !110)
!10607 = !DILocation(line: 0, scope: !10601)
!10608 = !DILocation(line: 852, column: 3, scope: !10601)
!10609 = !DILocation(line: 853, column: 3, scope: !10601)
!10610 = !DILocation(line: 854, column: 1, scope: !10601)
!10611 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10110, file: !10110, line: 1336, type: !10173, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10612)
!10612 = !{!10613}
!10613 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10611, file: !10110, line: 1336, type: !1439)
!10614 = !DILocation(line: 0, scope: !10611)
!10615 = !DILocation(line: 1338, column: 3, scope: !10611)
!10616 = !DILocation(line: 1339, column: 1, scope: !10611)
!10617 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1537, file: !1537, line: 316, type: !10618, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10620)
!10618 = !DISubroutineType(types: !10619)
!10619 = !{!109, !1534, !1540}
!10620 = !{!10621, !10622, !10623}
!10621 = !DILocalVariable(name: "config", arg: 1, scope: !10617, file: !1537, line: 317, type: !1534)
!10622 = !DILocalVariable(name: "state", arg: 2, scope: !10617, file: !1537, line: 318, type: !1540)
!10623 = !DILocalVariable(name: "reg", scope: !10617, file: !1537, line: 320, type: !22)
!10624 = !DILocation(line: 0, scope: !10617)
!10625 = !DILocation(line: 329, column: 39, scope: !10617)
!10626 = !DILocation(line: 329, column: 52, scope: !10617)
!10627 = !DILocation(line: 329, column: 9, scope: !10617)
!10628 = !DILocation(line: 329, column: 2, scope: !10617)
!10629 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !10556, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1354, retainedNodes: !10630)
!10630 = !{!10631}
!10631 = !DILocalVariable(name: "dev", arg: 1, scope: !10629, file: !349, line: 730, type: !1398)
!10632 = !DILocation(line: 0, scope: !10629)
!10633 = !DILocation(line: 732, column: 9, scope: !10629)
!10634 = !DILocation(line: 732, column: 2, scope: !10629)
!10635 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1672, file: !1672, line: 270, type: !1678, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10636)
!10636 = !{!10637}
!10637 = !DILocalVariable(name: "dev", arg: 1, scope: !10635, file: !1672, line: 270, type: !1680)
!10638 = !DILocation(line: 0, scope: !10635)
!10639 = !DILocation(line: 274, column: 2, scope: !10635)
!10640 = !DILocation(line: 275, column: 12, scope: !10635)
!10641 = !DILocation(line: 276, column: 15, scope: !10635)
!10642 = !DILocation(line: 277, column: 16, scope: !10635)
!10643 = !DILocation(line: 278, column: 15, scope: !10635)
!10644 = !DILocation(line: 279, column: 16, scope: !10635)
!10645 = !DILocation(line: 282, column: 2, scope: !10635)
!10646 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !548, file: !548, line: 1638, type: !6424, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10647)
!10647 = !{!10648, !10649}
!10648 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10646, file: !548, line: 1638, type: !872)
!10649 = !DILocalVariable(name: "priority", arg: 2, scope: !10646, file: !548, line: 1638, type: !110)
!10650 = !DILocation(line: 0, scope: !10646)
!10651 = !DILocation(line: 1646, column: 46, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10653, file: !548, line: 1645, column: 3)
!10653 = distinct !DILexicalBlock(scope: !10646, file: !548, line: 1640, column: 7)
!10654 = !DILocation(line: 1648, column: 1, scope: !10646)
!10655 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1672, file: !1672, line: 118, type: !6321, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10656)
!10656 = !{!10657, !10658}
!10657 = !DILocalVariable(name: "arg", arg: 1, scope: !10655, file: !1672, line: 118, type: !107)
!10658 = !DILocalVariable(name: "dticks", scope: !10655, file: !1672, line: 121, type: !110)
!10659 = !DILocation(line: 0, scope: !10655)
!10660 = !DILocation(line: 124, column: 2, scope: !10655)
!10661 = !DILocation(line: 129, column: 17, scope: !10655)
!10662 = !DILocation(line: 129, column: 14, scope: !10655)
!10663 = !DILocation(line: 130, column: 15, scope: !10655)
!10664 = !DILocation(line: 145, column: 27, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10666, file: !1672, line: 132, column: 16)
!10666 = distinct !DILexicalBlock(scope: !10655, file: !1672, line: 132, column: 6)
!10667 = !DILocation(line: 145, column: 25, scope: !10665)
!10668 = !DILocation(line: 145, column: 45, scope: !10665)
!10669 = !DILocation(line: 146, column: 30, scope: !10665)
!10670 = !DILocation(line: 146, column: 20, scope: !10665)
!10671 = !DILocation(line: 147, column: 3, scope: !10665)
!10672 = !DILocation(line: 151, column: 2, scope: !10655)
!10673 = !DILocation(line: 152, column: 1, scope: !10655)
!10674 = distinct !DISubprogram(name: "elapsed", scope: !1672, file: !1672, line: 85, type: !7389, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10675)
!10675 = !{!10676, !10677, !10678}
!10676 = !DILocalVariable(name: "val1", scope: !10674, file: !1672, line: 87, type: !110)
!10677 = !DILocalVariable(name: "ctrl", scope: !10674, file: !1672, line: 88, type: !110)
!10678 = !DILocalVariable(name: "val2", scope: !10674, file: !1672, line: 89, type: !110)
!10679 = !DILocation(line: 87, column: 27, scope: !10674)
!10680 = !DILocation(line: 0, scope: !10674)
!10681 = !DILocation(line: 88, column: 27, scope: !10674)
!10682 = !DILocation(line: 89, column: 27, scope: !10674)
!10683 = !DILocation(line: 105, column: 12, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10674, file: !1672, line: 105, column: 6)
!10685 = !DILocation(line: 106, column: 6, scope: !10684)
!10686 = !DILocation(line: 107, column: 16, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10684, file: !1672, line: 106, column: 24)
!10688 = !DILocation(line: 111, column: 18, scope: !10687)
!10689 = !DILocation(line: 112, column: 2, scope: !10687)
!10690 = !DILocation(line: 114, column: 20, scope: !10674)
!10691 = !DILocation(line: 114, column: 30, scope: !10674)
!10692 = !DILocation(line: 114, column: 28, scope: !10674)
!10693 = !DILocation(line: 114, column: 2, scope: !10674)
!10694 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1672, file: !1672, line: 154, type: !10695, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10697)
!10695 = !DISubroutineType(types: !10696)
!10696 = !{null, !854, !360}
!10697 = !{!10698, !10699, !10700, !10701, !10702, !10703, !10704, !10709, !10710}
!10698 = !DILocalVariable(name: "ticks", arg: 1, scope: !10694, file: !1672, line: 154, type: !854)
!10699 = !DILocalVariable(name: "idle", arg: 2, scope: !10694, file: !1672, line: 154, type: !360)
!10700 = !DILocalVariable(name: "delay", scope: !10694, file: !1672, line: 169, type: !110)
!10701 = !DILocalVariable(name: "val1", scope: !10694, file: !1672, line: 170, type: !110)
!10702 = !DILocalVariable(name: "val2", scope: !10694, file: !1672, line: 170, type: !110)
!10703 = !DILocalVariable(name: "last_load_", scope: !10694, file: !1672, line: 171, type: !110)
!10704 = !DILocalVariable(name: "key", scope: !10694, file: !1672, line: 176, type: !10705)
!10705 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !10706)
!10706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !10707)
!10707 = !{!10708}
!10708 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10706, file: !253, line: 33, baseType: !109, size: 32)
!10709 = !DILocalVariable(name: "pending", scope: !10694, file: !1672, line: 178, type: !110)
!10710 = !DILocalVariable(name: "unannounced", scope: !10694, file: !1672, line: 185, type: !110)
!10711 = !DILocation(line: 0, scope: !10694)
!10712 = !DILocation(line: 162, column: 49, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10694, file: !1672, line: 162, column: 6)
!10714 = !DILocation(line: 163, column: 17, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10713, file: !1672, line: 162, column: 78)
!10716 = !DILocation(line: 164, column: 13, scope: !10715)
!10717 = !DILocation(line: 165, column: 3, scope: !10715)
!10718 = !DILocation(line: 171, column: 24, scope: !10694)
!10719 = !DILocation(line: 173, column: 10, scope: !10694)
!10720 = !DILocation(line: 174, column: 10, scope: !10694)
!10721 = !DILocalVariable(name: "l", arg: 1, scope: !10722, file: !253, line: 136, type: !10725)
!10722 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !10723, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10726)
!10723 = !DISubroutineType(types: !10724)
!10724 = !{!10705, !10725}
!10725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!10726 = !{!10721, !10727}
!10727 = !DILocalVariable(name: "k", scope: !10722, file: !253, line: 139, type: !10705)
!10728 = !DILocation(line: 0, scope: !10722, inlinedAt: !10729)
!10729 = distinct !DILocation(line: 176, column: 25, scope: !10694)
!10730 = !DILocation(line: 55, column: 2, scope: !10731, inlinedAt: !10735)
!10731 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6046, file: !6046, line: 42, type: !6047, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10732)
!10732 = !{!10733, !10734}
!10733 = !DILocalVariable(name: "key", scope: !10731, file: !6046, line: 44, type: !32)
!10734 = !DILocalVariable(name: "tmp", scope: !10731, file: !6046, line: 53, type: !32)
!10735 = distinct !DILocation(line: 145, column: 10, scope: !10722, inlinedAt: !10729)
!10736 = !{i64 1622043}
!10737 = !DILocation(line: 0, scope: !10731, inlinedAt: !10735)
!10738 = !DILocation(line: 148, column: 2, scope: !10739, inlinedAt: !10729)
!10739 = distinct !DILexicalBlock(scope: !10740, file: !253, line: 148, column: 2)
!10740 = distinct !DILexicalBlock(scope: !10722, file: !253, line: 148, column: 2)
!10741 = !DILocation(line: 148, column: 2, scope: !10740, inlinedAt: !10729)
!10742 = !DILocation(line: 148, column: 2, scope: !10743, inlinedAt: !10729)
!10743 = distinct !DILexicalBlock(scope: !10739, file: !253, line: 148, column: 2)
!10744 = !DILocation(line: 160, column: 2, scope: !10722, inlinedAt: !10729)
!10745 = !DILocation(line: 178, column: 21, scope: !10694)
!10746 = !DILocation(line: 180, column: 18, scope: !10694)
!10747 = !DILocation(line: 182, column: 14, scope: !10694)
!10748 = !DILocation(line: 183, column: 15, scope: !10694)
!10749 = !DILocation(line: 185, column: 39, scope: !10694)
!10750 = !DILocation(line: 185, column: 37, scope: !10694)
!10751 = !DILocation(line: 187, column: 27, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10694, file: !1672, line: 187, column: 6)
!10753 = !DILocation(line: 187, column: 6, scope: !10694)
!10754 = !DILocation(line: 202, column: 27, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10752, file: !1672, line: 195, column: 9)
!10756 = !DILocation(line: 202, column: 48, scope: !10755)
!10757 = !DILocation(line: 203, column: 9, scope: !10755)
!10758 = !DILocation(line: 204, column: 11, scope: !10755)
!10759 = !DILocation(line: 205, column: 13, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10755, file: !1672, line: 205, column: 7)
!10761 = !DILocation(line: 205, column: 7, scope: !10755)
!10762 = !DILocation(line: 0, scope: !10752)
!10763 = !DILocation(line: 212, column: 18, scope: !10694)
!10764 = !DILocation(line: 214, column: 28, scope: !10694)
!10765 = !DILocation(line: 214, column: 16, scope: !10694)
!10766 = !DILocation(line: 215, column: 15, scope: !10694)
!10767 = !DILocation(line: 227, column: 11, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10694, file: !1672, line: 227, column: 6)
!10769 = !DILocation(line: 227, column: 6, scope: !10694)
!10770 = !DILocation(line: 228, column: 15, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10768, file: !1672, line: 227, column: 19)
!10772 = !DILocation(line: 228, column: 38, scope: !10771)
!10773 = !DILocation(line: 228, column: 24, scope: !10771)
!10774 = !DILocation(line: 229, column: 2, scope: !10771)
!10775 = !DILocation(line: 230, column: 24, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10768, file: !1672, line: 229, column: 9)
!10777 = !DILocation(line: 230, column: 15, scope: !10776)
!10778 = !DILocation(line: 0, scope: !10768)
!10779 = !DILocalVariable(name: "key", arg: 2, scope: !10780, file: !253, line: 190, type: !10705)
!10780 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !10781, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10783)
!10781 = !DISubroutineType(types: !10782)
!10782 = !{null, !10725, !10705}
!10783 = !{!10784, !10779}
!10784 = !DILocalVariable(name: "l", arg: 1, scope: !10780, file: !253, line: 189, type: !10725)
!10785 = !DILocation(line: 0, scope: !10780, inlinedAt: !10786)
!10786 = distinct !DILocation(line: 232, column: 2, scope: !10694)
!10787 = !DILocation(line: 194, column: 2, scope: !10788, inlinedAt: !10786)
!10788 = distinct !DILexicalBlock(scope: !10789, file: !253, line: 194, column: 2)
!10789 = distinct !DILexicalBlock(scope: !10780, file: !253, line: 194, column: 2)
!10790 = !DILocation(line: 194, column: 2, scope: !10789, inlinedAt: !10786)
!10791 = !DILocation(line: 194, column: 2, scope: !10792, inlinedAt: !10786)
!10792 = distinct !DILexicalBlock(scope: !10788, file: !253, line: 194, column: 2)
!10793 = !DILocalVariable(name: "key", arg: 1, scope: !10794, file: !6046, line: 84, type: !32)
!10794 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10795)
!10795 = !{!10793}
!10796 = !DILocation(line: 0, scope: !10794, inlinedAt: !10797)
!10797 = distinct !DILocation(line: 215, column: 2, scope: !10780, inlinedAt: !10786)
!10798 = !DILocation(line: 95, column: 2, scope: !10794, inlinedAt: !10797)
!10799 = !{i64 1622860}
!10800 = !DILocation(line: 234, column: 1, scope: !10694)
!10801 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1672, file: !1672, line: 236, type: !7389, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10802)
!10802 = !{!10803, !10804}
!10803 = !DILocalVariable(name: "key", scope: !10801, file: !1672, line: 242, type: !10705)
!10804 = !DILocalVariable(name: "cyc", scope: !10801, file: !1672, line: 243, type: !110)
!10805 = !DILocation(line: 0, scope: !10722, inlinedAt: !10806)
!10806 = distinct !DILocation(line: 242, column: 25, scope: !10801)
!10807 = !DILocation(line: 55, column: 2, scope: !10731, inlinedAt: !10808)
!10808 = distinct !DILocation(line: 145, column: 10, scope: !10722, inlinedAt: !10806)
!10809 = !DILocation(line: 0, scope: !10731, inlinedAt: !10808)
!10810 = !DILocation(line: 148, column: 2, scope: !10739, inlinedAt: !10806)
!10811 = !DILocation(line: 148, column: 2, scope: !10740, inlinedAt: !10806)
!10812 = !DILocation(line: 148, column: 2, scope: !10743, inlinedAt: !10806)
!10813 = !DILocation(line: 160, column: 2, scope: !10722, inlinedAt: !10806)
!10814 = !DILocation(line: 0, scope: !10801)
!10815 = !DILocation(line: 243, column: 17, scope: !10801)
!10816 = !DILocation(line: 243, column: 29, scope: !10801)
!10817 = !DILocation(line: 243, column: 43, scope: !10801)
!10818 = !DILocation(line: 0, scope: !10780, inlinedAt: !10819)
!10819 = distinct !DILocation(line: 245, column: 2, scope: !10801)
!10820 = !DILocation(line: 194, column: 2, scope: !10788, inlinedAt: !10819)
!10821 = !DILocation(line: 194, column: 2, scope: !10789, inlinedAt: !10819)
!10822 = !DILocation(line: 194, column: 2, scope: !10792, inlinedAt: !10819)
!10823 = !DILocation(line: 243, column: 27, scope: !10801)
!10824 = !DILocation(line: 243, column: 41, scope: !10801)
!10825 = !DILocation(line: 0, scope: !10794, inlinedAt: !10826)
!10826 = distinct !DILocation(line: 215, column: 2, scope: !10780, inlinedAt: !10819)
!10827 = !DILocation(line: 95, column: 2, scope: !10794, inlinedAt: !10826)
!10828 = !DILocation(line: 246, column: 13, scope: !10801)
!10829 = !DILocation(line: 246, column: 2, scope: !10801)
!10830 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1672, file: !1672, line: 249, type: !7389, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !10831)
!10831 = !{!10832, !10833}
!10832 = !DILocalVariable(name: "key", scope: !10830, file: !1672, line: 251, type: !10705)
!10833 = !DILocalVariable(name: "ret", scope: !10830, file: !1672, line: 252, type: !110)
!10834 = !DILocation(line: 0, scope: !10722, inlinedAt: !10835)
!10835 = distinct !DILocation(line: 251, column: 25, scope: !10830)
!10836 = !DILocation(line: 55, column: 2, scope: !10731, inlinedAt: !10837)
!10837 = distinct !DILocation(line: 145, column: 10, scope: !10722, inlinedAt: !10835)
!10838 = !DILocation(line: 0, scope: !10731, inlinedAt: !10837)
!10839 = !DILocation(line: 148, column: 2, scope: !10739, inlinedAt: !10835)
!10840 = !DILocation(line: 148, column: 2, scope: !10740, inlinedAt: !10835)
!10841 = !DILocation(line: 148, column: 2, scope: !10743, inlinedAt: !10835)
!10842 = !DILocation(line: 160, column: 2, scope: !10722, inlinedAt: !10835)
!10843 = !DILocation(line: 0, scope: !10830)
!10844 = !DILocation(line: 252, column: 17, scope: !10830)
!10845 = !DILocation(line: 252, column: 29, scope: !10830)
!10846 = !DILocation(line: 0, scope: !10780, inlinedAt: !10847)
!10847 = distinct !DILocation(line: 254, column: 2, scope: !10830)
!10848 = !DILocation(line: 194, column: 2, scope: !10788, inlinedAt: !10847)
!10849 = !DILocation(line: 194, column: 2, scope: !10789, inlinedAt: !10847)
!10850 = !DILocation(line: 194, column: 2, scope: !10792, inlinedAt: !10847)
!10851 = !DILocation(line: 252, column: 27, scope: !10830)
!10852 = !DILocation(line: 0, scope: !10794, inlinedAt: !10853)
!10853 = distinct !DILocation(line: 215, column: 2, scope: !10780, inlinedAt: !10847)
!10854 = !DILocation(line: 95, column: 2, scope: !10794, inlinedAt: !10853)
!10855 = !DILocation(line: 255, column: 2, scope: !10830)
!10856 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1672, file: !1672, line: 258, type: !3060, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !2043)
!10857 = !DILocation(line: 260, column: 6, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10856, file: !1672, line: 260, column: 6)
!10859 = !DILocation(line: 260, column: 16, scope: !10858)
!10860 = !DILocation(line: 260, column: 6, scope: !10856)
!10861 = !DILocation(line: 261, column: 17, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10858, file: !1672, line: 260, column: 34)
!10863 = !DILocation(line: 262, column: 2, scope: !10862)
!10864 = !DILocation(line: 263, column: 1, scope: !10856)
!10865 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1672, file: !1672, line: 265, type: !3060, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1594, retainedNodes: !2043)
!10866 = !DILocation(line: 267, column: 16, scope: !10865)
!10867 = !DILocation(line: 268, column: 1, scope: !10865)
!10868 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10869, file: !10869, line: 9, type: !10870, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !10893)
!10869 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10870 = !DISubroutineType(types: !10871)
!10871 = !{!109, !10872, !180, !10892}
!10872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10873, size: 32)
!10873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10874)
!10874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1537, line: 60, size: 64, elements: !10875)
!10875 = !{!10876, !10891}
!10876 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10874, file: !1537, line: 69, baseType: !10877, size: 32)
!10877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10878, size: 32)
!10878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10879)
!10879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1537, line: 50, size: 64, elements: !10880)
!10880 = !{!10881, !10889, !10890}
!10881 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10879, file: !1537, line: 52, baseType: !10882, size: 32)
!10882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10883, size: 32)
!10883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10884)
!10884 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1548, line: 37, baseType: !10885)
!10885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1548, line: 32, size: 64, elements: !10886)
!10886 = !{!10887, !10888}
!10887 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10885, file: !1548, line: 34, baseType: !110, size: 32)
!10888 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10885, file: !1548, line: 36, baseType: !110, size: 32, offset: 32)
!10889 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10879, file: !1537, line: 54, baseType: !180, size: 8, offset: 32)
!10890 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10879, file: !1537, line: 56, baseType: !180, size: 8, offset: 40)
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10874, file: !1537, line: 71, baseType: !180, size: 8, offset: 32)
!10892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10877, size: 32)
!10893 = !{!10894, !10895, !10896}
!10894 = !DILocalVariable(name: "config", arg: 1, scope: !10868, file: !10869, line: 9, type: !10872)
!10895 = !DILocalVariable(name: "id", arg: 2, scope: !10868, file: !10869, line: 9, type: !180)
!10896 = !DILocalVariable(name: "state", arg: 3, scope: !10868, file: !10869, line: 10, type: !10892)
!10897 = !DILocation(line: 0, scope: !10868)
!10898 = !DILocation(line: 12, column: 20, scope: !10868)
!10899 = !DILocation(line: 13, column: 27, scope: !10868)
!10900 = !DILocation(line: 13, column: 42, scope: !10868)
!10901 = !DILocation(line: 13, column: 19, scope: !10868)
!10902 = !DILocation(line: 13, column: 16, scope: !10868)
!10903 = !DILocation(line: 13, column: 2, scope: !10868)
!10904 = distinct !{!10904, !10903, !10905}
!10905 = !DILocation(line: 19, column: 2, scope: !10868)
!10906 = !DILocation(line: 14, column: 23, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10908, file: !10869, line: 14, column: 7)
!10908 = distinct !DILexicalBlock(scope: !10868, file: !10869, line: 13, column: 54)
!10909 = !DILocation(line: 14, column: 10, scope: !10907)
!10910 = !DILocation(line: 18, column: 11, scope: !10908)
!10911 = !DILocation(line: 14, column: 7, scope: !10908)
!10912 = !DILocation(line: 22, column: 1, scope: !10868)
!10913 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1790, file: !1790, line: 193, type: !10914, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1709, retainedNodes: !10923)
!10914 = !DISubroutineType(types: !10915)
!10915 = !{!109, !10916, !180, !22}
!10916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10917, size: 32)
!10917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10918)
!10918 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1548, line: 37, baseType: !10919)
!10919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1548, line: 32, size: 64, elements: !10920)
!10920 = !{!10921, !10922}
!10921 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10919, file: !1548, line: 34, baseType: !110, size: 32)
!10922 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10919, file: !1548, line: 36, baseType: !110, size: 32, offset: 32)
!10923 = !{!10924, !10925, !10926, !10927, !10928, !10929, !10930, !10931, !10933}
!10924 = !DILocalVariable(name: "pins", arg: 1, scope: !10913, file: !1790, line: 193, type: !10916)
!10925 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10913, file: !1790, line: 193, type: !180)
!10926 = !DILocalVariable(name: "reg", arg: 3, scope: !10913, file: !1790, line: 194, type: !22)
!10927 = !DILocalVariable(name: "pin", scope: !10913, file: !1790, line: 196, type: !110)
!10928 = !DILocalVariable(name: "mux", scope: !10913, file: !1790, line: 196, type: !110)
!10929 = !DILocalVariable(name: "pin_cgf", scope: !10913, file: !1790, line: 197, type: !110)
!10930 = !DILocalVariable(name: "ret", scope: !10913, file: !1790, line: 198, type: !109)
!10931 = !DILocalVariable(name: "i", scope: !10932, file: !1790, line: 209, type: !180)
!10932 = distinct !DILexicalBlock(scope: !10913, file: !1790, line: 209, column: 2)
!10933 = !DILocalVariable(name: "gpio_out", scope: !10934, file: !1790, line: 239, type: !110)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !1790, line: 238, column: 55)
!10935 = distinct !DILexicalBlock(scope: !10936, file: !1790, line: 238, column: 14)
!10936 = distinct !DILexicalBlock(scope: !10937, file: !1790, line: 236, column: 14)
!10937 = distinct !DILexicalBlock(scope: !10938, file: !1790, line: 234, column: 7)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !1790, line: 209, column: 41)
!10939 = distinct !DILexicalBlock(scope: !10932, file: !1790, line: 209, column: 2)
!10940 = !DILocation(line: 0, scope: !10913)
!10941 = !DILocation(line: 0, scope: !10932)
!10942 = !DILocation(line: 209, column: 25, scope: !10939)
!10943 = !DILocation(line: 209, column: 2, scope: !10932)
!10944 = distinct !{!10944, !10943, !10945}
!10945 = !DILocation(line: 259, column: 2, scope: !10932)
!10946 = !DILocation(line: 210, column: 17, scope: !10938)
!10947 = !DILocation(line: 234, column: 7, scope: !10937)
!10948 = !DILocation(line: 234, column: 33, scope: !10937)
!10949 = !DILocation(line: 234, column: 7, scope: !10938)
!10950 = !DILocation(line: 235, column: 22, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10937, file: !1790, line: 234, column: 49)
!10952 = !DILocation(line: 235, column: 29, scope: !10951)
!10953 = !DILocation(line: 236, column: 3, scope: !10951)
!10954 = !DILocation(line: 236, column: 14, scope: !10937)
!10955 = !DILocation(line: 239, column: 32, scope: !10934)
!10956 = !DILocation(line: 0, scope: !10934)
!10957 = !DILocation(line: 241, column: 8, scope: !10934)
!10958 = !DILocation(line: 246, column: 3, scope: !10934)
!10959 = !DILocation(line: 252, column: 9, scope: !10938)
!10960 = !DILocation(line: 255, column: 9, scope: !10938)
!10961 = !DILocation(line: 256, column: 11, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10938, file: !1790, line: 256, column: 7)
!10963 = !DILocation(line: 209, column: 37, scope: !10939)
!10964 = !DILocation(line: 256, column: 7, scope: !10938)
!10965 = !DILocation(line: 262, column: 1, scope: !10913)
!10966 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1790, file: !1790, line: 176, type: !10967, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1709, retainedNodes: !10969)
!10967 = !DISubroutineType(types: !10968)
!10968 = !{!109, !110, !110, !110}
!10969 = !{!10970, !10971, !10972, !10973}
!10970 = !DILocalVariable(name: "pin", arg: 1, scope: !10966, file: !1790, line: 176, type: !110)
!10971 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10966, file: !1790, line: 176, type: !110)
!10972 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10966, file: !1790, line: 176, type: !110)
!10973 = !DILocalVariable(name: "port_device", scope: !10966, file: !1790, line: 178, type: !1720)
!10974 = !DILocation(line: 0, scope: !10966)
!10975 = !DILocation(line: 180, column: 22, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10966, file: !1790, line: 180, column: 6)
!10977 = !DILocation(line: 180, column: 6, scope: !10966)
!10978 = !DILocation(line: 180, column: 6, scope: !10976)
!10979 = !DILocation(line: 184, column: 16, scope: !10966)
!10980 = !DILocation(line: 186, column: 19, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10966, file: !1790, line: 186, column: 6)
!10982 = !DILocation(line: 186, column: 28, scope: !10981)
!10983 = !DILocation(line: 186, column: 33, scope: !10981)
!10984 = !DILocation(line: 186, column: 6, scope: !10966)
!10985 = !DILocation(line: 190, column: 43, scope: !10966)
!10986 = !DILocation(line: 190, column: 9, scope: !10966)
!10987 = !DILocation(line: 190, column: 2, scope: !10966)
!10988 = !DILocation(line: 191, column: 1, scope: !10966)
!10989 = distinct !DISubprogram(name: "device_is_ready", scope: !8268, file: !8268, line: 47, type: !10990, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1709, retainedNodes: !10992)
!10990 = !DISubroutineType(types: !10991)
!10991 = !{!360, !1720}
!10992 = !{!10993}
!10993 = !DILocalVariable(name: "dev", arg: 1, scope: !10989, file: !8268, line: 47, type: !1720)
!10994 = !DILocation(line: 0, scope: !10989)
!10995 = !DILocation(line: 55, column: 2, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10989, file: !8268, line: 55, column: 2)
!10997 = !{i64 2148856052}
!10998 = !DILocation(line: 56, column: 9, scope: !10989)
!10999 = !DILocation(line: 56, column: 2, scope: !10989)
!11000 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !349, file: !349, line: 730, type: !10990, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1709, retainedNodes: !11001)
!11001 = !{!11002}
!11002 = !DILocalVariable(name: "dev", arg: 1, scope: !11000, file: !349, line: 730, type: !1720)
!11003 = !DILocation(line: 0, scope: !11000)
!11004 = !DILocation(line: 732, column: 9, scope: !11000)
!11005 = !DILocation(line: 732, column: 2, scope: !11000)
!11006 = distinct !DISubprogram(name: "SystemInit", scope: !1820, file: !1820, line: 160, type: !3060, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !2043)
!11007 = !DILocation(line: 170, column: 1, scope: !11006)
!11008 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1820, file: !1820, line: 210, type: !3060, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1796, retainedNodes: !11009)
!11009 = !{!11010, !11011, !11012, !11013, !11014}
!11010 = !DILocalVariable(name: "tmp", scope: !11008, file: !1820, line: 212, type: !110)
!11011 = !DILocalVariable(name: "pllmul", scope: !11008, file: !1820, line: 212, type: !110)
!11012 = !DILocalVariable(name: "plldiv", scope: !11008, file: !1820, line: 212, type: !110)
!11013 = !DILocalVariable(name: "pllsource", scope: !11008, file: !1820, line: 212, type: !110)
!11014 = !DILocalVariable(name: "msirange", scope: !11008, file: !1820, line: 212, type: !110)
!11015 = !DILocation(line: 0, scope: !11008)
!11016 = !DILocation(line: 215, column: 14, scope: !11008)
!11017 = !DILocation(line: 217, column: 3, scope: !11008)
!11018 = !DILocation(line: 220, column: 24, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11008, file: !1820, line: 218, column: 3)
!11020 = !DILocation(line: 220, column: 52, scope: !11019)
!11021 = !DILocation(line: 221, column: 32, scope: !11019)
!11022 = !DILocation(line: 222, column: 7, scope: !11019)
!11023 = !DILocation(line: 228, column: 7, scope: !11019)
!11024 = !DILocation(line: 231, column: 21, scope: !11019)
!11025 = !DILocation(line: 232, column: 21, scope: !11019)
!11026 = !DILocation(line: 233, column: 36, scope: !11019)
!11027 = !DILocation(line: 233, column: 16, scope: !11019)
!11028 = !DILocation(line: 234, column: 24, scope: !11019)
!11029 = !DILocation(line: 234, column: 31, scope: !11019)
!11030 = !DILocation(line: 236, column: 24, scope: !11019)
!11031 = !DILocation(line: 236, column: 29, scope: !11019)
!11032 = !DILocation(line: 238, column: 21, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11019, file: !1820, line: 238, column: 11)
!11034 = !DILocation(line: 238, column: 11, scope: !11019)
!11035 = !DILocation(line: 241, column: 41, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11033, file: !1820, line: 239, column: 7)
!11037 = !DILocation(line: 241, column: 51, scope: !11036)
!11038 = !DILocation(line: 242, column: 7, scope: !11036)
!11039 = !DILocation(line: 246, column: 41, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11033, file: !1820, line: 244, column: 7)
!11041 = !DILocation(line: 246, column: 51, scope: !11040)
!11042 = !DILocation(line: 0, scope: !11019)
!11043 = !DILocation(line: 256, column: 30, scope: !11008)
!11044 = !DILocation(line: 256, column: 52, scope: !11008)
!11045 = !DILocation(line: 256, column: 9, scope: !11008)
!11046 = !DILocation(line: 258, column: 19, scope: !11008)
!11047 = !DILocation(line: 259, column: 1, scope: !11008)
!11048 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11049, file: !11049, line: 228, type: !11050, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11053)
!11049 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11050 = !DISubroutineType(types: !11051)
!11051 = !{!11052}
!11052 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2904, line: 45, baseType: !2903)
!11053 = !{!11054, !11055}
!11054 = !DILocalVariable(name: "tickstart", scope: !11048, file: !11049, line: 230, type: !110)
!11055 = !DILocalVariable(name: "status", scope: !11048, file: !11049, line: 231, type: !11052)
!11056 = !DILocation(line: 234, column: 3, scope: !11048)
!11057 = !DILocation(line: 238, column: 3, scope: !11048)
!11058 = !DILocation(line: 241, column: 15, scope: !11048)
!11059 = !DILocation(line: 0, scope: !11048)
!11060 = !DILocation(line: 244, column: 3, scope: !11048)
!11061 = !DILocation(line: 244, column: 10, scope: !11048)
!11062 = !DILocation(line: 244, column: 43, scope: !11048)
!11063 = !DILocation(line: 246, column: 10, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !11049, line: 246, column: 9)
!11065 = distinct !DILexicalBlock(scope: !11048, file: !11049, line: 245, column: 3)
!11066 = !DILocation(line: 246, column: 24, scope: !11064)
!11067 = !DILocation(line: 246, column: 37, scope: !11064)
!11068 = !DILocation(line: 246, column: 9, scope: !11065)
!11069 = distinct !{!11069, !11060, !11070}
!11070 = !DILocation(line: 250, column: 3, scope: !11048)
!11071 = !DILocation(line: 253, column: 3, scope: !11048)
!11072 = !DILocation(line: 256, column: 3, scope: !11048)
!11073 = !DILocation(line: 256, column: 10, scope: !11048)
!11074 = !DILocation(line: 256, column: 44, scope: !11048)
!11075 = !DILocation(line: 258, column: 10, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !11049, line: 258, column: 9)
!11077 = distinct !DILexicalBlock(scope: !11048, file: !11049, line: 257, column: 3)
!11078 = !DILocation(line: 258, column: 24, scope: !11076)
!11079 = !DILocation(line: 258, column: 37, scope: !11076)
!11080 = !DILocation(line: 258, column: 9, scope: !11077)
!11081 = distinct !{!11081, !11072, !11082}
!11082 = !DILocation(line: 262, column: 3, scope: !11048)
!11083 = !DILocation(line: 265, column: 19, scope: !11048)
!11084 = !DILocation(line: 268, column: 25, scope: !11048)
!11085 = !DILocation(line: 268, column: 12, scope: !11048)
!11086 = !DILocation(line: 269, column: 13, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11048, file: !11049, line: 269, column: 6)
!11088 = !DILocation(line: 269, column: 6, scope: !11048)
!11089 = !DILocation(line: 275, column: 3, scope: !11048)
!11090 = !DILocation(line: 277, column: 3, scope: !11048)
!11091 = !DILocation(line: 280, column: 15, scope: !11048)
!11092 = !DILocation(line: 283, column: 3, scope: !11048)
!11093 = !DILocation(line: 283, column: 10, scope: !11048)
!11094 = !DILocation(line: 283, column: 43, scope: !11048)
!11095 = !DILocation(line: 285, column: 10, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11097, file: !11049, line: 285, column: 9)
!11097 = distinct !DILexicalBlock(scope: !11048, file: !11049, line: 284, column: 3)
!11098 = !DILocation(line: 285, column: 24, scope: !11096)
!11099 = !DILocation(line: 285, column: 37, scope: !11096)
!11100 = !DILocation(line: 285, column: 9, scope: !11097)
!11101 = distinct !{!11101, !11092, !11102}
!11102 = !DILocation(line: 289, column: 3, scope: !11048)
!11103 = !DILocation(line: 292, column: 3, scope: !11048)
!11104 = !DILocation(line: 295, column: 3, scope: !11048)
!11105 = !DILocation(line: 299, column: 3, scope: !11048)
!11106 = !DILocation(line: 305, column: 3, scope: !11048)
!11107 = !DILocation(line: 307, column: 3, scope: !11048)
!11108 = !DILocation(line: 308, column: 1, scope: !11048)
!11109 = !DISubprogram(name: "HAL_GetTick", scope: !11110, file: !11110, line: 945, type: !7389, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!11110 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11111 = !DISubprogram(name: "HAL_InitTick", scope: !11110, file: !11110, line: 932, type: !11112, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!11112 = !DISubroutineType(types: !11113)
!11113 = !{!11052, !110}
!11114 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11049, file: !11049, line: 324, type: !11115, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11139)
!11115 = !DISubroutineType(types: !11116)
!11116 = !{!11052, !11117}
!11117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11118, size: 32)
!11118 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11119, line: 283, baseType: !11120)
!11119 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11119, line: 252, size: 416, elements: !11121)
!11121 = !{!11122, !11123, !11124, !11125, !11126, !11127, !11128, !11129, !11130, !11131}
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11120, file: !11119, line: 254, baseType: !110, size: 32)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11120, file: !11119, line: 257, baseType: !110, size: 32, offset: 32)
!11124 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11120, file: !11119, line: 260, baseType: !110, size: 32, offset: 64)
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11120, file: !11119, line: 263, baseType: !110, size: 32, offset: 96)
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11120, file: !11119, line: 266, baseType: !110, size: 32, offset: 128)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11120, file: !11119, line: 269, baseType: !110, size: 32, offset: 160)
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !11120, file: !11119, line: 272, baseType: !110, size: 32, offset: 192)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !11120, file: !11119, line: 275, baseType: !110, size: 32, offset: 224)
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !11120, file: !11119, line: 278, baseType: !110, size: 32, offset: 256)
!11131 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11120, file: !11119, line: 281, baseType: !11132, size: 128, offset: 288)
!11132 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11119, line: 247, baseType: !11133)
!11133 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11119, line: 234, size: 128, elements: !11134)
!11134 = !{!11135, !11136, !11137, !11138}
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11133, file: !11119, line: 236, baseType: !110, size: 32)
!11136 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11133, file: !11119, line: 239, baseType: !110, size: 32, offset: 32)
!11137 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !11133, file: !11119, line: 242, baseType: !110, size: 32, offset: 64)
!11138 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !11133, file: !11119, line: 245, baseType: !110, size: 32, offset: 96)
!11139 = !{!11140, !11141, !11142, !11143, !11144, !11145, !11149}
!11140 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11114, file: !11049, line: 324, type: !11117)
!11141 = !DILocalVariable(name: "tickstart", scope: !11114, file: !11049, line: 326, type: !110)
!11142 = !DILocalVariable(name: "status", scope: !11114, file: !11049, line: 327, type: !11052)
!11143 = !DILocalVariable(name: "sysclk_source", scope: !11114, file: !11049, line: 328, type: !110)
!11144 = !DILocalVariable(name: "pll_config", scope: !11114, file: !11049, line: 328, type: !110)
!11145 = !DILocalVariable(name: "pwrclkchanged", scope: !11146, file: !11049, line: 613, type: !11148)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !11049, line: 612, column: 3)
!11147 = distinct !DILexicalBlock(scope: !11114, file: !11049, line: 611, column: 6)
!11148 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !907, line: 181, baseType: !2914)
!11149 = !DILocalVariable(name: "tmpreg", scope: !11150, file: !11049, line: 622, type: !316)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !11049, line: 622, column: 7)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !11049, line: 621, column: 5)
!11152 = distinct !DILexicalBlock(scope: !11146, file: !11049, line: 620, column: 8)
!11153 = !DILocation(line: 0, scope: !11114)
!11154 = !DILocation(line: 331, column: 24, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11114, file: !11049, line: 331, column: 6)
!11156 = !DILocation(line: 331, column: 6, scope: !11114)
!11157 = !DILocation(line: 338, column: 19, scope: !11114)
!11158 = !DILocation(line: 339, column: 16, scope: !11114)
!11159 = !DILocation(line: 342, column: 27, scope: !11160)
!11160 = distinct !DILexicalBlock(scope: !11114, file: !11049, line: 342, column: 6)
!11161 = !DILocation(line: 342, column: 43, scope: !11160)
!11162 = !DILocation(line: 342, column: 69, scope: !11160)
!11163 = !DILocation(line: 342, column: 6, scope: !11114)
!11164 = !DILocation(line: 348, column: 23, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !11049, line: 348, column: 8)
!11166 = distinct !DILexicalBlock(scope: !11160, file: !11049, line: 343, column: 3)
!11167 = !DILocation(line: 349, column: 8, scope: !11165)
!11168 = !DILocation(line: 349, column: 27, scope: !11165)
!11169 = !DILocation(line: 349, column: 62, scope: !11165)
!11170 = !DILocation(line: 351, column: 11, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11172, file: !11049, line: 351, column: 10)
!11172 = distinct !DILexicalBlock(scope: !11165, file: !11049, line: 350, column: 5)
!11173 = !DILocation(line: 351, column: 47, scope: !11171)
!11174 = !DILocation(line: 351, column: 54, scope: !11171)
!11175 = !DILocation(line: 351, column: 77, scope: !11171)
!11176 = !DILocation(line: 351, column: 86, scope: !11171)
!11177 = !DILocation(line: 351, column: 10, scope: !11172)
!11178 = !DILocation(line: 359, column: 7, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11180, file: !11049, line: 359, column: 7)
!11180 = distinct !DILexicalBlock(scope: !11181, file: !11049, line: 359, column: 7)
!11181 = distinct !DILexicalBlock(scope: !11165, file: !11049, line: 357, column: 5)
!11182 = !DILocation(line: 359, column: 7, scope: !11180)
!11183 = !DILocation(line: 359, column: 7, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11179, file: !11049, line: 359, column: 7)
!11185 = !DILocation(line: 359, column: 7, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11187, file: !11049, line: 359, column: 7)
!11187 = distinct !DILexicalBlock(scope: !11179, file: !11049, line: 359, column: 7)
!11188 = !DILocation(line: 359, column: 7, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11190, file: !11049, line: 359, column: 7)
!11190 = distinct !DILexicalBlock(scope: !11187, file: !11049, line: 359, column: 7)
!11191 = !DILocation(line: 359, column: 7, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11190, file: !11049, line: 359, column: 7)
!11193 = !DILocation(line: 0, scope: !11179)
!11194 = !DILocation(line: 362, column: 29, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11181, file: !11049, line: 362, column: 10)
!11196 = !DILocation(line: 362, column: 38, scope: !11195)
!11197 = !DILocation(line: 0, scope: !11195)
!11198 = !DILocation(line: 362, column: 10, scope: !11181)
!11199 = !DILocation(line: 368, column: 15, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11195, file: !11049, line: 363, column: 7)
!11201 = !DILocation(line: 368, column: 51, scope: !11200)
!11202 = !DILocation(line: 368, column: 9, scope: !11200)
!11203 = !DILocation(line: 370, column: 15, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11205, file: !11049, line: 370, column: 14)
!11205 = distinct !DILexicalBlock(scope: !11200, file: !11049, line: 369, column: 9)
!11206 = !DILocation(line: 370, column: 29, scope: !11204)
!11207 = !DILocation(line: 370, column: 43, scope: !11204)
!11208 = !DILocation(line: 370, column: 14, scope: !11205)
!11209 = distinct !{!11209, !11202, !11210}
!11210 = !DILocation(line: 374, column: 9, scope: !11200)
!11211 = !DILocation(line: 382, column: 15, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11195, file: !11049, line: 377, column: 7)
!11213 = !DILocation(line: 382, column: 51, scope: !11212)
!11214 = !DILocation(line: 382, column: 9, scope: !11212)
!11215 = !DILocation(line: 384, column: 16, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11217, file: !11049, line: 384, column: 15)
!11217 = distinct !DILexicalBlock(scope: !11212, file: !11049, line: 383, column: 9)
!11218 = !DILocation(line: 384, column: 30, scope: !11216)
!11219 = !DILocation(line: 384, column: 44, scope: !11216)
!11220 = !DILocation(line: 384, column: 15, scope: !11217)
!11221 = distinct !{!11221, !11214, !11222}
!11222 = !DILocation(line: 388, column: 9, scope: !11212)
!11223 = !DILocation(line: 393, column: 27, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11114, file: !11049, line: 393, column: 6)
!11225 = !DILocation(line: 393, column: 43, scope: !11224)
!11226 = !DILocation(line: 393, column: 69, scope: !11224)
!11227 = !DILocation(line: 393, column: 6, scope: !11114)
!11228 = !DILocation(line: 400, column: 23, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11230, file: !11049, line: 400, column: 8)
!11230 = distinct !DILexicalBlock(scope: !11224, file: !11049, line: 394, column: 3)
!11231 = !DILocation(line: 401, column: 8, scope: !11229)
!11232 = !DILocation(line: 401, column: 27, scope: !11229)
!11233 = !DILocation(line: 401, column: 62, scope: !11229)
!11234 = !DILocation(line: 404, column: 11, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11236, file: !11049, line: 404, column: 10)
!11236 = distinct !DILexicalBlock(scope: !11229, file: !11049, line: 402, column: 5)
!11237 = !DILocation(line: 404, column: 47, scope: !11235)
!11238 = !DILocation(line: 404, column: 54, scope: !11235)
!11239 = !DILocation(line: 404, column: 77, scope: !11235)
!11240 = !DILocation(line: 404, column: 86, scope: !11235)
!11241 = !DILocation(line: 404, column: 10, scope: !11236)
!11242 = !DILocation(line: 418, column: 29, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !11049, line: 418, column: 10)
!11244 = distinct !DILexicalBlock(scope: !11229, file: !11049, line: 416, column: 5)
!11245 = !DILocation(line: 418, column: 38, scope: !11243)
!11246 = !DILocation(line: 418, column: 10, scope: !11244)
!11247 = !DILocation(line: 421, column: 9, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11243, file: !11049, line: 419, column: 7)
!11249 = !DILocation(line: 424, column: 21, scope: !11248)
!11250 = !DILocation(line: 427, column: 9, scope: !11248)
!11251 = !DILocation(line: 427, column: 15, scope: !11248)
!11252 = !DILocation(line: 427, column: 51, scope: !11248)
!11253 = !DILocation(line: 429, column: 15, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11255, file: !11049, line: 429, column: 14)
!11255 = distinct !DILexicalBlock(scope: !11248, file: !11049, line: 428, column: 9)
!11256 = !DILocation(line: 429, column: 29, scope: !11254)
!11257 = !DILocation(line: 429, column: 43, scope: !11254)
!11258 = !DILocation(line: 429, column: 14, scope: !11255)
!11259 = distinct !{!11259, !11250, !11260}
!11260 = !DILocation(line: 433, column: 9, scope: !11248)
!11261 = !DILocation(line: 441, column: 9, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11243, file: !11049, line: 439, column: 7)
!11263 = !DILocation(line: 444, column: 21, scope: !11262)
!11264 = !DILocation(line: 447, column: 9, scope: !11262)
!11265 = !DILocation(line: 447, column: 15, scope: !11262)
!11266 = !DILocation(line: 447, column: 51, scope: !11262)
!11267 = !DILocation(line: 449, column: 15, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !11049, line: 449, column: 14)
!11269 = distinct !DILexicalBlock(scope: !11262, file: !11049, line: 448, column: 9)
!11270 = !DILocation(line: 449, column: 29, scope: !11268)
!11271 = !DILocation(line: 449, column: 43, scope: !11268)
!11272 = !DILocation(line: 449, column: 14, scope: !11269)
!11273 = distinct !{!11273, !11264, !11274}
!11274 = !DILocation(line: 453, column: 9, scope: !11262)
!11275 = !DILocation(line: 0, scope: !11229)
!11276 = !DILocation(line: 458, column: 27, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11114, file: !11049, line: 458, column: 6)
!11278 = !DILocation(line: 458, column: 43, scope: !11277)
!11279 = !DILocation(line: 458, column: 69, scope: !11277)
!11280 = !DILocation(line: 458, column: 6, scope: !11114)
!11281 = !DILocation(line: 461, column: 22, scope: !11282)
!11282 = distinct !DILexicalBlock(scope: !11283, file: !11049, line: 461, column: 8)
!11283 = distinct !DILexicalBlock(scope: !11277, file: !11049, line: 459, column: 3)
!11284 = !DILocation(line: 461, column: 8, scope: !11283)
!11285 = !DILocation(line: 463, column: 11, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11287, file: !11049, line: 463, column: 10)
!11287 = distinct !DILexicalBlock(scope: !11282, file: !11049, line: 462, column: 5)
!11288 = !DILocation(line: 463, column: 47, scope: !11286)
!11289 = !DILocation(line: 463, column: 54, scope: !11286)
!11290 = !DILocation(line: 463, column: 77, scope: !11286)
!11291 = !DILocation(line: 463, column: 86, scope: !11286)
!11292 = !DILocation(line: 463, column: 10, scope: !11287)
!11293 = !DILocation(line: 477, column: 31, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11295, file: !11049, line: 477, column: 12)
!11295 = distinct !DILexicalBlock(scope: !11286, file: !11049, line: 469, column: 7)
!11296 = !DILocation(line: 477, column: 47, scope: !11294)
!11297 = !DILocation(line: 477, column: 45, scope: !11294)
!11298 = !DILocation(line: 477, column: 12, scope: !11295)
!11299 = !DILocation(line: 480, column: 14, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11301, file: !11049, line: 480, column: 14)
!11301 = distinct !DILexicalBlock(scope: !11294, file: !11049, line: 478, column: 9)
!11302 = !DILocation(line: 480, column: 80, scope: !11300)
!11303 = !DILocation(line: 480, column: 14, scope: !11301)
!11304 = !DILocation(line: 486, column: 11, scope: !11301)
!11305 = !DILocation(line: 488, column: 11, scope: !11301)
!11306 = !DILocation(line: 489, column: 9, scope: !11301)
!11307 = !DILocation(line: 494, column: 11, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11294, file: !11049, line: 491, column: 9)
!11309 = !DILocation(line: 496, column: 11, scope: !11308)
!11310 = !DILocation(line: 499, column: 65, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11308, file: !11049, line: 499, column: 14)
!11312 = !DILocation(line: 499, column: 14, scope: !11311)
!11313 = !DILocation(line: 499, column: 80, scope: !11311)
!11314 = !DILocation(line: 499, column: 14, scope: !11308)
!11315 = !DILocation(line: 506, column: 67, scope: !11295)
!11316 = !DILocation(line: 506, column: 81, scope: !11295)
!11317 = !DILocation(line: 506, column: 36, scope: !11295)
!11318 = !DILocation(line: 507, column: 52, scope: !11295)
!11319 = !DILocation(line: 507, column: 74, scope: !11295)
!11320 = !DILocation(line: 507, column: 31, scope: !11295)
!11321 = !DILocation(line: 507, column: 28, scope: !11295)
!11322 = !DILocation(line: 506, column: 25, scope: !11295)
!11323 = !DILocation(line: 510, column: 31, scope: !11295)
!11324 = !DILocation(line: 510, column: 18, scope: !11295)
!11325 = !DILocation(line: 511, column: 19, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11295, file: !11049, line: 511, column: 12)
!11327 = !DILocation(line: 511, column: 12, scope: !11295)
!11328 = !DILocation(line: 523, column: 29, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11330, file: !11049, line: 523, column: 10)
!11330 = distinct !DILexicalBlock(scope: !11282, file: !11049, line: 518, column: 5)
!11331 = !DILocation(line: 523, column: 38, scope: !11329)
!11332 = !DILocation(line: 523, column: 10, scope: !11330)
!11333 = !DILocation(line: 526, column: 9, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11329, file: !11049, line: 524, column: 7)
!11335 = !DILocation(line: 529, column: 21, scope: !11334)
!11336 = !DILocation(line: 532, column: 9, scope: !11334)
!11337 = !DILocation(line: 532, column: 15, scope: !11334)
!11338 = !DILocation(line: 532, column: 51, scope: !11334)
!11339 = !DILocation(line: 534, column: 15, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11341, file: !11049, line: 534, column: 14)
!11341 = distinct !DILexicalBlock(scope: !11334, file: !11049, line: 533, column: 9)
!11342 = !DILocation(line: 534, column: 29, scope: !11340)
!11343 = !DILocation(line: 534, column: 42, scope: !11340)
!11344 = !DILocation(line: 534, column: 14, scope: !11341)
!11345 = distinct !{!11345, !11336, !11346}
!11346 = !DILocation(line: 538, column: 9, scope: !11334)
!11347 = !DILocation(line: 544, column: 9, scope: !11334)
!11348 = !DILocation(line: 546, column: 9, scope: !11334)
!11349 = !DILocation(line: 548, column: 7, scope: !11334)
!11350 = !DILocation(line: 552, column: 9, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11329, file: !11049, line: 550, column: 7)
!11352 = !DILocation(line: 555, column: 21, scope: !11351)
!11353 = !DILocation(line: 558, column: 9, scope: !11351)
!11354 = !DILocation(line: 558, column: 15, scope: !11351)
!11355 = !DILocation(line: 558, column: 51, scope: !11351)
!11356 = !DILocation(line: 560, column: 15, scope: !11357)
!11357 = distinct !DILexicalBlock(scope: !11358, file: !11049, line: 560, column: 14)
!11358 = distinct !DILexicalBlock(scope: !11351, file: !11049, line: 559, column: 9)
!11359 = !DILocation(line: 560, column: 29, scope: !11357)
!11360 = !DILocation(line: 560, column: 42, scope: !11357)
!11361 = !DILocation(line: 560, column: 14, scope: !11358)
!11362 = distinct !{!11362, !11353, !11363}
!11363 = !DILocation(line: 564, column: 9, scope: !11351)
!11364 = !DILocation(line: 569, column: 27, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11114, file: !11049, line: 569, column: 6)
!11366 = !DILocation(line: 569, column: 43, scope: !11365)
!11367 = !DILocation(line: 569, column: 69, scope: !11365)
!11368 = !DILocation(line: 569, column: 6, scope: !11114)
!11369 = !DILocation(line: 575, column: 27, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !11049, line: 575, column: 8)
!11371 = distinct !DILexicalBlock(scope: !11365, file: !11049, line: 570, column: 3)
!11372 = !DILocation(line: 575, column: 36, scope: !11370)
!11373 = !DILocation(line: 575, column: 8, scope: !11371)
!11374 = !DILocation(line: 578, column: 7, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11370, file: !11049, line: 576, column: 5)
!11376 = !DILocation(line: 581, column: 19, scope: !11375)
!11377 = !DILocation(line: 584, column: 7, scope: !11375)
!11378 = !DILocation(line: 584, column: 13, scope: !11375)
!11379 = !DILocation(line: 584, column: 49, scope: !11375)
!11380 = !DILocation(line: 586, column: 13, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !11049, line: 586, column: 12)
!11382 = distinct !DILexicalBlock(scope: !11375, file: !11049, line: 585, column: 7)
!11383 = !DILocation(line: 586, column: 27, scope: !11381)
!11384 = !DILocation(line: 586, column: 41, scope: !11381)
!11385 = !DILocation(line: 586, column: 12, scope: !11382)
!11386 = distinct !{!11386, !11377, !11387}
!11387 = !DILocation(line: 590, column: 7, scope: !11375)
!11388 = !DILocation(line: 595, column: 7, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11370, file: !11049, line: 593, column: 5)
!11390 = !DILocation(line: 598, column: 19, scope: !11389)
!11391 = !DILocation(line: 601, column: 7, scope: !11389)
!11392 = !DILocation(line: 601, column: 13, scope: !11389)
!11393 = !DILocation(line: 601, column: 49, scope: !11389)
!11394 = !DILocation(line: 603, column: 13, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11396, file: !11049, line: 603, column: 12)
!11396 = distinct !DILexicalBlock(scope: !11389, file: !11049, line: 602, column: 7)
!11397 = !DILocation(line: 603, column: 27, scope: !11395)
!11398 = !DILocation(line: 603, column: 41, scope: !11395)
!11399 = !DILocation(line: 603, column: 12, scope: !11396)
!11400 = distinct !{!11400, !11391, !11401}
!11401 = !DILocation(line: 607, column: 7, scope: !11389)
!11402 = !DILocation(line: 611, column: 27, scope: !11147)
!11403 = !DILocation(line: 611, column: 43, scope: !11147)
!11404 = !DILocation(line: 611, column: 69, scope: !11147)
!11405 = !DILocation(line: 611, column: 6, scope: !11114)
!11406 = !DILocation(line: 0, scope: !11146)
!11407 = !DILocation(line: 620, column: 8, scope: !11152)
!11408 = !DILocation(line: 620, column: 8, scope: !11146)
!11409 = !DILocation(line: 622, column: 7, scope: !11150)
!11410 = !DILocation(line: 622, column: 7, scope: !11151)
!11411 = !DILocation(line: 624, column: 5, scope: !11151)
!11412 = !DILocation(line: 626, column: 8, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11146, file: !11049, line: 626, column: 8)
!11414 = !DILocation(line: 626, column: 8, scope: !11146)
!11415 = !DILocation(line: 629, column: 7, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11413, file: !11049, line: 627, column: 5)
!11417 = !DILocation(line: 632, column: 19, scope: !11416)
!11418 = !DILocation(line: 634, column: 7, scope: !11416)
!11419 = !DILocation(line: 634, column: 13, scope: !11416)
!11420 = !DILocation(line: 636, column: 13, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !11049, line: 636, column: 12)
!11422 = distinct !DILexicalBlock(scope: !11416, file: !11049, line: 635, column: 7)
!11423 = !DILocation(line: 636, column: 27, scope: !11421)
!11424 = !DILocation(line: 636, column: 40, scope: !11421)
!11425 = !DILocation(line: 636, column: 12, scope: !11422)
!11426 = distinct !{!11426, !11418, !11427}
!11427 = !DILocation(line: 640, column: 7, scope: !11416)
!11428 = !DILocation(line: 644, column: 5, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !11049, line: 644, column: 5)
!11430 = distinct !DILexicalBlock(scope: !11146, file: !11049, line: 644, column: 5)
!11431 = !DILocation(line: 644, column: 5, scope: !11430)
!11432 = !DILocation(line: 644, column: 5, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11429, file: !11049, line: 644, column: 5)
!11434 = !DILocation(line: 644, column: 5, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !11049, line: 644, column: 5)
!11436 = distinct !DILexicalBlock(scope: !11429, file: !11049, line: 644, column: 5)
!11437 = !DILocation(line: 644, column: 5, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !11049, line: 644, column: 5)
!11439 = distinct !DILexicalBlock(scope: !11436, file: !11049, line: 644, column: 5)
!11440 = !DILocation(line: 644, column: 5, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11439, file: !11049, line: 644, column: 5)
!11442 = !DILocation(line: 0, scope: !11429)
!11443 = !DILocation(line: 646, column: 27, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11146, file: !11049, line: 646, column: 8)
!11445 = !DILocation(line: 646, column: 36, scope: !11444)
!11446 = !DILocation(line: 0, scope: !11444)
!11447 = !DILocation(line: 646, column: 8, scope: !11146)
!11448 = !DILocation(line: 652, column: 13, scope: !11449)
!11449 = distinct !DILexicalBlock(scope: !11444, file: !11049, line: 647, column: 5)
!11450 = !DILocation(line: 652, column: 49, scope: !11449)
!11451 = !DILocation(line: 652, column: 7, scope: !11449)
!11452 = !DILocation(line: 654, column: 13, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !11049, line: 654, column: 12)
!11454 = distinct !DILexicalBlock(scope: !11449, file: !11049, line: 653, column: 7)
!11455 = !DILocation(line: 654, column: 27, scope: !11453)
!11456 = !DILocation(line: 654, column: 41, scope: !11453)
!11457 = !DILocation(line: 654, column: 12, scope: !11454)
!11458 = distinct !{!11458, !11451, !11459}
!11459 = !DILocation(line: 658, column: 7, scope: !11449)
!11460 = !DILocation(line: 666, column: 13, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11444, file: !11049, line: 661, column: 5)
!11462 = !DILocation(line: 666, column: 49, scope: !11461)
!11463 = !DILocation(line: 666, column: 7, scope: !11461)
!11464 = !DILocation(line: 668, column: 13, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !11049, line: 668, column: 12)
!11466 = distinct !DILexicalBlock(scope: !11461, file: !11049, line: 667, column: 7)
!11467 = !DILocation(line: 668, column: 27, scope: !11465)
!11468 = !DILocation(line: 668, column: 41, scope: !11465)
!11469 = !DILocation(line: 668, column: 12, scope: !11466)
!11470 = distinct !{!11470, !11463, !11471}
!11471 = !DILocation(line: 672, column: 7, scope: !11461)
!11472 = !DILocation(line: 676, column: 8, scope: !11146)
!11473 = !DILocation(line: 678, column: 7, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !11049, line: 677, column: 5)
!11475 = distinct !DILexicalBlock(scope: !11146, file: !11049, line: 676, column: 8)
!11476 = !DILocation(line: 679, column: 5, scope: !11474)
!11477 = !DILocation(line: 685, column: 31, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11114, file: !11049, line: 685, column: 7)
!11479 = !DILocation(line: 685, column: 41, scope: !11478)
!11480 = !DILocation(line: 685, column: 7, scope: !11114)
!11481 = !DILocation(line: 688, column: 22, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11483, file: !11049, line: 688, column: 8)
!11483 = distinct !DILexicalBlock(scope: !11478, file: !11049, line: 686, column: 3)
!11484 = !DILocation(line: 688, column: 8, scope: !11483)
!11485 = !DILocation(line: 690, column: 44, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11487, file: !11049, line: 690, column: 10)
!11487 = distinct !DILexicalBlock(scope: !11482, file: !11049, line: 689, column: 5)
!11488 = !DILocation(line: 0, scope: !11486)
!11489 = !DILocation(line: 690, column: 10, scope: !11487)
!11490 = !DILocation(line: 704, column: 15, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11486, file: !11049, line: 691, column: 7)
!11492 = !DILocation(line: 704, column: 51, scope: !11491)
!11493 = !DILocation(line: 704, column: 9, scope: !11491)
!11494 = !DILocation(line: 706, column: 15, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11496, file: !11049, line: 706, column: 14)
!11496 = distinct !DILexicalBlock(scope: !11491, file: !11049, line: 705, column: 9)
!11497 = !DILocation(line: 706, column: 29, scope: !11495)
!11498 = !DILocation(line: 706, column: 43, scope: !11495)
!11499 = !DILocation(line: 706, column: 14, scope: !11496)
!11500 = distinct !{!11500, !11493, !11501}
!11501 = !DILocation(line: 710, column: 9, scope: !11491)
!11502 = !DILocation(line: 713, column: 9, scope: !11491)
!11503 = !DILocation(line: 717, column: 9, scope: !11491)
!11504 = !DILocation(line: 720, column: 21, scope: !11491)
!11505 = !DILocation(line: 723, column: 9, scope: !11491)
!11506 = !DILocation(line: 723, column: 15, scope: !11491)
!11507 = !DILocation(line: 723, column: 51, scope: !11491)
!11508 = !DILocation(line: 725, column: 15, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !11049, line: 725, column: 14)
!11510 = distinct !DILexicalBlock(scope: !11491, file: !11049, line: 724, column: 9)
!11511 = !DILocation(line: 725, column: 29, scope: !11509)
!11512 = !DILocation(line: 725, column: 43, scope: !11509)
!11513 = !DILocation(line: 725, column: 14, scope: !11510)
!11514 = distinct !{!11514, !11505, !11515}
!11515 = !DILocation(line: 729, column: 9, scope: !11491)
!11516 = !DILocation(line: 740, column: 15, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11486, file: !11049, line: 732, column: 7)
!11518 = !DILocation(line: 740, column: 51, scope: !11517)
!11519 = !DILocation(line: 740, column: 9, scope: !11517)
!11520 = !DILocation(line: 742, column: 15, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11522, file: !11049, line: 742, column: 14)
!11522 = distinct !DILexicalBlock(scope: !11517, file: !11049, line: 741, column: 9)
!11523 = !DILocation(line: 742, column: 29, scope: !11521)
!11524 = !DILocation(line: 742, column: 43, scope: !11521)
!11525 = !DILocation(line: 742, column: 14, scope: !11522)
!11526 = distinct !{!11526, !11519, !11527}
!11527 = !DILocation(line: 746, column: 9, scope: !11517)
!11528 = !DILocation(line: 752, column: 44, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11530, file: !11049, line: 752, column: 10)
!11530 = distinct !DILexicalBlock(scope: !11482, file: !11049, line: 750, column: 5)
!11531 = !DILocation(line: 752, column: 10, scope: !11530)
!11532 = !DILocation(line: 759, column: 27, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11529, file: !11049, line: 757, column: 7)
!11534 = !DILocation(line: 760, column: 13, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11533, file: !11049, line: 760, column: 12)
!11536 = !DILocation(line: 760, column: 77, scope: !11535)
!11537 = !DILocation(line: 760, column: 51, scope: !11535)
!11538 = !DILocation(line: 760, column: 88, scope: !11535)
!11539 = !DILocation(line: 761, column: 13, scope: !11535)
!11540 = !DILocation(line: 761, column: 77, scope: !11535)
!11541 = !DILocation(line: 761, column: 51, scope: !11535)
!11542 = !DILocation(line: 761, column: 85, scope: !11535)
!11543 = !DILocation(line: 762, column: 13, scope: !11535)
!11544 = !DILocation(line: 762, column: 77, scope: !11535)
!11545 = !DILocation(line: 762, column: 51, scope: !11535)
!11546 = !DILocation(line: 760, column: 12, scope: !11533)
!11547 = !DILocation(line: 770, column: 3, scope: !11114)
!11548 = !DILocation(line: 771, column: 1, scope: !11114)
!11549 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !11049, file: !11049, line: 1343, type: !11112, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11550)
!11550 = !{!11551, !11552, !11553, !11554}
!11551 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !11549, file: !11049, line: 1343, type: !110)
!11552 = !DILocalVariable(name: "vos", scope: !11549, file: !11049, line: 1345, type: !110)
!11553 = !DILocalVariable(name: "latency", scope: !11549, file: !11049, line: 1346, type: !110)
!11554 = !DILocalVariable(name: "tmpreg", scope: !11555, file: !11049, line: 1357, type: !316)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !11049, line: 1357, column: 7)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !11049, line: 1356, column: 5)
!11557 = distinct !DILexicalBlock(scope: !11558, file: !11049, line: 1351, column: 8)
!11558 = distinct !DILexicalBlock(scope: !11559, file: !11049, line: 1350, column: 3)
!11559 = distinct !DILexicalBlock(scope: !11549, file: !11049, line: 1349, column: 7)
!11560 = !DILocation(line: 0, scope: !11549)
!11561 = !DILocation(line: 1349, column: 7, scope: !11559)
!11562 = !DILocation(line: 1349, column: 42, scope: !11559)
!11563 = !DILocation(line: 1349, column: 7, scope: !11549)
!11564 = !DILocation(line: 1351, column: 8, scope: !11557)
!11565 = !DILocation(line: 1351, column: 8, scope: !11558)
!11566 = !DILocation(line: 1353, column: 13, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11557, file: !11049, line: 1352, column: 5)
!11568 = !DILocation(line: 1354, column: 5, scope: !11567)
!11569 = !DILocation(line: 1357, column: 7, scope: !11555)
!11570 = !DILocation(line: 1357, column: 7, scope: !11556)
!11571 = !DILocation(line: 1358, column: 13, scope: !11556)
!11572 = !DILocation(line: 1359, column: 7, scope: !11556)
!11573 = !DILocation(line: 0, scope: !11557)
!11574 = !DILocation(line: 1363, column: 13, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11558, file: !11049, line: 1363, column: 8)
!11576 = !DILocation(line: 1363, column: 46, scope: !11575)
!11577 = !DILocation(line: 1369, column: 3, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11549, file: !11049, line: 1369, column: 3)
!11579 = !DILocation(line: 1369, column: 3, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11581, file: !11049, line: 1369, column: 3)
!11581 = distinct !DILexicalBlock(scope: !11578, file: !11049, line: 1369, column: 3)
!11582 = !DILocation(line: 1373, column: 6, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11549, file: !11049, line: 1373, column: 6)
!11584 = !DILocation(line: 1379, column: 1, scope: !11549)
!11585 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11049, file: !11049, line: 799, type: !11586, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11597)
!11586 = !DISubroutineType(types: !11587)
!11587 = !{!11052, !11588, !110}
!11588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11589, size: 32)
!11589 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11119, line: 304, baseType: !11590)
!11590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11119, line: 288, size: 160, elements: !11591)
!11591 = !{!11592, !11593, !11594, !11595, !11596}
!11592 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11590, file: !11119, line: 290, baseType: !110, size: 32)
!11593 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11590, file: !11119, line: 293, baseType: !110, size: 32, offset: 32)
!11594 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11590, file: !11119, line: 296, baseType: !110, size: 32, offset: 64)
!11595 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11590, file: !11119, line: 299, baseType: !110, size: 32, offset: 96)
!11596 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11590, file: !11119, line: 302, baseType: !110, size: 32, offset: 128)
!11597 = !{!11598, !11599, !11600, !11601}
!11598 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11585, file: !11049, line: 799, type: !11588)
!11599 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11585, file: !11049, line: 799, type: !110)
!11600 = !DILocalVariable(name: "tickstart", scope: !11585, file: !11049, line: 801, type: !110)
!11601 = !DILocalVariable(name: "status", scope: !11585, file: !11049, line: 802, type: !11052)
!11602 = !DILocation(line: 0, scope: !11585)
!11603 = !DILocation(line: 805, column: 24, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11585, file: !11049, line: 805, column: 6)
!11605 = !DILocation(line: 805, column: 6, scope: !11585)
!11606 = !DILocation(line: 817, column: 17, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11585, file: !11049, line: 817, column: 6)
!11608 = !DILocation(line: 817, column: 15, scope: !11607)
!11609 = !DILocation(line: 817, column: 6, scope: !11585)
!11610 = !DILocation(line: 820, column: 5, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11612, file: !11049, line: 820, column: 5)
!11612 = distinct !DILexicalBlock(scope: !11613, file: !11049, line: 820, column: 5)
!11613 = distinct !DILexicalBlock(scope: !11607, file: !11049, line: 818, column: 3)
!11614 = !DILocation(line: 820, column: 5, scope: !11612)
!11615 = !DILocation(line: 820, column: 5, scope: !11616)
!11616 = distinct !DILexicalBlock(scope: !11611, file: !11049, line: 820, column: 5)
!11617 = !DILocation(line: 824, column: 8, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11613, file: !11049, line: 824, column: 8)
!11619 = !DILocation(line: 824, column: 34, scope: !11618)
!11620 = !DILocation(line: 824, column: 8, scope: !11613)
!11621 = !DILocation(line: 831, column: 27, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11585, file: !11049, line: 831, column: 6)
!11623 = !DILocation(line: 831, column: 38, scope: !11622)
!11624 = !DILocation(line: 831, column: 60, scope: !11622)
!11625 = !DILocation(line: 831, column: 6, scope: !11585)
!11626 = !DILocation(line: 834, column: 5, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11622, file: !11049, line: 832, column: 3)
!11628 = !DILocation(line: 838, column: 27, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11585, file: !11049, line: 838, column: 6)
!11630 = !DILocation(line: 835, column: 3, scope: !11627)
!11631 = !DILocation(line: 838, column: 38, scope: !11629)
!11632 = !DILocation(line: 838, column: 62, scope: !11629)
!11633 = !DILocation(line: 838, column: 6, scope: !11585)
!11634 = !DILocation(line: 843, column: 27, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !11049, line: 843, column: 8)
!11636 = distinct !DILexicalBlock(scope: !11629, file: !11049, line: 839, column: 3)
!11637 = !DILocation(line: 843, column: 8, scope: !11636)
!11638 = !DILocation(line: 846, column: 10, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !11049, line: 846, column: 10)
!11640 = distinct !DILexicalBlock(scope: !11635, file: !11049, line: 844, column: 5)
!11641 = !DILocation(line: 846, column: 46, scope: !11639)
!11642 = !DILocation(line: 846, column: 10, scope: !11640)
!11643 = !DILocation(line: 855, column: 10, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11645, file: !11049, line: 855, column: 10)
!11645 = distinct !DILexicalBlock(scope: !11646, file: !11049, line: 853, column: 5)
!11646 = distinct !DILexicalBlock(scope: !11635, file: !11049, line: 852, column: 13)
!11647 = !DILocation(line: 855, column: 46, scope: !11644)
!11648 = !DILocation(line: 855, column: 10, scope: !11645)
!11649 = !DILocation(line: 864, column: 10, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11651, file: !11049, line: 864, column: 10)
!11651 = distinct !DILexicalBlock(scope: !11652, file: !11049, line: 862, column: 5)
!11652 = distinct !DILexicalBlock(scope: !11646, file: !11049, line: 861, column: 13)
!11653 = !DILocation(line: 864, column: 46, scope: !11650)
!11654 = !DILocation(line: 864, column: 10, scope: !11651)
!11655 = !DILocation(line: 873, column: 10, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !11049, line: 873, column: 10)
!11657 = distinct !DILexicalBlock(scope: !11652, file: !11049, line: 871, column: 5)
!11658 = !DILocation(line: 873, column: 46, scope: !11656)
!11659 = !DILocation(line: 873, column: 10, scope: !11657)
!11660 = !DILocation(line: 878, column: 5, scope: !11636)
!11661 = !DILocation(line: 881, column: 17, scope: !11636)
!11662 = !DILocation(line: 883, column: 27, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11636, file: !11049, line: 883, column: 8)
!11664 = !DILocation(line: 883, column: 8, scope: !11636)
!11665 = !DILocation(line: 885, column: 14, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11663, file: !11049, line: 884, column: 5)
!11667 = !DILocation(line: 885, column: 44, scope: !11666)
!11668 = !DILocation(line: 885, column: 7, scope: !11666)
!11669 = !DILocation(line: 887, column: 13, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !11049, line: 887, column: 12)
!11671 = distinct !DILexicalBlock(scope: !11666, file: !11049, line: 886, column: 7)
!11672 = !DILocation(line: 887, column: 27, scope: !11670)
!11673 = !DILocation(line: 887, column: 41, scope: !11670)
!11674 = !DILocation(line: 887, column: 12, scope: !11671)
!11675 = distinct !{!11675, !11668, !11676}
!11676 = !DILocation(line: 891, column: 7, scope: !11666)
!11677 = !DILocation(line: 895, column: 14, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11679, file: !11049, line: 894, column: 5)
!11679 = distinct !DILexicalBlock(scope: !11663, file: !11049, line: 893, column: 13)
!11680 = !DILocation(line: 895, column: 44, scope: !11678)
!11681 = !DILocation(line: 895, column: 7, scope: !11678)
!11682 = !DILocation(line: 897, column: 13, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !11049, line: 897, column: 12)
!11684 = distinct !DILexicalBlock(scope: !11678, file: !11049, line: 896, column: 7)
!11685 = !DILocation(line: 897, column: 27, scope: !11683)
!11686 = !DILocation(line: 897, column: 41, scope: !11683)
!11687 = !DILocation(line: 897, column: 12, scope: !11684)
!11688 = distinct !{!11688, !11681, !11689}
!11689 = !DILocation(line: 901, column: 7, scope: !11678)
!11690 = !DILocation(line: 905, column: 14, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11692, file: !11049, line: 904, column: 5)
!11692 = distinct !DILexicalBlock(scope: !11679, file: !11049, line: 903, column: 13)
!11693 = !DILocation(line: 905, column: 44, scope: !11691)
!11694 = !DILocation(line: 905, column: 7, scope: !11691)
!11695 = !DILocation(line: 907, column: 13, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11697, file: !11049, line: 907, column: 12)
!11697 = distinct !DILexicalBlock(scope: !11691, file: !11049, line: 906, column: 7)
!11698 = !DILocation(line: 907, column: 27, scope: !11696)
!11699 = !DILocation(line: 907, column: 41, scope: !11696)
!11700 = !DILocation(line: 907, column: 12, scope: !11697)
!11701 = distinct !{!11701, !11694, !11702}
!11702 = !DILocation(line: 911, column: 7, scope: !11691)
!11703 = !DILocation(line: 915, column: 13, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11692, file: !11049, line: 914, column: 5)
!11705 = !DILocation(line: 915, column: 43, scope: !11704)
!11706 = !DILocation(line: 915, column: 7, scope: !11704)
!11707 = !DILocation(line: 917, column: 13, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !11049, line: 917, column: 12)
!11709 = distinct !DILexicalBlock(scope: !11704, file: !11049, line: 916, column: 7)
!11710 = !DILocation(line: 917, column: 27, scope: !11708)
!11711 = !DILocation(line: 917, column: 41, scope: !11708)
!11712 = !DILocation(line: 917, column: 12, scope: !11709)
!11713 = distinct !{!11713, !11706, !11714}
!11714 = !DILocation(line: 921, column: 7, scope: !11704)
!11715 = !DILocation(line: 925, column: 17, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11585, file: !11049, line: 925, column: 6)
!11717 = !DILocation(line: 925, column: 15, scope: !11716)
!11718 = !DILocation(line: 925, column: 6, scope: !11585)
!11719 = !DILocation(line: 928, column: 5, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11721, file: !11049, line: 928, column: 5)
!11721 = distinct !DILexicalBlock(scope: !11716, file: !11049, line: 926, column: 3)
!11722 = !DILocation(line: 932, column: 8, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11721, file: !11049, line: 932, column: 8)
!11724 = !DILocation(line: 932, column: 34, scope: !11723)
!11725 = !DILocation(line: 932, column: 8, scope: !11721)
!11726 = !DILocation(line: 939, column: 27, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11585, file: !11049, line: 939, column: 6)
!11728 = !DILocation(line: 939, column: 38, scope: !11727)
!11729 = !DILocation(line: 939, column: 61, scope: !11727)
!11730 = !DILocation(line: 939, column: 6, scope: !11585)
!11731 = !DILocation(line: 942, column: 5, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11727, file: !11049, line: 940, column: 3)
!11733 = !DILocation(line: 946, column: 27, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11585, file: !11049, line: 946, column: 6)
!11735 = !DILocation(line: 943, column: 3, scope: !11732)
!11736 = !DILocation(line: 946, column: 38, scope: !11734)
!11737 = !DILocation(line: 946, column: 61, scope: !11734)
!11738 = !DILocation(line: 946, column: 6, scope: !11585)
!11739 = !DILocation(line: 949, column: 5, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11734, file: !11049, line: 947, column: 3)
!11741 = !DILocation(line: 950, column: 3, scope: !11740)
!11742 = !DILocation(line: 953, column: 21, scope: !11585)
!11743 = !DILocation(line: 953, column: 70, scope: !11585)
!11744 = !DILocation(line: 953, column: 91, scope: !11585)
!11745 = !DILocation(line: 953, column: 50, scope: !11585)
!11746 = !DILocation(line: 953, column: 47, scope: !11585)
!11747 = !DILocation(line: 953, column: 19, scope: !11585)
!11748 = !DILocation(line: 956, column: 25, scope: !11585)
!11749 = !DILocation(line: 956, column: 12, scope: !11585)
!11750 = !DILocation(line: 958, column: 3, scope: !11585)
!11751 = !DILocation(line: 959, column: 1, scope: !11585)
!11752 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11049, file: !11049, line: 1083, type: !7389, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11753)
!11753 = !{!11754, !11755, !11756, !11757, !11758, !11759}
!11754 = !DILocalVariable(name: "tmpreg", scope: !11752, file: !11049, line: 1085, type: !110)
!11755 = !DILocalVariable(name: "pllm", scope: !11752, file: !11049, line: 1085, type: !110)
!11756 = !DILocalVariable(name: "plld", scope: !11752, file: !11049, line: 1085, type: !110)
!11757 = !DILocalVariable(name: "pllvco", scope: !11752, file: !11049, line: 1085, type: !110)
!11758 = !DILocalVariable(name: "msiclkrange", scope: !11752, file: !11049, line: 1085, type: !110)
!11759 = !DILocalVariable(name: "sysclockfreq", scope: !11752, file: !11049, line: 1085, type: !110)
!11760 = !DILocation(line: 1087, column: 17, scope: !11752)
!11761 = !DILocation(line: 0, scope: !11752)
!11762 = !DILocation(line: 1090, column: 3, scope: !11752)
!11763 = !DILocation(line: 1100, column: 7, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !11049, line: 1098, column: 5)
!11765 = distinct !DILexicalBlock(scope: !11752, file: !11049, line: 1091, column: 3)
!11766 = !DILocation(line: 1104, column: 63, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11765, file: !11049, line: 1103, column: 5)
!11768 = !DILocation(line: 1104, column: 14, scope: !11767)
!11769 = !DILocation(line: 1105, column: 52, scope: !11767)
!11770 = !DILocation(line: 1105, column: 76, scope: !11767)
!11771 = !DILocation(line: 1106, column: 11, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11767, file: !11049, line: 1106, column: 11)
!11773 = !DILocation(line: 1106, column: 41, scope: !11772)
!11774 = !DILocation(line: 1106, column: 11, scope: !11767)
!11775 = !DILocation(line: 0, scope: !11772)
!11776 = !DILocation(line: 1117, column: 7, scope: !11767)
!11777 = !DILocation(line: 1122, column: 27, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11765, file: !11049, line: 1121, column: 5)
!11779 = !DILocation(line: 1122, column: 56, scope: !11778)
!11780 = !DILocation(line: 1123, column: 30, scope: !11778)
!11781 = !DILocation(line: 1124, column: 7, scope: !11778)
!11782 = !DILocation(line: 0, scope: !11765)
!11783 = !DILocation(line: 1127, column: 3, scope: !11752)
!11784 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11049, file: !11049, line: 1005, type: !8882, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11785)
!11785 = !{!11786, !11787, !11788, !11789, !11799}
!11786 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11784, file: !11049, line: 1005, type: !110)
!11787 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11784, file: !11049, line: 1005, type: !110)
!11788 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11784, file: !11049, line: 1005, type: !110)
!11789 = !DILocalVariable(name: "gpio", scope: !11784, file: !11049, line: 1007, type: !11790)
!11790 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11791, line: 64, baseType: !11792)
!11791 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11791, line: 48, size: 160, elements: !11793)
!11793 = !{!11794, !11795, !11796, !11797, !11798}
!11794 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11792, file: !11791, line: 50, baseType: !110, size: 32)
!11795 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11792, file: !11791, line: 53, baseType: !110, size: 32, offset: 32)
!11796 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11792, file: !11791, line: 56, baseType: !110, size: 32, offset: 64)
!11797 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11792, file: !11791, line: 59, baseType: !110, size: 32, offset: 96)
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11792, file: !11791, line: 62, baseType: !110, size: 32, offset: 128)
!11799 = !DILocalVariable(name: "tmpreg", scope: !11800, file: !11049, line: 1022, type: !316)
!11800 = distinct !DILexicalBlock(scope: !11784, file: !11049, line: 1022, column: 3)
!11801 = !DILocation(line: 0, scope: !11784)
!11802 = !DILocation(line: 1007, column: 3, scope: !11784)
!11803 = !DILocation(line: 1007, column: 20, scope: !11784)
!11804 = !DILocation(line: 1015, column: 8, scope: !11784)
!11805 = !DILocation(line: 1015, column: 18, scope: !11784)
!11806 = !DILocation(line: 1016, column: 8, scope: !11784)
!11807 = !DILocation(line: 1016, column: 18, scope: !11784)
!11808 = !DILocation(line: 1017, column: 8, scope: !11784)
!11809 = !DILocation(line: 1017, column: 18, scope: !11784)
!11810 = !DILocation(line: 1018, column: 8, scope: !11784)
!11811 = !DILocation(line: 1018, column: 18, scope: !11784)
!11812 = !DILocation(line: 1019, column: 8, scope: !11784)
!11813 = !DILocation(line: 1019, column: 18, scope: !11784)
!11814 = !DILocation(line: 1022, column: 3, scope: !11800)
!11815 = !DILocation(line: 1022, column: 3, scope: !11784)
!11816 = !DILocation(line: 1024, column: 3, scope: !11784)
!11817 = !DILocation(line: 1027, column: 3, scope: !11784)
!11818 = !DILocation(line: 1028, column: 1, scope: !11784)
!11819 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11791, file: !11791, line: 293, type: !11820, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!11820 = !DISubroutineType(types: !11821)
!11821 = !{null, !2957, !11822}
!11822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11790, size: 32)
!11823 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11049, file: !11049, line: 1039, type: !3060, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2043)
!11824 = !DILocation(line: 1041, column: 38, scope: !11823)
!11825 = !DILocation(line: 1042, column: 1, scope: !11823)
!11826 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11049, file: !11049, line: 1048, type: !3060, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2043)
!11827 = !DILocation(line: 1050, column: 38, scope: !11826)
!11828 = !DILocation(line: 1051, column: 1, scope: !11826)
!11829 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11049, file: !11049, line: 1139, type: !7389, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2043)
!11830 = !DILocation(line: 1141, column: 10, scope: !11829)
!11831 = !DILocation(line: 1141, column: 3, scope: !11829)
!11832 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11049, file: !11049, line: 1150, type: !7389, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2043)
!11833 = !DILocation(line: 1153, column: 11, scope: !11832)
!11834 = !DILocation(line: 1153, column: 56, scope: !11832)
!11835 = !DILocation(line: 1153, column: 79, scope: !11832)
!11836 = !DILocation(line: 1153, column: 36, scope: !11832)
!11837 = !DILocation(line: 1153, column: 33, scope: !11832)
!11838 = !DILocation(line: 1153, column: 3, scope: !11832)
!11839 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11049, file: !11049, line: 1162, type: !7389, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2043)
!11840 = !DILocation(line: 1165, column: 11, scope: !11839)
!11841 = !DILocation(line: 1165, column: 55, scope: !11839)
!11842 = !DILocation(line: 1165, column: 78, scope: !11839)
!11843 = !DILocation(line: 1165, column: 35, scope: !11839)
!11844 = !DILocation(line: 1165, column: 32, scope: !11839)
!11845 = !DILocation(line: 1165, column: 3, scope: !11839)
!11846 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11049, file: !11049, line: 1175, type: !11847, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11849)
!11847 = !DISubroutineType(types: !11848)
!11848 = !{null, !11117}
!11849 = !{!11850}
!11850 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11846, file: !11049, line: 1175, type: !11117)
!11851 = !DILocation(line: 0, scope: !11846)
!11852 = !DILocation(line: 1181, column: 22, scope: !11846)
!11853 = !DILocation(line: 1181, column: 37, scope: !11846)
!11854 = !DILocation(line: 1186, column: 12, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11846, file: !11049, line: 1186, column: 6)
!11856 = !DILocation(line: 1186, column: 15, scope: !11855)
!11857 = !DILocation(line: 1186, column: 31, scope: !11855)
!11858 = !DILocation(line: 1186, column: 6, scope: !11846)
!11859 = !DILocation(line: 1188, column: 24, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11855, file: !11049, line: 1187, column: 3)
!11861 = !DILocation(line: 1188, column: 33, scope: !11860)
!11862 = !DILocation(line: 1189, column: 3, scope: !11860)
!11863 = !DILocation(line: 1190, column: 17, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11855, file: !11049, line: 1190, column: 11)
!11865 = !DILocation(line: 1190, column: 20, scope: !11864)
!11866 = !DILocation(line: 1190, column: 35, scope: !11864)
!11867 = !DILocation(line: 0, scope: !11864)
!11868 = !DILocation(line: 1190, column: 11, scope: !11855)
!11869 = !DILocation(line: 1192, column: 33, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11864, file: !11049, line: 1191, column: 3)
!11871 = !DILocation(line: 1193, column: 3, scope: !11870)
!11872 = !DILocation(line: 1196, column: 33, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11864, file: !11049, line: 1195, column: 3)
!11874 = !DILocation(line: 1200, column: 12, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11846, file: !11049, line: 1200, column: 6)
!11876 = !DILocation(line: 1200, column: 15, scope: !11875)
!11877 = !DILocation(line: 1206, column: 24, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11875, file: !11049, line: 1205, column: 3)
!11879 = !DILocation(line: 1206, column: 33, scope: !11878)
!11880 = !DILocation(line: 1209, column: 61, scope: !11846)
!11881 = !DILocation(line: 1209, column: 88, scope: !11846)
!11882 = !DILocation(line: 1209, column: 22, scope: !11846)
!11883 = !DILocation(line: 1209, column: 42, scope: !11846)
!11884 = !DILocation(line: 1212, column: 12, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11846, file: !11049, line: 1212, column: 6)
!11886 = !DILocation(line: 1212, column: 6, scope: !11846)
!11887 = !DILocation(line: 1218, column: 24, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11885, file: !11049, line: 1217, column: 3)
!11889 = !DILocation(line: 1218, column: 33, scope: !11888)
!11890 = !DILocation(line: 1221, column: 61, scope: !11846)
!11891 = !DILocation(line: 1221, column: 88, scope: !11846)
!11892 = !DILocation(line: 1221, column: 22, scope: !11846)
!11893 = !DILocation(line: 1221, column: 42, scope: !11846)
!11894 = !DILocation(line: 1222, column: 55, scope: !11846)
!11895 = !DILocation(line: 1222, column: 61, scope: !11846)
!11896 = !DILocation(line: 1222, column: 22, scope: !11846)
!11897 = !DILocation(line: 1222, column: 36, scope: !11846)
!11898 = !DILocation(line: 1225, column: 12, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11846, file: !11049, line: 1225, column: 6)
!11900 = !DILocation(line: 1225, column: 16, scope: !11899)
!11901 = !DILocation(line: 1225, column: 33, scope: !11899)
!11902 = !DILocation(line: 1225, column: 6, scope: !11846)
!11903 = !DILocation(line: 1227, column: 24, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11899, file: !11049, line: 1226, column: 3)
!11905 = !DILocation(line: 1227, column: 33, scope: !11904)
!11906 = !DILocation(line: 1228, column: 3, scope: !11904)
!11907 = !DILocation(line: 1229, column: 17, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11899, file: !11049, line: 1229, column: 11)
!11909 = !DILocation(line: 1229, column: 21, scope: !11908)
!11910 = !DILocation(line: 1229, column: 37, scope: !11908)
!11911 = !DILocation(line: 0, scope: !11908)
!11912 = !DILocation(line: 1229, column: 11, scope: !11899)
!11913 = !DILocation(line: 1231, column: 33, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11908, file: !11049, line: 1230, column: 3)
!11915 = !DILocation(line: 1232, column: 3, scope: !11914)
!11916 = !DILocation(line: 1235, column: 33, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11908, file: !11049, line: 1234, column: 3)
!11918 = !DILocation(line: 1239, column: 12, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11846, file: !11049, line: 1239, column: 6)
!11920 = !DILocation(line: 1239, column: 16, scope: !11919)
!11921 = !DILocation(line: 1245, column: 24, scope: !11922)
!11922 = distinct !DILexicalBlock(scope: !11919, file: !11049, line: 1244, column: 3)
!11923 = !DILocation(line: 1245, column: 33, scope: !11922)
!11924 = !DILocation(line: 1250, column: 12, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11846, file: !11049, line: 1250, column: 6)
!11926 = !DILocation(line: 1250, column: 15, scope: !11925)
!11927 = !DILocation(line: 1250, column: 30, scope: !11925)
!11928 = !DILocation(line: 1250, column: 6, scope: !11846)
!11929 = !DILocation(line: 1256, column: 28, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11925, file: !11049, line: 1255, column: 3)
!11931 = !DILocation(line: 1256, column: 37, scope: !11930)
!11932 = !DILocation(line: 1258, column: 54, scope: !11846)
!11933 = !DILocation(line: 1258, column: 59, scope: !11846)
!11934 = !DILocation(line: 1258, column: 26, scope: !11846)
!11935 = !DILocation(line: 1258, column: 36, scope: !11846)
!11936 = !DILocation(line: 1259, column: 51, scope: !11846)
!11937 = !DILocation(line: 1259, column: 56, scope: !11846)
!11938 = !DILocation(line: 1259, column: 26, scope: !11846)
!11939 = !DILocation(line: 1259, column: 33, scope: !11846)
!11940 = !DILocation(line: 1260, column: 51, scope: !11846)
!11941 = !DILocation(line: 1260, column: 56, scope: !11846)
!11942 = !DILocation(line: 1260, column: 26, scope: !11846)
!11943 = !DILocation(line: 1260, column: 33, scope: !11846)
!11944 = !DILocation(line: 1261, column: 1, scope: !11846)
!11945 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11049, file: !11049, line: 1271, type: !11946, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11948)
!11946 = !DISubroutineType(types: !11947)
!11947 = !{null, !11588, !943}
!11948 = !{!11949, !11950}
!11949 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11945, file: !11049, line: 1271, type: !11588)
!11950 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11945, file: !11049, line: 1271, type: !943)
!11951 = !DILocation(line: 0, scope: !11945)
!11952 = !DILocation(line: 1278, column: 22, scope: !11945)
!11953 = !DILocation(line: 1278, column: 32, scope: !11945)
!11954 = !DILocation(line: 1281, column: 53, scope: !11945)
!11955 = !DILocation(line: 1281, column: 58, scope: !11945)
!11956 = !DILocation(line: 1281, column: 22, scope: !11945)
!11957 = !DILocation(line: 1281, column: 35, scope: !11945)
!11958 = !DILocation(line: 1284, column: 54, scope: !11945)
!11959 = !DILocation(line: 1284, column: 59, scope: !11945)
!11960 = !DILocation(line: 1284, column: 22, scope: !11945)
!11961 = !DILocation(line: 1284, column: 36, scope: !11945)
!11962 = !DILocation(line: 1287, column: 55, scope: !11945)
!11963 = !DILocation(line: 1287, column: 60, scope: !11945)
!11964 = !DILocation(line: 1287, column: 22, scope: !11945)
!11965 = !DILocation(line: 1287, column: 37, scope: !11945)
!11966 = !DILocation(line: 1290, column: 56, scope: !11945)
!11967 = !DILocation(line: 1290, column: 79, scope: !11945)
!11968 = !DILocation(line: 1290, column: 22, scope: !11945)
!11969 = !DILocation(line: 1290, column: 37, scope: !11945)
!11970 = !DILocation(line: 1293, column: 16, scope: !11945)
!11971 = !DILocation(line: 1293, column: 14, scope: !11945)
!11972 = !DILocation(line: 1294, column: 1, scope: !11945)
!11973 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11049, file: !11049, line: 1301, type: !3060, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2043)
!11974 = !DILocation(line: 1304, column: 6, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11973, file: !11049, line: 1304, column: 6)
!11976 = !DILocation(line: 1304, column: 6, scope: !11973)
!11977 = !DILocation(line: 1307, column: 5, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11975, file: !11049, line: 1305, column: 3)
!11979 = !DILocation(line: 1310, column: 5, scope: !11978)
!11980 = !DILocation(line: 1311, column: 3, scope: !11978)
!11981 = !DILocation(line: 1312, column: 1, scope: !11973)
!11982 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11049, file: !11049, line: 1318, type: !3060, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2043)
!11983 = !DILocation(line: 1323, column: 1, scope: !11982)
!11984 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11985, file: !11985, line: 147, type: !6070, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !11986)
!11985 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11986 = !{!11987}
!11987 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11984, file: !11985, line: 147, type: !110)
!11988 = !DILocation(line: 0, scope: !11984)
!11989 = !DILocation(line: 150, column: 3, scope: !11984)
!11990 = !DILocation(line: 151, column: 1, scope: !11984)
!11991 = distinct !DISubprogram(name: "LL_InitTick", scope: !11992, file: !11992, line: 222, type: !9422, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !11993)
!11992 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11993 = !{!11994, !11995}
!11994 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11991, file: !11992, line: 222, type: !110)
!11995 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11991, file: !11992, line: 222, type: !110)
!11996 = !DILocation(line: 0, scope: !11991)
!11997 = !DILocation(line: 225, column: 46, scope: !11991)
!11998 = !DILocation(line: 225, column: 55, scope: !11991)
!11999 = !DILocation(line: 225, column: 18, scope: !11991)
!12000 = !DILocation(line: 226, column: 18, scope: !11991)
!12001 = !DILocation(line: 227, column: 18, scope: !11991)
!12002 = !DILocation(line: 229, column: 1, scope: !11991)
!12003 = distinct !DISubprogram(name: "LL_mDelay", scope: !11985, file: !11985, line: 163, type: !6070, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12004)
!12004 = !{!12005, !12006, !12007}
!12005 = !DILocalVariable(name: "Delay", arg: 1, scope: !12003, file: !11985, line: 163, type: !110)
!12006 = !DILocalVariable(name: "tmp", scope: !12003, file: !11985, line: 165, type: !316)
!12007 = !DILocalVariable(name: "tmpDelay", scope: !12003, file: !11985, line: 166, type: !110)
!12008 = !DILocation(line: 0, scope: !12003)
!12009 = !DILocation(line: 165, column: 3, scope: !12003)
!12010 = !DILocation(line: 165, column: 18, scope: !12003)
!12011 = !DILocation(line: 165, column: 33, scope: !12003)
!12012 = !DILocation(line: 169, column: 10, scope: !12003)
!12013 = !DILocation(line: 172, column: 15, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12003, file: !11985, line: 172, column: 6)
!12015 = !DILocation(line: 177, column: 3, scope: !12003)
!12016 = !DILocation(line: 179, column: 18, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !11985, line: 179, column: 8)
!12018 = distinct !DILexicalBlock(scope: !12003, file: !11985, line: 178, column: 3)
!12019 = !DILocation(line: 177, column: 19, scope: !12003)
!12020 = !DILocation(line: 184, column: 1, scope: !12003)
!12021 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11985, file: !11985, line: 227, type: !6070, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12022)
!12022 = !{!12023}
!12023 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12021, file: !11985, line: 227, type: !110)
!12024 = !DILocation(line: 0, scope: !12021)
!12025 = !DILocation(line: 230, column: 19, scope: !12021)
!12026 = !DILocation(line: 231, column: 1, scope: !12021)
!12027 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11985, file: !11985, line: 242, type: !12028, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12031)
!12028 = !DISubroutineType(types: !12029)
!12029 = !{!12030, !110}
!12030 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !907, line: 194, baseType: !906)
!12031 = !{!12032, !12033, !12034}
!12032 = !DILocalVariable(name: "Frequency", arg: 1, scope: !12027, file: !11985, line: 242, type: !110)
!12033 = !DILocalVariable(name: "status", scope: !12027, file: !11985, line: 244, type: !12030)
!12034 = !DILocalVariable(name: "latency", scope: !12027, file: !11985, line: 246, type: !110)
!12035 = !DILocation(line: 0, scope: !12027)
!12036 = !DILocation(line: 249, column: 25, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12027, file: !11985, line: 249, column: 7)
!12038 = !DILocation(line: 255, column: 9, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !12040, file: !11985, line: 255, column: 9)
!12040 = distinct !DILexicalBlock(scope: !12037, file: !11985, line: 254, column: 3)
!12041 = !DILocation(line: 255, column: 41, scope: !12039)
!12042 = !DILocation(line: 255, column: 9, scope: !12040)
!12043 = !DILocation(line: 257, column: 21, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12045, file: !11985, line: 257, column: 11)
!12045 = distinct !DILexicalBlock(scope: !12039, file: !11985, line: 256, column: 5)
!12046 = !DILocation(line: 284, column: 9, scope: !12040)
!12047 = !DILocation(line: 264, column: 14, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12039, file: !11985, line: 264, column: 14)
!12049 = !DILocation(line: 264, column: 46, scope: !12048)
!12050 = !DILocation(line: 264, column: 14, scope: !12039)
!12051 = !DILocation(line: 266, column: 21, scope: !12052)
!12052 = distinct !DILexicalBlock(scope: !12053, file: !11985, line: 266, column: 11)
!12053 = distinct !DILexicalBlock(scope: !12048, file: !11985, line: 265, column: 5)
!12054 = !DILocation(line: 275, column: 21, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12056, file: !11985, line: 275, column: 11)
!12056 = distinct !DILexicalBlock(scope: !12048, file: !11985, line: 274, column: 5)
!12057 = !DILocation(line: 286, column: 7, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12059, file: !11985, line: 285, column: 5)
!12059 = distinct !DILexicalBlock(scope: !12040, file: !11985, line: 284, column: 9)
!12060 = !DILocation(line: 287, column: 5, scope: !12058)
!12061 = !DILocation(line: 289, column: 5, scope: !12040)
!12062 = !DILocation(line: 293, column: 9, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12040, file: !11985, line: 293, column: 9)
!12064 = !DILocation(line: 293, column: 31, scope: !12063)
!12065 = !DILocation(line: 293, column: 9, scope: !12040)
!12066 = !DILocation(line: 298, column: 3, scope: !12027)
!12067 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !6084, file: !6084, line: 285, type: !7389, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12068 = !DILocation(line: 287, column: 21, scope: !12067)
!12069 = !DILocation(line: 287, column: 3, scope: !12067)
!12070 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !9421, file: !9421, line: 1897, type: !3060, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12071 = !DILocation(line: 1899, column: 3, scope: !12070)
!12072 = !DILocation(line: 1900, column: 1, scope: !12070)
!12073 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !9421, file: !9421, line: 1843, type: !6070, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12074)
!12074 = !{!12075}
!12075 = !DILocalVariable(name: "Latency", arg: 1, scope: !12073, file: !9421, line: 1843, type: !110)
!12076 = !DILocation(line: 0, scope: !12073)
!12077 = !DILocation(line: 1845, column: 3, scope: !12073)
!12078 = !DILocation(line: 1846, column: 1, scope: !12073)
!12079 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !9421, file: !9421, line: 1855, type: !7389, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12080 = !DILocation(line: 1857, column: 21, scope: !12079)
!12081 = !DILocation(line: 1857, column: 3, scope: !12079)
!12082 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11985, file: !11985, line: 323, type: !12083, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12098)
!12083 = !DISubroutineType(types: !12084)
!12084 = !{!12030, !12085, !12091}
!12085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12086, size: 32)
!12086 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11992, line: 103, baseType: !12087)
!12087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11992, line: 90, size: 64, elements: !12088)
!12088 = !{!12089, !12090}
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !12087, file: !11992, line: 92, baseType: !110, size: 32)
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !12087, file: !11992, line: 98, baseType: !110, size: 32, offset: 32)
!12091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12092, size: 32)
!12092 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11992, line: 128, baseType: !12093)
!12093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11992, line: 108, size: 96, elements: !12094)
!12094 = !{!12095, !12096, !12097}
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12093, file: !11992, line: 110, baseType: !110, size: 32)
!12096 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12093, file: !11992, line: 116, baseType: !110, size: 32, offset: 32)
!12097 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12093, file: !11992, line: 122, baseType: !110, size: 32, offset: 64)
!12098 = !{!12099, !12100, !12101, !12102}
!12099 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12082, file: !11985, line: 323, type: !12085)
!12100 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12082, file: !11985, line: 324, type: !12091)
!12101 = !DILocalVariable(name: "status", scope: !12082, file: !11985, line: 326, type: !12030)
!12102 = !DILocalVariable(name: "pllfreq", scope: !12082, file: !11985, line: 327, type: !110)
!12103 = !DILocation(line: 0, scope: !12082)
!12104 = !DILocation(line: 330, column: 7, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12082, file: !11985, line: 330, column: 7)
!12106 = !DILocation(line: 330, column: 26, scope: !12105)
!12107 = !DILocation(line: 330, column: 7, scope: !12082)
!12108 = !DILocation(line: 333, column: 15, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !12105, file: !11985, line: 331, column: 3)
!12110 = !DILocation(line: 336, column: 9, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !12109, file: !11985, line: 336, column: 9)
!12112 = !DILocation(line: 336, column: 30, scope: !12111)
!12113 = !DILocation(line: 336, column: 9, scope: !12109)
!12114 = !DILocation(line: 338, column: 7, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12111, file: !11985, line: 337, column: 5)
!12116 = !DILocation(line: 339, column: 7, scope: !12115)
!12117 = !DILocation(line: 339, column: 14, scope: !12115)
!12118 = !DILocation(line: 339, column: 35, scope: !12115)
!12119 = distinct !{!12119, !12116, !12120}
!12120 = !DILocation(line: 342, column: 7, scope: !12115)
!12121 = !DILocation(line: 346, column: 76, scope: !12109)
!12122 = !DILocation(line: 346, column: 105, scope: !12109)
!12123 = !DILocation(line: 346, column: 5, scope: !12109)
!12124 = !DILocation(line: 349, column: 14, scope: !12109)
!12125 = !DILocation(line: 350, column: 3, scope: !12109)
!12126 = !DILocation(line: 0, scope: !12105)
!12127 = !DILocation(line: 357, column: 3, scope: !12082)
!12128 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11985, file: !11985, line: 487, type: !12129, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12131)
!12129 = !DISubroutineType(types: !12130)
!12130 = !{!12030}
!12131 = !{!12132}
!12132 = !DILocalVariable(name: "status", scope: !12128, file: !11985, line: 489, type: !12030)
!12133 = !DILocation(line: 0, scope: !12128)
!12134 = !DILocation(line: 492, column: 7, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12128, file: !11985, line: 492, column: 7)
!12136 = !DILocation(line: 492, column: 28, scope: !12135)
!12137 = !DILocation(line: 492, column: 7, scope: !12128)
!12138 = !DILocation(line: 498, column: 3, scope: !12128)
!12139 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11985, file: !11985, line: 457, type: !12140, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12142)
!12140 = !DISubroutineType(types: !12141)
!12141 = !{!110, !110, !12085}
!12142 = !{!12143, !12144, !12145}
!12143 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12139, file: !11985, line: 457, type: !110)
!12144 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12139, file: !11985, line: 457, type: !12085)
!12145 = !DILocalVariable(name: "pllfreq", scope: !12139, file: !11985, line: 459, type: !110)
!12146 = !DILocation(line: 0, scope: !12139)
!12147 = !DILocation(line: 470, column: 68, scope: !12139)
!12148 = !DILocation(line: 470, column: 75, scope: !12139)
!12149 = !DILocation(line: 470, column: 35, scope: !12139)
!12150 = !DILocation(line: 470, column: 34, scope: !12139)
!12151 = !DILocation(line: 470, column: 32, scope: !12139)
!12152 = !DILocation(line: 475, column: 46, scope: !12139)
!12153 = !DILocation(line: 475, column: 53, scope: !12139)
!12154 = !DILocation(line: 475, column: 76, scope: !12139)
!12155 = !DILocation(line: 475, column: 21, scope: !12139)
!12156 = !DILocation(line: 478, column: 3, scope: !12139)
!12157 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8759, file: !8759, line: 612, type: !7389, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12158 = !DILocation(line: 614, column: 12, scope: !12157)
!12159 = !DILocation(line: 614, column: 11, scope: !12157)
!12160 = !DILocation(line: 614, column: 3, scope: !12157)
!12161 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8759, file: !8759, line: 592, type: !3060, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12162 = !DILocation(line: 594, column: 3, scope: !12161)
!12163 = !DILocation(line: 595, column: 1, scope: !12161)
!12164 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8759, file: !8759, line: 1219, type: !8882, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12165)
!12165 = !{!12166, !12167, !12168}
!12166 = !DILocalVariable(name: "Source", arg: 1, scope: !12164, file: !8759, line: 1219, type: !110)
!12167 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !12164, file: !8759, line: 1219, type: !110)
!12168 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !12164, file: !8759, line: 1219, type: !110)
!12169 = !DILocation(line: 0, scope: !12164)
!12170 = !DILocation(line: 1221, column: 3, scope: !12164)
!12171 = !DILocation(line: 1222, column: 1, scope: !12164)
!12172 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11985, file: !11985, line: 510, type: !12173, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12175)
!12173 = !DISubroutineType(types: !12174)
!12174 = !{!12030, !110, !12091}
!12175 = !{!12176, !12177, !12178, !12179}
!12176 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12172, file: !11985, line: 510, type: !110)
!12177 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12172, file: !11985, line: 510, type: !12091)
!12178 = !DILocalVariable(name: "status", scope: !12172, file: !11985, line: 512, type: !12030)
!12179 = !DILocalVariable(name: "hclk_frequency", scope: !12172, file: !11985, line: 513, type: !110)
!12180 = !DILocation(line: 0, scope: !12172)
!12181 = !DILocation(line: 520, column: 20, scope: !12172)
!12182 = !DILocation(line: 523, column: 7, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12172, file: !11985, line: 523, column: 7)
!12184 = !DILocation(line: 523, column: 23, scope: !12183)
!12185 = !DILocation(line: 523, column: 7, scope: !12172)
!12186 = !DILocation(line: 526, column: 14, scope: !12187)
!12187 = distinct !DILexicalBlock(scope: !12183, file: !11985, line: 524, column: 3)
!12188 = !DILocation(line: 530, column: 14, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12172, file: !11985, line: 530, column: 7)
!12190 = !DILocation(line: 530, column: 7, scope: !12172)
!12191 = !DILocation(line: 533, column: 5, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12189, file: !11985, line: 531, column: 3)
!12193 = !DILocation(line: 534, column: 5, scope: !12192)
!12194 = !DILocation(line: 534, column: 12, scope: !12192)
!12195 = !DILocation(line: 534, column: 33, scope: !12192)
!12196 = distinct !{!12196, !12193, !12197}
!12197 = !DILocation(line: 537, column: 5, scope: !12192)
!12198 = !DILocation(line: 540, column: 49, scope: !12192)
!12199 = !DILocation(line: 540, column: 5, scope: !12192)
!12200 = !DILocation(line: 541, column: 5, scope: !12192)
!12201 = !DILocation(line: 542, column: 5, scope: !12192)
!12202 = !DILocation(line: 542, column: 12, scope: !12192)
!12203 = !DILocation(line: 542, column: 37, scope: !12192)
!12204 = distinct !{!12204, !12201, !12205}
!12205 = !DILocation(line: 545, column: 5, scope: !12192)
!12206 = !DILocation(line: 548, column: 50, scope: !12192)
!12207 = !DILocation(line: 548, column: 5, scope: !12192)
!12208 = !DILocation(line: 549, column: 50, scope: !12192)
!12209 = !DILocation(line: 549, column: 5, scope: !12192)
!12210 = !DILocation(line: 550, column: 3, scope: !12192)
!12211 = !DILocation(line: 553, column: 7, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12172, file: !11985, line: 553, column: 7)
!12213 = !DILocation(line: 553, column: 23, scope: !12212)
!12214 = !DILocation(line: 553, column: 7, scope: !12172)
!12215 = !DILocation(line: 556, column: 14, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12212, file: !11985, line: 554, column: 3)
!12217 = !DILocation(line: 557, column: 3, scope: !12216)
!12218 = !DILocation(line: 560, column: 14, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12172, file: !11985, line: 560, column: 7)
!12220 = !DILocation(line: 560, column: 7, scope: !12172)
!12221 = !DILocation(line: 562, column: 5, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12219, file: !11985, line: 561, column: 3)
!12223 = !DILocation(line: 563, column: 3, scope: !12222)
!12224 = !DILocation(line: 565, column: 3, scope: !12172)
!12225 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8759, file: !8759, line: 1169, type: !3060, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12226 = !DILocation(line: 1171, column: 3, scope: !12225)
!12227 = !DILocation(line: 1172, column: 1, scope: !12225)
!12228 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8759, file: !8759, line: 1190, type: !7389, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12229 = !DILocation(line: 1192, column: 12, scope: !12228)
!12230 = !DILocation(line: 1192, column: 11, scope: !12228)
!12231 = !DILocation(line: 1192, column: 3, scope: !12228)
!12232 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8759, file: !8759, line: 944, type: !6070, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12233)
!12233 = !{!12234}
!12234 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12232, file: !8759, line: 944, type: !110)
!12235 = !DILocation(line: 0, scope: !12232)
!12236 = !DILocation(line: 946, column: 3, scope: !12232)
!12237 = !DILocation(line: 947, column: 1, scope: !12232)
!12238 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8759, file: !8759, line: 910, type: !6070, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12239)
!12239 = !{!12240}
!12240 = !DILocalVariable(name: "Source", arg: 1, scope: !12238, file: !8759, line: 910, type: !110)
!12241 = !DILocation(line: 0, scope: !12238)
!12242 = !DILocation(line: 912, column: 3, scope: !12238)
!12243 = !DILocation(line: 913, column: 1, scope: !12238)
!12244 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8759, file: !8759, line: 924, type: !7389, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12245 = !DILocation(line: 926, column: 21, scope: !12244)
!12246 = !DILocation(line: 926, column: 3, scope: !12244)
!12247 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8759, file: !8759, line: 960, type: !6070, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12248)
!12248 = !{!12249}
!12249 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12247, file: !8759, line: 960, type: !110)
!12250 = !DILocation(line: 0, scope: !12247)
!12251 = !DILocation(line: 962, column: 3, scope: !12247)
!12252 = !DILocation(line: 963, column: 1, scope: !12247)
!12253 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8759, file: !8759, line: 976, type: !6070, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12254)
!12254 = !{!12255}
!12255 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12253, file: !8759, line: 976, type: !110)
!12256 = !DILocation(line: 0, scope: !12253)
!12257 = !DILocation(line: 978, column: 3, scope: !12253)
!12258 = !DILocation(line: 979, column: 1, scope: !12253)
!12259 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11985, file: !11985, line: 385, type: !12260, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !12262)
!12260 = !DISubroutineType(types: !12261)
!12261 = !{!12030, !110, !110, !12085, !12091}
!12262 = !{!12263, !12264, !12265, !12266, !12267, !12268}
!12263 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12259, file: !11985, line: 385, type: !110)
!12264 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12259, file: !11985, line: 385, type: !110)
!12265 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12259, file: !11985, line: 386, type: !12085)
!12266 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12259, file: !11985, line: 386, type: !12091)
!12267 = !DILocalVariable(name: "status", scope: !12259, file: !11985, line: 388, type: !12030)
!12268 = !DILocalVariable(name: "pllfreq", scope: !12259, file: !11985, line: 389, type: !110)
!12269 = !DILocation(line: 0, scope: !12259)
!12270 = !DILocation(line: 396, column: 7, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12259, file: !11985, line: 396, column: 7)
!12272 = !DILocation(line: 396, column: 26, scope: !12271)
!12273 = !DILocation(line: 396, column: 7, scope: !12259)
!12274 = !DILocation(line: 400, column: 15, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12271, file: !11985, line: 397, column: 3)
!12276 = !DILocation(line: 403, column: 9, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12275, file: !11985, line: 403, column: 9)
!12278 = !DILocation(line: 403, column: 30, scope: !12277)
!12279 = !DILocation(line: 403, column: 9, scope: !12275)
!12280 = !DILocation(line: 406, column: 21, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !11985, line: 406, column: 11)
!12282 = distinct !DILexicalBlock(scope: !12277, file: !11985, line: 404, column: 5)
!12283 = !DILocation(line: 406, column: 11, scope: !12282)
!12284 = !DILocation(line: 408, column: 9, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12281, file: !11985, line: 407, column: 7)
!12286 = !DILocation(line: 409, column: 7, scope: !12285)
!12287 = !DILocation(line: 412, column: 9, scope: !12288)
!12288 = distinct !DILexicalBlock(scope: !12281, file: !11985, line: 411, column: 7)
!12289 = !DILocation(line: 416, column: 7, scope: !12282)
!12290 = !DILocation(line: 417, column: 7, scope: !12282)
!12291 = !DILocation(line: 417, column: 14, scope: !12282)
!12292 = !DILocation(line: 417, column: 35, scope: !12282)
!12293 = distinct !{!12293, !12290, !12294}
!12294 = !DILocation(line: 420, column: 7, scope: !12282)
!12295 = !DILocation(line: 424, column: 78, scope: !12275)
!12296 = !DILocation(line: 424, column: 107, scope: !12275)
!12297 = !DILocation(line: 424, column: 7, scope: !12275)
!12298 = !DILocation(line: 427, column: 14, scope: !12275)
!12299 = !DILocation(line: 428, column: 3, scope: !12275)
!12300 = !DILocation(line: 0, scope: !12271)
!12301 = !DILocation(line: 435, column: 3, scope: !12259)
!12302 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8759, file: !8759, line: 545, type: !7389, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12303 = !DILocation(line: 547, column: 12, scope: !12302)
!12304 = !DILocation(line: 547, column: 11, scope: !12302)
!12305 = !DILocation(line: 547, column: 3, scope: !12302)
!12306 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8759, file: !8759, line: 505, type: !3060, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12307 = !DILocation(line: 507, column: 3, scope: !12306)
!12308 = !DILocation(line: 508, column: 1, scope: !12306)
!12309 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8759, file: !8759, line: 515, type: !3060, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12310 = !DILocation(line: 517, column: 3, scope: !12309)
!12311 = !DILocation(line: 518, column: 1, scope: !12309)
!12312 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8759, file: !8759, line: 525, type: !3060, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2971, retainedNodes: !2043)
!12313 = !DILocation(line: 527, column: 3, scope: !12312)
!12314 = !DILocation(line: 528, column: 1, scope: !12312)
!12315 = distinct !DISubprogram(name: "z_device_state_init", scope: !12316, file: !12316, line: 23, type: !3060, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12317)
!12316 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12317 = !{!12318}
!12318 = !DILocalVariable(name: "dev", scope: !12315, file: !12316, line: 25, type: !12319)
!12319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12320, size: 32)
!12320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12321)
!12321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !349, line: 378, size: 192, elements: !12322)
!12322 = !{!12323, !12324, !12325, !12326, !12332, !12333}
!12323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12321, file: !349, line: 380, baseType: !279, size: 32)
!12324 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12321, file: !349, line: 382, baseType: !13, size: 32, offset: 32)
!12325 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12321, file: !349, line: 384, baseType: !13, size: 32, offset: 64)
!12326 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12321, file: !349, line: 386, baseType: !12327, size: 32, offset: 96)
!12327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12328, size: 32)
!12328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !349, line: 351, size: 16, elements: !12329)
!12329 = !{!12330, !12331}
!12330 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12328, file: !349, line: 359, baseType: !180, size: 8)
!12331 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12328, file: !349, line: 364, baseType: !360, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12332 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12321, file: !349, line: 388, baseType: !107, size: 32, offset: 128)
!12333 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12321, file: !349, line: 396, baseType: !363, size: 32, offset: 160)
!12334 = !DILocation(line: 0, scope: !12315)
!12335 = !DILocation(line: 31, column: 1, scope: !12315)
!12336 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12316, file: !12316, line: 33, type: !12337, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12339)
!12337 = !DISubroutineType(types: !12338)
!12338 = !{!12319, !279}
!12339 = !{!12340, !12341}
!12340 = !DILocalVariable(name: "name", arg: 1, scope: !12336, file: !12316, line: 33, type: !279)
!12341 = !DILocalVariable(name: "dev", scope: !12336, file: !12316, line: 35, type: !12319)
!12342 = !DILocation(line: 0, scope: !12336)
!12343 = !DILocation(line: 40, column: 12, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12336, file: !12316, line: 40, column: 6)
!12345 = !DILocation(line: 40, column: 21, scope: !12344)
!12346 = !DILocation(line: 40, column: 25, scope: !12344)
!12347 = !DILocation(line: 40, column: 33, scope: !12344)
!12348 = !DILocation(line: 40, column: 6, scope: !12336)
!12349 = !DILocation(line: 55, column: 2, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12336, file: !12316, line: 55, column: 2)
!12351 = !DILocation(line: 50, column: 7, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12353, file: !12316, line: 50, column: 7)
!12353 = distinct !DILexicalBlock(scope: !12354, file: !12316, line: 49, column: 57)
!12354 = distinct !DILexicalBlock(scope: !12355, file: !12316, line: 49, column: 2)
!12355 = distinct !DILexicalBlock(scope: !12336, file: !12316, line: 49, column: 2)
!12356 = !DILocation(line: 50, column: 30, scope: !12352)
!12357 = !DILocation(line: 50, column: 39, scope: !12352)
!12358 = !DILocation(line: 50, column: 44, scope: !12352)
!12359 = !DILocation(line: 50, column: 7, scope: !12353)
!12360 = !DILocation(line: 49, column: 53, scope: !12354)
!12361 = !DILocation(line: 49, column: 33, scope: !12354)
!12362 = !DILocation(line: 49, column: 2, scope: !12355)
!12363 = distinct !{!12363, !12362, !12364}
!12364 = !DILocation(line: 53, column: 2, scope: !12355)
!12365 = !DILocation(line: 56, column: 7, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12367, file: !12316, line: 56, column: 7)
!12367 = distinct !DILexicalBlock(scope: !12368, file: !12316, line: 55, column: 57)
!12368 = distinct !DILexicalBlock(scope: !12350, file: !12316, line: 55, column: 2)
!12369 = !DILocation(line: 56, column: 30, scope: !12366)
!12370 = !DILocation(line: 56, column: 52, scope: !12366)
!12371 = !DILocation(line: 56, column: 34, scope: !12366)
!12372 = !DILocation(line: 56, column: 58, scope: !12366)
!12373 = !DILocation(line: 56, column: 7, scope: !12367)
!12374 = !DILocation(line: 55, column: 53, scope: !12368)
!12375 = !DILocation(line: 55, column: 33, scope: !12368)
!12376 = distinct !{!12376, !12349, !12377}
!12377 = !DILocation(line: 59, column: 2, scope: !12350)
!12378 = !DILocation(line: 62, column: 1, scope: !12336)
!12379 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12316, file: !12316, line: 93, type: !12380, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12382)
!12380 = !DISubroutineType(types: !12381)
!12381 = !{!360, !12319}
!12382 = !{!12383}
!12383 = !DILocalVariable(name: "dev", arg: 1, scope: !12379, file: !12316, line: 93, type: !12319)
!12384 = !DILocation(line: 0, scope: !12379)
!12385 = !DILocation(line: 99, column: 10, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12379, file: !12316, line: 99, column: 6)
!12387 = !DILocation(line: 99, column: 6, scope: !12379)
!12388 = !DILocation(line: 103, column: 14, scope: !12379)
!12389 = !DILocation(line: 103, column: 21, scope: !12379)
!12390 = !DILocation(line: 103, column: 33, scope: !12379)
!12391 = !DILocation(line: 103, column: 49, scope: !12379)
!12392 = !DILocation(line: 103, column: 58, scope: !12379)
!12393 = !DILocation(line: 104, column: 1, scope: !12379)
!12394 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12316, file: !12316, line: 87, type: !12395, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12398)
!12395 = !DISubroutineType(types: !12396)
!12396 = !{!234, !12397}
!12397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12319, size: 32)
!12398 = !{!12399}
!12399 = !DILocalVariable(name: "devices", arg: 1, scope: !12394, file: !12316, line: 87, type: !12397)
!12400 = !DILocation(line: 0, scope: !12394)
!12401 = !DILocation(line: 89, column: 11, scope: !12394)
!12402 = !DILocation(line: 90, column: 2, scope: !12394)
!12403 = distinct !DISubprogram(name: "device_required_foreach", scope: !12316, file: !12316, line: 125, type: !12404, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12410)
!12404 = !DISubroutineType(types: !12405)
!12405 = !{!109, !12319, !12406, !107}
!12406 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !349, line: 471, baseType: !12407)
!12407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12408, size: 32)
!12408 = !DISubroutineType(types: !12409)
!12409 = !{!109, !12319, !107}
!12410 = !{!12411, !12412, !12413, !12414, !12415}
!12411 = !DILocalVariable(name: "dev", arg: 1, scope: !12403, file: !12316, line: 125, type: !12319)
!12412 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12403, file: !12316, line: 126, type: !12406)
!12413 = !DILocalVariable(name: "context", arg: 3, scope: !12403, file: !12316, line: 127, type: !107)
!12414 = !DILocalVariable(name: "handle_count", scope: !12403, file: !12316, line: 129, type: !234)
!12415 = !DILocalVariable(name: "handles", scope: !12403, file: !12316, line: 130, type: !363)
!12416 = !DILocation(line: 0, scope: !12403)
!12417 = !DILocation(line: 129, column: 2, scope: !12403)
!12418 = !DILocation(line: 129, column: 9, scope: !12403)
!12419 = !DILocation(line: 130, column: 35, scope: !12403)
!12420 = !DILocation(line: 132, column: 33, scope: !12403)
!12421 = !DILocation(line: 132, column: 9, scope: !12403)
!12422 = !DILocation(line: 133, column: 1, scope: !12403)
!12423 = !DILocation(line: 132, column: 2, scope: !12403)
!12424 = distinct !DISubprogram(name: "device_required_handles_get", scope: !349, file: !349, line: 493, type: !12425, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12427)
!12425 = !DISubroutineType(types: !12426)
!12426 = !{!363, !12319, !2559}
!12427 = !{!12428, !12429, !12430, !12431}
!12428 = !DILocalVariable(name: "dev", arg: 1, scope: !12424, file: !349, line: 493, type: !12319)
!12429 = !DILocalVariable(name: "count", arg: 2, scope: !12424, file: !349, line: 493, type: !2559)
!12430 = !DILocalVariable(name: "rv", scope: !12424, file: !349, line: 495, type: !363)
!12431 = !DILocalVariable(name: "i", scope: !12432, file: !349, line: 498, type: !234)
!12432 = distinct !DILexicalBlock(scope: !12433, file: !349, line: 497, column: 18)
!12433 = distinct !DILexicalBlock(scope: !12424, file: !349, line: 497, column: 6)
!12434 = !DILocation(line: 0, scope: !12424)
!12435 = !DILocation(line: 495, column: 35, scope: !12424)
!12436 = !DILocation(line: 497, column: 9, scope: !12433)
!12437 = !DILocation(line: 497, column: 6, scope: !12424)
!12438 = !DILocation(line: 0, scope: !12432)
!12439 = !DILocation(line: 500, column: 11, scope: !12432)
!12440 = !DILocation(line: 500, column: 40, scope: !12432)
!12441 = !DILocation(line: 502, column: 4, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12432, file: !349, line: 501, column: 40)
!12443 = distinct !{!12443, !12444, !12445}
!12444 = !DILocation(line: 500, column: 3, scope: !12432)
!12445 = !DILocation(line: 503, column: 3, scope: !12432)
!12446 = !DILocation(line: 504, column: 10, scope: !12432)
!12447 = !DILocation(line: 505, column: 2, scope: !12432)
!12448 = !DILocation(line: 507, column: 2, scope: !12424)
!12449 = distinct !DISubprogram(name: "device_visitor", scope: !12316, file: !12316, line: 106, type: !12450, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12452)
!12450 = !DISubroutineType(types: !12451)
!12451 = !{!109, !363, !234, !12406, !107}
!12452 = !{!12453, !12454, !12455, !12456, !12457, !12459, !12462, !12463}
!12453 = !DILocalVariable(name: "handles", arg: 1, scope: !12449, file: !12316, line: 106, type: !363)
!12454 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12449, file: !12316, line: 107, type: !234)
!12455 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12449, file: !12316, line: 108, type: !12406)
!12456 = !DILocalVariable(name: "context", arg: 4, scope: !12449, file: !12316, line: 109, type: !107)
!12457 = !DILocalVariable(name: "i", scope: !12458, file: !12316, line: 112, type: !234)
!12458 = distinct !DILexicalBlock(scope: !12449, file: !12316, line: 112, column: 2)
!12459 = !DILocalVariable(name: "dh", scope: !12460, file: !12316, line: 113, type: !365)
!12460 = distinct !DILexicalBlock(scope: !12461, file: !12316, line: 112, column: 44)
!12461 = distinct !DILexicalBlock(scope: !12458, file: !12316, line: 112, column: 2)
!12462 = !DILocalVariable(name: "rdev", scope: !12460, file: !12316, line: 114, type: !12319)
!12463 = !DILocalVariable(name: "rc", scope: !12460, file: !12316, line: 115, type: !109)
!12464 = !DILocation(line: 0, scope: !12449)
!12465 = !DILocation(line: 0, scope: !12458)
!12466 = !DILocation(line: 112, column: 23, scope: !12461)
!12467 = !DILocation(line: 112, column: 2, scope: !12458)
!12468 = distinct !{!12468, !12467, !12469}
!12469 = !DILocation(line: 120, column: 2, scope: !12458)
!12470 = !DILocation(line: 113, column: 24, scope: !12460)
!12471 = !DILocation(line: 0, scope: !12460)
!12472 = !DILocation(line: 114, column: 31, scope: !12460)
!12473 = !DILocation(line: 115, column: 12, scope: !12460)
!12474 = !DILocation(line: 117, column: 10, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12460, file: !12316, line: 117, column: 7)
!12476 = !DILocation(line: 112, column: 39, scope: !12461)
!12477 = !DILocation(line: 123, column: 1, scope: !12449)
!12478 = distinct !DISubprogram(name: "device_from_handle", scope: !349, file: !349, line: 439, type: !12479, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12481)
!12479 = !DISubroutineType(types: !12480)
!12480 = !{!12319, !365}
!12481 = !{!12482, !12483, !12484}
!12482 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12478, file: !349, line: 439, type: !365)
!12483 = !DILocalVariable(name: "dev", scope: !12478, file: !349, line: 443, type: !12319)
!12484 = !DILocalVariable(name: "numdev", scope: !12478, file: !349, line: 444, type: !234)
!12485 = !DILocation(line: 0, scope: !12478)
!12486 = !DILocation(line: 446, column: 7, scope: !12487)
!12487 = distinct !DILexicalBlock(scope: !12478, file: !349, line: 446, column: 6)
!12488 = !DILocation(line: 446, column: 18, scope: !12487)
!12489 = !DILocation(line: 446, column: 23, scope: !12487)
!12490 = !DILocation(line: 450, column: 2, scope: !12478)
!12491 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12316, file: !12316, line: 135, type: !12404, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12492)
!12492 = !{!12493, !12494, !12495, !12496, !12497}
!12493 = !DILocalVariable(name: "dev", arg: 1, scope: !12491, file: !12316, line: 135, type: !12319)
!12494 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12491, file: !12316, line: 136, type: !12406)
!12495 = !DILocalVariable(name: "context", arg: 3, scope: !12491, file: !12316, line: 137, type: !107)
!12496 = !DILocalVariable(name: "handle_count", scope: !12491, file: !12316, line: 139, type: !234)
!12497 = !DILocalVariable(name: "handles", scope: !12491, file: !12316, line: 140, type: !363)
!12498 = !DILocation(line: 0, scope: !12491)
!12499 = !DILocation(line: 139, column: 2, scope: !12491)
!12500 = !DILocation(line: 139, column: 9, scope: !12491)
!12501 = !DILocation(line: 140, column: 35, scope: !12491)
!12502 = !DILocation(line: 142, column: 33, scope: !12491)
!12503 = !DILocation(line: 142, column: 9, scope: !12491)
!12504 = !DILocation(line: 143, column: 1, scope: !12491)
!12505 = !DILocation(line: 142, column: 2, scope: !12491)
!12506 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !349, file: !349, line: 573, type: !12425, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3020, retainedNodes: !12507)
!12507 = !{!12508, !12509, !12510, !12511, !12512}
!12508 = !DILocalVariable(name: "dev", arg: 1, scope: !12506, file: !349, line: 573, type: !12319)
!12509 = !DILocalVariable(name: "count", arg: 2, scope: !12506, file: !349, line: 573, type: !2559)
!12510 = !DILocalVariable(name: "rv", scope: !12506, file: !349, line: 575, type: !363)
!12511 = !DILocalVariable(name: "region", scope: !12506, file: !349, line: 576, type: !234)
!12512 = !DILocalVariable(name: "i", scope: !12506, file: !349, line: 577, type: !234)
!12513 = !DILocation(line: 0, scope: !12506)
!12514 = !DILocation(line: 575, column: 35, scope: !12506)
!12515 = !DILocation(line: 579, column: 9, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12506, file: !349, line: 579, column: 6)
!12517 = !DILocation(line: 579, column: 6, scope: !12506)
!12518 = !DILocation(line: 582, column: 8, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12520, file: !349, line: 582, column: 8)
!12520 = distinct !DILexicalBlock(scope: !12521, file: !349, line: 581, column: 23)
!12521 = distinct !DILexicalBlock(scope: !12516, file: !349, line: 579, column: 18)
!12522 = !DILocation(line: 582, column: 12, scope: !12519)
!12523 = !DILocation(line: 585, column: 6, scope: !12520)
!12524 = !DILocation(line: 0, scope: !12521)
!12525 = !DILocation(line: 581, column: 17, scope: !12521)
!12526 = !DILocation(line: 581, column: 3, scope: !12521)
!12527 = !DILocation(line: 588, column: 10, scope: !12521)
!12528 = !DILocation(line: 588, column: 16, scope: !12521)
!12529 = !DILocation(line: 589, column: 4, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12521, file: !349, line: 588, column: 39)
!12531 = !DILocation(line: 588, column: 3, scope: !12521)
!12532 = distinct !{!12532, !12531, !12533}
!12533 = !DILocation(line: 590, column: 3, scope: !12521)
!12534 = !DILocation(line: 591, column: 10, scope: !12521)
!12535 = !DILocation(line: 592, column: 2, scope: !12521)
!12536 = !DILocation(line: 575, column: 25, scope: !12506)
!12537 = !DILocation(line: 594, column: 2, scope: !12506)
!12538 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1834, file: !1834, line: 49, type: !12539, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1831, retainedNodes: !2043)
!12539 = !DISubroutineType(types: !12540)
!12540 = !{!281}
!12541 = !DILocation(line: 51, column: 10, scope: !12538)
!12542 = !DILocation(line: 51, column: 20, scope: !12538)
!12543 = !DILocation(line: 51, column: 2, scope: !12538)
!12544 = distinct !DISubprogram(name: "coredump", scope: !3027, file: !3027, line: 209, type: !12545, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12694)
!12545 = !DISubroutineType(types: !12546)
!12546 = !{null, !32, !12547, !12591}
!12547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12548, size: 32)
!12548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12549)
!12549 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2689, line: 141, baseType: !12550)
!12550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2689, line: 97, size: 256, elements: !12551)
!12551 = !{!12552}
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12550, file: !2689, line: 107, baseType: !12553, size: 256)
!12553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2689, line: 98, size: 256, elements: !12554)
!12554 = !{!12555, !12560, !12565, !12570, !12575, !12580, !12585, !12590}
!12555 = !DIDerivedType(tag: DW_TAG_member, scope: !12553, file: !2689, line: 99, baseType: !12556, size: 32)
!12556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12553, file: !2689, line: 99, size: 32, elements: !12557)
!12557 = !{!12558, !12559}
!12558 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12556, file: !2689, line: 99, baseType: !110, size: 32)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12556, file: !2689, line: 99, baseType: !110, size: 32)
!12560 = !DIDerivedType(tag: DW_TAG_member, scope: !12553, file: !2689, line: 100, baseType: !12561, size: 32, offset: 32)
!12561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12553, file: !2689, line: 100, size: 32, elements: !12562)
!12562 = !{!12563, !12564}
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12561, file: !2689, line: 100, baseType: !110, size: 32)
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12561, file: !2689, line: 100, baseType: !110, size: 32)
!12565 = !DIDerivedType(tag: DW_TAG_member, scope: !12553, file: !2689, line: 101, baseType: !12566, size: 32, offset: 64)
!12566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12553, file: !2689, line: 101, size: 32, elements: !12567)
!12567 = !{!12568, !12569}
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12566, file: !2689, line: 101, baseType: !110, size: 32)
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12566, file: !2689, line: 101, baseType: !110, size: 32)
!12570 = !DIDerivedType(tag: DW_TAG_member, scope: !12553, file: !2689, line: 102, baseType: !12571, size: 32, offset: 96)
!12571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12553, file: !2689, line: 102, size: 32, elements: !12572)
!12572 = !{!12573, !12574}
!12573 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12571, file: !2689, line: 102, baseType: !110, size: 32)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12571, file: !2689, line: 102, baseType: !110, size: 32)
!12575 = !DIDerivedType(tag: DW_TAG_member, scope: !12553, file: !2689, line: 103, baseType: !12576, size: 32, offset: 128)
!12576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12553, file: !2689, line: 103, size: 32, elements: !12577)
!12577 = !{!12578, !12579}
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12576, file: !2689, line: 103, baseType: !110, size: 32)
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12576, file: !2689, line: 103, baseType: !110, size: 32)
!12580 = !DIDerivedType(tag: DW_TAG_member, scope: !12553, file: !2689, line: 104, baseType: !12581, size: 32, offset: 160)
!12581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12553, file: !2689, line: 104, size: 32, elements: !12582)
!12582 = !{!12583, !12584}
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12581, file: !2689, line: 104, baseType: !110, size: 32)
!12584 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12581, file: !2689, line: 104, baseType: !110, size: 32)
!12585 = !DIDerivedType(tag: DW_TAG_member, scope: !12553, file: !2689, line: 105, baseType: !12586, size: 32, offset: 192)
!12586 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12553, file: !2689, line: 105, size: 32, elements: !12587)
!12587 = !{!12588, !12589}
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12586, file: !2689, line: 105, baseType: !110, size: 32)
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12586, file: !2689, line: 105, baseType: !110, size: 32)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12553, file: !2689, line: 106, baseType: !110, size: 32, offset: 224)
!12591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12592, size: 32)
!12592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !12593)
!12593 = !{!12594, !12652, !12664, !12665, !12666, !12667, !12668, !12674, !12689}
!12594 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12592, file: !158, line: 247, baseType: !12595, size: 384)
!12595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !12596)
!12596 = !{!12597, !12621, !12628, !12629, !12630, !12639, !12640, !12641}
!12597 = !DIDerivedType(tag: DW_TAG_member, scope: !12595, file: !158, line: 60, baseType: !12598, size: 64)
!12598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12595, file: !158, line: 60, size: 64, elements: !12599)
!12599 = !{!12600, !12615}
!12600 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12598, file: !158, line: 61, baseType: !12601, size: 64)
!12601 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !12602)
!12602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !12603)
!12603 = !{!12604, !12610}
!12604 = !DIDerivedType(tag: DW_TAG_member, scope: !12602, file: !127, line: 38, baseType: !12605, size: 32)
!12605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12602, file: !127, line: 38, size: 32, elements: !12606)
!12606 = !{!12607, !12609}
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12605, file: !127, line: 39, baseType: !12608, size: 32)
!12608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12602, size: 32)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12605, file: !127, line: 40, baseType: !12608, size: 32)
!12610 = !DIDerivedType(tag: DW_TAG_member, scope: !12602, file: !127, line: 42, baseType: !12611, size: 32, offset: 32)
!12611 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12602, file: !127, line: 42, size: 32, elements: !12612)
!12612 = !{!12613, !12614}
!12613 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12611, file: !127, line: 43, baseType: !12608, size: 32)
!12614 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12611, file: !127, line: 44, baseType: !12608, size: 32)
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12598, file: !158, line: 62, baseType: !12616, size: 64)
!12616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !12617)
!12617 = !{!12618}
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12616, file: !170, line: 50, baseType: !12619, size: 64)
!12619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12620, size: 64, elements: !175)
!12620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12616, size: 32)
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12595, file: !158, line: 68, baseType: !12622, size: 32, offset: 64)
!12622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12623, size: 32)
!12623 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12624)
!12624 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12625)
!12625 = !{!12626}
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12624, file: !122, line: 232, baseType: !12627, size: 64)
!12627 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !12602)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12595, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!12629 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12595, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!12630 = !DIDerivedType(tag: DW_TAG_member, scope: !12595, file: !158, line: 90, baseType: !12631, size: 16, offset: 112)
!12631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12595, file: !158, line: 90, size: 16, elements: !12632)
!12632 = !{!12633, !12638}
!12633 = !DIDerivedType(tag: DW_TAG_member, scope: !12631, file: !158, line: 91, baseType: !12634, size: 16)
!12634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12631, file: !158, line: 91, size: 16, elements: !12635)
!12635 = !{!12636, !12637}
!12636 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12634, file: !158, line: 96, baseType: !190, size: 8)
!12637 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12634, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12631, file: !158, line: 100, baseType: !194, size: 16)
!12639 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12595, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!12640 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12595, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!12641 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12595, file: !158, line: 131, baseType: !12642, size: 192, offset: 192)
!12642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12643)
!12643 = !{!12644, !12645, !12651}
!12644 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12642, file: !122, line: 245, baseType: !12601, size: 64)
!12645 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12642, file: !122, line: 246, baseType: !12646, size: 32, offset: 64)
!12646 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12647)
!12647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12648, size: 32)
!12648 = !DISubroutineType(types: !12649)
!12649 = !{null, !12650}
!12650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12642, size: 32)
!12651 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12642, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!12652 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12592, file: !158, line: 250, baseType: !12653, size: 288, offset: 384)
!12653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !12654)
!12654 = !{!12655, !12656, !12657, !12658, !12659, !12660, !12661, !12662, !12663}
!12655 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12653, file: !211, line: 26, baseType: !110, size: 32)
!12656 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12653, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!12657 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12653, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!12658 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12653, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!12659 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12653, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!12660 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12653, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!12661 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12653, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!12662 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12653, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!12663 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12653, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!12664 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12592, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!12665 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12592, file: !158, line: 256, baseType: !12623, size: 64, offset: 704)
!12666 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12592, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!12667 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12592, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!12668 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12592, file: !158, line: 300, baseType: !12669, size: 96, offset: 1056)
!12669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !12670)
!12670 = !{!12671, !12672, !12673}
!12671 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12669, file: !158, line: 153, baseType: !22, size: 32)
!12672 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12669, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!12673 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12669, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!12674 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12592, file: !158, line: 325, baseType: !12675, size: 32, offset: 1152)
!12675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12676, size: 32)
!12676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !12677)
!12677 = !{!12678, !12684, !12685}
!12678 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12676, file: !118, line: 5074, baseType: !12679, size: 96)
!12679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !12680)
!12680 = !{!12681, !12682, !12683}
!12681 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12679, file: !243, line: 57, baseType: !246, size: 32)
!12682 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12679, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!12683 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12679, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!12684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12676, file: !118, line: 5075, baseType: !12623, size: 64, offset: 96)
!12685 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12676, file: !118, line: 5076, baseType: !12686, size: 32, offset: 160)
!12686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !253, line: 43, size: 32, elements: !12687)
!12687 = !{!12688}
!12688 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12686, file: !253, line: 52, baseType: !22, size: 32)
!12689 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12592, file: !158, line: 343, baseType: !12690, size: 64, offset: 1184)
!12690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !12691)
!12691 = !{!12692, !12693}
!12692 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12690, file: !211, line: 63, baseType: !110, size: 32)
!12693 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12690, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!12694 = !{!12695, !12696, !12697}
!12695 = !DILocalVariable(name: "reason", arg: 1, scope: !12544, file: !3027, line: 209, type: !32)
!12696 = !DILocalVariable(name: "esf", arg: 2, scope: !12544, file: !3027, line: 209, type: !12547)
!12697 = !DILocalVariable(name: "thread", arg: 3, scope: !12544, file: !3027, line: 210, type: !12591)
!12698 = !DILocation(line: 0, scope: !12544)
!12699 = !DILocation(line: 212, column: 1, scope: !12544)
!12700 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3027, file: !3027, line: 214, type: !12701, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{null, !22, !22}
!12703 = !{!12704, !12705}
!12704 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12700, file: !3027, line: 214, type: !22)
!12705 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12700, file: !3027, line: 214, type: !22)
!12706 = !DILocation(line: 0, scope: !12700)
!12707 = !DILocation(line: 216, column: 1, scope: !12700)
!12708 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3027, file: !3027, line: 218, type: !12709, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12711)
!12709 = !DISubroutineType(types: !12710)
!12710 = !{null, !286, !234}
!12711 = !{!12712, !12713}
!12712 = !DILocalVariable(name: "buf", arg: 1, scope: !12708, file: !3027, line: 218, type: !286)
!12713 = !DILocalVariable(name: "buflen", arg: 2, scope: !12708, file: !3027, line: 218, type: !234)
!12714 = !DILocation(line: 0, scope: !12708)
!12715 = !DILocation(line: 220, column: 1, scope: !12708)
!12716 = distinct !DISubprogram(name: "coredump_query", scope: !3027, file: !3027, line: 222, type: !12717, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12719)
!12717 = !DISubroutineType(types: !12718)
!12718 = !{!109, !3026, !107}
!12719 = !{!12720, !12721}
!12720 = !DILocalVariable(name: "query_id", arg: 1, scope: !12716, file: !3027, line: 222, type: !3026)
!12721 = !DILocalVariable(name: "arg", arg: 2, scope: !12716, file: !3027, line: 222, type: !107)
!12722 = !DILocation(line: 0, scope: !12716)
!12723 = !DILocation(line: 224, column: 2, scope: !12716)
!12724 = distinct !DISubprogram(name: "coredump_cmd", scope: !3027, file: !3027, line: 227, type: !12725, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12727)
!12725 = !DISubroutineType(types: !12726)
!12726 = !{!109, !3033, !107}
!12727 = !{!12728, !12729}
!12728 = !DILocalVariable(name: "query_id", arg: 1, scope: !12724, file: !3027, line: 227, type: !3033)
!12729 = !DILocalVariable(name: "arg", arg: 2, scope: !12724, file: !3027, line: 227, type: !107)
!12730 = !DILocation(line: 0, scope: !12724)
!12731 = !DILocation(line: 229, column: 2, scope: !12724)
!12732 = distinct !DISubprogram(name: "arch_system_halt", scope: !12733, file: !12733, line: 23, type: !6057, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12734)
!12733 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12734 = !{!12735}
!12735 = !DILocalVariable(name: "reason", arg: 1, scope: !12732, file: !12733, line: 23, type: !32)
!12736 = !DILocation(line: 0, scope: !12732)
!12737 = !DILocation(line: 55, column: 2, scope: !12738, inlinedAt: !12742)
!12738 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6046, file: !6046, line: 42, type: !6047, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12739)
!12739 = !{!12740, !12741}
!12740 = !DILocalVariable(name: "key", scope: !12738, file: !6046, line: 44, type: !32)
!12741 = !DILocalVariable(name: "tmp", scope: !12738, file: !6046, line: 53, type: !32)
!12742 = distinct !DILocation(line: 31, column: 8, scope: !12732)
!12743 = !{i64 1654311}
!12744 = !DILocation(line: 0, scope: !12738, inlinedAt: !12742)
!12745 = !DILocation(line: 32, column: 2, scope: !12732)
!12746 = !DILocation(line: 32, column: 2, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12748, file: !12733, line: 32, column: 2)
!12748 = distinct !DILexicalBlock(scope: !12732, file: !12733, line: 32, column: 2)
!12749 = distinct !{!12749, !12750, !12751}
!12750 = !DILocation(line: 32, column: 2, scope: !12748)
!12751 = !DILocation(line: 34, column: 2, scope: !12748)
!12752 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12733, file: !12733, line: 39, type: !12753, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12755)
!12753 = !DISubroutineType(types: !12754)
!12754 = !{null, !32, !12547}
!12755 = !{!12756, !12757}
!12756 = !DILocalVariable(name: "reason", arg: 1, scope: !12752, file: !12733, line: 39, type: !32)
!12757 = !DILocalVariable(name: "esf", arg: 2, scope: !12752, file: !12733, line: 40, type: !12547)
!12758 = !DILocation(line: 0, scope: !12752)
!12759 = !DILocation(line: 45, column: 2, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !12733, line: 45, column: 2)
!12761 = distinct !DILexicalBlock(scope: !12762, file: !12733, line: 45, column: 2)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !12733, line: 45, column: 2)
!12763 = distinct !DILexicalBlock(scope: !12752, file: !12733, line: 45, column: 2)
!12764 = !DILocation(line: 46, column: 2, scope: !12752)
!12765 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12733, file: !12733, line: 81, type: !6057, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12766)
!12766 = !{!12767}
!12767 = !DILocalVariable(name: "reason", arg: 1, scope: !12765, file: !12733, line: 81, type: !32)
!12768 = !DILocation(line: 0, scope: !12765)
!12769 = !DILocation(line: 83, column: 2, scope: !12765)
!12770 = distinct !DISubprogram(name: "z_fatal_error", scope: !12733, file: !12733, line: 96, type: !12753, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12771)
!12771 = !{!12772, !12773, !12774, !12775}
!12772 = !DILocalVariable(name: "reason", arg: 1, scope: !12770, file: !12733, line: 96, type: !32)
!12773 = !DILocalVariable(name: "esf", arg: 2, scope: !12770, file: !12733, line: 96, type: !12547)
!12774 = !DILocalVariable(name: "key", scope: !12770, file: !12733, line: 102, type: !32)
!12775 = !DILocalVariable(name: "thread", scope: !12770, file: !12733, line: 103, type: !12591)
!12776 = !DILocation(line: 0, scope: !12770)
!12777 = !DILocation(line: 55, column: 2, scope: !12738, inlinedAt: !12778)
!12778 = distinct !DILocation(line: 102, column: 21, scope: !12770)
!12779 = !DILocation(line: 0, scope: !12738, inlinedAt: !12778)
!12780 = !DILocation(line: 104, column: 4, scope: !12770)
!12781 = !DILocation(line: 109, column: 2, scope: !12782)
!12782 = distinct !DILexicalBlock(scope: !12783, file: !12733, line: 109, column: 2)
!12783 = distinct !DILexicalBlock(scope: !12784, file: !12733, line: 109, column: 2)
!12784 = distinct !DILexicalBlock(scope: !12785, file: !12733, line: 109, column: 2)
!12785 = distinct !DILexicalBlock(scope: !12770, file: !12733, line: 109, column: 2)
!12786 = !DILocation(line: 119, column: 11, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12770, file: !12733, line: 119, column: 6)
!12788 = !DILocation(line: 119, column: 20, scope: !12787)
!12789 = !DILocalVariable(name: "esf", arg: 1, scope: !12790, file: !7395, line: 71, type: !12547)
!12790 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7395, file: !7395, line: 71, type: !12791, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12793)
!12791 = !DISubroutineType(types: !12792)
!12792 = !{!360, !12547}
!12793 = !{!12789}
!12794 = !DILocation(line: 0, scope: !12790, inlinedAt: !12795)
!12795 = distinct !DILocation(line: 119, column: 23, scope: !12787)
!12796 = !DILocation(line: 73, column: 21, scope: !12790, inlinedAt: !12795)
!12797 = !DILocation(line: 73, column: 26, scope: !12790, inlinedAt: !12795)
!12798 = !DILocation(line: 73, column: 9, scope: !12790, inlinedAt: !12795)
!12799 = !DILocation(line: 119, column: 6, scope: !12770)
!12800 = !DILocation(line: 120, column: 3, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12802, file: !12733, line: 120, column: 3)
!12802 = distinct !DILexicalBlock(scope: !12803, file: !12733, line: 120, column: 3)
!12803 = distinct !DILexicalBlock(scope: !12804, file: !12733, line: 120, column: 3)
!12804 = distinct !DILexicalBlock(scope: !12805, file: !12733, line: 120, column: 3)
!12805 = distinct !DILexicalBlock(scope: !12787, file: !12733, line: 119, column: 57)
!12806 = !DILocation(line: 121, column: 2, scope: !12805)
!12807 = !DILocation(line: 124, column: 2, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !12733, line: 124, column: 2)
!12809 = distinct !DILexicalBlock(scope: !12810, file: !12733, line: 124, column: 2)
!12810 = distinct !DILexicalBlock(scope: !12811, file: !12733, line: 124, column: 2)
!12811 = distinct !DILexicalBlock(scope: !12770, file: !12733, line: 124, column: 2)
!12812 = !DILocation(line: 131, column: 2, scope: !12770)
!12813 = !DILocation(line: 0, scope: !12790, inlinedAt: !12814)
!12814 = distinct !DILocation(line: 163, column: 24, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !12816, file: !12733, line: 163, column: 7)
!12816 = distinct !DILexicalBlock(scope: !12817, file: !12733, line: 160, column: 9)
!12817 = distinct !DILexicalBlock(scope: !12770, file: !12733, line: 146, column: 6)
!12818 = !DILocation(line: 73, column: 21, scope: !12790, inlinedAt: !12814)
!12819 = !DILocation(line: 73, column: 26, scope: !12790, inlinedAt: !12814)
!12820 = !DILocation(line: 73, column: 9, scope: !12790, inlinedAt: !12814)
!12821 = !DILocation(line: 163, column: 7, scope: !12816)
!12822 = !DILocalVariable(name: "key", arg: 1, scope: !12823, file: !6046, line: 84, type: !32)
!12823 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12824)
!12824 = !{!12822}
!12825 = !DILocation(line: 0, scope: !12823, inlinedAt: !12826)
!12826 = distinct !DILocation(line: 171, column: 4, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12815, file: !12733, line: 163, column: 58)
!12828 = !DILocation(line: 95, column: 2, scope: !12823, inlinedAt: !12826)
!12829 = !{i64 1655128}
!12830 = !DILocation(line: 172, column: 4, scope: !12827)
!12831 = !DILocation(line: 163, column: 21, scope: !12815)
!12832 = !DILocation(line: 178, column: 15, scope: !12833)
!12833 = distinct !DILexicalBlock(scope: !12834, file: !12733, line: 178, column: 8)
!12834 = distinct !DILexicalBlock(scope: !12815, file: !12733, line: 174, column: 10)
!12835 = !DILocation(line: 0, scope: !12823, inlinedAt: !12836)
!12836 = distinct !DILocation(line: 179, column: 5, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12833, file: !12733, line: 178, column: 38)
!12838 = !DILocation(line: 0, scope: !12823, inlinedAt: !12839)
!12839 = distinct !DILocation(line: 186, column: 2, scope: !12770)
!12840 = !DILocation(line: 178, column: 8, scope: !12834)
!12841 = !DILocation(line: 189, column: 3, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12843, file: !12733, line: 188, column: 41)
!12843 = distinct !DILexicalBlock(scope: !12770, file: !12733, line: 188, column: 6)
!12844 = !DILocation(line: 191, column: 1, scope: !12770)
!12845 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !12846, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !2043)
!12846 = !DISubroutineType(types: !12847)
!12847 = !{!12848}
!12848 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !12591)
!12849 = !DILocation(line: 535, column: 9, scope: !12845)
!12850 = !DILocation(line: 535, column: 2, scope: !12845)
!12851 = distinct !DISubprogram(name: "reason_to_str", scope: !12733, file: !12733, line: 62, type: !12852, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12854)
!12852 = !DISubroutineType(types: !12853)
!12853 = !{!279, !32}
!12854 = !{!12855}
!12855 = !DILocalVariable(name: "reason", arg: 1, scope: !12851, file: !12733, line: 62, type: !32)
!12856 = !DILocation(line: 0, scope: !12851)
!12857 = !DILocation(line: 64, column: 2, scope: !12851)
!12858 = !DILocation(line: 0, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12851, file: !12733, line: 64, column: 18)
!12860 = !DILocation(line: 78, column: 1, scope: !12851)
!12861 = distinct !DISubprogram(name: "thread_name_get", scope: !12733, file: !12733, line: 51, type: !12862, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12864)
!12862 = !DISubroutineType(types: !12863)
!12863 = !{!279, !12591}
!12864 = !{!12865, !12866}
!12865 = !DILocalVariable(name: "thread", arg: 1, scope: !12861, file: !12733, line: 51, type: !12591)
!12866 = !DILocalVariable(name: "thread_name", scope: !12861, file: !12733, line: 53, type: !279)
!12867 = !DILocation(line: 0, scope: !12861)
!12868 = !DILocation(line: 53, column: 36, scope: !12861)
!12869 = !DILocation(line: 53, column: 28, scope: !12861)
!12870 = !DILocation(line: 53, column: 47, scope: !12861)
!12871 = !DILocation(line: 55, column: 19, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12861, file: !12733, line: 55, column: 6)
!12873 = !DILocation(line: 55, column: 28, scope: !12872)
!12874 = !DILocation(line: 55, column: 32, scope: !12872)
!12875 = !DILocation(line: 55, column: 47, scope: !12872)
!12876 = !DILocation(line: 55, column: 6, scope: !12861)
!12877 = !DILocation(line: 57, column: 2, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12872, file: !12733, line: 55, column: 57)
!12879 = !DILocation(line: 59, column: 2, scope: !12861)
!12880 = distinct !DISubprogram(name: "k_thread_abort", scope: !3206, file: !3206, line: 188, type: !12881, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !12883)
!12881 = !DISubroutineType(types: !12882)
!12882 = !{null, !12848}
!12883 = !{!12884}
!12884 = !DILocalVariable(name: "thread", arg: 1, scope: !12880, file: !3206, line: 188, type: !12848)
!12885 = !DILocation(line: 0, scope: !12880)
!12886 = !DILocation(line: 197, column: 2, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12880, file: !3206, line: 197, column: 2)
!12888 = !{i64 2152224562}
!12889 = !DILocation(line: 198, column: 2, scope: !12880)
!12890 = !DILocation(line: 199, column: 1, scope: !12880)
!12891 = distinct !DISubprogram(name: "z_current_get", scope: !3206, file: !3206, line: 173, type: !12846, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3023, retainedNodes: !2043)
!12892 = !DILocation(line: 180, column: 2, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12891, file: !3206, line: 180, column: 2)
!12894 = !{i64 2152224494}
!12895 = !DILocation(line: 181, column: 9, scope: !12891)
!12896 = !DILocation(line: 181, column: 2, scope: !12891)
!12897 = distinct !DISubprogram(name: "z_early_memset", scope: !1842, file: !1842, line: 108, type: !12898, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12900)
!12898 = !DISubroutineType(types: !12899)
!12899 = !{null, !107, !109, !234}
!12900 = !{!12901, !12902, !12903}
!12901 = !DILocalVariable(name: "dst", arg: 1, scope: !12897, file: !1842, line: 108, type: !107)
!12902 = !DILocalVariable(name: "c", arg: 2, scope: !12897, file: !1842, line: 108, type: !109)
!12903 = !DILocalVariable(name: "n", arg: 3, scope: !12897, file: !1842, line: 108, type: !234)
!12904 = !DILocation(line: 0, scope: !12897)
!12905 = !DILocation(line: 110, column: 9, scope: !12897)
!12906 = !DILocation(line: 111, column: 1, scope: !12897)
!12907 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1842, file: !1842, line: 121, type: !12908, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12910)
!12908 = !DISubroutineType(types: !12909)
!12909 = !{null, !107, !13, !234}
!12910 = !{!12911, !12912, !12913}
!12911 = !DILocalVariable(name: "dst", arg: 1, scope: !12907, file: !1842, line: 121, type: !107)
!12912 = !DILocalVariable(name: "src", arg: 2, scope: !12907, file: !1842, line: 121, type: !13)
!12913 = !DILocalVariable(name: "n", arg: 3, scope: !12907, file: !1842, line: 121, type: !234)
!12914 = !DILocation(line: 0, scope: !12907)
!12915 = !DILocation(line: 123, column: 9, scope: !12907)
!12916 = !DILocation(line: 124, column: 1, scope: !12907)
!12917 = distinct !DISubprogram(name: "z_bss_zero", scope: !1842, file: !1842, line: 132, type: !3060, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !2043)
!12918 = !DILocation(line: 143, column: 2, scope: !12917)
!12919 = !DILocation(line: 168, column: 1, scope: !12917)
!12920 = distinct !DISubprogram(name: "z_init_cpu", scope: !1842, file: !1842, line: 372, type: !8431, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12921)
!12921 = !{!12922}
!12922 = !DILocalVariable(name: "id", arg: 1, scope: !12920, file: !1842, line: 372, type: !109)
!12923 = !DILocation(line: 0, scope: !12920)
!12924 = !DILocation(line: 374, column: 2, scope: !12920)
!12925 = !DILocation(line: 375, column: 34, scope: !12920)
!12926 = !DILocation(line: 375, column: 19, scope: !12920)
!12927 = !DILocation(line: 375, column: 31, scope: !12920)
!12928 = !DILocation(line: 376, column: 24, scope: !12920)
!12929 = !DILocation(line: 376, column: 19, scope: !12920)
!12930 = !DILocation(line: 376, column: 22, scope: !12920)
!12931 = !DILocation(line: 378, column: 26, scope: !12920)
!12932 = !DILocation(line: 378, column: 4, scope: !12920)
!12933 = !DILocation(line: 378, column: 50, scope: !12920)
!12934 = !DILocation(line: 377, column: 19, scope: !12920)
!12935 = !DILocation(line: 377, column: 29, scope: !12920)
!12936 = !DILocation(line: 384, column: 1, scope: !12920)
!12937 = distinct !DISubprogram(name: "init_idle_thread", scope: !1842, file: !1842, line: 343, type: !8431, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12938)
!12938 = !{!12939, !12940, !12941, !12944}
!12939 = !DILocalVariable(name: "i", arg: 1, scope: !12937, file: !1842, line: 343, type: !109)
!12940 = !DILocalVariable(name: "thread", scope: !12937, file: !1842, line: 345, type: !1934)
!12941 = !DILocalVariable(name: "stack", scope: !12937, file: !1842, line: 346, type: !12942)
!12942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12943, size: 32)
!12943 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3326, line: 44, baseType: !2052)
!12944 = !DILocalVariable(name: "tname", scope: !12937, file: !1842, line: 354, type: !285)
!12945 = !DILocation(line: 0, scope: !12937)
!12946 = !DILocation(line: 345, column: 29, scope: !12937)
!12947 = !DILocation(line: 346, column: 28, scope: !12937)
!12948 = !DILocation(line: 362, column: 37, scope: !12937)
!12949 = !DILocation(line: 362, column: 36, scope: !12937)
!12950 = !DILocation(line: 361, column: 2, scope: !12937)
!12951 = !DILocation(line: 365, column: 2, scope: !12937)
!12952 = !DILocation(line: 370, column: 1, scope: !12937)
!12953 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !12954, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12956)
!12954 = !DISubroutineType(types: !12955)
!12955 = !{!285, !12942}
!12956 = !{!12957}
!12957 = !DILocalVariable(name: "sym", arg: 1, scope: !12953, file: !147, line: 331, type: !12942)
!12958 = !DILocation(line: 0, scope: !12953)
!12959 = !DILocation(line: 333, column: 21, scope: !12953)
!12960 = !DILocation(line: 333, column: 2, scope: !12953)
!12961 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12962, file: !12962, line: 155, type: !12963, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12965)
!12962 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12963 = !DISubroutineType(types: !12964)
!12964 = !{null, !1934}
!12965 = !{!12966}
!12966 = !DILocalVariable(name: "thread", arg: 1, scope: !12961, file: !12962, line: 155, type: !1934)
!12967 = !DILocation(line: 0, scope: !12961)
!12968 = !DILocation(line: 157, column: 15, scope: !12961)
!12969 = !DILocation(line: 157, column: 28, scope: !12961)
!12970 = !DILocation(line: 158, column: 1, scope: !12961)
!12971 = distinct !DISubprogram(name: "z_cstart", scope: !1842, file: !1842, line: 501, type: !3060, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12972)
!12972 = !{!12973}
!12973 = !DILocalVariable(name: "dummy_thread", scope: !12971, file: !1842, line: 518, type: !1935)
!12974 = !DILocation(line: 507, column: 2, scope: !12971)
!12975 = !DILocation(line: 43, column: 14, scope: !12976, inlinedAt: !12980)
!12976 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12977, file: !12977, line: 40, type: !3060, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12978)
!12977 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12978 = !{!12979}
!12979 = !DILocalVariable(name: "msp", scope: !12976, file: !12977, line: 42, type: !110)
!12980 = distinct !DILocation(line: 44, column: 2, scope: !12981, inlinedAt: !12983)
!12981 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12982, file: !12982, line: 42, type: !3060, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !2043)
!12982 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12983 = distinct !DILocation(line: 510, column: 2, scope: !12971)
!12984 = !DILocation(line: 43, column: 3, scope: !12976, inlinedAt: !12980)
!12985 = !DILocation(line: 43, column: 60, scope: !12976, inlinedAt: !12980)
!12986 = !DILocation(line: 0, scope: !12976, inlinedAt: !12980)
!12987 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12988, file: !6384, line: 1153, type: !110)
!12988 = distinct !DISubprogram(name: "__set_MSP", scope: !6384, file: !6384, line: 1153, type: !6070, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !12989)
!12989 = !{!12987}
!12990 = !DILocation(line: 0, scope: !12988, inlinedAt: !12991)
!12991 = distinct !DILocation(line: 46, column: 2, scope: !12976, inlinedAt: !12980)
!12992 = !DILocation(line: 1155, column: 3, scope: !12988, inlinedAt: !12991)
!12993 = !{i64 2467751}
!12994 = !DILocation(line: 62, column: 11, scope: !12976, inlinedAt: !12980)
!12995 = !DILocation(line: 102, column: 2, scope: !12996, inlinedAt: !12997)
!12996 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7395, file: !7395, line: 97, type: !3060, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !2043)
!12997 = distinct !DILocation(line: 45, column: 2, scope: !12981, inlinedAt: !12983)
!12998 = !DILocation(line: 108, column: 2, scope: !12996, inlinedAt: !12997)
!12999 = !DILocation(line: 112, column: 2, scope: !12996, inlinedAt: !12997)
!13000 = !DILocation(line: 113, column: 2, scope: !12996, inlinedAt: !12997)
!13001 = !DILocation(line: 114, column: 2, scope: !12996, inlinedAt: !12997)
!13002 = !DILocation(line: 116, column: 2, scope: !12996, inlinedAt: !12997)
!13003 = !DILocation(line: 123, column: 13, scope: !12996, inlinedAt: !12997)
!13004 = !DILocation(line: 46, column: 2, scope: !12981, inlinedAt: !12983)
!13005 = !DILocation(line: 47, column: 2, scope: !12981, inlinedAt: !12983)
!13006 = !DILocation(line: 174, column: 12, scope: !13007, inlinedAt: !13008)
!13007 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7395, file: !7395, line: 169, type: !3060, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !2043)
!13008 = distinct !DILocation(line: 48, column: 2, scope: !12981, inlinedAt: !12983)
!13009 = !DILocation(line: 179, column: 12, scope: !13007, inlinedAt: !13008)
!13010 = !DILocation(line: 50, column: 2, scope: !12981, inlinedAt: !12983)
!13011 = !DILocation(line: 57, column: 2, scope: !12981, inlinedAt: !12983)
!13012 = !DILocation(line: 518, column: 2, scope: !12971)
!13013 = !DILocation(line: 518, column: 18, scope: !12971)
!13014 = !DILocation(line: 520, column: 2, scope: !12971)
!13015 = !DILocation(line: 523, column: 2, scope: !12971)
!13016 = !DILocation(line: 526, column: 2, scope: !12971)
!13017 = !DILocation(line: 527, column: 2, scope: !12971)
!13018 = !DILocation(line: 543, column: 24, scope: !12971)
!13019 = !DILocation(line: 543, column: 2, scope: !12971)
!13020 = !DILocation(line: 0, scope: !2075)
!13021 = !DILocation(line: 246, column: 15, scope: !2093)
!13022 = !DILocation(line: 246, column: 36, scope: !2092)
!13023 = !DILocation(line: 246, column: 2, scope: !2093)
!13024 = !DILocation(line: 247, column: 37, scope: !2091)
!13025 = !DILocation(line: 0, scope: !2091)
!13026 = !DILocation(line: 248, column: 19, scope: !2091)
!13027 = !DILocation(line: 248, column: 12, scope: !2091)
!13028 = !DILocation(line: 250, column: 11, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !2091, file: !1842, line: 250, column: 7)
!13030 = !DILocation(line: 250, column: 7, scope: !2091)
!13031 = !DILocation(line: 254, column: 11, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13033, file: !1842, line: 254, column: 8)
!13033 = distinct !DILexicalBlock(scope: !13029, file: !1842, line: 250, column: 20)
!13034 = !DILocation(line: 254, column: 8, scope: !13033)
!13035 = !DILocation(line: 255, column: 9, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13032, file: !1842, line: 254, column: 17)
!13037 = !DILocation(line: 258, column: 9, scope: !13036)
!13038 = !DILocation(line: 261, column: 28, scope: !13036)
!13039 = !DILocation(line: 261, column: 10, scope: !13036)
!13040 = !DILocation(line: 261, column: 17, scope: !13036)
!13041 = !DILocation(line: 261, column: 26, scope: !13036)
!13042 = !DILocation(line: 262, column: 4, scope: !13036)
!13043 = !DILocation(line: 263, column: 9, scope: !13033)
!13044 = !DILocation(line: 263, column: 16, scope: !13033)
!13045 = !DILocation(line: 263, column: 28, scope: !13033)
!13046 = !DILocation(line: 264, column: 3, scope: !13033)
!13047 = !DILocation(line: 246, column: 60, scope: !2092)
!13048 = distinct !{!13048, !13023, !13049}
!13049 = !DILocation(line: 265, column: 2, scope: !2093)
!13050 = !DILocation(line: 266, column: 1, scope: !2075)
!13051 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !548, file: !548, line: 1638, type: !6424, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !13052)
!13052 = !{!13053, !13054}
!13053 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13051, file: !548, line: 1638, type: !872)
!13054 = !DILocalVariable(name: "priority", arg: 2, scope: !13051, file: !548, line: 1638, type: !110)
!13055 = !DILocation(line: 0, scope: !13051)
!13056 = !DILocation(line: 1646, column: 48, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13058, file: !548, line: 1645, column: 3)
!13058 = distinct !DILexicalBlock(scope: !13051, file: !548, line: 1640, column: 7)
!13059 = !DILocation(line: 1646, column: 32, scope: !13057)
!13060 = !DILocation(line: 1646, column: 40, scope: !13057)
!13061 = !DILocation(line: 1646, column: 5, scope: !13057)
!13062 = !DILocation(line: 1646, column: 46, scope: !13057)
!13063 = !DILocation(line: 1648, column: 1, scope: !13051)
!13064 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12982, file: !12982, line: 32, type: !3060, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!13065 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13066, file: !13066, line: 215, type: !12963, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !13067)
!13066 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13067 = !{!13068}
!13068 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13065, file: !13066, line: 215, type: !1934)
!13069 = !DILocation(line: 0, scope: !13065)
!13070 = !DILocation(line: 217, column: 21, scope: !13065)
!13071 = !DILocation(line: 217, column: 34, scope: !13065)
!13072 = !DILocation(line: 221, column: 21, scope: !13065)
!13073 = !DILocation(line: 221, column: 34, scope: !13065)
!13074 = !DILocation(line: 223, column: 27, scope: !13065)
!13075 = !DILocation(line: 223, column: 33, scope: !13065)
!13076 = !DILocation(line: 224, column: 27, scope: !13065)
!13077 = !DILocation(line: 224, column: 32, scope: !13065)
!13078 = !DILocation(line: 232, column: 16, scope: !13065)
!13079 = !DILocation(line: 232, column: 30, scope: !13065)
!13080 = !DILocation(line: 239, column: 24, scope: !13065)
!13081 = !DILocation(line: 240, column: 1, scope: !13065)
!13082 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1842, file: !1842, line: 399, type: !13083, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !13085)
!13083 = !DISubroutineType(types: !13084)
!13084 = !{!285}
!13085 = !{!13086}
!13086 = !DILocalVariable(name: "stack_ptr", scope: !13082, file: !1842, line: 401, type: !285)
!13087 = !DILocation(line: 404, column: 2, scope: !13082)
!13088 = !DILocation(line: 416, column: 24, scope: !13082)
!13089 = !DILocation(line: 418, column: 14, scope: !13082)
!13090 = !DILocation(line: 0, scope: !13082)
!13091 = !DILocation(line: 423, column: 2, scope: !13082)
!13092 = !DILocation(line: 424, column: 2, scope: !13082)
!13093 = !DILocation(line: 426, column: 2, scope: !13082)
!13094 = !DILocation(line: 428, column: 2, scope: !13082)
!13095 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1842, file: !1842, line: 432, type: !13096, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !13098)
!13096 = !DISubroutineType(types: !13097)
!13097 = !{null, !285}
!13098 = !{!13099}
!13099 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13095, file: !1842, line: 432, type: !285)
!13100 = !DILocation(line: 0, scope: !13095)
!13101 = !DILocation(line: 435, column: 2, scope: !13095)
!13102 = !DILocation(line: 445, column: 2, scope: !13095)
!13103 = distinct !DISubprogram(name: "bg_thread_main", scope: !1842, file: !1842, line: 277, type: !3172, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1838, retainedNodes: !13104)
!13104 = !{!13105, !13106, !13107}
!13105 = !DILocalVariable(name: "unused1", arg: 1, scope: !13103, file: !1842, line: 277, type: !107)
!13106 = !DILocalVariable(name: "unused2", arg: 2, scope: !13103, file: !1842, line: 277, type: !107)
!13107 = !DILocalVariable(name: "unused3", arg: 3, scope: !13103, file: !1842, line: 277, type: !107)
!13108 = !DILocation(line: 0, scope: !13103)
!13109 = !DILocation(line: 291, column: 20, scope: !13103)
!13110 = !DILocation(line: 293, column: 2, scope: !13103)
!13111 = !DILocation(line: 297, column: 2, scope: !13103)
!13112 = !DILocation(line: 305, column: 2, scope: !13103)
!13113 = !DILocation(line: 307, column: 2, scope: !13103)
!13114 = !DILocation(line: 330, column: 8, scope: !13103)
!13115 = !DILocation(line: 333, column: 34, scope: !13103)
!13116 = !DILocation(line: 339, column: 1, scope: !13103)
!13117 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2104, file: !2104, line: 45, type: !13118, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13126)
!13118 = !DISubroutineType(types: !13119)
!13119 = !{null, !13120, !107}
!13120 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !13121)
!13121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13122, size: 32)
!13122 = !DISubroutineType(types: !13123)
!13123 = !{null, !13124, !107}
!13124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13125, size: 32)
!13125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2109)
!13126 = !{!13127, !13128}
!13127 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13117, file: !2104, line: 45, type: !13120)
!13128 = !DILocalVariable(name: "user_data", arg: 2, scope: !13117, file: !2104, line: 45, type: !107)
!13129 = !DILocation(line: 0, scope: !13117)
!13130 = !DILocation(line: 71, column: 1, scope: !13117)
!13131 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2104, file: !2104, line: 73, type: !13118, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13132)
!13132 = !{!13133, !13134}
!13133 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13131, file: !2104, line: 73, type: !13120)
!13134 = !DILocalVariable(name: "user_data", arg: 2, scope: !13131, file: !2104, line: 73, type: !107)
!13135 = !DILocation(line: 0, scope: !13131)
!13136 = !DILocation(line: 95, column: 1, scope: !13131)
!13137 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2104, file: !2104, line: 97, type: !7396, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2043)
!13138 = !DILocation(line: 1031, column: 3, scope: !13139, inlinedAt: !13142)
!13139 = distinct !DISubprogram(name: "__get_IPSR", scope: !6384, file: !6384, line: 1027, type: !7389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13140)
!13140 = !{!13141}
!13141 = !DILocalVariable(name: "result", scope: !13139, file: !6384, line: 1029, type: !110)
!13142 = distinct !DILocation(line: 48, column: 10, scope: !13143, inlinedAt: !13144)
!13143 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7395, file: !7395, line: 46, type: !7396, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2043)
!13144 = distinct !DILocation(line: 99, column: 9, scope: !13137)
!13145 = !{i64 2473402}
!13146 = !DILocation(line: 0, scope: !13139, inlinedAt: !13142)
!13147 = !DILocation(line: 48, column: 9, scope: !13143, inlinedAt: !13144)
!13148 = !DILocation(line: 99, column: 2, scope: !13137)
!13149 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2104, file: !2104, line: 106, type: !3060, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2043)
!13150 = !DILocation(line: 108, column: 2, scope: !13149)
!13151 = !DILocation(line: 108, column: 17, scope: !13149)
!13152 = !DILocation(line: 108, column: 30, scope: !13149)
!13153 = !DILocation(line: 109, column: 1, scope: !13149)
!13154 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2104, file: !2104, line: 116, type: !3060, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2043)
!13155 = !DILocation(line: 118, column: 2, scope: !13154)
!13156 = !DILocation(line: 118, column: 17, scope: !13154)
!13157 = !DILocation(line: 118, column: 30, scope: !13154)
!13158 = !DILocation(line: 119, column: 1, scope: !13154)
!13159 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2104, file: !2104, line: 126, type: !7396, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !2043)
!13160 = !DILocation(line: 128, column: 10, scope: !13159)
!13161 = !DILocation(line: 128, column: 25, scope: !13159)
!13162 = !DILocation(line: 128, column: 38, scope: !13159)
!13163 = !DILocation(line: 128, column: 53, scope: !13159)
!13164 = !DILocation(line: 128, column: 2, scope: !13159)
!13165 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2104, file: !2104, line: 187, type: !13166, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13168)
!13166 = !DISubroutineType(types: !13167)
!13167 = !{!109, !2108, !279}
!13168 = !{!13169, !13170}
!13169 = !DILocalVariable(name: "thread", arg: 1, scope: !13165, file: !2104, line: 187, type: !2108)
!13170 = !DILocalVariable(name: "value", arg: 2, scope: !13165, file: !2104, line: 187, type: !279)
!13171 = !DILocation(line: 0, scope: !13165)
!13172 = !DILocation(line: 190, column: 13, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13165, file: !2104, line: 190, column: 6)
!13174 = !DILocation(line: 190, column: 6, scope: !13165)
!13175 = !DILocation(line: 194, column: 10, scope: !13165)
!13176 = !DILocation(line: 194, column: 2, scope: !13165)
!13177 = !DILocation(line: 195, column: 2, scope: !13165)
!13178 = !DILocation(line: 195, column: 47, scope: !13165)
!13179 = !DILocation(line: 199, column: 2, scope: !13165)
!13180 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2104, file: !2104, line: 238, type: !13181, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13183)
!13181 = !DISubroutineType(types: !13182)
!13182 = !{!279, !2108}
!13183 = !{!13184}
!13184 = !DILocalVariable(name: "thread", arg: 1, scope: !13180, file: !2104, line: 238, type: !2108)
!13185 = !DILocation(line: 0, scope: !13180)
!13186 = !DILocation(line: 241, column: 23, scope: !13180)
!13187 = !DILocation(line: 241, column: 2, scope: !13180)
!13188 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2104, file: !2104, line: 248, type: !13189, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13191)
!13189 = !DISubroutineType(types: !13190)
!13190 = !{!109, !2107, !285, !234}
!13191 = !{!13192, !13193, !13194}
!13192 = !DILocalVariable(name: "thread", arg: 1, scope: !13188, file: !2104, line: 248, type: !2107)
!13193 = !DILocalVariable(name: "buf", arg: 2, scope: !13188, file: !2104, line: 248, type: !285)
!13194 = !DILocalVariable(name: "size", arg: 3, scope: !13188, file: !2104, line: 248, type: !234)
!13195 = !DILocation(line: 0, scope: !13188)
!13196 = !DILocation(line: 251, column: 15, scope: !13188)
!13197 = !DILocation(line: 251, column: 2, scope: !13188)
!13198 = !DILocation(line: 252, column: 2, scope: !13188)
!13199 = !DILocation(line: 0, scope: !2103)
!13200 = !DILocation(line: 281, column: 11, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !2103, file: !2104, line: 281, column: 6)
!13202 = !DILocation(line: 281, column: 20, scope: !13201)
!13203 = !DILocation(line: 275, column: 45, scope: !2103)
!13204 = !DILocation(line: 285, column: 10, scope: !2103)
!13205 = !DILocation(line: 0, scope: !2227)
!13206 = !DILocation(line: 293, column: 39, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !2227, file: !2104, line: 293, column: 2)
!13208 = !DILocation(line: 293, column: 2, scope: !2227)
!13209 = !DILocation(line: 273, column: 14, scope: !2103)
!13210 = !DILocation(line: 309, column: 2, scope: !2103)
!13211 = !DILocation(line: 309, column: 11, scope: !2103)
!13212 = !DILocation(line: 311, column: 2, scope: !2103)
!13213 = !DILocation(line: 293, column: 26, scope: !13207)
!13214 = !DILocation(line: 294, column: 9, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13207, file: !2104, line: 293, column: 54)
!13216 = !DILocation(line: 295, column: 21, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13215, file: !2104, line: 295, column: 7)
!13218 = !DILocation(line: 295, column: 28, scope: !13217)
!13219 = !DILocation(line: 295, column: 7, scope: !13215)
!13220 = !DILocation(line: 299, column: 25, scope: !13215)
!13221 = !DILocation(line: 299, column: 41, scope: !13215)
!13222 = !DILocation(line: 300, column: 7, scope: !13215)
!13223 = !DILocation(line: 300, column: 26, scope: !13215)
!13224 = !DILocation(line: 299, column: 10, scope: !13215)
!13225 = !DILocation(line: 299, column: 7, scope: !13215)
!13226 = !DILocation(line: 302, column: 16, scope: !13215)
!13227 = !DILocation(line: 304, column: 20, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13215, file: !2104, line: 304, column: 7)
!13229 = !DILocation(line: 304, column: 7, scope: !13215)
!13230 = !DILocation(line: 305, column: 26, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13228, file: !2104, line: 304, column: 26)
!13232 = !DILocation(line: 305, column: 42, scope: !13231)
!13233 = !DILocation(line: 305, column: 11, scope: !13231)
!13234 = !DILocation(line: 305, column: 8, scope: !13231)
!13235 = !DILocation(line: 306, column: 3, scope: !13231)
!13236 = !DILocation(line: 293, column: 50, scope: !13207)
!13237 = !DILocation(line: 312, column: 1, scope: !2103)
!13238 = distinct !DISubprogram(name: "copy_bytes", scope: !2104, file: !2104, line: 261, type: !13239, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13241)
!13239 = !DISubroutineType(types: !13240)
!13240 = !{!234, !285, !234, !279, !234}
!13241 = !{!13242, !13243, !13244, !13245, !13246}
!13242 = !DILocalVariable(name: "dest", arg: 1, scope: !13238, file: !2104, line: 261, type: !285)
!13243 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13238, file: !2104, line: 261, type: !234)
!13244 = !DILocalVariable(name: "src", arg: 3, scope: !13238, file: !2104, line: 261, type: !279)
!13245 = !DILocalVariable(name: "src_size", arg: 4, scope: !13238, file: !2104, line: 261, type: !234)
!13246 = !DILocalVariable(name: "bytes_to_copy", scope: !13238, file: !2104, line: 263, type: !234)
!13247 = !DILocation(line: 0, scope: !13238)
!13248 = !DILocation(line: 265, column: 18, scope: !13238)
!13249 = !DILocation(line: 266, column: 2, scope: !13238)
!13250 = !DILocation(line: 268, column: 2, scope: !13238)
!13251 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2104, file: !2104, line: 383, type: !13252, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13254)
!13252 = !DISubroutineType(types: !13253)
!13253 = !{null, !2108}
!13254 = !{!13255}
!13255 = !DILocalVariable(name: "thread", arg: 1, scope: !13251, file: !2104, line: 383, type: !2108)
!13256 = !DILocation(line: 0, scope: !13251)
!13257 = !DILocation(line: 387, column: 2, scope: !13251)
!13258 = !DILocation(line: 388, column: 1, scope: !13251)
!13259 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2104, file: !2104, line: 528, type: !13260, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13267)
!13260 = !DISubroutineType(types: !13261)
!13261 = !{!285, !2108, !13262, !234, !3327, !107, !107, !107, !109, !110, !279}
!13262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13263, size: 32)
!13263 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3326, line: 44, baseType: !13264)
!13264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !147, line: 47, size: 8, elements: !13265)
!13265 = !{!13266}
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13264, file: !147, line: 48, baseType: !150, size: 8)
!13267 = !{!13268, !13269, !13270, !13271, !13272, !13273, !13274, !13275, !13276, !13277, !13278}
!13268 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13259, file: !2104, line: 528, type: !2108)
!13269 = !DILocalVariable(name: "stack", arg: 2, scope: !13259, file: !2104, line: 529, type: !13262)
!13270 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13259, file: !2104, line: 529, type: !234)
!13271 = !DILocalVariable(name: "entry", arg: 4, scope: !13259, file: !2104, line: 530, type: !3327)
!13272 = !DILocalVariable(name: "p1", arg: 5, scope: !13259, file: !2104, line: 531, type: !107)
!13273 = !DILocalVariable(name: "p2", arg: 6, scope: !13259, file: !2104, line: 531, type: !107)
!13274 = !DILocalVariable(name: "p3", arg: 7, scope: !13259, file: !2104, line: 531, type: !107)
!13275 = !DILocalVariable(name: "prio", arg: 8, scope: !13259, file: !2104, line: 532, type: !109)
!13276 = !DILocalVariable(name: "options", arg: 9, scope: !13259, file: !2104, line: 532, type: !110)
!13277 = !DILocalVariable(name: "name", arg: 10, scope: !13259, file: !2104, line: 532, type: !279)
!13278 = !DILocalVariable(name: "stack_ptr", scope: !13259, file: !2104, line: 534, type: !285)
!13279 = !DILocation(line: 0, scope: !13259)
!13280 = !DILocation(line: 536, column: 2, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13282, file: !2104, line: 536, column: 2)
!13282 = distinct !DILexicalBlock(scope: !13283, file: !2104, line: 536, column: 2)
!13283 = distinct !DILexicalBlock(scope: !13259, file: !2104, line: 536, column: 2)
!13284 = !DILocation(line: 536, column: 2, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13281, file: !2104, line: 536, column: 2)
!13286 = !DILocation(line: 550, column: 28, scope: !13259)
!13287 = !DILocation(line: 550, column: 2, scope: !13259)
!13288 = !DILocation(line: 553, column: 34, scope: !13259)
!13289 = !DILocation(line: 553, column: 2, scope: !13259)
!13290 = !DILocation(line: 554, column: 14, scope: !13259)
!13291 = !DILocation(line: 564, column: 2, scope: !13259)
!13292 = !DILocation(line: 567, column: 14, scope: !13259)
!13293 = !DILocation(line: 567, column: 24, scope: !13259)
!13294 = !DILocation(line: 594, column: 11, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13259, file: !2104, line: 594, column: 6)
!13296 = !DILocation(line: 0, scope: !13295)
!13297 = !DILocation(line: 594, column: 6, scope: !13259)
!13298 = !DILocation(line: 595, column: 3, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13295, file: !2104, line: 594, column: 20)
!13300 = !DILocation(line: 598, column: 3, scope: !13299)
!13301 = !DILocation(line: 598, column: 52, scope: !13299)
!13302 = !DILocation(line: 599, column: 2, scope: !13299)
!13303 = !DILocation(line: 600, column: 23, scope: !13304)
!13304 = distinct !DILexicalBlock(scope: !13295, file: !2104, line: 599, column: 9)
!13305 = !DILocation(line: 612, column: 7, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13259, file: !2104, line: 612, column: 6)
!13307 = !DILocation(line: 612, column: 6, scope: !13259)
!13308 = !DILocation(line: 627, column: 40, scope: !13259)
!13309 = !DILocation(line: 637, column: 2, scope: !13259)
!13310 = !DILocation(line: 613, column: 15, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13306, file: !2104, line: 612, column: 17)
!13312 = !DILocation(line: 613, column: 29, scope: !13311)
!13313 = !DILocation(line: 638, column: 1, scope: !13259)
!13314 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12962, file: !12962, line: 78, type: !13315, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13317)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{!360, !107}
!13317 = !{!13318}
!13318 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13314, file: !12962, line: 78, type: !107)
!13319 = !DILocation(line: 0, scope: !13314)
!13320 = !DILocation(line: 80, column: 21, scope: !13314)
!13321 = !DILocation(line: 80, column: 2, scope: !13314)
!13322 = distinct !DISubprogram(name: "z_waitq_init", scope: !13323, file: !13323, line: 47, type: !13324, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13326)
!13323 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13324 = !DISubroutineType(types: !13325)
!13325 = !{null, !2139}
!13326 = !{!13327}
!13327 = !DILocalVariable(name: "w", arg: 1, scope: !13322, file: !13323, line: 47, type: !2139)
!13328 = !DILocation(line: 0, scope: !13322)
!13329 = !DILocation(line: 49, column: 21, scope: !13322)
!13330 = !DILocation(line: 49, column: 2, scope: !13322)
!13331 = !DILocation(line: 50, column: 1, scope: !13322)
!13332 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2104, file: !2104, line: 791, type: !13333, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13336)
!13333 = !DISubroutineType(types: !13334)
!13334 = !{null, !13335, !109, !110, !32}
!13335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!13336 = !{!13337, !13338, !13339, !13340}
!13337 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13332, file: !2104, line: 791, type: !13335)
!13338 = !DILocalVariable(name: "priority", arg: 2, scope: !13332, file: !2104, line: 791, type: !109)
!13339 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13332, file: !2104, line: 792, type: !110)
!13340 = !DILocalVariable(name: "options", arg: 4, scope: !13332, file: !2104, line: 792, type: !32)
!13341 = !DILocation(line: 0, scope: !13332)
!13342 = !DILocation(line: 795, column: 15, scope: !13332)
!13343 = !DILocation(line: 795, column: 25, scope: !13332)
!13344 = !DILocation(line: 796, column: 30, scope: !13332)
!13345 = !DILocation(line: 796, column: 15, scope: !13332)
!13346 = !DILocation(line: 796, column: 28, scope: !13332)
!13347 = !DILocation(line: 797, column: 30, scope: !13332)
!13348 = !DILocation(line: 797, column: 15, scope: !13332)
!13349 = !DILocation(line: 797, column: 28, scope: !13332)
!13350 = !DILocation(line: 799, column: 22, scope: !13332)
!13351 = !DILocation(line: 799, column: 15, scope: !13332)
!13352 = !DILocation(line: 799, column: 20, scope: !13332)
!13353 = !DILocation(line: 801, column: 15, scope: !13332)
!13354 = !DILocation(line: 801, column: 28, scope: !13332)
!13355 = !DILocation(line: 814, column: 2, scope: !13332)
!13356 = !DILocation(line: 815, column: 1, scope: !13332)
!13357 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2104, file: !2104, line: 449, type: !13358, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13360)
!13358 = !DISubroutineType(types: !13359)
!13359 = !{!285, !2108, !13262, !234}
!13360 = !{!13361, !13362, !13363, !13364, !13365, !13366, !13367, !13368}
!13361 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13357, file: !2104, line: 449, type: !2108)
!13362 = !DILocalVariable(name: "stack", arg: 2, scope: !13357, file: !2104, line: 450, type: !13262)
!13363 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13357, file: !2104, line: 450, type: !234)
!13364 = !DILocalVariable(name: "stack_obj_size", scope: !13357, file: !2104, line: 452, type: !234)
!13365 = !DILocalVariable(name: "stack_buf_size", scope: !13357, file: !2104, line: 452, type: !234)
!13366 = !DILocalVariable(name: "stack_ptr", scope: !13357, file: !2104, line: 453, type: !285)
!13367 = !DILocalVariable(name: "stack_buf_start", scope: !13357, file: !2104, line: 453, type: !285)
!13368 = !DILocalVariable(name: "delta", scope: !13357, file: !2104, line: 454, type: !234)
!13369 = !DILocation(line: 0, scope: !13357)
!13370 = !DILocation(line: 465, column: 20, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13357, file: !2104, line: 463, column: 2)
!13372 = !DILocation(line: 466, column: 21, scope: !13371)
!13373 = !DILocation(line: 473, column: 28, scope: !13357)
!13374 = !DILocation(line: 514, column: 33, scope: !13357)
!13375 = !DILocation(line: 514, column: 25, scope: !13357)
!13376 = !DILocation(line: 514, column: 31, scope: !13357)
!13377 = !DILocation(line: 515, column: 25, scope: !13357)
!13378 = !DILocation(line: 515, column: 30, scope: !13357)
!13379 = !DILocation(line: 516, column: 25, scope: !13357)
!13380 = !DILocation(line: 516, column: 31, scope: !13357)
!13381 = !DILocation(line: 520, column: 2, scope: !13357)
!13382 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !147, file: !147, line: 331, type: !13383, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13385)
!13383 = !DISubroutineType(types: !13384)
!13384 = !{!285, !13262}
!13385 = !{!13386}
!13386 = !DILocalVariable(name: "sym", arg: 1, scope: !13382, file: !147, line: 331, type: !13262)
!13387 = !DILocation(line: 0, scope: !13382)
!13388 = !DILocation(line: 333, column: 21, scope: !13382)
!13389 = !DILocation(line: 333, column: 2, scope: !13382)
!13390 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13391, file: !13391, line: 40, type: !13392, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13394)
!13391 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13392 = !DISubroutineType(types: !13393)
!13393 = !{null, !13335}
!13394 = !{!13395}
!13395 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13390, file: !13391, line: 40, type: !13335)
!13396 = !DILocation(line: 0, scope: !13390)
!13397 = !DILocation(line: 42, column: 31, scope: !13390)
!13398 = !DILocation(line: 42, column: 2, scope: !13390)
!13399 = !DILocation(line: 43, column: 1, scope: !13390)
!13400 = distinct !DISubprogram(name: "z_init_timeout", scope: !13391, file: !13391, line: 25, type: !2165, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13401)
!13401 = !{!13402}
!13402 = !DILocalVariable(name: "to", arg: 1, scope: !13400, file: !13391, line: 25, type: !2167)
!13403 = !DILocation(line: 0, scope: !13400)
!13404 = !DILocation(line: 27, column: 22, scope: !13400)
!13405 = !DILocation(line: 27, column: 2, scope: !13400)
!13406 = !DILocation(line: 28, column: 1, scope: !13400)
!13407 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13408, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13410)
!13408 = !DISubroutineType(types: !13409)
!13409 = !{null, !2214}
!13410 = !{!13411}
!13411 = !DILocalVariable(name: "node", arg: 1, scope: !13407, file: !127, line: 211, type: !2214)
!13412 = !DILocation(line: 0, scope: !13407)
!13413 = !DILocation(line: 213, column: 8, scope: !13407)
!13414 = !DILocation(line: 213, column: 13, scope: !13407)
!13415 = !DILocation(line: 214, column: 8, scope: !13407)
!13416 = !DILocation(line: 214, column: 13, scope: !13407)
!13417 = !DILocation(line: 215, column: 1, scope: !13407)
!13418 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13419, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13422)
!13419 = !DISubroutineType(types: !13420)
!13420 = !{null, !13421}
!13421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!13422 = !{!13423}
!13423 = !DILocalVariable(name: "list", arg: 1, scope: !13418, file: !127, line: 197, type: !13421)
!13424 = !DILocation(line: 0, scope: !13418)
!13425 = !DILocation(line: 199, column: 8, scope: !13418)
!13426 = !DILocation(line: 199, column: 13, scope: !13418)
!13427 = !DILocation(line: 200, column: 8, scope: !13418)
!13428 = !DILocation(line: 200, column: 13, scope: !13418)
!13429 = !DILocation(line: 201, column: 1, scope: !13418)
!13430 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2104, file: !2104, line: 641, type: !13431, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13437)
!13431 = !DISubroutineType(types: !13432)
!13432 = !{!2107, !2108, !13262, !234, !3327, !107, !107, !107, !109, !110, !13433}
!13433 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13434)
!13434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13435)
!13435 = !{!13436}
!13436 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13434, file: !104, line: 66, baseType: !103, size: 64)
!13437 = !{!13438, !13439, !13440, !13441, !13442, !13443, !13444, !13445, !13446, !13447}
!13438 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13430, file: !2104, line: 641, type: !2108)
!13439 = !DILocalVariable(name: "stack", arg: 2, scope: !13430, file: !2104, line: 642, type: !13262)
!13440 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13430, file: !2104, line: 643, type: !234)
!13441 = !DILocalVariable(name: "entry", arg: 4, scope: !13430, file: !2104, line: 643, type: !3327)
!13442 = !DILocalVariable(name: "p1", arg: 5, scope: !13430, file: !2104, line: 644, type: !107)
!13443 = !DILocalVariable(name: "p2", arg: 6, scope: !13430, file: !2104, line: 644, type: !107)
!13444 = !DILocalVariable(name: "p3", arg: 7, scope: !13430, file: !2104, line: 644, type: !107)
!13445 = !DILocalVariable(name: "prio", arg: 8, scope: !13430, file: !2104, line: 645, type: !109)
!13446 = !DILocalVariable(name: "options", arg: 9, scope: !13430, file: !2104, line: 645, type: !110)
!13447 = !DILocalVariable(name: "delay", arg: 10, scope: !13430, file: !2104, line: 645, type: !13433)
!13448 = !DILocation(line: 0, scope: !13430)
!13449 = !DILocation(line: 1031, column: 3, scope: !13139, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 48, column: 10, scope: !13143, inlinedAt: !13451)
!13451 = distinct !DILocation(line: 647, column: 2, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13453, file: !2104, line: 647, column: 2)
!13453 = distinct !DILexicalBlock(scope: !13430, file: !2104, line: 647, column: 2)
!13454 = !DILocation(line: 0, scope: !13139, inlinedAt: !13450)
!13455 = !DILocation(line: 48, column: 9, scope: !13143, inlinedAt: !13451)
!13456 = !DILocation(line: 647, column: 2, scope: !13453)
!13457 = !DILocation(line: 647, column: 2, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13452, file: !2104, line: 647, column: 2)
!13459 = !DILocation(line: 649, column: 2, scope: !13430)
!13460 = !DILocation(line: 652, column: 7, scope: !13461)
!13461 = distinct !DILexicalBlock(scope: !13430, file: !2104, line: 652, column: 6)
!13462 = !DILocation(line: 652, column: 6, scope: !13430)
!13463 = !DILocation(line: 653, column: 3, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13461, file: !2104, line: 652, column: 39)
!13465 = !DILocation(line: 654, column: 2, scope: !13464)
!13466 = !DILocation(line: 656, column: 2, scope: !13430)
!13467 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2104, file: !2104, line: 401, type: !13468, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13470)
!13468 = !DISubroutineType(types: !13469)
!13469 = !{null, !2108, !13433}
!13470 = !{!13471, !13472}
!13471 = !DILocalVariable(name: "thread", arg: 1, scope: !13467, file: !2104, line: 401, type: !2108)
!13472 = !DILocalVariable(name: "delay", arg: 2, scope: !13467, file: !2104, line: 401, type: !13433)
!13473 = !DILocation(line: 0, scope: !13467)
!13474 = !DILocation(line: 404, column: 6, scope: !13475)
!13475 = distinct !DILexicalBlock(scope: !13467, file: !2104, line: 404, column: 6)
!13476 = !DILocation(line: 404, column: 6, scope: !13467)
!13477 = !DILocation(line: 405, column: 3, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13475, file: !2104, line: 404, column: 38)
!13479 = !DILocation(line: 406, column: 2, scope: !13478)
!13480 = !DILocation(line: 407, column: 3, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13475, file: !2104, line: 406, column: 9)
!13482 = !DILocation(line: 413, column: 1, scope: !13467)
!13483 = distinct !DISubprogram(name: "k_thread_start", scope: !3206, file: !3206, line: 205, type: !13484, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13486)
!13484 = !DISubroutineType(types: !13485)
!13485 = !{null, !2107}
!13486 = !{!13487}
!13487 = !DILocalVariable(name: "thread", arg: 1, scope: !13483, file: !3206, line: 205, type: !2107)
!13488 = !DILocation(line: 0, scope: !13483)
!13489 = !DILocation(line: 214, column: 2, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13483, file: !3206, line: 214, column: 2)
!13491 = !{i64 2152249786}
!13492 = !DILocation(line: 215, column: 2, scope: !13483)
!13493 = !DILocation(line: 216, column: 1, scope: !13483)
!13494 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13391, file: !13391, line: 47, type: !13468, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13495)
!13495 = !{!13496, !13497}
!13496 = !DILocalVariable(name: "thread", arg: 1, scope: !13494, file: !13391, line: 47, type: !2108)
!13497 = !DILocalVariable(name: "ticks", arg: 2, scope: !13494, file: !13391, line: 47, type: !13433)
!13498 = !DILocation(line: 0, scope: !13494)
!13499 = !DILocation(line: 49, column: 30, scope: !13494)
!13500 = !DILocation(line: 49, column: 2, scope: !13494)
!13501 = !DILocation(line: 50, column: 1, scope: !13494)
!13502 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2104, file: !2104, line: 748, type: !3060, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13503)
!13503 = !{!13504, !13522}
!13504 = !DILocalVariable(name: "thread_data", scope: !13505, file: !2104, line: 750, type: !13506)
!13505 = distinct !DILexicalBlock(scope: !13502, file: !2104, line: 750, column: 2)
!13506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13507, size: 32)
!13507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !13508)
!13508 = !{!13509, !13510, !13511, !13512, !13513, !13514, !13515, !13516, !13517, !13518, !13519, !13521}
!13509 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13507, file: !118, line: 621, baseType: !2108, size: 32)
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13507, file: !118, line: 622, baseType: !13262, size: 32, offset: 32)
!13511 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13507, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!13512 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13507, file: !118, line: 624, baseType: !3327, size: 32, offset: 96)
!13513 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13507, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!13514 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13507, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!13515 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13507, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13507, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13507, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13507, file: !118, line: 630, baseType: !854, size: 32, offset: 288)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13507, file: !118, line: 631, baseType: !13520, size: 32, offset: 320)
!13520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 32)
!13521 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13507, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!13522 = !DILocalVariable(name: "thread_data", scope: !13523, file: !2104, line: 781, type: !13506)
!13523 = distinct !DILexicalBlock(scope: !13502, file: !2104, line: 781, column: 2)
!13524 = !DILocation(line: 0, scope: !13505)
!13525 = !DILocation(line: 750, column: 2, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13527, file: !2104, line: 750, column: 2)
!13527 = distinct !DILexicalBlock(scope: !13528, file: !2104, line: 750, column: 2)
!13528 = distinct !DILexicalBlock(scope: !13505, file: !2104, line: 750, column: 2)
!13529 = !DILocation(line: 750, column: 2, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13531, file: !2104, line: 750, column: 2)
!13531 = distinct !DILexicalBlock(scope: !13526, file: !2104, line: 750, column: 2)
!13532 = !DILocation(line: 750, column: 2, scope: !13527)
!13533 = !DILocation(line: 750, column: 2, scope: !13505)
!13534 = !DILocation(line: 780, column: 2, scope: !13502)
!13535 = !DILocation(line: 0, scope: !13523)
!13536 = !DILocation(line: 781, column: 2, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13538, file: !2104, line: 781, column: 2)
!13538 = distinct !DILexicalBlock(scope: !13539, file: !2104, line: 781, column: 2)
!13539 = distinct !DILexicalBlock(scope: !13523, file: !2104, line: 781, column: 2)
!13540 = !DILocation(line: 752, column: 17, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13528, file: !2104, line: 750, column: 38)
!13542 = !DILocation(line: 753, column: 17, scope: !13541)
!13543 = !DILocation(line: 754, column: 17, scope: !13541)
!13544 = !DILocation(line: 755, column: 17, scope: !13541)
!13545 = !DILocation(line: 756, column: 17, scope: !13541)
!13546 = !DILocation(line: 757, column: 17, scope: !13541)
!13547 = !DILocation(line: 758, column: 17, scope: !13541)
!13548 = !DILocation(line: 759, column: 17, scope: !13541)
!13549 = !DILocation(line: 760, column: 17, scope: !13541)
!13550 = !DILocation(line: 761, column: 17, scope: !13541)
!13551 = !DILocation(line: 751, column: 3, scope: !13541)
!13552 = !DILocation(line: 763, column: 16, scope: !13541)
!13553 = !DILocation(line: 763, column: 29, scope: !13541)
!13554 = !DILocation(line: 763, column: 39, scope: !13541)
!13555 = !DILocation(line: 750, column: 2, scope: !13528)
!13556 = !DILocation(line: 750, column: 2, scope: !13531)
!13557 = distinct !{!13557, !13533, !13558}
!13558 = !DILocation(line: 764, column: 2, scope: !13505)
!13559 = !DILocation(line: 781, column: 2, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13561, file: !2104, line: 781, column: 2)
!13561 = distinct !DILexicalBlock(scope: !13537, file: !2104, line: 781, column: 2)
!13562 = !DILocation(line: 781, column: 2, scope: !13538)
!13563 = !DILocation(line: 781, column: 2, scope: !13523)
!13564 = !DILocation(line: 787, column: 2, scope: !13502)
!13565 = !DILocation(line: 788, column: 1, scope: !13502)
!13566 = !DILocation(line: 782, column: 20, scope: !13567)
!13567 = distinct !DILexicalBlock(scope: !13568, file: !2104, line: 782, column: 7)
!13568 = distinct !DILexicalBlock(scope: !13539, file: !2104, line: 781, column: 38)
!13569 = !DILocation(line: 782, column: 31, scope: !13567)
!13570 = !DILocation(line: 782, column: 7, scope: !13568)
!13571 = !DILocation(line: 783, column: 37, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13567, file: !2104, line: 782, column: 51)
!13573 = !DILocation(line: 784, column: 10, scope: !13572)
!13574 = !DILocation(line: 783, column: 4, scope: !13572)
!13575 = !DILocation(line: 785, column: 3, scope: !13572)
!13576 = !DILocation(line: 781, column: 2, scope: !13539)
!13577 = !DILocation(line: 781, column: 2, scope: !13561)
!13578 = distinct !{!13578, !13563, !13579}
!13579 = !DILocation(line: 786, column: 2, scope: !13523)
!13580 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13581, file: !13581, line: 403, type: !13582, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13584)
!13581 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13582 = !DISubroutineType(types: !13583)
!13583 = !{!111, !111}
!13584 = !{!13585}
!13585 = !DILocalVariable(name: "t", arg: 1, scope: !13580, file: !13581, line: 403, type: !111)
!13586 = !DILocation(line: 0, scope: !13580)
!13587 = !DILocalVariable(name: "t", arg: 1, scope: !13588, file: !13581, line: 102, type: !111)
!13588 = distinct !DISubprogram(name: "z_tmcvt", scope: !13581, file: !13581, line: 102, type: !13589, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13591)
!13589 = !DISubroutineType(types: !13590)
!13590 = !{!111, !111, !110, !110, !360, !360, !360, !360}
!13591 = !{!13587, !13592, !13593, !13594, !13595, !13596, !13597, !13598, !13599, !13600, !13601}
!13592 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13588, file: !13581, line: 102, type: !110)
!13593 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13588, file: !13581, line: 103, type: !110)
!13594 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13588, file: !13581, line: 103, type: !360)
!13595 = !DILocalVariable(name: "result32", arg: 5, scope: !13588, file: !13581, line: 104, type: !360)
!13596 = !DILocalVariable(name: "round_up", arg: 6, scope: !13588, file: !13581, line: 104, type: !360)
!13597 = !DILocalVariable(name: "round_off", arg: 7, scope: !13588, file: !13581, line: 105, type: !360)
!13598 = !DILocalVariable(name: "mul_ratio", scope: !13588, file: !13581, line: 107, type: !360)
!13599 = !DILocalVariable(name: "div_ratio", scope: !13588, file: !13581, line: 109, type: !360)
!13600 = !DILocalVariable(name: "off", scope: !13588, file: !13581, line: 116, type: !111)
!13601 = !DILocalVariable(name: "rdivisor", scope: !13602, file: !13581, line: 119, type: !110)
!13602 = distinct !DILexicalBlock(scope: !13603, file: !13581, line: 118, column: 18)
!13603 = distinct !DILexicalBlock(scope: !13588, file: !13581, line: 118, column: 6)
!13604 = !DILocation(line: 0, scope: !13588, inlinedAt: !13605)
!13605 = distinct !DILocation(line: 406, column: 9, scope: !13580)
!13606 = !DILocation(line: 145, column: 13, scope: !13607, inlinedAt: !13605)
!13607 = distinct !DILexicalBlock(scope: !13608, file: !13581, line: 144, column: 10)
!13608 = distinct !DILexicalBlock(scope: !13609, file: !13581, line: 142, column: 7)
!13609 = distinct !DILexicalBlock(scope: !13610, file: !13581, line: 141, column: 24)
!13610 = distinct !DILexicalBlock(scope: !13611, file: !13581, line: 141, column: 13)
!13611 = distinct !DILexicalBlock(scope: !13588, file: !13581, line: 134, column: 6)
!13612 = !DILocation(line: 406, column: 2, scope: !13580)
!13613 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2104, file: !2104, line: 817, type: !4452, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13614)
!13614 = !{!13615, !13616, !13617, !13618}
!13615 = !DILocalVariable(name: "entry", arg: 1, scope: !13613, file: !2104, line: 817, type: !3327)
!13616 = !DILocalVariable(name: "p1", arg: 2, scope: !13613, file: !2104, line: 818, type: !107)
!13617 = !DILocalVariable(name: "p2", arg: 3, scope: !13613, file: !2104, line: 818, type: !107)
!13618 = !DILocalVariable(name: "p3", arg: 4, scope: !13613, file: !2104, line: 818, type: !107)
!13619 = !DILocation(line: 0, scope: !13613)
!13620 = !DILocation(line: 822, column: 2, scope: !13613)
!13621 = !DILocation(line: 822, column: 17, scope: !13613)
!13622 = !DILocation(line: 822, column: 30, scope: !13613)
!13623 = !DILocation(line: 823, column: 2, scope: !13613)
!13624 = !DILocation(line: 845, column: 2, scope: !13613)
!13625 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2104, file: !2104, line: 853, type: !13626, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13629)
!13626 = !DISubroutineType(types: !13627)
!13627 = !{!360, !13628}
!13628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 32)
!13629 = !{!13630, !13631}
!13630 = !DILocalVariable(name: "l", arg: 1, scope: !13625, file: !2104, line: 853, type: !13628)
!13631 = !DILocalVariable(name: "thread_cpu", scope: !13625, file: !2104, line: 855, type: !22)
!13632 = !DILocation(line: 0, scope: !13625)
!13633 = !DILocation(line: 855, column: 28, scope: !13625)
!13634 = !DILocation(line: 857, column: 17, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13625, file: !2104, line: 857, column: 6)
!13636 = !DILocation(line: 857, column: 6, scope: !13625)
!13637 = !DILocation(line: 858, column: 19, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13639, file: !2104, line: 858, column: 7)
!13639 = distinct !DILexicalBlock(scope: !13635, file: !2104, line: 857, column: 24)
!13640 = !DILocation(line: 858, column: 42, scope: !13638)
!13641 = !DILocation(line: 858, column: 28, scope: !13638)
!13642 = !DILocation(line: 858, column: 25, scope: !13638)
!13643 = !DILocation(line: 858, column: 7, scope: !13639)
!13644 = !DILocation(line: 862, column: 2, scope: !13625)
!13645 = !DILocation(line: 863, column: 1, scope: !13625)
!13646 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2104, file: !2104, line: 865, type: !13626, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13647)
!13647 = !{!13648}
!13648 = !DILocalVariable(name: "l", arg: 1, scope: !13646, file: !2104, line: 865, type: !13628)
!13649 = !DILocation(line: 0, scope: !13646)
!13650 = !DILocation(line: 867, column: 9, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13646, file: !2104, line: 867, column: 6)
!13652 = !DILocation(line: 867, column: 38, scope: !13651)
!13653 = !DILocation(line: 867, column: 24, scope: !13651)
!13654 = !DILocation(line: 867, column: 54, scope: !13651)
!13655 = !DILocation(line: 867, column: 43, scope: !13651)
!13656 = !DILocation(line: 867, column: 41, scope: !13651)
!13657 = !DILocation(line: 867, column: 20, scope: !13651)
!13658 = !DILocation(line: 867, column: 6, scope: !13646)
!13659 = !DILocation(line: 870, column: 16, scope: !13646)
!13660 = !DILocation(line: 871, column: 2, scope: !13646)
!13661 = !DILocation(line: 872, column: 1, scope: !13646)
!13662 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2104, file: !2104, line: 874, type: !13663, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13665)
!13663 = !DISubroutineType(types: !13664)
!13664 = !{null, !13628}
!13665 = !{!13666}
!13666 = !DILocalVariable(name: "l", arg: 1, scope: !13662, file: !2104, line: 874, type: !13628)
!13667 = !DILocation(line: 0, scope: !13662)
!13668 = !DILocation(line: 876, column: 32, scope: !13662)
!13669 = !DILocation(line: 876, column: 18, scope: !13662)
!13670 = !DILocation(line: 876, column: 48, scope: !13662)
!13671 = !DILocation(line: 876, column: 37, scope: !13662)
!13672 = !DILocation(line: 876, column: 35, scope: !13662)
!13673 = !DILocation(line: 876, column: 5, scope: !13662)
!13674 = !DILocation(line: 876, column: 16, scope: !13662)
!13675 = !DILocation(line: 877, column: 1, scope: !13662)
!13676 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2104, file: !2104, line: 888, type: !13677, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13679)
!13677 = !DISubroutineType(types: !13678)
!13678 = !{!109, !2108}
!13679 = !{!13680}
!13680 = !DILocalVariable(name: "thread", arg: 1, scope: !13676, file: !2104, line: 888, type: !2108)
!13681 = !DILocation(line: 0, scope: !13676)
!13682 = !DILocation(line: 893, column: 2, scope: !13676)
!13683 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2104, file: !2104, line: 897, type: !13684, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13686)
!13684 = !DISubroutineType(types: !13685)
!13685 = !{!109, !2108, !32}
!13686 = !{!13687, !13688}
!13687 = !DILocalVariable(name: "thread", arg: 1, scope: !13683, file: !2104, line: 897, type: !2108)
!13688 = !DILocalVariable(name: "options", arg: 2, scope: !13683, file: !2104, line: 897, type: !32)
!13689 = !DILocation(line: 0, scope: !13683)
!13690 = !DILocation(line: 902, column: 2, scope: !13683)
!13691 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2104, file: !2104, line: 1072, type: !13692, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13697)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{!109, !2107, !13694}
!13694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13695, size: 32)
!13695 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !158, line: 234, baseType: !13696)
!13696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !158, line: 192, elements: !2043)
!13697 = !{!13698, !13699}
!13698 = !DILocalVariable(name: "thread", arg: 1, scope: !13691, file: !2104, line: 1072, type: !2107)
!13699 = !DILocalVariable(name: "stats", arg: 2, scope: !13691, file: !2104, line: 1073, type: !13694)
!13700 = !DILocation(line: 0, scope: !13691)
!13701 = !DILocation(line: 1075, column: 14, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13691, file: !2104, line: 1075, column: 6)
!13703 = !DILocation(line: 1075, column: 23, scope: !13702)
!13704 = !DILocation(line: 1086, column: 1, scope: !13691)
!13705 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2104, file: !2104, line: 1088, type: !13706, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2211, retainedNodes: !13708)
!13706 = !DISubroutineType(types: !13707)
!13707 = !{!109, !13694}
!13708 = !{!13709}
!13709 = !DILocalVariable(name: "stats", arg: 1, scope: !13705, file: !2104, line: 1088, type: !13694)
!13710 = !DILocation(line: 0, scope: !13705)
!13711 = !DILocation(line: 1094, column: 12, scope: !13712)
!13712 = distinct !DILexicalBlock(scope: !13705, file: !2104, line: 1094, column: 6)
!13713 = !DILocation(line: 1120, column: 1, scope: !13705)
!13714 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13715, file: !13715, line: 20, type: !3060, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2043)
!13715 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13716 = !DILocation(line: 30, column: 2, scope: !13714)
!13717 = !DILocation(line: 31, column: 1, scope: !13714)
!13718 = distinct !DISubprogram(name: "idle", scope: !13715, file: !13715, line: 33, type: !3172, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13719)
!13719 = !{!13720, !13721, !13722}
!13720 = !DILocalVariable(name: "unused1", arg: 1, scope: !13718, file: !13715, line: 33, type: !107)
!13721 = !DILocalVariable(name: "unused2", arg: 2, scope: !13718, file: !13715, line: 33, type: !107)
!13722 = !DILocalVariable(name: "unused3", arg: 3, scope: !13718, file: !13715, line: 33, type: !107)
!13723 = !DILocation(line: 0, scope: !13718)
!13724 = !DILocation(line: 39, column: 2, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13726, file: !13715, line: 39, column: 2)
!13726 = distinct !DILexicalBlock(scope: !13718, file: !13715, line: 39, column: 2)
!13727 = !DILocation(line: 39, column: 2, scope: !13726)
!13728 = !DILocation(line: 39, column: 2, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13725, file: !13715, line: 39, column: 2)
!13730 = !DILocation(line: 55, column: 2, scope: !13731, inlinedAt: !13735)
!13731 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6046, file: !6046, line: 42, type: !6047, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !13732)
!13732 = !{!13733, !13734}
!13733 = !DILocalVariable(name: "key", scope: !13731, file: !6046, line: 44, type: !32)
!13734 = !DILocalVariable(name: "tmp", scope: !13731, file: !6046, line: 53, type: !32)
!13735 = distinct !DILocation(line: 62, column: 10, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13718, file: !13715, line: 41, column: 15)
!13737 = !{i64 1652653}
!13738 = !DILocation(line: 0, scope: !13731, inlinedAt: !13735)
!13739 = !DILocation(line: 86, column: 3, scope: !13736)
!13740 = !DILocation(line: 41, column: 2, scope: !13718)
!13741 = distinct !{!13741, !13740, !13742}
!13742 = !DILocation(line: 105, column: 2, scope: !13718)
!13743 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3060, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2043)
!13744 = !DILocation(line: 5629, column: 2, scope: !13743)
!13745 = !DILocation(line: 5630, column: 1, scope: !13743)
!13746 = !DISubprogram(name: "arch_cpu_idle", scope: !3326, file: !3326, line: 167, type: !3060, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!13747 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2339, file: !2339, line: 49, type: !13748, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13757)
!13748 = !DISubroutineType(types: !13749)
!13749 = !{!109, !13750}
!13750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13751, size: 32)
!13751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !13752)
!13752 = !{!13753, !13754, !13755, !13756}
!13753 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13751, file: !118, line: 2722, baseType: !2267, size: 64)
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13751, file: !118, line: 2724, baseType: !2249, size: 32, offset: 64)
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13751, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!13756 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13751, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!13757 = !{!13758}
!13758 = !DILocalVariable(name: "mutex", arg: 1, scope: !13747, file: !2339, line: 49, type: !13750)
!13759 = !DILocation(line: 0, scope: !13747)
!13760 = !DILocation(line: 51, column: 9, scope: !13747)
!13761 = !DILocation(line: 51, column: 15, scope: !13747)
!13762 = !DILocation(line: 52, column: 9, scope: !13747)
!13763 = !DILocation(line: 52, column: 20, scope: !13747)
!13764 = !DILocation(line: 54, column: 23, scope: !13747)
!13765 = !DILocation(line: 54, column: 2, scope: !13747)
!13766 = !DILocation(line: 60, column: 2, scope: !13747)
!13767 = distinct !DISubprogram(name: "z_waitq_init", scope: !13323, file: !13323, line: 47, type: !13768, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13770)
!13768 = !DISubroutineType(types: !13769)
!13769 = !{null, !2266}
!13770 = !{!13771}
!13771 = !DILocalVariable(name: "w", arg: 1, scope: !13767, file: !13323, line: 47, type: !2266)
!13772 = !DILocation(line: 0, scope: !13767)
!13773 = !DILocation(line: 49, column: 21, scope: !13767)
!13774 = !DILocation(line: 49, column: 2, scope: !13767)
!13775 = !DILocation(line: 50, column: 1, scope: !13767)
!13776 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13777, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13780)
!13777 = !DISubroutineType(types: !13778)
!13778 = !{null, !13779}
!13779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!13780 = !{!13781}
!13781 = !DILocalVariable(name: "list", arg: 1, scope: !13776, file: !127, line: 197, type: !13779)
!13782 = !DILocation(line: 0, scope: !13776)
!13783 = !DILocation(line: 199, column: 8, scope: !13776)
!13784 = !DILocation(line: 199, column: 13, scope: !13776)
!13785 = !DILocation(line: 200, column: 8, scope: !13776)
!13786 = !DILocation(line: 200, column: 13, scope: !13776)
!13787 = !DILocation(line: 201, column: 1, scope: !13776)
!13788 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2339, file: !2339, line: 95, type: !13789, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13795)
!13789 = !DISubroutineType(types: !13790)
!13790 = !{!109, !13750, !13791}
!13791 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13792)
!13792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13793)
!13793 = !{!13794}
!13794 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13792, file: !104, line: 66, baseType: !103, size: 64)
!13795 = !{!13796, !13797, !13798, !13799, !13804, !13805, !13806}
!13796 = !DILocalVariable(name: "mutex", arg: 1, scope: !13788, file: !2339, line: 95, type: !13750)
!13797 = !DILocalVariable(name: "timeout", arg: 2, scope: !13788, file: !2339, line: 95, type: !13791)
!13798 = !DILocalVariable(name: "new_prio", scope: !13788, file: !2339, line: 97, type: !109)
!13799 = !DILocalVariable(name: "key", scope: !13788, file: !2339, line: 98, type: !13800)
!13800 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !13801)
!13801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !13802)
!13802 = !{!13803}
!13803 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13801, file: !253, line: 33, baseType: !109, size: 32)
!13804 = !DILocalVariable(name: "resched", scope: !13788, file: !2339, line: 99, type: !360)
!13805 = !DILocalVariable(name: "got_mutex", scope: !13788, file: !2339, line: 146, type: !109)
!13806 = !DILocalVariable(name: "waiter", scope: !13807, file: !2339, line: 169, type: !2249)
!13807 = distinct !DILexicalBlock(scope: !13808, file: !2339, line: 168, column: 36)
!13808 = distinct !DILexicalBlock(scope: !13788, file: !2339, line: 168, column: 6)
!13809 = !DILocation(line: 0, scope: !13788)
!13810 = !DILocation(line: 1031, column: 3, scope: !13811, inlinedAt: !13814)
!13811 = distinct !DISubprogram(name: "__get_IPSR", scope: !6384, file: !6384, line: 1027, type: !7389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13812)
!13812 = !{!13813}
!13813 = !DILocalVariable(name: "result", scope: !13811, file: !6384, line: 1029, type: !110)
!13814 = distinct !DILocation(line: 48, column: 10, scope: !13815, inlinedAt: !13816)
!13815 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7395, file: !7395, line: 46, type: !7396, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !2043)
!13816 = distinct !DILocation(line: 101, column: 2, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13818, file: !2339, line: 101, column: 2)
!13818 = distinct !DILexicalBlock(scope: !13788, file: !2339, line: 101, column: 2)
!13819 = !{i64 2450996}
!13820 = !DILocation(line: 0, scope: !13811, inlinedAt: !13814)
!13821 = !DILocation(line: 48, column: 9, scope: !13815, inlinedAt: !13816)
!13822 = !DILocation(line: 101, column: 2, scope: !13818)
!13823 = !DILocation(line: 101, column: 2, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13817, file: !2339, line: 101, column: 2)
!13825 = !DILocalVariable(name: "l", arg: 1, scope: !13826, file: !253, line: 136, type: !13829)
!13826 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !13827, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13830)
!13827 = !DISubroutineType(types: !13828)
!13828 = !{!13800, !13829}
!13829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 32)
!13830 = !{!13825, !13831}
!13831 = !DILocalVariable(name: "k", scope: !13826, file: !253, line: 139, type: !13800)
!13832 = !DILocation(line: 0, scope: !13826, inlinedAt: !13833)
!13833 = distinct !DILocation(line: 105, column: 8, scope: !13788)
!13834 = !DILocation(line: 55, column: 2, scope: !13835, inlinedAt: !13839)
!13835 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6046, file: !6046, line: 42, type: !6047, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13836)
!13836 = !{!13837, !13838}
!13837 = !DILocalVariable(name: "key", scope: !13835, file: !6046, line: 44, type: !32)
!13838 = !DILocalVariable(name: "tmp", scope: !13835, file: !6046, line: 53, type: !32)
!13839 = distinct !DILocation(line: 145, column: 10, scope: !13826, inlinedAt: !13833)
!13840 = !{i64 1657061}
!13841 = !DILocation(line: 0, scope: !13835, inlinedAt: !13839)
!13842 = !DILocation(line: 148, column: 2, scope: !13843, inlinedAt: !13833)
!13843 = distinct !DILexicalBlock(scope: !13844, file: !253, line: 148, column: 2)
!13844 = distinct !DILexicalBlock(scope: !13826, file: !253, line: 148, column: 2)
!13845 = !DILocation(line: 148, column: 2, scope: !13844, inlinedAt: !13833)
!13846 = !DILocation(line: 148, column: 2, scope: !13847, inlinedAt: !13833)
!13847 = distinct !DILexicalBlock(scope: !13843, file: !253, line: 148, column: 2)
!13848 = !DILocation(line: 160, column: 2, scope: !13826, inlinedAt: !13833)
!13849 = !DILocation(line: 107, column: 6, scope: !13850)
!13850 = distinct !DILexicalBlock(scope: !13788, file: !2339, line: 107, column: 6)
!13851 = !DILocation(line: 107, column: 6, scope: !13788)
!13852 = !{!"branch_weights", i32 2000, i32 1}
!13853 = !DILocation(line: 110, column: 6, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13850, file: !2339, line: 107, column: 71)
!13855 = !DILocation(line: 110, column: 21, scope: !13854)
!13856 = !DILocation(line: 109, column: 28, scope: !13854)
!13857 = !DILocation(line: 111, column: 13, scope: !13854)
!13858 = !DILocation(line: 114, column: 18, scope: !13854)
!13859 = !DILocation(line: 109, column: 10, scope: !13854)
!13860 = !DILocation(line: 109, column: 26, scope: !13854)
!13861 = !DILocation(line: 113, column: 20, scope: !13854)
!13862 = !DILocation(line: 114, column: 10, scope: !13854)
!13863 = !DILocation(line: 114, column: 16, scope: !13854)
!13864 = !DILocalVariable(name: "key", arg: 2, scope: !13865, file: !253, line: 190, type: !13800)
!13865 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !13866, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13868)
!13866 = !DISubroutineType(types: !13867)
!13867 = !{null, !13829, !13800}
!13868 = !{!13869, !13864}
!13869 = !DILocalVariable(name: "l", arg: 1, scope: !13865, file: !253, line: 189, type: !13829)
!13870 = !DILocation(line: 0, scope: !13865, inlinedAt: !13871)
!13871 = distinct !DILocation(line: 120, column: 3, scope: !13854)
!13872 = !DILocation(line: 194, column: 2, scope: !13873, inlinedAt: !13871)
!13873 = distinct !DILexicalBlock(scope: !13874, file: !253, line: 194, column: 2)
!13874 = distinct !DILexicalBlock(scope: !13865, file: !253, line: 194, column: 2)
!13875 = !DILocation(line: 194, column: 2, scope: !13874, inlinedAt: !13871)
!13876 = !DILocation(line: 194, column: 2, scope: !13877, inlinedAt: !13871)
!13877 = distinct !DILexicalBlock(scope: !13873, file: !253, line: 194, column: 2)
!13878 = !DILocalVariable(name: "key", arg: 1, scope: !13879, file: !6046, line: 84, type: !32)
!13879 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13880)
!13880 = !{!13878}
!13881 = !DILocation(line: 0, scope: !13879, inlinedAt: !13882)
!13882 = distinct !DILocation(line: 215, column: 2, scope: !13865, inlinedAt: !13871)
!13883 = !DILocation(line: 95, column: 2, scope: !13879, inlinedAt: !13882)
!13884 = !{i64 1657878}
!13885 = !DILocation(line: 124, column: 3, scope: !13854)
!13886 = !DILocation(line: 127, column: 6, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13788, file: !2339, line: 127, column: 6)
!13888 = !DILocation(line: 127, column: 6, scope: !13788)
!13889 = !{!"branch_weights", i32 1, i32 2000}
!13890 = !DILocation(line: 0, scope: !13865, inlinedAt: !13891)
!13891 = distinct !DILocation(line: 128, column: 3, scope: !13892)
!13892 = distinct !DILexicalBlock(scope: !13887, file: !2339, line: 127, column: 50)
!13893 = !DILocation(line: 194, column: 2, scope: !13873, inlinedAt: !13891)
!13894 = !DILocation(line: 194, column: 2, scope: !13874, inlinedAt: !13891)
!13895 = !DILocation(line: 194, column: 2, scope: !13877, inlinedAt: !13891)
!13896 = !DILocation(line: 0, scope: !13879, inlinedAt: !13897)
!13897 = distinct !DILocation(line: 215, column: 2, scope: !13865, inlinedAt: !13891)
!13898 = !DILocation(line: 95, column: 2, scope: !13879, inlinedAt: !13897)
!13899 = !DILocation(line: 132, column: 3, scope: !13892)
!13900 = !DILocation(line: 137, column: 53, scope: !13788)
!13901 = !DILocation(line: 137, column: 38, scope: !13788)
!13902 = !DILocation(line: 138, column: 29, scope: !13788)
!13903 = !DILocation(line: 138, column: 10, scope: !13788)
!13904 = !DILocation(line: 137, column: 13, scope: !13788)
!13905 = !DILocation(line: 142, column: 6, scope: !13906)
!13906 = distinct !DILexicalBlock(scope: !13788, file: !2339, line: 142, column: 6)
!13907 = !DILocation(line: 142, column: 6, scope: !13788)
!13908 = !DILocation(line: 143, column: 13, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13906, file: !2339, line: 142, column: 59)
!13910 = !DILocation(line: 144, column: 2, scope: !13909)
!13911 = !DILocation(line: 146, column: 50, scope: !13788)
!13912 = !DILocation(line: 146, column: 18, scope: !13788)
!13913 = !DILocation(line: 153, column: 16, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13788, file: !2339, line: 153, column: 6)
!13915 = !DILocation(line: 153, column: 6, scope: !13788)
!13916 = !DILocation(line: 0, scope: !13826, inlinedAt: !13917)
!13917 = distinct !DILocation(line: 162, column: 8, scope: !13788)
!13918 = !DILocation(line: 55, column: 2, scope: !13835, inlinedAt: !13919)
!13919 = distinct !DILocation(line: 145, column: 10, scope: !13826, inlinedAt: !13917)
!13920 = !DILocation(line: 0, scope: !13835, inlinedAt: !13919)
!13921 = !DILocation(line: 148, column: 2, scope: !13843, inlinedAt: !13917)
!13922 = !DILocation(line: 148, column: 2, scope: !13844, inlinedAt: !13917)
!13923 = !DILocation(line: 148, column: 2, scope: !13847, inlinedAt: !13917)
!13924 = !DILocation(line: 160, column: 2, scope: !13826, inlinedAt: !13917)
!13925 = !DILocation(line: 168, column: 6, scope: !13808)
!13926 = !DILocation(line: 168, column: 6, scope: !13788)
!13927 = !DILocation(line: 169, column: 29, scope: !13807)
!13928 = !DILocation(line: 0, scope: !13807)
!13929 = !DILocation(line: 171, column: 22, scope: !13807)
!13930 = !DILocation(line: 171, column: 14, scope: !13807)
!13931 = !DILocation(line: 172, column: 42, scope: !13807)
!13932 = !DILocation(line: 172, column: 29, scope: !13807)
!13933 = !DILocation(line: 172, column: 55, scope: !13807)
!13934 = !DILocation(line: 172, column: 4, scope: !13807)
!13935 = !DILocation(line: 173, column: 11, scope: !13807)
!13936 = !DILocation(line: 177, column: 13, scope: !13807)
!13937 = !DILocation(line: 177, column: 48, scope: !13807)
!13938 = !DILocation(line: 180, column: 6, scope: !13788)
!13939 = !DILocation(line: 181, column: 3, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13941, file: !2339, line: 180, column: 15)
!13941 = distinct !DILexicalBlock(scope: !13788, file: !2339, line: 180, column: 6)
!13942 = !DILocation(line: 182, column: 2, scope: !13940)
!13943 = !DILocation(line: 0, scope: !13865, inlinedAt: !13944)
!13944 = distinct !DILocation(line: 183, column: 3, scope: !13945)
!13945 = distinct !DILexicalBlock(scope: !13941, file: !2339, line: 182, column: 9)
!13946 = !DILocation(line: 194, column: 2, scope: !13873, inlinedAt: !13944)
!13947 = !DILocation(line: 194, column: 2, scope: !13874, inlinedAt: !13944)
!13948 = !DILocation(line: 194, column: 2, scope: !13877, inlinedAt: !13944)
!13949 = !DILocation(line: 0, scope: !13879, inlinedAt: !13950)
!13950 = distinct !DILocation(line: 215, column: 2, scope: !13865, inlinedAt: !13944)
!13951 = !DILocation(line: 95, column: 2, scope: !13879, inlinedAt: !13950)
!13952 = !DILocation(line: 189, column: 1, scope: !13788)
!13953 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2339, file: !2339, line: 72, type: !13954, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13956)
!13954 = !DISubroutineType(types: !13955)
!13955 = !{!854, !854, !854}
!13956 = !{!13957, !13958, !13959}
!13957 = !DILocalVariable(name: "target", arg: 1, scope: !13953, file: !2339, line: 72, type: !854)
!13958 = !DILocalVariable(name: "limit", arg: 2, scope: !13953, file: !2339, line: 72, type: !854)
!13959 = !DILocalVariable(name: "new_prio", scope: !13953, file: !2339, line: 74, type: !109)
!13960 = !DILocation(line: 0, scope: !13953)
!13961 = !DILocation(line: 74, column: 17, scope: !13953)
!13962 = !DILocation(line: 76, column: 13, scope: !13953)
!13963 = !DILocation(line: 78, column: 2, scope: !13953)
!13964 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12962, file: !12962, line: 211, type: !13965, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13967)
!13965 = !DISubroutineType(types: !13966)
!13966 = !{!360, !109, !109}
!13967 = !{!13968, !13969}
!13968 = !DILocalVariable(name: "prio", arg: 1, scope: !13964, file: !12962, line: 211, type: !109)
!13969 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13964, file: !12962, line: 211, type: !109)
!13970 = !DILocation(line: 0, scope: !13964)
!13971 = !DILocation(line: 213, column: 9, scope: !13964)
!13972 = !DILocation(line: 213, column: 2, scope: !13964)
!13973 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2339, file: !2339, line: 81, type: !13974, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13976)
!13974 = !DISubroutineType(types: !13975)
!13975 = !{!360, !13750, !854}
!13976 = !{!13977, !13978}
!13977 = !DILocalVariable(name: "mutex", arg: 1, scope: !13973, file: !2339, line: 81, type: !13750)
!13978 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13973, file: !2339, line: 81, type: !854)
!13979 = !DILocation(line: 0, scope: !13973)
!13980 = !DILocation(line: 83, column: 13, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13973, file: !2339, line: 83, column: 6)
!13982 = !DILocation(line: 83, column: 25, scope: !13981)
!13983 = !DILocation(line: 83, column: 6, scope: !13981)
!13984 = !DILocation(line: 83, column: 30, scope: !13981)
!13985 = !DILocation(line: 83, column: 6, scope: !13973)
!13986 = !DILocation(line: 90, column: 10, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13981, file: !2339, line: 83, column: 43)
!13988 = !DILocation(line: 90, column: 3, scope: !13987)
!13989 = !DILocation(line: 93, column: 1, scope: !13973)
!13990 = distinct !DISubprogram(name: "z_waitq_head", scope: !13323, file: !13323, line: 52, type: !13991, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !13993)
!13991 = !DISubroutineType(types: !13992)
!13992 = !{!2249, !2266}
!13993 = !{!13994}
!13994 = !DILocalVariable(name: "w", arg: 1, scope: !13990, file: !13323, line: 52, type: !2266)
!13995 = !DILocation(line: 0, scope: !13990)
!13996 = !DILocation(line: 54, column: 52, scope: !13990)
!13997 = !DILocation(line: 54, column: 28, scope: !13990)
!13998 = !DILocation(line: 54, column: 9, scope: !13990)
!13999 = !DILocation(line: 54, column: 2, scope: !13990)
!14000 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14001, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !14003)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!2234, !13779}
!14003 = !{!14004}
!14004 = !DILocalVariable(name: "list", arg: 1, scope: !14000, file: !127, line: 294, type: !13779)
!14005 = !DILocation(line: 0, scope: !14000)
!14006 = !DILocation(line: 296, column: 9, scope: !14000)
!14007 = !DILocation(line: 296, column: 49, scope: !14000)
!14008 = !DILocation(line: 296, column: 2, scope: !14000)
!14009 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14010, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !14012)
!14010 = !DISubroutineType(types: !14011)
!14011 = !{!360, !13779}
!14012 = !{!14013}
!14013 = !DILocalVariable(name: "list", arg: 1, scope: !14009, file: !127, line: 266, type: !13779)
!14014 = !DILocation(line: 0, scope: !14009)
!14015 = !DILocation(line: 268, column: 15, scope: !14009)
!14016 = !DILocation(line: 268, column: 20, scope: !14009)
!14017 = !DILocation(line: 268, column: 2, scope: !14009)
!14018 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12962, file: !12962, line: 206, type: !13965, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !14019)
!14019 = !{!14020, !14021}
!14020 = !DILocalVariable(name: "prio1", arg: 1, scope: !14018, file: !12962, line: 206, type: !109)
!14021 = !DILocalVariable(name: "prio2", arg: 2, scope: !14018, file: !12962, line: 206, type: !109)
!14022 = !DILocation(line: 0, scope: !14018)
!14023 = !DILocation(line: 208, column: 15, scope: !14018)
!14024 = !DILocation(line: 208, column: 2, scope: !14018)
!14025 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12962, file: !12962, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !14026)
!14026 = !{!14027}
!14027 = !DILocalVariable(name: "prio", arg: 1, scope: !14025, file: !12962, line: 186, type: !109)
!14028 = !DILocation(line: 0, scope: !14025)
!14029 = !DILocation(line: 188, column: 9, scope: !14025)
!14030 = !DILocation(line: 188, column: 2, scope: !14025)
!14031 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12962, file: !12962, line: 181, type: !14032, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !14034)
!14032 = !DISubroutineType(types: !14033)
!14033 = !{!360, !109}
!14034 = !{!14035}
!14035 = !DILocalVariable(name: "prio", arg: 1, scope: !14031, file: !12962, line: 181, type: !109)
!14036 = !DILocation(line: 0, scope: !14031)
!14037 = !DILocation(line: 183, column: 14, scope: !14031)
!14038 = !DILocation(line: 183, column: 2, scope: !14031)
!14039 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2339, file: !2339, line: 201, type: !13748, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !14040)
!14040 = !{!14041, !14042, !14043, !14044}
!14041 = !DILocalVariable(name: "mutex", arg: 1, scope: !14039, file: !2339, line: 201, type: !13750)
!14042 = !DILocalVariable(name: "new_owner", scope: !14039, file: !2339, line: 203, type: !2249)
!14043 = !DILocalVariable(name: "key", scope: !14039, file: !2339, line: 242, type: !13800)
!14044 = !DILabel(scope: !14039, name: "k_mutex_unlock_return", file: !2339, line: 270)
!14045 = !DILocation(line: 0, scope: !14039)
!14046 = !DILocation(line: 1031, column: 3, scope: !13811, inlinedAt: !14047)
!14047 = distinct !DILocation(line: 48, column: 10, scope: !13815, inlinedAt: !14048)
!14048 = distinct !DILocation(line: 205, column: 2, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14050, file: !2339, line: 205, column: 2)
!14050 = distinct !DILexicalBlock(scope: !14039, file: !2339, line: 205, column: 2)
!14051 = !DILocation(line: 0, scope: !13811, inlinedAt: !14047)
!14052 = !DILocation(line: 48, column: 9, scope: !13815, inlinedAt: !14048)
!14053 = !DILocation(line: 205, column: 2, scope: !14050)
!14054 = !DILocation(line: 205, column: 2, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14049, file: !2339, line: 205, column: 2)
!14056 = !DILocation(line: 209, column: 2, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14039, file: !2339, line: 209, column: 2)
!14058 = !DILocation(line: 209, column: 2, scope: !14039)
!14059 = !DILocation(line: 217, column: 2, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !14039, file: !2339, line: 217, column: 2)
!14061 = !DILocation(line: 217, column: 2, scope: !14039)
!14062 = !DILocation(line: 229, column: 2, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14064, file: !2339, line: 229, column: 2)
!14064 = distinct !DILexicalBlock(scope: !14039, file: !2339, line: 229, column: 2)
!14065 = !DILocation(line: 229, column: 2, scope: !14064)
!14066 = !DILocation(line: 229, column: 2, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14063, file: !2339, line: 229, column: 2)
!14068 = !DILocation(line: 238, column: 20, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14070, file: !2339, line: 237, column: 30)
!14070 = distinct !DILexicalBlock(scope: !14039, file: !2339, line: 237, column: 6)
!14071 = !DILocation(line: 239, column: 3, scope: !14069)
!14072 = !DILocation(line: 0, scope: !13826, inlinedAt: !14073)
!14073 = distinct !DILocation(line: 242, column: 25, scope: !14039)
!14074 = !DILocation(line: 55, column: 2, scope: !13835, inlinedAt: !14075)
!14075 = distinct !DILocation(line: 145, column: 10, scope: !13826, inlinedAt: !14073)
!14076 = !DILocation(line: 0, scope: !13835, inlinedAt: !14075)
!14077 = !DILocation(line: 148, column: 2, scope: !13843, inlinedAt: !14073)
!14078 = !DILocation(line: 148, column: 2, scope: !13844, inlinedAt: !14073)
!14079 = !DILocation(line: 148, column: 2, scope: !13847, inlinedAt: !14073)
!14080 = !DILocation(line: 160, column: 2, scope: !13826, inlinedAt: !14073)
!14081 = !DILocation(line: 244, column: 34, scope: !14039)
!14082 = !DILocation(line: 244, column: 2, scope: !14039)
!14083 = !DILocation(line: 247, column: 44, scope: !14039)
!14084 = !DILocation(line: 247, column: 14, scope: !14039)
!14085 = !DILocation(line: 249, column: 15, scope: !14039)
!14086 = !DILocation(line: 254, column: 16, scope: !14087)
!14087 = distinct !DILexicalBlock(scope: !14039, file: !2339, line: 254, column: 6)
!14088 = !DILocation(line: 254, column: 6, scope: !14039)
!14089 = !DILocation(line: 260, column: 44, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14087, file: !2339, line: 254, column: 25)
!14091 = !DILocation(line: 260, column: 28, scope: !14090)
!14092 = !DILocation(line: 260, column: 26, scope: !14090)
!14093 = !DILocalVariable(name: "thread", arg: 1, scope: !14094, file: !12982, line: 65, type: !2249)
!14094 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12982, file: !12982, line: 65, type: !14095, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2231, retainedNodes: !14097)
!14095 = !DISubroutineType(types: !14096)
!14096 = !{null, !2249, !32}
!14097 = !{!14093, !14098}
!14098 = !DILocalVariable(name: "value", arg: 2, scope: !14094, file: !12982, line: 65, type: !32)
!14099 = !DILocation(line: 0, scope: !14094, inlinedAt: !14100)
!14100 = distinct !DILocation(line: 261, column: 3, scope: !14090)
!14101 = !DILocation(line: 67, column: 15, scope: !14094, inlinedAt: !14100)
!14102 = !DILocation(line: 67, column: 33, scope: !14094, inlinedAt: !14100)
!14103 = !DILocation(line: 262, column: 3, scope: !14090)
!14104 = !DILocation(line: 263, column: 3, scope: !14090)
!14105 = !DILocation(line: 264, column: 2, scope: !14090)
!14106 = !DILocation(line: 265, column: 21, scope: !14107)
!14107 = distinct !DILexicalBlock(scope: !14087, file: !2339, line: 264, column: 9)
!14108 = !DILocation(line: 0, scope: !13865, inlinedAt: !14109)
!14109 = distinct !DILocation(line: 266, column: 3, scope: !14107)
!14110 = !DILocation(line: 194, column: 2, scope: !13873, inlinedAt: !14109)
!14111 = !DILocation(line: 194, column: 2, scope: !13874, inlinedAt: !14109)
!14112 = !DILocation(line: 194, column: 2, scope: !13877, inlinedAt: !14109)
!14113 = !DILocation(line: 0, scope: !13879, inlinedAt: !14114)
!14114 = distinct !DILocation(line: 215, column: 2, scope: !13865, inlinedAt: !14109)
!14115 = !DILocation(line: 95, column: 2, scope: !13879, inlinedAt: !14114)
!14116 = !DILocation(line: 274, column: 1, scope: !14039)
!14117 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2453, file: !2453, line: 93, type: !14118, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14120)
!14118 = !DISubroutineType(types: !14119)
!14119 = !{!854, !2345, !2345}
!14120 = !{!14121, !14122, !14123, !14124}
!14121 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14117, file: !2453, line: 93, type: !2345)
!14122 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14117, file: !2453, line: 94, type: !2345)
!14123 = !DILocalVariable(name: "b1", scope: !14117, file: !2453, line: 97, type: !854)
!14124 = !DILocalVariable(name: "b2", scope: !14117, file: !2453, line: 98, type: !854)
!14125 = !DILocation(line: 0, scope: !14117)
!14126 = !DILocation(line: 97, column: 30, scope: !14117)
!14127 = !DILocation(line: 98, column: 30, scope: !14117)
!14128 = !DILocation(line: 100, column: 9, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14117, file: !2453, line: 100, column: 6)
!14130 = !DILocation(line: 100, column: 6, scope: !14117)
!14131 = !DILocation(line: 125, column: 1, scope: !14117)
!14132 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2453, file: !2453, line: 428, type: !14133, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14135)
!14133 = !DISubroutineType(types: !14134)
!14134 = !{null, !2345}
!14135 = !{!14136}
!14136 = !DILocalVariable(name: "curr", arg: 1, scope: !14132, file: !2453, line: 428, type: !2345)
!14137 = !DILocation(line: 0, scope: !14132)
!14138 = !DILocation(line: 434, column: 6, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14132, file: !2453, line: 434, column: 6)
!14140 = !DILocation(line: 434, column: 23, scope: !14139)
!14141 = !DILocation(line: 434, column: 6, scope: !14132)
!14142 = !DILocation(line: 435, column: 50, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14139, file: !2453, line: 434, column: 29)
!14144 = !DILocation(line: 435, column: 48, scope: !14143)
!14145 = !DILocation(line: 435, column: 29, scope: !14143)
!14146 = !DILocation(line: 436, column: 24, scope: !14143)
!14147 = !DILocation(line: 436, column: 3, scope: !14143)
!14148 = !DILocation(line: 437, column: 2, scope: !14143)
!14149 = !DILocation(line: 438, column: 1, scope: !14132)
!14150 = distinct !DISubprogram(name: "slice_time", scope: !2453, file: !2453, line: 407, type: !14151, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14153)
!14151 = !DISubroutineType(types: !14152)
!14152 = !{!109, !2345}
!14153 = !{!14154, !14155}
!14154 = !DILocalVariable(name: "curr", arg: 1, scope: !14150, file: !2453, line: 407, type: !2345)
!14155 = !DILocalVariable(name: "ret", scope: !14150, file: !2453, line: 409, type: !109)
!14156 = !DILocation(line: 0, scope: !14150)
!14157 = !DILocation(line: 409, column: 12, scope: !14150)
!14158 = !DILocation(line: 416, column: 2, scope: !14150)
!14159 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2453, file: !2453, line: 440, type: !14160, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{null, !854, !109}
!14162 = !{!14163, !14164, !14165, !14171}
!14163 = !DILocalVariable(name: "slice", arg: 1, scope: !14159, file: !2453, line: 440, type: !854)
!14164 = !DILocalVariable(name: "prio", arg: 2, scope: !14159, file: !2453, line: 440, type: !109)
!14165 = !DILocalVariable(name: "__i", scope: !14166, file: !2453, line: 442, type: !14167)
!14166 = distinct !DILexicalBlock(scope: !14159, file: !2453, line: 442, column: 2)
!14167 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !14168)
!14168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !14169)
!14169 = !{!14170}
!14170 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14168, file: !253, line: 33, baseType: !109, size: 32)
!14171 = !DILocalVariable(name: "__key", scope: !14166, file: !2453, line: 442, type: !14167)
!14172 = !DILocation(line: 0, scope: !14159)
!14173 = !DILocation(line: 0, scope: !14166)
!14174 = !DILocalVariable(name: "l", arg: 1, scope: !14175, file: !253, line: 136, type: !14178)
!14175 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !14176, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14179)
!14176 = !DISubroutineType(types: !14177)
!14177 = !{!14167, !14178}
!14178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!14179 = !{!14174, !14180}
!14180 = !DILocalVariable(name: "k", scope: !14175, file: !253, line: 139, type: !14167)
!14181 = !DILocation(line: 0, scope: !14175, inlinedAt: !14182)
!14182 = distinct !DILocation(line: 442, column: 2, scope: !14166)
!14183 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !14188)
!14184 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6046, file: !6046, line: 42, type: !6047, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14185)
!14185 = !{!14186, !14187}
!14186 = !DILocalVariable(name: "key", scope: !14184, file: !6046, line: 44, type: !32)
!14187 = !DILocalVariable(name: "tmp", scope: !14184, file: !6046, line: 53, type: !32)
!14188 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !14182)
!14189 = !{i64 1696624}
!14190 = !DILocation(line: 0, scope: !14184, inlinedAt: !14188)
!14191 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14182)
!14192 = distinct !DILexicalBlock(scope: !14193, file: !253, line: 148, column: 2)
!14193 = distinct !DILexicalBlock(scope: !14175, file: !253, line: 148, column: 2)
!14194 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !14182)
!14195 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !14182)
!14196 = distinct !DILexicalBlock(scope: !14192, file: !253, line: 148, column: 2)
!14197 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !14182)
!14198 = !DILocation(line: 443, column: 29, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14200, file: !2453, line: 442, column: 26)
!14200 = distinct !DILexicalBlock(scope: !14166, file: !2453, line: 442, column: 2)
!14201 = !DILocation(line: 444, column: 17, scope: !14199)
!14202 = !DILocation(line: 445, column: 51, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14199, file: !2453, line: 445, column: 7)
!14204 = !DILocation(line: 445, column: 7, scope: !14199)
!14205 = !DILocation(line: 0, scope: !14199)
!14206 = !DILocation(line: 451, column: 18, scope: !14199)
!14207 = !DILocation(line: 452, column: 3, scope: !14199)
!14208 = !DILocalVariable(name: "key", arg: 2, scope: !14209, file: !253, line: 190, type: !14167)
!14209 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !14210, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14212)
!14210 = !DISubroutineType(types: !14211)
!14211 = !{null, !14178, !14167}
!14212 = !{!14213, !14208}
!14213 = !DILocalVariable(name: "l", arg: 1, scope: !14209, file: !253, line: 189, type: !14178)
!14214 = !DILocation(line: 0, scope: !14209, inlinedAt: !14215)
!14215 = distinct !DILocation(line: 442, column: 2, scope: !14200)
!14216 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14215)
!14217 = distinct !DILexicalBlock(scope: !14218, file: !253, line: 194, column: 2)
!14218 = distinct !DILexicalBlock(scope: !14209, file: !253, line: 194, column: 2)
!14219 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !14215)
!14220 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14215)
!14221 = distinct !DILexicalBlock(scope: !14217, file: !253, line: 194, column: 2)
!14222 = !DILocalVariable(name: "key", arg: 1, scope: !14223, file: !6046, line: 84, type: !32)
!14223 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14224)
!14224 = !{!14222}
!14225 = !DILocation(line: 0, scope: !14223, inlinedAt: !14226)
!14226 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !14215)
!14227 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !14226)
!14228 = !{i64 1697441}
!14229 = !DILocation(line: 454, column: 1, scope: !14159)
!14230 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13581, file: !13581, line: 389, type: !7630, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14231)
!14231 = !{!14232}
!14232 = !DILocalVariable(name: "t", arg: 1, scope: !14230, file: !13581, line: 389, type: !110)
!14233 = !DILocation(line: 0, scope: !14230)
!14234 = !DILocalVariable(name: "t", arg: 1, scope: !14235, file: !13581, line: 102, type: !111)
!14235 = distinct !DISubprogram(name: "z_tmcvt", scope: !13581, file: !13581, line: 102, type: !13589, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14236)
!14236 = !{!14234, !14237, !14238, !14239, !14240, !14241, !14242, !14243, !14244, !14245, !14246}
!14237 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14235, file: !13581, line: 102, type: !110)
!14238 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14235, file: !13581, line: 103, type: !110)
!14239 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14235, file: !13581, line: 103, type: !360)
!14240 = !DILocalVariable(name: "result32", arg: 5, scope: !14235, file: !13581, line: 104, type: !360)
!14241 = !DILocalVariable(name: "round_up", arg: 6, scope: !14235, file: !13581, line: 104, type: !360)
!14242 = !DILocalVariable(name: "round_off", arg: 7, scope: !14235, file: !13581, line: 105, type: !360)
!14243 = !DILocalVariable(name: "mul_ratio", scope: !14235, file: !13581, line: 107, type: !360)
!14244 = !DILocalVariable(name: "div_ratio", scope: !14235, file: !13581, line: 109, type: !360)
!14245 = !DILocalVariable(name: "off", scope: !14235, file: !13581, line: 116, type: !111)
!14246 = !DILocalVariable(name: "rdivisor", scope: !14247, file: !13581, line: 119, type: !110)
!14247 = distinct !DILexicalBlock(scope: !14248, file: !13581, line: 118, column: 18)
!14248 = distinct !DILexicalBlock(scope: !14235, file: !13581, line: 118, column: 6)
!14249 = !DILocation(line: 0, scope: !14235, inlinedAt: !14250)
!14250 = distinct !DILocation(line: 392, column: 9, scope: !14230)
!14251 = !DILocation(line: 143, column: 25, scope: !14252, inlinedAt: !14250)
!14252 = distinct !DILexicalBlock(scope: !14253, file: !13581, line: 142, column: 17)
!14253 = distinct !DILexicalBlock(scope: !14254, file: !13581, line: 142, column: 7)
!14254 = distinct !DILexicalBlock(scope: !14255, file: !13581, line: 141, column: 24)
!14255 = distinct !DILexicalBlock(scope: !14256, file: !13581, line: 141, column: 13)
!14256 = distinct !DILexicalBlock(scope: !14235, file: !13581, line: 134, column: 6)
!14257 = !DILocation(line: 392, column: 2, scope: !14230)
!14258 = distinct !DISubprogram(name: "z_time_slice", scope: !2453, file: !2453, line: 502, type: !8431, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14259)
!14259 = !{!14260, !14261}
!14260 = !DILocalVariable(name: "ticks", arg: 1, scope: !14258, file: !2453, line: 502, type: !109)
!14261 = !DILocalVariable(name: "key", scope: !14258, file: !2453, line: 511, type: !14167)
!14262 = !DILocation(line: 0, scope: !14258)
!14263 = !DILocation(line: 0, scope: !14175, inlinedAt: !14264)
!14264 = distinct !DILocation(line: 511, column: 25, scope: !14258)
!14265 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !14266)
!14266 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !14264)
!14267 = !DILocation(line: 0, scope: !14184, inlinedAt: !14266)
!14268 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14264)
!14269 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !14264)
!14270 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !14264)
!14271 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !14264)
!14272 = !DILocation(line: 514, column: 6, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14258, file: !2453, line: 514, column: 6)
!14274 = !DILocation(line: 514, column: 25, scope: !14273)
!14275 = !DILocation(line: 514, column: 22, scope: !14273)
!14276 = !DILocation(line: 514, column: 6, scope: !14258)
!14277 = !DILocation(line: 515, column: 3, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14273, file: !2453, line: 514, column: 35)
!14279 = !DILocation(line: 0, scope: !14209, inlinedAt: !14280)
!14280 = distinct !DILocation(line: 516, column: 3, scope: !14278)
!14281 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14280)
!14282 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !14280)
!14283 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14280)
!14284 = !DILocation(line: 0, scope: !14223, inlinedAt: !14285)
!14285 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !14280)
!14286 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !14285)
!14287 = !DILocation(line: 517, column: 3, scope: !14278)
!14288 = !DILocation(line: 519, column: 18, scope: !14258)
!14289 = !DILocation(line: 522, column: 6, scope: !14290)
!14290 = distinct !DILexicalBlock(scope: !14258, file: !2453, line: 522, column: 6)
!14291 = !DILocation(line: 522, column: 27, scope: !14290)
!14292 = !DILocation(line: 522, column: 30, scope: !14290)
!14293 = !DILocation(line: 522, column: 6, scope: !14258)
!14294 = !DILocation(line: 523, column: 30, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14296, file: !2453, line: 523, column: 7)
!14296 = distinct !DILexicalBlock(scope: !14290, file: !2453, line: 522, column: 51)
!14297 = !DILocation(line: 523, column: 13, scope: !14295)
!14298 = !DILocation(line: 523, column: 7, scope: !14296)
!14299 = !DILocation(line: 530, column: 10, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14295, file: !2453, line: 523, column: 43)
!14301 = !DILocation(line: 531, column: 3, scope: !14300)
!14302 = !DILocation(line: 532, column: 30, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14295, file: !2453, line: 531, column: 10)
!14304 = !DILocation(line: 535, column: 29, scope: !14305)
!14305 = distinct !DILexicalBlock(scope: !14290, file: !2453, line: 534, column: 9)
!14306 = !DILocation(line: 0, scope: !14209, inlinedAt: !14307)
!14307 = distinct !DILocation(line: 537, column: 2, scope: !14258)
!14308 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14307)
!14309 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !14307)
!14310 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14307)
!14311 = !DILocation(line: 0, scope: !14223, inlinedAt: !14312)
!14312 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !14307)
!14313 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !14312)
!14314 = !DILocation(line: 538, column: 1, scope: !14258)
!14315 = distinct !DISubprogram(name: "sliceable", scope: !2453, file: !2453, line: 468, type: !14316, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14318)
!14316 = !DISubroutineType(types: !14317)
!14317 = !{!360, !2345}
!14318 = !{!14319, !14320}
!14319 = !DILocalVariable(name: "thread", arg: 1, scope: !14315, file: !2453, line: 468, type: !2345)
!14320 = !DILocalVariable(name: "ret", scope: !14315, file: !2453, line: 470, type: !360)
!14321 = !DILocation(line: 0, scope: !14315)
!14322 = !DILocation(line: 470, column: 13, scope: !14315)
!14323 = !DILocation(line: 471, column: 3, scope: !14315)
!14324 = !DILocation(line: 471, column: 7, scope: !14315)
!14325 = !DILocation(line: 472, column: 3, scope: !14315)
!14326 = !DILocation(line: 472, column: 37, scope: !14315)
!14327 = !DILocation(line: 472, column: 24, scope: !14315)
!14328 = !DILocation(line: 472, column: 43, scope: !14315)
!14329 = !DILocation(line: 472, column: 7, scope: !14315)
!14330 = !DILocation(line: 473, column: 3, scope: !14315)
!14331 = !DILocation(line: 473, column: 7, scope: !14315)
!14332 = !DILocation(line: 473, column: 6, scope: !14315)
!14333 = !DILocation(line: 479, column: 2, scope: !14315)
!14334 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2453, file: !2453, line: 482, type: !14335, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14337)
!14335 = !DISubroutineType(types: !14336)
!14336 = !{!14167, !14167}
!14337 = !{!14338, !14339}
!14338 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14334, file: !2453, line: 482, type: !14167)
!14339 = !DILocalVariable(name: "curr", scope: !14334, file: !2453, line: 484, type: !2345)
!14340 = !DILocation(line: 0, scope: !14334)
!14341 = !DILocation(line: 484, column: 26, scope: !14334)
!14342 = !DILocation(line: 493, column: 7, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14334, file: !2453, line: 493, column: 6)
!14344 = !DILocation(line: 493, column: 6, scope: !14334)
!14345 = !DILocation(line: 494, column: 3, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14343, file: !2453, line: 493, column: 49)
!14347 = !DILocation(line: 495, column: 2, scope: !14346)
!14348 = !DILocation(line: 496, column: 2, scope: !14334)
!14349 = !DILocation(line: 499, column: 1, scope: !14334)
!14350 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12962, file: !12962, line: 106, type: !14316, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14351)
!14351 = !{!14352, !14353}
!14352 = !DILocalVariable(name: "thread", arg: 1, scope: !14350, file: !12962, line: 106, type: !2345)
!14353 = !DILocalVariable(name: "state", scope: !14350, file: !12962, line: 108, type: !180)
!14354 = !DILocation(line: 0, scope: !14350)
!14355 = !DILocation(line: 108, column: 31, scope: !14350)
!14356 = !DILocation(line: 110, column: 16, scope: !14350)
!14357 = !DILocation(line: 111, column: 41, scope: !14350)
!14358 = !DILocation(line: 110, column: 2, scope: !14350)
!14359 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2453, file: !2453, line: 393, type: !14133, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14360)
!14360 = !{!14361}
!14361 = !DILocalVariable(name: "thread", arg: 1, scope: !14359, file: !2453, line: 393, type: !2345)
!14362 = !DILocation(line: 0, scope: !14359)
!14363 = !DILocation(line: 395, column: 6, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14359, file: !2453, line: 395, column: 6)
!14365 = !DILocation(line: 395, column: 6, scope: !14359)
!14366 = !DILocalVariable(name: "thread", arg: 1, scope: !14367, file: !2453, line: 264, type: !2345)
!14367 = distinct !DISubprogram(name: "dequeue_thread", scope: !2453, file: !2453, line: 264, type: !14133, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14368)
!14368 = !{!14366}
!14369 = !DILocation(line: 0, scope: !14367, inlinedAt: !14370)
!14370 = distinct !DILocation(line: 396, column: 3, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14364, file: !2453, line: 395, column: 34)
!14372 = !DILocation(line: 266, column: 15, scope: !14367, inlinedAt: !14370)
!14373 = !DILocation(line: 266, column: 28, scope: !14367, inlinedAt: !14370)
!14374 = !DILocalVariable(name: "thread", arg: 1, scope: !14375, file: !2453, line: 232, type: !2345)
!14375 = distinct !DISubprogram(name: "runq_remove", scope: !2453, file: !2453, line: 232, type: !14133, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14376)
!14376 = !{!14374}
!14377 = !DILocation(line: 0, scope: !14375, inlinedAt: !14378)
!14378 = distinct !DILocation(line: 268, column: 3, scope: !14379, inlinedAt: !14370)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !2453, line: 267, column: 35)
!14380 = distinct !DILexicalBlock(scope: !14367, file: !2453, line: 267, column: 6)
!14381 = !DILocation(line: 234, column: 2, scope: !14375, inlinedAt: !14378)
!14382 = !DILocation(line: 397, column: 2, scope: !14371)
!14383 = !DILocalVariable(name: "thread", arg: 1, scope: !14384, file: !2453, line: 250, type: !2345)
!14384 = distinct !DISubprogram(name: "queue_thread", scope: !2453, file: !2453, line: 250, type: !14133, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14385)
!14385 = !{!14383}
!14386 = !DILocation(line: 0, scope: !14384, inlinedAt: !14387)
!14387 = distinct !DILocation(line: 398, column: 2, scope: !14359)
!14388 = !DILocation(line: 252, column: 15, scope: !14384, inlinedAt: !14387)
!14389 = !DILocation(line: 252, column: 28, scope: !14384, inlinedAt: !14387)
!14390 = !DILocalVariable(name: "thread", arg: 1, scope: !14391, file: !2453, line: 227, type: !2345)
!14391 = distinct !DISubprogram(name: "runq_add", scope: !2453, file: !2453, line: 227, type: !14133, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14392)
!14392 = !{!14390}
!14393 = !DILocation(line: 0, scope: !14391, inlinedAt: !14394)
!14394 = distinct !DILocation(line: 254, column: 3, scope: !14395, inlinedAt: !14387)
!14395 = distinct !DILexicalBlock(scope: !14396, file: !2453, line: 253, column: 35)
!14396 = distinct !DILexicalBlock(scope: !14384, file: !2453, line: 253, column: 6)
!14397 = !DILocalVariable(name: "pq", arg: 1, scope: !14398, file: !2453, line: 181, type: !14401)
!14398 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2453, file: !2453, line: 181, type: !14399, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14402)
!14399 = !DISubroutineType(types: !14400)
!14400 = !{null, !14401, !2345}
!14401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 32)
!14402 = !{!14397, !14403, !14404}
!14403 = !DILocalVariable(name: "thread", arg: 2, scope: !14398, file: !2453, line: 182, type: !2345)
!14404 = !DILocalVariable(name: "t", scope: !14398, file: !2453, line: 184, type: !2345)
!14405 = !DILocation(line: 0, scope: !14398, inlinedAt: !14406)
!14406 = distinct !DILocation(line: 229, column: 2, scope: !14391, inlinedAt: !14394)
!14407 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !14406)
!14408 = distinct !DILexicalBlock(scope: !14409, file: !2453, line: 186, column: 2)
!14409 = distinct !DILexicalBlock(scope: !14398, file: !2453, line: 186, column: 2)
!14410 = !DILocation(line: 186, column: 2, scope: !14409, inlinedAt: !14406)
!14411 = !DILocation(line: 186, column: 2, scope: !14412, inlinedAt: !14406)
!14412 = distinct !DILexicalBlock(scope: !14408, file: !2453, line: 186, column: 2)
!14413 = !DILocation(line: 188, column: 2, scope: !14414, inlinedAt: !14406)
!14414 = distinct !DILexicalBlock(scope: !14398, file: !2453, line: 188, column: 2)
!14415 = !DILocation(line: 188, column: 2, scope: !14416, inlinedAt: !14406)
!14416 = distinct !DILexicalBlock(scope: !14414, file: !2453, line: 188, column: 2)
!14417 = !DILocation(line: 0, scope: !14414, inlinedAt: !14406)
!14418 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !14406)
!14419 = distinct !DILexicalBlock(scope: !14420, file: !2453, line: 189, column: 7)
!14420 = distinct !DILexicalBlock(scope: !14416, file: !2453, line: 188, column: 56)
!14421 = !DILocation(line: 189, column: 35, scope: !14419, inlinedAt: !14406)
!14422 = !DILocation(line: 189, column: 7, scope: !14420, inlinedAt: !14406)
!14423 = !DILocation(line: 191, column: 21, scope: !14424, inlinedAt: !14406)
!14424 = distinct !DILexicalBlock(scope: !14419, file: !2453, line: 189, column: 40)
!14425 = !DILocation(line: 190, column: 4, scope: !14424, inlinedAt: !14406)
!14426 = !DILocation(line: 192, column: 4, scope: !14424, inlinedAt: !14406)
!14427 = distinct !{!14427, !14413, !14428}
!14428 = !DILocation(line: 194, column: 2, scope: !14414, inlinedAt: !14406)
!14429 = !DILocation(line: 196, column: 37, scope: !14398, inlinedAt: !14406)
!14430 = !DILocation(line: 196, column: 2, scope: !14398, inlinedAt: !14406)
!14431 = !DILocation(line: 197, column: 1, scope: !14398, inlinedAt: !14406)
!14432 = !DILocation(line: 399, column: 25, scope: !14359)
!14433 = !DILocation(line: 399, column: 22, scope: !14359)
!14434 = !DILocation(line: 399, column: 2, scope: !14359)
!14435 = !DILocation(line: 400, column: 1, scope: !14359)
!14436 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12962, file: !12962, line: 136, type: !14316, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14437)
!14437 = !{!14438}
!14438 = !DILocalVariable(name: "thread", arg: 1, scope: !14436, file: !12962, line: 136, type: !2345)
!14439 = !DILocation(line: 0, scope: !14436)
!14440 = !DILocation(line: 138, column: 9, scope: !14436)
!14441 = !DILocation(line: 138, column: 2, scope: !14436)
!14442 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2453, file: !2453, line: 1137, type: !14399, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14443)
!14443 = !{!14444, !14445}
!14444 = !DILocalVariable(name: "pq", arg: 1, scope: !14442, file: !2453, line: 1137, type: !14401)
!14445 = !DILocalVariable(name: "thread", arg: 2, scope: !14442, file: !2453, line: 1137, type: !2345)
!14446 = !DILocation(line: 0, scope: !14442)
!14447 = !DILocation(line: 1139, column: 2, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14449, file: !2453, line: 1139, column: 2)
!14449 = distinct !DILexicalBlock(scope: !14442, file: !2453, line: 1139, column: 2)
!14450 = !DILocation(line: 1139, column: 2, scope: !14449)
!14451 = !DILocation(line: 1139, column: 2, scope: !14452)
!14452 = distinct !DILexicalBlock(scope: !14448, file: !2453, line: 1139, column: 2)
!14453 = !DILocation(line: 1141, column: 33, scope: !14442)
!14454 = !DILocation(line: 1141, column: 2, scope: !14442)
!14455 = !DILocation(line: 1142, column: 1, scope: !14442)
!14456 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12962, file: !12962, line: 83, type: !14316, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14457)
!14457 = !{!14458}
!14458 = !DILocalVariable(name: "thread", arg: 1, scope: !14456, file: !12962, line: 83, type: !2345)
!14459 = !DILocation(line: 0, scope: !14456)
!14460 = !DILocation(line: 89, column: 16, scope: !14456)
!14461 = !DILocation(line: 89, column: 2, scope: !14456)
!14462 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14463, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14465)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{!2449, !14401}
!14465 = !{!14466}
!14466 = !DILocalVariable(name: "list", arg: 1, scope: !14462, file: !127, line: 294, type: !14401)
!14467 = !DILocation(line: 0, scope: !14462)
!14468 = !DILocation(line: 296, column: 9, scope: !14462)
!14469 = !DILocation(line: 296, column: 49, scope: !14462)
!14470 = !DILocation(line: 296, column: 2, scope: !14462)
!14471 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14472, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14474)
!14472 = !DISubroutineType(types: !14473)
!14473 = !{null, !2449, !2449}
!14474 = !{!14475, !14476, !14477}
!14475 = !DILocalVariable(name: "successor", arg: 1, scope: !14471, file: !127, line: 443, type: !2449)
!14476 = !DILocalVariable(name: "node", arg: 2, scope: !14471, file: !127, line: 443, type: !2449)
!14477 = !DILocalVariable(name: "prev", scope: !14471, file: !127, line: 445, type: !14478)
!14478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2449)
!14479 = !DILocation(line: 0, scope: !14471)
!14480 = !DILocation(line: 445, column: 39, scope: !14471)
!14481 = !DILocation(line: 447, column: 8, scope: !14471)
!14482 = !DILocation(line: 447, column: 13, scope: !14471)
!14483 = !DILocation(line: 448, column: 8, scope: !14471)
!14484 = !DILocation(line: 448, column: 13, scope: !14471)
!14485 = !DILocation(line: 449, column: 8, scope: !14471)
!14486 = !DILocation(line: 449, column: 13, scope: !14471)
!14487 = !DILocation(line: 450, column: 18, scope: !14471)
!14488 = !DILocation(line: 451, column: 1, scope: !14471)
!14489 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14490, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14492)
!14490 = !DISubroutineType(types: !14491)
!14491 = !{!2449, !14401, !2449}
!14492 = !{!14493, !14494}
!14493 = !DILocalVariable(name: "list", arg: 1, scope: !14489, file: !127, line: 341, type: !14401)
!14494 = !DILocalVariable(name: "node", arg: 2, scope: !14489, file: !127, line: 342, type: !2449)
!14495 = !DILocation(line: 0, scope: !14489)
!14496 = !DILocation(line: 344, column: 15, scope: !14489)
!14497 = !DILocation(line: 344, column: 9, scope: !14489)
!14498 = !DILocation(line: 344, column: 26, scope: !14489)
!14499 = !DILocation(line: 344, column: 2, scope: !14489)
!14500 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14501, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14503)
!14501 = !DISubroutineType(types: !14502)
!14502 = !{null, !14401, !2449}
!14503 = !{!14504, !14505, !14506}
!14504 = !DILocalVariable(name: "list", arg: 1, scope: !14500, file: !127, line: 404, type: !14401)
!14505 = !DILocalVariable(name: "node", arg: 2, scope: !14500, file: !127, line: 404, type: !2449)
!14506 = !DILocalVariable(name: "tail", scope: !14500, file: !127, line: 406, type: !14478)
!14507 = !DILocation(line: 0, scope: !14500)
!14508 = !DILocation(line: 406, column: 34, scope: !14500)
!14509 = !DILocation(line: 408, column: 8, scope: !14500)
!14510 = !DILocation(line: 408, column: 13, scope: !14500)
!14511 = !DILocation(line: 409, column: 8, scope: !14500)
!14512 = !DILocation(line: 409, column: 13, scope: !14500)
!14513 = !DILocation(line: 411, column: 8, scope: !14500)
!14514 = !DILocation(line: 411, column: 13, scope: !14500)
!14515 = !DILocation(line: 412, column: 13, scope: !14500)
!14516 = !DILocation(line: 413, column: 1, scope: !14500)
!14517 = distinct !DISubprogram(name: "update_cache", scope: !2453, file: !2453, line: 559, type: !8431, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14518)
!14518 = !{!14519, !14520}
!14519 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14517, file: !2453, line: 559, type: !109)
!14520 = !DILocalVariable(name: "thread", scope: !14517, file: !2453, line: 562, type: !2345)
!14521 = !DILocation(line: 0, scope: !14517)
!14522 = !DILocation(line: 239, column: 9, scope: !14523, inlinedAt: !14526)
!14523 = distinct !DISubprogram(name: "runq_best", scope: !2453, file: !2453, line: 237, type: !14524, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!14524 = !DISubroutineType(types: !14525)
!14525 = !{!2345}
!14526 = distinct !DILocation(line: 314, column: 28, scope: !14527, inlinedAt: !14530)
!14527 = distinct !DISubprogram(name: "next_up", scope: !2453, file: !2453, line: 312, type: !14524, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14528)
!14528 = !{!14529}
!14529 = !DILocalVariable(name: "thread", scope: !14527, file: !2453, line: 314, type: !2345)
!14530 = distinct !DILocation(line: 562, column: 28, scope: !14517)
!14531 = !DILocation(line: 0, scope: !14527, inlinedAt: !14530)
!14532 = !DILocation(line: 340, column: 17, scope: !14527, inlinedAt: !14530)
!14533 = !DILocation(line: 340, column: 9, scope: !14527, inlinedAt: !14530)
!14534 = !DILocalVariable(name: "thread", arg: 1, scope: !14535, file: !2453, line: 127, type: !2345)
!14535 = distinct !DISubprogram(name: "should_preempt", scope: !2453, file: !2453, line: 127, type: !14536, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14538)
!14536 = !DISubroutineType(types: !14537)
!14537 = !{!360, !2345, !109}
!14538 = !{!14534, !14539}
!14539 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14535, file: !2453, line: 128, type: !109)
!14540 = !DILocation(line: 0, scope: !14535, inlinedAt: !14541)
!14541 = distinct !DILocation(line: 564, column: 6, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14517, file: !2453, line: 564, column: 6)
!14543 = !DILocation(line: 133, column: 17, scope: !14544, inlinedAt: !14541)
!14544 = distinct !DILexicalBlock(scope: !14535, file: !2453, line: 133, column: 6)
!14545 = !DILocation(line: 0, scope: !14542)
!14546 = !DILocation(line: 133, column: 6, scope: !14535, inlinedAt: !14541)
!14547 = !DILocation(line: 137, column: 2, scope: !14548, inlinedAt: !14541)
!14548 = distinct !DILexicalBlock(scope: !14549, file: !2453, line: 137, column: 2)
!14549 = distinct !DILexicalBlock(scope: !14535, file: !2453, line: 137, column: 2)
!14550 = !DILocation(line: 137, column: 2, scope: !14549, inlinedAt: !14541)
!14551 = !DILocation(line: 137, column: 2, scope: !14552, inlinedAt: !14541)
!14552 = distinct !DILexicalBlock(scope: !14548, file: !2453, line: 137, column: 2)
!14553 = !DILocation(line: 140, column: 6, scope: !14554, inlinedAt: !14541)
!14554 = distinct !DILexicalBlock(scope: !14535, file: !2453, line: 140, column: 6)
!14555 = !DILocation(line: 140, column: 6, scope: !14535, inlinedAt: !14541)
!14556 = !DILocation(line: 150, column: 9, scope: !14557, inlinedAt: !14541)
!14557 = distinct !DILexicalBlock(scope: !14535, file: !2453, line: 149, column: 6)
!14558 = !DILocation(line: 149, column: 6, scope: !14535, inlinedAt: !14541)
!14559 = !DILocation(line: 157, column: 6, scope: !14560, inlinedAt: !14541)
!14560 = distinct !DILexicalBlock(scope: !14535, file: !2453, line: 157, column: 6)
!14561 = !DILocation(line: 564, column: 6, scope: !14517)
!14562 = !DILocation(line: 566, column: 14, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14564, file: !2453, line: 566, column: 7)
!14564 = distinct !DILexicalBlock(scope: !14542, file: !2453, line: 564, column: 42)
!14565 = !DILocation(line: 566, column: 7, scope: !14564)
!14566 = !DILocation(line: 567, column: 4, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14563, file: !2453, line: 566, column: 27)
!14568 = !DILocation(line: 568, column: 3, scope: !14567)
!14569 = !DILocation(line: 585, column: 1, scope: !14517)
!14570 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2453, file: !2453, line: 1144, type: !14571, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14573)
!14571 = !DISubroutineType(types: !14572)
!14572 = !{!2345, !14401}
!14573 = !{!14574, !14575, !14576}
!14574 = !DILocalVariable(name: "pq", arg: 1, scope: !14570, file: !2453, line: 1144, type: !14401)
!14575 = !DILocalVariable(name: "thread", scope: !14570, file: !2453, line: 1146, type: !2345)
!14576 = !DILocalVariable(name: "n", scope: !14570, file: !2453, line: 1147, type: !2449)
!14577 = !DILocation(line: 0, scope: !14570)
!14578 = !DILocation(line: 1147, column: 19, scope: !14570)
!14579 = !DILocation(line: 1152, column: 2, scope: !14570)
!14580 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12962, file: !12962, line: 115, type: !14316, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14581)
!14581 = !{!14582}
!14582 = !DILocalVariable(name: "thread", arg: 1, scope: !14580, file: !12962, line: 115, type: !2345)
!14583 = !DILocation(line: 0, scope: !14580)
!14584 = !DILocation(line: 117, column: 46, scope: !14580)
!14585 = !DILocation(line: 117, column: 10, scope: !14580)
!14586 = !DILocation(line: 117, column: 9, scope: !14580)
!14587 = !DILocation(line: 117, column: 2, scope: !14580)
!14588 = distinct !DISubprogram(name: "is_preempt", scope: !2453, file: !2453, line: 62, type: !14151, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14589)
!14589 = !{!14590}
!14590 = !DILocalVariable(name: "thread", arg: 1, scope: !14588, file: !2453, line: 62, type: !2345)
!14591 = !DILocation(line: 0, scope: !14588)
!14592 = !DILocation(line: 65, column: 22, scope: !14588)
!14593 = !DILocation(line: 65, column: 30, scope: !14588)
!14594 = !DILocation(line: 65, column: 2, scope: !14588)
!14595 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13391, file: !13391, line: 35, type: !14596, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14600)
!14596 = !DISubroutineType(types: !14597)
!14597 = !{!360, !14598}
!14598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14599, size: 32)
!14599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2396)
!14600 = !{!14601}
!14601 = !DILocalVariable(name: "to", arg: 1, scope: !14595, file: !13391, line: 35, type: !14598)
!14602 = !DILocation(line: 0, scope: !14595)
!14603 = !DILocation(line: 37, column: 35, scope: !14595)
!14604 = !DILocation(line: 37, column: 10, scope: !14595)
!14605 = !DILocation(line: 37, column: 9, scope: !14595)
!14606 = !DILocation(line: 37, column: 2, scope: !14595)
!14607 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !14608, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14612)
!14608 = !DISubroutineType(types: !14609)
!14609 = !{!360, !14610}
!14610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14611, size: 32)
!14611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2355)
!14612 = !{!14613}
!14613 = !DILocalVariable(name: "node", arg: 1, scope: !14607, file: !127, line: 225, type: !14610)
!14614 = !DILocation(line: 0, scope: !14607)
!14615 = !DILocation(line: 227, column: 15, scope: !14607)
!14616 = !DILocation(line: 227, column: 20, scope: !14607)
!14617 = !DILocation(line: 227, column: 2, scope: !14607)
!14618 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14490, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14619)
!14619 = !{!14620, !14621}
!14620 = !DILocalVariable(name: "list", arg: 1, scope: !14618, file: !127, line: 325, type: !14401)
!14621 = !DILocalVariable(name: "node", arg: 2, scope: !14618, file: !127, line: 326, type: !2449)
!14622 = !DILocation(line: 0, scope: !14618)
!14623 = !DILocation(line: 328, column: 24, scope: !14618)
!14624 = !DILocation(line: 328, column: 15, scope: !14618)
!14625 = !DILocation(line: 328, column: 9, scope: !14618)
!14626 = !DILocation(line: 328, column: 45, scope: !14618)
!14627 = !DILocation(line: 328, column: 2, scope: !14618)
!14628 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14629, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14631)
!14629 = !DISubroutineType(types: !14630)
!14630 = !{!360, !14401}
!14631 = !{!14632}
!14632 = !DILocalVariable(name: "list", arg: 1, scope: !14628, file: !127, line: 266, type: !14401)
!14633 = !DILocation(line: 0, scope: !14628)
!14634 = !DILocation(line: 268, column: 15, scope: !14628)
!14635 = !DILocation(line: 268, column: 20, scope: !14628)
!14636 = !DILocation(line: 268, column: 2, scope: !14628)
!14637 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !14638, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14640)
!14638 = !DISubroutineType(types: !14639)
!14639 = !{null, !2449}
!14640 = !{!14641, !14642, !14643}
!14641 = !DILocalVariable(name: "node", arg: 1, scope: !14637, file: !127, line: 496, type: !2449)
!14642 = !DILocalVariable(name: "prev", scope: !14637, file: !127, line: 498, type: !14478)
!14643 = !DILocalVariable(name: "next", scope: !14637, file: !127, line: 499, type: !14478)
!14644 = !DILocation(line: 0, scope: !14637)
!14645 = !DILocation(line: 498, column: 34, scope: !14637)
!14646 = !DILocation(line: 499, column: 34, scope: !14637)
!14647 = !DILocation(line: 501, column: 8, scope: !14637)
!14648 = !DILocation(line: 501, column: 13, scope: !14637)
!14649 = !DILocation(line: 502, column: 8, scope: !14637)
!14650 = !DILocation(line: 502, column: 13, scope: !14637)
!14651 = !DILocation(line: 503, column: 2, scope: !14637)
!14652 = !DILocation(line: 504, column: 1, scope: !14637)
!14653 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !14638, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14654)
!14654 = !{!14655}
!14655 = !DILocalVariable(name: "node", arg: 1, scope: !14653, file: !127, line: 211, type: !2449)
!14656 = !DILocation(line: 0, scope: !14653)
!14657 = !DILocation(line: 213, column: 8, scope: !14653)
!14658 = !DILocation(line: 213, column: 13, scope: !14653)
!14659 = !DILocation(line: 214, column: 8, scope: !14653)
!14660 = !DILocation(line: 214, column: 13, scope: !14653)
!14661 = !DILocation(line: 215, column: 1, scope: !14653)
!14662 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12962, file: !12962, line: 131, type: !14663, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14665)
!14663 = !DISubroutineType(types: !14664)
!14664 = !{!360, !2345, !110}
!14665 = !{!14666, !14667}
!14666 = !DILocalVariable(name: "thread", arg: 1, scope: !14662, file: !12962, line: 131, type: !2345)
!14667 = !DILocalVariable(name: "state", arg: 2, scope: !14662, file: !12962, line: 131, type: !110)
!14668 = !DILocation(line: 0, scope: !14662)
!14669 = !DILocation(line: 133, column: 23, scope: !14662)
!14670 = !DILocation(line: 133, column: 10, scope: !14662)
!14671 = !DILocation(line: 133, column: 36, scope: !14662)
!14672 = !DILocation(line: 133, column: 45, scope: !14662)
!14673 = !DILocation(line: 133, column: 2, scope: !14662)
!14674 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12962, file: !12962, line: 211, type: !13965, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14675)
!14675 = !{!14676, !14677}
!14676 = !DILocalVariable(name: "prio", arg: 1, scope: !14674, file: !12962, line: 211, type: !109)
!14677 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14674, file: !12962, line: 211, type: !109)
!14678 = !DILocation(line: 0, scope: !14674)
!14679 = !DILocation(line: 213, column: 9, scope: !14674)
!14680 = !DILocation(line: 213, column: 2, scope: !14674)
!14681 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12962, file: !12962, line: 206, type: !13965, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14682)
!14682 = !{!14683, !14684}
!14683 = !DILocalVariable(name: "prio1", arg: 1, scope: !14681, file: !12962, line: 206, type: !109)
!14684 = !DILocalVariable(name: "prio2", arg: 2, scope: !14681, file: !12962, line: 206, type: !109)
!14685 = !DILocation(line: 0, scope: !14681)
!14686 = !DILocation(line: 208, column: 15, scope: !14681)
!14687 = !DILocation(line: 208, column: 2, scope: !14681)
!14688 = distinct !DISubprogram(name: "z_ready_thread", scope: !2453, file: !2453, line: 635, type: !14133, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14689)
!14689 = !{!14690, !14691, !14693}
!14690 = !DILocalVariable(name: "thread", arg: 1, scope: !14688, file: !2453, line: 635, type: !2345)
!14691 = !DILocalVariable(name: "__i", scope: !14692, file: !2453, line: 637, type: !14167)
!14692 = distinct !DILexicalBlock(scope: !14688, file: !2453, line: 637, column: 2)
!14693 = !DILocalVariable(name: "__key", scope: !14692, file: !2453, line: 637, type: !14167)
!14694 = !DILocation(line: 0, scope: !14688)
!14695 = !DILocation(line: 0, scope: !14692)
!14696 = !DILocation(line: 0, scope: !14175, inlinedAt: !14697)
!14697 = distinct !DILocation(line: 637, column: 2, scope: !14692)
!14698 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !14699)
!14699 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !14697)
!14700 = !DILocation(line: 0, scope: !14184, inlinedAt: !14699)
!14701 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14697)
!14702 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !14697)
!14703 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !14697)
!14704 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !14697)
!14705 = !DILocation(line: 639, column: 4, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14707, file: !2453, line: 638, column: 41)
!14707 = distinct !DILexicalBlock(scope: !14708, file: !2453, line: 638, column: 7)
!14708 = distinct !DILexicalBlock(scope: !14709, file: !2453, line: 637, column: 26)
!14709 = distinct !DILexicalBlock(scope: !14692, file: !2453, line: 637, column: 2)
!14710 = !DILocation(line: 0, scope: !14209, inlinedAt: !14711)
!14711 = distinct !DILocation(line: 637, column: 2, scope: !14709)
!14712 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14711)
!14713 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !14711)
!14714 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14711)
!14715 = !DILocation(line: 0, scope: !14223, inlinedAt: !14716)
!14716 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !14711)
!14717 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !14716)
!14718 = !DILocation(line: 642, column: 1, scope: !14688)
!14719 = distinct !DISubprogram(name: "ready_thread", scope: !2453, file: !2453, line: 617, type: !14133, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14720)
!14720 = !{!14721}
!14721 = !DILocalVariable(name: "thread", arg: 1, scope: !14719, file: !2453, line: 617, type: !2345)
!14722 = !DILocation(line: 0, scope: !14719)
!14723 = !DILocation(line: 626, column: 7, scope: !14724)
!14724 = distinct !DILexicalBlock(scope: !14719, file: !2453, line: 626, column: 6)
!14725 = !DILocation(line: 626, column: 34, scope: !14724)
!14726 = !DILocation(line: 626, column: 37, scope: !14724)
!14727 = !DILocation(line: 626, column: 6, scope: !14719)
!14728 = !DILocation(line: 0, scope: !14384, inlinedAt: !14729)
!14729 = distinct !DILocation(line: 629, column: 3, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14724, file: !2453, line: 626, column: 64)
!14731 = !DILocation(line: 252, column: 15, scope: !14384, inlinedAt: !14729)
!14732 = !DILocation(line: 252, column: 28, scope: !14384, inlinedAt: !14729)
!14733 = !DILocation(line: 0, scope: !14391, inlinedAt: !14734)
!14734 = distinct !DILocation(line: 254, column: 3, scope: !14395, inlinedAt: !14729)
!14735 = !DILocation(line: 0, scope: !14398, inlinedAt: !14736)
!14736 = distinct !DILocation(line: 229, column: 2, scope: !14391, inlinedAt: !14734)
!14737 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !14736)
!14738 = !DILocation(line: 186, column: 2, scope: !14409, inlinedAt: !14736)
!14739 = !DILocation(line: 186, column: 2, scope: !14412, inlinedAt: !14736)
!14740 = !DILocation(line: 188, column: 2, scope: !14414, inlinedAt: !14736)
!14741 = !DILocation(line: 188, column: 2, scope: !14416, inlinedAt: !14736)
!14742 = !DILocation(line: 0, scope: !14414, inlinedAt: !14736)
!14743 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !14736)
!14744 = !DILocation(line: 189, column: 35, scope: !14419, inlinedAt: !14736)
!14745 = !DILocation(line: 189, column: 7, scope: !14420, inlinedAt: !14736)
!14746 = !DILocation(line: 191, column: 21, scope: !14424, inlinedAt: !14736)
!14747 = !DILocation(line: 190, column: 4, scope: !14424, inlinedAt: !14736)
!14748 = !DILocation(line: 192, column: 4, scope: !14424, inlinedAt: !14736)
!14749 = distinct !{!14749, !14740, !14750}
!14750 = !DILocation(line: 194, column: 2, scope: !14414, inlinedAt: !14736)
!14751 = !DILocation(line: 196, column: 37, scope: !14398, inlinedAt: !14736)
!14752 = !DILocation(line: 196, column: 2, scope: !14398, inlinedAt: !14736)
!14753 = !DILocation(line: 197, column: 1, scope: !14398, inlinedAt: !14736)
!14754 = !DILocation(line: 630, column: 3, scope: !14730)
!14755 = !DILocation(line: 632, column: 2, scope: !14730)
!14756 = !DILocation(line: 633, column: 1, scope: !14719)
!14757 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12962, file: !12962, line: 120, type: !14316, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14758)
!14758 = !{!14759}
!14759 = !DILocalVariable(name: "thread", arg: 1, scope: !14757, file: !12962, line: 120, type: !2345)
!14760 = !DILocation(line: 0, scope: !14757)
!14761 = !DILocation(line: 122, column: 12, scope: !14757)
!14762 = !DILocation(line: 122, column: 62, scope: !14757)
!14763 = !DILocation(line: 123, column: 4, scope: !14757)
!14764 = !DILocation(line: 122, column: 2, scope: !14757)
!14765 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2453, file: !2453, line: 644, type: !14133, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14766)
!14766 = !{!14767, !14768, !14770}
!14767 = !DILocalVariable(name: "thread", arg: 1, scope: !14765, file: !2453, line: 644, type: !2345)
!14768 = !DILocalVariable(name: "__i", scope: !14769, file: !2453, line: 646, type: !14167)
!14769 = distinct !DILexicalBlock(scope: !14765, file: !2453, line: 646, column: 2)
!14770 = !DILocalVariable(name: "__key", scope: !14769, file: !2453, line: 646, type: !14167)
!14771 = !DILocation(line: 0, scope: !14765)
!14772 = !DILocation(line: 0, scope: !14769)
!14773 = !DILocation(line: 0, scope: !14175, inlinedAt: !14774)
!14774 = distinct !DILocation(line: 646, column: 2, scope: !14769)
!14775 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !14776)
!14776 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !14774)
!14777 = !DILocation(line: 0, scope: !14184, inlinedAt: !14776)
!14778 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14774)
!14779 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !14774)
!14780 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !14774)
!14781 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !14774)
!14782 = !DILocation(line: 647, column: 3, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14784, file: !2453, line: 646, column: 26)
!14784 = distinct !DILexicalBlock(scope: !14769, file: !2453, line: 646, column: 2)
!14785 = !DILocation(line: 0, scope: !14209, inlinedAt: !14786)
!14786 = distinct !DILocation(line: 646, column: 2, scope: !14784)
!14787 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14786)
!14788 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !14786)
!14789 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14786)
!14790 = !DILocation(line: 0, scope: !14223, inlinedAt: !14791)
!14791 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !14786)
!14792 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !14791)
!14793 = !DILocation(line: 649, column: 1, scope: !14765)
!14794 = distinct !DISubprogram(name: "z_sched_start", scope: !2453, file: !2453, line: 651, type: !14133, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14795)
!14795 = !{!14796, !14797}
!14796 = !DILocalVariable(name: "thread", arg: 1, scope: !14794, file: !2453, line: 651, type: !2345)
!14797 = !DILocalVariable(name: "key", scope: !14794, file: !2453, line: 653, type: !14167)
!14798 = !DILocation(line: 0, scope: !14794)
!14799 = !DILocation(line: 0, scope: !14175, inlinedAt: !14800)
!14800 = distinct !DILocation(line: 653, column: 25, scope: !14794)
!14801 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !14802)
!14802 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !14800)
!14803 = !DILocation(line: 0, scope: !14184, inlinedAt: !14802)
!14804 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14800)
!14805 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !14800)
!14806 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !14800)
!14807 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !14800)
!14808 = !DILocation(line: 655, column: 6, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14794, file: !2453, line: 655, column: 6)
!14810 = !DILocation(line: 655, column: 6, scope: !14794)
!14811 = !DILocation(line: 0, scope: !14209, inlinedAt: !14812)
!14812 = distinct !DILocation(line: 656, column: 3, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14809, file: !2453, line: 655, column: 36)
!14814 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14812)
!14815 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !14812)
!14816 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14812)
!14817 = !DILocation(line: 0, scope: !14223, inlinedAt: !14818)
!14818 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !14812)
!14819 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !14818)
!14820 = !DILocation(line: 657, column: 3, scope: !14813)
!14821 = !DILocation(line: 660, column: 2, scope: !14794)
!14822 = !DILocation(line: 661, column: 2, scope: !14794)
!14823 = !DILocation(line: 662, column: 2, scope: !14794)
!14824 = !DILocation(line: 663, column: 1, scope: !14794)
!14825 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12962, file: !12962, line: 126, type: !14316, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14826)
!14826 = !{!14827}
!14827 = !DILocalVariable(name: "thread", arg: 1, scope: !14825, file: !12962, line: 126, type: !2345)
!14828 = !DILocation(line: 0, scope: !14825)
!14829 = !DILocation(line: 128, column: 23, scope: !14825)
!14830 = !DILocation(line: 128, column: 36, scope: !14825)
!14831 = !DILocation(line: 128, column: 56, scope: !14825)
!14832 = !DILocation(line: 128, column: 2, scope: !14825)
!14833 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12962, file: !12962, line: 155, type: !14133, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14834)
!14834 = !{!14835}
!14835 = !DILocalVariable(name: "thread", arg: 1, scope: !14833, file: !12962, line: 155, type: !2345)
!14836 = !DILocation(line: 0, scope: !14833)
!14837 = !DILocation(line: 157, column: 15, scope: !14833)
!14838 = !DILocation(line: 157, column: 28, scope: !14833)
!14839 = !DILocation(line: 158, column: 1, scope: !14833)
!14840 = distinct !DISubprogram(name: "z_reschedule", scope: !2453, file: !2453, line: 967, type: !14210, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14841)
!14841 = !{!14842, !14843}
!14842 = !DILocalVariable(name: "lock", arg: 1, scope: !14840, file: !2453, line: 967, type: !14178)
!14843 = !DILocalVariable(name: "key", arg: 2, scope: !14840, file: !2453, line: 967, type: !14167)
!14844 = !DILocation(line: 0, scope: !14840)
!14845 = !DILocation(line: 969, column: 6, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14840, file: !2453, line: 969, column: 6)
!14847 = !DILocation(line: 969, column: 23, scope: !14846)
!14848 = !DILocation(line: 969, column: 26, scope: !14846)
!14849 = !DILocation(line: 969, column: 6, scope: !14840)
!14850 = !DILocalVariable(name: "key", arg: 2, scope: !14851, file: !13066, line: 193, type: !14167)
!14851 = distinct !DISubprogram(name: "z_swap", scope: !13066, file: !13066, line: 193, type: !14852, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14854)
!14852 = !DISubroutineType(types: !14853)
!14853 = !{!109, !14178, !14167}
!14854 = !{!14855, !14850}
!14855 = !DILocalVariable(name: "lock", arg: 1, scope: !14851, file: !13066, line: 193, type: !14178)
!14856 = !DILocation(line: 0, scope: !14851, inlinedAt: !14857)
!14857 = distinct !DILocation(line: 970, column: 3, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14846, file: !2453, line: 969, column: 39)
!14859 = !DILocalVariable(name: "l", arg: 1, scope: !14860, file: !253, line: 221, type: !14178)
!14860 = distinct !DISubprogram(name: "k_spin_release", scope: !253, file: !253, line: 221, type: !14861, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14863)
!14861 = !DISubroutineType(types: !14862)
!14862 = !{null, !14178}
!14863 = !{!14859}
!14864 = !DILocation(line: 0, scope: !14860, inlinedAt: !14865)
!14865 = distinct !DILocation(line: 195, column: 2, scope: !14851, inlinedAt: !14857)
!14866 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !14865)
!14867 = distinct !DILexicalBlock(scope: !14868, file: !253, line: 225, column: 2)
!14868 = distinct !DILexicalBlock(scope: !14860, file: !253, line: 225, column: 2)
!14869 = !DILocation(line: 225, column: 2, scope: !14868, inlinedAt: !14865)
!14870 = !DILocation(line: 225, column: 2, scope: !14871, inlinedAt: !14865)
!14871 = distinct !DILexicalBlock(scope: !14867, file: !253, line: 225, column: 2)
!14872 = !DILocation(line: 196, column: 9, scope: !14851, inlinedAt: !14857)
!14873 = !DILocation(line: 971, column: 2, scope: !14858)
!14874 = !DILocation(line: 0, scope: !14209, inlinedAt: !14875)
!14875 = distinct !DILocation(line: 972, column: 3, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14846, file: !2453, line: 971, column: 9)
!14877 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14875)
!14878 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !14875)
!14879 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14875)
!14880 = !DILocation(line: 0, scope: !14223, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !14875)
!14882 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !14881)
!14883 = !DILocation(line: 975, column: 1, scope: !14840)
!14884 = distinct !DISubprogram(name: "resched", scope: !2453, file: !2453, line: 940, type: !14885, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14887)
!14885 = !DISubroutineType(types: !14886)
!14886 = !{!360, !110}
!14887 = !{!14888}
!14888 = !DILocalVariable(name: "key", arg: 1, scope: !14884, file: !2453, line: 940, type: !110)
!14889 = !DILocation(line: 0, scope: !14884)
!14890 = !DILocalVariable(name: "key", arg: 1, scope: !14891, file: !6046, line: 112, type: !32)
!14891 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6046, file: !6046, line: 112, type: !14892, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14894)
!14892 = !DISubroutineType(types: !14893)
!14893 = !{!360, !32}
!14894 = !{!14890}
!14895 = !DILocation(line: 0, scope: !14891, inlinedAt: !14896)
!14896 = distinct !DILocation(line: 946, column: 9, scope: !14884)
!14897 = !DILocation(line: 115, column: 13, scope: !14891, inlinedAt: !14896)
!14898 = !DILocation(line: 946, column: 32, scope: !14884)
!14899 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !14903)
!14900 = distinct !DISubprogram(name: "__get_IPSR", scope: !6384, file: !6384, line: 1027, type: !7389, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14901)
!14901 = !{!14902}
!14902 = !DILocalVariable(name: "result", scope: !14900, file: !6384, line: 1029, type: !110)
!14903 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !14905)
!14904 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7395, file: !7395, line: 46, type: !7396, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!14905 = distinct !DILocation(line: 946, column: 36, scope: !14884)
!14906 = !{i64 2490559}
!14907 = !DILocation(line: 0, scope: !14900, inlinedAt: !14903)
!14908 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !14905)
!14909 = !DILocation(line: 946, column: 2, scope: !14884)
!14910 = distinct !DISubprogram(name: "need_swap", scope: !2453, file: !2453, line: 953, type: !7396, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14911)
!14911 = !{!14912}
!14912 = !DILocalVariable(name: "new_thread", scope: !14910, file: !2453, line: 959, type: !2345)
!14913 = !DILocation(line: 962, column: 31, scope: !14910)
!14914 = !DILocation(line: 0, scope: !14910)
!14915 = !DILocation(line: 963, column: 23, scope: !14910)
!14916 = !DILocation(line: 963, column: 20, scope: !14910)
!14917 = !DILocation(line: 963, column: 2, scope: !14910)
!14918 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13066, file: !13066, line: 181, type: !6394, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14919)
!14919 = !{!14920, !14921}
!14920 = !DILocalVariable(name: "key", arg: 1, scope: !14918, file: !13066, line: 181, type: !32)
!14921 = !DILocalVariable(name: "ret", scope: !14918, file: !13066, line: 183, type: !109)
!14922 = !DILocation(line: 0, scope: !14918)
!14923 = !DILocation(line: 185, column: 8, scope: !14918)
!14924 = !DILocation(line: 186, column: 2, scope: !14918)
!14925 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2453, file: !2453, line: 665, type: !14133, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14926)
!14926 = !{!14927, !14928, !14930}
!14927 = !DILocalVariable(name: "thread", arg: 1, scope: !14925, file: !2453, line: 665, type: !2345)
!14928 = !DILocalVariable(name: "__i", scope: !14929, file: !2453, line: 671, type: !14167)
!14929 = distinct !DILexicalBlock(scope: !14925, file: !2453, line: 671, column: 2)
!14930 = !DILocalVariable(name: "__key", scope: !14929, file: !2453, line: 671, type: !14167)
!14931 = !DILocation(line: 0, scope: !14925)
!14932 = !DILocation(line: 669, column: 8, scope: !14925)
!14933 = !DILocation(line: 0, scope: !14929)
!14934 = !DILocation(line: 0, scope: !14175, inlinedAt: !14935)
!14935 = distinct !DILocation(line: 671, column: 2, scope: !14929)
!14936 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !14937)
!14937 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !14935)
!14938 = !DILocation(line: 0, scope: !14184, inlinedAt: !14937)
!14939 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !14935)
!14940 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !14935)
!14941 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !14935)
!14942 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !14935)
!14943 = !DILocation(line: 672, column: 7, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14945, file: !2453, line: 672, column: 7)
!14945 = distinct !DILexicalBlock(scope: !14946, file: !2453, line: 671, column: 26)
!14946 = distinct !DILexicalBlock(scope: !14929, file: !2453, line: 671, column: 2)
!14947 = !DILocation(line: 672, column: 7, scope: !14945)
!14948 = !DILocation(line: 0, scope: !14367, inlinedAt: !14949)
!14949 = distinct !DILocation(line: 673, column: 4, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14944, file: !2453, line: 672, column: 35)
!14951 = !DILocation(line: 266, column: 15, scope: !14367, inlinedAt: !14949)
!14952 = !DILocation(line: 266, column: 28, scope: !14367, inlinedAt: !14949)
!14953 = !DILocation(line: 0, scope: !14375, inlinedAt: !14954)
!14954 = distinct !DILocation(line: 268, column: 3, scope: !14379, inlinedAt: !14949)
!14955 = !DILocation(line: 234, column: 2, scope: !14375, inlinedAt: !14954)
!14956 = !DILocation(line: 674, column: 3, scope: !14950)
!14957 = !DILocation(line: 675, column: 3, scope: !14945)
!14958 = !DILocation(line: 676, column: 26, scope: !14945)
!14959 = !DILocation(line: 676, column: 23, scope: !14945)
!14960 = !DILocation(line: 676, column: 3, scope: !14945)
!14961 = !DILocation(line: 0, scope: !14209, inlinedAt: !14962)
!14962 = distinct !DILocation(line: 671, column: 2, scope: !14946)
!14963 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !14962)
!14964 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !14962)
!14965 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !14962)
!14966 = !DILocation(line: 0, scope: !14223, inlinedAt: !14967)
!14967 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !14962)
!14968 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !14967)
!14969 = !DILocation(line: 679, column: 16, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14925, file: !2453, line: 679, column: 6)
!14971 = !DILocation(line: 679, column: 13, scope: !14970)
!14972 = !DILocation(line: 679, column: 6, scope: !14925)
!14973 = !DILocation(line: 680, column: 3, scope: !14974)
!14974 = distinct !DILexicalBlock(scope: !14970, file: !2453, line: 679, column: 26)
!14975 = !DILocation(line: 681, column: 2, scope: !14974)
!14976 = !DILocation(line: 684, column: 1, scope: !14925)
!14977 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13391, file: !13391, line: 52, type: !14151, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14978)
!14978 = !{!14979}
!14979 = !DILocalVariable(name: "thread", arg: 1, scope: !14977, file: !13391, line: 52, type: !2345)
!14980 = !DILocation(line: 0, scope: !14977)
!14981 = !DILocation(line: 54, column: 39, scope: !14977)
!14982 = !DILocation(line: 54, column: 9, scope: !14977)
!14983 = !DILocation(line: 54, column: 2, scope: !14977)
!14984 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12962, file: !12962, line: 141, type: !14133, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14985)
!14985 = !{!14986}
!14986 = !DILocalVariable(name: "thread", arg: 1, scope: !14984, file: !12962, line: 141, type: !2345)
!14987 = !DILocation(line: 0, scope: !14984)
!14988 = !DILocation(line: 143, column: 15, scope: !14984)
!14989 = !DILocation(line: 143, column: 28, scope: !14984)
!14990 = !DILocation(line: 146, column: 1, scope: !14984)
!14991 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12962, file: !12962, line: 73, type: !3060, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!14992 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !14993)
!14993 = distinct !DILocation(line: 75, column: 30, scope: !14991)
!14994 = !DILocation(line: 0, scope: !14184, inlinedAt: !14993)
!14995 = !DILocation(line: 75, column: 9, scope: !14991)
!14996 = !DILocation(line: 76, column: 1, scope: !14991)
!14997 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2453, file: !2453, line: 977, type: !6070, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14998)
!14998 = !{!14999}
!14999 = !DILocalVariable(name: "key", arg: 1, scope: !14997, file: !2453, line: 977, type: !110)
!15000 = !DILocation(line: 0, scope: !14997)
!15001 = !DILocation(line: 979, column: 6, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14997, file: !2453, line: 979, column: 6)
!15003 = !DILocation(line: 979, column: 6, scope: !14997)
!15004 = !DILocation(line: 980, column: 3, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !15002, file: !2453, line: 979, column: 20)
!15006 = !DILocation(line: 981, column: 2, scope: !15005)
!15007 = !DILocation(line: 0, scope: !14223, inlinedAt: !15008)
!15008 = distinct !DILocation(line: 982, column: 3, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !15002, file: !2453, line: 981, column: 9)
!15010 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15008)
!15011 = !DILocation(line: 985, column: 1, scope: !14997)
!15012 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2453, file: !2453, line: 695, type: !14133, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15013)
!15013 = !{!15014, !15015}
!15014 = !DILocalVariable(name: "thread", arg: 1, scope: !15012, file: !2453, line: 695, type: !2345)
!15015 = !DILocalVariable(name: "key", scope: !15012, file: !2453, line: 699, type: !14167)
!15016 = !DILocation(line: 0, scope: !15012)
!15017 = !DILocation(line: 0, scope: !14175, inlinedAt: !15018)
!15018 = distinct !DILocation(line: 699, column: 25, scope: !15012)
!15019 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15020)
!15020 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15018)
!15021 = !DILocation(line: 0, scope: !14184, inlinedAt: !15020)
!15022 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15018)
!15023 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15018)
!15024 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15018)
!15025 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15018)
!15026 = !DILocation(line: 702, column: 7, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !15012, file: !2453, line: 702, column: 6)
!15028 = !DILocation(line: 702, column: 6, scope: !15012)
!15029 = !DILocation(line: 0, scope: !14209, inlinedAt: !15030)
!15030 = distinct !DILocation(line: 703, column: 3, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15027, file: !2453, line: 702, column: 38)
!15032 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15030)
!15033 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15030)
!15034 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15030)
!15035 = !DILocation(line: 0, scope: !14223, inlinedAt: !15036)
!15036 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15030)
!15037 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15036)
!15038 = !DILocation(line: 704, column: 3, scope: !15031)
!15039 = !DILocation(line: 707, column: 2, scope: !15012)
!15040 = !DILocation(line: 708, column: 2, scope: !15012)
!15041 = !DILocation(line: 710, column: 2, scope: !15012)
!15042 = !DILocation(line: 713, column: 1, scope: !15012)
!15043 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12962, file: !12962, line: 96, type: !14316, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15044)
!15044 = !{!15045}
!15045 = !DILocalVariable(name: "thread", arg: 1, scope: !15043, file: !12962, line: 96, type: !2345)
!15046 = !DILocation(line: 0, scope: !15043)
!15047 = !DILocation(line: 98, column: 23, scope: !15043)
!15048 = !DILocation(line: 98, column: 36, scope: !15043)
!15049 = !DILocation(line: 98, column: 57, scope: !15043)
!15050 = !DILocation(line: 98, column: 2, scope: !15043)
!15051 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12962, file: !12962, line: 148, type: !14133, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15052)
!15052 = !{!15053}
!15053 = !DILocalVariable(name: "thread", arg: 1, scope: !15051, file: !12962, line: 148, type: !2345)
!15054 = !DILocation(line: 0, scope: !15051)
!15055 = !DILocation(line: 150, column: 15, scope: !15051)
!15056 = !DILocation(line: 150, column: 28, scope: !15051)
!15057 = !DILocation(line: 153, column: 1, scope: !15051)
!15058 = distinct !DISubprogram(name: "z_pend_thread", scope: !2453, file: !2453, line: 770, type: !15059, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15065)
!15059 = !DISubroutineType(types: !15060)
!15060 = !{null, !2345, !2376, !15061}
!15061 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15062)
!15062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15063)
!15063 = !{!15064}
!15064 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15062, file: !104, line: 66, baseType: !103, size: 64)
!15065 = !{!15066, !15067, !15068, !15069, !15071}
!15066 = !DILocalVariable(name: "thread", arg: 1, scope: !15058, file: !2453, line: 770, type: !2345)
!15067 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15058, file: !2453, line: 770, type: !2376)
!15068 = !DILocalVariable(name: "timeout", arg: 3, scope: !15058, file: !2453, line: 771, type: !15061)
!15069 = !DILocalVariable(name: "__i", scope: !15070, file: !2453, line: 774, type: !14167)
!15070 = distinct !DILexicalBlock(scope: !15058, file: !2453, line: 774, column: 2)
!15071 = !DILocalVariable(name: "__key", scope: !15070, file: !2453, line: 774, type: !14167)
!15072 = !DILocation(line: 0, scope: !15058)
!15073 = !DILocation(line: 773, column: 2, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15075, file: !2453, line: 773, column: 2)
!15075 = distinct !DILexicalBlock(scope: !15058, file: !2453, line: 773, column: 2)
!15076 = !DILocation(line: 773, column: 2, scope: !15075)
!15077 = !DILocation(line: 773, column: 2, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15074, file: !2453, line: 773, column: 2)
!15079 = !DILocation(line: 0, scope: !15070)
!15080 = !DILocation(line: 0, scope: !14175, inlinedAt: !15081)
!15081 = distinct !DILocation(line: 774, column: 2, scope: !15070)
!15082 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15083)
!15083 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15081)
!15084 = !DILocation(line: 0, scope: !14184, inlinedAt: !15083)
!15085 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15081)
!15086 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15081)
!15087 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15081)
!15088 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15081)
!15089 = !DILocation(line: 775, column: 3, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15091, file: !2453, line: 774, column: 26)
!15091 = distinct !DILexicalBlock(scope: !15070, file: !2453, line: 774, column: 2)
!15092 = !DILocation(line: 0, scope: !14209, inlinedAt: !15093)
!15093 = distinct !DILocation(line: 774, column: 2, scope: !15091)
!15094 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15093)
!15095 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15093)
!15096 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15093)
!15097 = !DILocation(line: 0, scope: !14223, inlinedAt: !15098)
!15098 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15093)
!15099 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15098)
!15100 = !DILocation(line: 777, column: 1, scope: !15058)
!15101 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2453, file: !2453, line: 79, type: !14316, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15102)
!15102 = !{!15103}
!15103 = !DILocalVariable(name: "thread", arg: 1, scope: !15101, file: !2453, line: 79, type: !2345)
!15104 = !DILocation(line: 0, scope: !15101)
!15105 = !DILocation(line: 81, column: 23, scope: !15101)
!15106 = !DILocation(line: 81, column: 36, scope: !15101)
!15107 = !DILocation(line: 81, column: 53, scope: !15101)
!15108 = !DILocation(line: 81, column: 2, scope: !15101)
!15109 = distinct !DISubprogram(name: "pend_locked", scope: !2453, file: !2453, line: 760, type: !15059, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15110)
!15110 = !{!15111, !15112, !15113}
!15111 = !DILocalVariable(name: "thread", arg: 1, scope: !15109, file: !2453, line: 760, type: !2345)
!15112 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15109, file: !2453, line: 760, type: !2376)
!15113 = !DILocalVariable(name: "timeout", arg: 3, scope: !15109, file: !2453, line: 761, type: !15061)
!15114 = !DILocation(line: 0, scope: !15109)
!15115 = !DILocation(line: 766, column: 2, scope: !15109)
!15116 = !DILocation(line: 767, column: 2, scope: !15109)
!15117 = !DILocation(line: 768, column: 1, scope: !15109)
!15118 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2453, file: !2453, line: 740, type: !15119, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15121)
!15119 = !DISubroutineType(types: !15120)
!15120 = !{null, !2345, !2376}
!15121 = !{!15122, !15123}
!15122 = !DILocalVariable(name: "thread", arg: 1, scope: !15118, file: !2453, line: 740, type: !2345)
!15123 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15118, file: !2453, line: 740, type: !2376)
!15124 = !DILocation(line: 0, scope: !15118)
!15125 = !DILocation(line: 742, column: 2, scope: !15118)
!15126 = !DILocation(line: 743, column: 2, scope: !15118)
!15127 = !DILocation(line: 747, column: 13, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15118, file: !2453, line: 747, column: 6)
!15129 = !DILocation(line: 747, column: 6, scope: !15118)
!15130 = !DILocation(line: 748, column: 16, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15128, file: !2453, line: 747, column: 22)
!15132 = !DILocation(line: 748, column: 26, scope: !15131)
!15133 = !DILocation(line: 749, column: 28, scope: !15131)
!15134 = !DILocation(line: 0, scope: !14398, inlinedAt: !15135)
!15135 = distinct !DILocation(line: 749, column: 3, scope: !15131)
!15136 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !15135)
!15137 = !DILocation(line: 186, column: 2, scope: !14409, inlinedAt: !15135)
!15138 = !DILocation(line: 186, column: 2, scope: !14412, inlinedAt: !15135)
!15139 = !DILocation(line: 188, column: 2, scope: !14414, inlinedAt: !15135)
!15140 = !DILocation(line: 188, column: 2, scope: !14416, inlinedAt: !15135)
!15141 = !DILocation(line: 0, scope: !14414, inlinedAt: !15135)
!15142 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !15135)
!15143 = !DILocation(line: 189, column: 35, scope: !14419, inlinedAt: !15135)
!15144 = !DILocation(line: 189, column: 7, scope: !14420, inlinedAt: !15135)
!15145 = !DILocation(line: 191, column: 21, scope: !14424, inlinedAt: !15135)
!15146 = !DILocation(line: 190, column: 4, scope: !14424, inlinedAt: !15135)
!15147 = !DILocation(line: 192, column: 4, scope: !14424, inlinedAt: !15135)
!15148 = distinct !{!15148, !15139, !15149}
!15149 = !DILocation(line: 194, column: 2, scope: !14414, inlinedAt: !15135)
!15150 = !DILocation(line: 196, column: 37, scope: !14398, inlinedAt: !15135)
!15151 = !DILocation(line: 196, column: 2, scope: !14398, inlinedAt: !15135)
!15152 = !DILocation(line: 197, column: 1, scope: !14398, inlinedAt: !15135)
!15153 = !DILocation(line: 751, column: 1, scope: !15118)
!15154 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2453, file: !2453, line: 753, type: !15155, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15157)
!15155 = !DISubroutineType(types: !15156)
!15156 = !{null, !2345, !15061}
!15157 = !{!15158, !15159}
!15158 = !DILocalVariable(name: "thread", arg: 1, scope: !15154, file: !2453, line: 753, type: !2345)
!15159 = !DILocalVariable(name: "timeout", arg: 2, scope: !15154, file: !2453, line: 753, type: !15061)
!15160 = !DILocation(line: 0, scope: !15154)
!15161 = !DILocation(line: 755, column: 7, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15154, file: !2453, line: 755, column: 6)
!15163 = !DILocation(line: 755, column: 6, scope: !15154)
!15164 = !DILocation(line: 756, column: 3, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15162, file: !2453, line: 755, column: 41)
!15166 = !DILocation(line: 757, column: 2, scope: !15165)
!15167 = !DILocation(line: 758, column: 1, scope: !15154)
!15168 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13391, file: !13391, line: 47, type: !15155, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15169)
!15169 = !{!15170, !15171}
!15170 = !DILocalVariable(name: "thread", arg: 1, scope: !15168, file: !13391, line: 47, type: !2345)
!15171 = !DILocalVariable(name: "ticks", arg: 2, scope: !15168, file: !13391, line: 47, type: !15061)
!15172 = !DILocation(line: 0, scope: !15168)
!15173 = !DILocation(line: 49, column: 30, scope: !15168)
!15174 = !DILocation(line: 49, column: 2, scope: !15168)
!15175 = !DILocation(line: 50, column: 1, scope: !15168)
!15176 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2453, file: !2453, line: 795, type: !2402, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15177)
!15177 = !{!15178, !15179, !15180, !15182, !15183}
!15178 = !DILocalVariable(name: "timeout", arg: 1, scope: !15176, file: !2453, line: 795, type: !2404)
!15179 = !DILocalVariable(name: "thread", scope: !15176, file: !2453, line: 797, type: !2345)
!15180 = !DILocalVariable(name: "__i", scope: !15181, file: !2453, line: 800, type: !14167)
!15181 = distinct !DILexicalBlock(scope: !15176, file: !2453, line: 800, column: 2)
!15182 = !DILocalVariable(name: "__key", scope: !15181, file: !2453, line: 800, type: !14167)
!15183 = !DILocalVariable(name: "killed", scope: !15184, file: !2453, line: 801, type: !360)
!15184 = distinct !DILexicalBlock(scope: !15185, file: !2453, line: 800, column: 26)
!15185 = distinct !DILexicalBlock(scope: !15181, file: !2453, line: 800, column: 2)
!15186 = !DILocation(line: 0, scope: !15176)
!15187 = !DILocation(line: 797, column: 28, scope: !15176)
!15188 = !DILocation(line: 0, scope: !15181)
!15189 = !DILocation(line: 0, scope: !14175, inlinedAt: !15190)
!15190 = distinct !DILocation(line: 800, column: 2, scope: !15181)
!15191 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15192)
!15192 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15190)
!15193 = !DILocation(line: 0, scope: !14184, inlinedAt: !15192)
!15194 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15190)
!15195 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15190)
!15196 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15190)
!15197 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15190)
!15198 = !DILocation(line: 801, column: 27, scope: !15184)
!15199 = !DILocation(line: 801, column: 32, scope: !15184)
!15200 = !DILocation(line: 801, column: 61, scope: !15184)
!15201 = !DILocation(line: 0, scope: !15184)
!15202 = !DILocation(line: 804, column: 7, scope: !15184)
!15203 = !DILocation(line: 805, column: 21, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15205, file: !2453, line: 805, column: 8)
!15205 = distinct !DILexicalBlock(scope: !15206, file: !2453, line: 804, column: 16)
!15206 = distinct !DILexicalBlock(scope: !15184, file: !2453, line: 804, column: 7)
!15207 = !DILocation(line: 805, column: 31, scope: !15204)
!15208 = !DILocation(line: 805, column: 8, scope: !15205)
!15209 = !DILocation(line: 806, column: 5, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15204, file: !2453, line: 805, column: 40)
!15211 = !DILocation(line: 807, column: 4, scope: !15210)
!15212 = !DILocation(line: 808, column: 4, scope: !15205)
!15213 = !DILocation(line: 809, column: 4, scope: !15205)
!15214 = !DILocation(line: 810, column: 4, scope: !15205)
!15215 = !DILocation(line: 811, column: 3, scope: !15205)
!15216 = !DILocation(line: 0, scope: !14209, inlinedAt: !15217)
!15217 = distinct !DILocation(line: 800, column: 2, scope: !15185)
!15218 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15217)
!15219 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15217)
!15220 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15217)
!15221 = !DILocation(line: 0, scope: !14223, inlinedAt: !15222)
!15222 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15217)
!15223 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15222)
!15224 = !DILocation(line: 813, column: 1, scope: !15176)
!15225 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2453, file: !2453, line: 779, type: !14133, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15226)
!15226 = !{!15227}
!15227 = !DILocalVariable(name: "thread", arg: 1, scope: !15225, file: !2453, line: 779, type: !2345)
!15228 = !DILocation(line: 0, scope: !15225)
!15229 = !DILocation(line: 781, column: 21, scope: !15225)
!15230 = !DILocation(line: 781, column: 2, scope: !15225)
!15231 = !DILocation(line: 782, column: 2, scope: !15225)
!15232 = !DILocation(line: 783, column: 15, scope: !15225)
!15233 = !DILocation(line: 783, column: 25, scope: !15225)
!15234 = !DILocation(line: 784, column: 1, scope: !15225)
!15235 = distinct !DISubprogram(name: "pended_on_thread", scope: !2453, file: !2453, line: 724, type: !15236, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15238)
!15236 = !DISubroutineType(types: !15237)
!15237 = !{!2376, !2345}
!15238 = !{!15239}
!15239 = !DILocalVariable(name: "thread", arg: 1, scope: !15235, file: !2453, line: 724, type: !2345)
!15240 = !DILocation(line: 0, scope: !15235)
!15241 = !DILocation(line: 726, column: 2, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15243, file: !2453, line: 726, column: 2)
!15243 = distinct !DILexicalBlock(scope: !15235, file: !2453, line: 726, column: 2)
!15244 = !DILocation(line: 726, column: 2, scope: !15243)
!15245 = !DILocation(line: 726, column: 2, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15242, file: !2453, line: 726, column: 2)
!15247 = !DILocation(line: 728, column: 2, scope: !15235)
!15248 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12962, file: !12962, line: 165, type: !14133, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15249)
!15249 = !{!15250}
!15250 = !DILocalVariable(name: "thread", arg: 1, scope: !15248, file: !12962, line: 165, type: !2345)
!15251 = !DILocation(line: 0, scope: !15248)
!15252 = !DILocation(line: 167, column: 15, scope: !15248)
!15253 = !DILocation(line: 167, column: 28, scope: !15248)
!15254 = !DILocation(line: 168, column: 1, scope: !15248)
!15255 = distinct !DISubprogram(name: "unready_thread", scope: !2453, file: !2453, line: 731, type: !14133, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15256)
!15256 = !{!15257}
!15257 = !DILocalVariable(name: "thread", arg: 1, scope: !15255, file: !2453, line: 731, type: !2345)
!15258 = !DILocation(line: 0, scope: !15255)
!15259 = !DILocation(line: 733, column: 6, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15255, file: !2453, line: 733, column: 6)
!15261 = !DILocation(line: 733, column: 6, scope: !15255)
!15262 = !DILocation(line: 0, scope: !14367, inlinedAt: !15263)
!15263 = distinct !DILocation(line: 734, column: 3, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15260, file: !2453, line: 733, column: 34)
!15265 = !DILocation(line: 266, column: 15, scope: !14367, inlinedAt: !15263)
!15266 = !DILocation(line: 266, column: 28, scope: !14367, inlinedAt: !15263)
!15267 = !DILocation(line: 0, scope: !14375, inlinedAt: !15268)
!15268 = distinct !DILocation(line: 268, column: 3, scope: !14379, inlinedAt: !15263)
!15269 = !DILocation(line: 234, column: 2, scope: !14375, inlinedAt: !15268)
!15270 = !DILocation(line: 735, column: 2, scope: !15264)
!15271 = !DILocation(line: 736, column: 25, scope: !15255)
!15272 = !DILocation(line: 736, column: 22, scope: !15255)
!15273 = !DILocation(line: 736, column: 2, scope: !15255)
!15274 = !DILocation(line: 737, column: 1, scope: !15255)
!15275 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12962, file: !12962, line: 160, type: !14133, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15276)
!15276 = !{!15277}
!15277 = !DILocalVariable(name: "thread", arg: 1, scope: !15275, file: !12962, line: 160, type: !2345)
!15278 = !DILocation(line: 0, scope: !15275)
!15279 = !DILocation(line: 162, column: 15, scope: !15275)
!15280 = !DILocation(line: 162, column: 28, scope: !15275)
!15281 = !DILocation(line: 163, column: 1, scope: !15275)
!15282 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2453, file: !2453, line: 786, type: !14133, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15283)
!15283 = !{!15284, !15285, !15287}
!15284 = !DILocalVariable(name: "thread", arg: 1, scope: !15282, file: !2453, line: 786, type: !2345)
!15285 = !DILocalVariable(name: "__i", scope: !15286, file: !2453, line: 788, type: !14167)
!15286 = distinct !DILexicalBlock(scope: !15282, file: !2453, line: 788, column: 2)
!15287 = !DILocalVariable(name: "__key", scope: !15286, file: !2453, line: 788, type: !14167)
!15288 = !DILocation(line: 0, scope: !15282)
!15289 = !DILocation(line: 0, scope: !15286)
!15290 = !DILocation(line: 0, scope: !14175, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 788, column: 2, scope: !15286)
!15292 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15291)
!15294 = !DILocation(line: 0, scope: !14184, inlinedAt: !15293)
!15295 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15291)
!15296 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15291)
!15297 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15291)
!15298 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15291)
!15299 = !DILocation(line: 789, column: 3, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15301, file: !2453, line: 788, column: 26)
!15301 = distinct !DILexicalBlock(scope: !15286, file: !2453, line: 788, column: 2)
!15302 = !DILocation(line: 0, scope: !14209, inlinedAt: !15303)
!15303 = distinct !DILocation(line: 788, column: 2, scope: !15301)
!15304 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15303)
!15305 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15303)
!15306 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15303)
!15307 = !DILocation(line: 0, scope: !14223, inlinedAt: !15308)
!15308 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15303)
!15309 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15308)
!15310 = !DILocation(line: 791, column: 1, scope: !15282)
!15311 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2453, file: !2453, line: 816, type: !15312, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15314)
!15312 = !DISubroutineType(types: !15313)
!15313 = !{!109, !110, !2376, !15061}
!15314 = !{!15315, !15316, !15317, !15318, !15319, !15321}
!15315 = !DILocalVariable(name: "key", arg: 1, scope: !15311, file: !2453, line: 816, type: !110)
!15316 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15311, file: !2453, line: 816, type: !2376)
!15317 = !DILocalVariable(name: "timeout", arg: 3, scope: !15311, file: !2453, line: 816, type: !15061)
!15318 = !DILocalVariable(name: "ret", scope: !15311, file: !2453, line: 828, type: !109)
!15319 = !DILocalVariable(name: "__i", scope: !15320, file: !2453, line: 829, type: !14167)
!15320 = distinct !DILexicalBlock(scope: !15311, file: !2453, line: 829, column: 2)
!15321 = !DILocalVariable(name: "__key", scope: !15320, file: !2453, line: 829, type: !14167)
!15322 = !DILocation(line: 0, scope: !15311)
!15323 = !DILocation(line: 823, column: 14, scope: !15311)
!15324 = !DILocation(line: 823, column: 2, scope: !15311)
!15325 = !DILocation(line: 826, column: 20, scope: !15311)
!15326 = !DILocation(line: 826, column: 18, scope: !15311)
!15327 = !DILocation(line: 828, column: 12, scope: !15311)
!15328 = !DILocation(line: 0, scope: !15320)
!15329 = !DILocation(line: 0, scope: !14175, inlinedAt: !15330)
!15330 = distinct !DILocation(line: 829, column: 2, scope: !15320)
!15331 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15330)
!15333 = !DILocation(line: 0, scope: !14184, inlinedAt: !15332)
!15334 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15330)
!15335 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15330)
!15336 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15330)
!15337 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15330)
!15338 = !DILocation(line: 830, column: 7, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15340, file: !2453, line: 830, column: 7)
!15340 = distinct !DILexicalBlock(scope: !15341, file: !2453, line: 829, column: 26)
!15341 = distinct !DILexicalBlock(scope: !15320, file: !2453, line: 829, column: 2)
!15342 = !DILocation(line: 830, column: 26, scope: !15339)
!15343 = !DILocation(line: 830, column: 23, scope: !15339)
!15344 = !DILocation(line: 830, column: 7, scope: !15340)
!15345 = !DILocation(line: 831, column: 20, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15339, file: !2453, line: 830, column: 36)
!15347 = !DILocation(line: 832, column: 3, scope: !15346)
!15348 = !DILocation(line: 0, scope: !14209, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 829, column: 2, scope: !15341)
!15350 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15349)
!15351 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15349)
!15352 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15349)
!15353 = !DILocation(line: 0, scope: !14223, inlinedAt: !15354)
!15354 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15349)
!15355 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15354)
!15356 = !DILocation(line: 834, column: 2, scope: !15311)
!15357 = distinct !DISubprogram(name: "z_pend_curr", scope: !2453, file: !2453, line: 840, type: !15358, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15360)
!15358 = !DISubroutineType(types: !15359)
!15359 = !{!109, !14178, !14167, !2376, !15061}
!15360 = !{!15361, !15362, !15363, !15364}
!15361 = !DILocalVariable(name: "lock", arg: 1, scope: !15357, file: !2453, line: 840, type: !14178)
!15362 = !DILocalVariable(name: "key", arg: 2, scope: !15357, file: !2453, line: 840, type: !14167)
!15363 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15357, file: !2453, line: 841, type: !2376)
!15364 = !DILocalVariable(name: "timeout", arg: 4, scope: !15357, file: !2453, line: 841, type: !15061)
!15365 = !DILocation(line: 0, scope: !15357)
!15366 = !DILocation(line: 844, column: 20, scope: !15357)
!15367 = !DILocation(line: 844, column: 18, scope: !15357)
!15368 = !DILocation(line: 846, column: 2, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15370, file: !2453, line: 846, column: 2)
!15370 = distinct !DILexicalBlock(scope: !15357, file: !2453, line: 846, column: 2)
!15371 = !DILocation(line: 846, column: 2, scope: !15370)
!15372 = !DILocation(line: 846, column: 2, scope: !15373)
!15373 = distinct !DILexicalBlock(scope: !15369, file: !2453, line: 846, column: 2)
!15374 = !DILocation(line: 0, scope: !14175, inlinedAt: !15375)
!15375 = distinct !DILocation(line: 856, column: 9, scope: !15357)
!15376 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15375)
!15378 = !DILocation(line: 0, scope: !14184, inlinedAt: !15377)
!15379 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15375)
!15380 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15375)
!15381 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15375)
!15382 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15375)
!15383 = !DILocation(line: 857, column: 14, scope: !15357)
!15384 = !DILocation(line: 857, column: 2, scope: !15357)
!15385 = !DILocation(line: 0, scope: !14860, inlinedAt: !15386)
!15386 = distinct !DILocation(line: 858, column: 2, scope: !15357)
!15387 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !15386)
!15388 = !DILocation(line: 225, column: 2, scope: !14868, inlinedAt: !15386)
!15389 = !DILocation(line: 225, column: 2, scope: !14871, inlinedAt: !15386)
!15390 = !DILocation(line: 0, scope: !14851, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 859, column: 9, scope: !15357)
!15392 = !DILocation(line: 0, scope: !14860, inlinedAt: !15393)
!15393 = distinct !DILocation(line: 195, column: 2, scope: !14851, inlinedAt: !15391)
!15394 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !15393)
!15395 = !DILocation(line: 225, column: 2, scope: !14868, inlinedAt: !15393)
!15396 = !DILocation(line: 225, column: 2, scope: !14871, inlinedAt: !15393)
!15397 = !DILocation(line: 196, column: 9, scope: !14851, inlinedAt: !15391)
!15398 = !DILocation(line: 859, column: 2, scope: !15357)
!15399 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2453, file: !2453, line: 862, type: !15400, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15402)
!15400 = !DISubroutineType(types: !15401)
!15401 = !{!2345, !2376}
!15402 = !{!15403, !15404, !15405, !15407}
!15403 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15399, file: !2453, line: 862, type: !2376)
!15404 = !DILocalVariable(name: "thread", scope: !15399, file: !2453, line: 864, type: !2345)
!15405 = !DILocalVariable(name: "__i", scope: !15406, file: !2453, line: 866, type: !14167)
!15406 = distinct !DILexicalBlock(scope: !15399, file: !2453, line: 866, column: 2)
!15407 = !DILocalVariable(name: "__key", scope: !15406, file: !2453, line: 866, type: !14167)
!15408 = !DILocation(line: 0, scope: !15399)
!15409 = !DILocation(line: 0, scope: !15406)
!15410 = !DILocation(line: 0, scope: !14175, inlinedAt: !15411)
!15411 = distinct !DILocation(line: 866, column: 2, scope: !15406)
!15412 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15413)
!15413 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15411)
!15414 = !DILocation(line: 0, scope: !14184, inlinedAt: !15413)
!15415 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15411)
!15416 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15411)
!15417 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15411)
!15418 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15411)
!15419 = !DILocation(line: 867, column: 12, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15421, file: !2453, line: 866, column: 26)
!15421 = distinct !DILexicalBlock(scope: !15406, file: !2453, line: 866, column: 2)
!15422 = !DILocation(line: 869, column: 14, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15420, file: !2453, line: 869, column: 7)
!15424 = !DILocation(line: 869, column: 7, scope: !15420)
!15425 = !DILocation(line: 870, column: 4, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15423, file: !2453, line: 869, column: 23)
!15427 = !DILocation(line: 871, column: 3, scope: !15426)
!15428 = !DILocation(line: 0, scope: !14209, inlinedAt: !15429)
!15429 = distinct !DILocation(line: 866, column: 2, scope: !15421)
!15430 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15429)
!15431 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15429)
!15432 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15429)
!15433 = !DILocation(line: 0, scope: !14223, inlinedAt: !15434)
!15434 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15429)
!15435 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15434)
!15436 = !DILocation(line: 874, column: 2, scope: !15399)
!15437 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2453, file: !2453, line: 877, type: !15400, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15438)
!15438 = !{!15439, !15440, !15441, !15443}
!15439 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15437, file: !2453, line: 877, type: !2376)
!15440 = !DILocalVariable(name: "thread", scope: !15437, file: !2453, line: 879, type: !2345)
!15441 = !DILocalVariable(name: "__i", scope: !15442, file: !2453, line: 881, type: !14167)
!15442 = distinct !DILexicalBlock(scope: !15437, file: !2453, line: 881, column: 2)
!15443 = !DILocalVariable(name: "__key", scope: !15442, file: !2453, line: 881, type: !14167)
!15444 = !DILocation(line: 0, scope: !15437)
!15445 = !DILocation(line: 0, scope: !15442)
!15446 = !DILocation(line: 0, scope: !14175, inlinedAt: !15447)
!15447 = distinct !DILocation(line: 881, column: 2, scope: !15442)
!15448 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15449)
!15449 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15447)
!15450 = !DILocation(line: 0, scope: !14184, inlinedAt: !15449)
!15451 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15447)
!15452 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15447)
!15453 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15447)
!15454 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15447)
!15455 = !DILocation(line: 882, column: 12, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15457, file: !2453, line: 881, column: 26)
!15457 = distinct !DILexicalBlock(scope: !15442, file: !2453, line: 881, column: 2)
!15458 = !DILocation(line: 884, column: 14, scope: !15459)
!15459 = distinct !DILexicalBlock(scope: !15456, file: !2453, line: 884, column: 7)
!15460 = !DILocation(line: 884, column: 7, scope: !15456)
!15461 = !DILocation(line: 885, column: 4, scope: !15462)
!15462 = distinct !DILexicalBlock(scope: !15459, file: !2453, line: 884, column: 23)
!15463 = !DILocation(line: 886, column: 10, scope: !15462)
!15464 = !DILocation(line: 887, column: 3, scope: !15462)
!15465 = !DILocation(line: 0, scope: !14209, inlinedAt: !15466)
!15466 = distinct !DILocation(line: 881, column: 2, scope: !15457)
!15467 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15466)
!15468 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15466)
!15469 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15466)
!15470 = !DILocation(line: 0, scope: !14223, inlinedAt: !15471)
!15471 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15466)
!15472 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15471)
!15473 = !DILocation(line: 890, column: 2, scope: !15437)
!15474 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2453, file: !2453, line: 893, type: !14133, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15475)
!15475 = !{!15476}
!15476 = !DILocalVariable(name: "thread", arg: 1, scope: !15474, file: !2453, line: 893, type: !2345)
!15477 = !DILocation(line: 0, scope: !15474)
!15478 = !DILocation(line: 0, scope: !15282, inlinedAt: !15479)
!15479 = distinct !DILocation(line: 895, column: 2, scope: !15474)
!15480 = !DILocation(line: 0, scope: !15286, inlinedAt: !15479)
!15481 = !DILocation(line: 0, scope: !14175, inlinedAt: !15482)
!15482 = distinct !DILocation(line: 788, column: 2, scope: !15286, inlinedAt: !15479)
!15483 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15484)
!15484 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15482)
!15485 = !DILocation(line: 0, scope: !14184, inlinedAt: !15484)
!15486 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15482)
!15487 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15482)
!15488 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15482)
!15489 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15482)
!15490 = !DILocation(line: 789, column: 3, scope: !15300, inlinedAt: !15479)
!15491 = !DILocation(line: 0, scope: !14209, inlinedAt: !15492)
!15492 = distinct !DILocation(line: 788, column: 2, scope: !15301, inlinedAt: !15479)
!15493 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15492)
!15494 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15492)
!15495 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15492)
!15496 = !DILocation(line: 0, scope: !14223, inlinedAt: !15497)
!15497 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15492)
!15498 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15497)
!15499 = !DILocation(line: 896, column: 8, scope: !15474)
!15500 = !DILocation(line: 897, column: 1, scope: !15474)
!15501 = distinct !DISubprogram(name: "z_set_prio", scope: !2453, file: !2453, line: 902, type: !14536, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15502)
!15502 = !{!15503, !15504, !15505, !15506, !15508}
!15503 = !DILocalVariable(name: "thread", arg: 1, scope: !15501, file: !2453, line: 902, type: !2345)
!15504 = !DILocalVariable(name: "prio", arg: 2, scope: !15501, file: !2453, line: 902, type: !109)
!15505 = !DILocalVariable(name: "need_sched", scope: !15501, file: !2453, line: 904, type: !360)
!15506 = !DILocalVariable(name: "__i", scope: !15507, file: !2453, line: 906, type: !14167)
!15507 = distinct !DILexicalBlock(scope: !15501, file: !2453, line: 906, column: 2)
!15508 = !DILocalVariable(name: "__key", scope: !15507, file: !2453, line: 906, type: !14167)
!15509 = !DILocation(line: 0, scope: !15501)
!15510 = !DILocation(line: 0, scope: !15507)
!15511 = !DILocation(line: 0, scope: !14175, inlinedAt: !15512)
!15512 = distinct !DILocation(line: 906, column: 2, scope: !15507)
!15513 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15512)
!15515 = !DILocation(line: 0, scope: !14184, inlinedAt: !15514)
!15516 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15512)
!15517 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15512)
!15518 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15512)
!15519 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15512)
!15520 = !DILocation(line: 907, column: 16, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15522, file: !2453, line: 906, column: 26)
!15522 = distinct !DILexicalBlock(scope: !15507, file: !2453, line: 906, column: 2)
!15523 = !DILocation(line: 909, column: 7, scope: !15521)
!15524 = !DILocation(line: 0, scope: !14367, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 912, column: 5, scope: !15526)
!15526 = distinct !DILexicalBlock(scope: !15527, file: !2453, line: 911, column: 63)
!15527 = distinct !DILexicalBlock(scope: !15528, file: !2453, line: 911, column: 8)
!15528 = distinct !DILexicalBlock(scope: !15529, file: !2453, line: 909, column: 19)
!15529 = distinct !DILexicalBlock(scope: !15521, file: !2453, line: 909, column: 7)
!15530 = !DILocation(line: 266, column: 28, scope: !14367, inlinedAt: !15525)
!15531 = !DILocation(line: 0, scope: !14375, inlinedAt: !15532)
!15532 = distinct !DILocation(line: 268, column: 3, scope: !14379, inlinedAt: !15525)
!15533 = !DILocation(line: 234, column: 2, scope: !14375, inlinedAt: !15532)
!15534 = !DILocation(line: 913, column: 23, scope: !15526)
!15535 = !DILocation(line: 0, scope: !14384, inlinedAt: !15536)
!15536 = distinct !DILocation(line: 914, column: 5, scope: !15526)
!15537 = !DILocation(line: 252, column: 28, scope: !14384, inlinedAt: !15536)
!15538 = !DILocation(line: 0, scope: !14391, inlinedAt: !15539)
!15539 = distinct !DILocation(line: 254, column: 3, scope: !14395, inlinedAt: !15536)
!15540 = !DILocation(line: 0, scope: !14398, inlinedAt: !15541)
!15541 = distinct !DILocation(line: 229, column: 2, scope: !14391, inlinedAt: !15539)
!15542 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !15541)
!15543 = !DILocation(line: 186, column: 2, scope: !14409, inlinedAt: !15541)
!15544 = !DILocation(line: 186, column: 2, scope: !14412, inlinedAt: !15541)
!15545 = !DILocation(line: 188, column: 2, scope: !14414, inlinedAt: !15541)
!15546 = !DILocation(line: 188, column: 2, scope: !14416, inlinedAt: !15541)
!15547 = !DILocation(line: 0, scope: !14414, inlinedAt: !15541)
!15548 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !15541)
!15549 = !DILocation(line: 189, column: 35, scope: !14419, inlinedAt: !15541)
!15550 = !DILocation(line: 189, column: 7, scope: !14420, inlinedAt: !15541)
!15551 = !DILocation(line: 190, column: 4, scope: !14424, inlinedAt: !15541)
!15552 = !DILocation(line: 192, column: 4, scope: !14424, inlinedAt: !15541)
!15553 = distinct !{!15553, !15545, !15554}
!15554 = !DILocation(line: 194, column: 2, scope: !14414, inlinedAt: !15541)
!15555 = !DILocation(line: 196, column: 2, scope: !14398, inlinedAt: !15541)
!15556 = !DILocation(line: 197, column: 1, scope: !14398, inlinedAt: !15541)
!15557 = !DILocation(line: 918, column: 4, scope: !15528)
!15558 = !DILocation(line: 919, column: 3, scope: !15528)
!15559 = !DILocation(line: 920, column: 22, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15529, file: !2453, line: 919, column: 10)
!15561 = !DILocation(line: 0, scope: !14209, inlinedAt: !15562)
!15562 = distinct !DILocation(line: 906, column: 2, scope: !15522)
!15563 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15562)
!15564 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15562)
!15565 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15562)
!15566 = !DILocation(line: 0, scope: !14223, inlinedAt: !15567)
!15567 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15562)
!15568 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15567)
!15569 = !DILocation(line: 926, column: 2, scope: !15501)
!15570 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2453, file: !2453, line: 929, type: !15571, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15573)
!15571 = !DISubroutineType(types: !15572)
!15572 = !{null, !2345, !109}
!15573 = !{!15574, !15575, !15576}
!15574 = !DILocalVariable(name: "thread", arg: 1, scope: !15570, file: !2453, line: 929, type: !2345)
!15575 = !DILocalVariable(name: "prio", arg: 2, scope: !15570, file: !2453, line: 929, type: !109)
!15576 = !DILocalVariable(name: "need_sched", scope: !15570, file: !2453, line: 931, type: !360)
!15577 = !DILocation(line: 0, scope: !15570)
!15578 = !DILocation(line: 931, column: 20, scope: !15570)
!15579 = !DILocation(line: 935, column: 17, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15570, file: !2453, line: 935, column: 6)
!15581 = !DILocation(line: 935, column: 20, scope: !15580)
!15582 = !DILocation(line: 935, column: 35, scope: !15580)
!15583 = !DILocation(line: 935, column: 48, scope: !15580)
!15584 = !DILocation(line: 935, column: 6, scope: !15570)
!15585 = !DILocation(line: 936, column: 3, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15580, file: !2453, line: 935, column: 55)
!15587 = !DILocation(line: 937, column: 2, scope: !15586)
!15588 = !DILocation(line: 938, column: 1, scope: !15570)
!15589 = distinct !DISubprogram(name: "k_sched_lock", scope: !2453, file: !2453, line: 987, type: !3060, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15590)
!15590 = !{!15591, !15593}
!15591 = !DILocalVariable(name: "__i", scope: !15592, file: !2453, line: 989, type: !14167)
!15592 = distinct !DILexicalBlock(scope: !15589, file: !2453, line: 989, column: 2)
!15593 = !DILocalVariable(name: "__key", scope: !15592, file: !2453, line: 989, type: !14167)
!15594 = !DILocation(line: 0, scope: !15592)
!15595 = !DILocation(line: 0, scope: !14175, inlinedAt: !15596)
!15596 = distinct !DILocation(line: 989, column: 2, scope: !15592)
!15597 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15598)
!15598 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15596)
!15599 = !DILocation(line: 0, scope: !14184, inlinedAt: !15598)
!15600 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15596)
!15601 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15596)
!15602 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15596)
!15603 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15596)
!15604 = !DILocation(line: 992, column: 3, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15606, file: !2453, line: 989, column: 26)
!15606 = distinct !DILexicalBlock(scope: !15592, file: !2453, line: 989, column: 2)
!15607 = !DILocation(line: 0, scope: !14209, inlinedAt: !15608)
!15608 = distinct !DILocation(line: 989, column: 2, scope: !15606)
!15609 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15608)
!15610 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15608)
!15611 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15608)
!15612 = !DILocation(line: 0, scope: !14223, inlinedAt: !15613)
!15613 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15608)
!15614 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15613)
!15615 = !DILocation(line: 994, column: 1, scope: !15589)
!15616 = distinct !DISubprogram(name: "z_sched_lock", scope: !12962, file: !12962, line: 251, type: !3060, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!15617 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !15619)
!15619 = distinct !DILocation(line: 253, column: 2, scope: !15620)
!15620 = distinct !DILexicalBlock(scope: !15621, file: !12962, line: 253, column: 2)
!15621 = distinct !DILexicalBlock(scope: !15616, file: !12962, line: 253, column: 2)
!15622 = !DILocation(line: 0, scope: !14900, inlinedAt: !15618)
!15623 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !15619)
!15624 = !DILocation(line: 253, column: 2, scope: !15621)
!15625 = !DILocation(line: 253, column: 2, scope: !15626)
!15626 = distinct !DILexicalBlock(scope: !15620, file: !12962, line: 253, column: 2)
!15627 = !DILocation(line: 254, column: 2, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15629, file: !12962, line: 254, column: 2)
!15629 = distinct !DILexicalBlock(scope: !15616, file: !12962, line: 254, column: 2)
!15630 = !DILocation(line: 254, column: 2, scope: !15629)
!15631 = !DILocation(line: 254, column: 2, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15628, file: !12962, line: 254, column: 2)
!15633 = !DILocation(line: 256, column: 2, scope: !15616)
!15634 = !DILocation(line: 258, column: 2, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15616, file: !12962, line: 258, column: 2)
!15636 = !{i64 2152351193}
!15637 = !DILocation(line: 259, column: 1, scope: !15616)
!15638 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2453, file: !2453, line: 996, type: !3060, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15639)
!15639 = !{!15640, !15642}
!15640 = !DILocalVariable(name: "__i", scope: !15641, file: !2453, line: 998, type: !14167)
!15641 = distinct !DILexicalBlock(scope: !15638, file: !2453, line: 998, column: 2)
!15642 = !DILocalVariable(name: "__key", scope: !15641, file: !2453, line: 998, type: !14167)
!15643 = !DILocation(line: 0, scope: !15641)
!15644 = !DILocation(line: 0, scope: !14175, inlinedAt: !15645)
!15645 = distinct !DILocation(line: 998, column: 2, scope: !15641)
!15646 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15647)
!15647 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15645)
!15648 = !DILocation(line: 0, scope: !14184, inlinedAt: !15647)
!15649 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15645)
!15650 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15645)
!15651 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15645)
!15652 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15645)
!15653 = !DILocation(line: 999, column: 3, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15655, file: !2453, line: 999, column: 3)
!15655 = distinct !DILexicalBlock(scope: !15656, file: !2453, line: 999, column: 3)
!15656 = distinct !DILexicalBlock(scope: !15657, file: !2453, line: 998, column: 26)
!15657 = distinct !DILexicalBlock(scope: !15641, file: !2453, line: 998, column: 2)
!15658 = !DILocation(line: 999, column: 3, scope: !15655)
!15659 = !DILocation(line: 999, column: 3, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15654, file: !2453, line: 999, column: 3)
!15661 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !15662)
!15662 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !15663)
!15663 = distinct !DILocation(line: 1000, column: 3, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15665, file: !2453, line: 1000, column: 3)
!15665 = distinct !DILexicalBlock(scope: !15656, file: !2453, line: 1000, column: 3)
!15666 = !DILocation(line: 0, scope: !14900, inlinedAt: !15662)
!15667 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !15663)
!15668 = !DILocation(line: 1000, column: 3, scope: !15665)
!15669 = !DILocation(line: 1000, column: 3, scope: !15670)
!15670 = distinct !DILexicalBlock(scope: !15664, file: !2453, line: 1000, column: 3)
!15671 = !DILocation(line: 1002, column: 5, scope: !15656)
!15672 = !DILocation(line: 1002, column: 20, scope: !15656)
!15673 = !DILocation(line: 1002, column: 3, scope: !15656)
!15674 = !DILocation(line: 1003, column: 3, scope: !15656)
!15675 = !DILocation(line: 0, scope: !14209, inlinedAt: !15676)
!15676 = distinct !DILocation(line: 998, column: 2, scope: !15657)
!15677 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !15676)
!15678 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !15676)
!15679 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !15676)
!15680 = !DILocation(line: 0, scope: !14223, inlinedAt: !15681)
!15681 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !15676)
!15682 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !15681)
!15683 = !DILocation(line: 1011, column: 2, scope: !15638)
!15684 = !DILocation(line: 1012, column: 1, scope: !15638)
!15685 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2453, file: !2453, line: 1014, type: !14524, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!15686 = !DILocation(line: 1028, column: 25, scope: !15685)
!15687 = !DILocation(line: 1028, column: 2, scope: !15685)
!15688 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2453, file: !2453, line: 1155, type: !15689, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15691)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{!360, !2374, !2374}
!15691 = !{!15692, !15693, !15694, !15695, !15696}
!15692 = !DILocalVariable(name: "a", arg: 1, scope: !15688, file: !2453, line: 1155, type: !2374)
!15693 = !DILocalVariable(name: "b", arg: 2, scope: !15688, file: !2453, line: 1155, type: !2374)
!15694 = !DILocalVariable(name: "thread_a", scope: !15688, file: !2453, line: 1157, type: !2345)
!15695 = !DILocalVariable(name: "thread_b", scope: !15688, file: !2453, line: 1157, type: !2345)
!15696 = !DILocalVariable(name: "cmp", scope: !15688, file: !2453, line: 1158, type: !854)
!15697 = !DILocation(line: 0, scope: !15688)
!15698 = !DILocation(line: 1160, column: 13, scope: !15688)
!15699 = !DILocation(line: 1161, column: 13, scope: !15688)
!15700 = !DILocation(line: 1163, column: 8, scope: !15688)
!15701 = !DILocation(line: 1165, column: 10, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15688, file: !2453, line: 1165, column: 6)
!15703 = !DILocation(line: 1165, column: 6, scope: !15688)
!15704 = !DILocation(line: 1167, column: 17, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15702, file: !2453, line: 1167, column: 13)
!15706 = !DILocation(line: 1167, column: 13, scope: !15702)
!15707 = !DILocation(line: 1170, column: 25, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15705, file: !2453, line: 1169, column: 9)
!15709 = !DILocation(line: 1170, column: 52, scope: !15708)
!15710 = !DILocation(line: 1170, column: 35, scope: !15708)
!15711 = !DILocation(line: 1170, column: 3, scope: !15708)
!15712 = !DILocation(line: 0, scope: !15702)
!15713 = !DILocation(line: 1173, column: 1, scope: !15688)
!15714 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2453, file: !2453, line: 1175, type: !15715, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15730)
!15715 = !DISubroutineType(types: !15716)
!15716 = !{null, !15717, !2345}
!15717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15718, size: 32)
!15718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15719, line: 37, size: 128, elements: !15720)
!15719 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15720 = !{!15721, !15729}
!15721 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15718, file: !15719, line: 38, baseType: !15722, size: 96)
!15722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !170, line: 83, size: 96, elements: !15723)
!15723 = !{!15724, !15725, !15728}
!15724 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15722, file: !170, line: 84, baseType: !2374, size: 32)
!15725 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15722, file: !170, line: 85, baseType: !15726, size: 32, offset: 32)
!15726 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !170, line: 81, baseType: !15727)
!15727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15689, size: 32)
!15728 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15722, file: !170, line: 86, baseType: !109, size: 32, offset: 64)
!15729 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15718, file: !15719, line: 39, baseType: !109, size: 32, offset: 96)
!15730 = !{!15731, !15732, !15733, !15734, !15743}
!15731 = !DILocalVariable(name: "pq", arg: 1, scope: !15714, file: !2453, line: 1175, type: !15717)
!15732 = !DILocalVariable(name: "thread", arg: 2, scope: !15714, file: !2453, line: 1175, type: !2345)
!15733 = !DILocalVariable(name: "t", scope: !15714, file: !2453, line: 1177, type: !2345)
!15734 = !DILocalVariable(name: "__f", scope: !15735, file: !2453, line: 1190, type: !15738)
!15735 = distinct !DILexicalBlock(scope: !15736, file: !2453, line: 1190, column: 3)
!15736 = distinct !DILexicalBlock(scope: !15737, file: !2453, line: 1189, column: 27)
!15737 = distinct !DILexicalBlock(scope: !15714, file: !2453, line: 1189, column: 6)
!15738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !170, line: 155, size: 96, elements: !15739)
!15739 = !{!15740, !15741, !15742}
!15740 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15738, file: !170, line: 156, baseType: !2448, size: 32)
!15741 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15738, file: !170, line: 157, baseType: !286, size: 32, offset: 32)
!15742 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15738, file: !170, line: 158, baseType: !854, size: 32, offset: 64)
!15743 = !DILocalVariable(name: "n", scope: !15744, file: !2453, line: 1190, type: !2374)
!15744 = distinct !DILexicalBlock(scope: !15745, file: !2453, line: 1190, column: 3)
!15745 = distinct !DILexicalBlock(scope: !15735, file: !2453, line: 1190, column: 3)
!15746 = !DILocation(line: 0, scope: !15714)
!15747 = !DILocation(line: 1179, column: 2, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15749, file: !2453, line: 1179, column: 2)
!15749 = distinct !DILexicalBlock(scope: !15714, file: !2453, line: 1179, column: 2)
!15750 = !DILocation(line: 1179, column: 2, scope: !15749)
!15751 = !DILocation(line: 1179, column: 2, scope: !15752)
!15752 = distinct !DILexicalBlock(scope: !15748, file: !2453, line: 1179, column: 2)
!15753 = !DILocation(line: 1181, column: 31, scope: !15714)
!15754 = !DILocation(line: 1181, column: 45, scope: !15714)
!15755 = !DILocation(line: 1181, column: 15, scope: !15714)
!15756 = !DILocation(line: 1181, column: 25, scope: !15714)
!15757 = !DILocation(line: 1189, column: 11, scope: !15737)
!15758 = !DILocation(line: 1189, column: 7, scope: !15737)
!15759 = !DILocation(line: 1189, column: 6, scope: !15714)
!15760 = !DILocation(line: 1190, column: 3, scope: !15735)
!15761 = !DILocation(line: 1190, column: 3, scope: !15744)
!15762 = !DILocation(line: 0, scope: !15744)
!15763 = !DILocation(line: 1190, column: 3, scope: !15745)
!15764 = !DILocation(line: 1193, column: 2, scope: !15736)
!15765 = !DILocation(line: 1191, column: 42, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15745, file: !2453, line: 1190, column: 54)
!15767 = !DILocation(line: 1191, column: 12, scope: !15766)
!15768 = !DILocation(line: 1191, column: 22, scope: !15766)
!15769 = distinct !{!15769, !15760, !15770}
!15770 = !DILocation(line: 1192, column: 3, scope: !15735)
!15771 = !DILocation(line: 1195, column: 17, scope: !15714)
!15772 = !DILocation(line: 1195, column: 37, scope: !15714)
!15773 = !DILocation(line: 1195, column: 2, scope: !15714)
!15774 = !DILocation(line: 1196, column: 1, scope: !15714)
!15775 = !DISubprogram(name: "z_rb_foreach_next", scope: !170, file: !170, line: 176, type: !15776, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!15776 = !DISubroutineType(types: !15777)
!15777 = !{!2374, !15778, !15779}
!15778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15722, size: 32)
!15779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15738, size: 32)
!15780 = !DISubprogram(name: "rb_insert", scope: !170, file: !170, line: 105, type: !15781, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!15781 = !DISubroutineType(types: !15782)
!15782 = !{null, !15778, !2374}
!15783 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2453, file: !2453, line: 1198, type: !15715, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15784)
!15784 = !{!15785, !15786}
!15785 = !DILocalVariable(name: "pq", arg: 1, scope: !15783, file: !2453, line: 1198, type: !15717)
!15786 = !DILocalVariable(name: "thread", arg: 2, scope: !15783, file: !2453, line: 1198, type: !2345)
!15787 = !DILocation(line: 0, scope: !15783)
!15788 = !DILocation(line: 1200, column: 2, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15790, file: !2453, line: 1200, column: 2)
!15790 = distinct !DILexicalBlock(scope: !15783, file: !2453, line: 1200, column: 2)
!15791 = !DILocation(line: 1200, column: 2, scope: !15790)
!15792 = !DILocation(line: 1200, column: 2, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15789, file: !2453, line: 1200, column: 2)
!15794 = !DILocation(line: 1202, column: 17, scope: !15783)
!15795 = !DILocation(line: 1202, column: 37, scope: !15783)
!15796 = !DILocation(line: 1202, column: 2, scope: !15783)
!15797 = !DILocation(line: 1204, column: 16, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15783, file: !2453, line: 1204, column: 6)
!15799 = !DILocation(line: 1204, column: 7, scope: !15798)
!15800 = !DILocation(line: 1204, column: 6, scope: !15783)
!15801 = !DILocation(line: 1205, column: 7, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15798, file: !2453, line: 1204, column: 22)
!15803 = !DILocation(line: 1205, column: 22, scope: !15802)
!15804 = !DILocation(line: 1206, column: 2, scope: !15802)
!15805 = !DILocation(line: 1207, column: 1, scope: !15783)
!15806 = !DISubprogram(name: "rb_remove", scope: !170, file: !170, line: 110, type: !15781, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!15807 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2453, file: !2453, line: 1209, type: !15808, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15810)
!15808 = !DISubroutineType(types: !15809)
!15809 = !{!2345, !15717}
!15810 = !{!15811, !15812, !15813}
!15811 = !DILocalVariable(name: "pq", arg: 1, scope: !15807, file: !2453, line: 1209, type: !15717)
!15812 = !DILocalVariable(name: "thread", scope: !15807, file: !2453, line: 1211, type: !2345)
!15813 = !DILocalVariable(name: "n", scope: !15807, file: !2453, line: 1212, type: !2374)
!15814 = !DILocation(line: 0, scope: !15807)
!15815 = !DILocation(line: 1212, column: 37, scope: !15807)
!15816 = !DILocation(line: 1212, column: 21, scope: !15807)
!15817 = !DILocation(line: 1217, column: 2, scope: !15807)
!15818 = distinct !DISubprogram(name: "rb_get_min", scope: !170, file: !170, line: 115, type: !15819, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15821)
!15819 = !DISubroutineType(types: !15820)
!15820 = !{!2374, !15778}
!15821 = !{!15822}
!15822 = !DILocalVariable(name: "tree", arg: 1, scope: !15818, file: !170, line: 115, type: !15778)
!15823 = !DILocation(line: 0, scope: !15818)
!15824 = !DILocation(line: 117, column: 9, scope: !15818)
!15825 = !DILocation(line: 117, column: 2, scope: !15818)
!15826 = !DISubprogram(name: "z_rb_get_minmax", scope: !170, file: !170, line: 100, type: !15827, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2043)
!15827 = !DISubroutineType(types: !15828)
!15828 = !{!2374, !15778, !180}
!15829 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2453, file: !2453, line: 1246, type: !15830, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15838)
!15830 = !DISubroutineType(types: !15831)
!15831 = !{!2345, !15832}
!15832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15833, size: 32)
!15833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15719, line: 53, size: 2080, elements: !15834)
!15834 = !{!15835, !15837}
!15835 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15833, file: !15719, line: 54, baseType: !15836, size: 2048)
!15836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2381, size: 2048, elements: !226)
!15837 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15833, file: !15719, line: 55, baseType: !32, size: 32, offset: 2048)
!15838 = !{!15839, !15840, !15841, !15842}
!15839 = !DILocalVariable(name: "pq", arg: 1, scope: !15829, file: !2453, line: 1246, type: !15832)
!15840 = !DILocalVariable(name: "thread", scope: !15829, file: !2453, line: 1252, type: !2345)
!15841 = !DILocalVariable(name: "l", scope: !15829, file: !2453, line: 1253, type: !14401)
!15842 = !DILocalVariable(name: "n", scope: !15829, file: !2453, line: 1254, type: !2449)
!15843 = !DILocation(line: 0, scope: !15829)
!15844 = !DILocation(line: 1248, column: 11, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15829, file: !2453, line: 1248, column: 6)
!15846 = !DILocation(line: 1248, column: 7, scope: !15845)
!15847 = !DILocation(line: 1248, column: 6, scope: !15829)
!15848 = !DILocation(line: 1253, column: 31, scope: !15829)
!15849 = !DILocation(line: 1253, column: 20, scope: !15829)
!15850 = !DILocation(line: 1254, column: 19, scope: !15829)
!15851 = !DILocation(line: 1260, column: 1, scope: !15829)
!15852 = distinct !DISubprogram(name: "z_unpend_all", scope: !2453, file: !2453, line: 1262, type: !15853, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15855)
!15853 = !DISubroutineType(types: !15854)
!15854 = !{!109, !2376}
!15855 = !{!15856, !15857, !15858}
!15856 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15852, file: !2453, line: 1262, type: !2376)
!15857 = !DILocalVariable(name: "need_sched", scope: !15852, file: !2453, line: 1264, type: !109)
!15858 = !DILocalVariable(name: "thread", scope: !15852, file: !2453, line: 1265, type: !2345)
!15859 = !DILocation(line: 0, scope: !15852)
!15860 = !DILocation(line: 1267, column: 19, scope: !15852)
!15861 = !DILocation(line: 1267, column: 41, scope: !15852)
!15862 = !DILocation(line: 1267, column: 2, scope: !15852)
!15863 = !DILocation(line: 1268, column: 3, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15852, file: !2453, line: 1267, column: 50)
!15865 = !DILocation(line: 1269, column: 3, scope: !15864)
!15866 = distinct !{!15866, !15862, !15867}
!15867 = !DILocation(line: 1271, column: 2, scope: !15852)
!15868 = !DILocation(line: 1273, column: 2, scope: !15852)
!15869 = distinct !DISubprogram(name: "z_waitq_head", scope: !13323, file: !13323, line: 52, type: !15400, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15870)
!15870 = !{!15871}
!15871 = !DILocalVariable(name: "w", arg: 1, scope: !15869, file: !13323, line: 52, type: !2376)
!15872 = !DILocation(line: 0, scope: !15869)
!15873 = !DILocation(line: 54, column: 52, scope: !15869)
!15874 = !DILocation(line: 54, column: 28, scope: !15869)
!15875 = !DILocation(line: 54, column: 9, scope: !15869)
!15876 = !DILocation(line: 54, column: 2, scope: !15869)
!15877 = distinct !DISubprogram(name: "init_ready_q", scope: !2453, file: !2453, line: 1276, type: !15878, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15885)
!15878 = !DISubroutineType(types: !15879)
!15879 = !{null, !15880}
!15880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15881, size: 32)
!15881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !15882)
!15882 = !{!15883, !15884}
!15883 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15881, file: !122, line: 86, baseType: !2345, size: 32)
!15884 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15881, file: !122, line: 90, baseType: !2381, size: 64, offset: 32)
!15885 = !{!15886}
!15886 = !DILocalVariable(name: "rq", arg: 1, scope: !15877, file: !2453, line: 1276, type: !15880)
!15887 = !DILocation(line: 0, scope: !15877)
!15888 = !DILocation(line: 1289, column: 22, scope: !15877)
!15889 = !DILocation(line: 1289, column: 2, scope: !15877)
!15890 = !DILocation(line: 1291, column: 1, scope: !15877)
!15891 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !15892, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15894)
!15892 = !DISubroutineType(types: !15893)
!15893 = !{null, !14401}
!15894 = !{!15895}
!15895 = !DILocalVariable(name: "list", arg: 1, scope: !15891, file: !127, line: 197, type: !14401)
!15896 = !DILocation(line: 0, scope: !15891)
!15897 = !DILocation(line: 199, column: 8, scope: !15891)
!15898 = !DILocation(line: 199, column: 13, scope: !15891)
!15899 = !DILocation(line: 200, column: 8, scope: !15891)
!15900 = !DILocation(line: 200, column: 13, scope: !15891)
!15901 = !DILocation(line: 201, column: 1, scope: !15891)
!15902 = distinct !DISubprogram(name: "z_sched_init", scope: !2453, file: !2453, line: 1293, type: !3060, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!15903 = !DILocation(line: 1302, column: 2, scope: !15902)
!15904 = !DILocation(line: 1306, column: 2, scope: !15902)
!15905 = !DILocation(line: 1309, column: 1, scope: !15902)
!15906 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2453, file: !2453, line: 1311, type: !15907, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15910)
!15907 = !DISubroutineType(types: !15908)
!15908 = !{!109, !15909}
!15909 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !158, line: 347, baseType: !2345)
!15910 = !{!15911}
!15911 = !DILocalVariable(name: "thread", arg: 1, scope: !15906, file: !2453, line: 1311, type: !15909)
!15912 = !DILocation(line: 0, scope: !15906)
!15913 = !DILocation(line: 1313, column: 22, scope: !15906)
!15914 = !DILocation(line: 1313, column: 9, scope: !15906)
!15915 = !DILocation(line: 1313, column: 2, scope: !15906)
!15916 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2453, file: !2453, line: 1325, type: !15917, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15919)
!15917 = !DISubroutineType(types: !15918)
!15918 = !{null, !15909, !109}
!15919 = !{!15920, !15921, !15922}
!15920 = !DILocalVariable(name: "thread", arg: 1, scope: !15916, file: !2453, line: 1325, type: !15909)
!15921 = !DILocalVariable(name: "prio", arg: 2, scope: !15916, file: !2453, line: 1325, type: !109)
!15922 = !DILocalVariable(name: "th", scope: !15916, file: !2453, line: 1334, type: !2345)
!15923 = !DILocation(line: 0, scope: !15916)
!15924 = !DILocation(line: 1331, column: 2, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2453, line: 1331, column: 2)
!15926 = distinct !DILexicalBlock(scope: !15927, file: !2453, line: 1331, column: 2)
!15927 = distinct !DILexicalBlock(scope: !15916, file: !2453, line: 1331, column: 2)
!15928 = !DILocation(line: 1331, column: 2, scope: !15929)
!15929 = distinct !DILexicalBlock(scope: !15925, file: !2453, line: 1331, column: 2)
!15930 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !15931)
!15931 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !15932)
!15932 = distinct !DILocation(line: 1332, column: 2, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15934, file: !2453, line: 1332, column: 2)
!15934 = distinct !DILexicalBlock(scope: !15916, file: !2453, line: 1332, column: 2)
!15935 = !DILocation(line: 0, scope: !14900, inlinedAt: !15931)
!15936 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !15932)
!15937 = !DILocation(line: 1332, column: 2, scope: !15934)
!15938 = !DILocation(line: 1332, column: 2, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15933, file: !2453, line: 1332, column: 2)
!15940 = !DILocation(line: 1336, column: 2, scope: !15916)
!15941 = !DILocation(line: 1337, column: 1, scope: !15916)
!15942 = distinct !DISubprogram(name: "k_can_yield", scope: !2453, file: !2453, line: 1384, type: !7396, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!15943 = !DILocation(line: 1386, column: 11, scope: !15942)
!15944 = !DILocation(line: 1386, column: 29, scope: !15942)
!15945 = !DILocation(line: 1386, column: 32, scope: !15942)
!15946 = !DILocation(line: 1386, column: 46, scope: !15942)
!15947 = !DILocation(line: 1387, column: 28, scope: !15942)
!15948 = !DILocation(line: 1387, column: 4, scope: !15942)
!15949 = !DILocation(line: 1386, column: 2, scope: !15942)
!15950 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7396, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!15951 = !DILocation(line: 993, column: 10, scope: !15950)
!15952 = !DILocation(line: 993, column: 2, scope: !15950)
!15953 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2453, file: !2453, line: 1390, type: !3060, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !15954)
!15954 = !{!15955}
!15955 = !DILocalVariable(name: "key", scope: !15953, file: !2453, line: 1396, type: !14167)
!15956 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !15957)
!15957 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !15958)
!15958 = distinct !DILocation(line: 1392, column: 2, scope: !15959)
!15959 = distinct !DILexicalBlock(scope: !15960, file: !2453, line: 1392, column: 2)
!15960 = distinct !DILexicalBlock(scope: !15953, file: !2453, line: 1392, column: 2)
!15961 = !DILocation(line: 0, scope: !14900, inlinedAt: !15957)
!15962 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !15958)
!15963 = !DILocation(line: 1392, column: 2, scope: !15960)
!15964 = !DILocation(line: 1392, column: 2, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15959, file: !2453, line: 1392, column: 2)
!15966 = !DILocation(line: 0, scope: !14175, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 1396, column: 25, scope: !15953)
!15968 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !15969)
!15969 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !15967)
!15970 = !DILocation(line: 0, scope: !14184, inlinedAt: !15969)
!15971 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !15967)
!15972 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !15967)
!15973 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !15967)
!15974 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !15967)
!15975 = !DILocation(line: 0, scope: !15953)
!15976 = !DILocation(line: 1400, column: 18, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15978, file: !2453, line: 1399, column: 36)
!15978 = distinct !DILexicalBlock(scope: !15953, file: !2453, line: 1398, column: 6)
!15979 = !DILocation(line: 0, scope: !14367, inlinedAt: !15980)
!15980 = distinct !DILocation(line: 1400, column: 3, scope: !15977)
!15981 = !DILocation(line: 266, column: 15, scope: !14367, inlinedAt: !15980)
!15982 = !DILocation(line: 266, column: 28, scope: !14367, inlinedAt: !15980)
!15983 = !DILocation(line: 0, scope: !14375, inlinedAt: !15984)
!15984 = distinct !DILocation(line: 268, column: 3, scope: !14379, inlinedAt: !15980)
!15985 = !DILocation(line: 234, column: 2, scope: !14375, inlinedAt: !15984)
!15986 = !DILocation(line: 1402, column: 15, scope: !15953)
!15987 = !DILocation(line: 0, scope: !14384, inlinedAt: !15988)
!15988 = distinct !DILocation(line: 1402, column: 2, scope: !15953)
!15989 = !DILocation(line: 252, column: 15, scope: !14384, inlinedAt: !15988)
!15990 = !DILocation(line: 252, column: 28, scope: !14384, inlinedAt: !15988)
!15991 = !DILocation(line: 0, scope: !14391, inlinedAt: !15992)
!15992 = distinct !DILocation(line: 254, column: 3, scope: !14395, inlinedAt: !15988)
!15993 = !DILocation(line: 0, scope: !14398, inlinedAt: !15994)
!15994 = distinct !DILocation(line: 229, column: 2, scope: !14391, inlinedAt: !15992)
!15995 = !DILocation(line: 186, column: 2, scope: !14408, inlinedAt: !15994)
!15996 = !DILocation(line: 186, column: 2, scope: !14409, inlinedAt: !15994)
!15997 = !DILocation(line: 186, column: 2, scope: !14412, inlinedAt: !15994)
!15998 = !DILocation(line: 188, column: 2, scope: !14414, inlinedAt: !15994)
!15999 = !DILocation(line: 188, column: 2, scope: !14416, inlinedAt: !15994)
!16000 = !DILocation(line: 0, scope: !14414, inlinedAt: !15994)
!16001 = !DILocation(line: 189, column: 7, scope: !14419, inlinedAt: !15994)
!16002 = !DILocation(line: 189, column: 35, scope: !14419, inlinedAt: !15994)
!16003 = !DILocation(line: 189, column: 7, scope: !14420, inlinedAt: !15994)
!16004 = !DILocation(line: 191, column: 21, scope: !14424, inlinedAt: !15994)
!16005 = !DILocation(line: 190, column: 4, scope: !14424, inlinedAt: !15994)
!16006 = !DILocation(line: 192, column: 4, scope: !14424, inlinedAt: !15994)
!16007 = distinct !{!16007, !15998, !16008}
!16008 = !DILocation(line: 194, column: 2, scope: !14414, inlinedAt: !15994)
!16009 = !DILocation(line: 196, column: 37, scope: !14398, inlinedAt: !15994)
!16010 = !DILocation(line: 196, column: 2, scope: !14398, inlinedAt: !15994)
!16011 = !DILocation(line: 197, column: 1, scope: !14398, inlinedAt: !15994)
!16012 = !DILocation(line: 1403, column: 2, scope: !15953)
!16013 = !DILocation(line: 0, scope: !14851, inlinedAt: !16014)
!16014 = distinct !DILocation(line: 1404, column: 2, scope: !15953)
!16015 = !DILocation(line: 0, scope: !14860, inlinedAt: !16016)
!16016 = distinct !DILocation(line: 195, column: 2, scope: !14851, inlinedAt: !16014)
!16017 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !16016)
!16018 = !DILocation(line: 225, column: 2, scope: !14868, inlinedAt: !16016)
!16019 = !DILocation(line: 225, column: 2, scope: !14871, inlinedAt: !16016)
!16020 = !DILocation(line: 196, column: 9, scope: !14851, inlinedAt: !16014)
!16021 = !DILocation(line: 1405, column: 1, scope: !15953)
!16022 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2453, file: !2453, line: 1459, type: !16023, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16025)
!16023 = !DISubroutineType(types: !16024)
!16024 = !{!854, !15061}
!16025 = !{!16026, !16027, !16028}
!16026 = !DILocalVariable(name: "timeout", arg: 1, scope: !16022, file: !2453, line: 1459, type: !15061)
!16027 = !DILocalVariable(name: "ticks", scope: !16022, file: !2453, line: 1461, type: !103)
!16028 = !DILocalVariable(name: "ret", scope: !16022, file: !2453, line: 1480, type: !854)
!16029 = !DILocation(line: 0, scope: !16022)
!16030 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !16031)
!16031 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 1463, column: 2, scope: !16033)
!16033 = distinct !DILexicalBlock(scope: !16034, file: !2453, line: 1463, column: 2)
!16034 = distinct !DILexicalBlock(scope: !16022, file: !2453, line: 1463, column: 2)
!16035 = !DILocation(line: 0, scope: !14900, inlinedAt: !16031)
!16036 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !16032)
!16037 = !DILocation(line: 1463, column: 2, scope: !16034)
!16038 = !DILocation(line: 1463, column: 2, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16033, file: !2453, line: 1463, column: 2)
!16040 = !DILocation(line: 1468, column: 6, scope: !16041)
!16041 = distinct !DILexicalBlock(scope: !16022, file: !2453, line: 1468, column: 6)
!16042 = !DILocation(line: 1468, column: 6, scope: !16022)
!16043 = !DILocation(line: 1469, column: 20, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16041, file: !2453, line: 1468, column: 40)
!16045 = !DILocation(line: 1469, column: 3, scope: !16044)
!16046 = !DILocation(line: 1473, column: 3, scope: !16044)
!16047 = !DILocation(line: 1478, column: 10, scope: !16022)
!16048 = !DILocation(line: 1480, column: 16, scope: !16022)
!16049 = !DILocation(line: 1485, column: 1, scope: !16022)
!16050 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3206, file: !3206, line: 310, type: !16051, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16053)
!16051 = !DISubroutineType(types: !16052)
!16052 = !{null, !15909}
!16053 = !{!16054}
!16054 = !DILocalVariable(name: "thread", arg: 1, scope: !16050, file: !3206, line: 310, type: !15909)
!16055 = !DILocation(line: 0, scope: !16050)
!16056 = !DILocation(line: 319, column: 2, scope: !16057)
!16057 = distinct !DILexicalBlock(scope: !16050, file: !3206, line: 319, column: 2)
!16058 = !{i64 2152267351}
!16059 = !DILocation(line: 320, column: 2, scope: !16050)
!16060 = !DILocation(line: 321, column: 1, scope: !16050)
!16061 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2453, file: !2453, line: 1415, type: !16062, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16064)
!16062 = !DISubroutineType(types: !16063)
!16063 = !{!854, !103}
!16064 = !{!16065, !16066, !16067, !16068}
!16065 = !DILocalVariable(name: "ticks", arg: 1, scope: !16061, file: !2453, line: 1415, type: !103)
!16066 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16061, file: !2453, line: 1418, type: !110)
!16067 = !DILocalVariable(name: "timeout", scope: !16061, file: !2453, line: 1430, type: !15061)
!16068 = !DILocalVariable(name: "key", scope: !16061, file: !2453, line: 1437, type: !14167)
!16069 = !DILocation(line: 0, scope: !16061)
!16070 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !16071)
!16071 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 1420, column: 2, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16074, file: !2453, line: 1420, column: 2)
!16074 = distinct !DILexicalBlock(scope: !16061, file: !2453, line: 1420, column: 2)
!16075 = !DILocation(line: 0, scope: !14900, inlinedAt: !16071)
!16076 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !16072)
!16077 = !DILocation(line: 1420, column: 2, scope: !16074)
!16078 = !DILocation(line: 1420, column: 2, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16073, file: !2453, line: 1420, column: 2)
!16080 = !DILocation(line: 1425, column: 12, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16061, file: !2453, line: 1425, column: 6)
!16082 = !DILocation(line: 1425, column: 6, scope: !16061)
!16083 = !DILocation(line: 1426, column: 3, scope: !16084)
!16084 = distinct !DILexicalBlock(scope: !16081, file: !2453, line: 1425, column: 18)
!16085 = !DILocation(line: 1427, column: 3, scope: !16084)
!16086 = !DILocation(line: 1431, column: 24, scope: !16087)
!16087 = distinct !DILexicalBlock(scope: !16061, file: !2453, line: 1431, column: 6)
!16088 = !DILocation(line: 1431, column: 6, scope: !16061)
!16089 = !DILocation(line: 1432, column: 35, scope: !16090)
!16090 = distinct !DILexicalBlock(scope: !16087, file: !2453, line: 1431, column: 30)
!16091 = !DILocation(line: 1432, column: 27, scope: !16090)
!16092 = !DILocation(line: 1433, column: 2, scope: !16090)
!16093 = !DILocation(line: 1434, column: 27, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16087, file: !2453, line: 1433, column: 9)
!16095 = !DILocation(line: 0, scope: !16087)
!16096 = !DILocation(line: 0, scope: !14175, inlinedAt: !16097)
!16097 = distinct !DILocation(line: 1437, column: 25, scope: !16061)
!16098 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !16099)
!16099 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !16097)
!16100 = !DILocation(line: 0, scope: !14184, inlinedAt: !16099)
!16101 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !16097)
!16102 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !16097)
!16103 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !16097)
!16104 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !16097)
!16105 = !DILocation(line: 1440, column: 20, scope: !16061)
!16106 = !DILocation(line: 1440, column: 18, scope: !16061)
!16107 = !DILocation(line: 1442, column: 2, scope: !16061)
!16108 = !DILocation(line: 1443, column: 23, scope: !16061)
!16109 = !DILocation(line: 1443, column: 2, scope: !16061)
!16110 = !DILocation(line: 1444, column: 29, scope: !16061)
!16111 = !DILocation(line: 1444, column: 2, scope: !16061)
!16112 = !DILocation(line: 0, scope: !14851, inlinedAt: !16113)
!16113 = distinct !DILocation(line: 1446, column: 8, scope: !16061)
!16114 = !DILocation(line: 0, scope: !14860, inlinedAt: !16115)
!16115 = distinct !DILocation(line: 195, column: 2, scope: !14851, inlinedAt: !16113)
!16116 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !16115)
!16117 = !DILocation(line: 225, column: 2, scope: !14868, inlinedAt: !16115)
!16118 = !DILocation(line: 225, column: 2, scope: !14871, inlinedAt: !16115)
!16119 = !DILocation(line: 196, column: 9, scope: !14851, inlinedAt: !16113)
!16120 = !DILocation(line: 1448, column: 2, scope: !16121)
!16121 = distinct !DILexicalBlock(scope: !16122, file: !2453, line: 1448, column: 2)
!16122 = distinct !DILexicalBlock(scope: !16061, file: !2453, line: 1448, column: 2)
!16123 = !DILocation(line: 1448, column: 2, scope: !16122)
!16124 = !DILocation(line: 1448, column: 2, scope: !16125)
!16125 = distinct !DILexicalBlock(scope: !16121, file: !2453, line: 1448, column: 2)
!16126 = !DILocation(line: 1450, column: 10, scope: !16061)
!16127 = !DILocation(line: 1450, column: 45, scope: !16061)
!16128 = !DILocation(line: 1450, column: 43, scope: !16061)
!16129 = !DILocation(line: 1451, column: 6, scope: !16061)
!16130 = !DILocation(line: 1457, column: 1, scope: !16061)
!16131 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13581, file: !13581, line: 1103, type: !13582, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16132)
!16132 = !{!16133}
!16133 = !DILocalVariable(name: "t", arg: 1, scope: !16131, file: !13581, line: 1103, type: !111)
!16134 = !DILocation(line: 0, scope: !16131)
!16135 = !DILocation(line: 0, scope: !14235, inlinedAt: !16136)
!16136 = distinct !DILocation(line: 1106, column: 9, scope: !16131)
!16137 = !DILocation(line: 139, column: 13, scope: !16138, inlinedAt: !16136)
!16138 = distinct !DILexicalBlock(scope: !16139, file: !13581, line: 138, column: 10)
!16139 = distinct !DILexicalBlock(scope: !16140, file: !13581, line: 136, column: 7)
!16140 = distinct !DILexicalBlock(scope: !14256, file: !13581, line: 134, column: 17)
!16141 = !DILocation(line: 1106, column: 2, scope: !16131)
!16142 = distinct !DISubprogram(name: "k_yield", scope: !3206, file: !3206, line: 140, type: !3060, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!16143 = !DILocation(line: 148, column: 2, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16142, file: !3206, line: 148, column: 2)
!16145 = !{i64 2152266671}
!16146 = !DILocation(line: 149, column: 2, scope: !16142)
!16147 = !DILocation(line: 150, column: 1, scope: !16142)
!16148 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2453, file: !2453, line: 1495, type: !16149, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16151)
!16149 = !DISubroutineType(types: !16150)
!16150 = !{!854, !109}
!16151 = !{!16152, !16153}
!16152 = !DILocalVariable(name: "us", arg: 1, scope: !16148, file: !2453, line: 1495, type: !109)
!16153 = !DILocalVariable(name: "ticks", scope: !16148, file: !2453, line: 1497, type: !854)
!16154 = !DILocation(line: 0, scope: !16148)
!16155 = !DILocation(line: 1501, column: 31, scope: !16148)
!16156 = !DILocation(line: 1501, column: 10, scope: !16148)
!16157 = !DILocation(line: 1502, column: 23, scope: !16148)
!16158 = !DILocation(line: 1502, column: 10, scope: !16148)
!16159 = !DILocation(line: 1506, column: 31, scope: !16148)
!16160 = !DILocation(line: 1506, column: 9, scope: !16148)
!16161 = !DILocation(line: 1506, column: 2, scope: !16148)
!16162 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13581, file: !13581, line: 571, type: !13582, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16163)
!16163 = !{!16164}
!16164 = !DILocalVariable(name: "t", arg: 1, scope: !16162, file: !13581, line: 571, type: !111)
!16165 = !DILocation(line: 0, scope: !16162)
!16166 = !DILocation(line: 0, scope: !14235, inlinedAt: !16167)
!16167 = distinct !DILocation(line: 574, column: 9, scope: !16162)
!16168 = !DILocation(line: 135, column: 5, scope: !16140, inlinedAt: !16167)
!16169 = !DILocation(line: 139, column: 13, scope: !16138, inlinedAt: !16167)
!16170 = !DILocation(line: 574, column: 2, scope: !16162)
!16171 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13581, file: !13581, line: 1187, type: !13582, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16172)
!16172 = !{!16173}
!16173 = !DILocalVariable(name: "t", arg: 1, scope: !16171, file: !13581, line: 1187, type: !111)
!16174 = !DILocation(line: 0, scope: !16171)
!16175 = !DILocation(line: 0, scope: !14235, inlinedAt: !16176)
!16176 = distinct !DILocation(line: 1190, column: 9, scope: !16171)
!16177 = !DILocation(line: 145, column: 13, scope: !16178, inlinedAt: !16176)
!16178 = distinct !DILexicalBlock(scope: !14253, file: !13581, line: 144, column: 10)
!16179 = !DILocation(line: 1190, column: 2, scope: !16171)
!16180 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2453, file: !2453, line: 1517, type: !16051, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16181)
!16181 = !{!16182}
!16182 = !DILocalVariable(name: "thread", arg: 1, scope: !16180, file: !2453, line: 1517, type: !15909)
!16183 = !DILocation(line: 0, scope: !16180)
!16184 = !DILocation(line: 1521, column: 6, scope: !16185)
!16185 = distinct !DILexicalBlock(scope: !16180, file: !2453, line: 1521, column: 6)
!16186 = !DILocation(line: 1521, column: 6, scope: !16180)
!16187 = !DILocation(line: 1525, column: 6, scope: !16188)
!16188 = distinct !DILexicalBlock(scope: !16180, file: !2453, line: 1525, column: 6)
!16189 = !DILocation(line: 1525, column: 37, scope: !16188)
!16190 = !DILocation(line: 1525, column: 6, scope: !16180)
!16191 = !DILocation(line: 1527, column: 20, scope: !16192)
!16192 = distinct !DILexicalBlock(scope: !16193, file: !2453, line: 1527, column: 7)
!16193 = distinct !DILexicalBlock(scope: !16188, file: !2453, line: 1525, column: 42)
!16194 = !DILocation(line: 1527, column: 33, scope: !16192)
!16195 = !DILocation(line: 1527, column: 7, scope: !16193)
!16196 = !DILocation(line: 1532, column: 2, scope: !16180)
!16197 = !DILocation(line: 1533, column: 2, scope: !16180)
!16198 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !16200)
!16200 = distinct !DILocation(line: 1537, column: 7, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16180, file: !2453, line: 1537, column: 6)
!16202 = !DILocation(line: 0, scope: !14900, inlinedAt: !16199)
!16203 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !16200)
!16204 = !DILocation(line: 1537, column: 6, scope: !16180)
!16205 = !DILocation(line: 1538, column: 3, scope: !16206)
!16206 = distinct !DILexicalBlock(scope: !16201, file: !2453, line: 1537, column: 25)
!16207 = !DILocation(line: 1539, column: 2, scope: !16206)
!16208 = !DILocation(line: 1540, column: 1, scope: !16180)
!16209 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12962, file: !12962, line: 101, type: !14316, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16210)
!16210 = !{!16211}
!16211 = !DILocalVariable(name: "thread", arg: 1, scope: !16209, file: !12962, line: 101, type: !2345)
!16212 = !DILocation(line: 0, scope: !16209)
!16213 = !DILocation(line: 103, column: 23, scope: !16209)
!16214 = !DILocation(line: 103, column: 36, scope: !16209)
!16215 = !DILocation(line: 103, column: 55, scope: !16209)
!16216 = !DILocation(line: 103, column: 2, scope: !16209)
!16217 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2453, file: !2453, line: 1567, type: !16218, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16220)
!16218 = !DISubroutineType(types: !16219)
!16219 = !{!15909}
!16220 = !{!16221}
!16221 = !DILocalVariable(name: "ret", scope: !16217, file: !2453, line: 1577, type: !15909)
!16222 = !DILocation(line: 1577, column: 30, scope: !16217)
!16223 = !DILocation(line: 0, scope: !16217)
!16224 = !DILocation(line: 1582, column: 2, scope: !16217)
!16225 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2453, file: !2453, line: 1593, type: !7699, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2043)
!16226 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !16227)
!16227 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !16228)
!16228 = distinct !DILocation(line: 1595, column: 10, scope: !16225)
!16229 = !DILocation(line: 0, scope: !14900, inlinedAt: !16227)
!16230 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !16228)
!16231 = !DILocation(line: 1595, column: 27, scope: !16225)
!16232 = !DILocation(line: 1595, column: 41, scope: !16225)
!16233 = !DILocation(line: 1595, column: 30, scope: !16225)
!16234 = !DILocation(line: 1595, column: 2, scope: !16225)
!16235 = distinct !DISubprogram(name: "z_thread_abort", scope: !2453, file: !2453, line: 1725, type: !14133, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16236)
!16236 = !{!16237, !16238}
!16237 = !DILocalVariable(name: "thread", arg: 1, scope: !16235, file: !2453, line: 1725, type: !2345)
!16238 = !DILocalVariable(name: "key", scope: !16235, file: !2453, line: 1727, type: !14167)
!16239 = !DILocation(line: 0, scope: !16235)
!16240 = !DILocation(line: 0, scope: !14175, inlinedAt: !16241)
!16241 = distinct !DILocation(line: 1727, column: 25, scope: !16235)
!16242 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !16243)
!16243 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !16241)
!16244 = !DILocation(line: 0, scope: !14184, inlinedAt: !16243)
!16245 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !16241)
!16246 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !16241)
!16247 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !16241)
!16248 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !16241)
!16249 = !DILocation(line: 1729, column: 20, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16235, file: !2453, line: 1729, column: 6)
!16251 = !DILocation(line: 1729, column: 33, scope: !16250)
!16252 = !DILocation(line: 1729, column: 48, scope: !16250)
!16253 = !DILocation(line: 1729, column: 6, scope: !16235)
!16254 = !DILocation(line: 0, scope: !14209, inlinedAt: !16255)
!16255 = distinct !DILocation(line: 1730, column: 3, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16250, file: !2453, line: 1729, column: 54)
!16257 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16255)
!16258 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !16255)
!16259 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !16255)
!16260 = !DILocation(line: 0, scope: !14223, inlinedAt: !16261)
!16261 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !16255)
!16262 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !16261)
!16263 = !DILocation(line: 1731, column: 3, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16265, file: !2453, line: 1731, column: 3)
!16265 = distinct !DILexicalBlock(scope: !16266, file: !2453, line: 1731, column: 3)
!16266 = distinct !DILexicalBlock(scope: !16256, file: !2453, line: 1731, column: 3)
!16267 = !DILocation(line: 1736, column: 20, scope: !16268)
!16268 = distinct !DILexicalBlock(scope: !16235, file: !2453, line: 1736, column: 6)
!16269 = !DILocation(line: 1736, column: 33, scope: !16268)
!16270 = !DILocation(line: 1736, column: 49, scope: !16268)
!16271 = !DILocation(line: 1736, column: 6, scope: !16235)
!16272 = !DILocation(line: 0, scope: !14209, inlinedAt: !16273)
!16273 = distinct !DILocation(line: 1737, column: 3, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16268, file: !2453, line: 1736, column: 56)
!16275 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16273)
!16276 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !16273)
!16277 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !16273)
!16278 = !DILocation(line: 0, scope: !14223, inlinedAt: !16279)
!16279 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !16273)
!16280 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !16279)
!16281 = !DILocation(line: 1738, column: 3, scope: !16274)
!16282 = !DILocation(line: 1775, column: 2, scope: !16235)
!16283 = !DILocation(line: 1776, column: 16, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16235, file: !2453, line: 1776, column: 6)
!16285 = !DILocation(line: 1776, column: 13, scope: !16284)
!16286 = !DILocation(line: 1776, column: 25, scope: !16284)
!16287 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !16288)
!16288 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !16289)
!16289 = distinct !DILocation(line: 1776, column: 29, scope: !16284)
!16290 = !DILocation(line: 0, scope: !14900, inlinedAt: !16288)
!16291 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !16289)
!16292 = !DILocation(line: 1776, column: 6, scope: !16235)
!16293 = !DILocation(line: 0, scope: !14851, inlinedAt: !16294)
!16294 = distinct !DILocation(line: 1777, column: 3, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16284, file: !2453, line: 1776, column: 47)
!16296 = !DILocation(line: 0, scope: !14860, inlinedAt: !16297)
!16297 = distinct !DILocation(line: 195, column: 2, scope: !14851, inlinedAt: !16294)
!16298 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !16297)
!16299 = !DILocation(line: 225, column: 2, scope: !14868, inlinedAt: !16297)
!16300 = !DILocation(line: 225, column: 2, scope: !14871, inlinedAt: !16297)
!16301 = !DILocation(line: 196, column: 9, scope: !14851, inlinedAt: !16294)
!16302 = !DILocation(line: 1778, column: 3, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16304, file: !2453, line: 1778, column: 3)
!16304 = distinct !DILexicalBlock(scope: !16305, file: !2453, line: 1778, column: 3)
!16305 = distinct !DILexicalBlock(scope: !16295, file: !2453, line: 1778, column: 3)
!16306 = !DILocation(line: 0, scope: !14209, inlinedAt: !16307)
!16307 = distinct !DILocation(line: 1780, column: 2, scope: !16235)
!16308 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16307)
!16309 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !16307)
!16310 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !16307)
!16311 = !DILocation(line: 0, scope: !14223, inlinedAt: !16312)
!16312 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !16307)
!16313 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !16312)
!16314 = !DILocation(line: 1781, column: 1, scope: !16235)
!16315 = distinct !DISubprogram(name: "end_thread", scope: !2453, file: !2453, line: 1690, type: !14133, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16316)
!16316 = !{!16317}
!16317 = !DILocalVariable(name: "thread", arg: 1, scope: !16315, file: !2453, line: 1690, type: !2345)
!16318 = !DILocation(line: 0, scope: !16315)
!16319 = !DILocation(line: 1695, column: 20, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16315, file: !2453, line: 1695, column: 6)
!16321 = !DILocation(line: 1695, column: 33, scope: !16320)
!16322 = !DILocation(line: 1695, column: 49, scope: !16320)
!16323 = !DILocation(line: 1695, column: 6, scope: !16315)
!16324 = !DILocation(line: 1697, column: 29, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16320, file: !2453, line: 1695, column: 56)
!16326 = !DILocation(line: 1698, column: 7, scope: !16327)
!16327 = distinct !DILexicalBlock(scope: !16325, file: !2453, line: 1698, column: 7)
!16328 = !DILocation(line: 1698, column: 7, scope: !16325)
!16329 = !DILocation(line: 0, scope: !14367, inlinedAt: !16330)
!16330 = distinct !DILocation(line: 1699, column: 4, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16327, file: !2453, line: 1698, column: 35)
!16332 = !DILocation(line: 266, column: 28, scope: !14367, inlinedAt: !16330)
!16333 = !DILocation(line: 0, scope: !14375, inlinedAt: !16334)
!16334 = distinct !DILocation(line: 268, column: 3, scope: !14379, inlinedAt: !16330)
!16335 = !DILocation(line: 234, column: 2, scope: !14375, inlinedAt: !16334)
!16336 = !DILocation(line: 1700, column: 3, scope: !16331)
!16337 = !DILocation(line: 1701, column: 20, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16325, file: !2453, line: 1701, column: 7)
!16339 = !DILocation(line: 1701, column: 30, scope: !16338)
!16340 = !DILocation(line: 1701, column: 7, scope: !16325)
!16341 = !DILocation(line: 1702, column: 4, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16338, file: !2453, line: 1701, column: 39)
!16343 = !DILocation(line: 1703, column: 3, scope: !16342)
!16344 = !DILocation(line: 1704, column: 9, scope: !16325)
!16345 = !DILocation(line: 1705, column: 23, scope: !16325)
!16346 = !DILocation(line: 1705, column: 3, scope: !16325)
!16347 = !DILocation(line: 1706, column: 3, scope: !16325)
!16348 = !DILocation(line: 1722, column: 2, scope: !16325)
!16349 = !DILocation(line: 1723, column: 1, scope: !16315)
!16350 = distinct !DISubprogram(name: "unpend_all", scope: !2453, file: !2453, line: 1674, type: !16351, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16353)
!16351 = !DISubroutineType(types: !16352)
!16352 = !{null, !2376}
!16353 = !{!16354, !16355}
!16354 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16350, file: !2453, line: 1674, type: !2376)
!16355 = !DILocalVariable(name: "thread", scope: !16350, file: !2453, line: 1676, type: !2345)
!16356 = !DILocation(line: 0, scope: !16350)
!16357 = !DILocation(line: 1678, column: 19, scope: !16350)
!16358 = !DILocation(line: 1678, column: 41, scope: !16350)
!16359 = !DILocation(line: 1678, column: 2, scope: !16350)
!16360 = !DILocation(line: 1679, column: 3, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16350, file: !2453, line: 1678, column: 50)
!16362 = !DILocation(line: 1680, column: 9, scope: !16361)
!16363 = !DILocalVariable(name: "thread", arg: 1, scope: !16364, file: !12982, line: 65, type: !2345)
!16364 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12982, file: !12982, line: 65, type: !16365, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16367)
!16365 = !DISubroutineType(types: !16366)
!16366 = !{null, !2345, !32}
!16367 = !{!16363, !16368}
!16368 = !DILocalVariable(name: "value", arg: 2, scope: !16364, file: !12982, line: 65, type: !32)
!16369 = !DILocation(line: 0, scope: !16364, inlinedAt: !16370)
!16370 = distinct !DILocation(line: 1681, column: 3, scope: !16361)
!16371 = !DILocation(line: 67, column: 15, scope: !16364, inlinedAt: !16370)
!16372 = !DILocation(line: 67, column: 33, scope: !16364, inlinedAt: !16370)
!16373 = !DILocation(line: 1682, column: 3, scope: !16361)
!16374 = distinct !{!16374, !16359, !16375}
!16375 = !DILocation(line: 1683, column: 2, scope: !16350)
!16376 = !DILocation(line: 1684, column: 1, scope: !16350)
!16377 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2453, file: !2453, line: 1794, type: !16378, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16380)
!16378 = !DISubroutineType(types: !16379)
!16379 = !{!109, !2345, !15061}
!16380 = !{!16381, !16382, !16383, !16384}
!16381 = !DILocalVariable(name: "thread", arg: 1, scope: !16377, file: !2453, line: 1794, type: !2345)
!16382 = !DILocalVariable(name: "timeout", arg: 2, scope: !16377, file: !2453, line: 1794, type: !15061)
!16383 = !DILocalVariable(name: "key", scope: !16377, file: !2453, line: 1796, type: !14167)
!16384 = !DILocalVariable(name: "ret", scope: !16377, file: !2453, line: 1797, type: !109)
!16385 = !DILocation(line: 0, scope: !16377)
!16386 = !DILocation(line: 0, scope: !14175, inlinedAt: !16387)
!16387 = distinct !DILocation(line: 1796, column: 25, scope: !16377)
!16388 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !16389)
!16389 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !16387)
!16390 = !DILocation(line: 0, scope: !14184, inlinedAt: !16389)
!16391 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !16387)
!16392 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !16387)
!16393 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !16387)
!16394 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !16387)
!16395 = !DILocation(line: 1801, column: 20, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16377, file: !2453, line: 1801, column: 6)
!16397 = !DILocation(line: 1801, column: 33, scope: !16396)
!16398 = !DILocation(line: 1801, column: 49, scope: !16396)
!16399 = !DILocation(line: 1801, column: 6, scope: !16377)
!16400 = !DILocation(line: 1803, column: 13, scope: !16401)
!16401 = distinct !DILexicalBlock(scope: !16396, file: !2453, line: 1803, column: 13)
!16402 = !DILocation(line: 1803, column: 13, scope: !16396)
!16403 = !DILocation(line: 1805, column: 24, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16401, file: !2453, line: 1805, column: 13)
!16405 = !DILocation(line: 1805, column: 21, scope: !16404)
!16406 = !DILocation(line: 1805, column: 34, scope: !16404)
!16407 = !DILocation(line: 1806, column: 20, scope: !16404)
!16408 = !DILocation(line: 1806, column: 44, scope: !16404)
!16409 = !DILocation(line: 1806, column: 30, scope: !16404)
!16410 = !DILocation(line: 1805, column: 13, scope: !16401)
!16411 = !DILocation(line: 1031, column: 3, scope: !14900, inlinedAt: !16412)
!16412 = distinct !DILocation(line: 48, column: 10, scope: !14904, inlinedAt: !16413)
!16413 = distinct !DILocation(line: 1809, column: 3, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16415, file: !2453, line: 1809, column: 3)
!16415 = distinct !DILexicalBlock(scope: !16416, file: !2453, line: 1809, column: 3)
!16416 = distinct !DILexicalBlock(scope: !16404, file: !2453, line: 1808, column: 9)
!16417 = !DILocation(line: 0, scope: !14900, inlinedAt: !16412)
!16418 = !DILocation(line: 48, column: 9, scope: !14904, inlinedAt: !16413)
!16419 = !DILocation(line: 1809, column: 3, scope: !16415)
!16420 = !DILocation(line: 1809, column: 3, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16414, file: !2453, line: 1809, column: 3)
!16422 = !DILocation(line: 1810, column: 23, scope: !16416)
!16423 = !DILocation(line: 1810, column: 42, scope: !16416)
!16424 = !DILocation(line: 1810, column: 3, scope: !16416)
!16425 = !DILocation(line: 1811, column: 22, scope: !16416)
!16426 = !DILocation(line: 1811, column: 3, scope: !16416)
!16427 = !DILocation(line: 0, scope: !14851, inlinedAt: !16428)
!16428 = distinct !DILocation(line: 1814, column: 9, scope: !16416)
!16429 = !DILocation(line: 0, scope: !14860, inlinedAt: !16430)
!16430 = distinct !DILocation(line: 195, column: 2, scope: !14851, inlinedAt: !16428)
!16431 = !DILocation(line: 225, column: 2, scope: !14867, inlinedAt: !16430)
!16432 = !DILocation(line: 225, column: 2, scope: !14868, inlinedAt: !16430)
!16433 = !DILocation(line: 225, column: 2, scope: !14871, inlinedAt: !16430)
!16434 = !DILocation(line: 196, column: 9, scope: !14851, inlinedAt: !16428)
!16435 = !DILocation(line: 1817, column: 3, scope: !16416)
!16436 = !DILocation(line: 0, scope: !16396)
!16437 = !DILocation(line: 0, scope: !14209, inlinedAt: !16438)
!16438 = distinct !DILocation(line: 1822, column: 2, scope: !16377)
!16439 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16438)
!16440 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !16438)
!16441 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !16438)
!16442 = !DILocation(line: 0, scope: !14223, inlinedAt: !16443)
!16443 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !16438)
!16444 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !16443)
!16445 = !DILocation(line: 1823, column: 2, scope: !16377)
!16446 = !DILocation(line: 1824, column: 1, scope: !16377)
!16447 = distinct !DISubprogram(name: "z_sched_wake", scope: !2453, file: !2453, line: 1882, type: !16448, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16450)
!16448 = !DISubroutineType(types: !16449)
!16449 = !{!360, !2376, !109, !107}
!16450 = !{!16451, !16452, !16453, !16454, !16455, !16456, !16458}
!16451 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16447, file: !2453, line: 1882, type: !2376)
!16452 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16447, file: !2453, line: 1882, type: !109)
!16453 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16447, file: !2453, line: 1882, type: !107)
!16454 = !DILocalVariable(name: "thread", scope: !16447, file: !2453, line: 1884, type: !2345)
!16455 = !DILocalVariable(name: "ret", scope: !16447, file: !2453, line: 1885, type: !360)
!16456 = !DILocalVariable(name: "__i", scope: !16457, file: !2453, line: 1887, type: !14167)
!16457 = distinct !DILexicalBlock(scope: !16447, file: !2453, line: 1887, column: 2)
!16458 = !DILocalVariable(name: "__key", scope: !16457, file: !2453, line: 1887, type: !14167)
!16459 = !DILocation(line: 0, scope: !16447)
!16460 = !DILocation(line: 0, scope: !16457)
!16461 = !DILocation(line: 0, scope: !14175, inlinedAt: !16462)
!16462 = distinct !DILocation(line: 1887, column: 2, scope: !16457)
!16463 = !DILocation(line: 55, column: 2, scope: !14184, inlinedAt: !16464)
!16464 = distinct !DILocation(line: 145, column: 10, scope: !14175, inlinedAt: !16462)
!16465 = !DILocation(line: 0, scope: !14184, inlinedAt: !16464)
!16466 = !DILocation(line: 148, column: 2, scope: !14192, inlinedAt: !16462)
!16467 = !DILocation(line: 148, column: 2, scope: !14193, inlinedAt: !16462)
!16468 = !DILocation(line: 148, column: 2, scope: !14196, inlinedAt: !16462)
!16469 = !DILocation(line: 160, column: 2, scope: !14175, inlinedAt: !16462)
!16470 = !DILocation(line: 1888, column: 12, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16472, file: !2453, line: 1887, column: 26)
!16472 = distinct !DILexicalBlock(scope: !16457, file: !2453, line: 1887, column: 2)
!16473 = !DILocation(line: 1890, column: 14, scope: !16474)
!16474 = distinct !DILexicalBlock(scope: !16471, file: !2453, line: 1890, column: 7)
!16475 = !DILocation(line: 1890, column: 7, scope: !16471)
!16476 = !DILocalVariable(name: "thread", arg: 1, scope: !16477, file: !16478, line: 134, type: !2345)
!16477 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16478, file: !16478, line: 134, type: !16479, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16481)
!16478 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16479 = !DISubroutineType(types: !16480)
!16480 = !{null, !2345, !32, !107}
!16481 = !{!16476, !16482, !16483}
!16482 = !DILocalVariable(name: "value", arg: 2, scope: !16477, file: !16478, line: 135, type: !32)
!16483 = !DILocalVariable(name: "data", arg: 3, scope: !16477, file: !16478, line: 136, type: !107)
!16484 = !DILocation(line: 0, scope: !16477, inlinedAt: !16485)
!16485 = distinct !DILocation(line: 1891, column: 4, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16474, file: !2453, line: 1890, column: 23)
!16487 = !DILocation(line: 0, scope: !16364, inlinedAt: !16488)
!16488 = distinct !DILocation(line: 138, column: 2, scope: !16477, inlinedAt: !16485)
!16489 = !DILocation(line: 67, column: 15, scope: !16364, inlinedAt: !16488)
!16490 = !DILocation(line: 67, column: 33, scope: !16364, inlinedAt: !16488)
!16491 = !DILocation(line: 139, column: 15, scope: !16477, inlinedAt: !16485)
!16492 = !DILocation(line: 139, column: 25, scope: !16477, inlinedAt: !16485)
!16493 = !DILocation(line: 1894, column: 4, scope: !16486)
!16494 = !DILocation(line: 1895, column: 10, scope: !16486)
!16495 = !DILocation(line: 1896, column: 4, scope: !16486)
!16496 = !DILocation(line: 1898, column: 3, scope: !16486)
!16497 = !DILocation(line: 0, scope: !14209, inlinedAt: !16498)
!16498 = distinct !DILocation(line: 1887, column: 2, scope: !16472)
!16499 = !DILocation(line: 194, column: 2, scope: !14217, inlinedAt: !16498)
!16500 = !DILocation(line: 194, column: 2, scope: !14218, inlinedAt: !16498)
!16501 = !DILocation(line: 194, column: 2, scope: !14221, inlinedAt: !16498)
!16502 = !DILocation(line: 0, scope: !14223, inlinedAt: !16503)
!16503 = distinct !DILocation(line: 215, column: 2, scope: !14209, inlinedAt: !16498)
!16504 = !DILocation(line: 95, column: 2, scope: !14223, inlinedAt: !16503)
!16505 = !DILocation(line: 1901, column: 2, scope: !16447)
!16506 = distinct !DISubprogram(name: "z_sched_wait", scope: !2453, file: !2453, line: 1904, type: !16507, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !16510)
!16507 = !DISubroutineType(types: !16508)
!16508 = !{!109, !14178, !14167, !2376, !15061, !16509}
!16509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!16510 = !{!16511, !16512, !16513, !16514, !16515, !16516}
!16511 = !DILocalVariable(name: "lock", arg: 1, scope: !16506, file: !2453, line: 1904, type: !14178)
!16512 = !DILocalVariable(name: "key", arg: 2, scope: !16506, file: !2453, line: 1904, type: !14167)
!16513 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16506, file: !2453, line: 1905, type: !2376)
!16514 = !DILocalVariable(name: "timeout", arg: 4, scope: !16506, file: !2453, line: 1905, type: !15061)
!16515 = !DILocalVariable(name: "data", arg: 5, scope: !16506, file: !2453, line: 1905, type: !16509)
!16516 = !DILocalVariable(name: "ret", scope: !16506, file: !2453, line: 1907, type: !109)
!16517 = !DILocation(line: 0, scope: !16506)
!16518 = !DILocation(line: 1907, column: 12, scope: !16506)
!16519 = !DILocation(line: 1909, column: 11, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16506, file: !2453, line: 1909, column: 6)
!16521 = !DILocation(line: 1909, column: 6, scope: !16506)
!16522 = !DILocation(line: 1910, column: 11, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16520, file: !2453, line: 1909, column: 20)
!16524 = !DILocation(line: 1910, column: 26, scope: !16523)
!16525 = !DILocation(line: 1910, column: 9, scope: !16523)
!16526 = !DILocation(line: 1911, column: 2, scope: !16523)
!16527 = !DILocation(line: 1912, column: 2, scope: !16506)
!16528 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2479, file: !2479, line: 16, type: !16529, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16540)
!16529 = !DISubroutineType(types: !16530)
!16530 = !{!109, !16531}
!16531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16532, size: 32)
!16532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !16533)
!16533 = !{!16534}
!16534 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16532, file: !118, line: 2829, baseType: !16535, size: 64)
!16535 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !16536)
!16536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !16537)
!16537 = !{!16538}
!16538 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16536, file: !122, line: 232, baseType: !16539, size: 64)
!16539 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2465)
!16540 = !{!16541}
!16541 = !DILocalVariable(name: "condvar", arg: 1, scope: !16528, file: !2479, line: 16, type: !16531)
!16542 = !DILocation(line: 0, scope: !16528)
!16543 = !DILocation(line: 18, column: 25, scope: !16528)
!16544 = !DILocation(line: 18, column: 2, scope: !16528)
!16545 = !DILocation(line: 23, column: 2, scope: !16528)
!16546 = distinct !DISubprogram(name: "z_waitq_init", scope: !13323, file: !13323, line: 47, type: !16547, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16550)
!16547 = !DISubroutineType(types: !16548)
!16548 = !{null, !16549}
!16549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16535, size: 32)
!16550 = !{!16551}
!16551 = !DILocalVariable(name: "w", arg: 1, scope: !16546, file: !13323, line: 47, type: !16549)
!16552 = !DILocation(line: 0, scope: !16546)
!16553 = !DILocation(line: 49, column: 21, scope: !16546)
!16554 = !DILocation(line: 49, column: 2, scope: !16546)
!16555 = !DILocation(line: 50, column: 1, scope: !16546)
!16556 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16557, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16560)
!16557 = !DISubroutineType(types: !16558)
!16558 = !{null, !16559}
!16559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16539, size: 32)
!16560 = !{!16561}
!16561 = !DILocalVariable(name: "list", arg: 1, scope: !16556, file: !127, line: 197, type: !16559)
!16562 = !DILocation(line: 0, scope: !16556)
!16563 = !DILocation(line: 199, column: 8, scope: !16556)
!16564 = !DILocation(line: 199, column: 13, scope: !16556)
!16565 = !DILocation(line: 200, column: 8, scope: !16556)
!16566 = !DILocation(line: 200, column: 13, scope: !16556)
!16567 = !DILocation(line: 201, column: 1, scope: !16556)
!16568 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2479, file: !2479, line: 35, type: !16529, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16569)
!16569 = !{!16570, !16571, !16576}
!16570 = !DILocalVariable(name: "condvar", arg: 1, scope: !16568, file: !2479, line: 35, type: !16531)
!16571 = !DILocalVariable(name: "key", scope: !16568, file: !2479, line: 37, type: !16572)
!16572 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16573)
!16573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16574)
!16574 = !{!16575}
!16575 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16573, file: !253, line: 33, baseType: !109, size: 32)
!16576 = !DILocalVariable(name: "thread", scope: !16568, file: !2479, line: 41, type: !16577)
!16577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16578, size: 32)
!16578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !158, line: 245, size: 1280, elements: !16579)
!16579 = !{!16580, !16618, !16630, !16631, !16632, !16633, !16634, !16640, !16652}
!16580 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16578, file: !158, line: 247, baseType: !16581, size: 384)
!16581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !158, line: 57, size: 384, elements: !16582)
!16582 = !{!16583, !16593, !16594, !16595, !16596, !16605, !16606, !16607}
!16583 = !DIDerivedType(tag: DW_TAG_member, scope: !16581, file: !158, line: 60, baseType: !16584, size: 64)
!16584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16581, file: !158, line: 60, size: 64, elements: !16585)
!16585 = !{!16586, !16587}
!16586 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16584, file: !158, line: 61, baseType: !2464, size: 64)
!16587 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16584, file: !158, line: 62, baseType: !16588, size: 64)
!16588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !170, line: 49, size: 64, elements: !16589)
!16589 = !{!16590}
!16590 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16588, file: !170, line: 50, baseType: !16591, size: 64)
!16591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16592, size: 64, elements: !175)
!16592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16588, size: 32)
!16593 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16581, file: !158, line: 68, baseType: !16549, size: 32, offset: 64)
!16594 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16581, file: !158, line: 71, baseType: !180, size: 8, offset: 96)
!16595 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16581, file: !158, line: 74, baseType: !180, size: 8, offset: 104)
!16596 = !DIDerivedType(tag: DW_TAG_member, scope: !16581, file: !158, line: 90, baseType: !16597, size: 16, offset: 112)
!16597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16581, file: !158, line: 90, size: 16, elements: !16598)
!16598 = !{!16599, !16604}
!16599 = !DIDerivedType(tag: DW_TAG_member, scope: !16597, file: !158, line: 91, baseType: !16600, size: 16)
!16600 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16597, file: !158, line: 91, size: 16, elements: !16601)
!16601 = !{!16602, !16603}
!16602 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16600, file: !158, line: 96, baseType: !190, size: 8)
!16603 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16600, file: !158, line: 97, baseType: !180, size: 8, offset: 8)
!16604 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16597, file: !158, line: 100, baseType: !194, size: 16)
!16605 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16581, file: !158, line: 107, baseType: !110, size: 32, offset: 128)
!16606 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16581, file: !158, line: 127, baseType: !107, size: 32, offset: 160)
!16607 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16581, file: !158, line: 131, baseType: !16608, size: 192, offset: 192)
!16608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !16609)
!16609 = !{!16610, !16611, !16617}
!16610 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16608, file: !122, line: 245, baseType: !2464, size: 64)
!16611 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16608, file: !122, line: 246, baseType: !16612, size: 32, offset: 64)
!16612 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !16613)
!16613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16614, size: 32)
!16614 = !DISubroutineType(types: !16615)
!16615 = !{null, !16616}
!16616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16608, size: 32)
!16617 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16608, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!16618 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16578, file: !158, line: 250, baseType: !16619, size: 288, offset: 384)
!16619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !211, line: 25, size: 288, elements: !16620)
!16620 = !{!16621, !16622, !16623, !16624, !16625, !16626, !16627, !16628, !16629}
!16621 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16619, file: !211, line: 26, baseType: !110, size: 32)
!16622 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16619, file: !211, line: 27, baseType: !110, size: 32, offset: 32)
!16623 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16619, file: !211, line: 28, baseType: !110, size: 32, offset: 64)
!16624 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16619, file: !211, line: 29, baseType: !110, size: 32, offset: 96)
!16625 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16619, file: !211, line: 30, baseType: !110, size: 32, offset: 128)
!16626 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16619, file: !211, line: 31, baseType: !110, size: 32, offset: 160)
!16627 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16619, file: !211, line: 32, baseType: !110, size: 32, offset: 192)
!16628 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16619, file: !211, line: 33, baseType: !110, size: 32, offset: 224)
!16629 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16619, file: !211, line: 34, baseType: !110, size: 32, offset: 256)
!16630 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16578, file: !158, line: 253, baseType: !107, size: 32, offset: 672)
!16631 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16578, file: !158, line: 256, baseType: !16535, size: 64, offset: 704)
!16632 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16578, file: !158, line: 279, baseType: !225, size: 256, offset: 768)
!16633 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16578, file: !158, line: 294, baseType: !109, size: 32, offset: 1024)
!16634 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16578, file: !158, line: 300, baseType: !16635, size: 96, offset: 1056)
!16635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !158, line: 149, size: 96, elements: !16636)
!16636 = !{!16637, !16638, !16639}
!16637 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16635, file: !158, line: 153, baseType: !22, size: 32)
!16638 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16635, file: !158, line: 162, baseType: !234, size: 32, offset: 32)
!16639 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16635, file: !158, line: 168, baseType: !234, size: 32, offset: 64)
!16640 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16578, file: !158, line: 325, baseType: !16641, size: 32, offset: 1152)
!16641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16642, size: 32)
!16642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !16643)
!16643 = !{!16644, !16650, !16651}
!16644 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16642, file: !118, line: 5074, baseType: !16645, size: 96)
!16645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !243, line: 56, size: 96, elements: !16646)
!16646 = !{!16647, !16648, !16649}
!16647 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16645, file: !243, line: 57, baseType: !246, size: 32)
!16648 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16645, file: !243, line: 58, baseType: !107, size: 32, offset: 32)
!16649 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16645, file: !243, line: 59, baseType: !234, size: 32, offset: 64)
!16650 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16642, file: !118, line: 5075, baseType: !16535, size: 64, offset: 96)
!16651 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16642, file: !118, line: 5076, baseType: !2480, size: 32, offset: 160)
!16652 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16578, file: !158, line: 343, baseType: !16653, size: 64, offset: 1184)
!16653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !211, line: 60, size: 64, elements: !16654)
!16654 = !{!16655, !16656}
!16655 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16653, file: !211, line: 63, baseType: !110, size: 32)
!16656 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16653, file: !211, line: 66, baseType: !110, size: 32, offset: 32)
!16657 = !DILocation(line: 0, scope: !16568)
!16658 = !DILocalVariable(name: "l", arg: 1, scope: !16659, file: !253, line: 136, type: !16662)
!16659 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16660, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16663)
!16660 = !DISubroutineType(types: !16661)
!16661 = !{!16572, !16662}
!16662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 32)
!16663 = !{!16658, !16664}
!16664 = !DILocalVariable(name: "k", scope: !16659, file: !253, line: 139, type: !16572)
!16665 = !DILocation(line: 0, scope: !16659, inlinedAt: !16666)
!16666 = distinct !DILocation(line: 37, column: 25, scope: !16568)
!16667 = !DILocation(line: 55, column: 2, scope: !16668, inlinedAt: !16672)
!16668 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6046, file: !6046, line: 42, type: !6047, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16669)
!16669 = !{!16670, !16671}
!16670 = !DILocalVariable(name: "key", scope: !16668, file: !6046, line: 44, type: !32)
!16671 = !DILocalVariable(name: "tmp", scope: !16668, file: !6046, line: 53, type: !32)
!16672 = distinct !DILocation(line: 145, column: 10, scope: !16659, inlinedAt: !16666)
!16673 = !{i64 1652560}
!16674 = !DILocation(line: 0, scope: !16668, inlinedAt: !16672)
!16675 = !DILocation(line: 148, column: 2, scope: !16676, inlinedAt: !16666)
!16676 = distinct !DILexicalBlock(scope: !16677, file: !253, line: 148, column: 2)
!16677 = distinct !DILexicalBlock(scope: !16659, file: !253, line: 148, column: 2)
!16678 = !DILocation(line: 148, column: 2, scope: !16677, inlinedAt: !16666)
!16679 = !DILocation(line: 148, column: 2, scope: !16680, inlinedAt: !16666)
!16680 = distinct !DILexicalBlock(scope: !16676, file: !253, line: 148, column: 2)
!16681 = !DILocation(line: 160, column: 2, scope: !16659, inlinedAt: !16666)
!16682 = !DILocation(line: 41, column: 60, scope: !16568)
!16683 = !DILocation(line: 41, column: 28, scope: !16568)
!16684 = !DILocation(line: 43, column: 13, scope: !16685)
!16685 = distinct !DILexicalBlock(scope: !16568, file: !2479, line: 43, column: 6)
!16686 = !DILocation(line: 43, column: 6, scope: !16568)
!16687 = !DILocalVariable(name: "thread", arg: 1, scope: !16688, file: !12982, line: 65, type: !16577)
!16688 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12982, file: !12982, line: 65, type: !16689, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16691)
!16689 = !DISubroutineType(types: !16690)
!16690 = !{null, !16577, !32}
!16691 = !{!16687, !16692}
!16692 = !DILocalVariable(name: "value", arg: 2, scope: !16688, file: !12982, line: 65, type: !32)
!16693 = !DILocation(line: 0, scope: !16688, inlinedAt: !16694)
!16694 = distinct !DILocation(line: 46, column: 3, scope: !16695)
!16695 = distinct !DILexicalBlock(scope: !16685, file: !2479, line: 43, column: 22)
!16696 = !DILocation(line: 67, column: 15, scope: !16688, inlinedAt: !16694)
!16697 = !DILocation(line: 67, column: 33, scope: !16688, inlinedAt: !16694)
!16698 = !DILocation(line: 47, column: 3, scope: !16695)
!16699 = !DILocation(line: 48, column: 3, scope: !16695)
!16700 = !DILocation(line: 49, column: 2, scope: !16695)
!16701 = !DILocalVariable(name: "key", arg: 2, scope: !16702, file: !253, line: 190, type: !16572)
!16702 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16703, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16705)
!16703 = !DISubroutineType(types: !16704)
!16704 = !{null, !16662, !16572}
!16705 = !{!16706, !16701}
!16706 = !DILocalVariable(name: "l", arg: 1, scope: !16702, file: !253, line: 189, type: !16662)
!16707 = !DILocation(line: 0, scope: !16702, inlinedAt: !16708)
!16708 = distinct !DILocation(line: 50, column: 3, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16685, file: !2479, line: 49, column: 9)
!16710 = !DILocation(line: 194, column: 2, scope: !16711, inlinedAt: !16708)
!16711 = distinct !DILexicalBlock(scope: !16712, file: !253, line: 194, column: 2)
!16712 = distinct !DILexicalBlock(scope: !16702, file: !253, line: 194, column: 2)
!16713 = !DILocation(line: 194, column: 2, scope: !16712, inlinedAt: !16708)
!16714 = !DILocation(line: 194, column: 2, scope: !16715, inlinedAt: !16708)
!16715 = distinct !DILexicalBlock(scope: !16711, file: !253, line: 194, column: 2)
!16716 = !DILocalVariable(name: "key", arg: 1, scope: !16717, file: !6046, line: 84, type: !32)
!16717 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16718)
!16718 = !{!16716}
!16719 = !DILocation(line: 0, scope: !16717, inlinedAt: !16720)
!16720 = distinct !DILocation(line: 215, column: 2, scope: !16702, inlinedAt: !16708)
!16721 = !DILocation(line: 95, column: 2, scope: !16717, inlinedAt: !16720)
!16722 = !{i64 1653377}
!16723 = !DILocation(line: 55, column: 2, scope: !16568)
!16724 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2479, file: !2479, line: 67, type: !16529, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16725)
!16725 = !{!16726, !16727, !16728, !16729}
!16726 = !DILocalVariable(name: "condvar", arg: 1, scope: !16724, file: !2479, line: 67, type: !16531)
!16727 = !DILocalVariable(name: "pending_thread", scope: !16724, file: !2479, line: 69, type: !16577)
!16728 = !DILocalVariable(name: "key", scope: !16724, file: !2479, line: 70, type: !16572)
!16729 = !DILocalVariable(name: "woken", scope: !16724, file: !2479, line: 71, type: !109)
!16730 = !DILocation(line: 0, scope: !16724)
!16731 = !DILocation(line: 0, scope: !16659, inlinedAt: !16732)
!16732 = distinct !DILocation(line: 73, column: 8, scope: !16724)
!16733 = !DILocation(line: 55, column: 2, scope: !16668, inlinedAt: !16734)
!16734 = distinct !DILocation(line: 145, column: 10, scope: !16659, inlinedAt: !16732)
!16735 = !DILocation(line: 0, scope: !16668, inlinedAt: !16734)
!16736 = !DILocation(line: 148, column: 2, scope: !16676, inlinedAt: !16732)
!16737 = !DILocation(line: 148, column: 2, scope: !16677, inlinedAt: !16732)
!16738 = !DILocation(line: 148, column: 2, scope: !16680, inlinedAt: !16732)
!16739 = !DILocation(line: 160, column: 2, scope: !16659, inlinedAt: !16732)
!16740 = !DILocation(line: 78, column: 27, scope: !16724)
!16741 = !DILocation(line: 78, column: 68, scope: !16724)
!16742 = !DILocation(line: 78, column: 2, scope: !16724)
!16743 = !DILocation(line: 80, column: 8, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16724, file: !2479, line: 79, column: 15)
!16745 = !DILocation(line: 0, scope: !16688, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 81, column: 3, scope: !16744)
!16747 = !DILocation(line: 67, column: 15, scope: !16688, inlinedAt: !16746)
!16748 = !DILocation(line: 67, column: 33, scope: !16688, inlinedAt: !16746)
!16749 = !DILocation(line: 82, column: 3, scope: !16744)
!16750 = distinct !{!16750, !16742, !16751}
!16751 = !DILocation(line: 83, column: 2, scope: !16724)
!16752 = !DILocation(line: 87, column: 2, scope: !16724)
!16753 = !DILocation(line: 89, column: 2, scope: !16724)
!16754 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2479, file: !2479, line: 100, type: !16755, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16768)
!16755 = !DISubroutineType(types: !16756)
!16756 = !{!109, !16531, !16757, !16764}
!16757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16758, size: 32)
!16758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !16759)
!16759 = !{!16760, !16761, !16762, !16763}
!16760 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16758, file: !118, line: 2722, baseType: !16535, size: 64)
!16761 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16758, file: !118, line: 2724, baseType: !16577, size: 32, offset: 64)
!16762 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16758, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!16763 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16758, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!16764 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16765)
!16765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16766)
!16766 = !{!16767}
!16767 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16765, file: !104, line: 66, baseType: !103, size: 64)
!16768 = !{!16769, !16770, !16771, !16772, !16773}
!16769 = !DILocalVariable(name: "condvar", arg: 1, scope: !16754, file: !2479, line: 100, type: !16531)
!16770 = !DILocalVariable(name: "mutex", arg: 2, scope: !16754, file: !2479, line: 100, type: !16757)
!16771 = !DILocalVariable(name: "timeout", arg: 3, scope: !16754, file: !2479, line: 101, type: !16764)
!16772 = !DILocalVariable(name: "key", scope: !16754, file: !2479, line: 103, type: !16572)
!16773 = !DILocalVariable(name: "ret", scope: !16754, file: !2479, line: 104, type: !109)
!16774 = !DILocation(line: 0, scope: !16754)
!16775 = !DILocation(line: 0, scope: !16659, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 108, column: 8, scope: !16754)
!16777 = !DILocation(line: 55, column: 2, scope: !16668, inlinedAt: !16778)
!16778 = distinct !DILocation(line: 145, column: 10, scope: !16659, inlinedAt: !16776)
!16779 = !DILocation(line: 0, scope: !16668, inlinedAt: !16778)
!16780 = !DILocation(line: 148, column: 2, scope: !16676, inlinedAt: !16776)
!16781 = !DILocation(line: 148, column: 2, scope: !16677, inlinedAt: !16776)
!16782 = !DILocation(line: 148, column: 2, scope: !16680, inlinedAt: !16776)
!16783 = !DILocation(line: 160, column: 2, scope: !16659, inlinedAt: !16776)
!16784 = !DILocation(line: 109, column: 2, scope: !16754)
!16785 = !DILocation(line: 111, column: 42, scope: !16754)
!16786 = !DILocation(line: 111, column: 8, scope: !16754)
!16787 = !DILocation(line: 112, column: 2, scope: !16754)
!16788 = !DILocation(line: 116, column: 2, scope: !16754)
!16789 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3206, file: !3206, line: 944, type: !16790, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16792)
!16790 = !DISubroutineType(types: !16791)
!16791 = !{!109, !16757}
!16792 = !{!16793}
!16793 = !DILocalVariable(name: "mutex", arg: 1, scope: !16789, file: !3206, line: 944, type: !16757)
!16794 = !DILocation(line: 0, scope: !16789)
!16795 = !DILocation(line: 952, column: 2, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16789, file: !3206, line: 952, column: 2)
!16797 = !{i64 2152225839}
!16798 = !DILocation(line: 953, column: 9, scope: !16789)
!16799 = !DILocation(line: 953, column: 2, scope: !16789)
!16800 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3206, file: !3206, line: 927, type: !16801, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2460, retainedNodes: !16803)
!16801 = !DISubroutineType(types: !16802)
!16802 = !{!109, !16757, !16764}
!16803 = !{!16804, !16805}
!16804 = !DILocalVariable(name: "mutex", arg: 1, scope: !16800, file: !3206, line: 927, type: !16757)
!16805 = !DILocalVariable(name: "timeout", arg: 2, scope: !16800, file: !3206, line: 927, type: !16764)
!16806 = !DILocation(line: 0, scope: !16800)
!16807 = !DILocation(line: 936, column: 2, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16800, file: !3206, line: 936, column: 2)
!16809 = !{i64 2152225771}
!16810 = !DILocation(line: 937, column: 9, scope: !16800)
!16811 = !DILocation(line: 937, column: 2, scope: !16800)
!16812 = distinct !DISubprogram(name: "z_data_copy", scope: !16813, file: !16813, line: 22, type: !3060, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3043, retainedNodes: !2043)
!16813 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16814 = !DILocation(line: 24, column: 2, scope: !16812)
!16815 = !DILocation(line: 27, column: 2, scope: !16812)
!16816 = !DILocation(line: 71, column: 1, scope: !16812)
!16817 = distinct !DISubprogram(name: "z_add_timeout", scope: !2515, file: !2515, line: 88, type: !16818, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16824)
!16818 = !DISubroutineType(types: !16819)
!16819 = !{null, !2488, !2507, !16820}
!16820 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16821)
!16821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16822)
!16822 = !{!16823}
!16823 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16821, file: !104, line: 66, baseType: !103, size: 64)
!16824 = !{!16825, !16826, !16827, !16828, !16834, !16835, !16838, !16841}
!16825 = !DILocalVariable(name: "to", arg: 1, scope: !16817, file: !2515, line: 88, type: !2488)
!16826 = !DILocalVariable(name: "fn", arg: 2, scope: !16817, file: !2515, line: 88, type: !2507)
!16827 = !DILocalVariable(name: "timeout", arg: 3, scope: !16817, file: !2515, line: 89, type: !16820)
!16828 = !DILocalVariable(name: "__i", scope: !16829, file: !2515, line: 102, type: !16830)
!16829 = distinct !DILexicalBlock(scope: !16817, file: !2515, line: 102, column: 2)
!16830 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !253, line: 106, baseType: !16831)
!16831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !253, line: 32, size: 32, elements: !16832)
!16832 = !{!16833}
!16833 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16831, file: !253, line: 33, baseType: !109, size: 32)
!16834 = !DILocalVariable(name: "__key", scope: !16829, file: !2515, line: 102, type: !16830)
!16835 = !DILocalVariable(name: "t", scope: !16836, file: !2515, line: 103, type: !2488)
!16836 = distinct !DILexicalBlock(scope: !16837, file: !2515, line: 102, column: 24)
!16837 = distinct !DILexicalBlock(scope: !16829, file: !2515, line: 102, column: 2)
!16838 = !DILocalVariable(name: "ticks", scope: !16839, file: !2515, line: 107, type: !103)
!16839 = distinct !DILexicalBlock(scope: !16840, file: !2515, line: 106, column: 39)
!16840 = distinct !DILexicalBlock(scope: !16836, file: !2515, line: 105, column: 7)
!16841 = !DILocalVariable(name: "next_time", scope: !16842, file: !2515, line: 137, type: !854)
!16842 = distinct !DILexicalBlock(scope: !16843, file: !2515, line: 127, column: 22)
!16843 = distinct !DILexicalBlock(scope: !16836, file: !2515, line: 127, column: 7)
!16844 = !DILocation(line: 0, scope: !16817)
!16845 = !DILocation(line: 91, column: 6, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16817, file: !2515, line: 91, column: 6)
!16847 = !DILocation(line: 91, column: 6, scope: !16817)
!16848 = !DILocation(line: 99, column: 2, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16850, file: !2515, line: 99, column: 2)
!16850 = distinct !DILexicalBlock(scope: !16817, file: !2515, line: 99, column: 2)
!16851 = !DILocation(line: 99, column: 2, scope: !16850)
!16852 = !DILocation(line: 99, column: 2, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16849, file: !2515, line: 99, column: 2)
!16854 = !DILocation(line: 100, column: 6, scope: !16817)
!16855 = !DILocation(line: 100, column: 9, scope: !16817)
!16856 = !DILocation(line: 0, scope: !16829)
!16857 = !DILocalVariable(name: "l", arg: 1, scope: !16858, file: !253, line: 136, type: !16861)
!16858 = distinct !DISubprogram(name: "k_spin_lock", scope: !253, file: !253, line: 136, type: !16859, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16862)
!16859 = !DISubroutineType(types: !16860)
!16860 = !{!16830, !16861}
!16861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!16862 = !{!16857, !16863}
!16863 = !DILocalVariable(name: "k", scope: !16858, file: !253, line: 139, type: !16830)
!16864 = !DILocation(line: 0, scope: !16858, inlinedAt: !16865)
!16865 = distinct !DILocation(line: 102, column: 2, scope: !16829)
!16866 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !16871)
!16867 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6046, file: !6046, line: 42, type: !6047, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16868)
!16868 = !{!16869, !16870}
!16869 = !DILocalVariable(name: "key", scope: !16867, file: !6046, line: 44, type: !32)
!16870 = !DILocalVariable(name: "tmp", scope: !16867, file: !6046, line: 53, type: !32)
!16871 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !16865)
!16872 = !{i64 1658166}
!16873 = !DILocation(line: 0, scope: !16867, inlinedAt: !16871)
!16874 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !16865)
!16875 = distinct !DILexicalBlock(scope: !16876, file: !253, line: 148, column: 2)
!16876 = distinct !DILexicalBlock(scope: !16858, file: !253, line: 148, column: 2)
!16877 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !16865)
!16878 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !16865)
!16879 = distinct !DILexicalBlock(scope: !16875, file: !253, line: 148, column: 2)
!16880 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !16865)
!16881 = !DILocation(line: 106, column: 33, scope: !16840)
!16882 = !DILocation(line: 105, column: 7, scope: !16836)
!16883 = !DILocation(line: 107, column: 50, scope: !16839)
!16884 = !DILocation(line: 107, column: 48, scope: !16839)
!16885 = !DILocation(line: 0, scope: !16839)
!16886 = !DILocation(line: 109, column: 17, scope: !16839)
!16887 = !DILocation(line: 110, column: 3, scope: !16839)
!16888 = !DILocation(line: 111, column: 31, scope: !16889)
!16889 = distinct !DILexicalBlock(scope: !16840, file: !2515, line: 110, column: 10)
!16890 = !DILocation(line: 111, column: 37, scope: !16889)
!16891 = !DILocation(line: 111, column: 35, scope: !16889)
!16892 = !DILocation(line: 0, scope: !16840)
!16893 = !DILocation(line: 109, column: 8, scope: !16839)
!16894 = !DILocation(line: 109, column: 15, scope: !16839)
!16895 = !DILocation(line: 114, column: 12, scope: !16896)
!16896 = distinct !DILexicalBlock(scope: !16836, file: !2515, line: 114, column: 3)
!16897 = !DILocation(line: 0, scope: !16836)
!16898 = !DILocation(line: 114, column: 3, scope: !16896)
!16899 = !DILocation(line: 115, column: 24, scope: !16900)
!16900 = distinct !DILexicalBlock(scope: !16901, file: !2515, line: 115, column: 8)
!16901 = distinct !DILexicalBlock(scope: !16902, file: !2515, line: 114, column: 45)
!16902 = distinct !DILexicalBlock(scope: !16896, file: !2515, line: 114, column: 3)
!16903 = !DILocation(line: 115, column: 11, scope: !16900)
!16904 = !DILocation(line: 115, column: 18, scope: !16900)
!16905 = !DILocation(line: 115, column: 8, scope: !16901)
!16906 = !DILocation(line: 116, column: 15, scope: !16907)
!16907 = distinct !DILexicalBlock(scope: !16900, file: !2515, line: 115, column: 32)
!16908 = !DILocation(line: 117, column: 26, scope: !16907)
!16909 = !DILocation(line: 117, column: 5, scope: !16907)
!16910 = !DILocation(line: 123, column: 7, scope: !16836)
!16911 = !DILocation(line: 120, column: 15, scope: !16901)
!16912 = !DILocation(line: 114, column: 36, scope: !16902)
!16913 = distinct !{!16913, !16898, !16914}
!16914 = !DILocation(line: 121, column: 3, scope: !16896)
!16915 = !DILocation(line: 124, column: 4, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16917, file: !2515, line: 123, column: 18)
!16917 = distinct !DILexicalBlock(scope: !16836, file: !2515, line: 123, column: 7)
!16918 = !DILocation(line: 125, column: 3, scope: !16916)
!16919 = !DILocation(line: 127, column: 13, scope: !16843)
!16920 = !DILocation(line: 127, column: 10, scope: !16843)
!16921 = !DILocation(line: 127, column: 7, scope: !16836)
!16922 = !DILocation(line: 137, column: 24, scope: !16842)
!16923 = !DILocation(line: 0, scope: !16842)
!16924 = !DILocation(line: 139, column: 18, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16842, file: !2515, line: 139, column: 8)
!16926 = !DILocation(line: 139, column: 23, scope: !16925)
!16927 = !DILocation(line: 141, column: 5, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16925, file: !2515, line: 140, column: 48)
!16929 = !DILocation(line: 142, column: 4, scope: !16928)
!16930 = !DILocalVariable(name: "key", arg: 2, scope: !16931, file: !253, line: 190, type: !16830)
!16931 = distinct !DISubprogram(name: "k_spin_unlock", scope: !253, file: !253, line: 189, type: !16932, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16934)
!16932 = !DISubroutineType(types: !16933)
!16933 = !{null, !16861, !16830}
!16934 = !{!16935, !16930}
!16935 = !DILocalVariable(name: "l", arg: 1, scope: !16931, file: !253, line: 189, type: !16861)
!16936 = !DILocation(line: 0, scope: !16931, inlinedAt: !16937)
!16937 = distinct !DILocation(line: 102, column: 2, scope: !16837)
!16938 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !16937)
!16939 = distinct !DILexicalBlock(scope: !16940, file: !253, line: 194, column: 2)
!16940 = distinct !DILexicalBlock(scope: !16931, file: !253, line: 194, column: 2)
!16941 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !16937)
!16942 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !16937)
!16943 = distinct !DILexicalBlock(scope: !16939, file: !253, line: 194, column: 2)
!16944 = !DILocalVariable(name: "key", arg: 1, scope: !16945, file: !6046, line: 84, type: !32)
!16945 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6046, file: !6046, line: 84, type: !6057, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16946)
!16946 = !{!16944}
!16947 = !DILocation(line: 0, scope: !16945, inlinedAt: !16948)
!16948 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !16937)
!16949 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !16948)
!16950 = !{i64 1658983}
!16951 = !DILocation(line: 148, column: 1, scope: !16817)
!16952 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !16953, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16957)
!16953 = !DISubroutineType(types: !16954)
!16954 = !{!360, !16955}
!16955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16956, size: 32)
!16956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2492)
!16957 = !{!16958}
!16958 = !DILocalVariable(name: "node", arg: 1, scope: !16952, file: !127, line: 225, type: !16955)
!16959 = !DILocation(line: 0, scope: !16952)
!16960 = !DILocation(line: 227, column: 15, scope: !16952)
!16961 = !DILocation(line: 227, column: 20, scope: !16952)
!16962 = !DILocation(line: 227, column: 2, scope: !16952)
!16963 = distinct !DISubprogram(name: "elapsed", scope: !2515, file: !2515, line: 62, type: !16964, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2043)
!16964 = !DISubroutineType(types: !16965)
!16965 = !{!854}
!16966 = !DILocation(line: 64, column: 9, scope: !16963)
!16967 = !DILocation(line: 64, column: 28, scope: !16963)
!16968 = !DILocation(line: 64, column: 35, scope: !16963)
!16969 = !DILocation(line: 64, column: 2, scope: !16963)
!16970 = distinct !DISubprogram(name: "first", scope: !2515, file: !2515, line: 39, type: !16971, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16973)
!16971 = !DISubroutineType(types: !16972)
!16972 = !{!2488}
!16973 = !{!16974}
!16974 = !DILocalVariable(name: "t", scope: !16970, file: !2515, line: 41, type: !16975)
!16975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!16976 = !DILocation(line: 41, column: 19, scope: !16970)
!16977 = !DILocation(line: 0, scope: !16970)
!16978 = !DILocation(line: 43, column: 9, scope: !16970)
!16979 = !DILocation(line: 43, column: 2, scope: !16970)
!16980 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !16981, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !16983)
!16981 = !DISubroutineType(types: !16982)
!16982 = !{null, !16975, !16975}
!16983 = !{!16984, !16985, !16986}
!16984 = !DILocalVariable(name: "successor", arg: 1, scope: !16980, file: !127, line: 443, type: !16975)
!16985 = !DILocalVariable(name: "node", arg: 2, scope: !16980, file: !127, line: 443, type: !16975)
!16986 = !DILocalVariable(name: "prev", scope: !16980, file: !127, line: 445, type: !16987)
!16987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16975)
!16988 = !DILocation(line: 0, scope: !16980)
!16989 = !DILocation(line: 445, column: 39, scope: !16980)
!16990 = !DILocation(line: 447, column: 8, scope: !16980)
!16991 = !DILocation(line: 447, column: 13, scope: !16980)
!16992 = !DILocation(line: 448, column: 8, scope: !16980)
!16993 = !DILocation(line: 448, column: 13, scope: !16980)
!16994 = !DILocation(line: 449, column: 8, scope: !16980)
!16995 = !DILocation(line: 449, column: 13, scope: !16980)
!16996 = !DILocation(line: 450, column: 18, scope: !16980)
!16997 = !DILocation(line: 451, column: 1, scope: !16980)
!16998 = distinct !DISubprogram(name: "next", scope: !2515, file: !2515, line: 46, type: !16999, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17001)
!16999 = !DISubroutineType(types: !17000)
!17000 = !{!2488, !2488}
!17001 = !{!17002, !17003}
!17002 = !DILocalVariable(name: "t", arg: 1, scope: !16998, file: !2515, line: 46, type: !2488)
!17003 = !DILocalVariable(name: "n", scope: !16998, file: !2515, line: 48, type: !16975)
!17004 = !DILocation(line: 0, scope: !16998)
!17005 = !DILocation(line: 48, column: 58, scope: !16998)
!17006 = !DILocation(line: 48, column: 19, scope: !16998)
!17007 = !DILocation(line: 50, column: 9, scope: !16998)
!17008 = !DILocation(line: 50, column: 2, scope: !16998)
!17009 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !17010, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17013)
!17010 = !DISubroutineType(types: !17011)
!17011 = !{null, !17012, !16975}
!17012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 32)
!17013 = !{!17014, !17015, !17016}
!17014 = !DILocalVariable(name: "list", arg: 1, scope: !17009, file: !127, line: 404, type: !17012)
!17015 = !DILocalVariable(name: "node", arg: 2, scope: !17009, file: !127, line: 404, type: !16975)
!17016 = !DILocalVariable(name: "tail", scope: !17009, file: !127, line: 406, type: !16987)
!17017 = !DILocation(line: 0, scope: !17009)
!17018 = !DILocation(line: 406, column: 34, scope: !17009)
!17019 = !DILocation(line: 408, column: 8, scope: !17009)
!17020 = !DILocation(line: 408, column: 13, scope: !17009)
!17021 = !DILocation(line: 409, column: 8, scope: !17009)
!17022 = !DILocation(line: 409, column: 13, scope: !17009)
!17023 = !DILocation(line: 411, column: 8, scope: !17009)
!17024 = !DILocation(line: 411, column: 13, scope: !17009)
!17025 = !DILocation(line: 412, column: 13, scope: !17009)
!17026 = !DILocation(line: 413, column: 1, scope: !17009)
!17027 = distinct !DISubprogram(name: "next_timeout", scope: !2515, file: !2515, line: 67, type: !16964, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17028)
!17028 = !{!17029, !17030, !17031}
!17029 = !DILocalVariable(name: "to", scope: !17027, file: !2515, line: 69, type: !2488)
!17030 = !DILocalVariable(name: "ticks_elapsed", scope: !17027, file: !2515, line: 70, type: !854)
!17031 = !DILocalVariable(name: "ret", scope: !17027, file: !2515, line: 71, type: !854)
!17032 = !DILocation(line: 69, column: 24, scope: !17027)
!17033 = !DILocation(line: 0, scope: !17027)
!17034 = !DILocation(line: 70, column: 26, scope: !17027)
!17035 = !DILocation(line: 73, column: 10, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17027, file: !2515, line: 73, column: 6)
!17037 = !DILocation(line: 73, column: 19, scope: !17036)
!17038 = !DILocation(line: 74, column: 21, scope: !17036)
!17039 = !DILocation(line: 74, column: 30, scope: !17036)
!17040 = !DILocation(line: 74, column: 28, scope: !17036)
!17041 = !DILocation(line: 74, column: 45, scope: !17036)
!17042 = !DILocation(line: 73, column: 6, scope: !17027)
!17043 = !DILocation(line: 77, column: 9, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17036, file: !2515, line: 76, column: 9)
!17045 = !DILocation(line: 0, scope: !17036)
!17046 = !DILocation(line: 81, column: 20, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !17027, file: !2515, line: 81, column: 6)
!17048 = !DILocation(line: 81, column: 6, scope: !17047)
!17049 = !DILocation(line: 81, column: 32, scope: !17047)
!17050 = !DILocation(line: 85, column: 2, scope: !17027)
!17051 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !17052, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17054)
!17052 = !DISubroutineType(types: !17053)
!17053 = !{!16975, !17012, !16975}
!17054 = !{!17055, !17056}
!17055 = !DILocalVariable(name: "list", arg: 1, scope: !17051, file: !127, line: 341, type: !17012)
!17056 = !DILocalVariable(name: "node", arg: 2, scope: !17051, file: !127, line: 342, type: !16975)
!17057 = !DILocation(line: 0, scope: !17051)
!17058 = !DILocation(line: 344, column: 15, scope: !17051)
!17059 = !DILocation(line: 344, column: 9, scope: !17051)
!17060 = !DILocation(line: 344, column: 26, scope: !17051)
!17061 = !DILocation(line: 344, column: 2, scope: !17051)
!17062 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !17052, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17063)
!17063 = !{!17064, !17065}
!17064 = !DILocalVariable(name: "list", arg: 1, scope: !17062, file: !127, line: 325, type: !17012)
!17065 = !DILocalVariable(name: "node", arg: 2, scope: !17062, file: !127, line: 326, type: !16975)
!17066 = !DILocation(line: 0, scope: !17062)
!17067 = !DILocation(line: 328, column: 24, scope: !17062)
!17068 = !DILocation(line: 328, column: 15, scope: !17062)
!17069 = !DILocation(line: 328, column: 9, scope: !17062)
!17070 = !DILocation(line: 328, column: 45, scope: !17062)
!17071 = !DILocation(line: 328, column: 2, scope: !17062)
!17072 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !17073, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17075)
!17073 = !DISubroutineType(types: !17074)
!17074 = !{!16975, !17012}
!17075 = !{!17076}
!17076 = !DILocalVariable(name: "list", arg: 1, scope: !17072, file: !127, line: 294, type: !17012)
!17077 = !DILocation(line: 0, scope: !17072)
!17078 = !DILocation(line: 296, column: 9, scope: !17072)
!17079 = !DILocation(line: 296, column: 2, scope: !17072)
!17080 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !17081, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17083)
!17081 = !DISubroutineType(types: !17082)
!17082 = !{!360, !17012}
!17083 = !{!17084}
!17084 = !DILocalVariable(name: "list", arg: 1, scope: !17080, file: !127, line: 266, type: !17012)
!17085 = !DILocation(line: 0, scope: !17080)
!17086 = !DILocation(line: 268, column: 15, scope: !17080)
!17087 = !DILocation(line: 268, column: 20, scope: !17080)
!17088 = !DILocation(line: 268, column: 2, scope: !17080)
!17089 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2515, file: !2515, line: 150, type: !17090, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17092)
!17090 = !DISubroutineType(types: !17091)
!17091 = !{!109, !2488}
!17092 = !{!17093, !17094, !17095, !17097}
!17093 = !DILocalVariable(name: "to", arg: 1, scope: !17089, file: !2515, line: 150, type: !2488)
!17094 = !DILocalVariable(name: "ret", scope: !17089, file: !2515, line: 152, type: !109)
!17095 = !DILocalVariable(name: "__i", scope: !17096, file: !2515, line: 154, type: !16830)
!17096 = distinct !DILexicalBlock(scope: !17089, file: !2515, line: 154, column: 2)
!17097 = !DILocalVariable(name: "__key", scope: !17096, file: !2515, line: 154, type: !16830)
!17098 = !DILocation(line: 0, scope: !17089)
!17099 = !DILocation(line: 0, scope: !17096)
!17100 = !DILocation(line: 0, scope: !16858, inlinedAt: !17101)
!17101 = distinct !DILocation(line: 154, column: 2, scope: !17096)
!17102 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17103)
!17103 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17101)
!17104 = !DILocation(line: 0, scope: !16867, inlinedAt: !17103)
!17105 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17101)
!17106 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17101)
!17107 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17101)
!17108 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17101)
!17109 = !DILocation(line: 155, column: 7, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17111, file: !2515, line: 155, column: 7)
!17111 = distinct !DILexicalBlock(scope: !17112, file: !2515, line: 154, column: 24)
!17112 = distinct !DILexicalBlock(scope: !17096, file: !2515, line: 154, column: 2)
!17113 = !DILocation(line: 155, column: 7, scope: !17111)
!17114 = !DILocation(line: 156, column: 4, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17110, file: !2515, line: 155, column: 39)
!17116 = !DILocation(line: 158, column: 3, scope: !17115)
!17117 = !DILocation(line: 0, scope: !16931, inlinedAt: !17118)
!17118 = distinct !DILocation(line: 154, column: 2, scope: !17112)
!17119 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17118)
!17120 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17118)
!17121 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17118)
!17122 = !DILocation(line: 0, scope: !16945, inlinedAt: !17123)
!17123 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17118)
!17124 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17123)
!17125 = !DILocation(line: 161, column: 2, scope: !17089)
!17126 = distinct !DISubprogram(name: "remove_timeout", scope: !2515, file: !2515, line: 53, type: !2509, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17127)
!17127 = !{!17128}
!17128 = !DILocalVariable(name: "t", arg: 1, scope: !17126, file: !2515, line: 53, type: !2488)
!17129 = !DILocation(line: 0, scope: !17126)
!17130 = !DILocation(line: 55, column: 6, scope: !17131)
!17131 = distinct !DILexicalBlock(scope: !17126, file: !2515, line: 55, column: 6)
!17132 = !DILocation(line: 55, column: 14, scope: !17131)
!17133 = !DILocation(line: 55, column: 6, scope: !17126)
!17134 = !DILocation(line: 56, column: 25, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17131, file: !2515, line: 55, column: 23)
!17136 = !DILocation(line: 56, column: 12, scope: !17135)
!17137 = !DILocation(line: 56, column: 19, scope: !17135)
!17138 = !DILocation(line: 57, column: 2, scope: !17135)
!17139 = !DILocation(line: 59, column: 23, scope: !17126)
!17140 = !DILocation(line: 59, column: 2, scope: !17126)
!17141 = !DILocation(line: 60, column: 1, scope: !17126)
!17142 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !17143, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17145)
!17143 = !DISubroutineType(types: !17144)
!17144 = !{null, !16975}
!17145 = !{!17146, !17147, !17148}
!17146 = !DILocalVariable(name: "node", arg: 1, scope: !17142, file: !127, line: 496, type: !16975)
!17147 = !DILocalVariable(name: "prev", scope: !17142, file: !127, line: 498, type: !16987)
!17148 = !DILocalVariable(name: "next", scope: !17142, file: !127, line: 499, type: !16987)
!17149 = !DILocation(line: 0, scope: !17142)
!17150 = !DILocation(line: 498, column: 34, scope: !17142)
!17151 = !DILocation(line: 499, column: 34, scope: !17142)
!17152 = !DILocation(line: 501, column: 8, scope: !17142)
!17153 = !DILocation(line: 501, column: 13, scope: !17142)
!17154 = !DILocation(line: 502, column: 8, scope: !17142)
!17155 = !DILocation(line: 502, column: 13, scope: !17142)
!17156 = !DILocation(line: 503, column: 2, scope: !17142)
!17157 = !DILocation(line: 504, column: 1, scope: !17142)
!17158 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !17143, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17159)
!17159 = !{!17160}
!17160 = !DILocalVariable(name: "node", arg: 1, scope: !17158, file: !127, line: 211, type: !16975)
!17161 = !DILocation(line: 0, scope: !17158)
!17162 = !DILocation(line: 213, column: 8, scope: !17158)
!17163 = !DILocation(line: 213, column: 13, scope: !17158)
!17164 = !DILocation(line: 214, column: 8, scope: !17158)
!17165 = !DILocation(line: 214, column: 13, scope: !17158)
!17166 = !DILocation(line: 215, column: 1, scope: !17158)
!17167 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2515, file: !2515, line: 183, type: !17168, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17172)
!17168 = !DISubroutineType(types: !17169)
!17169 = !{!103, !17170}
!17170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17171, size: 32)
!17171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2489)
!17172 = !{!17173, !17174, !17175, !17177}
!17173 = !DILocalVariable(name: "timeout", arg: 1, scope: !17167, file: !2515, line: 183, type: !17170)
!17174 = !DILocalVariable(name: "ticks", scope: !17167, file: !2515, line: 185, type: !103)
!17175 = !DILocalVariable(name: "__i", scope: !17176, file: !2515, line: 187, type: !16830)
!17176 = distinct !DILexicalBlock(scope: !17167, file: !2515, line: 187, column: 2)
!17177 = !DILocalVariable(name: "__key", scope: !17176, file: !2515, line: 187, type: !16830)
!17178 = !DILocation(line: 0, scope: !17167)
!17179 = !DILocation(line: 0, scope: !17176)
!17180 = !DILocation(line: 0, scope: !16858, inlinedAt: !17181)
!17181 = distinct !DILocation(line: 187, column: 2, scope: !17176)
!17182 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17183)
!17183 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17181)
!17184 = !DILocation(line: 0, scope: !16867, inlinedAt: !17183)
!17185 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17181)
!17186 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17181)
!17187 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17181)
!17188 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17181)
!17189 = !DILocation(line: 188, column: 11, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17191, file: !2515, line: 187, column: 24)
!17191 = distinct !DILexicalBlock(scope: !17176, file: !2515, line: 187, column: 2)
!17192 = !DILocation(line: 0, scope: !16931, inlinedAt: !17193)
!17193 = distinct !DILocation(line: 187, column: 2, scope: !17191)
!17194 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17193)
!17195 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17193)
!17196 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17193)
!17197 = !DILocation(line: 0, scope: !16945, inlinedAt: !17198)
!17198 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17193)
!17199 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17198)
!17200 = !DILocation(line: 191, column: 2, scope: !17167)
!17201 = distinct !DISubprogram(name: "timeout_rem", scope: !2515, file: !2515, line: 165, type: !17168, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17202)
!17202 = !{!17203, !17204, !17205}
!17203 = !DILocalVariable(name: "timeout", arg: 1, scope: !17201, file: !2515, line: 165, type: !17170)
!17204 = !DILocalVariable(name: "ticks", scope: !17201, file: !2515, line: 167, type: !103)
!17205 = !DILocalVariable(name: "t", scope: !17206, file: !2515, line: 173, type: !2488)
!17206 = distinct !DILexicalBlock(scope: !17201, file: !2515, line: 173, column: 2)
!17207 = !DILocation(line: 0, scope: !17201)
!17208 = !DILocation(line: 169, column: 6, scope: !17209)
!17209 = distinct !DILexicalBlock(scope: !17201, file: !2515, line: 169, column: 6)
!17210 = !DILocation(line: 169, column: 6, scope: !17201)
!17211 = !DILocation(line: 173, column: 28, scope: !17206)
!17212 = !DILocation(line: 0, scope: !17206)
!17213 = !DILocation(line: 173, column: 39, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17206, file: !2515, line: 173, column: 2)
!17215 = !DILocation(line: 173, column: 2, scope: !17206)
!17216 = !DILocation(line: 174, column: 15, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17214, file: !2515, line: 173, column: 61)
!17218 = !DILocation(line: 174, column: 9, scope: !17217)
!17219 = !DILocation(line: 175, column: 15, scope: !17220)
!17220 = distinct !DILexicalBlock(scope: !17217, file: !2515, line: 175, column: 7)
!17221 = !DILocation(line: 175, column: 7, scope: !17217)
!17222 = !DILocation(line: 173, column: 52, scope: !17214)
!17223 = distinct !{!17223, !17215, !17224}
!17224 = !DILocation(line: 178, column: 2, scope: !17206)
!17225 = !DILocation(line: 180, column: 17, scope: !17201)
!17226 = !DILocation(line: 180, column: 15, scope: !17201)
!17227 = !DILocation(line: 180, column: 2, scope: !17201)
!17228 = !DILocation(line: 181, column: 1, scope: !17201)
!17229 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13391, file: !13391, line: 35, type: !17230, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17232)
!17230 = !DISubroutineType(types: !17231)
!17231 = !{!360, !17170}
!17232 = !{!17233}
!17233 = !DILocalVariable(name: "to", arg: 1, scope: !17229, file: !13391, line: 35, type: !17170)
!17234 = !DILocation(line: 0, scope: !17229)
!17235 = !DILocation(line: 37, column: 35, scope: !17229)
!17236 = !DILocation(line: 37, column: 10, scope: !17229)
!17237 = !DILocation(line: 37, column: 9, scope: !17229)
!17238 = !DILocation(line: 37, column: 2, scope: !17229)
!17239 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2515, file: !2515, line: 194, type: !17168, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17240)
!17240 = !{!17241, !17242, !17243, !17245}
!17241 = !DILocalVariable(name: "timeout", arg: 1, scope: !17239, file: !2515, line: 194, type: !17170)
!17242 = !DILocalVariable(name: "ticks", scope: !17239, file: !2515, line: 196, type: !103)
!17243 = !DILocalVariable(name: "__i", scope: !17244, file: !2515, line: 198, type: !16830)
!17244 = distinct !DILexicalBlock(scope: !17239, file: !2515, line: 198, column: 2)
!17245 = !DILocalVariable(name: "__key", scope: !17244, file: !2515, line: 198, type: !16830)
!17246 = !DILocation(line: 0, scope: !17239)
!17247 = !DILocation(line: 0, scope: !17244)
!17248 = !DILocation(line: 0, scope: !16858, inlinedAt: !17249)
!17249 = distinct !DILocation(line: 198, column: 2, scope: !17244)
!17250 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17251)
!17251 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17249)
!17252 = !DILocation(line: 0, scope: !16867, inlinedAt: !17251)
!17253 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17249)
!17254 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17249)
!17255 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17249)
!17256 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17249)
!17257 = !DILocation(line: 199, column: 11, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17259, file: !2515, line: 198, column: 24)
!17259 = distinct !DILexicalBlock(scope: !17244, file: !2515, line: 198, column: 2)
!17260 = !DILocation(line: 199, column: 23, scope: !17258)
!17261 = !DILocation(line: 0, scope: !16931, inlinedAt: !17262)
!17262 = distinct !DILocation(line: 198, column: 2, scope: !17259)
!17263 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17262)
!17264 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17262)
!17265 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17262)
!17266 = !DILocation(line: 0, scope: !16945, inlinedAt: !17267)
!17267 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17262)
!17268 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17267)
!17269 = !DILocation(line: 199, column: 21, scope: !17258)
!17270 = !DILocation(line: 202, column: 2, scope: !17239)
!17271 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2515, file: !2515, line: 205, type: !16964, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17272)
!17272 = !{!17273, !17274, !17276}
!17273 = !DILocalVariable(name: "ret", scope: !17271, file: !2515, line: 207, type: !854)
!17274 = !DILocalVariable(name: "__i", scope: !17275, file: !2515, line: 209, type: !16830)
!17275 = distinct !DILexicalBlock(scope: !17271, file: !2515, line: 209, column: 2)
!17276 = !DILocalVariable(name: "__key", scope: !17275, file: !2515, line: 209, type: !16830)
!17277 = !DILocation(line: 0, scope: !17271)
!17278 = !DILocation(line: 0, scope: !17275)
!17279 = !DILocation(line: 0, scope: !16858, inlinedAt: !17280)
!17280 = distinct !DILocation(line: 209, column: 2, scope: !17275)
!17281 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17282)
!17282 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17280)
!17283 = !DILocation(line: 0, scope: !16867, inlinedAt: !17282)
!17284 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17280)
!17285 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17280)
!17286 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17280)
!17287 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17280)
!17288 = !DILocation(line: 210, column: 9, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17290, file: !2515, line: 209, column: 24)
!17290 = distinct !DILexicalBlock(scope: !17275, file: !2515, line: 209, column: 2)
!17291 = !DILocation(line: 0, scope: !16931, inlinedAt: !17292)
!17292 = distinct !DILocation(line: 209, column: 2, scope: !17290)
!17293 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17292)
!17294 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17292)
!17295 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17292)
!17296 = !DILocation(line: 0, scope: !16945, inlinedAt: !17297)
!17297 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17292)
!17298 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17297)
!17299 = !DILocation(line: 212, column: 2, scope: !17271)
!17300 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2515, file: !2515, line: 215, type: !10695, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17301)
!17301 = !{!17302, !17303, !17304, !17306, !17307, !17310, !17311}
!17302 = !DILocalVariable(name: "ticks", arg: 1, scope: !17300, file: !2515, line: 215, type: !854)
!17303 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17300, file: !2515, line: 215, type: !360)
!17304 = !DILocalVariable(name: "__i", scope: !17305, file: !2515, line: 217, type: !16830)
!17305 = distinct !DILexicalBlock(scope: !17300, file: !2515, line: 217, column: 2)
!17306 = !DILocalVariable(name: "__key", scope: !17305, file: !2515, line: 217, type: !16830)
!17307 = !DILocalVariable(name: "next_to", scope: !17308, file: !2515, line: 218, type: !109)
!17308 = distinct !DILexicalBlock(scope: !17309, file: !2515, line: 217, column: 24)
!17309 = distinct !DILexicalBlock(scope: !17305, file: !2515, line: 217, column: 2)
!17310 = !DILocalVariable(name: "sooner", scope: !17308, file: !2515, line: 219, type: !360)
!17311 = !DILocalVariable(name: "imminent", scope: !17308, file: !2515, line: 221, type: !360)
!17312 = !DILocation(line: 0, scope: !17300)
!17313 = !DILocation(line: 0, scope: !17305)
!17314 = !DILocation(line: 0, scope: !16858, inlinedAt: !17315)
!17315 = distinct !DILocation(line: 217, column: 2, scope: !17305)
!17316 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17317)
!17317 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17315)
!17318 = !DILocation(line: 0, scope: !16867, inlinedAt: !17317)
!17319 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17315)
!17320 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17315)
!17321 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17315)
!17322 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17315)
!17323 = !DILocation(line: 218, column: 17, scope: !17308)
!17324 = !DILocation(line: 0, scope: !17308)
!17325 = !DILocation(line: 221, column: 27, scope: !17308)
!17326 = !DILocation(line: 233, column: 17, scope: !17327)
!17327 = distinct !DILexicalBlock(scope: !17308, file: !2515, line: 233, column: 7)
!17328 = !DILocation(line: 234, column: 26, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17327, file: !2515, line: 233, column: 56)
!17330 = !DILocation(line: 234, column: 4, scope: !17329)
!17331 = !DILocation(line: 235, column: 3, scope: !17329)
!17332 = !DILocation(line: 0, scope: !16931, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 217, column: 2, scope: !17309)
!17334 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17333)
!17335 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17333)
!17336 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17333)
!17337 = !DILocation(line: 0, scope: !16945, inlinedAt: !17338)
!17338 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17333)
!17339 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17338)
!17340 = !DILocation(line: 237, column: 1, scope: !17300)
!17341 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2515, file: !2515, line: 239, type: !17342, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17344)
!17342 = !DISubroutineType(types: !17343)
!17343 = !{null, !854}
!17344 = !{!17345, !17346, !17347, !17349}
!17345 = !DILocalVariable(name: "ticks", arg: 1, scope: !17341, file: !2515, line: 239, type: !854)
!17346 = !DILocalVariable(name: "key", scope: !17341, file: !2515, line: 245, type: !16830)
!17347 = !DILocalVariable(name: "t", scope: !17348, file: !2515, line: 262, type: !2488)
!17348 = distinct !DILexicalBlock(scope: !17341, file: !2515, line: 261, column: 67)
!17349 = !DILocalVariable(name: "dt", scope: !17348, file: !2515, line: 263, type: !109)
!17350 = !DILocation(line: 0, scope: !17341)
!17351 = !DILocation(line: 242, column: 2, scope: !17341)
!17352 = !DILocation(line: 0, scope: !16858, inlinedAt: !17353)
!17353 = distinct !DILocation(line: 245, column: 25, scope: !17341)
!17354 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17355)
!17355 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17353)
!17356 = !DILocation(line: 0, scope: !16867, inlinedAt: !17355)
!17357 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17353)
!17358 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17353)
!17359 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17353)
!17360 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17353)
!17361 = !DILocation(line: 261, column: 9, scope: !17341)
!17362 = !DILocation(line: 261, column: 17, scope: !17341)
!17363 = !DILocation(line: 261, column: 25, scope: !17341)
!17364 = !DILocation(line: 261, column: 37, scope: !17341)
!17365 = !DILocation(line: 261, column: 47, scope: !17341)
!17366 = !DILocation(line: 261, column: 44, scope: !17341)
!17367 = !DILocation(line: 261, column: 2, scope: !17341)
!17368 = !DILocation(line: 0, scope: !17348)
!17369 = !DILocation(line: 263, column: 12, scope: !17348)
!17370 = !DILocation(line: 265, column: 16, scope: !17348)
!17371 = !DILocation(line: 265, column: 13, scope: !17348)
!17372 = !DILocation(line: 266, column: 13, scope: !17348)
!17373 = !DILocation(line: 267, column: 3, scope: !17348)
!17374 = !DILocation(line: 0, scope: !16931, inlinedAt: !17375)
!17375 = distinct !DILocation(line: 269, column: 3, scope: !17348)
!17376 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17375)
!17377 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17375)
!17378 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17375)
!17379 = !DILocation(line: 0, scope: !16945, inlinedAt: !17380)
!17380 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17375)
!17381 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17380)
!17382 = !DILocation(line: 270, column: 6, scope: !17348)
!17383 = !DILocation(line: 270, column: 3, scope: !17348)
!17384 = !DILocation(line: 0, scope: !16858, inlinedAt: !17385)
!17385 = distinct !DILocation(line: 271, column: 9, scope: !17348)
!17386 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17387)
!17387 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17385)
!17388 = !DILocation(line: 0, scope: !16867, inlinedAt: !17387)
!17389 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17385)
!17390 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17385)
!17391 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17385)
!17392 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17385)
!17393 = !DILocation(line: 272, column: 22, scope: !17348)
!17394 = distinct !{!17394, !17367, !17395}
!17395 = !DILocation(line: 273, column: 2, scope: !17341)
!17396 = !DILocation(line: 276, column: 19, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17398, file: !2515, line: 275, column: 23)
!17398 = distinct !DILexicalBlock(scope: !17341, file: !2515, line: 275, column: 6)
!17399 = !DILocation(line: 277, column: 2, scope: !17397)
!17400 = !DILocation(line: 279, column: 15, scope: !17341)
!17401 = !DILocation(line: 279, column: 12, scope: !17341)
!17402 = !DILocation(line: 280, column: 21, scope: !17341)
!17403 = !DILocation(line: 282, column: 24, scope: !17341)
!17404 = !DILocation(line: 282, column: 2, scope: !17341)
!17405 = !DILocation(line: 0, scope: !16931, inlinedAt: !17406)
!17406 = distinct !DILocation(line: 284, column: 2, scope: !17341)
!17407 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17406)
!17408 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17406)
!17409 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17406)
!17410 = !DILocation(line: 0, scope: !16945, inlinedAt: !17411)
!17411 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17406)
!17412 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17411)
!17413 = !DILocation(line: 285, column: 1, scope: !17341)
!17414 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2515, file: !2515, line: 287, type: !17415, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17417)
!17415 = !DISubroutineType(types: !17416)
!17416 = !{!105}
!17417 = !{!17418, !17419, !17421}
!17418 = !DILocalVariable(name: "t", scope: !17414, file: !2515, line: 289, type: !111)
!17419 = !DILocalVariable(name: "__i", scope: !17420, file: !2515, line: 291, type: !16830)
!17420 = distinct !DILexicalBlock(scope: !17414, file: !2515, line: 291, column: 2)
!17421 = !DILocalVariable(name: "__key", scope: !17420, file: !2515, line: 291, type: !16830)
!17422 = !DILocation(line: 0, scope: !17414)
!17423 = !DILocation(line: 0, scope: !17420)
!17424 = !DILocation(line: 0, scope: !16858, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 291, column: 2, scope: !17420)
!17426 = !DILocation(line: 55, column: 2, scope: !16867, inlinedAt: !17427)
!17427 = distinct !DILocation(line: 145, column: 10, scope: !16858, inlinedAt: !17425)
!17428 = !DILocation(line: 0, scope: !16867, inlinedAt: !17427)
!17429 = !DILocation(line: 148, column: 2, scope: !16875, inlinedAt: !17425)
!17430 = !DILocation(line: 148, column: 2, scope: !16876, inlinedAt: !17425)
!17431 = !DILocation(line: 148, column: 2, scope: !16879, inlinedAt: !17425)
!17432 = !DILocation(line: 160, column: 2, scope: !16858, inlinedAt: !17425)
!17433 = !DILocation(line: 292, column: 7, scope: !17434)
!17434 = distinct !DILexicalBlock(scope: !17435, file: !2515, line: 291, column: 24)
!17435 = distinct !DILexicalBlock(scope: !17420, file: !2515, line: 291, column: 2)
!17436 = !DILocation(line: 292, column: 19, scope: !17434)
!17437 = !DILocation(line: 0, scope: !16931, inlinedAt: !17438)
!17438 = distinct !DILocation(line: 291, column: 2, scope: !17435)
!17439 = !DILocation(line: 194, column: 2, scope: !16939, inlinedAt: !17438)
!17440 = !DILocation(line: 194, column: 2, scope: !16940, inlinedAt: !17438)
!17441 = !DILocation(line: 194, column: 2, scope: !16943, inlinedAt: !17438)
!17442 = !DILocation(line: 0, scope: !16945, inlinedAt: !17443)
!17443 = distinct !DILocation(line: 215, column: 2, scope: !16931, inlinedAt: !17438)
!17444 = !DILocation(line: 95, column: 2, scope: !16945, inlinedAt: !17443)
!17445 = !DILocation(line: 292, column: 17, scope: !17434)
!17446 = !DILocation(line: 294, column: 2, scope: !17414)
!17447 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2515, file: !2515, line: 297, type: !7389, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2043)
!17448 = !DILocation(line: 300, column: 19, scope: !17447)
!17449 = !DILocation(line: 300, column: 9, scope: !17447)
!17450 = !DILocation(line: 300, column: 2, scope: !17447)
!17451 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2515, file: !2515, line: 306, type: !17415, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2043)
!17452 = !DILocation(line: 308, column: 9, scope: !17451)
!17453 = !DILocation(line: 308, column: 2, scope: !17451)
!17454 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2515, file: !2515, line: 319, type: !6070, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17455)
!17455 = !{!17456, !17457, !17458, !17459}
!17456 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17454, file: !2515, line: 319, type: !110)
!17457 = !DILocalVariable(name: "start_cycles", scope: !17454, file: !2515, line: 328, type: !110)
!17458 = !DILocalVariable(name: "cycles_to_wait", scope: !17454, file: !2515, line: 331, type: !110)
!17459 = !DILocalVariable(name: "current_cycles", scope: !17460, file: !2515, line: 338, type: !110)
!17460 = distinct !DILexicalBlock(scope: !17461, file: !2515, line: 337, column: 11)
!17461 = distinct !DILexicalBlock(scope: !17462, file: !2515, line: 337, column: 2)
!17462 = distinct !DILexicalBlock(scope: !17454, file: !2515, line: 337, column: 2)
!17463 = !DILocation(line: 0, scope: !17454)
!17464 = !DILocation(line: 322, column: 19, scope: !17465)
!17465 = distinct !DILexicalBlock(scope: !17454, file: !2515, line: 322, column: 6)
!17466 = !DILocation(line: 322, column: 6, scope: !17454)
!17467 = !DILocation(line: 328, column: 26, scope: !17454)
!17468 = !DILocation(line: 333, column: 43, scope: !17454)
!17469 = !DILocation(line: 337, column: 2, scope: !17454)
!17470 = !DILocation(line: 338, column: 29, scope: !17460)
!17471 = !DILocation(line: 0, scope: !17460)
!17472 = !DILocation(line: 341, column: 23, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17460, file: !2515, line: 341, column: 7)
!17474 = !DILocation(line: 341, column: 39, scope: !17473)
!17475 = !DILocation(line: 349, column: 1, scope: !17454)
!17476 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !7389, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2043)
!17477 = !DILocation(line: 1677, column: 9, scope: !17476)
!17478 = !DILocation(line: 1677, column: 2, scope: !17476)
!17479 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17480, file: !17480, line: 24, type: !7389, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !2043)
!17480 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17481 = !DILocation(line: 26, column: 9, scope: !17479)
!17482 = !DILocation(line: 26, column: 2, scope: !17479)
!17483 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2515, file: !2515, line: 364, type: !17484, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2485, retainedNodes: !17486)
!17484 = !DISubroutineType(types: !17485)
!17485 = !{!111, !16820}
!17486 = !{!17487, !17488}
!17487 = !DILocalVariable(name: "timeout", arg: 1, scope: !17483, file: !2515, line: 364, type: !16820)
!17488 = !DILocalVariable(name: "dt", scope: !17483, file: !2515, line: 366, type: !103)
!17489 = !DILocation(line: 0, scope: !17483)
!17490 = !DILocation(line: 368, column: 6, scope: !17483)
!17491 = !DILocation(line: 371, column: 10, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17493, file: !2515, line: 370, column: 47)
!17493 = distinct !DILexicalBlock(scope: !17494, file: !2515, line: 370, column: 13)
!17494 = distinct !DILexicalBlock(scope: !17483, file: !2515, line: 368, column: 6)
!17495 = !DILocation(line: 371, column: 3, scope: !17492)
!17496 = !DILocation(line: 376, column: 58, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17498, file: !2515, line: 376, column: 7)
!17498 = distinct !DILexicalBlock(scope: !17493, file: !2515, line: 372, column: 9)
!17499 = !DILocation(line: 376, column: 7, scope: !17498)
!17500 = !DILocation(line: 376, column: 43, scope: !17497)
!17501 = !DILocation(line: 377, column: 4, scope: !17502)
!17502 = distinct !DILexicalBlock(scope: !17497, file: !2515, line: 376, column: 64)
!17503 = !DILocation(line: 379, column: 10, scope: !17498)
!17504 = !DILocation(line: 379, column: 33, scope: !17498)
!17505 = !DILocation(line: 379, column: 31, scope: !17498)
!17506 = !DILocation(line: 379, column: 3, scope: !17498)
!17507 = !DILocation(line: 0, scope: !17494)
!17508 = !DILocation(line: 381, column: 1, scope: !17483)
!17509 = distinct !DISubprogram(name: "boot_banner", scope: !17510, file: !17510, line: 26, type: !3060, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3046, retainedNodes: !2043)
!17510 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17511 = !DILocation(line: 34, column: 2, scope: !17509)
!17512 = !DILocation(line: 36, column: 1, scope: !17509)
