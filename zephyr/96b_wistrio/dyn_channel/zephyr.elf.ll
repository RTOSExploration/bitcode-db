; ModuleID = 'build/96b_wistrio/dyn_channel/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type { i32 }
%struct.zbus_channel = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer** }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.k_spinlock] }
%struct._thread_arch = type { i32, i32 }
%struct.zbus_observer = type { i8, %struct.k_msgq*, {}* }
%struct.zbus_observer.17 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.16*)* }
%struct.zbus_channel.16 = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer.17** }
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.external_data_msg = type { i8*, i32 }
%struct.version_msg = type { i8, i8, i16 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.zbus_channel.158 = type { i8*, i16, i8*, i8*, i1 (i8*, i32)*, %struct.k_mutex*, %struct.zbus_observer.157** }
%struct.zbus_observer.157 = type { i8, %struct.k_msgq*, void (%struct.zbus_channel.158*)* }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239644 to i8*), void (i8*)* inttoptr (i32 134238223 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239644 to i8*), void (i8*)* inttoptr (i32 134238213 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239644 to i8*), void (i8*)* inttoptr (i32 134238203 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239644 to i8*), void (i8*)* inttoptr (i32 134238193 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134239644 to i8*), void (i8*)* inttoptr (i32 134238183 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239644 to i8*), void (i8*)* inttoptr (i32 134238173 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134239644 to i8*), void (i8*)* inttoptr (i32 134238163 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [54 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_consumer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_consumer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub, i32 0, i32 0), i8* bitcast (%struct.k_mutex* @_zbus_mutex_ack to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_data_ready_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_pkt_chan to i8*), i8* bitcast (%struct.k_mutex* @_zbus_mutex_version_chan to i8*), i8* bitcast (%struct.zbus_channel.16* @ack to i8*), i8* bitcast (%struct.zbus_channel.16* @data_ready_chan to i8*), i8* getelementptr inbounds (%struct.zbus_observer.17, %struct.zbus_observer.17* @filter_lis, i32 0, i32 0), i8* bitcast (%struct.zbus_channel.16* @pkt_chan to i8*), i8* bitcast (%struct.zbus_channel.16* @version_chan to i8*), i8* bitcast (%struct._static_thread_data* @_k_thread_data_producer_thread_id to i8*), i8* bitcast (%struct.k_msgq* @_zbus_observer_queue_producer_sub to i8*), i8* getelementptr inbounds ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }, { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub, i32 0, i32 0), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_zbus to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*), i8* bitcast (%struct.k_heap* @_system_heap to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@_zbus_observer_queue_consumer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_consumer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_consumer_sub", align 4, !dbg !25
@_k_fifo_buf__zbus_observer_queue_consumer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.0", align 4, !dbg !330
@_k_thread_obj_consumer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !340
@_k_thread_stack_consumer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/consumer.c\22.1", align 64, !dbg !335
@.str = private unnamed_addr constant [19 x i8] c"consumer_thread_id\00", align 1
@_k_thread_data_consumer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_consumer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_consumer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @consumer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 4, i32 0, i32 1000, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_consumer_thread_id", align 4, !dbg !295
@consumer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_consumer_thread_id, align 4, !dbg !326
@.str.1 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"chan == &data_ready_chan\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"CMAKE_SOURCE_DIR/src/consumer.c\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"%c: size=%02d\0A\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"Content\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@_zbus_mutex_pkt_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_pkt_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_pkt_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_pkt_chan", align 4, !dbg !342
@.str.7 = private unnamed_addr constant [9 x i8] c"pkt_chan\00", align 1
@_zbus_message_pkt_chan = internal global %struct.external_data_msg zeroinitializer, align 4, !dbg !512
@_zbus_observers_pkt_chan = internal constant [2 x %struct.zbus_observer.17*] [%struct.zbus_observer.17* @filter_lis, %struct.zbus_observer.17* null], align 4, !dbg !519
@_zbus_mutex_version_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_version_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_version_chan", align 4, !dbg !498
@.str.1.15 = private unnamed_addr constant [13 x i8] c"version_chan\00", align 1
@_zbus_message_version_chan = internal global %struct.version_msg { i8 0, i8 1, i16 1 }, align 2, !dbg !522
@_zbus_observers_version_chan = internal constant [1 x %struct.zbus_observer.17*] zeroinitializer, align 4, !dbg !529
@version_chan = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.15, i32 0, i32 0), i16 4, i8* null, i8* getelementptr inbounds (%struct.version_msg, %struct.version_msg* @_zbus_message_version_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_version_chan, %struct.zbus_observer.17** getelementptr inbounds ([1 x %struct.zbus_observer.17*], [1 x %struct.zbus_observer.17*]* @_zbus_observers_version_chan, i32 0, i32 0) }, section "._zbus_channel.static.version_chan", align 4, !dbg !500
@_zbus_mutex_data_ready_chan = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_data_ready_chan, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_data_ready_chan, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_data_ready_chan", align 4, !dbg !502
@.str.2.13 = private unnamed_addr constant [16 x i8] c"data_ready_chan\00", align 1
@_zbus_message_data_ready_chan = internal global %struct.z_thread_stack_element zeroinitializer, align 1, !dbg !534
@_zbus_observers_data_ready_chan = internal constant [2 x %struct.zbus_observer.17*] [%struct.zbus_observer.17* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer.17*), %struct.zbus_observer.17* null], align 4, !dbg !539
@data_ready_chan = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.13, i32 0, i32 0), i16 1, i8* null, i8* getelementptr inbounds (%struct.z_thread_stack_element, %struct.z_thread_stack_element* @_zbus_message_data_ready_chan, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_data_ready_chan, %struct.zbus_observer.17** getelementptr inbounds ([2 x %struct.zbus_observer.17*], [2 x %struct.zbus_observer.17*]* @_zbus_observers_data_ready_chan, i32 0, i32 0) }, section "._zbus_channel.static.data_ready_chan", align 4, !dbg !504
@_zbus_mutex_ack = internal global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_ack, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @_zbus_mutex_ack, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static._zbus_mutex_ack", align 4, !dbg !506
@.str.3.18 = private unnamed_addr constant [4 x i8] c"ack\00", align 1
@_zbus_message_ack = internal global %struct.z_thread_stack_element zeroinitializer, align 1, !dbg !541
@_zbus_observers_ack = internal constant [2 x %struct.zbus_observer.17*] [%struct.zbus_observer.17* bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub to %struct.zbus_observer.17*), %struct.zbus_observer.17* null], align 4, !dbg !543
@ack = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.18, i32 0, i32 0), i16 1, i8* null, i8* getelementptr inbounds (%struct.z_thread_stack_element, %struct.z_thread_stack_element* @_zbus_message_ack, i32 0, i32 0), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_ack, %struct.zbus_observer.17** getelementptr inbounds ([2 x %struct.zbus_observer.17*], [2 x %struct.zbus_observer.17*]* @_zbus_observers_ack, i32 0, i32 0) }, section "._zbus_channel.static.ack", align 4, !dbg !508
@filter_lis = dso_local global %struct.zbus_observer.17 { i8 1, %struct.k_msgq* null, void (%struct.zbus_channel.16*)* @filter_cb }, section "._zbus_observer.static.filter_lis", align 4, !dbg !510
@consumer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_consumer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.consumer_sub", align 4, !dbg !115
@.str.4.8 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.9 = private unnamed_addr constant [18 x i8] c"chan == &pkt_chan\00", align 1
@.str.6.10 = private unnamed_addr constant [28 x i8] c"CMAKE_SOURCE_DIR/src/main.c\00", align 1
@.str.7.14 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/include/zephyr/zbus/zbus.h\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@_zbus_observer_queue_producer_sub = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_producer_sub, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @_zbus_observer_queue_producer_sub, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i64 1, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_k_fifo_buf__zbus_observer_queue_producer_sub, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static._zbus_observer_queue_producer_sub", align 4, !dbg !545
@_k_fifo_buf__zbus_observer_queue_producer_sub = internal global [16 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.0", align 4, !dbg !727
@producer_sub = dso_local global { i8, %struct.k_msgq*, void (%struct.zbus_channel*)* } { i8 1, %struct.k_msgq* @_zbus_observer_queue_producer_sub, void (%struct.zbus_channel*)* null }, section "._zbus_observer.static.producer_sub", align 4, !dbg !552
@_k_thread_obj_producer_thread_id = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !732
@_k_thread_stack_producer_thread_id = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/producer.c\22.1", align 64, !dbg !729
@.str.22 = private unnamed_addr constant [19 x i8] c"producer_thread_id\00", align 1
@_k_thread_data_producer_thread_id = dso_local global %struct._static_thread_data { %struct.k_thread* @_k_thread_obj_producer_thread_id, %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @_k_thread_stack_producer_thread_id, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* bitcast (void ()* @producer_thread to void (i8*, i8*, i8*)*), i8* null, i8* null, i8* null, i32 5, i32 0, i32 1000, void ()* null, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_producer_thread_id", align 4, !dbg !702
@producer_thread_id = dso_local local_unnamed_addr constant %struct.k_thread* @_k_thread_obj_producer_thread_id, align 4, !dbg !723
@.str.1.23 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.24 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.3.25 = private unnamed_addr constant [32 x i8] c"CMAKE_SOURCE_DIR/src/producer.c\00", align 1
@pkt_chan = dso_local constant %struct.zbus_channel.16 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i16 8, i8* null, i8* bitcast (%struct.external_data_msg* @_zbus_message_pkt_chan to i8*), i1 (i8*, i32)* null, %struct.k_mutex* @_zbus_mutex_pkt_chan, %struct.zbus_observer.17** getelementptr inbounds ([2 x %struct.zbus_observer.17*], [2 x %struct.zbus_observer.17*]* @_zbus_observers_pkt_chan, i32 0, i32 0) }, section "._zbus_channel.static.pkt_chan", align 4, !dbg !348
@.str.4.26 = private unnamed_addr constant [23 x i8] c"%c: Ack not received!\0A\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !734
@.str.1.30 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.32 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.33 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.34 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6.35 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7.36 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8.37 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9.38 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !757
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [17 x i8] c"chunk_used(h, c)\00", align 1
@.str.2.41 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/lib/os/heap.c\00", align 1
@.str.3.42 = private unnamed_addr constant [56 x i8] c"\09unexpected heap state (double-free?) for memory at %p\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [38 x i8] c"left_chunk(h, right_chunk(h, c)) == c\00", align 1
@.str.5.44 = private unnamed_addr constant [60 x i8] c"\09corrupted heap bounds (buffer overflow?) for memory at %p\0A\00", align 1
@.str.6.45 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.7.46 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@.str.8.47 = private unnamed_addr constant [22 x i8] c"bytes / 8U <= 0x7fffU\00", align 1
@.str.9.48 = private unnamed_addr constant [23 x i8] c"\09heap size is too big\0A\00", align 1
@.str.10.49 = private unnamed_addr constant [33 x i8] c"bytes > heap_footer_bytes(bytes)\00", align 1
@.str.11.50 = private unnamed_addr constant [25 x i8] c"\09heap size is too small\0A\00", align 1
@.str.12.51 = private unnamed_addr constant [41 x i8] c"heap_sz > chunksz(sizeof(struct z_heap))\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"chunk0_size + min_chunk_size(h) <= heap_sz\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !766
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !829
@.str.65 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.67 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.68 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.66 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.70 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.71 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.69 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.72 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.73 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.74 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.75 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.76 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.77 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.78 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.79 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.83 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.84 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.85 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.97 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.89 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.90 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.91 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.92 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.93 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.94 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.95 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.96 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.88 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.22.87 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.28.86 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.33 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !858
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !989
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !864
@.str.109 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.110 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.111 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.112 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.117 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.118 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !998
@.str.6.119 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.120 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.113 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.114 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !1034
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), %struct.k_spinlock { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.132, i32 0, i32 0), %struct.k_spinlock { i32 285933596 } }], align 4, !dbg !1044
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !1049
@.str.131 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.132 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !1069
@.str.134 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.136 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.10.147 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.11.148 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.12.135 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.13.137 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.14.138 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.15.139 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.16.140 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.17.141 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.18.142 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.19.143 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.20.144 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.21.145 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.22.146 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@.str.149 = private unnamed_addr constant [5 x i8] c"zbus\00", align 1
@log_const_zbus = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.149, i32 0, i32 0), i8 2 }, section ".log_const_zbus", align 4, !dbg !1177
@.str.1.153 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.154 = private unnamed_addr constant [15 x i8] c"!k_is_in_isr()\00", align 1
@.str.3.155 = private unnamed_addr constant [31 x i8] c"ZEPHYR_BASE/subsys/zbus/zbus.c\00", align 1
@.str.4.156 = private unnamed_addr constant [34 x i8] c"\09zbus cannot be used inside ISRs\0A\00", align 1
@.str.5.157 = private unnamed_addr constant [20 x i8] c"chan != ((void *)0)\00", align 1
@.str.6.158 = private unnamed_addr constant [19 x i8] c"\09chan is required\0A\00", align 1
@.str.7.159 = private unnamed_addr constant [19 x i8] c"msg != ((void *)0)\00", align 1
@.str.8.160 = private unnamed_addr constant [18 x i8] c"\09msg is required\0A\00", align 1
@.str.9.170 = private unnamed_addr constant [19 x i8] c"sub != ((void *)0)\00", align 1
@.str.10.171 = private unnamed_addr constant [18 x i8] c"\09sub is required\0A\00", align 1
@.str.11.161 = private unnamed_addr constant [9 x i8] c"err == 0\00", align 1
@.str.12.162 = private unnamed_addr constant [49 x i8] c"\09could not deliver notification to observer %s.\0A\00", align 1
@.str.13.163 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !1189
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1339
@.str.4.172 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1309
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !1294
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.172, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1267
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1283
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1311
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1324
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1326
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1328
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1330
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1332
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !1334
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1344
@.str.174 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1369
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1446
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1435
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_POST_KERNEL60_", align 4, !dbg !1487
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1360
@.str.185 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1553
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1799
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1777
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1763
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1711
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1358
@.str.1.195 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1801
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1781
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1779
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1728
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1356
@.str.2.196 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1814
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1785
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1783
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1737
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1354
@.str.3.197 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1816
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1789
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1787
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1746
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1352
@.str.4.198 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1818
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1793
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1791
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1752
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1350
@.str.5.199 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1820
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1797
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1795
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1761
@.str.6.186 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.29.192 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.30.188 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.31.191 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.32.187 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.33.189 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.34.190 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.203 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.203, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1822
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1364
@.str.1.204 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1982
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !2037
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1978
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2039
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.204, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1963
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1965
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1362
@.str.2.213 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !2045
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1980
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !2055
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.213, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1974
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1976
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !2026
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !2029
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2031
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !2034
@.str.3.206 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.207 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.208 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.6.209 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.7.210 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.8.216 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.9.218 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.10.219 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.174, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1419
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !2047
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !2049
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !2051
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !2053
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.11 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !2062
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !2173
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !2175
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !2171
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2166
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !2140
@.str.223 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.224 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.225 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.226 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.227 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.228 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !2177
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.185, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1709
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.195, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1726
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.196, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1735
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.197, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1744
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.198, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1750
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.199, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1759
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2264
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !2288
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !2291
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2295
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2299
@.str.259 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.263 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.264 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.265 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.266 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.267 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.6.268 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.7.269 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@.str.8.273 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.9.274 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.10.275 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.11.276 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.12.277 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.13.272 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.14.271 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.273, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.274, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10.275, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.276, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.277, i32 0, i32 0)], align 4
@.str.279 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.279, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2306
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2529
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2518
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2524
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2536
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2541
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.288 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.296, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.297, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.298, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.299, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.300, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.294, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.301, i32 0, i32 0)], align 4, !dbg !2569
@.str.295 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.296 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.297 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.298 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.299 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.300 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.294 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.301 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2683
@.str.8.293 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.304 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.305 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.306 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.307 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.309 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.310 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.313 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.314 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.324 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.325 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.326 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.331 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.332 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.333 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/msg_q.c\00", align 1
@.str.3.334 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.4.335 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.336 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.337 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.338 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.339 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.346 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.347 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.348 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.349 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.350 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2696
@.str.4.361 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.351 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.352 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.353 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.354 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.355 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2806
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2916
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2919
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2921
@.str.362 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.384 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.369 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.391 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.403 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.372 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.398 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.368 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.408 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.409 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.415 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.416 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.417 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.418 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.363 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.364 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.365 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.366 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.367 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.371 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.388 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.399 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.400 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2526
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2534
@.str.23.410 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.424 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.425 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.426 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.427 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2923
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2953
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2958
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2956
@.str.4.428 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.429 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.430 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.434 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.435 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@kheap__system_heap = dso_local global [1024 x i8] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/mempool.c\22.kheap_buf__system_heap", align 8, !dbg !2964
@_system_heap = dso_local global %struct.k_heap { %struct.sys_heap { %struct.z_heap* null, i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @kheap__system_heap, i32 0, i32 0), i32 1024 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static._system_heap", align 4, !dbg !2970
@.str.458 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.459 = private unnamed_addr constant [61 x i8] c"align / sizeof(void *) >= 1 && (align % sizeof(void *)) == 0\00", align 1
@.str.2.460 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/mempool.c\00", align 1
@.str.3.461 = private unnamed_addr constant [45 x i8] c"\09align must be a multiple of sizeof(void *)\0A\00", align 1
@.str.4.462 = private unnamed_addr constant [27 x i8] c"(align & (align - 1)) == 0\00", align 1
@.str.5.463 = private unnamed_addr constant [29 x i8] c"\09align must be a power of 2\0A\00", align 1
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2393
@.str.6.464 = private unnamed_addr constant [50 x i8] c"align == 0 || ((uintptr_t)mem & (align - 1)) == 0\00", align 1
@.str.7.465 = private unnamed_addr constant [40 x i8] c"\09misaligned memory at %p (align = %zu)\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !3007
@.str.476 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.487 = private unnamed_addr constant [70 x i8] c"!arch_is_in_isr() || ((timeout).ticks == (((k_timeout_t) {0})).ticks)\00", align 1
@.str.2.478 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/kheap.c\00", align 1
@.str.3.488 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4
@.str.4.477 = private unnamed_addr constant [22 x i8] c"h <= _k_heap_list_end\00", align 1
@.str.5.479 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.6.484 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.7.485 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.8.486 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.9.489 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.10.490 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3712 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3714, !srcloc !3715
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3716, !srcloc !3717
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3718, !srcloc !3719
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3720, !srcloc !3721
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3722, !srcloc !3723
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3724, !srcloc !3725
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3726, !srcloc !3727
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3728, !srcloc !3729
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3730, !srcloc !3731
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3732, !srcloc !3733
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3734, !srcloc !3735
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3736, !srcloc !3737
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3738, !srcloc !3739
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3740, !srcloc !3741
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3742, !srcloc !3743
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3744, !srcloc !3745
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3746, !srcloc !3747
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3748, !srcloc !3749
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3750, !srcloc !3751
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3752, !srcloc !3753
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3754, !srcloc !3755
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3756, !srcloc !3757
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3758, !srcloc !3759
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3760, !srcloc !3761
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3762, !srcloc !3763
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3764, !srcloc !3765
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3766, !srcloc !3767
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3768, !srcloc !3771
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3772, !srcloc !3773
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3774, !srcloc !3775
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3776, !srcloc !3777
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3778, !srcloc !3779
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3780, !srcloc !3781
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3782, !srcloc !3783
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3784, !srcloc !3785
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3786, !srcloc !3787
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3788, !srcloc !3789
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3790, !srcloc !3791
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3792, !srcloc !3793
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3794, !srcloc !3795
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3796, !srcloc !3797
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3798, !srcloc !3799
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3800, !srcloc !3801
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3802, !srcloc !3803
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3804, !srcloc !3805
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3806, !srcloc !3807
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3808, !srcloc !3809
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3810, !srcloc !3811
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3812, !srcloc !3813
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3814, !srcloc !3815
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3816, !srcloc !3817
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3818, !srcloc !3819
  ret void, !dbg !3820
}

; Function Attrs: noinline nounwind optsize
define internal void @consumer_thread() #1 !dbg !3823 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca i8, align 1
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3843
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3843
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3831, metadata !DIExpression(DW_OP_deref)), !dbg !3844
  %4 = call i32 bitcast (i32 (%struct.zbus_observer.157*, %struct.zbus_channel.158**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !3845
  %5 = icmp eq i32 %4, 0, !dbg !3846
  br i1 %5, label %6, label %31, !dbg !3847

6:                                                ; preds = %0, %25
  %7 = load %struct.zbus_channel*, %struct.zbus_channel** %1, align 4, !dbg !3848
  call void @llvm.dbg.value(metadata %struct.zbus_channel* %7, metadata !3831, metadata !DIExpression()), !dbg !3844
  %8 = icmp eq %struct.zbus_channel* %7, bitcast (%struct.zbus_channel.16* @data_ready_chan to %struct.zbus_channel*), !dbg !3848
  br i1 %8, label %10, label %9, !dbg !3851

9:                                                ; preds = %6
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i32 noundef 23) #26, !dbg !3852
  call void @assert_post_action(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i32 0, i32 0), i32 noundef 23) #26, !dbg !3852
  unreachable, !dbg !3852

10:                                               ; preds = %6
  %11 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 100) #27, !dbg !3854
  %12 = insertvalue [1 x i64] poison, i64 %11, 0, !dbg !3855
  %13 = call i32 bitcast (i32 (%struct.zbus_channel.158*, [1 x i64])* @zbus_chan_claim to i32 (%struct.zbus_channel*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), [1 x i64] %12) #26, !dbg !3855
  %14 = icmp eq i32 %13, 0, !dbg !3855
  br i1 %14, label %15, label %25, !dbg !3856

15:                                               ; preds = %10
  %16 = tail call fastcc i8* @zbus_chan_msg() #27, !dbg !3857
  call void @llvm.dbg.value(metadata i8* %16, metadata !3825, metadata !DIExpression()), !dbg !3844
  %17 = getelementptr inbounds i8, i8* %16, i32 4, !dbg !3858
  %18 = bitcast i8* %17 to i32*, !dbg !3858
  %19 = load i32, i32* %18, align 4, !dbg !3858
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i32 noundef 87, i32 noundef %19) #26, !dbg !3858
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), metadata !3832, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i1 false, metadata !3837, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3863
  call void @llvm.dbg.value(metadata i32 0, metadata !3838, metadata !DIExpression()), !dbg !3863
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), i32 noundef 87, i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0)) #26, !dbg !3864
  %20 = bitcast i8* %16 to i8**, !dbg !3868
  %21 = load i8*, i8** %20, align 4, !dbg !3868
  %22 = load i32, i32* %18, align 4, !dbg !3868
  call void @z_log_minimal_hexdump_print(i32 noundef 2, i8* noundef %21, i32 noundef %22) #26, !dbg !3868
  %23 = load i8*, i8** %20, align 4, !dbg !3869
  call void @k_free(i8* noundef %23) #26, !dbg !3870
  store i8* null, i8** %20, align 4, !dbg !3871
  store i32 0, i32* %18, align 4, !dbg !3872
  %24 = call i32 bitcast (i32 (%struct.zbus_channel.158*)* @zbus_chan_finish to i32 (%struct.zbus_channel*)*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*)) #26, !dbg !3873
  br label %25, !dbg !3874

25:                                               ; preds = %15, %10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3875
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element* undef, metadata !3839, metadata !DIExpression()), !dbg !3876
  store i8 1, i8* %2, align 1, !dbg !3876
  %26 = call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 250) #27, !dbg !3877
  %27 = insertvalue [1 x i64] poison, i64 %26, 0, !dbg !3878
  %28 = call i32 bitcast (i32 (%struct.zbus_channel.158*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @ack to %struct.zbus_channel*), i8* noundef nonnull %2, [1 x i64] %27) #26, !dbg !3878
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3879
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3831, metadata !DIExpression(DW_OP_deref)), !dbg !3844
  %29 = call i32 bitcast (i32 (%struct.zbus_observer.157*, %struct.zbus_channel.158**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @consumer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !3845
  %30 = icmp eq i32 %29, 0, !dbg !3846
  br i1 %30, label %6, label %31, !dbg !3847, !llvm.loop !3880

31:                                               ; preds = %25, %0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3881
  ret void, !dbg !3881
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3882 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3887, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.value(metadata i64 %0, metadata !3889, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i32 1000, metadata !3894, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i32 10000, metadata !3895, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 1, metadata !3896, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 0, metadata !3897, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 1, metadata !3898, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 0, metadata !3899, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 1, metadata !3900, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i8 0, metadata !3901, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i64 0, metadata !3902, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.value(metadata i64 0, metadata !3902, metadata !DIExpression()), !dbg !3906
  %2 = mul i64 %0, 10, !dbg !3908
  ret i64 %2, !dbg !3914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @zbus_chan_msg() unnamed_addr #4 !dbg !3915 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel* bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), metadata !3919, metadata !DIExpression()), !dbg !3920
  %1 = load i8*, i8** getelementptr inbounds (%struct.zbus_channel, %struct.zbus_channel* bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), i32 0, i32 3), align 4, !dbg !3921
  ret i8* %1, !dbg !3922
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind optsize
define internal void @filter_cb(%struct.zbus_channel.16* noundef readnone %0) #1 !dbg !3923 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.zbus_channel.16* %0, metadata !3925, metadata !DIExpression()), !dbg !3930
  %3 = icmp eq %struct.zbus_channel.16* %0, @pkt_chan, !dbg !3931
  br i1 %3, label %5, label %4, !dbg !3934

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.9, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.10, i32 0, i32 0), i32 noundef 60) #26, !dbg !3935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.10, i32 0, i32 0), i32 noundef 60) #26, !dbg !3935
  unreachable, !dbg !3935

5:                                                ; preds = %1
  %6 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.16* noundef nonnull @pkt_chan) #27, !dbg !3937
  call void @llvm.dbg.value(metadata i8* %6, metadata !3926, metadata !DIExpression()), !dbg !3930
  %7 = getelementptr inbounds i8, i8* %6, i32 4, !dbg !3938
  %8 = bitcast i8* %7 to i32*, !dbg !3938
  %9 = load i32, i32* %8, align 4, !dbg !3938
  %10 = and i32 %9, 1, !dbg !3940
  %11 = icmp eq i32 %10, 0, !dbg !3940
  br i1 %11, label %16, label %12, !dbg !3941

12:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i8* %6, metadata !3926, metadata !DIExpression()), !dbg !3930
  %13 = bitcast i8* %6 to i8**, !dbg !3942
  %14 = load i8*, i8** %13, align 4, !dbg !3942
  %15 = tail call i8* @memset(i8* noundef %14, i32 noundef 0, i32 noundef %9) #26, !dbg !3944
  br label %16, !dbg !3945

16:                                               ; preds = %12, %5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3946
  call void @llvm.dbg.declare(metadata %struct.z_thread_stack_element* undef, metadata !3929, metadata !DIExpression()), !dbg !3947
  store i8 1, i8* %2, align 1, !dbg !3947
  %17 = call i32 bitcast (i32 (%struct.zbus_channel.158*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel.16*, i8*, [1 x i64])*)(%struct.zbus_channel.16* noundef nonnull @data_ready_chan, i8* noundef nonnull %2, [1 x i64] zeroinitializer) #26, !dbg !3948
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #25, !dbg !3949
  ret void, !dbg !3949
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.16* noundef readonly %0) unnamed_addr #1 !dbg !3950 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.16* %0, metadata !3954, metadata !DIExpression()), !dbg !3955
  %2 = icmp eq %struct.zbus_channel.16* %0, null, !dbg !3956
  br i1 %2, label %3, label %4, !dbg !3959

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.14, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !3960
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i32 0, i32 0)) #26, !dbg !3960
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i32 0, i32 0), i32 noundef 418) #26, !dbg !3960
  unreachable, !dbg !3960

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.zbus_channel.16, %struct.zbus_channel.16* %0, i32 0, i32 3, !dbg !3962
  %6 = load i8*, i8** %5, align 4, !dbg !3962
  ret i8* %6, !dbg !3963
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3964 {
  %1 = tail call fastcc i8* @zbus_chan_const_msg(%struct.zbus_channel.16* noundef nonnull @version_chan) #27, !dbg !3969
  call void @llvm.dbg.value(metadata i8* %1, metadata !3966, metadata !DIExpression()), !dbg !3970
  ret void, !dbg !3971
}

; Function Attrs: noinline nounwind optsize
define internal void @producer_thread() #1 !dbg !3972 {
  %1 = alloca %struct.zbus_channel*, align 4
  %2 = alloca %struct.external_data_msg, align 4
  %3 = bitcast %struct.zbus_channel** %1 to i8*, !dbg !3987
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3987
  call void @llvm.dbg.value(metadata i8 0, metadata !3976, metadata !DIExpression()), !dbg !3988
  %4 = bitcast %struct.external_data_msg* %2 to i8*
  %5 = getelementptr inbounds %struct.external_data_msg, %struct.external_data_msg* %2, i32 0, i32 0
  %6 = getelementptr inbounds %struct.external_data_msg, %struct.external_data_msg* %2, i32 0, i32 1
  br label %8, !dbg !3989

7:                                                ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3990
  ret void, !dbg !3990

8:                                                ; preds = %0, %30
  %9 = phi i32 [ 0, %0 ], [ %10, %30 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3976, metadata !DIExpression()), !dbg !3988
  %10 = add nuw nsw i32 %9, 1, !dbg !3991
  %11 = call i8* @k_malloc(i32 noundef %10) #26, !dbg !3992
  call void @llvm.dbg.value(metadata i8* %11, metadata !3975, metadata !DIExpression()), !dbg !3993
  %12 = icmp eq i8* %11, null, !dbg !3994
  br i1 %12, label %13, label %14, !dbg !3997

13:                                               ; preds = %8
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.23, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2.24, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3.25, i32 0, i32 0), i32 noundef 23) #26, !dbg !3998
  call void @assert_post_action(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3.25, i32 0, i32 0), i32 noundef 23) #26, !dbg !3998
  unreachable, !dbg !3998

14:                                               ; preds = %8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !4000
  call void @llvm.dbg.declare(metadata %struct.external_data_msg* %2, metadata !3978, metadata !DIExpression()), !dbg !4001
  store i8* %11, i8** %5, align 4, !dbg !4002
  store i32 %10, i32* %6, align 4, !dbg !4002
  call void @llvm.dbg.value(metadata i32 0, metadata !3985, metadata !DIExpression()), !dbg !4003
  %15 = trunc i32 %9 to i8
  call void @llvm.dbg.value(metadata i32 0, metadata !3985, metadata !DIExpression()), !dbg !4003
  store i8 %15, i8* %11, align 1, !dbg !4004
  call void @llvm.dbg.value(metadata i32 1, metadata !3985, metadata !DIExpression()), !dbg !4003
  %16 = load i32, i32* %6, align 4, !dbg !4007
  %17 = icmp ugt i32 %16, 1, !dbg !4008
  br i1 %17, label %22, label %18, !dbg !4009, !llvm.loop !4010

18:                                               ; preds = %22, %14
  %19 = call i32 bitcast (i32 (%struct.zbus_channel.158*, i8*, [1 x i64])* @zbus_chan_pub to i32 (%struct.zbus_channel*, i8*, [1 x i64])*)(%struct.zbus_channel* noundef nonnull bitcast (%struct.zbus_channel.16* @pkt_chan to %struct.zbus_channel*), i8* noundef nonnull %4, [1 x i64] [i64 2500]) #26, !dbg !4012
  call void @llvm.dbg.value(metadata %struct.zbus_channel** %1, metadata !3974, metadata !DIExpression(DW_OP_deref)), !dbg !3993
  %20 = call i32 bitcast (i32 (%struct.zbus_observer.157*, %struct.zbus_channel.158**, [1 x i64])* @zbus_sub_wait to i32 (%struct.zbus_observer*, %struct.zbus_channel**, [1 x i64])*)(%struct.zbus_observer* noundef bitcast ({ i8, %struct.k_msgq*, void (%struct.zbus_channel*)* }* @producer_sub to %struct.zbus_observer*), %struct.zbus_channel** noundef nonnull %1, [1 x i64] [i64 -1]) #26, !dbg !4013
  %21 = icmp eq i32 %20, 0, !dbg !4013
  br i1 %21, label %30, label %29, !dbg !4015

22:                                               ; preds = %14, %22
  %23 = phi i32 [ %26, %22 ], [ 1, %14 ]
  %24 = load i8*, i8** %5, align 4, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %23, metadata !3985, metadata !DIExpression()), !dbg !4003
  %25 = getelementptr inbounds i8, i8* %24, i32 %23, !dbg !4017
  store i8 %15, i8* %25, align 1, !dbg !4004
  %26 = add nuw nsw i32 %23, 1, !dbg !4018
  call void @llvm.dbg.value(metadata i32 %26, metadata !3985, metadata !DIExpression()), !dbg !4003
  %27 = load i32, i32* %6, align 4, !dbg !4007
  %28 = icmp ult i32 %26, %27, !dbg !4008
  br i1 %28, label %22, label %18, !dbg !4009, !llvm.loop !4010

29:                                               ; preds = %18
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.26, i32 0, i32 0), i32 noundef 69) #26, !dbg !4019
  br label %30, !dbg !4025

30:                                               ; preds = %29, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !4026
  call void @llvm.dbg.value(metadata i32 %10, metadata !3976, metadata !DIExpression()), !dbg !3988
  %31 = icmp eq i32 %10, 16, !dbg !4027
  br i1 %31, label %7, label %8, !dbg !3989, !llvm.loop !4028
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4030 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4045, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %0, metadata !4041, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %1, metadata !4042, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %2, metadata !4043, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %3, metadata !4044, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %0, metadata !4046, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %0, metadata !4047, metadata !DIExpression()), !dbg !4108
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4109
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4109
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4050, metadata !DIExpression()), !dbg !4110
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4111
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4111
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4052, metadata !DIExpression()), !dbg !4112
  call void @llvm.dbg.value(metadata i32 0, metadata !4053, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 0, metadata !4054, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 0, metadata !4055, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 -1, metadata !4056, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 0, metadata !4059, metadata !DIExpression()), !dbg !4108
  %12 = and i32 %2, 4, !dbg !4113
  %13 = icmp eq i32 %12, 0, !dbg !4114
  call void @llvm.dbg.value(metadata i1 %13, metadata !4060, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4108
  %14 = lshr i32 %2, 3, !dbg !4115
  %15 = and i32 %14, 7, !dbg !4115
  %16 = add nuw nsw i32 %15, 1, !dbg !4116
  call void @llvm.dbg.value(metadata i32 %16, metadata !4061, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 0, metadata !4062, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %0, metadata !4063, metadata !DIExpression()), !dbg !4108
  %17 = ptrtoint i8* %0 to i32, !dbg !4117
  %18 = and i32 %17, 3, !dbg !4119
  %19 = icmp eq i32 %18, 0, !dbg !4119
  br i1 %19, label %20, label %320, !dbg !4120

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4121
  call void @llvm.dbg.value(metadata i8* %21, metadata !4047, metadata !DIExpression()), !dbg !4108
  %22 = icmp eq i8* %0, null, !dbg !4122
  %23 = and i32 %1, 7, !dbg !4124
  %24 = sub nuw nsw i32 8, %23, !dbg !4124
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4124
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4124
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4124
  call void @llvm.dbg.value(metadata i32 %27, metadata !4042, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %26, metadata !4047, metadata !DIExpression()), !dbg !4108
  br i1 %22, label %33, label %28, !dbg !4125

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4127
  %30 = sub i32 4, %17, !dbg !4127
  %31 = add i32 %30, %29, !dbg !4128
  %32 = icmp ugt i32 %31, %27, !dbg !4129
  br i1 %32, label %320, label %33, !dbg !4130

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4131
  call void @llvm.dbg.value(metadata i8* %34, metadata !4044, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %3, metadata !4058, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 4, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 4, metadata !4048, metadata !DIExpression()), !dbg !4108
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4132

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4045, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %42, metadata !4044, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %43, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %44, metadata !4048, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %45, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %72, metadata !4056, metadata !DIExpression()), !dbg !4108
  br i1 %46, label %73, label %47, !dbg !4133

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4134
  %49 = zext i1 %48 to i32, !dbg !4138
  %50 = add nsw i32 %72, %49, !dbg !4138
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4138
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4138
  call void @llvm.dbg.value(metadata i32 %52, metadata !4048, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %51, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4059, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %50, metadata !4056, metadata !DIExpression()), !dbg !4108
  br label %53, !dbg !4139

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4045, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %40, metadata !4044, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %58, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %57, metadata !4048, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %56, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4059, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %54, metadata !4056, metadata !DIExpression()), !dbg !4108
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4140
  call void @llvm.dbg.value(metadata i8* %60, metadata !4044, metadata !DIExpression()), !dbg !4108
  %61 = load i8, i8* %60, align 1, !dbg !4142
  %62 = icmp eq i8 %61, 0, !dbg !4143
  br i1 %62, label %226, label %63, !dbg !4144, !llvm.loop !4145

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !4133

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4148

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4059, metadata !DIExpression()), !dbg !4108
  %75 = add nsw i32 %72, -1, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %75, metadata !4056, metadata !DIExpression()), !dbg !4108
  br label %53, !dbg !4150

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4151

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 4, metadata !4048, metadata !DIExpression()), !dbg !4108
  br label %53, !dbg !4152

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 4, metadata !4048, metadata !DIExpression()), !dbg !4108
  br label %53, !dbg !4153

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4154
  %81 = icmp eq i8 %80, 108, !dbg !4156
  br i1 %81, label %82, label %109, !dbg !4157

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4158
  %84 = load i8, i8* %83, align 1, !dbg !4158
  %85 = icmp eq i8 %84, 108, !dbg !4161
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4162
  %89 = add i32 %88, 7, !dbg !4162
  %90 = and i32 %89, -8, !dbg !4162
  %91 = inttoptr i32 %90 to i8*, !dbg !4162
  %92 = inttoptr i32 %90 to double*, !dbg !4162
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4162
  %94 = load double, double* %92, align 8, !dbg !4162
  call void @llvm.dbg.value(metadata i8* %93, metadata !4045, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 8, metadata !4048, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 8, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata double %94, metadata !4076, metadata !DIExpression()), !dbg !4164
  %95 = ptrtoint i8* %43 to i32, !dbg !4165
  %96 = add i32 %95, 7, !dbg !4165
  %97 = and i32 %96, -8, !dbg !4165
  %98 = inttoptr i32 %97 to i8*, !dbg !4166
  call void @llvm.dbg.value(metadata i8* %98, metadata !4047, metadata !DIExpression()), !dbg !4108
  br i1 %22, label %104, label %99, !dbg !4167

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4168
  %101 = icmp ugt i32 %100, %196, !dbg !4172
  br i1 %101, label %320, label %102, !dbg !4173

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4174
  store double %94, double* %103, align 8, !dbg !4174
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4177
  call void @llvm.dbg.value(metadata i8* %105, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4059, metadata !DIExpression()), !dbg !4108
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4059, metadata !DIExpression()), !dbg !4108
  br label %53, !dbg !4178

107:                                              ; preds = %73, %73
  br label %109, !dbg !4179

108:                                              ; preds = %73
  br label %109, !dbg !4179

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4108
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4108
  call void @llvm.dbg.value(metadata i32 %113, metadata !4048, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %112, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4062, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4059, metadata !DIExpression()), !dbg !4108
  %114 = ptrtoint i8* %43 to i32, !dbg !4179
  %115 = add i32 %114, -1, !dbg !4179
  %116 = add i32 %115, %112, !dbg !4179
  %117 = sub i32 0, %112, !dbg !4179
  %118 = and i32 %116, %117, !dbg !4179
  %119 = inttoptr i32 %118 to i8*, !dbg !4180
  call void @llvm.dbg.value(metadata i8* %119, metadata !4047, metadata !DIExpression()), !dbg !4108
  br i1 %22, label %124, label %120, !dbg !4181

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4183
  %122 = add i32 %121, %118, !dbg !4184
  %123 = icmp ugt i32 %122, %196, !dbg !4185
  br i1 %123, label %320, label %124, !dbg !4186

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !4187

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4180
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4188
  call void @llvm.dbg.value(metadata i8* %127, metadata !4045, metadata !DIExpression()), !dbg !4108
  %128 = bitcast i8* %41 to i8**, !dbg !4188
  %129 = load i8*, i8** %128, align 4, !dbg !4188
  call void @llvm.dbg.value(metadata i8* %129, metadata !4058, metadata !DIExpression()), !dbg !4108
  br label %130, !dbg !4189

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4108
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4190
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4108
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !4191
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4108
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !4108
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4108
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4108
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4108
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4108
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !4192
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4045, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %142, metadata !4042, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %141, metadata !4044, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %140, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %139, metadata !4048, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %138, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %137, metadata !4053, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %136, metadata !4061, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %135, metadata !4054, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4059, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %133, metadata !4058, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %132, metadata !4056, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %131, metadata !4055, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.label(metadata !4107), !dbg !4194
  br i1 %22, label %146, label %144, !dbg !4195

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4196
  store i8* %133, i8** %145, align 4, !dbg !4199
  br label %146, !dbg !4200

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %147, metadata !4061, metadata !DIExpression()), !dbg !4108
  %148 = icmp sgt i32 %136, 0, !dbg !4202
  br i1 %148, label %152, label %149, !dbg !4203

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #27, !dbg !4204
  %151 = zext i1 %150 to i32, !dbg !4204
  br label %152, !dbg !4203

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4203
  %154 = icmp eq i32 %153, 0, !dbg !4203
  call void @llvm.dbg.value(metadata i1 %154, metadata !4085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4205
  call void @llvm.dbg.value(metadata i1 %36, metadata !4088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4205
  %155 = or i1 %36, %154, !dbg !4206
  br i1 %155, label %156, label %192, !dbg !4206

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4207
  %158 = sub i32 %157, %17, !dbg !4207
  %159 = lshr i32 %158, 2, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %159, metadata !4089, metadata !DIExpression()), !dbg !4209
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4210
  br i1 %161, label %162, label %163, !dbg !4210

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 635) #26, !dbg !4212
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.33, i32 0, i32 0)) #26, !dbg !4212
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 635) #26, !dbg !4212
  unreachable, !dbg !4212

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !4217
  br i1 %164, label %165, label %166, !dbg !4219

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 640) #26, !dbg !4220
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.34, i32 0, i32 0)) #26, !dbg !4220
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 640) #26, !dbg !4220
  unreachable, !dbg !4220

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !4225

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !4226
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4229
  store i8 %168, i8* %169, align 1, !dbg !4230
  %170 = trunc i32 %132 to i8, !dbg !4231
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4232
  store i8 %170, i8* %171, align 1, !dbg !4233
  br i1 %154, label %175, label %172, !dbg !4234

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !4235
  store i8 %173, i8* %169, align 1, !dbg !4235
  %174 = add i32 %131, 1, !dbg !4238
  call void @llvm.dbg.value(metadata i32 %174, metadata !4055, metadata !DIExpression()), !dbg !4108
  br label %187, !dbg !4239

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !4240
  call void @llvm.dbg.value(metadata i32 %176, metadata !4054, metadata !DIExpression()), !dbg !4108
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !4242

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !4243
  call void @llvm.dbg.value(metadata i32 %179, metadata !4042, metadata !DIExpression()), !dbg !4108
  br label %187, !dbg !4246

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !4247

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %182, metadata !4042, metadata !DIExpression()), !dbg !4108
  br label %187, !dbg !4251

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #26, !dbg !4252
  %185 = add i32 %142, 2, !dbg !4254
  %186 = add i32 %185, %184, !dbg !4255
  call void @llvm.dbg.value(metadata i32 %186, metadata !4042, metadata !DIExpression()), !dbg !4108
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !4108
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !4108
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !4108
  call void @llvm.dbg.value(metadata i32 %190, metadata !4042, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %189, metadata !4054, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %188, metadata !4055, metadata !DIExpression()), !dbg !4108
  %191 = add nuw nsw i32 %137, 1, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %191, metadata !4053, metadata !DIExpression()), !dbg !4108
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !4108
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !4191
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !4108
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !4192
  call void @llvm.dbg.value(metadata i32 %196, metadata !4042, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %195, metadata !4053, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %194, metadata !4054, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %193, metadata !4055, metadata !DIExpression()), !dbg !4108
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4257
  call void @llvm.dbg.value(metadata i8* %197, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %143, metadata !4045, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %141, metadata !4044, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %139, metadata !4048, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %138, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4062, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4059, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %132, metadata !4056, metadata !DIExpression()), !dbg !4108
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4140
  call void @llvm.dbg.value(metadata i8* %198, metadata !4044, metadata !DIExpression()), !dbg !4108
  %199 = load i8, i8* %198, align 1, !dbg !4142
  %200 = icmp eq i8 %199, 0, !dbg !4143
  br i1 %200, label %226, label %63, !dbg !4144

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !4258

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4259
  call void @llvm.dbg.value(metadata i8* %203, metadata !4045, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 undef, metadata !4092, metadata !DIExpression()), !dbg !4260
  br i1 %22, label %219, label %204, !dbg !4261

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !4259
  %206 = load i32, i32* %205, align 4, !dbg !4259
  call void @llvm.dbg.value(metadata i32 %206, metadata !4092, metadata !DIExpression()), !dbg !4260
  %207 = inttoptr i32 %118 to i32*, !dbg !4262
  store i32 %206, i32* %207, align 4, !dbg !4265
  br label %219, !dbg !4266

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !4267
  %210 = add i32 %209, 7, !dbg !4267
  %211 = and i32 %210, -8, !dbg !4267
  %212 = inttoptr i32 %211 to i8*, !dbg !4267
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !4267
  call void @llvm.dbg.value(metadata i8* %213, metadata !4045, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i64 undef, metadata !4098, metadata !DIExpression()), !dbg !4268
  br i1 %22, label %219, label %214, !dbg !4269

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !4267
  %216 = load i64, i64* %215, align 8, !dbg !4267
  call void @llvm.dbg.value(metadata i64 %216, metadata !4098, metadata !DIExpression()), !dbg !4268
  %217 = inttoptr i32 %118 to i64*, !dbg !4270
  store i64 %216, i64* %217, align 8, !dbg !4275
  br label %219, !dbg !4276

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 709) #26, !dbg !4277
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.35, i32 0, i32 0), i32 noundef %113) #26, !dbg !4277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 709) #26, !dbg !4277
  unreachable, !dbg !4277

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !4282
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !4282
  call void @llvm.dbg.value(metadata i8* %221, metadata !4045, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %40, metadata !4044, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %222, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %113, metadata !4048, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %112, metadata !4049, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4062, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8 poison, metadata !4059, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %72, metadata !4056, metadata !DIExpression()), !dbg !4108
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4140
  call void @llvm.dbg.value(metadata i8* %223, metadata !4044, metadata !DIExpression()), !dbg !4108
  %224 = load i8, i8* %223, align 1, !dbg !4142
  %225 = icmp eq i8 %224, 0, !dbg !4143
  br i1 %225, label %226, label %38, !dbg !4144

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !4283
  %228 = ptrtoint i8* %227 to i32, !dbg !4284
  %229 = sub i32 %228, %17, !dbg !4284
  %230 = lshr i32 %229, 2, !dbg !4286
  %231 = icmp ugt i32 %229, 1023, !dbg !4287
  br i1 %231, label %232, label %233, !dbg !4288

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 721) #26, !dbg !4289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.36, i32 0, i32 0)) #26, !dbg !4289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 721) #26, !dbg !4289
  unreachable, !dbg !4289

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !4294

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !4295
  %236 = add i32 %235, %229, !dbg !4298
  br label %320, !dbg !4299

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !4300
  store i8 %238, i8* %0, align 1, !dbg !4301
  %239 = trunc i32 %194 to i8, !dbg !4302
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4304
  store i8 %240, i8* %242, align 1, !dbg !4306
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4307
  store i8 %241, i8* %243, align 1, !dbg !4308
  %244 = trunc i32 %193 to i8, !dbg !4309
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4310
  store i8 %244, i8* %245, align 1, !dbg !4311
  %246 = icmp eq i32 %193, 0, !dbg !4312
  %247 = xor i1 %246, true, !dbg !4313
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %227, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 0, metadata !4057, metadata !DIExpression()), !dbg !4108
  br i1 %249, label %250, label %269, !dbg !4313

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !4314

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %254, metadata !4057, metadata !DIExpression()), !dbg !4108
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !4315
  %256 = load i8, i8* %255, align 1, !dbg !4315
  %257 = icmp sgt i8 %256, -1, !dbg !4317
  br i1 %257, label %265, label %258, !dbg !4318

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !4101, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4319
  %259 = ptrtoint i8* %253 to i32, !dbg !4320
  %260 = add i32 %251, %259, !dbg !4322
  %261 = icmp ugt i32 %260, %196, !dbg !4323
  br i1 %261, label %320, label %262, !dbg !4324

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !4325
  call void @llvm.dbg.value(metadata i8 %263, metadata !4101, metadata !DIExpression()), !dbg !4319
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !4326
  call void @llvm.dbg.value(metadata i8* %264, metadata !4047, metadata !DIExpression()), !dbg !4108
  store i8 %263, i8* %253, align 1, !dbg !4327
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !4257
  call void @llvm.dbg.value(metadata i8* %266, metadata !4047, metadata !DIExpression()), !dbg !4108
  %267 = add nuw i32 %254, 1, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %267, metadata !4057, metadata !DIExpression()), !dbg !4108
  %268 = icmp eq i32 %267, %195, !dbg !4329
  br i1 %268, label %269, label %252, !dbg !4314, !llvm.loop !4330

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !4257
  call void @llvm.dbg.value(metadata i8* %270, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 0, metadata !4057, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %133, metadata !4058, metadata !DIExpression()), !dbg !4108
  %271 = icmp eq i32 %195, 0, !dbg !4332
  br i1 %271, label %316, label %272, !dbg !4335

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !4335

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %276, metadata !4058, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %277, metadata !4057, metadata !DIExpression()), !dbg !4108
  br i1 %246, label %282, label %278, !dbg !4336

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4339
  %280 = load i8, i8* %279, align 1, !dbg !4339
  %281 = icmp sgt i8 %280, -1, !dbg !4340
  br i1 %281, label %282, label %311, !dbg !4341

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !4342

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !4048, metadata !DIExpression()), !dbg !4108
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !4343
  %285 = load i8, i8* %284, align 1, !dbg !4343
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !4346
  call void @llvm.dbg.value(metadata i8* %286, metadata !4047, metadata !DIExpression()), !dbg !4108
  store i8 %285, i8* %275, align 1, !dbg !4347
  br label %297, !dbg !4348

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4349
  %289 = load i8, i8* %288, align 1, !dbg !4349
  %290 = zext i8 %289 to i32, !dbg !4349
  %291 = shl nuw nsw i32 %290, 2, !dbg !4351
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !4352
  %293 = bitcast i8* %292 to i8**, !dbg !4353
  %294 = load i8*, i8** %293, align 4, !dbg !4353
  call void @llvm.dbg.value(metadata i8* %294, metadata !4058, metadata !DIExpression()), !dbg !4108
  store i8* null, i8** %293, align 4, !dbg !4354
  %295 = tail call i32 @strlen(i8* noundef %294) #26, !dbg !4355
  %296 = add i32 %295, 1, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %296, metadata !4048, metadata !DIExpression()), !dbg !4108
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !4108
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !4357
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !4108
  call void @llvm.dbg.value(metadata i8* %300, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i32 %299, metadata !4048, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %298, metadata !4058, metadata !DIExpression()), !dbg !4108
  %301 = ptrtoint i8* %300 to i32, !dbg !4358
  %302 = add i32 %273, %299, !dbg !4360
  %303 = add i32 %302, %301, !dbg !4361
  %304 = icmp ugt i32 %303, %196, !dbg !4362
  br i1 %304, label %320, label %305, !dbg !4363

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !4364
  %307 = load i8, i8* %306, align 1, !dbg !4364
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !4365
  call void @llvm.dbg.value(metadata i8* %308, metadata !4047, metadata !DIExpression()), !dbg !4108
  store i8 %307, i8* %300, align 1, !dbg !4366
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #26, !dbg !4367
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !4368
  call void @llvm.dbg.value(metadata i8* %310, metadata !4047, metadata !DIExpression()), !dbg !4108
  br label %311, !dbg !4369

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !4370
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !4108
  call void @llvm.dbg.value(metadata i8* %313, metadata !4047, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.value(metadata i8* %312, metadata !4058, metadata !DIExpression()), !dbg !4108
  %314 = add nuw i32 %277, 1, !dbg !4371
  call void @llvm.dbg.value(metadata i32 %314, metadata !4057, metadata !DIExpression()), !dbg !4108
  %315 = icmp eq i32 %314, %195, !dbg !4332
  br i1 %315, label %316, label %274, !dbg !4335, !llvm.loop !4372

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !4257
  %318 = ptrtoint i8* %317 to i32, !dbg !4374
  %319 = sub i32 %318, %17, !dbg !4374
  br label %320, !dbg !4375

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4376
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4376
  ret i32 %321, !dbg !4376
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4377 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4381, metadata !DIExpression()), !dbg !4382
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #27, !dbg !4383
  ret i1 %2, !dbg !4384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !4385 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4390, metadata !DIExpression()), !dbg !4391
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4392
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4393
  %4 = and i1 %2, %3, !dbg !4393
  ret i1 %4, !dbg !4394
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4395 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4399, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata i32 %1, metadata !4400, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata i32 %2, metadata !4401, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.value(metadata i8* %3, metadata !4402, metadata !DIExpression()), !dbg !4405
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !4406
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4406
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !4403, metadata !DIExpression()), !dbg !4407
  call void @llvm.va_start(i8* nonnull %6), !dbg !4408
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !4409
  %8 = load i32, i32* %7, align 4, !dbg !4409
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4409
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #27, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %10, metadata !4404, metadata !DIExpression()), !dbg !4405
  call void @llvm.va_end(i8* nonnull %6), !dbg !4410
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4411
  ret i32 %10, !dbg !4412
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4413 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4425, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4426, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata i8* %2, metadata !4427, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata i8* %3, metadata !4428, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata i8* %3, metadata !4429, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata i8* %3, metadata !4430, metadata !DIExpression()), !dbg !4444
  %5 = icmp eq i8* %3, null, !dbg !4445
  br i1 %5, label %45, label %6, !dbg !4447

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4439, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4444
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4448
  %8 = load i8, i8* %7, align 1, !dbg !4448
  %9 = zext i8 %8 to i32, !dbg !4449
  call void @llvm.dbg.value(metadata i32 %9, metadata !4440, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata i8 undef, metadata !4441, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4444
  call void @llvm.dbg.value(metadata i8 undef, metadata !4442, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4444
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  call void @llvm.dbg.value(metadata i32 0, metadata !4438, metadata !DIExpression()), !dbg !4444
  %10 = icmp eq i8 %8, 0, !dbg !4450
  br i1 %10, label %39, label %11, !dbg !4453

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4454
  call void @llvm.dbg.value(metadata i8 %12, metadata !4439, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4444
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %13 = zext i8 %12 to i32, !dbg !4455
  call void @llvm.dbg.value(metadata i32 %13, metadata !4439, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4444
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %14 = shl nuw nsw i32 %13, 2, !dbg !4456
  call void @llvm.dbg.value(metadata i32 %14, metadata !4439, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4457
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4458
  %17 = load i8, i8* %16, align 1, !dbg !4458
  call void @llvm.dbg.value(metadata i8 %17, metadata !4441, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4444
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %18 = zext i8 %17 to i32, !dbg !4459
  call void @llvm.dbg.value(metadata i32 %18, metadata !4441, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4460
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4461
  %21 = load i8, i8* %20, align 1, !dbg !4461
  call void @llvm.dbg.value(metadata i8 %21, metadata !4442, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4444
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %22 = zext i8 %21 to i32, !dbg !4462
  call void @llvm.dbg.value(metadata i32 %22, metadata !4442, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %23 = shl nuw nsw i32 %22, 1, !dbg !4463
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4436, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4444
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4464
  call void @llvm.dbg.value(metadata i8* %24, metadata !4436, metadata !DIExpression()), !dbg !4444
  br label %25, !dbg !4453

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4436, metadata !DIExpression()), !dbg !4444
  call void @llvm.dbg.value(metadata i32 %27, metadata !4438, metadata !DIExpression()), !dbg !4444
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4465
  call void @llvm.dbg.value(metadata i8* %28, metadata !4436, metadata !DIExpression()), !dbg !4444
  %29 = load i8, i8* %26, align 1, !dbg !4467
  %30 = zext i8 %29 to i32, !dbg !4467
  call void @llvm.dbg.value(metadata i32 %30, metadata !4443, metadata !DIExpression()), !dbg !4444
  %31 = shl nuw nsw i32 %30, 2, !dbg !4468
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4469
  %33 = bitcast i8* %32 to i8**, !dbg !4470
  call void @llvm.dbg.value(metadata i8** %33, metadata !4437, metadata !DIExpression()), !dbg !4444
  store i8* %28, i8** %33, align 4, !dbg !4471
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #26, !dbg !4472
  %35 = add i32 %34, 1, !dbg !4473
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4474
  call void @llvm.dbg.value(metadata i8* %36, metadata !4436, metadata !DIExpression()), !dbg !4444
  %37 = add nuw nsw i32 %27, 1, !dbg !4475
  call void @llvm.dbg.value(metadata i32 %37, metadata !4438, metadata !DIExpression()), !dbg !4444
  %38 = icmp eq i32 %37, %9, !dbg !4450
  br i1 %38, label %39, label %25, !dbg !4453, !llvm.loop !4476

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4478
  call void @llvm.dbg.value(metadata i8* %40, metadata !4429, metadata !DIExpression()), !dbg !4444
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4479
  %42 = bitcast i8* %41 to i8**, !dbg !4479
  %43 = load i8*, i8** %42, align 1, !dbg !4479
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #27, !dbg !4480
  br label %45, !dbg !4481

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4444
  ret i32 %46, !dbg !4482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4483 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4487, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4488, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i8* %2, metadata !4489, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i8* %3, metadata !4490, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i8* %4, metadata !4491, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i8* %4, metadata !4492, metadata !DIExpression()), !dbg !4497
  %6 = ptrtoint i8* %4 to i32, !dbg !4498
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4498
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #26, !dbg !4498
  ret i32 %8, !dbg !4499
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !4500 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4504, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 %1, metadata !4505, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 0, metadata !4507, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i32 0, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 poison, metadata !4507, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8* %0, metadata !4504, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4509
  %3 = load i8, i8* %0, align 1, !dbg !4510
  call void @llvm.dbg.value(metadata i8 %3, metadata !4506, metadata !DIExpression()), !dbg !4509
  %4 = icmp eq i8 %3, 0, !dbg !4511
  br i1 %4, label %29, label %5, !dbg !4512

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4513
  call void @llvm.dbg.value(metadata i32 %8, metadata !4508, metadata !DIExpression()), !dbg !4509
  br i1 %9, label %11, label %22, !dbg !4514

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4516
  br i1 %12, label %13, label %17, !dbg !4520

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4521
  br i1 %14, label %29, label %15, !dbg !4524

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4525
  br i1 %16, label %29, label %22, !dbg !4527

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #27, !dbg !4528
  %19 = xor i1 %18, true, !dbg !4530
  %20 = zext i1 %18 to i32, !dbg !4530
  %21 = add nsw i32 %8, %20, !dbg !4530
  br label %22, !dbg !4530

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4509
  call void @llvm.dbg.value(metadata i32 %24, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8 poison, metadata !4507, metadata !DIExpression()), !dbg !4509
  %25 = icmp eq i8 %6, 37, !dbg !4531
  %26 = xor i1 %25, %23, !dbg !4533
  call void @llvm.dbg.value(metadata i8* %10, metadata !4504, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.value(metadata i8* %10, metadata !4504, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4509
  %27 = load i8, i8* %10, align 1, !dbg !4510
  call void @llvm.dbg.value(metadata i8 %27, metadata !4506, metadata !DIExpression()), !dbg !4509
  %28 = icmp eq i8 %27, 0, !dbg !4511
  br i1 %28, label %29, label %5, !dbg !4512, !llvm.loop !4534

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4509
  ret i1 %30, !dbg !4536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4537 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4541, metadata !DIExpression()), !dbg !4542
  %2 = add i8 %0, -64, !dbg !4543
  %3 = icmp ult i8 %2, 59, !dbg !4543
  ret i1 %3, !dbg !4544
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4545 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4553, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %1, metadata !4554, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4555, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %3, metadata !4556, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %4, metadata !4557, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i16* %5, metadata !4558, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %6, metadata !4559, metadata !DIExpression()), !dbg !4622
  %11 = icmp eq i8* %0, null, !dbg !4623
  br i1 %11, label %12, label %13, !dbg !4626

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 916) #26, !dbg !4627
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 916) #26, !dbg !4627
  unreachable, !dbg !4627

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !4560, metadata !DIExpression()), !dbg !4622
  %14 = bitcast i8* %0 to i32*, !dbg !4629
  call void @llvm.dbg.value(metadata i32* %14, metadata !4561, metadata !DIExpression()), !dbg !4622
  %15 = and i32 %4, 8, !dbg !4630
  %16 = icmp eq i32 %15, 0, !dbg !4631
  call void @llvm.dbg.value(metadata i1 %16, metadata !4565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %0, metadata !4568, metadata !DIExpression()), !dbg !4622
  %17 = icmp eq i32 %1, 0, !dbg !4632
  br i1 %17, label %18, label %20, !dbg !4633

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #27, !dbg !4634
  br label %20, !dbg !4633

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !4633
  call void @llvm.dbg.value(metadata i32 %21, metadata !4554, metadata !DIExpression()), !dbg !4622
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4635
  %23 = load i8, i8* %22, align 1, !dbg !4635
  %24 = zext i8 %23 to i32, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %24, metadata !4563, metadata !DIExpression()), !dbg !4622
  %25 = icmp ne i8 %23, 0, !dbg !4637
  %26 = and i32 %4, 1, !dbg !4638
  %27 = icmp ne i32 %26, 0, !dbg !4638
  %28 = and i1 %27, %25, !dbg !4638
  call void @llvm.dbg.value(metadata i1 %28, metadata !4567, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4622
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4639
  %30 = load i8, i8* %29, align 1, !dbg !4639
  %31 = zext i8 %30 to i32, !dbg !4640
  call void @llvm.dbg.value(metadata i32 %31, metadata !4564, metadata !DIExpression()), !dbg !4622
  %32 = icmp ne i8 %30, 0, !dbg !4641
  %33 = and i32 %4, 2, !dbg !4642
  %34 = icmp ne i32 %33, 0, !dbg !4642
  %35 = and i1 %34, %32, !dbg !4642
  call void @llvm.dbg.value(metadata i1 %35, metadata !4566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4622
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4643
  br i1 %36, label %41, label %37, !dbg !4643

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4645
  br i1 %38, label %287, label %39, !dbg !4648

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #26, !dbg !4649
  br label %287, !dbg !4651

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4652
  %43 = zext i8 %42 to i32, !dbg !4653
  %44 = shl nuw nsw i32 %43, 2, !dbg !4654
  call void @llvm.dbg.value(metadata i32 %44, metadata !4562, metadata !DIExpression()), !dbg !4622
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4655
  %46 = bitcast i8* %45 to i8**, !dbg !4656
  %47 = load i8*, i8** %46, align 4, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %47, metadata !4571, metadata !DIExpression()), !dbg !4622
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4657
  call void @llvm.dbg.value(metadata i8* %48, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 0, metadata !4573, metadata !DIExpression()), !dbg !4622
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4658
  br i1 %49, label %50, label %135, !dbg !4659

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !4570, metadata !DIExpression()), !dbg !4622
  br i1 %28, label %51, label %76, !dbg !4660

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !4570, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %48, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 0, metadata !4573, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 0, metadata !4574, metadata !DIExpression()), !dbg !4661
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4662

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !4570, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %55, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %56, metadata !4573, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %57, metadata !4574, metadata !DIExpression()), !dbg !4661
  %58 = load i8, i8* %55, align 1, !dbg !4663
  %59 = zext i8 %58 to i32, !dbg !4664
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4664
  %61 = bitcast i32* %60 to i8**, !dbg !4665
  %62 = load i8*, i8** %61, align 4, !dbg !4665
  call void @llvm.dbg.value(metadata i8* %62, metadata !4580, metadata !DIExpression()), !dbg !4666
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #27, !dbg !4667
  call void @llvm.dbg.value(metadata i32 %63, metadata !4583, metadata !DIExpression()), !dbg !4666
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4668
  br i1 %65, label %66, label %70, !dbg !4668

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4670
  %68 = add nuw i32 %56, 1, !dbg !4672
  call void @llvm.dbg.value(metadata i32 %68, metadata !4573, metadata !DIExpression()), !dbg !4622
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4673
  store i16 %67, i16* %69, align 2, !dbg !4674
  br label %70, !dbg !4675

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !4622
  call void @llvm.dbg.value(metadata i32 %71, metadata !4573, metadata !DIExpression()), !dbg !4622
  %72 = add nsw i32 %63, %54, !dbg !4676
  call void @llvm.dbg.value(metadata i32 %72, metadata !4570, metadata !DIExpression()), !dbg !4622
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4677
  call void @llvm.dbg.value(metadata i8* %73, metadata !4572, metadata !DIExpression()), !dbg !4622
  %74 = add nuw nsw i32 %57, 1, !dbg !4678
  call void @llvm.dbg.value(metadata i32 %74, metadata !4574, metadata !DIExpression()), !dbg !4661
  %75 = icmp eq i32 %74, %24, !dbg !4679
  br i1 %75, label %82, label %53, !dbg !4662, !llvm.loop !4680

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4682
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4682
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4682
  br label %82, !dbg !4682

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4685
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !4622
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4686
  call void @llvm.dbg.value(metadata i1 undef, metadata !4584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4687
  call void @llvm.dbg.value(metadata i32 0, metadata !4585, metadata !DIExpression()), !dbg !4688
  call void @llvm.dbg.value(metadata i32 %85, metadata !4570, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %84, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %83, metadata !4573, metadata !DIExpression()), !dbg !4622
  %86 = icmp eq i8 %30, 0, !dbg !4689
  br i1 %86, label %287, label %87, !dbg !4690

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4691
  %89 = icmp eq i32 %88, 0, !dbg !4692
  call void @llvm.dbg.value(metadata i1 %89, metadata !4584, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4687
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4690

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !4570, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %96, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %97, metadata !4573, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %98, metadata !4585, metadata !DIExpression()), !dbg !4688
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4693
  call void @llvm.dbg.value(metadata i8* %99, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8 undef, metadata !4587, metadata !DIExpression()), !dbg !4694
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4695
  call void @llvm.dbg.value(metadata i8* %100, metadata !4572, metadata !DIExpression()), !dbg !4622
  %101 = load i8, i8* %99, align 1, !dbg !4696
  call void @llvm.dbg.value(metadata i8 %101, metadata !4590, metadata !DIExpression()), !dbg !4694
  %102 = zext i8 %101 to i32, !dbg !4697
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4697
  %104 = bitcast i32* %103 to i8**, !dbg !4698
  %105 = load i8*, i8** %104, align 4, !dbg !4698
  call void @llvm.dbg.value(metadata i8* %105, metadata !4591, metadata !DIExpression()), !dbg !4694
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #27, !dbg !4699
  call void @llvm.dbg.value(metadata i1 %106, metadata !4592, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4694
  br i1 %16, label %113, label %107, !dbg !4700

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4702
  call void @llvm.dbg.value(metadata i8 %108, metadata !4587, metadata !DIExpression()), !dbg !4694
  %109 = zext i8 %108 to i32, !dbg !4703
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #27, !dbg !4704
  br i1 %110, label %111, label %113, !dbg !4705

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9.38, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #26, !dbg !4706
  %112 = add nsw i32 %95, -2, !dbg !4712
  call void @llvm.dbg.value(metadata i32 %112, metadata !4570, metadata !DIExpression()), !dbg !4622
  br label %130, !dbg !4713

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4714

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4715

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %116, metadata !4570, metadata !DIExpression()), !dbg !4622
  br label %130, !dbg !4720

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4721

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !4618), !dbg !4722
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #27, !dbg !4723
  call void @llvm.dbg.value(metadata i32 %119, metadata !4593, metadata !DIExpression()), !dbg !4694
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4724
  br i1 %121, label %122, label %126, !dbg !4724

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4726
  %124 = add nuw i32 %97, 1, !dbg !4728
  call void @llvm.dbg.value(metadata i32 %124, metadata !4573, metadata !DIExpression()), !dbg !4622
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4729
  store i16 %123, i16* %125, align 2, !dbg !4730
  br label %126, !dbg !4731

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !4622
  call void @llvm.dbg.value(metadata i32 %127, metadata !4573, metadata !DIExpression()), !dbg !4622
  %128 = add i32 %95, -1, !dbg !4732
  %129 = add i32 %128, %119, !dbg !4733
  call void @llvm.dbg.value(metadata i32 %129, metadata !4570, metadata !DIExpression()), !dbg !4622
  br label %130, !dbg !4734

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !4622
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4694
  call void @llvm.dbg.value(metadata i32 %132, metadata !4570, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %131, metadata !4573, metadata !DIExpression()), !dbg !4622
  %133 = add nuw nsw i32 %98, 1, !dbg !4735
  call void @llvm.dbg.value(metadata i8* %100, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %133, metadata !4585, metadata !DIExpression()), !dbg !4688
  %134 = icmp eq i32 %133, %31, !dbg !4689
  br i1 %134, label %287, label %94, !dbg !4690, !llvm.loop !4736

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4595, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4596, metadata !DIExpression()), !dbg !4739
  br i1 %28, label %136, label %138, !dbg !4740

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !4597, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8 0, metadata !4598, metadata !DIExpression()), !dbg !4622
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4741
  call void @llvm.dbg.value(metadata i8* %137, metadata !4599, metadata !DIExpression()), !dbg !4622
  br label %143, !dbg !4744

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4745
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4745

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4599, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8 undef, metadata !4598, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8 0, metadata !4597, metadata !DIExpression()), !dbg !4622
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #26, !dbg !4747
  br label %148, !dbg !4750

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4751
  call void @llvm.dbg.value(metadata i8* %151, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 0, metadata !4601, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8 %149, metadata !4598, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8 %150, metadata !4597, metadata !DIExpression()), !dbg !4622
  %152 = icmp eq i8 %30, 0, !dbg !4753
  br i1 %152, label %153, label %155, !dbg !4754

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4755
  br label %160, !dbg !4754

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4754

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4755
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4756
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4757
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !4622
  call void @llvm.dbg.value(metadata i8 undef, metadata !4594, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4622
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4758
  %166 = load i8, i8* %165, align 1, !dbg !4758
  %167 = zext i8 %162 to i32, !dbg !4759
  %168 = add i8 %166, %162, !dbg !4760
  call void @llvm.dbg.value(metadata i8 %168, metadata !4594, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4622
  %169 = icmp eq i32 %33, 0, !dbg !4761
  %170 = lshr i8 %163, 1, !dbg !4762
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4762
  call void @llvm.dbg.value(metadata i8 %171, metadata !4594, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4622
  %172 = icmp eq i32 %26, 0, !dbg !4763
  %173 = icmp eq i32 %161, 0, !dbg !4755
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4755
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4755
  call void @llvm.dbg.value(metadata i8 %175, metadata !4594, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4622
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4609, metadata !DIExpression()), !dbg !4764
  %176 = load i32, i32* %14, align 1, !dbg !4765
  store i8 %168, i8* %165, align 1, !dbg !4766
  store i8 %175, i8* %22, align 1, !dbg !4766
  store i8 %171, i8* %29, align 1, !dbg !4766
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #26, !dbg !4767
  call void @llvm.dbg.value(metadata i32 %177, metadata !4600, metadata !DIExpression()), !dbg !4622
  %178 = icmp slt i32 %177, 0, !dbg !4768
  br i1 %178, label %287, label %240, !dbg !4770

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %181, metadata !4601, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.value(metadata i8 %182, metadata !4598, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8 %183, metadata !4597, metadata !DIExpression()), !dbg !4622
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4771
  call void @llvm.dbg.value(metadata i8* %184, metadata !4572, metadata !DIExpression()), !dbg !4622
  %185 = load i8, i8* %180, align 1, !dbg !4772
  call void @llvm.dbg.value(metadata i8 %185, metadata !4603, metadata !DIExpression()), !dbg !4773
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4774
  call void @llvm.dbg.value(metadata i8* %186, metadata !4572, metadata !DIExpression()), !dbg !4622
  %187 = load i8, i8* %184, align 1, !dbg !4775
  call void @llvm.dbg.value(metadata i8 %187, metadata !4606, metadata !DIExpression()), !dbg !4773
  %188 = zext i8 %187 to i32, !dbg !4776
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4776
  %190 = bitcast i32* %189 to i8**, !dbg !4777
  %191 = load i8*, i8** %190, align 4, !dbg !4777
  call void @llvm.dbg.value(metadata i8* %191, metadata !4607, metadata !DIExpression()), !dbg !4773
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #27, !dbg !4778
  call void @llvm.dbg.value(metadata i1 %192, metadata !4608, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4773
  br i1 %16, label %196, label %193, !dbg !4779

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4781
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #27, !dbg !4782
  br i1 %195, label %235, label %196, !dbg !4783

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4784

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4785

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4788
  br i1 %199, label %201, label %200, !dbg !4793

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1086) #26, !dbg !4794
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1086) #26, !dbg !4794
  unreachable, !dbg !4794

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4788
  %203 = add nuw nsw i8 %183, 1, !dbg !4796
  call void @llvm.dbg.value(metadata i8 %203, metadata !4597, metadata !DIExpression()), !dbg !4622
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4797
  br label %231, !dbg !4798

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4799

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4800
  br i1 %207, label %209, label %208, !dbg !4805

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1089) #26, !dbg !4806
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1089) #26, !dbg !4806
  unreachable, !dbg !4806

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4800
  %211 = add nuw nsw i8 %182, 1, !dbg !4808
  call void @llvm.dbg.value(metadata i8 %211, metadata !4598, metadata !DIExpression()), !dbg !4622
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4809
  br label %231, !dbg !4810

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4811

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4813
  br i1 %215, label %217, label %216, !dbg !4818

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1096) #26, !dbg !4819
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1096) #26, !dbg !4819
  unreachable, !dbg !4819

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4813
  %219 = add nuw nsw i8 %183, 1, !dbg !4821
  call void @llvm.dbg.value(metadata i8 %219, metadata !4597, metadata !DIExpression()), !dbg !4622
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4822
  br label %231, !dbg !4823

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4824
  br i1 %222, label %224, label %223, !dbg !4828

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1099) #26, !dbg !4829
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 1099) #26, !dbg !4829
  unreachable, !dbg !4829

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4824
  %226 = add nuw nsw i8 %182, 1, !dbg !4831
  call void @llvm.dbg.value(metadata i8 %226, metadata !4598, metadata !DIExpression()), !dbg !4622
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4832
  store i8 %185, i8* %227, align 1, !dbg !4833
  %228 = add nuw nsw i8 %182, 2, !dbg !4834
  call void @llvm.dbg.value(metadata i8 %228, metadata !4598, metadata !DIExpression()), !dbg !4622
  %229 = zext i8 %226 to i32, !dbg !4835
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4835
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4836
  br label %235, !dbg !4837

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !4622
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4757
  call void @llvm.dbg.value(metadata i8 %237, metadata !4598, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8 %236, metadata !4597, metadata !DIExpression()), !dbg !4622
  %238 = add nuw nsw i32 %181, 1, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %186, metadata !4572, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %238, metadata !4601, metadata !DIExpression()), !dbg !4752
  %239 = icmp eq i32 %238, %31, !dbg !4753
  br i1 %239, label %160, label %179, !dbg !4754, !llvm.loop !4838

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4762
  call void @llvm.dbg.value(metadata i32 %177, metadata !4570, metadata !DIExpression()), !dbg !4622
  store i32 %176, i32* %14, align 1, !dbg !4840
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4841
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #26, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %243, metadata !4600, metadata !DIExpression()), !dbg !4622
  %244 = icmp slt i32 %243, 0, !dbg !4843
  br i1 %244, label %287, label %245, !dbg !4845

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !4570, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4622
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4846
  %248 = add nuw nsw i32 %44, %24, !dbg !4846
  %249 = sub i32 %247, %248, !dbg !4846
  call void @llvm.dbg.value(metadata i32 %249, metadata !4610, metadata !DIExpression()), !dbg !4622
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #26, !dbg !4847
  call void @llvm.dbg.value(metadata i32 %250, metadata !4600, metadata !DIExpression()), !dbg !4622
  %251 = icmp slt i32 %250, 0, !dbg !4848
  br i1 %251, label %287, label %252, !dbg !4850

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4851
  call void @llvm.dbg.value(metadata i32 %253, metadata !4570, metadata !DIExpression()), !dbg !4622
  %254 = add nuw nsw i32 %253, %250, !dbg !4852
  call void @llvm.dbg.value(metadata i32 %254, metadata !4570, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 0, metadata !4611, metadata !DIExpression()), !dbg !4853
  %255 = icmp eq i8 %162, 0, !dbg !4854
  br i1 %255, label %284, label %256, !dbg !4855

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4855

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !4611, metadata !DIExpression()), !dbg !4853
  call void @llvm.dbg.value(metadata i32 %260, metadata !4570, metadata !DIExpression()), !dbg !4622
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4856
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4857
  %262 = load i8, i8* %261, align 1, !dbg !4857
  call void @llvm.dbg.value(metadata i8 %262, metadata !4613, metadata !DIExpression()), !dbg !4858
  store i8 %262, i8* %10, align 1, !dbg !4859
  %263 = zext i8 %262 to i32, !dbg !4860
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4860
  %265 = bitcast i32* %264 to i8**, !dbg !4861
  %266 = load i8*, i8** %265, align 4, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %266, metadata !4616, metadata !DIExpression()), !dbg !4858
  br i1 %257, label %270, label %267, !dbg !4862

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4863
  %269 = load i16, i16* %268, align 2, !dbg !4863
  br label %270, !dbg !4862

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4862
  call void @llvm.dbg.value(metadata i32 undef, metadata !4617, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4858
  call void @llvm.dbg.value(metadata i8* %10, metadata !4613, metadata !DIExpression(DW_OP_deref)), !dbg !4858
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #26, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %272, metadata !4600, metadata !DIExpression()), !dbg !4622
  %273 = icmp slt i32 %272, 0, !dbg !4865
  br i1 %273, label %277, label %274, !dbg !4867

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !4617, metadata !DIExpression()), !dbg !4858
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !4570, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4622
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #27, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %275, metadata !4600, metadata !DIExpression()), !dbg !4622
  %276 = icmp slt i32 %275, 0, !dbg !4869
  br i1 %276, label %277, label %279, !dbg !4871

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4570, metadata !DIExpression()), !dbg !4622
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4872
  call void @llvm.dbg.value(metadata i32 undef, metadata !4570, metadata !DIExpression()), !dbg !4622
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %280, metadata !4570, metadata !DIExpression()), !dbg !4622
  %281 = add nsw i32 %280, %275, !dbg !4874
  call void @llvm.dbg.value(metadata i32 %281, metadata !4570, metadata !DIExpression()), !dbg !4622
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4872
  %282 = add nuw nsw i32 %259, 1, !dbg !4875
  call void @llvm.dbg.value(metadata i32 %282, metadata !4611, metadata !DIExpression()), !dbg !4853
  %283 = icmp eq i32 %282, %167, !dbg !4854
  br i1 %283, label %284, label %258, !dbg !4855, !llvm.loop !4876

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4852
  call void @llvm.dbg.value(metadata i32 %285, metadata !4570, metadata !DIExpression()), !dbg !4622
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #26, !dbg !4878
  br label %287, !dbg !4879

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !4622
  ret i32 %288, !dbg !4880
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4881 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4885, metadata !DIExpression()), !dbg !4893
  %2 = icmp eq i8* %0, null, !dbg !4894
  br i1 %2, label %3, label %4, !dbg !4897

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.30, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 198) #26, !dbg !4898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 198) #26, !dbg !4898
  unreachable, !dbg !4898

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4886, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i8* %0, metadata !4887, metadata !DIExpression()), !dbg !4893
  %5 = load i8, i8* %0, align 1, !dbg !4900
  %6 = zext i8 %5 to i32, !dbg !4900
  %7 = shl nuw nsw i32 %6, 2, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %7, metadata !4888, metadata !DIExpression()), !dbg !4893
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4902
  %9 = load i8, i8* %8, align 1, !dbg !4902
  %10 = zext i8 %9 to i32, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %10, metadata !4889, metadata !DIExpression()), !dbg !4893
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4903
  %12 = load i8, i8* %11, align 1, !dbg !4903
  %13 = zext i8 %12 to i32, !dbg !4903
  call void @llvm.dbg.value(metadata i32 %13, metadata !4890, metadata !DIExpression()), !dbg !4893
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4904
  call void @llvm.dbg.value(metadata i8* %14, metadata !4886, metadata !DIExpression()), !dbg !4893
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4905
  call void @llvm.dbg.value(metadata i8* %15, metadata !4886, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i32 0, metadata !4891, metadata !DIExpression()), !dbg !4906
  %16 = icmp eq i8 %9, 0, !dbg !4907
  br i1 %16, label %17, label %22, !dbg !4909

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4893
  %19 = ptrtoint i8* %18 to i32, !dbg !4910
  %20 = ptrtoint i8* %0 to i32, !dbg !4910
  %21 = sub i32 %19, %20, !dbg !4910
  ret i32 %21, !dbg !4911

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4891, metadata !DIExpression()), !dbg !4906
  call void @llvm.dbg.value(metadata i8* %24, metadata !4886, metadata !DIExpression()), !dbg !4893
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4912
  call void @llvm.dbg.value(metadata i8* %25, metadata !4886, metadata !DIExpression()), !dbg !4893
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #26, !dbg !4914
  %27 = add i32 %26, 1, !dbg !4915
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4916
  call void @llvm.dbg.value(metadata i8* %28, metadata !4886, metadata !DIExpression()), !dbg !4893
  %29 = add nuw nsw i32 %23, 1, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %29, metadata !4891, metadata !DIExpression()), !dbg !4906
  %30 = icmp eq i32 %29, %10, !dbg !4907
  br i1 %30, label %17, label %22, !dbg !4909, !llvm.loop !4918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4920 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4924, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i8* %1, metadata !4925, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i8* %2, metadata !4926, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.value(metadata i16 %3, metadata !4927, metadata !DIExpression()), !dbg !4928
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4929
  br i1 %5, label %6, label %9, !dbg !4931

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !4932
  %8 = add i32 %7, 1, !dbg !4934
  br label %20, !dbg !4935

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4936
  br i1 %10, label %13, label %11, !dbg !4937

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4937
  br label %16, !dbg !4937

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #26, !dbg !4938
  %15 = add i32 %14, 1, !dbg !4939
  br label %16, !dbg !4937

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4937
  %18 = and i32 %17, 65535, !dbg !4940
  call void @llvm.dbg.value(metadata i32 %17, metadata !4927, metadata !DIExpression()), !dbg !4928
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #26, !dbg !4941
  br label %20, !dbg !4942

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4928
  ret i32 %21, !dbg !4943
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4944 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4946, metadata !DIExpression()), !dbg !4947
  ret i32 0, !dbg !4948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4949 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4953, metadata !DIExpression()), !dbg !4954
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4955
  ret void, !dbg !4956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4957 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4960
  ret i8* %1, !dbg !4961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4962 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4973, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i8* %0, metadata !4972, metadata !DIExpression()), !dbg !4982
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #27, !dbg !4983
  ret void, !dbg !4985
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4990, metadata !DIExpression()), !dbg !4992
  call void @llvm.dbg.value(metadata i8* %1, metadata !4991, metadata !DIExpression()), !dbg !4992
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4993
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !4993
  ret i32 %4, !dbg !4994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4995 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5002, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4999, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %1, metadata !5000, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %2, metadata !5001, metadata !DIExpression()), !dbg !5003
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !5004
  ret void, !dbg !5005
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5006 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5010, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i32 %1, metadata !5011, metadata !DIExpression()), !dbg !5013
  call void @llvm.dbg.value(metadata i32 0, metadata !5012, metadata !DIExpression()), !dbg !5013
  %3 = icmp eq i32 %1, 0, !dbg !5014
  br i1 %3, label %13, label %4, !dbg !5017

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5012, metadata !DIExpression()), !dbg !5013
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5018
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5020
  %8 = load i8, i8* %7, align 1, !dbg !5020
  %9 = zext i8 %8 to i32, !dbg !5020
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !5018
  %11 = add nuw i32 %5, 1, !dbg !5021
  call void @llvm.dbg.value(metadata i32 %11, metadata !5012, metadata !DIExpression()), !dbg !5013
  %12 = icmp eq i32 %11, %1, !dbg !5014
  br i1 %12, label %13, label %4, !dbg !5017, !llvm.loop !5022

13:                                               ; preds = %4, %2
  ret void, !dbg !5024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5025 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5029, metadata !DIExpression()), !dbg !5031
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5032
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5032
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5030, metadata !DIExpression()), !dbg !5033
  call void @llvm.va_start(i8* nonnull %3), !dbg !5034
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5035
  %5 = load i32, i32* %4, align 4, !dbg !5035
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5035
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !5035
  call void @llvm.va_end(i8* nonnull %3), !dbg !5036
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5037
  ret void, !dbg !5037
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5038 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5042, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i32 %1, metadata !5043, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.value(metadata i8* %2, metadata !5044, metadata !DIExpression()), !dbg !5047
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !5048
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5048
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !5045, metadata !DIExpression()), !dbg !5049
  call void @llvm.va_start(i8* nonnull %5), !dbg !5050
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !5051
  %7 = load i32, i32* %6, align 4, !dbg !5051
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5051
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #27, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %9, metadata !5046, metadata !DIExpression()), !dbg !5047
  call void @llvm.va_end(i8* nonnull %5), !dbg !5052
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5053
  ret i32 %9, !dbg !5054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5055 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5062, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8* %0, metadata !5059, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i32 %1, metadata !5060, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.value(metadata i8* %2, metadata !5061, metadata !DIExpression()), !dbg !5069
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5070
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5070
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5063, metadata !DIExpression()), !dbg !5071
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5072
  store i8* %0, i8** %7, align 4, !dbg !5072
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5072
  store i32 %1, i32* %8, align 4, !dbg !5072
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5072
  store i32 0, i32* %9, align 4, !dbg !5072
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #27, !dbg !5073
  %10 = load i32, i32* %9, align 4, !dbg !5074
  %11 = load i32, i32* %8, align 4, !dbg !5076
  %12 = icmp slt i32 %10, %11, !dbg !5077
  br i1 %12, label %13, label %15, !dbg !5078

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5079
  store i8 0, i8* %14, align 1, !dbg !5081
  br label %15, !dbg !5082

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5083
  ret i32 %10, !dbg !5084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !5085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5090, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5091, metadata !DIExpression()), !dbg !5092
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5093
  %4 = load i8*, i8** %3, align 4, !dbg !5093
  %5 = icmp eq i8* %4, null, !dbg !5095
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5096
  br i1 %5, label %12, label %8, !dbg !5097

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5098
  %10 = load i32, i32* %9, align 4, !dbg !5098
  %11 = icmp slt i32 %7, %10, !dbg !5099
  br i1 %11, label %15, label %12, !dbg !5100

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5101
  %14 = add nsw i32 %7, 1, !dbg !5103
  store i32 %14, i32* %13, align 4, !dbg !5103
  br label %25, !dbg !5104

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5105
  %17 = icmp eq i32 %7, %16, !dbg !5107
  br i1 %17, label %18, label %21, !dbg !5108

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5109
  store i32 %19, i32* %6, align 4, !dbg !5109
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5111
  store i8 0, i8* %20, align 1, !dbg !5112
  br label %25, !dbg !5113

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5114
  %23 = add nsw i32 %7, 1, !dbg !5116
  store i32 %23, i32* %6, align 4, !dbg !5116
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5117
  store i8 %22, i8* %24, align 1, !dbg !5118
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5119
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !5120 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5125, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %1, metadata !5126, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %2, metadata !5127, metadata !DIExpression()), !dbg !5129
  call void @llvm.dbg.value(metadata i8* %3, metadata !5128, metadata !DIExpression()), !dbg !5129
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !5130
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5131
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #27, !dbg !5132
  unreachable, !dbg !5133
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !5134 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5240
  ret %struct.k_thread* %1, !dbg !5241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5242 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5247, metadata !DIExpression()), !dbg !5248
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5249, !srcloc !5251
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !5252
  ret void, !dbg !5253
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !5254 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5255, !srcloc !5257
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !5258
  ret %struct.k_thread* %1, !dbg !5259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !5260 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5271, metadata !DIExpression()), !dbg !5275
  call void @llvm.dbg.value(metadata i8* %1, metadata !5272, metadata !DIExpression()), !dbg !5275
  %3 = icmp eq i8* %1, null, !dbg !5276
  br i1 %3, label %16, label %4, !dbg !5278

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5279
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5279
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5273, metadata !DIExpression()), !dbg !5275
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5280, !range !5281
  call void @llvm.dbg.value(metadata i32 %7, metadata !5274, metadata !DIExpression()), !dbg !5275
  %8 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5282
  br i1 %8, label %10, label %9, !dbg !5285

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 176) #26, !dbg !5286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.42, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 176) #26, !dbg !5286
  unreachable, !dbg !5286

10:                                               ; preds = %4
  %11 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5288
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %6, i32 noundef %11) #27, !dbg !5288
  %13 = icmp eq i32 %12, %7, !dbg !5288
  br i1 %13, label %15, label %14, !dbg !5291

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 185) #26, !dbg !5292
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.44, i32 0, i32 0), i8* noundef nonnull %1) #26, !dbg !5292
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 185) #26, !dbg !5292
  unreachable, !dbg !5292

15:                                               ; preds = %10
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #27, !dbg !5294
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #27, !dbg !5295
  br label %16

16:                                               ; preds = %2, %15
  ret void, !dbg !5296
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #4 !dbg !5297 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5301, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i8* %1, metadata !5302, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i8* %1, metadata !5303, metadata !DIExpression()), !dbg !5305
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5306
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5304, metadata !DIExpression()), !dbg !5305
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !5307
  %5 = ptrtoint i8* %4 to i32, !dbg !5308
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !5308
  %7 = sub i32 %5, %6, !dbg !5308
  %8 = lshr i32 %7, 3, !dbg !5309
  ret i32 %8, !dbg !5310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5311 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5315, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.value(metadata i32 %1, metadata !5316, metadata !DIExpression()), !dbg !5317
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5318
  %4 = and i32 %3, 1, !dbg !5319
  %5 = icmp ne i32 %4, 0, !dbg !5318
  ret i1 %5, !dbg !5320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5321 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5325, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.value(metadata i32 %1, metadata !5326, metadata !DIExpression()), !dbg !5327
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5328
  %4 = add i32 %3, %1, !dbg !5329
  ret i32 %4, !dbg !5330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5331 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5333, metadata !DIExpression()), !dbg !5335
  call void @llvm.dbg.value(metadata i32 %1, metadata !5334, metadata !DIExpression()), !dbg !5335
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #27, !dbg !5336
  %4 = sub i32 %1, %3, !dbg !5337
  ret i32 %4, !dbg !5338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #9 !dbg !5339 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5343, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata i32 %1, metadata !5344, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata i1 %2, metadata !5345, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5348
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5349
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5346, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5347, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5348
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !5350
  %6 = bitcast i8* %5 to i16*, !dbg !5350
  %7 = load i16, i16* %6, align 2, !dbg !5350
  %8 = and i16 %7, -2, !dbg !5354
  %9 = zext i1 %2 to i16, !dbg !5354
  %10 = or i16 %8, %9, !dbg !5354
  store i16 %10, i16* %6, align 2, !dbg !5350
  ret void, !dbg !5355
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5356 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5360, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.value(metadata i32 %1, metadata !5361, metadata !DIExpression()), !dbg !5362
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5363
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5365
  br i1 %4, label %7, label %5, !dbg !5366

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5367
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5369
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5370
  br label %7, !dbg !5371

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5372
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5374
  br i1 %9, label %13, label %10, !dbg !5375

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #27, !dbg !5376
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5378
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #27, !dbg !5379
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5380
  call void @llvm.dbg.value(metadata i32 %12, metadata !5361, metadata !DIExpression()), !dbg !5362
  br label %13, !dbg !5381

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5361, metadata !DIExpression()), !dbg !5362
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #27, !dbg !5382
  ret void, !dbg !5383
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5384 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5386, metadata !DIExpression()), !dbg !5391
  call void @llvm.dbg.value(metadata i32 %1, metadata !5387, metadata !DIExpression()), !dbg !5391
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5392, !range !5393
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5394
  call void @llvm.dbg.value(metadata i32 %4, metadata !5388, metadata !DIExpression()), !dbg !5395
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5396
  ret void, !dbg !5397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5398 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5402, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i32 %1, metadata !5403, metadata !DIExpression()), !dbg !5407
  call void @llvm.dbg.value(metadata i32 %2, metadata !5404, metadata !DIExpression()), !dbg !5407
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5408
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5409
  %6 = add i32 %5, %4, !dbg !5410
  call void @llvm.dbg.value(metadata i32 %6, metadata !5405, metadata !DIExpression()), !dbg !5407
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #27, !dbg !5411
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5412
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5413
  ret void, !dbg !5414
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !5415 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5417, metadata !DIExpression()), !dbg !5422
  call void @llvm.dbg.value(metadata i32 %1, metadata !5418, metadata !DIExpression()), !dbg !5422
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5423, !range !5393
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #27, !dbg !5424
  call void @llvm.dbg.value(metadata i32 %4, metadata !5419, metadata !DIExpression()), !dbg !5425
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #27, !dbg !5426
  ret void, !dbg !5427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #8 !dbg !5428 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5432, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.value(metadata i32 %1, metadata !5433, metadata !DIExpression()), !dbg !5434
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #27, !dbg !5435
  %4 = lshr i32 %3, 1, !dbg !5436
  ret i32 %4, !dbg !5437
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !5438 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5442, metadata !DIExpression()), !dbg !5445
  call void @llvm.dbg.value(metadata i32 %1, metadata !5443, metadata !DIExpression()), !dbg !5445
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #27, !dbg !5446
  %4 = add i32 %1, 1, !dbg !5447
  %5 = sub i32 %4, %3, !dbg !5448
  call void @llvm.dbg.value(metadata i32 %5, metadata !5444, metadata !DIExpression()), !dbg !5445
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !5449, !range !5450
  %7 = sub nsw i32 31, %6, !dbg !5451
  ret i32 %7, !dbg !5452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5453 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5457, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i32 %1, metadata !5458, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata i32 %2, metadata !5459, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !5460, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5466
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !5467
  %5 = load i32, i32* %4, align 4, !dbg !5467
  %6 = icmp eq i32 %5, 0, !dbg !5468
  br i1 %6, label %7, label %12, !dbg !5469

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5470
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5472
  %10 = load i32, i32* %9, align 4, !dbg !5473
  %11 = or i32 %10, %8, !dbg !5473
  store i32 %11, i32* %9, align 4, !dbg !5473
  store i32 %1, i32* %4, align 4, !dbg !5474
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5475
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #27, !dbg !5476
  br label %14, !dbg !5477

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !5462, metadata !DIExpression()), !dbg !5478
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #27, !dbg !5479, !range !5480
  call void @llvm.dbg.value(metadata i32 %13, metadata !5465, metadata !DIExpression()), !dbg !5478
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #27, !dbg !5481
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5482
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #27, !dbg !5483
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #27, !dbg !5484
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !5485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5486 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5488, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.value(metadata i32 %1, metadata !5489, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.value(metadata i32 %2, metadata !5490, metadata !DIExpression()), !dbg !5491
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #27, !dbg !5492
  ret void, !dbg !5493
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5494 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5496, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i32 %1, metadata !5497, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata i32 %2, metadata !5498, metadata !DIExpression()), !dbg !5499
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #27, !dbg !5500
  ret void, !dbg !5501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5502 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5504, metadata !DIExpression()), !dbg !5506
  call void @llvm.dbg.value(metadata i32 %1, metadata !5505, metadata !DIExpression()), !dbg !5506
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #27, !dbg !5507
  ret i32 %3, !dbg !5508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #8 !dbg !5509 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5513, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.value(metadata i32 %1, metadata !5514, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.value(metadata i32 %2, metadata !5515, metadata !DIExpression()), !dbg !5518
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5519
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !5516, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5517, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5518
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !5517, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5518
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !5520
  call void @llvm.dbg.value(metadata i8* %5, metadata !5517, metadata !DIExpression()), !dbg !5518
  %6 = bitcast i8* %5 to i16*, !dbg !5521
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !5524
  %8 = load i16, i16* %7, align 2, !dbg !5524
  %9 = zext i16 %8 to i32, !dbg !5524
  ret i32 %9, !dbg !5525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #4 !dbg !5526 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5530, metadata !DIExpression()), !dbg !5531
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !5532
  ret %struct.chunk_unit_t* %2, !dbg !5533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #7 !dbg !5534 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5538, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata i32 %1, metadata !5539, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata i32 %2, metadata !5540, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata i32 %3, metadata !5541, metadata !DIExpression()), !dbg !5544
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5545
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !5542, metadata !DIExpression()), !dbg !5544
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !5543, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !5544
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !5546
  call void @llvm.dbg.value(metadata i8* %6, metadata !5543, metadata !DIExpression()), !dbg !5544
  %7 = trunc i32 %3 to i16, !dbg !5547
  %8 = bitcast i8* %6 to i16*, !dbg !5550
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !5551
  store i16 %7, i16* %9, align 2, !dbg !5552
  ret void, !dbg !5553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #4 !dbg !5554 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5558, metadata !DIExpression()), !dbg !5559
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #27, !dbg !5560
  ret i32 %2, !dbg !5561
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5562 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5566, metadata !DIExpression()), !dbg !5568
  call void @llvm.dbg.value(metadata i32 %1, metadata !5567, metadata !DIExpression()), !dbg !5568
  %3 = add i32 %1, 4, !dbg !5569
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #27, !dbg !5570
  ret i32 %4, !dbg !5571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #4 !dbg !5572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5576, metadata !DIExpression()), !dbg !5577
  %2 = add i32 %0, 7, !dbg !5578
  %3 = lshr i32 %2, 3, !dbg !5579
  ret i32 %3, !dbg !5580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5581 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5585, metadata !DIExpression()), !dbg !5588
  call void @llvm.dbg.value(metadata i32 %1, metadata !5586, metadata !DIExpression()), !dbg !5588
  call void @llvm.dbg.value(metadata i32 %2, metadata !5587, metadata !DIExpression()), !dbg !5588
  %4 = shl i32 %2, 1, !dbg !5589
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #27, !dbg !5590
  ret void, !dbg !5591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !5592 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5594, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.value(metadata i32 %1, metadata !5595, metadata !DIExpression()), !dbg !5597
  call void @llvm.dbg.value(metadata i32 %2, metadata !5596, metadata !DIExpression()), !dbg !5597
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #27, !dbg !5598
  ret void, !dbg !5599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5600 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5602, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i32 %1, metadata !5603, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.value(metadata i32 %2, metadata !5604, metadata !DIExpression()), !dbg !5610
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !5611
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %4, metadata !5605, metadata !DIExpression()), !dbg !5610
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5612
  %6 = icmp eq i32 %5, %1, !dbg !5613
  br i1 %6, label %7, label %14, !dbg !5614

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !5615
  %9 = xor i32 %8, -1, !dbg !5617
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5618
  %11 = load i32, i32* %10, align 4, !dbg !5619
  %12 = and i32 %11, %9, !dbg !5619
  store i32 %12, i32* %10, align 4, !dbg !5619
  %13 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5620
  store i32 0, i32* %13, align 4, !dbg !5621
  br label %17, !dbg !5622

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5623
  call void @llvm.dbg.value(metadata i32 %15, metadata !5606, metadata !DIExpression()), !dbg !5624
  call void @llvm.dbg.value(metadata i32 %5, metadata !5609, metadata !DIExpression()), !dbg !5624
  %16 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %4, i32 0, i32 0, !dbg !5625
  store i32 %5, i32* %16, align 4, !dbg !5626
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #27, !dbg !5627
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #27, !dbg !5628
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !5629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5630 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5632, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata i32 %1, metadata !5633, metadata !DIExpression()), !dbg !5634
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #27, !dbg !5635
  ret i32 %3, !dbg !5636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #8 !dbg !5637 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5641, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.value(metadata i8* %1, metadata !5642, metadata !DIExpression()), !dbg !5648
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5649
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5649
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5643, metadata !DIExpression()), !dbg !5648
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #27, !dbg !5650
  call void @llvm.dbg.value(metadata i32 %5, metadata !5644, metadata !DIExpression()), !dbg !5648
  %6 = ptrtoint i8* %1 to i32, !dbg !5651
  call void @llvm.dbg.value(metadata i32 %6, metadata !5645, metadata !DIExpression()), !dbg !5648
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #27, !dbg !5652
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !5652
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !5653
  call void @llvm.dbg.value(metadata i32 %9, metadata !5646, metadata !DIExpression()), !dbg !5648
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #27, !dbg !5654
  %11 = shl i32 %10, 3, !dbg !5655
  call void @llvm.dbg.value(metadata i32 %11, metadata !5647, metadata !DIExpression()), !dbg !5648
  %12 = sub i32 %9, %6, !dbg !5656
  %13 = add i32 %12, %11, !dbg !5657
  ret i32 %13, !dbg !5658
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #13 !dbg !5659 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5663, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.value(metadata i32 %1, metadata !5664, metadata !DIExpression()), !dbg !5669
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5670
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !5670
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !5665, metadata !DIExpression()), !dbg !5669
  %5 = icmp eq i32 %1, 0, !dbg !5671
  br i1 %5, label %19, label %6, !dbg !5673

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5674
  br i1 %7, label %19, label %8, !dbg !5675

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #27, !dbg !5676, !range !5281
  call void @llvm.dbg.value(metadata i32 %9, metadata !5667, metadata !DIExpression()), !dbg !5669
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #27, !dbg !5677
  call void @llvm.dbg.value(metadata i32 %10, metadata !5668, metadata !DIExpression()), !dbg !5669
  %11 = icmp eq i32 %10, 0, !dbg !5678
  br i1 %11, label %19, label %12, !dbg !5680

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5681
  %14 = icmp ugt i32 %13, %9, !dbg !5683
  br i1 %14, label %15, label %17, !dbg !5684

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !5685
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #27, !dbg !5687
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #27, !dbg !5688
  br label %17, !dbg !5689

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #27, !dbg !5690
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #27, !dbg !5691
  call void @llvm.dbg.value(metadata i8* %18, metadata !5666, metadata !DIExpression()), !dbg !5669
  br label %19, !dbg !5692

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !5669
  ret i8* %20, !dbg !5693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !5694 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5698, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.value(metadata i32 %1, metadata !5699, metadata !DIExpression()), !dbg !5700
  %3 = lshr i32 %1, 3, !dbg !5701
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !5702
  %5 = load i32, i32* %4, align 4, !dbg !5702
  %6 = icmp uge i32 %3, %5, !dbg !5703
  ret i1 %6, !dbg !5704
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #13 !dbg !5705 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5709, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.value(metadata i32 %1, metadata !5710, metadata !DIExpression()), !dbg !5724
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5725
  call void @llvm.dbg.value(metadata i32 %3, metadata !5711, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !5712, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !5724
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !5726
  %5 = load i32, i32* %4, align 4, !dbg !5726
  %6 = icmp eq i32 %5, 0, !dbg !5727
  br i1 %6, label %19, label %7, !dbg !5728

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !5729
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !5730
  call void @llvm.dbg.value(metadata i32 %9, metadata !5716, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.value(metadata i32 %8, metadata !5717, metadata !DIExpression()), !dbg !5731
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5732
  %11 = icmp ult i32 %10, %1, !dbg !5734
  br i1 %11, label %13, label %12, !dbg !5735

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #27, !dbg !5736
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #27, !dbg !5738
  store i32 %14, i32* %4, align 4, !dbg !5739
  %15 = add nsw i32 %9, -1, !dbg !5740
  call void @llvm.dbg.value(metadata i32 %15, metadata !5716, metadata !DIExpression()), !dbg !5730
  %16 = icmp eq i32 %15, 0, !dbg !5740
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !5741
  br i1 %18, label %19, label %7, !dbg !5741, !llvm.loop !5742

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !5745
  %21 = load i32, i32* %20, align 4, !dbg !5745
  %22 = add nsw i32 %3, 1, !dbg !5746
  %23 = shl nsw i32 -1, %22, !dbg !5746
  %24 = and i32 %21, %23, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %24, metadata !5719, metadata !DIExpression()), !dbg !5724
  %25 = icmp eq i32 %24, 0, !dbg !5748
  br i1 %25, label %30, label %26, !dbg !5749

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !5750, !range !5450
  call void @llvm.dbg.value(metadata i32 %27, metadata !5720, metadata !DIExpression()), !dbg !5751
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !5752
  %29 = load i32, i32* %28, align 4, !dbg !5752
  call void @llvm.dbg.value(metadata i32 %29, metadata !5723, metadata !DIExpression()), !dbg !5751
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #27, !dbg !5753
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !5724
  ret i32 %31, !dbg !5754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !5755 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5757, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.value(metadata i32 %1, metadata !5758, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.value(metadata i32 %2, metadata !5759, metadata !DIExpression()), !dbg !5763
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #27, !dbg !5764
  call void @llvm.dbg.value(metadata i32 %4, metadata !5760, metadata !DIExpression()), !dbg !5763
  %5 = sub i32 %2, %1, !dbg !5765
  call void @llvm.dbg.value(metadata i32 %5, metadata !5761, metadata !DIExpression()), !dbg !5763
  %6 = sub i32 %4, %5, !dbg !5766
  call void @llvm.dbg.value(metadata i32 %6, metadata !5762, metadata !DIExpression()), !dbg !5763
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #27, !dbg !5767
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #27, !dbg !5768
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #27, !dbg !5769
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #27, !dbg !5770
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #27, !dbg !5771
  ret void, !dbg !5772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5773 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5777, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata i32 %1, metadata !5778, metadata !DIExpression()), !dbg !5781
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #27, !dbg !5782
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !5779, metadata !DIExpression()), !dbg !5781
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !5783
  call void @llvm.dbg.value(metadata i8* %4, metadata !5780, metadata !DIExpression()), !dbg !5781
  ret i8* %4, !dbg !5784
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5785 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5789, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i32 %1, metadata !5790, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i32 %2, metadata !5791, metadata !DIExpression()), !dbg !5801
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5802
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !5802
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !5792, metadata !DIExpression()), !dbg !5801
  %6 = sub i32 0, %1, !dbg !5803
  %7 = and i32 %6, %1, !dbg !5804
  call void @llvm.dbg.value(metadata i32 %7, metadata !5794, metadata !DIExpression()), !dbg !5801
  %8 = icmp eq i32 %7, %1, !dbg !5805
  br i1 %8, label %13, label %9, !dbg !5807

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !5808
  call void @llvm.dbg.value(metadata i32 %10, metadata !5790, metadata !DIExpression()), !dbg !5801
  %11 = icmp ult i32 %7, 4, !dbg !5810
  %12 = select i1 %11, i32 %7, i32 4, !dbg !5810
  br label %17, !dbg !5810

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !5811
  br i1 %14, label %15, label %17, !dbg !5814

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #27, !dbg !5815
  br label %61, !dbg !5817

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !5801
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !5818
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5790, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i32 %19, metadata !5793, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.value(metadata i32 %18, metadata !5794, metadata !DIExpression()), !dbg !5801
  %21 = add i32 %20, -1, !dbg !5819
  %22 = tail call i32 @llvm.ctpop.i32(i32 %20), !dbg !5819, !range !5450
  %23 = icmp ult i32 %22, 2, !dbg !5819
  br i1 %23, label %25, label %24, !dbg !5822

24:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 324) #26, !dbg !5823
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.46, i32 0, i32 0)) #26, !dbg !5823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 324) #26, !dbg !5823
  unreachable, !dbg !5823

25:                                               ; preds = %17
  %26 = icmp eq i32 %2, 0, !dbg !5825
  br i1 %26, label %61, label %27, !dbg !5827

27:                                               ; preds = %25
  %28 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #27, !dbg !5828
  br i1 %28, label %61, label %29, !dbg !5829

29:                                               ; preds = %27
  %30 = sub i32 %2, %19, !dbg !5830
  %31 = add i32 %30, %20, !dbg !5831
  %32 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %31) #27, !dbg !5832, !range !5281
  call void @llvm.dbg.value(metadata i32 %32, metadata !5795, metadata !DIExpression()), !dbg !5801
  %33 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %32) #27, !dbg !5833
  call void @llvm.dbg.value(metadata i32 %33, metadata !5796, metadata !DIExpression()), !dbg !5801
  %34 = icmp eq i32 %33, 0, !dbg !5834
  br i1 %34, label %61, label %35, !dbg !5836

35:                                               ; preds = %29
  %36 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !5837
  call void @llvm.dbg.value(metadata i8* %36, metadata !5797, metadata !DIExpression()), !dbg !5801
  %37 = getelementptr inbounds i8, i8* %36, i32 %18, !dbg !5838
  %38 = ptrtoint i8* %37 to i32, !dbg !5838
  %39 = add i32 %21, %38, !dbg !5838
  %40 = sub i32 0, %20, !dbg !5838
  %41 = and i32 %39, %40, !dbg !5838
  %42 = inttoptr i32 %41 to i8*, !dbg !5839
  %43 = sub i32 0, %18, !dbg !5840
  %44 = getelementptr inbounds i8, i8* %42, i32 %43, !dbg !5840
  call void @llvm.dbg.value(metadata i8* %44, metadata !5797, metadata !DIExpression()), !dbg !5801
  %45 = getelementptr inbounds i8, i8* %44, i32 %2, !dbg !5841
  %46 = ptrtoint i8* %45 to i32, !dbg !5841
  %47 = add i32 %46, 7, !dbg !5841
  %48 = and i32 %47, -8, !dbg !5841
  call void @llvm.dbg.value(metadata i32 %48, metadata !5798, metadata !DIExpression()), !dbg !5801
  %49 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %44) #27, !dbg !5842
  call void @llvm.dbg.value(metadata i32 %49, metadata !5799, metadata !DIExpression()), !dbg !5801
  %50 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #27, !dbg !5843
  %51 = ptrtoint %struct.chunk_unit_t* %50 to i32, !dbg !5844
  %52 = sub i32 %48, %51, !dbg !5844
  %53 = ashr exact i32 %52, 3, !dbg !5844
  call void @llvm.dbg.value(metadata i32 %53, metadata !5800, metadata !DIExpression()), !dbg !5801
  %54 = icmp ugt i32 %49, %33, !dbg !5845
  br i1 %54, label %55, label %56, !dbg !5847

55:                                               ; preds = %35
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %33, i32 noundef %49) #27, !dbg !5848
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %33) #27, !dbg !5850
  br label %56, !dbg !5851

56:                                               ; preds = %55, %35
  %57 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %49) #27, !dbg !5852
  %58 = icmp ugt i32 %57, %53, !dbg !5854
  br i1 %58, label %59, label %60, !dbg !5855

59:                                               ; preds = %56
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %49, i32 noundef %53) #27, !dbg !5856
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %53) #27, !dbg !5858
  br label %60, !dbg !5859

60:                                               ; preds = %59, %56
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %49, i1 noundef zeroext true) #27, !dbg !5860
  br label %61

61:                                               ; preds = %60, %29, %25, %27, %15
  %62 = phi i8* [ %16, %15 ], [ null, %27 ], [ null, %25 ], [ %44, %60 ], [ null, %29 ], !dbg !5801
  ret i8* %62, !dbg !5861
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !5862 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5866, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata i8* %1, metadata !5867, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata i32 %2, metadata !5868, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata i32 %3, metadata !5869, metadata !DIExpression()), !dbg !5885
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !5886
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !5886
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !5870, metadata !DIExpression()), !dbg !5885
  %7 = icmp eq i8* %1, null, !dbg !5887
  br i1 %7, label %8, label %10, !dbg !5889

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5890
  br label %63, !dbg !5892

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !5893
  br i1 %11, label %12, label %13, !dbg !5895

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5896
  br label %63, !dbg !5898

13:                                               ; preds = %10
  %14 = add i32 %2, -1, !dbg !5899
  %15 = tail call i32 @llvm.ctpop.i32(i32 %2), !dbg !5899, !range !5450
  %16 = icmp ult i32 %15, 2, !dbg !5899
  br i1 %16, label %18, label %17, !dbg !5902

17:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.45, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 393) #26, !dbg !5903
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7.46, i32 0, i32 0)) #26, !dbg !5903
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 393) #26, !dbg !5903
  unreachable, !dbg !5903

18:                                               ; preds = %13
  %19 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #27, !dbg !5905
  br i1 %19, label %63, label %20, !dbg !5907

20:                                               ; preds = %18
  %21 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #27, !dbg !5908, !range !5281
  call void @llvm.dbg.value(metadata i32 %21, metadata !5871, metadata !DIExpression()), !dbg !5885
  %22 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %22, metadata !5872, metadata !DIExpression()), !dbg !5885
  %23 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !5910
  %24 = ptrtoint i8* %1 to i32, !dbg !5911
  %25 = ptrtoint i8* %23 to i32, !dbg !5911
  %26 = sub i32 %24, %25, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %26, metadata !5873, metadata !DIExpression()), !dbg !5885
  %27 = add i32 %26, %3, !dbg !5912
  %28 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %27) #27, !dbg !5913
  call void @llvm.dbg.value(metadata i32 %28, metadata !5874, metadata !DIExpression()), !dbg !5885
  %29 = icmp eq i32 %2, 0, !dbg !5914
  %30 = and i32 %14, %24
  %31 = icmp eq i32 %30, 0
  %32 = or i1 %29, %31, !dbg !5915
  br i1 %32, label %33, label %53, !dbg !5915

33:                                               ; preds = %20
  %34 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !5916
  %35 = icmp eq i32 %28, %34, !dbg !5917
  br i1 %35, label %63, label %36, !dbg !5918

36:                                               ; preds = %33
  %37 = icmp ult i32 %28, %34, !dbg !5919
  br i1 %37, label %38, label %40, !dbg !5920

38:                                               ; preds = %36
  %39 = add i32 %28, %21, !dbg !5921
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %39) #27, !dbg !5923
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !5924
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %39) #27, !dbg !5925
  br label %63, !dbg !5926

40:                                               ; preds = %36
  %41 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5927
  br i1 %41, label %53, label %42, !dbg !5928

42:                                               ; preds = %40
  %43 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5929
  %44 = add i32 %43, %34, !dbg !5930
  %45 = icmp ult i32 %44, %28, !dbg !5931
  br i1 %45, label %53, label %46, !dbg !5932

46:                                               ; preds = %42
  %47 = sub i32 %28, %34, !dbg !5933
  call void @llvm.dbg.value(metadata i32 %47, metadata !5875, metadata !DIExpression()), !dbg !5934
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5935
  %48 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %22) #27, !dbg !5936
  %49 = icmp ult i32 %47, %48, !dbg !5938
  br i1 %49, label %50, label %52, !dbg !5939

50:                                               ; preds = %46
  %51 = add i32 %47, %22, !dbg !5940
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %22, i32 noundef %51) #27, !dbg !5942
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %51) #27, !dbg !5943
  br label %52, !dbg !5944

52:                                               ; preds = %50, %46
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %21, i32 noundef %22) #27, !dbg !5945
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %21, i1 noundef zeroext true) #27, !dbg !5946
  br label %63

53:                                               ; preds = %20, %42, %40
  %54 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #27, !dbg !5947
  call void @llvm.dbg.value(metadata i8* %54, metadata !5881, metadata !DIExpression()), !dbg !5885
  %55 = icmp eq i8* %54, null, !dbg !5948
  br i1 %55, label %63, label %56, !dbg !5949

56:                                               ; preds = %53
  %57 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %21) #27, !dbg !5950, !range !5393
  %58 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %57) #27, !dbg !5951
  %59 = sub i32 %58, %26, !dbg !5952
  call void @llvm.dbg.value(metadata i32 %59, metadata !5882, metadata !DIExpression()), !dbg !5953
  %60 = icmp ult i32 %59, %3, !dbg !5954
  %61 = select i1 %60, i32 %59, i32 %3, !dbg !5954
  %62 = tail call i8* @memcpy(i8* noundef nonnull %54, i8* noundef nonnull %1, i32 noundef %61) #26, !dbg !5955
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #27, !dbg !5956
  br label %63, !dbg !5957

63:                                               ; preds = %38, %52, %33, %56, %53, %18, %12, %8
  %64 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %18 ], [ %1, %38 ], [ %1, %52 ], [ %1, %33 ], [ %54, %56 ], [ null, %53 ], !dbg !5885
  ret i8* %64, !dbg !5958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #4 !dbg !5959 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !5963, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i32 %1, metadata !5964, metadata !DIExpression()), !dbg !5965
  %3 = shl i32 %1, 3, !dbg !5966
  %4 = add i32 %3, -4, !dbg !5967
  ret i32 %4, !dbg !5968
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5969 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !5973, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.value(metadata i8* %1, metadata !5974, metadata !DIExpression()), !dbg !5984
  call void @llvm.dbg.value(metadata i32 %2, metadata !5975, metadata !DIExpression()), !dbg !5984
  %4 = icmp ult i32 %2, 262144, !dbg !5985
  br i1 %4, label %6, label %5, !dbg !5990

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8.47, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 491) #26, !dbg !5991
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.48, i32 0, i32 0)) #26, !dbg !5991
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 491) #26, !dbg !5991
  unreachable, !dbg !5991

6:                                                ; preds = %3
  %7 = icmp ugt i32 %2, 4, !dbg !5993
  br i1 %7, label %9, label %8, !dbg !5996

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 498) #26, !dbg !5997
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #26, !dbg !5997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 498) #26, !dbg !5997
  unreachable, !dbg !5997

9:                                                ; preds = %6
  %10 = add nsw i32 %2, -4, !dbg !5999
  call void @llvm.dbg.value(metadata i32 %10, metadata !5975, metadata !DIExpression()), !dbg !5984
  %11 = ptrtoint i8* %1 to i32, !dbg !6000
  %12 = add i32 %11, 7, !dbg !6000
  %13 = and i32 %12, -8, !dbg !6000
  call void @llvm.dbg.value(metadata i32 %13, metadata !5976, metadata !DIExpression()), !dbg !5984
  %14 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !6001
  %15 = ptrtoint i8* %14 to i32, !dbg !6001
  %16 = and i32 %15, -8, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %16, metadata !5977, metadata !DIExpression()), !dbg !5984
  %17 = sub i32 %16, %13, !dbg !6002
  %18 = lshr exact i32 %17, 3, !dbg !6003
  call void @llvm.dbg.value(metadata i32 %18, metadata !5978, metadata !DIExpression()), !dbg !5984
  %19 = tail call fastcc i32 @chunksz(i32 noundef 16) #27, !dbg !6004
  %20 = icmp ugt i32 %18, %19, !dbg !6004
  br i1 %20, label %22, label %21, !dbg !6007

21:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.12.51, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 507) #26, !dbg !6008
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #26, !dbg !6008
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 507) #26, !dbg !6008
  unreachable, !dbg !6008

22:                                               ; preds = %9
  %23 = inttoptr i32 %13 to %struct.z_heap*, !dbg !6010
  call void @llvm.dbg.value(metadata %struct.z_heap* %23, metadata !5979, metadata !DIExpression()), !dbg !5984
  %24 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !6011
  store %struct.z_heap* %23, %struct.z_heap** %24, align 4, !dbg !6012
  %25 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 1, !dbg !6013
  store i32 %18, i32* %25, align 8, !dbg !6014
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 2, !dbg !6015
  store i32 0, i32* %26, align 4, !dbg !6016
  %27 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %23, i32 noundef %18) #27, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %27, metadata !5980, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5984
  %28 = shl i32 %27, 2, !dbg !6018
  %29 = add i32 %28, 20, !dbg !6019
  %30 = tail call fastcc i32 @chunksz(i32 noundef %29) #27, !dbg !6020
  call void @llvm.dbg.value(metadata i32 %30, metadata !5981, metadata !DIExpression()), !dbg !5984
  %31 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %23) #27, !dbg !6021
  %32 = add i32 %31, %30, !dbg !6021
  %33 = icmp ugt i32 %32, %18, !dbg !6021
  br i1 %33, label %36, label %34, !dbg !6024

34:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !5982, metadata !DIExpression()), !dbg !6025
  %35 = icmp slt i32 %27, 0, !dbg !6026
  br i1 %35, label %37, label %39, !dbg !6028

36:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 524) #26, !dbg !6029
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.50, i32 0, i32 0)) #26, !dbg !6029
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 524) #26, !dbg !6029
  unreachable, !dbg !6029

37:                                               ; preds = %39, %34
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef %30) #27, !dbg !6031
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i32 noundef 0) #27, !dbg !6032
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef 0, i1 noundef zeroext true) #27, !dbg !6033
  %38 = sub i32 %18, %30, !dbg !6034
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %38) #27, !dbg !6035
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %30, i32 noundef %30) #27, !dbg !6036
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef 0) #27, !dbg !6037
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i32 noundef %38) #27, !dbg !6038
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %23, i32 noundef %18, i1 noundef zeroext true) #27, !dbg !6039
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %23, i32 noundef %30) #27, !dbg !6040
  ret void, !dbg !6041

39:                                               ; preds = %34, %39
  %40 = phi i32 [ %42, %39 ], [ 0, %34 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !5982, metadata !DIExpression()), !dbg !6025
  %41 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %23, i32 0, i32 3, i32 %40, i32 0, !dbg !6042
  store i32 0, i32* %41, align 4, !dbg !6044
  %42 = add nuw i32 %40, 1, !dbg !6045
  call void @llvm.dbg.value(metadata i32 %42, metadata !5982, metadata !DIExpression()), !dbg !6025
  %43 = icmp eq i32 %40, %27, !dbg !6026
  br i1 %43, label %37, label %39, !dbg !6028, !llvm.loop !6046
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !6048 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !6061, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6058, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8* %1, metadata !6059, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8* %2, metadata !6060, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %4, metadata !6062, metadata !DIExpression()), !dbg !6187
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !6188
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6188
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !6063, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.value(metadata i32 0, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i1 undef, metadata !6069, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6187
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !6190

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !6190

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !6191
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !6061, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8* %30, metadata !6060, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %29, metadata !6067, metadata !DIExpression()), !dbg !6187
  %31 = load i8, i8* %30, align 1, !dbg !6192
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !6190

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !6192
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !6193
  call void @llvm.dbg.value(metadata i8* %34, metadata !6060, metadata !DIExpression()), !dbg !6187
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !6193
  call void @llvm.dbg.value(metadata i32 %35, metadata !6071, metadata !DIExpression()), !dbg !6194
  %36 = icmp slt i32 %35, 0, !dbg !6195
  %37 = add i32 %29, 1, !dbg !6193
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %36, label %365, label %28, !llvm.loop !6197

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6199
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !6076, metadata !DIExpression()), !dbg !6200
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !6200
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !6119, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !6122, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8* %30, metadata !6125, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 -1, metadata !6126, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 -1, metadata !6127, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8* null, metadata !6128, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8* %14, metadata !6129, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8 0, metadata !6130, metadata !DIExpression()), !dbg !6201
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #27, !dbg !6202
  call void @llvm.dbg.value(metadata i8* %39, metadata !6060, metadata !DIExpression()), !dbg !6187
  %40 = load i24, i24* %15, align 8, !dbg !6203
  %41 = and i24 %40, 256, !dbg !6203
  %42 = icmp eq i24 %41, 0, !dbg !6203
  br i1 %42, label %51, label %43, !dbg !6205

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !6206
  call void @llvm.dbg.value(metadata i8* %44, metadata !6061, metadata !DIExpression()), !dbg !6187
  %45 = bitcast i8* %27 to i32*, !dbg !6206
  %46 = load i32, i32* %45, align 4, !dbg !6206
  call void @llvm.dbg.value(metadata i32 %46, metadata !6126, metadata !DIExpression()), !dbg !6201
  %47 = icmp slt i32 %46, 0, !dbg !6208
  br i1 %47, label %48, label %56, !dbg !6210

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !6211
  store i24 %49, i24* %15, align 8, !dbg !6211
  %50 = sub nsw i32 0, %46, !dbg !6213
  call void @llvm.dbg.value(metadata i32 %50, metadata !6126, metadata !DIExpression()), !dbg !6201
  br label %56, !dbg !6214

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !6215
  %53 = icmp eq i24 %52, 0, !dbg !6215
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !6217
  br label %56, !dbg !6217

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !6218
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !6201
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !6061, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %58, metadata !6126, metadata !DIExpression()), !dbg !6201
  %60 = and i24 %57, 1024, !dbg !6218
  %61 = icmp eq i24 %60, 0, !dbg !6218
  br i1 %61, label %69, label %62, !dbg !6219

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !6220
  call void @llvm.dbg.value(metadata i8* %63, metadata !6061, metadata !DIExpression()), !dbg !6187
  %64 = bitcast i8* %59 to i32*, !dbg !6220
  %65 = load i32, i32* %64, align 4, !dbg !6220
  call void @llvm.dbg.value(metadata i32 %65, metadata !6131, metadata !DIExpression()), !dbg !6221
  %66 = icmp slt i32 %65, 0, !dbg !6222
  br i1 %66, label %67, label %74, !dbg !6224

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !6225
  store i24 %68, i24* %15, align 8, !dbg !6225
  br label %74, !dbg !6227

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !6228
  %71 = icmp eq i24 %70, 0, !dbg !6228
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !6230
  br label %74, !dbg !6230

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !6231
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !6201
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !6201
  call void @llvm.dbg.value(metadata i8* %77, metadata !6061, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %76, metadata !6127, metadata !DIExpression()), !dbg !6201
  store i32 0, i32* %16, align 4, !dbg !6232
  store i32 0, i32* %17, align 8, !dbg !6233
  %78 = lshr i24 %75, 16, !dbg !6231
  call void @llvm.dbg.value(metadata i24 %78, metadata !6134, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6201
  %79 = lshr i24 %75, 11, !dbg !6234
  %80 = and i24 %79, 15, !dbg !6234
  %81 = zext i24 %80 to i32, !dbg !6234
  call void @llvm.dbg.value(metadata i32 %81, metadata !6135, metadata !DIExpression()), !dbg !6201
  %82 = trunc i24 %78 to i3, !dbg !6235
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !6235

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !6236

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6239
  call void @llvm.dbg.value(metadata i8* %85, metadata !6061, metadata !DIExpression()), !dbg !6187
  %86 = bitcast i8* %77 to i32*, !dbg !6239
  %87 = load i32, i32* %86, align 4, !dbg !6239
  %88 = sext i32 %87 to i64, !dbg !6239
  store i64 %88, i64* %20, align 8, !dbg !6241
  br label %115, !dbg !6242

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6243
  call void @llvm.dbg.value(metadata i8* %90, metadata !6061, metadata !DIExpression()), !dbg !6187
  %91 = bitcast i8* %77 to i32*, !dbg !6243
  %92 = load i32, i32* %91, align 4, !dbg !6243
  %93 = sext i32 %92 to i64, !dbg !6243
  store i64 %93, i64* %20, align 8, !dbg !6246
  br label %115, !dbg !6247

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !6248
  %96 = add i32 %95, 7, !dbg !6248
  %97 = and i32 %96, -8, !dbg !6248
  %98 = inttoptr i32 %97 to i8*, !dbg !6248
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !6248
  call void @llvm.dbg.value(metadata i8* %99, metadata !6061, metadata !DIExpression()), !dbg !6187
  %100 = inttoptr i32 %97 to i64*, !dbg !6248
  %101 = load i64, i64* %100, align 8, !dbg !6248
  store i64 %101, i64* %20, align 8, !dbg !6249
  br label %115, !dbg !6250

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !6251
  %104 = add i32 %103, 7, !dbg !6251
  %105 = and i32 %104, -8, !dbg !6251
  %106 = inttoptr i32 %105 to i8*, !dbg !6251
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !6251
  call void @llvm.dbg.value(metadata i8* %107, metadata !6061, metadata !DIExpression()), !dbg !6187
  %108 = inttoptr i32 %105 to i64*, !dbg !6251
  %109 = load i64, i64* %108, align 8, !dbg !6251
  store i64 %109, i64* %20, align 8, !dbg !6252
  br label %115, !dbg !6253

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6254
  call void @llvm.dbg.value(metadata i8* %111, metadata !6061, metadata !DIExpression()), !dbg !6187
  %112 = bitcast i8* %77 to i32*, !dbg !6254
  %113 = load i32, i32* %112, align 4, !dbg !6254
  %114 = sext i32 %113 to i64, !dbg !6255
  store i64 %114, i64* %20, align 8, !dbg !6256
  br label %115, !dbg !6257

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !6258
  call void @llvm.dbg.value(metadata i8* %117, metadata !6061, metadata !DIExpression()), !dbg !6187
  %118 = trunc i24 %79 to i4, !dbg !6259
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !6259

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !6260
  %121 = ashr exact i64 %120, 56, !dbg !6260
  store i64 %121, i64* %20, align 8, !dbg !6263
  br label %177, !dbg !6264

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !6265
  %124 = ashr exact i64 %123, 48, !dbg !6265
  store i64 %124, i64* %20, align 8, !dbg !6268
  br label %177, !dbg !6269

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !6270

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6273
  call void @llvm.dbg.value(metadata i8* %127, metadata !6061, metadata !DIExpression()), !dbg !6187
  %128 = bitcast i8* %77 to i32*, !dbg !6273
  %129 = load i32, i32* %128, align 4, !dbg !6273
  %130 = zext i32 %129 to i64, !dbg !6273
  store i64 %130, i64* %20, align 8, !dbg !6275
  br label %157, !dbg !6276

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6277
  call void @llvm.dbg.value(metadata i8* %132, metadata !6061, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8* %132, metadata !6061, metadata !DIExpression()), !dbg !6187
  %133 = bitcast i8* %77 to i32*, !dbg !6277
  %134 = load i32, i32* %133, align 4, !dbg !6277
  %135 = zext i32 %134 to i64, !dbg !6277
  store i64 %135, i64* %20, align 8, !dbg !6277
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !6279
  %138 = add i32 %137, 7, !dbg !6279
  %139 = and i32 %138, -8, !dbg !6279
  %140 = inttoptr i32 %139 to i8*, !dbg !6279
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !6279
  call void @llvm.dbg.value(metadata i8* %141, metadata !6061, metadata !DIExpression()), !dbg !6187
  %142 = inttoptr i32 %139 to i64*, !dbg !6279
  %143 = load i64, i64* %142, align 8, !dbg !6279
  store i64 %143, i64* %20, align 8, !dbg !6280
  br label %157, !dbg !6281

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !6282
  %146 = add i32 %145, 7, !dbg !6282
  %147 = and i32 %146, -8, !dbg !6282
  %148 = inttoptr i32 %147 to i8*, !dbg !6282
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !6282
  call void @llvm.dbg.value(metadata i8* %149, metadata !6061, metadata !DIExpression()), !dbg !6187
  %150 = inttoptr i32 %147 to i64*, !dbg !6282
  %151 = load i64, i64* %150, align 8, !dbg !6282
  store i64 %151, i64* %20, align 8, !dbg !6283
  br label %157, !dbg !6284

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6285
  call void @llvm.dbg.value(metadata i8* %153, metadata !6061, metadata !DIExpression()), !dbg !6187
  %154 = bitcast i8* %77 to i32*, !dbg !6285
  %155 = load i32, i32* %154, align 4, !dbg !6285
  %156 = zext i32 %155 to i64, !dbg !6286
  store i64 %156, i64* %20, align 8, !dbg !6287
  br label %157, !dbg !6288

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !6289
  call void @llvm.dbg.value(metadata i8* %159, metadata !6061, metadata !DIExpression()), !dbg !6187
  %160 = trunc i24 %79 to i4, !dbg !6290
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !6290

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !6291
  store i64 %162, i64* %20, align 8, !dbg !6294
  br label %177, !dbg !6295

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !6296
  store i64 %164, i64* %20, align 8, !dbg !6299
  br label %177, !dbg !6300

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !6301
  %167 = add i32 %166, 7, !dbg !6301
  %168 = and i32 %167, -8, !dbg !6301
  %169 = inttoptr i32 %168 to i8*, !dbg !6301
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !6301
  call void @llvm.dbg.value(metadata i8* %170, metadata !6061, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8* %170, metadata !6061, metadata !DIExpression()), !dbg !6187
  %171 = inttoptr i32 %168 to double*, !dbg !6301
  %172 = load double, double* %171, align 8, !dbg !6301
  store double %172, double* %19, align 8, !dbg !6301
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !6305
  call void @llvm.dbg.value(metadata i8* %174, metadata !6061, metadata !DIExpression()), !dbg !6187
  %175 = bitcast i8* %77 to i8**, !dbg !6305
  %176 = load i8*, i8** %175, align 4, !dbg !6305
  store i8* %176, i8** %18, align 8, !dbg !6308
  br label %177, !dbg !6309

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !6201
  call void @llvm.dbg.value(metadata i8* %178, metadata !6061, metadata !DIExpression()), !dbg !6187
  %179 = and i24 %75, 3, !dbg !6310
  %180 = icmp eq i24 %179, 0, !dbg !6310
  br i1 %180, label %185, label %181, !dbg !6310

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #27, !dbg !6311
  call void @llvm.dbg.value(metadata i32 %182, metadata !6136, metadata !DIExpression()), !dbg !6312
  %183 = icmp slt i32 %182, 0, !dbg !6313
  %184 = add i32 %182, %29, !dbg !6311
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !6315
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !6316

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !6317
  call void @llvm.dbg.value(metadata i32 %188, metadata !6140, metadata !DIExpression()), !dbg !6318
  %189 = icmp slt i32 %188, 0, !dbg !6319
  %190 = add i32 %29, 1, !dbg !6317
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !6321
  call void @llvm.dbg.value(metadata i8* %192, metadata !6128, metadata !DIExpression()), !dbg !6201
  %193 = icmp sgt i32 %76, -1, !dbg !6322
  br i1 %193, label %194, label %196, !dbg !6324

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !6325
  call void @llvm.dbg.value(metadata i32 %195, metadata !6143, metadata !DIExpression()), !dbg !6327
  br label %241, !dbg !6328

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !6329
  call void @llvm.dbg.value(metadata i32 %197, metadata !6143, metadata !DIExpression()), !dbg !6327
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !6128, metadata !DIExpression()), !dbg !6201
  %199 = load i64, i64* %20, align 8, !dbg !6331
  %200 = trunc i64 %199 to i8, !dbg !6332
  store i8 %200, i8* %10, align 1, !dbg !6333
  call void @llvm.dbg.value(metadata i8* %23, metadata !6129, metadata !DIExpression()), !dbg !6201
  br label %245, !dbg !6334

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !6335
  %203 = icmp eq i24 %202, 0, !dbg !6335
  %204 = trunc i24 %75 to i8, !dbg !6337
  %205 = shl i8 %204, 1, !dbg !6337
  %206 = and i8 %205, 32, !dbg !6337
  %207 = select i1 %203, i8 %206, i8 43, !dbg !6337
  call void @llvm.dbg.value(metadata i8 %207, metadata !6130, metadata !DIExpression()), !dbg !6201
  %208 = load i64, i64* %20, align 8, !dbg !6338
  call void @llvm.dbg.value(metadata i64 %208, metadata !6068, metadata !DIExpression()), !dbg !6187
  %209 = icmp slt i64 %208, 0, !dbg !6339
  br i1 %209, label %210, label %212, !dbg !6341

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !6130, metadata !DIExpression()), !dbg !6201
  %211 = sub nsw i64 0, %208, !dbg !6342
  store i64 %211, i64* %20, align 8, !dbg !6344
  br label %212, !dbg !6345

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !6201
  call void @llvm.dbg.value(metadata i8 %213, metadata !6130, metadata !DIExpression()), !dbg !6201
  %214 = load i64, i64* %20, align 8, !dbg !6346
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6347
  call void @llvm.dbg.value(metadata i8* %215, metadata !6128, metadata !DIExpression()), !dbg !6201
  br label %216, !dbg !6348

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !6349
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !6350
  call void @llvm.dbg.value(metadata i8* %218, metadata !6128, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8 %217, metadata !6130, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.label(metadata !6186), !dbg !6351
  %219 = icmp sgt i32 %76, -1, !dbg !6352
  br i1 %219, label %222, label %220, !dbg !6353

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !6354
  br label %245, !dbg !6353

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !6356
  %224 = sub i32 %22, %223, !dbg !6356
  call void @llvm.dbg.value(metadata i32 %224, metadata !6145, metadata !DIExpression()), !dbg !6357
  %225 = load i24, i24* %15, align 8, !dbg !6358
  %226 = and i24 %225, -65, !dbg !6358
  store i24 %226, i24* %15, align 8, !dbg !6358
  %227 = icmp ugt i32 %76, %224, !dbg !6359
  br i1 %227, label %228, label %245, !dbg !6361

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !6362
  store i32 %229, i32* %16, align 4, !dbg !6364
  br label %245, !dbg !6365

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !6366
  %232 = icmp eq i8* %231, null, !dbg !6368
  br i1 %232, label %245, label %233, !dbg !6369

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !6370
  %235 = zext i32 %234 to i64, !dbg !6370
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #27, !dbg !6372
  call void @llvm.dbg.value(metadata i8* %236, metadata !6128, metadata !DIExpression()), !dbg !6201
  %237 = load i24, i24* %15, align 8, !dbg !6373
  %238 = or i24 %237, 1048576, !dbg !6373
  store i24 %238, i24* %15, align 8, !dbg !6373
  store i8 120, i8* %21, align 1, !dbg !6374
  br label %216, !dbg !6375

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !6376
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #27, !dbg !6379
  br label %363, !dbg !6380

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !6381
  call void @llvm.dbg.value(metadata i32 %242, metadata !6143, metadata !DIExpression()), !dbg !6327
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !6382
  call void @llvm.dbg.value(metadata i32 -1, metadata !6127, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 %29, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8* %192, metadata !6128, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8* %243, metadata !6129, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8 0, metadata !6130, metadata !DIExpression()), !dbg !6201
  %244 = icmp eq i8* %192, null, !dbg !6383
  br i1 %244, label %363, label %245, !dbg !6385, !llvm.loop !6197

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !6354
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6201
  call void @llvm.dbg.value(metadata i32 0, metadata !6149, metadata !DIExpression()), !dbg !6201
  %250 = zext i8 %249 to i32, !dbg !6386
  %251 = icmp eq i8 %249, 0, !dbg !6388
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  call void @llvm.dbg.value(metadata i32 undef, metadata !6148, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  call void @llvm.dbg.value(metadata i32 undef, metadata !6148, metadata !DIExpression()), !dbg !6201
  %252 = icmp sgt i32 %58, 0, !dbg !6389
  br i1 %252, label %253, label %302, !dbg !6390

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !6354
  %255 = icmp eq i24 %254, 0, !dbg !6354
  %256 = ptrtoint i8* %248 to i32, !dbg !6391
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  %257 = ptrtoint i8* %247 to i32, !dbg !6391
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  %258 = xor i1 %251, true, !dbg !6392
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  %259 = sext i1 %258 to i32, !dbg !6392
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  %260 = lshr i24 %246, 19, !dbg !6393
  %261 = and i24 %260, 1, !dbg !6393
  %262 = select i1 %255, i24 %261, i24 2, !dbg !6393
  %263 = zext i24 %262 to i32, !dbg !6393
  %264 = add i32 %257, %259, !dbg !6393
  %265 = add i32 %256, %263, !dbg !6393
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  %266 = and i24 %246, 4194304, !dbg !6394
  %267 = icmp eq i24 %266, 0, !dbg !6394
  %268 = load i32, i32* %16, align 4, !dbg !6396
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !6148, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6201
  call void @llvm.dbg.value(metadata i32 undef, metadata !6148, metadata !DIExpression()), !dbg !6201
  %269 = load i32, i32* %17, align 8, !dbg !6397
  %270 = select i1 %267, i32 0, i32 %269, !dbg !6397
  call void @llvm.dbg.value(metadata i32 undef, metadata !6148, metadata !DIExpression()), !dbg !6201
  %271 = add i32 %264, %58, !dbg !6397
  %272 = add i32 %265, %268, !dbg !6397
  %273 = add i32 %272, %270, !dbg !6398
  %274 = sub i32 %271, %273, !dbg !6398
  call void @llvm.dbg.value(metadata i32 %274, metadata !6126, metadata !DIExpression()), !dbg !6201
  %275 = and i24 %246, 4, !dbg !6399
  %276 = icmp eq i24 %275, 0, !dbg !6399
  br i1 %276, label %277, label %302, !dbg !6400

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !6150, metadata !DIExpression()), !dbg !6401
  %278 = and i24 %246, 64, !dbg !6402
  %279 = icmp eq i24 %278, 0, !dbg !6402
  %280 = select i1 %279, i1 true, i1 %251, !dbg !6403
  %281 = select i1 %279, i8 %249, i8 0, !dbg !6403
  %282 = select i1 %279, i32 32, i32 48, !dbg !6403
  br i1 %280, label %287, label %283, !dbg !6403

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !6404
  call void @llvm.dbg.value(metadata i32 %284, metadata !6155, metadata !DIExpression()), !dbg !6405
  %285 = icmp slt i32 %284, 0, !dbg !6406
  %286 = add i32 %29, 1, !dbg !6404
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !6201
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !6191
  call void @llvm.dbg.value(metadata i32 %290, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i8 undef, metadata !6150, metadata !DIExpression()), !dbg !6401
  call void @llvm.dbg.value(metadata i8 %288, metadata !6130, metadata !DIExpression()), !dbg !6201
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !6408
  %292 = add i32 %291, -1, !dbg !6408
  br label %293, !dbg !6408

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !6409
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !6191
  call void @llvm.dbg.value(metadata i32 %295, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %294, metadata !6126, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i32 %294, metadata !6126, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6201
  %296 = icmp sgt i32 %294, 0, !dbg !6410
  br i1 %296, label %297, label %302, !dbg !6408

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !6411
  call void @llvm.dbg.value(metadata i32 %298, metadata !6126, metadata !DIExpression()), !dbg !6201
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !6412
  call void @llvm.dbg.value(metadata i32 %299, metadata !6161, metadata !DIExpression()), !dbg !6413
  %300 = icmp slt i32 %299, 0, !dbg !6414
  %301 = add i32 %295, 1, !dbg !6412
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %300, label %361, label %293, !llvm.loop !6416

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !6201
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !6201
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !6191
  call void @llvm.dbg.value(metadata i32 %305, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %304, metadata !6126, metadata !DIExpression()), !dbg !6201
  call void @llvm.dbg.value(metadata i8 %303, metadata !6130, metadata !DIExpression()), !dbg !6201
  %306 = icmp eq i8 %303, 0, !dbg !6418
  br i1 %306, label %312, label %307, !dbg !6419

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !6420
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !6421
  call void @llvm.dbg.value(metadata i32 %309, metadata !6164, metadata !DIExpression()), !dbg !6422
  %310 = icmp slt i32 %309, 0, !dbg !6423
  %311 = add i32 %305, 1, !dbg !6421
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !6191
  call void @llvm.dbg.value(metadata i32 %313, metadata !6067, metadata !DIExpression()), !dbg !6187
  %314 = lshr i24 %246, 20, !dbg !6425
  %315 = lshr i24 %246, 19, !dbg !6426
  %316 = or i24 %314, %315, !dbg !6427
  %317 = and i24 %316, 1, !dbg !6427
  %318 = icmp eq i24 %317, 0, !dbg !6427
  br i1 %318, label %323, label %319, !dbg !6428

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6429
  call void @llvm.dbg.value(metadata i32 %320, metadata !6168, metadata !DIExpression()), !dbg !6430
  %321 = icmp slt i32 %320, 0, !dbg !6431
  %322 = add i32 %313, 1, !dbg !6429
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !6191
  call void @llvm.dbg.value(metadata i32 %324, metadata !6067, metadata !DIExpression()), !dbg !6187
  %325 = and i24 %246, 1048576, !dbg !6433
  %326 = icmp eq i24 %325, 0, !dbg !6433
  br i1 %326, label %333, label %327, !dbg !6434

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !6435
  %329 = zext i8 %328 to i32, !dbg !6435
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !6435
  call void @llvm.dbg.value(metadata i32 %330, metadata !6174, metadata !DIExpression()), !dbg !6436
  %331 = icmp slt i32 %330, 0, !dbg !6437
  %332 = add i32 %324, 1, !dbg !6435
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !6191
  call void @llvm.dbg.value(metadata i32 %334, metadata !6067, metadata !DIExpression()), !dbg !6187
  %335 = load i32, i32* %16, align 4, !dbg !6439
  call void @llvm.dbg.value(metadata i32 %335, metadata !6149, metadata !DIExpression()), !dbg !6201
  br label %336, !dbg !6440

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !6441
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !6191
  call void @llvm.dbg.value(metadata i32 %338, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %337, metadata !6149, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6201
  %339 = icmp sgt i32 %337, 0, !dbg !6442
  br i1 %339, label %340, label %345, !dbg !6440

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !6443
  call void @llvm.dbg.value(metadata i32 %341, metadata !6149, metadata !DIExpression()), !dbg !6201
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !6444
  call void @llvm.dbg.value(metadata i32 %342, metadata !6178, metadata !DIExpression()), !dbg !6445
  %343 = icmp slt i32 %342, 0, !dbg !6446
  %344 = add i32 %338, 1, !dbg !6444
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %343, label %361, label %336, !llvm.loop !6448

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #27, !dbg !6450
  call void @llvm.dbg.value(metadata i32 %346, metadata !6181, metadata !DIExpression()), !dbg !6451
  %347 = icmp slt i32 %346, 0, !dbg !6452
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !6450
  call void @llvm.dbg.value(metadata i32 %349, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %304, metadata !6126, metadata !DIExpression()), !dbg !6201
  %350 = icmp sgt i32 %304, 0, !dbg !6454
  br i1 %350, label %351, label %363, !dbg !6455

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !6455
  %353 = add i32 %352, %338, !dbg !6455
  br label %354, !dbg !6455

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %355, metadata !6126, metadata !DIExpression()), !dbg !6201
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !6456
  call void @llvm.dbg.value(metadata i32 %356, metadata !6183, metadata !DIExpression()), !dbg !6457
  %357 = icmp slt i32 %356, 0, !dbg !6458
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !6460
  call void @llvm.dbg.value(metadata i32 undef, metadata !6067, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6187
  call void @llvm.dbg.value(metadata i32 %359, metadata !6126, metadata !DIExpression()), !dbg !6201
  %360 = icmp sgt i32 %355, 1, !dbg !6454
  br i1 %360, label %354, label %363, !dbg !6455, !llvm.loop !6461

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6198
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !6191
  call void @llvm.dbg.value(metadata i32 %364, metadata !6067, metadata !DIExpression()), !dbg !6187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !6198
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !6187
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !6463
  ret i32 %366, !dbg !6463
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #14

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6464 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6468, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.value(metadata i8* %1, metadata !6469, metadata !DIExpression()), !dbg !6470
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !6471
  store i24 0, i24* %3, align 4, !dbg !6471
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6471
  store i8 0, i8* %4, align 1, !dbg !6471
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6471
  store i32 0, i32* %5, align 4, !dbg !6471
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6471
  store i32 0, i32* %6, align 4, !dbg !6471
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6472
  call void @llvm.dbg.value(metadata i8* %7, metadata !6469, metadata !DIExpression()), !dbg !6470
  %8 = load i8, i8* %7, align 1, !dbg !6473
  %9 = icmp eq i8 %8, 37, !dbg !6475
  br i1 %9, label %10, label %12, !dbg !6476

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6477
  call void @llvm.dbg.value(metadata i8* %11, metadata !6469, metadata !DIExpression()), !dbg !6470
  store i8 37, i8* %4, align 1, !dbg !6479
  br label %18, !dbg !6480

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #27, !dbg !6481
  call void @llvm.dbg.value(metadata i8* %13, metadata !6469, metadata !DIExpression()), !dbg !6470
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #27, !dbg !6482
  call void @llvm.dbg.value(metadata i8* %14, metadata !6469, metadata !DIExpression()), !dbg !6470
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #27, !dbg !6483
  call void @llvm.dbg.value(metadata i8* %15, metadata !6469, metadata !DIExpression()), !dbg !6470
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #27, !dbg !6484
  call void @llvm.dbg.value(metadata i8* %16, metadata !6469, metadata !DIExpression()), !dbg !6470
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #27, !dbg !6485
  call void @llvm.dbg.value(metadata i8* %17, metadata !6469, metadata !DIExpression()), !dbg !6470
  br label %18, !dbg !6486

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !6470
  ret i8* %19, !dbg !6487
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !6488 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !6492, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i8* %1, metadata !6493, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i8* %2, metadata !6494, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i8* %3, metadata !6495, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i32 0, metadata !6496, metadata !DIExpression()), !dbg !6499
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !6500

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !6501
  call void @llvm.dbg.value(metadata i32 %9, metadata !6496, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i8* %8, metadata !6494, metadata !DIExpression()), !dbg !6499
  %10 = icmp ult i8* %8, %3, !dbg !6502
  br i1 %10, label %11, label %13, !dbg !6503

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !6504
  br label %17, !dbg !6503

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !6505

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !6506
  %16 = icmp eq i8 %15, 0, !dbg !6505
  br i1 %16, label %24, label %17, !dbg !6500

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !6504
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6507
  call void @llvm.dbg.value(metadata i8* %19, metadata !6494, metadata !DIExpression()), !dbg !6499
  %20 = zext i8 %18 to i32, !dbg !6508
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !6509
  call void @llvm.dbg.value(metadata i32 %21, metadata !6497, metadata !DIExpression()), !dbg !6510
  %22 = icmp slt i32 %21, 0, !dbg !6511
  %23 = add i32 %9, 1, !dbg !6513
  call void @llvm.dbg.value(metadata i32 undef, metadata !6496, metadata !DIExpression()), !dbg !6499
  br i1 %22, label %24, label %7, !llvm.loop !6514

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !6499
  ret i32 %25, !dbg !6516
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #15 !dbg !6517 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !6521, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !6522, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i8* %2, metadata !6523, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i8* %3, metadata !6524, metadata !DIExpression()), !dbg !6531
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !6532
  %6 = load i8, i8* %5, align 1, !dbg !6532
  %7 = zext i8 %6 to i32, !dbg !6533
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #27, !dbg !6534
  %9 = icmp eq i32 %8, 0, !dbg !6534
  call void @llvm.dbg.value(metadata i1 %9, metadata !6525, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6531
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #27, !dbg !6535
  call void @llvm.dbg.value(metadata i32 %10, metadata !6526, metadata !DIExpression()), !dbg !6531
  %11 = ptrtoint i8* %3 to i32, !dbg !6536
  %12 = ptrtoint i8* %2 to i32, !dbg !6536
  %13 = sub i32 %11, %12, !dbg !6536
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !6537
  call void @llvm.dbg.value(metadata i8* %14, metadata !6528, metadata !DIExpression()), !dbg !6531
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !6538

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !6531
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !6521, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.value(metadata i8* %18, metadata !6528, metadata !DIExpression()), !dbg !6531
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !6539
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !6540
  call void @llvm.dbg.value(metadata i32 %25, metadata !6529, metadata !DIExpression()), !dbg !6541
  %26 = icmp ult i32 %25, 10, !dbg !6542
  %27 = select i1 %26, i32 48, i32 %16, !dbg !6543
  %28 = add i32 %27, %25, !dbg !6541
  %29 = trunc i32 %28 to i8, !dbg !6543
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !6544
  call void @llvm.dbg.value(metadata i8* %30, metadata !6528, metadata !DIExpression()), !dbg !6531
  store i8 %29, i8* %30, align 1, !dbg !6545
  call void @llvm.dbg.value(metadata i64 %22, metadata !6521, metadata !DIExpression()), !dbg !6531
  %31 = icmp uge i64 %19, %15, !dbg !6546
  %32 = icmp ugt i8* %30, %2, !dbg !6547
  %33 = and i1 %31, %32, !dbg !6547
  br i1 %33, label %17, label %34, !dbg !6548, !llvm.loop !6549

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !6551
  %36 = load i24, i24* %35, align 4, !dbg !6551
  %37 = and i24 %36, 32, !dbg !6551
  %38 = icmp eq i24 %37, 0, !dbg !6551
  br i1 %38, label %44, label %39, !dbg !6553

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !6554

40:                                               ; preds = %39
  br label %41, !dbg !6556

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !6560
  store i24 %43, i24* %35, align 4, !dbg !6560
  br label %44, !dbg !6561

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !6561
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !6562 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6568, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i8* %1, metadata !6569, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i32 %2, metadata !6570, metadata !DIExpression()), !dbg !6571
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6572
  %5 = load i24, i24* %4, align 4, !dbg !6572
  %6 = lshr i24 %5, 11, !dbg !6572
  %7 = and i24 %6, 15, !dbg !6572
  %8 = zext i24 %7 to i32, !dbg !6572
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !6573

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !6574
  store i32 %2, i32* %10, align 4, !dbg !6576
  br label %28, !dbg !6577

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !6578
  store i8 %12, i8* %1, align 1, !dbg !6579
  br label %28, !dbg !6580

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !6581
  %15 = bitcast i8* %1 to i16*, !dbg !6582
  store i16 %14, i16* %15, align 2, !dbg !6583
  br label %28, !dbg !6584

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !6585
  store i32 %2, i32* %17, align 4, !dbg !6586
  br label %28, !dbg !6587

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !6588
  %20 = bitcast i8* %1 to i64*, !dbg !6589
  store i64 %19, i64* %20, align 8, !dbg !6590
  br label %28, !dbg !6591

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !6592
  %23 = bitcast i8* %1 to i64*, !dbg !6593
  store i64 %22, i64* %23, align 8, !dbg !6594
  br label %28, !dbg !6595

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !6596
  store i32 %2, i32* %25, align 4, !dbg !6597
  br label %28, !dbg !6598

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !6599
  store i32 %2, i32* %27, align 4, !dbg !6600
  br label %28, !dbg !6601

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !6602
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !6603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6606, metadata !DIExpression()), !dbg !6607
  %2 = add i32 %0, -65, !dbg !6608
  %3 = icmp ult i32 %2, 26, !dbg !6609
  %4 = zext i1 %3 to i32, !dbg !6609
  ret i32 %4, !dbg !6610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !6611 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6615, metadata !DIExpression()), !dbg !6616
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !6617

2:                                                ; preds = %1
  br label %4, !dbg !6618

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !6620

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !6621
  ret i32 %5, !dbg !6622
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #15 !dbg !6623 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6625, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i8* %1, metadata !6626, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i8 1, metadata !6627, metadata !DIExpression()), !dbg !6628
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !6629

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !6627, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i8* %5, metadata !6626, metadata !DIExpression()), !dbg !6628
  %6 = load i8, i8* %5, align 1, !dbg !6630
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !6632

7:                                                ; preds = %4
  br label %11, !dbg !6633

8:                                                ; preds = %4
  br label %11, !dbg !6635

9:                                                ; preds = %4
  br label %11, !dbg !6636

10:                                               ; preds = %4
  br label %11, !dbg !6637

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !6638
  %14 = or i24 %13, %12, !dbg !6638
  store i24 %14, i24* %3, align 4, !dbg !6638
  call void @llvm.dbg.value(metadata i8 poison, metadata !6627, metadata !DIExpression()), !dbg !6628
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !6626, metadata !DIExpression()), !dbg !6628
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !6627, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.value(metadata i8* %15, metadata !6626, metadata !DIExpression()), !dbg !6628
  %17 = load i24, i24* %3, align 4, !dbg !6639
  %18 = and i24 %17, 68, !dbg !6641
  %19 = icmp eq i24 %18, 68, !dbg !6641
  br i1 %19, label %20, label %22, !dbg !6641

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !6642
  store i24 %21, i24* %3, align 4, !dbg !6642
  br label %22, !dbg !6644

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !6645
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6646 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6648, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i8* %1, metadata !6649, metadata !DIExpression()), !dbg !6652
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !6653
  %5 = load i24, i24* %4, align 4, !dbg !6654
  %6 = or i24 %5, 128, !dbg !6654
  store i24 %6, i24* %4, align 4, !dbg !6654
  call void @llvm.dbg.value(metadata i8* %1, metadata !6649, metadata !DIExpression()), !dbg !6652
  %7 = load i8, i8* %1, align 1, !dbg !6655
  %8 = icmp eq i8 %7, 42, !dbg !6657
  br i1 %8, label %9, label %12, !dbg !6658

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !6659
  store i24 %10, i24* %4, align 4, !dbg !6659
  call void @llvm.dbg.value(metadata i8* %1, metadata !6649, metadata !DIExpression()), !dbg !6652
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6661
  call void @llvm.dbg.value(metadata i8* %11, metadata !6649, metadata !DIExpression()), !dbg !6652
  store i8* %11, i8** %3, align 4, !dbg !6661
  br label %29, !dbg !6662

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6650, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.value(metadata i8** %3, metadata !6649, metadata !DIExpression(DW_OP_deref)), !dbg !6652
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6663
  call void @llvm.dbg.value(metadata i32 %13, metadata !6651, metadata !DIExpression()), !dbg !6652
  %14 = load i8*, i8** %3, align 4, !dbg !6664
  call void @llvm.dbg.value(metadata i8* %14, metadata !6649, metadata !DIExpression()), !dbg !6652
  %15 = icmp eq i8* %14, %1, !dbg !6666
  br i1 %15, label %29, label %16, !dbg !6667

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6668
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6670
  store i32 %13, i32* %18, align 4, !dbg !6671
  %19 = lshr i32 %13, 31, !dbg !6672
  %20 = lshr i24 %17, 1, !dbg !6673
  %21 = and i24 %20, 1, !dbg !6673
  %22 = zext i24 %21 to i32, !dbg !6673
  %23 = or i32 %19, %22, !dbg !6673
  %24 = trunc i32 %23 to i24, !dbg !6673
  %25 = shl nuw nsw i24 %24, 1, !dbg !6673
  %26 = and i24 %17, -131, !dbg !6673
  %27 = or i24 %26, 128, !dbg !6673
  %28 = or i24 %25, %27, !dbg !6673
  store i24 %28, i24* %4, align 4, !dbg !6673
  br label %29, !dbg !6674

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !6652
  ret i8* %30, !dbg !6675
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #15 !dbg !6676 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6678, metadata !DIExpression()), !dbg !6681
  call void @llvm.dbg.value(metadata i8* %1, metadata !6679, metadata !DIExpression()), !dbg !6681
  %4 = load i8, i8* %1, align 1, !dbg !6682
  %5 = icmp eq i8 %4, 46, !dbg !6683
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6684
  %7 = load i24, i24* %6, align 4, !dbg !6685
  %8 = select i1 %5, i24 512, i24 0, !dbg !6685
  %9 = and i24 %7, -513, !dbg !6685
  %10 = or i24 %9, %8, !dbg !6685
  store i24 %10, i24* %6, align 4, !dbg !6685
  br i1 %5, label %11, label %32, !dbg !6686

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6679, metadata !DIExpression()), !dbg !6681
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6687
  call void @llvm.dbg.value(metadata i8* %12, metadata !6679, metadata !DIExpression()), !dbg !6681
  store i8* %12, i8** %3, align 4, !dbg !6687
  %13 = load i8, i8* %12, align 1, !dbg !6688
  %14 = icmp eq i8 %13, 42, !dbg !6690
  br i1 %14, label %15, label %18, !dbg !6691

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6692
  store i24 %16, i24* %6, align 4, !dbg !6692
  call void @llvm.dbg.value(metadata i8* %12, metadata !6679, metadata !DIExpression()), !dbg !6681
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6694
  call void @llvm.dbg.value(metadata i8* %17, metadata !6679, metadata !DIExpression()), !dbg !6681
  store i8* %17, i8** %3, align 4, !dbg !6694
  br label %32, !dbg !6695

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6679, metadata !DIExpression(DW_OP_deref)), !dbg !6681
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #27, !dbg !6696
  call void @llvm.dbg.value(metadata i32 %19, metadata !6680, metadata !DIExpression()), !dbg !6681
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6697
  store i32 %19, i32* %20, align 4, !dbg !6698
  %21 = lshr i32 %19, 31, !dbg !6699
  %22 = load i24, i24* %6, align 4, !dbg !6700
  %23 = lshr i24 %22, 1, !dbg !6700
  %24 = and i24 %23, 1, !dbg !6700
  %25 = zext i24 %24 to i32, !dbg !6700
  %26 = or i32 %21, %25, !dbg !6700
  %27 = trunc i32 %26 to i24, !dbg !6700
  %28 = shl nuw nsw i24 %27, 1, !dbg !6700
  %29 = and i24 %22, -3, !dbg !6700
  %30 = or i24 %28, %29, !dbg !6700
  store i24 %30, i24* %6, align 4, !dbg !6700
  %31 = load i8*, i8** %3, align 4, !dbg !6701
  call void @llvm.dbg.value(metadata i8* %31, metadata !6679, metadata !DIExpression()), !dbg !6681
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6681
  ret i8* %33, !dbg !6702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6703 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6705, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata i8* %1, metadata !6706, metadata !DIExpression()), !dbg !6707
  %3 = load i8, i8* %1, align 1, !dbg !6708
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6709

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6710
  call void @llvm.dbg.value(metadata i8* %5, metadata !6706, metadata !DIExpression()), !dbg !6707
  %6 = load i8, i8* %5, align 1, !dbg !6713
  %7 = icmp eq i8 %6, 104, !dbg !6714
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6715
  %9 = load i24, i24* %8, align 4, !dbg !6715
  %10 = and i24 %9, -30721, !dbg !6715
  br i1 %7, label %11, label %14, !dbg !6716

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6717
  store i24 %12, i24* %8, align 4, !dbg !6717
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6719
  call void @llvm.dbg.value(metadata i8* %13, metadata !6706, metadata !DIExpression()), !dbg !6707
  br label %56, !dbg !6720

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6721
  store i24 %15, i24* %8, align 4, !dbg !6721
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6723
  call void @llvm.dbg.value(metadata i8* %17, metadata !6706, metadata !DIExpression()), !dbg !6707
  %18 = load i8, i8* %17, align 1, !dbg !6725
  %19 = icmp eq i8 %18, 108, !dbg !6726
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6727
  %21 = load i24, i24* %20, align 4, !dbg !6727
  %22 = and i24 %21, -30721, !dbg !6727
  br i1 %19, label %23, label %26, !dbg !6728

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6729
  store i24 %24, i24* %20, align 4, !dbg !6729
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6731
  call void @llvm.dbg.value(metadata i8* %25, metadata !6706, metadata !DIExpression()), !dbg !6707
  br label %56, !dbg !6732

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6733
  store i24 %27, i24* %20, align 4, !dbg !6733
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6735
  %30 = load i24, i24* %29, align 4, !dbg !6736
  %31 = and i24 %30, -30721, !dbg !6736
  %32 = or i24 %31, 10240, !dbg !6736
  store i24 %32, i24* %29, align 4, !dbg !6736
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6737
  call void @llvm.dbg.value(metadata i8* %33, metadata !6706, metadata !DIExpression()), !dbg !6707
  br label %56, !dbg !6738

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6739
  %36 = load i24, i24* %35, align 4, !dbg !6740
  %37 = and i24 %36, -30721, !dbg !6740
  %38 = or i24 %37, 12288, !dbg !6740
  store i24 %38, i24* %35, align 4, !dbg !6740
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6741
  call void @llvm.dbg.value(metadata i8* %39, metadata !6706, metadata !DIExpression()), !dbg !6707
  br label %56, !dbg !6742

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6743
  %42 = load i24, i24* %41, align 4, !dbg !6744
  %43 = and i24 %42, -30721, !dbg !6744
  %44 = or i24 %43, 14336, !dbg !6744
  store i24 %44, i24* %41, align 4, !dbg !6744
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6745
  call void @llvm.dbg.value(metadata i8* %45, metadata !6706, metadata !DIExpression()), !dbg !6707
  br label %56, !dbg !6746

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6747
  %48 = load i24, i24* %47, align 4, !dbg !6748
  %49 = and i24 %48, -30723, !dbg !6748
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6749
  call void @llvm.dbg.value(metadata i8* %50, metadata !6706, metadata !DIExpression()), !dbg !6707
  %51 = or i24 %49, 16386, !dbg !6750
  store i24 %51, i24* %47, align 4, !dbg !6750
  br label %56, !dbg !6751

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6752
  %54 = load i24, i24* %53, align 4, !dbg !6753
  %55 = and i24 %54, -30721, !dbg !6753
  store i24 %55, i24* %53, align 4, !dbg !6753
  br label %56, !dbg !6754

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6706, metadata !DIExpression()), !dbg !6707
  ret i8* %57, !dbg !6755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !6756 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6758, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata i8* %1, metadata !6759, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata i8 0, metadata !6760, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata i8* %1, metadata !6759, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6763
  %3 = load i8, i8* %1, align 1, !dbg !6764
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6765
  store i8 %3, i8* %4, align 1, !dbg !6766
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6767

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6768

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6769
  %9 = load i24, i24* %8, align 4, !dbg !6769
  %10 = and i24 %9, -458753, !dbg !6769
  %11 = or i24 %10, %7, !dbg !6769
  call void @llvm.dbg.label(metadata !6761), !dbg !6770
  %12 = and i24 %9, 30720, !dbg !6771
  %13 = icmp eq i24 %12, 16384, !dbg !6771
  %14 = zext i1 %13 to i24, !dbg !6773
  %15 = or i24 %11, %14, !dbg !6773
  %16 = icmp eq i8 %3, 99, !dbg !6774
  br i1 %16, label %17, label %43, !dbg !6776

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6777
  %19 = icmp ne i24 %18, 0, !dbg !6777
  call void @llvm.dbg.value(metadata i1 %19, metadata !6760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6763
  br label %43, !dbg !6779

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6780
  %22 = load i24, i24* %21, align 4, !dbg !6781
  %23 = and i24 %22, -458753, !dbg !6781
  %24 = or i24 %23, 262144, !dbg !6781
  call void @llvm.dbg.value(metadata i8 1, metadata !6760, metadata !DIExpression()), !dbg !6763
  br label %43, !dbg !6782

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6785
  %27 = load i24, i24* %26, align 4, !dbg !6786
  %28 = and i24 %27, -458753, !dbg !6786
  %29 = or i24 %28, 196608, !dbg !6786
  %30 = and i24 %27, 30720, !dbg !6787
  %31 = icmp eq i24 %30, 16384, !dbg !6787
  br label %43, !dbg !6789

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6790
  %34 = load i24, i24* %33, align 4, !dbg !6791
  %35 = and i24 %34, -458753, !dbg !6791
  %36 = or i24 %35, 196608, !dbg !6791
  %37 = and i24 %34, 30720, !dbg !6792
  %38 = icmp ne i24 %37, 0, !dbg !6792
  br label %43, !dbg !6794

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6795
  %41 = load i24, i24* %40, align 4, !dbg !6796
  %42 = or i24 %41, 1, !dbg !6796
  br label %43, !dbg !6797

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6798
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6799
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6800
  call void @llvm.dbg.value(metadata i8* %48, metadata !6759, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata i8 poison, metadata !6760, metadata !DIExpression()), !dbg !6763
  %49 = lshr i24 %44, 1, !dbg !6798
  %50 = and i24 %49, 1, !dbg !6798
  %51 = zext i24 %50 to i32, !dbg !6798
  %52 = or i32 %51, %47, !dbg !6798
  %53 = trunc i32 %52 to i24, !dbg !6798
  %54 = shl nuw nsw i24 %53, 1, !dbg !6798
  %55 = and i24 %44, -3, !dbg !6798
  %56 = or i24 %54, %55, !dbg !6798
  store i24 %56, i24* %46, align 4, !dbg !6798
  ret i8* %48, !dbg !6801
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #15 !dbg !6802 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6806, metadata !DIExpression()), !dbg !6809
  %2 = load i8*, i8** %0, align 4, !dbg !6810
  call void @llvm.dbg.value(metadata i8* %2, metadata !6807, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i32 0, metadata !6808, metadata !DIExpression()), !dbg !6809
  %3 = load i8, i8* %2, align 1, !dbg !6811
  %4 = zext i8 %3 to i32, !dbg !6812
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #27, !dbg !6813
  %6 = icmp eq i32 %5, 0, !dbg !6814
  br i1 %6, label %19, label %7, !dbg !6814

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6808, metadata !DIExpression()), !dbg !6809
  call void @llvm.dbg.value(metadata i8* %10, metadata !6807, metadata !DIExpression()), !dbg !6809
  %11 = mul i32 %9, 10, !dbg !6815
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6817
  call void @llvm.dbg.value(metadata i8* %12, metadata !6807, metadata !DIExpression()), !dbg !6809
  %13 = add i32 %11, -48, !dbg !6818
  %14 = add i32 %13, %8, !dbg !6819
  call void @llvm.dbg.value(metadata i32 %14, metadata !6808, metadata !DIExpression()), !dbg !6809
  %15 = load i8, i8* %12, align 1, !dbg !6811
  %16 = zext i8 %15 to i32, !dbg !6812
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #27, !dbg !6813
  %18 = icmp eq i32 %17, 0, !dbg !6814
  br i1 %18, label %19, label %7, !dbg !6814, !llvm.loop !6820

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6809
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6809
  store i8* %20, i8** %0, align 4, !dbg !6822
  ret i32 %21, !dbg !6823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !6824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6826, metadata !DIExpression()), !dbg !6827
  %2 = add i32 %0, -48, !dbg !6828
  %3 = icmp ult i32 %2, 10, !dbg !6829
  %4 = zext i1 %3 to i32, !dbg !6829
  ret i32 %4, !dbg !6830
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !6831 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6836, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 %1, metadata !6837, metadata !DIExpression()), !dbg !6838
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !6839, !srcloc !6841
  ret void, !dbg !6842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6843 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6845, metadata !DIExpression()), !dbg !6853
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6854
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6854
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6846, metadata !DIExpression()), !dbg !6855
  call void @llvm.va_start(i8* nonnull %3), !dbg !6856
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6857
  %5 = load i32, i32* %4, align 4, !dbg !6857
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6857
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !6857
  call void @llvm.va_end(i8* nonnull %3), !dbg !6858
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6859
  ret void, !dbg !6859
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6860 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6862, !srcloc !6863
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6864, !srcloc !6865
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6866, !srcloc !6867
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6868, !srcloc !6869
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6872, !srcloc !6873
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6874, !srcloc !6875
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6876, !srcloc !6877
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6878, !srcloc !6879
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6880, !srcloc !6881
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6882, !srcloc !6883
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6884, !srcloc !6885
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6886, !srcloc !6887
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,1024\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6888, !srcloc !6889
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6890, !srcloc !6891
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6892, !srcloc !6893
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6894, !srcloc !6895
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6896, !srcloc !6897
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6898, !srcloc !6899
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6900, !srcloc !6901
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6902, !srcloc !6903
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6904, !srcloc !6905
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6906, !srcloc !6907
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6908, !srcloc !6909
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6910, !srcloc !6911
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6912, !srcloc !6913
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6914, !srcloc !6915
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #25, !dbg !6916, !srcloc !6917
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6918, !srcloc !6919
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6920, !srcloc !6921
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6922, !srcloc !6923
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #25, !dbg !6924, !srcloc !6925
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6926, !srcloc !6927
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #25, !dbg !6928, !srcloc !6929
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #25, !dbg !6930, !srcloc !6931
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #25, !dbg !6932, !srcloc !6933
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6934, !srcloc !6935
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #25, !dbg !6936, !srcloc !6937
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #25, !dbg !6938, !srcloc !6939
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #25, !dbg !6940, !srcloc !6941
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6942, !srcloc !6943
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6944, !srcloc !6945
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6946, !srcloc !6947
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6948, !srcloc !6949
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6950, !srcloc !6951
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6952, !srcloc !6953
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6954, !srcloc !6955
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6956, !srcloc !6957
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6958, !srcloc !6959
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6960, !srcloc !6961
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6962, !srcloc !6963
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6964, !srcloc !6965
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6966, !srcloc !6967
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6968, !srcloc !6969
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6970, !srcloc !6971
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6972, !srcloc !6973
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6974, !srcloc !6975
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6976, !srcloc !6977
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6978, !srcloc !6979
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6980, !srcloc !6981
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6982, !srcloc !6983
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6984, !srcloc !6985
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6986, !srcloc !6987
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6988, !srcloc !6989
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6990, !srcloc !6991
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6992, !srcloc !6993
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6994, !srcloc !6995
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6996, !srcloc !6997
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6998, !srcloc !6999
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !7000, !srcloc !7001
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !7002, !srcloc !7003
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !7004, !srcloc !7005
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !7006, !srcloc !7007
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !7008, !srcloc !7009
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !7010, !srcloc !7011
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !7012, !srcloc !7013
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !7014, !srcloc !7015
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !7016, !srcloc !7017
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !7018, !srcloc !7019
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !7020, !srcloc !7021
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !7022, !srcloc !7023
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !7024, !srcloc !7025
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !7026, !srcloc !7027
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !7028, !srcloc !7029
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !7030, !srcloc !7031
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !7032, !srcloc !7033
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !7034, !srcloc !7035
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !7036, !srcloc !7037
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #25, !dbg !7038, !srcloc !7039
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #25, !dbg !7040, !srcloc !7041
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !7042, !srcloc !7043
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !7044, !srcloc !7045
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !7046, !srcloc !7047
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !7048, !srcloc !7049
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #25, !dbg !7050, !srcloc !7051
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7052, !srcloc !7053
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !7054, !srcloc !7055
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !7056, !srcloc !7057
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !7058, !srcloc !7059
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !7060, !srcloc !7061
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !7062, !srcloc !7063
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !7064, !srcloc !7065
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !7066, !srcloc !7067
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !7068, !srcloc !7069
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !7070, !srcloc !7071
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !7072, !srcloc !7073
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !7074, !srcloc !7075
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !7076, !srcloc !7077
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #25, !dbg !7078, !srcloc !7079
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !7080, !srcloc !7081
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !7082, !srcloc !7083
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !7084, !srcloc !7085
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !7086, !srcloc !7087
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !7088, !srcloc !7089
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !7090, !srcloc !7091
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !7092, !srcloc !7093
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !7094, !srcloc !7095
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !7096, !srcloc !7097
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !7098, !srcloc !7099
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !7100, !srcloc !7101
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !7102, !srcloc !7103
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !7104, !srcloc !7105
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !7106, !srcloc !7107
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !7108, !srcloc !7109
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !7110, !srcloc !7111
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !7112, !srcloc !7113
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !7114, !srcloc !7115
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !7116, !srcloc !7117
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !7118, !srcloc !7119
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !7120, !srcloc !7121
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !7122, !srcloc !7123
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !7124, !srcloc !7125
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !7126, !srcloc !7127
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !7128, !srcloc !7129
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !7130, !srcloc !7131
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !7132, !srcloc !7133
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !7134, !srcloc !7135
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !7136, !srcloc !7137
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !7138, !srcloc !7139
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !7140, !srcloc !7141
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !7142, !srcloc !7143
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !7144, !srcloc !7145
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !7146, !srcloc !7147
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !7148, !srcloc !7149
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !7150, !srcloc !7151
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !7152, !srcloc !7153
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !7154, !srcloc !7155
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !7156, !srcloc !7157
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !7158, !srcloc !7159
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !7160, !srcloc !7161
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7162, !srcloc !7163
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !7164, !srcloc !7165
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !7166, !srcloc !7167
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !7168, !srcloc !7169
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !7170, !srcloc !7171
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !7172, !srcloc !7173
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !7174, !srcloc !7175
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !7176, !srcloc !7177
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !7178, !srcloc !7179
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !7180, !srcloc !7181
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !7182, !srcloc !7183
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7184, !srcloc !7185
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !7186, !srcloc !7187
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !7188, !srcloc !7189
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !7190, !srcloc !7191
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !7192, !srcloc !7193
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !7194, !srcloc !7195
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !7196, !srcloc !7197
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !7198, !srcloc !7199
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !7200, !srcloc !7201
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !7202, !srcloc !7203
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !7204, !srcloc !7205
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !7206, !srcloc !7207
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !7208, !srcloc !7209
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !7210, !srcloc !7211
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !7212, !srcloc !7213
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !7214, !srcloc !7215
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !7216, !srcloc !7217
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !7218, !srcloc !7219
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !7220, !srcloc !7221
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !7222, !srcloc !7223
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !7224, !srcloc !7225
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !7226, !srcloc !7227
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !7228, !srcloc !7229
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !7230, !srcloc !7231
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !7232, !srcloc !7233
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !7234, !srcloc !7235
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !7236, !srcloc !7237
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !7238, !srcloc !7239
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !7240, !srcloc !7241
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !7242, !srcloc !7243
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !7244, !srcloc !7245
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !7246, !srcloc !7247
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !7248, !srcloc !7249
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !7250, !srcloc !7251
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !7252, !srcloc !7253
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !7254, !srcloc !7255
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !7256, !srcloc !7257
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7258, !srcloc !7259
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !7260, !srcloc !7261
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !7262, !srcloc !7263
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !7264, !srcloc !7265
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !7266, !srcloc !7267
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !7268, !srcloc !7269
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7270, !srcloc !7271
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !7272, !srcloc !7273
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !7274, !srcloc !7275
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !7276, !srcloc !7277
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !7278, !srcloc !7279
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !7280, !srcloc !7281
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !7282, !srcloc !7283
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !7284, !srcloc !7285
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !7286, !srcloc !7287
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !7288, !srcloc !7289
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !7290, !srcloc !7291
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7292, !srcloc !7293
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !7294, !srcloc !7295
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !7296, !srcloc !7297
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !7298, !srcloc !7299
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !7300, !srcloc !7301
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !7302, !srcloc !7303
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !7304, !srcloc !7305
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !7306, !srcloc !7307
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !7308, !srcloc !7309
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !7310, !srcloc !7311
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !7312, !srcloc !7313
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !7314, !srcloc !7315
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !7316, !srcloc !7317
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !7318, !srcloc !7319
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !7320, !srcloc !7321
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !7322, !srcloc !7323
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !7324, !srcloc !7325
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !7326, !srcloc !7327
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !7328, !srcloc !7329
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7330, !srcloc !7331
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !7332, !srcloc !7333
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !7334, !srcloc !7335
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !7336, !srcloc !7337
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !7338, !srcloc !7339
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !7340, !srcloc !7341
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !7342, !srcloc !7343
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !7344, !srcloc !7345
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !7346, !srcloc !7347
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !7348, !srcloc !7349
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !7350, !srcloc !7351
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !7352, !srcloc !7353
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !7354, !srcloc !7355
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !7356, !srcloc !7357
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !7358, !srcloc !7359
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !7360, !srcloc !7361
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !7362, !srcloc !7363
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !7364, !srcloc !7365
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !7366, !srcloc !7367
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !7368, !srcloc !7369
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !7370, !srcloc !7371
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !7372, !srcloc !7373
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !7374, !srcloc !7375
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !7376, !srcloc !7377
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !7378, !srcloc !7379
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !7380, !srcloc !7381
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !7382, !srcloc !7383
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !7384, !srcloc !7385
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !7386, !srcloc !7387
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !7388, !srcloc !7389
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !7390, !srcloc !7391
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !7392, !srcloc !7393
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !7394, !srcloc !7395
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !7396, !srcloc !7397
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !7398, !srcloc !7399
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #25, !dbg !7400, !srcloc !7401
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #25, !dbg !7402, !srcloc !7403
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #25, !dbg !7404, !srcloc !7405
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !7406, !srcloc !7407
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !7408, !srcloc !7409
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !7410, !srcloc !7411
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !7412, !srcloc !7413
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !7414, !srcloc !7415
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !7416, !srcloc !7417
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !7418, !srcloc !7419
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !7420, !srcloc !7421
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS\0A\09.equ\09CONFIG_ZBUS,1\0A\09.type\09CONFIG_ZBUS,%object", ""() #25, !dbg !7422, !srcloc !7423
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS\0A\09.equ\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,1\0A\09.type\09CONFIG_ZBUS_STRUCTS_ITERABLE_ACCESS,%object", ""() #25, !dbg !7424, !srcloc !7425
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_CHANNEL_NAME\0A\09.equ\09CONFIG_ZBUS_CHANNEL_NAME,1\0A\09.type\09CONFIG_ZBUS_CHANNEL_NAME,%object", ""() #25, !dbg !7426, !srcloc !7427
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE\0A\09.equ\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,0\0A\09.type\09CONFIG_ZBUS_RUNTIME_OBSERVERS_POOL_SIZE,%object", ""() #25, !dbg !7428, !srcloc !7429
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL_WRN\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL_WRN,1\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL_WRN,%object", ""() #25, !dbg !7430, !srcloc !7431
  tail call void asm sideeffect ".globl\09CONFIG_ZBUS_LOG_LEVEL\0A\09.equ\09CONFIG_ZBUS_LOG_LEVEL,2\0A\09.type\09CONFIG_ZBUS_LOG_LEVEL,%object", ""() #25, !dbg !7432, !srcloc !7433
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !7434, !srcloc !7435
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !7436, !srcloc !7437
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !7438, !srcloc !7439
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7440, !srcloc !7441
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !7442, !srcloc !7443
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !7444, !srcloc !7445
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !7446, !srcloc !7447
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !7448, !srcloc !7449
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !7450, !srcloc !7451
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !7452, !srcloc !7453
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !7454, !srcloc !7455
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !7456, !srcloc !7457
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !7458, !srcloc !7459
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !7460, !srcloc !7461
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !7462, !srcloc !7463
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !7464, !srcloc !7465
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !7466, !srcloc !7467
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !7468, !srcloc !7469
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !7470, !srcloc !7471
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !7472, !srcloc !7473
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !7474, !srcloc !7475
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !7476, !srcloc !7477
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !7478, !srcloc !7479
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !7480, !srcloc !7481
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !7482, !srcloc !7483
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !7484, !srcloc !7485
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !7486, !srcloc !7487
  ret void, !dbg !7488
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7489 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7491, metadata !DIExpression()), !dbg !7493
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !7494, !srcloc !7503
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %3, metadata !7500, metadata !DIExpression()) #25, !dbg !7504
  call void @llvm.dbg.value(metadata i32 undef, metadata !7501, metadata !DIExpression()) #25, !dbg !7504
  call void @llvm.dbg.value(metadata i32 %3, metadata !7492, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i32 %3, metadata !7505, metadata !DIExpression()) #25, !dbg !7510
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !7512, !srcloc !7513
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !7514
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #27, !dbg !7515
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #27, !dbg !7516
  ret i32 0, !dbg !7517
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #16 !dbg !7518 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !7523, metadata !DIExpression()), !dbg !7525
  %2 = bitcast i32* %1 to i8*, !dbg !7526
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !7526
  call void @llvm.dbg.declare(metadata i32* %1, metadata !7524, metadata !DIExpression()), !dbg !7527
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7528
  %4 = or i32 %3, 268435456, !dbg !7528
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7528
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !7529
  %6 = and i32 %5, 268435456, !dbg !7529
  store volatile i32 %6, i32* %1, align 4, !dbg !7530
  %7 = load volatile i32, i32* %1, align 4, !dbg !7531
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !7532
  ret void, !dbg !7532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #17 !dbg !7533 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !7536, metadata !DIExpression()), !dbg !7537
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !7538
  %2 = and i32 %1, -6145, !dbg !7538
  %3 = or i32 %2, 2048, !dbg !7538
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !7538
  ret void, !dbg !7539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !7540 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7542, metadata !DIExpression()), !dbg !7543
  ret i32 0, !dbg !7544
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !7545 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7548, metadata !DIExpression()), !dbg !7556
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !7557
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7557
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !7549, metadata !DIExpression()), !dbg !7558
  call void @llvm.va_start(i8* nonnull %3), !dbg !7559
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !7560
  %5 = load i32, i32* %4, align 4, !dbg !7560
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !7560
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !7560
  call void @llvm.va_end(i8* nonnull %3), !dbg !7561
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !7562
  ret void, !dbg !7562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !7563 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !7568, metadata !DIExpression()), !dbg !7569
  call void @llvm.dbg.value(metadata i8* %0, metadata !7567, metadata !DIExpression()), !dbg !7569
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #26, !dbg !7570
  ret void, !dbg !7571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7576, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i8* %1, metadata !7577, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i32 %2, metadata !7578, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i8* %1, metadata !7579, metadata !DIExpression()), !dbg !7580
  %4 = icmp eq i32 %2, 0, !dbg !7581
  br i1 %4, label %14, label %5, !dbg !7582

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #27, !dbg !7580
  %7 = zext i8 %6 to i32
  br label %8, !dbg !7582

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7579, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i32 %10, metadata !7578, metadata !DIExpression()), !dbg !7580
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i32 noundef %7) #26, !dbg !7583
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #27, !dbg !7585
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !7586
  call void @llvm.dbg.value(metadata i32 %11, metadata !7578, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i8* %12, metadata !7579, metadata !DIExpression()), !dbg !7580
  br i1 %13, label %14, label %8, !dbg !7586, !llvm.loop !7587

14:                                               ; preds = %8, %3
  ret void, !dbg !7589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !7590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7595, metadata !DIExpression()), !dbg !7596
  %2 = add i32 %0, -1, !dbg !7597
  %3 = icmp ult i32 %2, 4, !dbg !7597
  %4 = shl i32 %2, 3, !dbg !7597
  %5 = lshr i32 1145657157, %4, !dbg !7597
  %6 = trunc i32 %5 to i8, !dbg !7597
  %7 = select i1 %3, i8 %6, i8 63, !dbg !7597
  ret i8 %7, !dbg !7598
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !7599 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7603, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32 %1, metadata !7604, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32 0, metadata !7605, metadata !DIExpression()), !dbg !7615
  br label %4, !dbg !7616

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.66, i32 0, i32 0)) #26, !dbg !7617
  call void @llvm.dbg.value(metadata i32 0, metadata !7607, metadata !DIExpression()), !dbg !7618
  br label %16, !dbg !7619

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7605, metadata !DIExpression()), !dbg !7615
  %6 = icmp ult i32 %5, %1, !dbg !7620
  br i1 %6, label %7, label %11, !dbg !7624

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7625
  %9 = load i8, i8* %8, align 1, !dbg !7625
  %10 = zext i8 %9 to i32, !dbg !7627
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.67, i32 0, i32 0), i32 noundef %10) #26, !dbg !7628
  br label %12, !dbg !7629

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.68, i32 0, i32 0)) #26, !dbg !7630
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !7632
  call void @llvm.dbg.value(metadata i32 %13, metadata !7605, metadata !DIExpression()), !dbg !7615
  %14 = icmp eq i32 %13, 8, !dbg !7633
  br i1 %14, label %3, label %4, !dbg !7616, !llvm.loop !7634

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.69, i32 0, i32 0)) #26, !dbg !7636
  ret void, !dbg !7637

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !7607, metadata !DIExpression()), !dbg !7618
  %18 = icmp ult i32 %17, %1, !dbg !7638
  br i1 %18, label %19, label %26, !dbg !7639

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !7640
  %21 = load i8, i8* %20, align 1, !dbg !7640
  call void @llvm.dbg.value(metadata i8 %21, metadata !7609, metadata !DIExpression()), !dbg !7641
  %22 = zext i8 %21 to i32, !dbg !7642
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #27, !dbg !7643
  %24 = icmp eq i32 %23, 0, !dbg !7644
  %25 = select i1 %24, i32 46, i32 %22, !dbg !7643
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.70, i32 0, i32 0), i32 noundef %25) #26, !dbg !7645
  br label %27, !dbg !7646

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.71, i32 0, i32 0)) #26, !dbg !7647
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !7649
  call void @llvm.dbg.value(metadata i32 %28, metadata !7607, metadata !DIExpression()), !dbg !7618
  %29 = icmp eq i32 %28, 8, !dbg !7650
  br i1 %29, label %15, label %16, !dbg !7619, !llvm.loop !7651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !7653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7655, metadata !DIExpression()), !dbg !7656
  %2 = add i32 %0, -32, !dbg !7657
  %3 = icmp ult i32 %2, 95, !dbg !7657
  %4 = zext i1 %3 to i32, !dbg !7657
  ret i32 %4, !dbg !7658
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !7659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7708, metadata !DIExpression()), !dbg !7710
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !7709, metadata !DIExpression()), !dbg !7710
  %3 = icmp eq %struct.__esf* %1, null, !dbg !7711
  br i1 %3, label %5, label %4, !dbg !7713

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #27, !dbg !7714
  br label %5, !dbg !7716

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !7717
  ret void, !dbg !7718
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7719 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7723, metadata !DIExpression()), !dbg !7724
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7725
  %3 = load i32, i32* %2, align 4, !dbg !7725
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !7725
  %5 = load i32, i32* %4, align 4, !dbg !7725
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !7725
  %7 = load i32, i32* %6, align 4, !dbg !7725
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #26, !dbg !7725
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !7730
  %9 = load i32, i32* %8, align 4, !dbg !7730
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !7730
  %11 = load i32, i32* %10, align 4, !dbg !7730
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !7730
  %13 = load i32, i32* %12, align 4, !dbg !7730
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.73, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #26, !dbg !7730
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !7735
  %15 = load i32, i32* %14, align 4, !dbg !7735
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.74, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #26, !dbg !7735
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7740
  %17 = load i32, i32* %16, align 4, !dbg !7740
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.75, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !7740
  ret void, !dbg !7745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !7746 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7763, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !7764, metadata !DIExpression()), !dbg !7766
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !7767
  %4 = load i32, i32* %3, align 4, !dbg !7767
  call void @llvm.dbg.value(metadata i32 %4, metadata !7765, metadata !DIExpression()), !dbg !7766
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #27, !dbg !7768
  ret void, !dbg !7769
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !7770 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7774, metadata !DIExpression()), !dbg !7777
  call void @llvm.dbg.value(metadata i8* %0, metadata !7775, metadata !DIExpression()), !dbg !7777
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !7778
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !7778
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !7776, metadata !DIExpression()), !dbg !7779
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !7779
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7780
  %5 = bitcast i8* %4 to i32*, !dbg !7780
  %6 = load i32, i32* %5, align 4, !dbg !7780
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !7781
  store i32 %6, i32* %7, align 4, !dbg !7782
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #27, !dbg !7783
  unreachable, !dbg !7784
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7788, metadata !DIExpression()), !dbg !7789
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #27, !dbg !7790
  ret void, !dbg !7791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7792 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7796, metadata !DIExpression()), !dbg !7797
  %2 = icmp sgt i32 %0, -1, !dbg !7798
  br i1 %2, label %3, label %8, !dbg !7800

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7801, !srcloc !7803
  %4 = and i32 %0, 31, !dbg !7804
  %5 = shl nuw i32 1, %4, !dbg !7805
  %6 = lshr i32 %0, 5, !dbg !7806
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !7807
  store volatile i32 %5, i32* %7, align 4, !dbg !7808
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7809, !srcloc !7810
  br label %8, !dbg !7811

8:                                                ; preds = %3, %1
  ret void, !dbg !7812
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !7813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7815, metadata !DIExpression()), !dbg !7816
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #27, !dbg !7817
  ret void, !dbg !7818
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !7819 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7821, metadata !DIExpression()), !dbg !7822
  %2 = icmp sgt i32 %0, -1, !dbg !7823
  br i1 %2, label %3, label %8, !dbg !7825

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !7826
  %5 = shl nuw i32 1, %4, !dbg !7828
  %6 = lshr i32 %0, 5, !dbg !7829
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !7830
  store volatile i32 %5, i32* %7, align 4, !dbg !7831
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7832, !srcloc !7836
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7837, !srcloc !7840
  br label %8, !dbg !7841

8:                                                ; preds = %3, %1
  ret void, !dbg !7842
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #18 !dbg !7843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7847, metadata !DIExpression()), !dbg !7848
  %2 = lshr i32 %0, 5, !dbg !7849
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !7850
  %4 = load volatile i32, i32* %3, align 4, !dbg !7850
  %5 = and i32 %0, 31, !dbg !7851
  %6 = shl nuw i32 1, %5, !dbg !7851
  %7 = and i32 %4, %6, !dbg !7852
  ret i32 %7, !dbg !7853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7858, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i32 %1, metadata !7859, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.value(metadata i32 %2, metadata !7860, metadata !DIExpression()), !dbg !7861
  %4 = add i32 %1, 1, !dbg !7862
  call void @llvm.dbg.value(metadata i32 %4, metadata !7859, metadata !DIExpression()), !dbg !7861
  %5 = icmp ult i32 %4, 16, !dbg !7865
  br i1 %5, label %7, label %6, !dbg !7868

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.76, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 94) #26, !dbg !7869
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.79, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #26, !dbg !7869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.78, i32 0, i32 0), i32 noundef 94) #26, !dbg !7869
  unreachable, !dbg !7869

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #27, !dbg !7871
  ret void, !dbg !7872
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !7873 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7877, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.value(metadata i32 %1, metadata !7878, metadata !DIExpression()), !dbg !7879
  %3 = trunc i32 %1 to i8, !dbg !7880
  %4 = shl i8 %3, 4, !dbg !7880
  %5 = and i32 %0, 15, !dbg !7882
  %6 = add nsw i32 %5, -4, !dbg !7882
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !7882
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7882
  %9 = icmp slt i32 %0, 0, !dbg !7882
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !7882
  store volatile i8 %4, i8* %10, align 1, !dbg !7880
  ret void, !dbg !7883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !7884 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7886, metadata !DIExpression()), !dbg !7887
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !7888
  ret void, !dbg !7889
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !7890 {
  tail call void @z_SysNmiOnReset() #26, !dbg !7892
  tail call void @z_arm_int_exit() #26, !dbg !7893
  ret void, !dbg !7894
}

; Function Attrs: optsize
declare !dbg !7895 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !7896 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !7898 {
  tail call fastcc void @relocate_vector_table() #27, !dbg !7900
  tail call void @z_bss_zero() #26, !dbg !7901
  tail call void @z_data_copy() #26, !dbg !7902
  tail call void @z_arm_interrupt_init() #26, !dbg !7903
  tail call void @z_cstart() #29, !dbg !7904
  unreachable, !dbg !7904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !7905 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !7906
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !7907, !srcloc !7910
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !7911, !srcloc !7914
  ret void, !dbg !7915
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !7916 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7919, metadata !DIExpression()), !dbg !7920
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7921
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !7922
  store i32 %0, i32* %3, align 4, !dbg !7923
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !7924
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !7925
  store i32 %4, i32* %5, align 4, !dbg !7926
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7927
  %7 = or i32 %6, 268435456, !dbg !7927
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7927
  call void @llvm.dbg.value(metadata i32 0, metadata !7928, metadata !DIExpression()) #25, !dbg !7931
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !7933, !srcloc !7934
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7935
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !7936
  %10 = load i32, i32* %9, align 4, !dbg !7936
  ret i32 %10, !dbg !7937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !7938 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8050, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8051, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %2, metadata !8052, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8053, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %4, metadata !8054, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %5, metadata !8055, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.value(metadata i8* %6, metadata !8056, metadata !DIExpression()), !dbg !8058
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8059
  call void @llvm.dbg.value(metadata i8* %8, metadata !8057, metadata !DIExpression()), !dbg !8058
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8060
  %10 = bitcast i8* %9 to i32*, !dbg !8060
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8061
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8062
  %12 = bitcast i8* %8 to i32*, !dbg !8063
  store i32 %11, i32* %12, align 4, !dbg !8064
  %13 = ptrtoint i8* %4 to i32, !dbg !8065
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8066
  %15 = bitcast i8* %14 to i32*, !dbg !8066
  store i32 %13, i32* %15, align 4, !dbg !8067
  %16 = ptrtoint i8* %5 to i32, !dbg !8068
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8069
  %18 = bitcast i8* %17 to i32*, !dbg !8069
  store i32 %16, i32* %18, align 4, !dbg !8070
  %19 = ptrtoint i8* %6 to i32, !dbg !8071
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8072
  %21 = bitcast i8* %20 to i32*, !dbg !8072
  store i32 %19, i32* %21, align 4, !dbg !8073
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8074
  %23 = bitcast i8* %22 to i32*, !dbg !8074
  store i32 16777216, i32* %23, align 4, !dbg !8075
  %24 = ptrtoint i8* %8 to i32, !dbg !8076
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8077
  store i32 %24, i32* %25, align 8, !dbg !8078
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8079
  store i32 0, i32* %26, align 4, !dbg !8080
  ret void, !dbg !8081
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !8082 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8087, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.value(metadata i32 %1, metadata !8088, metadata !DIExpression()), !dbg !8093
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8094
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8089, metadata !DIExpression()), !dbg !8093
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8095
  br i1 %4, label %19, label %5, !dbg !8097

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8092, metadata !DIExpression()), !dbg !8093
  %6 = icmp eq i32 %0, -22, !dbg !8098
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8098
  %8 = load i32, i32* %7, align 4, !dbg !8098
  br i1 %6, label %16, label %9, !dbg !8100

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8098
  %11 = icmp ule i32 %10, %0, !dbg !8098
  %12 = icmp ugt i32 %8, %0, !dbg !8098
  %13 = and i1 %12, %11, !dbg !8098
  %14 = icmp ugt i32 %8, %1, !dbg !8098
  %15 = and i1 %14, %13, !dbg !8098
  br i1 %15, label %18, label %19, !dbg !8098

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8098
  br i1 %17, label %18, label %19, !dbg !8100

18:                                               ; preds = %9, %16
  br label %19, !dbg !8101

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8093
  ret i32 %20, !dbg !8103
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !8104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8108, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i8* %1, metadata !8109, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8110, metadata !DIExpression()), !dbg !8111
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8112
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !8113
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8114, !srcloc !8115
  unreachable, !dbg !8116
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8117 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8135, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %1, metadata !8136, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 %2, metadata !8137, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8138, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i32 0, metadata !8139, metadata !DIExpression()), !dbg !8145
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8146
  call void @llvm.dbg.value(metadata i32 %8, metadata !8140, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !8145
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8147
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8147
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !8148
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8148
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8144, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.value(metadata i32 0, metadata !8150, metadata !DIExpression()) #25, !dbg !8153
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8155, !srcloc !8156
  call void @llvm.dbg.value(metadata i8* %6, metadata !8142, metadata !DIExpression(DW_OP_deref)), !dbg !8145
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #27, !dbg !8157
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !8143, metadata !DIExpression()), !dbg !8145
  %11 = icmp eq %struct.__esf* %10, null, !dbg !8158
  br i1 %11, label %12, label %13, !dbg !8161

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.83, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.85, i32 0, i32 0)) #26, !dbg !8162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 1057) #26, !dbg !8162
  unreachable, !dbg !8162

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !8164
  call void @llvm.dbg.value(metadata i32 %14, metadata !8140, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.value(metadata i8* %5, metadata !8141, metadata !DIExpression(DW_OP_deref)), !dbg !8145
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #27, !dbg !8165
  call void @llvm.dbg.value(metadata i32 %15, metadata !8139, metadata !DIExpression()), !dbg !8145
  %16 = load i8, i8* %5, align 1, !dbg !8166, !range !8168
  call void @llvm.dbg.value(metadata i8 %16, metadata !8141, metadata !DIExpression()), !dbg !8145
  %17 = icmp eq i8 %16, 0, !dbg !8166
  br i1 %17, label %18, label %35, !dbg !8169

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !8170
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #26, !dbg !8171
  %21 = load i8, i8* %6, align 1, !dbg !8172, !range !8168
  call void @llvm.dbg.value(metadata i8 %21, metadata !8142, metadata !DIExpression()), !dbg !8145
  %22 = icmp eq i8 %21, 0, !dbg !8172
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8174
  %24 = load i32, i32* %23, align 4, !dbg !8174
  br i1 %22, label %30, label %25, !dbg !8175

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !8176
  %27 = icmp eq i32 %26, 0, !dbg !8179
  br i1 %27, label %28, label %34, !dbg !8180

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !8181
  br label %32, !dbg !8183

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !8184
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !8174
  br label %34, !dbg !8186

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #26, !dbg !8186
  br label %35, !dbg !8187

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !8187
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8187
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8187
  ret void, !dbg !8187
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8193, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32 %1, metadata !8194, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i32 %2, metadata !8195, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i8* %3, metadata !8196, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata i8 0, metadata !8197, metadata !DIExpression()), !dbg !8199
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8198, metadata !DIExpression()), !dbg !8199
  store i8 0, i8* %3, align 1, !dbg !8200
  %5 = icmp ugt i32 %2, -16777217, !dbg !8201
  br i1 %5, label %6, label %17, !dbg !8203

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8204
  %8 = icmp eq i32 %7, 8, !dbg !8204
  br i1 %8, label %9, label %10, !dbg !8204

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.97, i32 0, i32 0), i32 noundef 69) #26, !dbg !8206
  br label %17, !dbg !8212

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8213
  %12 = icmp eq i32 %11, 0, !dbg !8213
  br i1 %12, label %13, label %14, !dbg !8214

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8198, metadata !DIExpression()), !dbg !8199
  store i8 1, i8* %3, align 1, !dbg !8217
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8199
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8198, metadata !DIExpression()), !dbg !8199
  br label %17, !dbg !8220

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8199
  ret %struct.__esf* %18, !dbg !8221
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8222 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8226, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 %1, metadata !8227, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i8* %2, metadata !8228, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32 0, metadata !8229, metadata !DIExpression()), !dbg !8230
  store i8 0, i8* %2, align 1, !dbg !8231
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8232

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #27, !dbg !8233
  call void @llvm.dbg.value(metadata i32 %5, metadata !8229, metadata !DIExpression()), !dbg !8230
  br label %12, !dbg !8235

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8236
  call void @llvm.dbg.value(metadata i32 %7, metadata !8229, metadata !DIExpression()), !dbg !8230
  br label %12, !dbg !8237

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #27, !dbg !8238
  call void @llvm.dbg.value(metadata i32 0, metadata !8229, metadata !DIExpression()), !dbg !8230
  br label %12, !dbg !8239

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #27, !dbg !8240
  call void @llvm.dbg.value(metadata i32 0, metadata !8229, metadata !DIExpression()), !dbg !8230
  br label %12, !dbg !8241

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #27, !dbg !8242
  br label %12, !dbg !8243

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #27, !dbg !8244
  br label %12, !dbg !8245

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8230
  call void @llvm.dbg.value(metadata i32 %13, metadata !8229, metadata !DIExpression()), !dbg !8230
  ret i32 %13, !dbg !8246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8247 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8251, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.value(metadata i8* %1, metadata !8252, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.value(metadata i32 0, metadata !8253, metadata !DIExpression()), !dbg !8254
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.89, i32 0, i32 0), i32 noundef 69) #26, !dbg !8255
  store i8 0, i8* %1, align 1, !dbg !8260
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8261
  %4 = and i32 %3, 2, !dbg !8263
  %5 = icmp eq i32 %4, 0, !dbg !8264
  br i1 %5, label %7, label %6, !dbg !8265

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.90, i32 0, i32 0), i32 noundef 69) #26, !dbg !8266
  br label %38, !dbg !8272

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8273
  %9 = icmp sgt i32 %8, -1, !dbg !8275
  br i1 %9, label %11, label %10, !dbg !8276

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.91, i32 0, i32 0), i32 noundef 69) #26, !dbg !8277
  br label %38, !dbg !8283

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8284
  %13 = and i32 %12, 1073741824, !dbg !8286
  %14 = icmp eq i32 %13, 0, !dbg !8287
  br i1 %14, label %37, label %15, !dbg !8288

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.92, i32 0, i32 0), i32 noundef 69) #26, !dbg !8289
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #27, !dbg !8295
  br i1 %16, label %17, label %21, !dbg !8297

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8298
  %19 = load i32, i32* %18, align 4, !dbg !8298
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.93, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #26, !dbg !8298
  %20 = load i32, i32* %18, align 4, !dbg !8304
  call void @llvm.dbg.value(metadata i32 %20, metadata !8253, metadata !DIExpression()), !dbg !8254
  br label %38, !dbg !8305

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8306
  %23 = and i32 %22, 255, !dbg !8308
  %24 = icmp eq i32 %23, 0, !dbg !8309
  br i1 %24, label %27, label %25, !dbg !8310

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8311
  call void @llvm.dbg.value(metadata i32 %26, metadata !8253, metadata !DIExpression()), !dbg !8254
  br label %38, !dbg !8313

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8314
  %29 = and i32 %28, 65280, !dbg !8316
  %30 = icmp eq i32 %29, 0, !dbg !8317
  br i1 %30, label %32, label %31, !dbg !8318

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #27, !dbg !8319
  call void @llvm.dbg.value(metadata i32 0, metadata !8253, metadata !DIExpression()), !dbg !8254
  br label %38, !dbg !8321

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8322
  %34 = icmp ult i32 %33, 65536, !dbg !8324
  br i1 %34, label %36, label %35, !dbg !8325

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #27, !dbg !8326
  call void @llvm.dbg.value(metadata i32 0, metadata !8253, metadata !DIExpression()), !dbg !8254
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 755) #26, !dbg !8328
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.95, i32 0, i32 0)) #26, !dbg !8328
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 755) #26, !dbg !8328
  unreachable, !dbg !8328

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 760) #26, !dbg !8333
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.96, i32 0, i32 0)) #26, !dbg !8333
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 760) #26, !dbg !8333
  unreachable, !dbg !8333

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !8254
  call void @llvm.dbg.value(metadata i32 %39, metadata !8253, metadata !DIExpression()), !dbg !8254
  ret i32 %39, !dbg !8338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8339 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8341, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 %1, metadata !8342, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i8* %2, metadata !8343, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 0, metadata !8344, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.value(metadata i32 -22, metadata !8345, metadata !DIExpression()), !dbg !8354
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.88, i32 0, i32 0), i32 noundef 69) #26, !dbg !8355
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8360
  %5 = and i32 %4, 16, !dbg !8362
  %6 = icmp eq i32 %5, 0, !dbg !8363
  br i1 %6, label %8, label %7, !dbg !8364

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #26, !dbg !8365
  br label %8, !dbg !8371

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8372
  %10 = and i32 %9, 8, !dbg !8374
  %11 = icmp eq i32 %10, 0, !dbg !8375
  br i1 %11, label %13, label %12, !dbg !8376

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !8377
  br label %13, !dbg !8383

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8384
  %15 = and i32 %14, 2, !dbg !8385
  %16 = icmp eq i32 %15, 0, !dbg !8386
  br i1 %16, label %27, label %17, !dbg !8387

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #26, !dbg !8388
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8393
  call void @llvm.dbg.value(metadata i32 %18, metadata !8346, metadata !DIExpression()), !dbg !8394
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8395
  %20 = and i32 %19, 128, !dbg !8397
  %21 = icmp eq i32 %20, 0, !dbg !8398
  br i1 %21, label %27, label %22, !dbg !8399

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8345, metadata !DIExpression()), !dbg !8354
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #26, !dbg !8400
  %23 = icmp eq i32 %1, 0, !dbg !8406
  br i1 %23, label %27, label %24, !dbg !8408

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8409
  %26 = and i32 %25, -129, !dbg !8409
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8409
  br label %27, !dbg !8411

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8354
  call void @llvm.dbg.value(metadata i32 %28, metadata !8345, metadata !DIExpression()), !dbg !8354
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8412
  %30 = and i32 %29, 1, !dbg !8414
  %31 = icmp eq i32 %30, 0, !dbg !8415
  br i1 %31, label %33, label %32, !dbg !8416

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #26, !dbg !8417
  br label %33, !dbg !8423

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8424
  %35 = and i32 %34, 16, !dbg !8425
  %36 = icmp eq i32 %35, 0, !dbg !8425
  br i1 %36, label %37, label %41, !dbg !8426

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8427
  %39 = and i32 %38, 2, !dbg !8428
  %40 = icmp eq i32 %39, 0, !dbg !8428
  br i1 %40, label %55, label %41, !dbg !8429

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8430
  %43 = and i32 %42, 2048, !dbg !8431
  %44 = icmp eq i32 %43, 0, !dbg !8431
  br i1 %44, label %55, label %45, !dbg !8432

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !8433
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #26, !dbg !8434
  call void @llvm.dbg.value(metadata i32 %47, metadata !8349, metadata !DIExpression()), !dbg !8435
  %48 = icmp eq i32 %47, 0, !dbg !8436
  br i1 %48, label %50, label %49, !dbg !8438

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !8439, metadata !DIExpression()) #25, !dbg !8442
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #25, !dbg !8445, !srcloc !8446
  call void @llvm.dbg.value(metadata i32 2, metadata !8344, metadata !DIExpression()), !dbg !8354
  br label %55, !dbg !8447

50:                                               ; preds = %45
  %51 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8448
  %52 = and i32 %51, 16, !dbg !8448
  %53 = icmp eq i32 %52, 0, !dbg !8448
  br i1 %53, label %55, label %54, !dbg !8452

54:                                               ; preds = %50
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 343) #26, !dbg !8453
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #26, !dbg !8453
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.84, i32 0, i32 0), i32 noundef 343) #26, !dbg !8453
  unreachable, !dbg !8453

55:                                               ; preds = %49, %50, %41, %37
  %56 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %50 ], !dbg !8354
  call void @llvm.dbg.value(metadata i32 %56, metadata !8344, metadata !DIExpression()), !dbg !8354
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8455
  %58 = or i32 %57, 255, !dbg !8455
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8455
  store i8 0, i8* %2, align 1, !dbg !8456
  ret i32 %56, !dbg !8457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8458 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8462, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 %0, metadata !8463, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i8* %1, metadata !8464, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.value(metadata i32 0, metadata !8465, metadata !DIExpression()), !dbg !8469
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #26, !dbg !8470
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8475
  %4 = and i32 %3, 4096, !dbg !8477
  %5 = icmp eq i32 %4, 0, !dbg !8477
  br i1 %5, label %7, label %6, !dbg !8478

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22.87, i32 0, i32 0), i32 noundef 69) #26, !dbg !8479
  br label %7, !dbg !8485

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8486
  %9 = and i32 %8, 2048, !dbg !8488
  %10 = icmp eq i32 %9, 0, !dbg !8488
  br i1 %10, label %12, label %11, !dbg !8489

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #26, !dbg !8490
  br label %12, !dbg !8496

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8497
  %14 = and i32 %13, 512, !dbg !8498
  %15 = icmp eq i32 %14, 0, !dbg !8498
  br i1 %15, label %26, label %16, !dbg !8499

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #26, !dbg !8500
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8505
  call void @llvm.dbg.value(metadata i32 %17, metadata !8466, metadata !DIExpression()), !dbg !8506
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8507
  %19 = and i32 %18, 32768, !dbg !8509
  %20 = icmp eq i32 %19, 0, !dbg !8510
  br i1 %20, label %26, label %21, !dbg !8511

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #26, !dbg !8512
  %22 = icmp eq i32 %0, 0, !dbg !8518
  br i1 %22, label %26, label %23, !dbg !8520

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8521
  %25 = and i32 %24, -32769, !dbg !8521
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8521
  br label %26, !dbg !8523

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8524
  %28 = and i32 %27, 1024, !dbg !8526
  %29 = icmp eq i32 %28, 0, !dbg !8526
  br i1 %29, label %31, label %30, !dbg !8527

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #26, !dbg !8528
  br label %31, !dbg !8534

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8535
  %33 = and i32 %32, 256, !dbg !8537
  %34 = icmp eq i32 %33, 0, !dbg !8538
  br i1 %34, label %36, label %35, !dbg !8539

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #26, !dbg !8540
  br label %36, !dbg !8546

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8547
  %38 = or i32 %37, 65280, !dbg !8547
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8547
  store i8 0, i8* %1, align 1, !dbg !8548
  ret void, !dbg !8549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !8550 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8556, metadata !DIExpression()), !dbg !8558
  call void @llvm.dbg.value(metadata i32 0, metadata !8557, metadata !DIExpression()), !dbg !8558
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69) #26, !dbg !8559
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8564
  %2 = and i32 %1, 33554432, !dbg !8566
  %3 = icmp eq i32 %2, 0, !dbg !8567
  br i1 %3, label %5, label %4, !dbg !8568

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28.86, i32 0, i32 0), i32 noundef 69) #26, !dbg !8569
  br label %5, !dbg !8575

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8576
  %7 = and i32 %6, 16777216, !dbg !8578
  %8 = icmp eq i32 %7, 0, !dbg !8579
  br i1 %8, label %10, label %9, !dbg !8580

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #26, !dbg !8581
  br label %10, !dbg !8587

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8588
  %12 = and i32 %11, 524288, !dbg !8590
  %13 = icmp eq i32 %12, 0, !dbg !8591
  br i1 %13, label %15, label %14, !dbg !8592

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #26, !dbg !8593
  br label %15, !dbg !8599

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8600
  %17 = and i32 %16, 262144, !dbg !8602
  %18 = icmp eq i32 %17, 0, !dbg !8603
  br i1 %18, label %20, label %19, !dbg !8604

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #26, !dbg !8605
  br label %20, !dbg !8611

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8612
  %22 = and i32 %21, 131072, !dbg !8614
  %23 = icmp eq i32 %22, 0, !dbg !8615
  br i1 %23, label %25, label %24, !dbg !8616

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #26, !dbg !8617
  br label %25, !dbg !8623

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8624
  %27 = and i32 %26, 65536, !dbg !8626
  %28 = icmp eq i32 %27, 0, !dbg !8627
  br i1 %28, label %30, label %29, !dbg !8628

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #26, !dbg !8629
  br label %30, !dbg !8635

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8636
  %32 = or i32 %31, -65536, !dbg !8636
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8636
  ret void, !dbg !8637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !8638 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i8* %0, metadata !8643, metadata !DIExpression()), !dbg !8644
  store i8 0, i8* %0, align 1, !dbg !8645
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #26, !dbg !8646
  ret void, !dbg !8651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !8652 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8656, metadata !DIExpression()), !dbg !8658
  call void @llvm.dbg.value(metadata i32 %0, metadata !8657, metadata !DIExpression()), !dbg !8658
  %2 = icmp slt i32 %0, 16, !dbg !8659
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i32 0, i32 0), !dbg !8659
  %4 = add nsw i32 %0, -16, !dbg !8659
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #26, !dbg !8659
  ret void, !dbg !8664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8665 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8669, metadata !DIExpression()), !dbg !8672
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8673
  %3 = load i32, i32* %2, align 4, !dbg !8673
  %4 = inttoptr i32 %3 to i16*, !dbg !8674
  call void @llvm.dbg.value(metadata i16* %4, metadata !8670, metadata !DIExpression()), !dbg !8672
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8675
  %6 = or i32 %5, 256, !dbg !8675
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8675
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8676, !srcloc !8679
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8680, !srcloc !8683
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !8684
  %8 = load i16, i16* %7, align 2, !dbg !8685
  call void @llvm.dbg.value(metadata i16 %8, metadata !8671, metadata !DIExpression()), !dbg !8672
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8686
  %10 = and i32 %9, -257, !dbg !8686
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8686
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8687, !srcloc !8679
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8689, !srcloc !8683
  %11 = icmp eq i16 %8, -8446, !dbg !8691
  ret i1 %11, !dbg !8693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #17 !dbg !8694 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8695
  %2 = or i32 %1, 16, !dbg !8695
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !8695
  ret void, !dbg !8696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #17 !dbg !8697 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8700, metadata !DIExpression()), !dbg !8701
  br label %1, !dbg !8702

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !8700, metadata !DIExpression()), !dbg !8701
  tail call fastcc void @__NVIC_SetPriority.100(i32 noundef %2) #27, !dbg !8704
  %3 = add nuw nsw i32 %2, 1, !dbg !8707
  call void @llvm.dbg.value(metadata i32 %3, metadata !8700, metadata !DIExpression()), !dbg !8701
  %4 = icmp eq i32 %3, 45, !dbg !8708
  br i1 %4, label %5, label %1, !dbg !8702, !llvm.loop !8709

5:                                                ; preds = %1
  ret void, !dbg !8711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.100(i32 noundef %0) unnamed_addr #17 !dbg !8712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8714, metadata !DIExpression()), !dbg !8716
  call void @llvm.dbg.value(metadata i32 1, metadata !8715, metadata !DIExpression()), !dbg !8716
  %2 = and i32 %0, 15, !dbg !8717
  %3 = add nsw i32 %2, -4, !dbg !8717
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !8717
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8717
  %6 = icmp slt i32 %0, 0, !dbg !8717
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !8717
  store volatile i8 16, i8* %7, align 1, !dbg !8718
  ret void, !dbg !8720
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !8721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8829, metadata !DIExpression()), !dbg !8830
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8831
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !8833
  br i1 %3, label %4, label %12, !dbg !8834

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !8835, !srcloc !8849
  call void @llvm.dbg.value(metadata i32 %5, metadata !8840, metadata !DIExpression()) #25, !dbg !8850
  %6 = icmp eq i32 %5, 0, !dbg !8851
  br i1 %6, label %12, label %7, !dbg !8852

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8853
  %9 = or i32 %8, 268435456, !dbg !8853
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8853
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8855
  %11 = and i32 %10, -32769, !dbg !8855
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8855
  br label %12, !dbg !8856

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !8857
  ret void, !dbg !8858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !8859 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !8860
  ret void, !dbg !8861
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !866 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !973, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i8 0, metadata !974, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 64, metadata !976, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.value(metadata i32 undef, metadata !975, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8862
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !8863
  %3 = load i32, i32* %2, align 4, !dbg !8863
  call void @llvm.dbg.value(metadata i32 %3, metadata !975, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !8862
  %4 = add i32 %3, -64, !dbg !8865
  call void @llvm.dbg.value(metadata i32 %4, metadata !975, metadata !DIExpression()), !dbg !8862
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !8866
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !8867
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !8868
  call void @llvm.dbg.value(metadata i8 1, metadata !974, metadata !DIExpression()), !dbg !8862
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !8869
  ret void, !dbg !8870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !8871 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8872
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8873, !srcloc !8876
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8877, !srcloc !8880
  ret void, !dbg !8881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !8882 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !8883, !srcloc !8886
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !8887
  ret void, !dbg !8888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !8889 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8904, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i8 %1, metadata !8905, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i32 %2, metadata !8906, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i32 %3, metadata !8907, metadata !DIExpression()), !dbg !8908
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !8909
  %6 = icmp eq i32 %5, -22, !dbg !8911
  br i1 %6, label %7, label %9, !dbg !8912

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 283) #26, !dbg !8913
  %8 = zext i8 %1 to i32, !dbg !8913
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.112, i32 0, i32 0), i32 noundef %8) #26, !dbg !8913
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 283) #26, !dbg !8913
  unreachable, !dbg !8913

9:                                                ; preds = %4
  ret void, !dbg !8918
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !8919 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8924, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i8 %1, metadata !8925, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 undef, metadata !8926, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 undef, metadata !8927, metadata !DIExpression()), !dbg !8929
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !8930
  call void @llvm.dbg.value(metadata i8 %3, metadata !8928, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8929
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #27, !dbg !8931
  call void @llvm.dbg.value(metadata i32 %4, metadata !8928, metadata !DIExpression()), !dbg !8929
  %5 = trunc i32 %4 to i8, !dbg !8932
  store i8 %5, i8* @static_regions_num, align 1, !dbg !8933
  ret i32 %4, !dbg !8934
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !8935 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8939, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i8 %1, metadata !8940, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i8 %2, metadata !8941, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i1 %3, metadata !8942, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8945
  %5 = zext i8 %2 to i32, !dbg !8946
  call void @llvm.dbg.value(metadata i32 %5, metadata !8944, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 0, metadata !8943, metadata !DIExpression()), !dbg !8945
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !8944, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 0, metadata !8943, metadata !DIExpression()), !dbg !8945
  %7 = icmp eq i8 %1, 0, !dbg !8947
  br i1 %7, label %30, label %8, !dbg !8950

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8944, metadata !DIExpression()), !dbg !8945
  call void @llvm.dbg.value(metadata i32 %10, metadata !8943, metadata !DIExpression()), !dbg !8945
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !8951
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !8954
  %13 = load i32, i32* %12, align 4, !dbg !8954
  %14 = icmp eq i32 %13, 0, !dbg !8955
  br i1 %14, label %26, label %15, !dbg !8956

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !8957

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !8959
  %18 = icmp eq i32 %17, 0, !dbg !8959
  br i1 %18, label %19, label %20, !dbg !8960

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.113, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #26, !dbg !8961
  br label %30, !dbg !8967

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !8968
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #27, !dbg !8969
  call void @llvm.dbg.value(metadata i32 %22, metadata !8944, metadata !DIExpression()), !dbg !8945
  %23 = icmp eq i32 %22, -22, !dbg !8970
  br i1 %23, label %30, label %24, !dbg !8972

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !8973
  call void @llvm.dbg.value(metadata i32 %25, metadata !8944, metadata !DIExpression()), !dbg !8945
  br label %26, !dbg !8974

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !8945
  call void @llvm.dbg.value(metadata i32 %27, metadata !8944, metadata !DIExpression()), !dbg !8945
  %28 = add nuw nsw i32 %10, 1, !dbg !8975
  call void @llvm.dbg.value(metadata i32 %28, metadata !8943, metadata !DIExpression()), !dbg !8945
  %29 = icmp eq i32 %28, %6, !dbg !8947
  br i1 %29, label %30, label %8, !dbg !8950, !llvm.loop !8976

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !8945
  ret i32 %31, !dbg !8978
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #19 !dbg !8979 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !8983, metadata !DIExpression()), !dbg !8985
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !8986
  %3 = load i32, i32* %2, align 4, !dbg !8986
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !8987, !range !5450
  %5 = icmp ult i32 %4, 2, !dbg !8987
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !8988
  br i1 %7, label %8, label %15, !dbg !8988

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !8989
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !8990
  %11 = load i32, i32* %10, align 4, !dbg !8990
  %12 = and i32 %11, %9, !dbg !8991
  %13 = icmp eq i32 %12, 0, !dbg !8992
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8984, metadata !DIExpression()), !dbg !8985
  ret i32 %16, !dbg !8993
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !8994 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !8998, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !8999, metadata !DIExpression()), !dbg !9001
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9002
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9002
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9000, metadata !DIExpression()), !dbg !9003
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9004
  %6 = load i32, i32* %5, align 4, !dbg !9004
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9005
  store i32 %6, i32* %7, align 4, !dbg !9006
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9007
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9008
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9009
  %11 = load i32, i32* %10, align 4, !dbg !9009
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #27, !dbg !9010
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #27, !dbg !9011
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9012
  ret i32 %12, !dbg !9013
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #12 !dbg !9014 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !9021, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !9022, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata i32 undef, metadata !9023, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.value(metadata i32 %2, metadata !9024, metadata !DIExpression()), !dbg !9025
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !9026
  %5 = load i32, i32* %4, align 4, !dbg !9026
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #27, !dbg !9027
  %7 = or i32 %6, %5, !dbg !9028
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !9029
  store i32 %7, i32* %8, align 4, !dbg !9030
  ret void, !dbg !9031
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9032 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9036, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9037, metadata !DIExpression()), !dbg !9038
  %3 = zext i8 %0 to i32, !dbg !9039
  %4 = icmp ugt i8 %0, 7, !dbg !9041
  br i1 %4, label %5, label %6, !dbg !9042

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.114, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #26, !dbg !9043
  br label %7, !dbg !9049

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #27, !dbg !9050
  br label %7, !dbg !9051

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9038
  ret i32 %8, !dbg !9052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #17 !dbg !9053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9057, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9058, metadata !DIExpression()), !dbg !9059
  tail call fastcc void @set_region_number(i32 noundef %0) #27, !dbg !9060
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9061
  %4 = load i32, i32* %3, align 4, !dbg !9061
  %5 = and i32 %4, -32, !dbg !9062
  %6 = or i32 %5, %0, !dbg !9063
  %7 = or i32 %6, 16, !dbg !9063
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9064
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9065
  %9 = load i32, i32* %8, align 4, !dbg !9065
  %10 = or i32 %9, 1, !dbg !9066
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9067
  ret void, !dbg !9068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #17 !dbg !9069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9072, metadata !DIExpression()), !dbg !9073
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9074
  ret void, !dbg !9075
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !9076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9080, metadata !DIExpression()), !dbg !9081
  %2 = icmp ult i32 %0, 33, !dbg !9082
  br i1 %2, label %11, label %3, !dbg !9084

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9085
  br i1 %4, label %11, label %5, !dbg !9087

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9088
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9089, !range !5450
  %8 = mul nsw i32 %7, -2, !dbg !9090
  %9 = add nsw i32 %8, 62, !dbg !9090
  %10 = and i32 %9, 62, !dbg !9091
  br label %11, !dbg !9092

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9081
  ret i32 %12, !dbg !9093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9094 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9098, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i8 %1, metadata !9099, metadata !DIExpression()), !dbg !9100
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #27, !dbg !9101
  %4 = icmp eq i32 %3, -22, !dbg !9103
  br i1 %4, label %5, label %7, !dbg !9104

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 314) #26, !dbg !9105
  %6 = zext i8 %1 to i32, !dbg !9105
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.117, i32 0, i32 0), i32 noundef %6) #26, !dbg !9105
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 314) #26, !dbg !9105
  unreachable, !dbg !9105

7:                                                ; preds = %2
  ret void, !dbg !9110
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9111 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9115, metadata !DIExpression()), !dbg !9122
  call void @llvm.dbg.value(metadata i8 %1, metadata !9116, metadata !DIExpression()), !dbg !9122
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9123
  call void @llvm.dbg.value(metadata i8 %3, metadata !9117, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9122
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #27, !dbg !9124
  call void @llvm.dbg.value(metadata i32 %4, metadata !9117, metadata !DIExpression()), !dbg !9122
  %5 = icmp ne i32 %4, -22, !dbg !9125
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9126
  call void @llvm.dbg.value(metadata i32 %4, metadata !9118, metadata !DIExpression()), !dbg !9127
  br i1 %7, label %8, label %12, !dbg !9126

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9118, metadata !DIExpression()), !dbg !9127
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #27, !dbg !9128
  %10 = add i32 %9, 1, !dbg !9131
  call void @llvm.dbg.value(metadata i32 %10, metadata !9118, metadata !DIExpression()), !dbg !9127
  %11 = icmp eq i32 %10, 8, !dbg !9132
  br i1 %11, label %12, label %8, !dbg !9133, !llvm.loop !9134

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !9136
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #17 !dbg !9137 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9140, metadata !DIExpression()), !dbg !9141
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9142
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9143
  ret void, !dbg !9144
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9145 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9150
  %2 = icmp ugt i32 %1, 8, !dbg !9152
  br i1 %2, label %3, label %4, !dbg !9153

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.110, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 341) #26, !dbg !9154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.118, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #26, !dbg !9154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 341) #26, !dbg !9154
  unreachable, !dbg !9154

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #27, !dbg !9159
  call void @llvm.dbg.value(metadata i32 0, metadata !9149, metadata !DIExpression()), !dbg !9160
  %5 = icmp eq i32 %1, 0, !dbg !9161
  br i1 %5, label %13, label %6, !dbg !9164

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !9164

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9149, metadata !DIExpression()), !dbg !9160
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !9165
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #27, !dbg !9167
  %11 = add nuw i32 %9, 1, !dbg !9168
  call void @llvm.dbg.value(metadata i32 %11, metadata !9149, metadata !DIExpression()), !dbg !9160
  %12 = icmp eq i32 %11, %1, !dbg !9161
  br i1 %12, label %13, label %8, !dbg !9164, !llvm.loop !9169

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !9171
  store i8 %14, i8* @static_regions_num, align 1, !dbg !9172
  tail call void @arm_core_mpu_enable() #27, !dbg !9173
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !9174
  %16 = and i32 %15, 65280, !dbg !9174
  %17 = icmp eq i32 %16, 2048, !dbg !9174
  br i1 %17, label %19, label %18, !dbg !9177

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 435) #26, !dbg !9178
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.120, i32 0, i32 0)) #26, !dbg !9178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.111, i32 0, i32 0), i32 noundef 435) #26, !dbg !9178
  unreachable, !dbg !9178

19:                                               ; preds = %13
  ret i32 0, !dbg !9180
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9181 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9188, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i8* %1, metadata !9189, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i8* %0, metadata !9190, metadata !DIExpression()), !dbg !9191
  %3 = load i8, i8* %1, align 1, !dbg !9192
  %4 = icmp eq i8 %3, 0, !dbg !9193
  br i1 %4, label %13, label %5, !dbg !9194

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9188, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.value(metadata i8* %8, metadata !9189, metadata !DIExpression()), !dbg !9191
  store i8 %6, i8* %7, align 1, !dbg !9195
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9197
  call void @llvm.dbg.value(metadata i8* %9, metadata !9188, metadata !DIExpression()), !dbg !9191
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9198
  call void @llvm.dbg.value(metadata i8* %10, metadata !9189, metadata !DIExpression()), !dbg !9191
  %11 = load i8, i8* %10, align 1, !dbg !9192
  %12 = icmp eq i8 %11, 0, !dbg !9193
  br i1 %12, label %13, label %5, !dbg !9194, !llvm.loop !9199

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9201
  ret i8* %0, !dbg !9202
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9203 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9207, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i8* %1, metadata !9208, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %2, metadata !9209, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i8* %0, metadata !9210, metadata !DIExpression()), !dbg !9211
  %4 = icmp eq i32 %2, 0, !dbg !9212
  br i1 %4, label %22, label %5, !dbg !9213

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9207, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %7, metadata !9209, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i8* %8, metadata !9208, metadata !DIExpression()), !dbg !9211
  %9 = load i8, i8* %8, align 1, !dbg !9214
  %10 = icmp eq i8 %9, 0, !dbg !9215
  br i1 %10, label %16, label %11, !dbg !9216

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9217
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9219
  call void @llvm.dbg.value(metadata i8* %12, metadata !9208, metadata !DIExpression()), !dbg !9211
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9220
  call void @llvm.dbg.value(metadata i8* %13, metadata !9207, metadata !DIExpression()), !dbg !9211
  %14 = add i32 %7, -1, !dbg !9221
  call void @llvm.dbg.value(metadata i32 %14, metadata !9209, metadata !DIExpression()), !dbg !9211
  %15 = icmp eq i32 %14, 0, !dbg !9212
  br i1 %15, label %22, label %5, !dbg !9213, !llvm.loop !9222

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9207, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %18, metadata !9209, metadata !DIExpression()), !dbg !9211
  store i8 0, i8* %17, align 1, !dbg !9224
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9226
  call void @llvm.dbg.value(metadata i8* %19, metadata !9207, metadata !DIExpression()), !dbg !9211
  %20 = add i32 %18, -1, !dbg !9227
  call void @llvm.dbg.value(metadata i32 %20, metadata !9209, metadata !DIExpression()), !dbg !9211
  %21 = icmp eq i32 %20, 0, !dbg !9228
  br i1 %21, label %22, label %16, !dbg !9229, !llvm.loop !9230

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9232
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !9233 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9237, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata i32 %1, metadata !9238, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.value(metadata i32 %1, metadata !9239, metadata !DIExpression()), !dbg !9240
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9241

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9237, metadata !DIExpression()), !dbg !9240
  %6 = load i8, i8* %5, align 1, !dbg !9242
  %7 = icmp eq i8 %6, %3, !dbg !9243
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9244
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9245
  call void @llvm.dbg.value(metadata i8* %10, metadata !9237, metadata !DIExpression()), !dbg !9240
  br i1 %9, label %11, label %4, !dbg !9244, !llvm.loop !9247

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9249
  ret i8* %12, !dbg !9250
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !9251 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9253, metadata !DIExpression()), !dbg !9256
  call void @llvm.dbg.value(metadata i32 %1, metadata !9254, metadata !DIExpression()), !dbg !9256
  call void @llvm.dbg.value(metadata i8* null, metadata !9255, metadata !DIExpression()), !dbg !9256
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9257

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9256
  call void @llvm.dbg.value(metadata i8* %6, metadata !9255, metadata !DIExpression()), !dbg !9256
  call void @llvm.dbg.value(metadata i8* %5, metadata !9253, metadata !DIExpression()), !dbg !9256
  %7 = load i8, i8* %5, align 1, !dbg !9258
  %8 = icmp eq i8 %7, %3, !dbg !9261
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9262
  call void @llvm.dbg.value(metadata i8* %9, metadata !9255, metadata !DIExpression()), !dbg !9256
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9263
  call void @llvm.dbg.value(metadata i8* %10, metadata !9253, metadata !DIExpression()), !dbg !9256
  %11 = icmp eq i8 %7, 0, !dbg !9264
  br i1 %11, label %12, label %4, !dbg !9264, !llvm.loop !9265

12:                                               ; preds = %4
  ret i8* %9, !dbg !9267
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !9268 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9272, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i32 0, metadata !9273, metadata !DIExpression()), !dbg !9274
  %2 = load i8, i8* %0, align 1, !dbg !9275
  %3 = icmp eq i8 %2, 0, !dbg !9276
  br i1 %3, label %11, label %4, !dbg !9277

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9273, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata i8* %6, metadata !9272, metadata !DIExpression()), !dbg !9274
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9278
  call void @llvm.dbg.value(metadata i8* %7, metadata !9272, metadata !DIExpression()), !dbg !9274
  %8 = add i32 %5, 1, !dbg !9280
  call void @llvm.dbg.value(metadata i32 %8, metadata !9273, metadata !DIExpression()), !dbg !9274
  %9 = load i8, i8* %7, align 1, !dbg !9275
  %10 = icmp eq i8 %9, 0, !dbg !9276
  br i1 %10, label %11, label %4, !dbg !9277, !llvm.loop !9281

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9274
  ret i32 %12, !dbg !9283
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !9284 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9288, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 %1, metadata !9289, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i32 0, metadata !9290, metadata !DIExpression()), !dbg !9291
  %3 = load i8, i8* %0, align 1, !dbg !9292
  %4 = icmp ne i8 %3, 0, !dbg !9293
  %5 = icmp ne i32 %1, 0, !dbg !9294
  %6 = and i1 %4, %5, !dbg !9294
  br i1 %6, label %7, label %16, !dbg !9295

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9290, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.value(metadata i8* %9, metadata !9288, metadata !DIExpression()), !dbg !9291
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9296
  call void @llvm.dbg.value(metadata i8* %10, metadata !9288, metadata !DIExpression()), !dbg !9291
  %11 = add nuw i32 %8, 1, !dbg !9298
  call void @llvm.dbg.value(metadata i32 %11, metadata !9290, metadata !DIExpression()), !dbg !9291
  %12 = load i8, i8* %10, align 1, !dbg !9292
  %13 = icmp ne i8 %12, 0, !dbg !9293
  %14 = icmp ult i32 %11, %1, !dbg !9294
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9294
  br i1 %15, label %7, label %16, !dbg !9295, !llvm.loop !9299

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9291
  ret i32 %17, !dbg !9301
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !9302 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9306, metadata !DIExpression()), !dbg !9308
  call void @llvm.dbg.value(metadata i8* %1, metadata !9307, metadata !DIExpression()), !dbg !9308
  %3 = load i8, i8* %0, align 1, !dbg !9309
  %4 = load i8, i8* %1, align 1, !dbg !9310
  %5 = icmp ne i8 %3, %4, !dbg !9311
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9312
  br i1 %7, label %18, label %8, !dbg !9312

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9307, metadata !DIExpression()), !dbg !9308
  call void @llvm.dbg.value(metadata i8* %10, metadata !9306, metadata !DIExpression()), !dbg !9308
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9313
  call void @llvm.dbg.value(metadata i8* %11, metadata !9306, metadata !DIExpression()), !dbg !9308
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9315
  call void @llvm.dbg.value(metadata i8* %12, metadata !9307, metadata !DIExpression()), !dbg !9308
  %13 = load i8, i8* %11, align 1, !dbg !9309
  %14 = load i8, i8* %12, align 1, !dbg !9310
  %15 = icmp ne i8 %13, %14, !dbg !9311
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9312
  br i1 %17, label %18, label %8, !dbg !9312, !llvm.loop !9316

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9309
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9310
  %21 = zext i8 %19 to i32, !dbg !9319
  %22 = zext i8 %20 to i32, !dbg !9320
  %23 = sub nsw i32 %21, %22, !dbg !9321
  ret i32 %23, !dbg !9322
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !9323 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9327, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i8* %1, metadata !9328, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 %2, metadata !9329, metadata !DIExpression()), !dbg !9330
  %4 = icmp eq i32 %2, 0, !dbg !9331
  br i1 %4, label %23, label %5, !dbg !9331

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9329, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i8* %7, metadata !9328, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i8* %8, metadata !9327, metadata !DIExpression()), !dbg !9330
  %9 = load i8, i8* %8, align 1, !dbg !9332
  %10 = load i8, i8* %7, align 1, !dbg !9333
  %11 = icmp ne i8 %9, %10, !dbg !9334
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9335
  br i1 %13, label %19, label %14, !dbg !9335

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9336
  call void @llvm.dbg.value(metadata i8* %15, metadata !9327, metadata !DIExpression()), !dbg !9330
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9338
  call void @llvm.dbg.value(metadata i8* %16, metadata !9328, metadata !DIExpression()), !dbg !9330
  %17 = add i32 %6, -1, !dbg !9339
  call void @llvm.dbg.value(metadata i32 %17, metadata !9329, metadata !DIExpression()), !dbg !9330
  %18 = icmp eq i32 %17, 0, !dbg !9331
  br i1 %18, label %23, label %5, !dbg !9331, !llvm.loop !9340

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9343
  %21 = zext i8 %10 to i32, !dbg !9344
  %22 = sub nsw i32 %20, %21, !dbg !9345
  br label %23, !dbg !9346

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9346
  ret i32 %24, !dbg !9347
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #15 !dbg !9348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9352, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i8* %1, metadata !9353, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i8** %2, metadata !9354, metadata !DIExpression()), !dbg !9357
  %4 = icmp eq i8* %0, null, !dbg !9358
  br i1 %4, label %5, label %7, !dbg !9358

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9359
  br label %7, !dbg !9358

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9358
  call void @llvm.dbg.value(metadata i8* %8, metadata !9355, metadata !DIExpression()), !dbg !9357
  %9 = load i8, i8* %8, align 1, !dbg !9360
  %10 = icmp eq i8 %9, 0, !dbg !9360
  br i1 %10, label %33, label %11, !dbg !9361

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9355, metadata !DIExpression()), !dbg !9357
  %14 = zext i8 %12 to i32, !dbg !9360
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #27, !dbg !9362
  %16 = icmp eq i8* %15, null, !dbg !9361
  br i1 %16, label %21, label %17, !dbg !9363

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9364
  call void @llvm.dbg.value(metadata i8* %18, metadata !9355, metadata !DIExpression()), !dbg !9357
  %19 = load i8, i8* %18, align 1, !dbg !9360
  %20 = icmp eq i8 %19, 0, !dbg !9360
  br i1 %20, label %33, label %11, !dbg !9361, !llvm.loop !9366

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9356, metadata !DIExpression()), !dbg !9357
  %24 = zext i8 %22 to i32, !dbg !9368
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #27, !dbg !9369
  %26 = icmp eq i8* %25, null, !dbg !9370
  br i1 %26, label %27, label %31, !dbg !9371

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9372
  call void @llvm.dbg.value(metadata i8* %28, metadata !9356, metadata !DIExpression()), !dbg !9357
  %29 = load i8, i8* %28, align 1, !dbg !9368
  %30 = icmp eq i8 %29, 0, !dbg !9368
  br i1 %30, label %33, label %21, !dbg !9374, !llvm.loop !9375

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9377
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9380
  br label %33, !dbg !9381

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9357
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9357
  store i8* %34, i8** %2, align 4, !dbg !9357
  ret i8* %35, !dbg !9382
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !9383 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9385, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.value(metadata i8* %1, metadata !9386, metadata !DIExpression()), !dbg !9387
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9388
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9389
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #27, !dbg !9390
  ret i8* %0, !dbg !9391
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9392 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9394, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i8* %1, metadata !9395, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i32 %2, metadata !9396, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i8* %0, metadata !9397, metadata !DIExpression()), !dbg !9399
  %4 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !9400
  call void @llvm.dbg.value(metadata i32 %4, metadata !9398, metadata !DIExpression()), !dbg !9399
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9401
  call void @llvm.dbg.value(metadata i8* %5, metadata !9394, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i8* %1, metadata !9395, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i32 %2, metadata !9396, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i32 %2, metadata !9396, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9399
  %6 = icmp eq i32 %2, 0, !dbg !9402
  br i1 %6, label %18, label %7, !dbg !9403

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9404
  call void @llvm.dbg.value(metadata i8* %9, metadata !9394, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i8* %10, metadata !9395, metadata !DIExpression()), !dbg !9399
  %12 = load i8, i8* %10, align 1, !dbg !9405
  %13 = icmp eq i8 %12, 0, !dbg !9406
  br i1 %13, label %18, label %14, !dbg !9407

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9408
  call void @llvm.dbg.value(metadata i8* %15, metadata !9395, metadata !DIExpression()), !dbg !9399
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9410
  call void @llvm.dbg.value(metadata i8* %16, metadata !9394, metadata !DIExpression()), !dbg !9399
  store i8 %12, i8* %9, align 1, !dbg !9411
  call void @llvm.dbg.value(metadata i32 %11, metadata !9396, metadata !DIExpression()), !dbg !9399
  call void @llvm.dbg.value(metadata i32 %11, metadata !9396, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9399
  %17 = icmp eq i32 %11, 0, !dbg !9402
  br i1 %17, label %18, label %7, !dbg !9403, !llvm.loop !9412

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9399
  store i8 0, i8* %19, align 1, !dbg !9414
  ret i8* %0, !dbg !9415
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !9416 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9420, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.value(metadata i8* %1, metadata !9421, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.value(metadata i32 %2, metadata !9422, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.value(metadata i8* %0, metadata !9423, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.value(metadata i8* %1, metadata !9424, metadata !DIExpression()), !dbg !9425
  %4 = icmp eq i32 %2, 0, !dbg !9426
  br i1 %4, label %31, label %5, !dbg !9428

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9424, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.value(metadata i8* %0, metadata !9423, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.value(metadata i32 %2, metadata !9422, metadata !DIExpression()), !dbg !9425
  %6 = add i32 %2, -1, !dbg !9429
  call void @llvm.dbg.value(metadata i32 %6, metadata !9422, metadata !DIExpression()), !dbg !9425
  %7 = icmp eq i32 %6, 0, !dbg !9430
  br i1 %7, label %23, label %8, !dbg !9431

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9432
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9432
  br label %11, !dbg !9432

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9424, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.value(metadata i8* %14, metadata !9423, metadata !DIExpression()), !dbg !9425
  %15 = load i8, i8* %14, align 1, !dbg !9433
  %16 = load i8, i8* %13, align 1, !dbg !9434
  %17 = icmp eq i8 %15, %16, !dbg !9435
  br i1 %17, label %18, label %23, !dbg !9432

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9436
  call void @llvm.dbg.value(metadata i8* %19, metadata !9423, metadata !DIExpression()), !dbg !9425
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9438
  call void @llvm.dbg.value(metadata i8* %20, metadata !9424, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.value(metadata i32 %12, metadata !9422, metadata !DIExpression()), !dbg !9425
  %21 = add i32 %12, -1, !dbg !9429
  call void @llvm.dbg.value(metadata i32 %21, metadata !9422, metadata !DIExpression()), !dbg !9425
  %22 = icmp eq i32 %21, 0, !dbg !9430
  br i1 %22, label %23, label %11, !dbg !9431, !llvm.loop !9439

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9425
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9425
  %26 = load i8, i8* %24, align 1, !dbg !9441
  %27 = zext i8 %26 to i32, !dbg !9441
  %28 = load i8, i8* %25, align 1, !dbg !9442
  %29 = zext i8 %28 to i32, !dbg !9442
  %30 = sub nsw i32 %27, %29, !dbg !9443
  br label %31, !dbg !9444

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9425
  ret i32 %32, !dbg !9445
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9446 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9450, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i8* %1, metadata !9451, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i32 %2, metadata !9452, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i8* %0, metadata !9453, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i8* %1, metadata !9454, metadata !DIExpression()), !dbg !9455
  %4 = ptrtoint i8* %0 to i32, !dbg !9456
  %5 = ptrtoint i8* %1 to i32, !dbg !9456
  %6 = sub i32 %4, %5, !dbg !9456
  %7 = icmp ult i32 %6, %2, !dbg !9458
  br i1 %7, label %10, label %8, !dbg !9459

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9454, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i8* %0, metadata !9453, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i32 %2, metadata !9452, metadata !DIExpression()), !dbg !9455
  %9 = icmp eq i32 %2, 0, !dbg !9460
  br i1 %9, label %26, label %17, !dbg !9462

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9452, metadata !DIExpression()), !dbg !9455
  %12 = add i32 %11, -1, !dbg !9463
  call void @llvm.dbg.value(metadata i32 %12, metadata !9452, metadata !DIExpression()), !dbg !9455
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9466
  %14 = load i8, i8* %13, align 1, !dbg !9466
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9467
  store i8 %14, i8* %15, align 1, !dbg !9468
  %16 = icmp eq i32 %12, 0, !dbg !9469
  br i1 %16, label %26, label %10, !dbg !9470, !llvm.loop !9471

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9454, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i8* %19, metadata !9453, metadata !DIExpression()), !dbg !9455
  call void @llvm.dbg.value(metadata i32 %20, metadata !9452, metadata !DIExpression()), !dbg !9455
  %21 = load i8, i8* %18, align 1, !dbg !9473
  store i8 %21, i8* %19, align 1, !dbg !9475
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9476
  call void @llvm.dbg.value(metadata i8* %22, metadata !9453, metadata !DIExpression()), !dbg !9455
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9477
  call void @llvm.dbg.value(metadata i8* %23, metadata !9454, metadata !DIExpression()), !dbg !9455
  %24 = add i32 %20, -1, !dbg !9478
  call void @llvm.dbg.value(metadata i32 %24, metadata !9452, metadata !DIExpression()), !dbg !9455
  %25 = icmp eq i32 %24, 0, !dbg !9460
  br i1 %25, label %26, label %17, !dbg !9462, !llvm.loop !9479

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9481
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #15 !dbg !9482 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9488, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i8* %1, metadata !9489, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i32 %2, metadata !9490, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i8* %0, metadata !9491, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i8* %1, metadata !9492, metadata !DIExpression()), !dbg !9493
  %4 = icmp eq i32 %2, 0, !dbg !9494
  br i1 %4, label %14, label %5, !dbg !9495

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9492, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i8* %7, metadata !9491, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i32 %8, metadata !9490, metadata !DIExpression()), !dbg !9493
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9496
  call void @llvm.dbg.value(metadata i8* %9, metadata !9492, metadata !DIExpression()), !dbg !9493
  %10 = load i8, i8* %6, align 1, !dbg !9498
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9499
  call void @llvm.dbg.value(metadata i8* %11, metadata !9491, metadata !DIExpression()), !dbg !9493
  store i8 %10, i8* %7, align 1, !dbg !9500
  %12 = add i32 %8, -1, !dbg !9501
  call void @llvm.dbg.value(metadata i32 %12, metadata !9490, metadata !DIExpression()), !dbg !9493
  %13 = icmp eq i32 %12, 0, !dbg !9494
  br i1 %13, label %14, label %5, !dbg !9495, !llvm.loop !9502

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9504
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9505 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9509, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i32 %1, metadata !9510, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i32 %2, metadata !9511, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i8* %0, metadata !9512, metadata !DIExpression()), !dbg !9514
  %4 = trunc i32 %1 to i8, !dbg !9515
  call void @llvm.dbg.value(metadata i8 %4, metadata !9513, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i32 %2, metadata !9511, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i8* %0, metadata !9512, metadata !DIExpression()), !dbg !9514
  %5 = icmp eq i32 %2, 0, !dbg !9516
  br i1 %5, label %12, label %6, !dbg !9517

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9511, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata i8* %8, metadata !9512, metadata !DIExpression()), !dbg !9514
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9518
  call void @llvm.dbg.value(metadata i8* %9, metadata !9512, metadata !DIExpression()), !dbg !9514
  store i8 %4, i8* %8, align 1, !dbg !9520
  %10 = add i32 %7, -1, !dbg !9521
  call void @llvm.dbg.value(metadata i32 %10, metadata !9511, metadata !DIExpression()), !dbg !9514
  %11 = icmp eq i32 %10, 0, !dbg !9516
  br i1 %11, label %12, label %6, !dbg !9517, !llvm.loop !9522

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9524
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !9525 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9529, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.value(metadata i32 %1, metadata !9530, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.value(metadata i32 %2, metadata !9531, metadata !DIExpression()), !dbg !9535
  %4 = icmp eq i32 %2, 0, !dbg !9536
  br i1 %4, label %17, label %5, !dbg !9537

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !9538

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !9539
  call void @llvm.dbg.value(metadata i8* %9, metadata !9532, metadata !DIExpression()), !dbg !9539
  call void @llvm.dbg.value(metadata i32 %8, metadata !9531, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.value(metadata i8* %9, metadata !9532, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9539
  %10 = load i8, i8* %9, align 1, !dbg !9540
  %11 = icmp eq i8 %10, %6, !dbg !9543
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !9544
  call void @llvm.dbg.value(metadata i8* %12, metadata !9532, metadata !DIExpression()), !dbg !9539
  call void @llvm.dbg.value(metadata i32 %13, metadata !9531, metadata !DIExpression()), !dbg !9535
  br i1 %15, label %16, label %7, !dbg !9544, !llvm.loop !9545

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !9547

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9535
  ret i8* %19, !dbg !9548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !9549 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !9551, metadata !DIExpression()), !dbg !9552
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !9553
  ret void, !dbg !9554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !9555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9557, metadata !DIExpression()), !dbg !9558
  ret i32 -1, !dbg !9559
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9560 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9564, metadata !DIExpression()), !dbg !9566
  call void @llvm.dbg.value(metadata i32* %1, metadata !9565, metadata !DIExpression()), !dbg !9566
  %3 = ptrtoint i32* %1 to i32, !dbg !9567
  %4 = and i32 %3, -2, !dbg !9567
  %5 = icmp eq i32 %4, 2, !dbg !9567
  br i1 %5, label %6, label %9, !dbg !9567

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9568
  %8 = tail call i32 %7(i32 noundef %0) #26, !dbg !9568
  br label %9, !dbg !9569

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !9569
  ret i32 %10, !dbg !9570
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !9571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9573, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.value(metadata i32* %1, metadata !9574, metadata !DIExpression()), !dbg !9575
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9576
  ret i32 %3, !dbg !9577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !9578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9581, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32* %1, metadata !9582, metadata !DIExpression()), !dbg !9583
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9584, !srcloc !9586
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #27, !dbg !9587
  ret i32 %3, !dbg !9588
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !9589 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9594, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.value(metadata i32* %1, metadata !9595, metadata !DIExpression()), !dbg !9598
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9599
  call void @llvm.dbg.value(metadata i32 %3, metadata !9596, metadata !DIExpression()), !dbg !9598
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #27, !dbg !9600
  call void @llvm.dbg.value(metadata i32 %4, metadata !9597, metadata !DIExpression()), !dbg !9598
  %5 = icmp ne i32 %3, %4, !dbg !9601
  %6 = sext i1 %5 to i32, !dbg !9602
  ret i32 %6, !dbg !9603
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !9604 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9608, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i32 %1, metadata !9609, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i32 %2, metadata !9610, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.value(metadata i32* %3, metadata !9611, metadata !DIExpression()), !dbg !9612
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9613
  ret i32 %5, !dbg !9614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !9615 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9617, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata i32 %1, metadata !9618, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata i32 %2, metadata !9619, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata i32* %3, metadata !9620, metadata !DIExpression()), !dbg !9621
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9622, !srcloc !9624
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #27, !dbg !9625
  ret i32 %5, !dbg !9626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !9627 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9629, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 %1, metadata !9630, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 %2, metadata !9631, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32* %3, metadata !9632, metadata !DIExpression()), !dbg !9637
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !9638
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !9640
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !9640
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !9640
  br i1 %11, label %33, label %12, !dbg !9640

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !9637
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !9637
  call void @llvm.dbg.value(metadata i8* %14, metadata !9635, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 %13, metadata !9633, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 %1, metadata !9634, metadata !DIExpression()), !dbg !9637
  br label %15, !dbg !9641

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !9643
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !9637
  call void @llvm.dbg.value(metadata i8* %17, metadata !9635, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 %16, metadata !9634, metadata !DIExpression()), !dbg !9637
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !9644
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9647
  call void @llvm.dbg.value(metadata i8* %19, metadata !9635, metadata !DIExpression()), !dbg !9637
  %20 = load i8, i8* %17, align 1, !dbg !9648
  %21 = zext i8 %20 to i32, !dbg !9649
  %22 = tail call i32 %18(i32 noundef %21) #26, !dbg !9644
  %23 = icmp eq i32 %22, -1, !dbg !9650
  br i1 %23, label %30, label %24, !dbg !9651

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !9652
  call void @llvm.dbg.value(metadata i32 %25, metadata !9634, metadata !DIExpression()), !dbg !9637
  %26 = icmp eq i32 %25, 0, !dbg !9653
  br i1 %26, label %27, label %15, !dbg !9654, !llvm.loop !9655

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !9657
  call void @llvm.dbg.value(metadata i32 %28, metadata !9633, metadata !DIExpression()), !dbg !9637
  %29 = icmp eq i32 %28, 0, !dbg !9658
  br i1 %29, label %30, label %12, !dbg !9659, !llvm.loop !9660

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !9637
  call void @llvm.dbg.value(metadata i32 %31, metadata !9633, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.label(metadata !9636), !dbg !9663
  %32 = sub i32 %2, %31, !dbg !9664
  br label %33, !dbg !9665

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !9637
  ret i32 %34, !dbg !9666
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !9667 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9671, metadata !DIExpression()), !dbg !9672
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9673
  %3 = icmp eq i32 %2, -1, !dbg !9675
  br i1 %3, label %8, label %4, !dbg !9676

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #27, !dbg !9677
  %6 = icmp eq i32 %5, -1, !dbg !9678
  %7 = sext i1 %6 to i32, !dbg !9677
  br label %8, !dbg !9679

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !9672
  ret i32 %9, !dbg !9680
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9681 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9683, metadata !DIExpression()), !dbg !9694
  %8 = bitcast i64* %2 to i8*, !dbg !9695
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #25, !dbg !9695
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !9684, metadata !DIExpression()), !dbg !9696
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !9696
  store i64 %9, i64* %2, align 8, !dbg !9696
  %10 = bitcast i64* %4 to i8*, !dbg !9697
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #25, !dbg !9697
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !9692, metadata !DIExpression()), !dbg !9698
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !9698
  store i64 %11, i64* %4, align 8, !dbg !9698
  %12 = bitcast i64* %6 to i8*, !dbg !9699
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #25, !dbg !9699
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !9693, metadata !DIExpression()), !dbg !9700
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !9700
  store i64 %13, i64* %6, align 8, !dbg !9700
  %14 = trunc i64 %9 to i32, !dbg !9701
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !9701
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #27, !dbg !9703
  %17 = trunc i64 %13 to i32, !dbg !9704
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !9704
  br i1 %16, label %19, label %26, !dbg !9704

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !9704
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !9704
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #27, !dbg !9705
  br i1 %22, label %23, label %26, !dbg !9706

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #27, !dbg !9707
  br i1 %24, label %25, label %26, !dbg !9708

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #27, !dbg !9709
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #27, !dbg !9710
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #27, !dbg !9711
  br label %26, !dbg !9712

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !9694
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #25, !dbg !9713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #25, !dbg !9713
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #25, !dbg !9713
  ret i32 %27, !dbg !9713
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !9714 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9719, metadata !DIExpression()), !dbg !9720
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9721, !srcloc !9723
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #27, !dbg !9724
  ret i1 %2, !dbg !9725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9726 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !9731, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.value(metadata i32 %1, metadata !9732, metadata !DIExpression()), !dbg !9733
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !9734
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !9734
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !9735
  %6 = load i8, i8* %5, align 4, !dbg !9735
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !9736
  %8 = load i16, i16* %7, align 2, !dbg !9736
  %9 = zext i16 %8 to i32, !dbg !9737
  %10 = or i32 %9, %1, !dbg !9738
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #27, !dbg !9739
  ret void, !dbg !9740
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !9741 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9744, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata i8 %1, metadata !9745, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.value(metadata i32 %2, metadata !9746, metadata !DIExpression()), !dbg !9747
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9748, !srcloc !9750
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #27, !dbg !9751
  ret void, !dbg !9752
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !9753 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9755, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i8 %1, metadata !9756, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i32 %2, metadata !9757, metadata !DIExpression()), !dbg !9762
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9763
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !9763
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !9763
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !9758, metadata !DIExpression()), !dbg !9762
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9764
  %8 = bitcast i8** %7 to %struct.k_spinlock**, !dbg !9764
  %9 = load %struct.k_spinlock*, %struct.k_spinlock** %8, align 4, !dbg !9764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !9759, metadata !DIExpression()), !dbg !9762
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9765
  %11 = bitcast i8** %10 to %struct.k_spinlock**, !dbg !9765
  %12 = load %struct.k_spinlock*, %struct.k_spinlock** %11, align 4, !dbg !9765
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %12, metadata !9761, metadata !DIExpression()), !dbg !9762
  %13 = and i32 %2, 132120576, !dbg !9766
  %14 = icmp eq i32 %13, 0, !dbg !9766
  br i1 %14, label %16, label %15, !dbg !9769

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12.135, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 679) #26, !dbg !9770
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.137, i32 0, i32 0)) #26, !dbg !9770
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 679) #26, !dbg !9770
  unreachable, !dbg !9770

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !9772
  %18 = icmp eq i32 %17, 48, !dbg !9772
  br i1 %18, label %19, label %20, !dbg !9775

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.138, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 683) #26, !dbg !9776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15.139, i32 0, i32 0)) #26, !dbg !9776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 683) #26, !dbg !9776
  unreachable, !dbg !9776

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !9778
  %22 = icmp ne i32 %21, 0, !dbg !9778
  %23 = and i32 %2, 131074, !dbg !9778
  %24 = icmp eq i32 %23, 2, !dbg !9778
  br i1 %24, label %25, label %26, !dbg !9778

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16.140, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 687) #26, !dbg !9781
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.17.141, i32 0, i32 0)) #26, !dbg !9781
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 687) #26, !dbg !9781
  unreachable, !dbg !9781

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !9783
  %28 = icmp eq i32 %27, 4, !dbg !9783
  br i1 %28, label %29, label %30, !dbg !9783

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.142, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 690) #26, !dbg !9786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 690) #26, !dbg !9786
  unreachable, !dbg !9786

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !9788
  %32 = icmp eq i32 %31, 0, !dbg !9788
  %33 = or i1 %32, %22, !dbg !9788
  br i1 %33, label %35, label %34, !dbg !9788

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 694) #26, !dbg !9791
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.144, i32 0, i32 0)) #26, !dbg !9791
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 694) #26, !dbg !9791
  unreachable, !dbg !9791

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !9793
  br i1 %36, label %37, label %38, !dbg !9796

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.21.145, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 698) #26, !dbg !9797
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22.146, i32 0, i32 0)) #26, !dbg !9797
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 698) #26, !dbg !9797
  unreachable, !dbg !9797

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !9799
  %40 = icmp ne i32 %39, 1048577, !dbg !9799
  %41 = or i1 %40, %32, !dbg !9799
  %42 = xor i32 %2, 786432, !dbg !9799
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !9799
  call void @llvm.dbg.value(metadata i32 %43, metadata !9757, metadata !DIExpression()), !dbg !9762
  call void @llvm.dbg.value(metadata i32 %43, metadata !9757, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !9762
  %44 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %9, i32 0, i32 0, !dbg !9801
  %45 = load i32, i32* %44, align 4, !dbg !9801
  %46 = zext i8 %1 to i32, !dbg !9801
  %47 = shl nuw i32 1, %46, !dbg !9801
  %48 = and i32 %45, %47, !dbg !9801
  %49 = icmp eq i32 %48, 0, !dbg !9801
  br i1 %49, label %50, label %51, !dbg !9804

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.134, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 709) #26, !dbg !9805
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.148, i32 0, i32 0)) #26, !dbg !9805
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.136, i32 0, i32 0), i32 noundef 709) #26, !dbg !9805
  unreachable, !dbg !9805

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !9807
  %53 = icmp eq i32 %52, 0, !dbg !9809
  br i1 %53, label %58, label %54, !dbg !9810

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !9811
  %56 = load i32, i32* %55, align 4, !dbg !9813
  %57 = or i32 %56, %47, !dbg !9813
  store i32 %57, i32* %55, align 4, !dbg !9813
  br label %63, !dbg !9814

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !9815
  %60 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !9817
  %61 = load i32, i32* %60, align 4, !dbg !9818
  %62 = and i32 %61, %59, !dbg !9818
  store i32 %62, i32* %60, align 4, !dbg !9818
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !9819
  call void @llvm.dbg.value(metadata i32 %64, metadata !9757, metadata !DIExpression()), !dbg !9762
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !9820
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !9820
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #26, !dbg !9821
  ret void, !dbg !9822
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !9823 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9825, metadata !DIExpression()), !dbg !9826
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !9827
  ret i1 %2, !dbg !9828
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_zbus_timeout_remainder(%union.argument_value* noalias nocapture writeonly sret(%union.argument_value) align 8 %0, i64 noundef %1) local_unnamed_addr #1 !dbg !9829 {
  call void @llvm.dbg.value(metadata i64 %1, metadata !9837, metadata !DIExpression()), !dbg !9839
  %3 = tail call i64 @sys_clock_tick_get() #26, !dbg !9840
  call void @llvm.dbg.value(metadata i64 %3, metadata !9838, metadata !DIExpression()), !dbg !9839
  %4 = getelementptr inbounds %union.argument_value, %union.argument_value* %0, i32 0, i32 0, !dbg !9841
  %5 = sub i64 %1, %3, !dbg !9841
  store i64 %5, i64* %4, align 8, !dbg !9841
  ret void, !dbg !9842
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_pub(%struct.zbus_channel.158* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !9843 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !9996, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158* %0, metadata !9994, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.value(metadata i8* %1, metadata !9995, metadata !DIExpression()), !dbg !9999
  %4 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %2) #26, !dbg !10000
  call void @llvm.dbg.value(metadata i64 %4, metadata !9998, metadata !DIExpression()), !dbg !9999
  %5 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10001
  br i1 %5, label %6, label %7, !dbg !10004

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 108) #26, !dbg !10005
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.156, i32 0, i32 0)) #26, !dbg !10005
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 108) #26, !dbg !10005
  unreachable, !dbg !10005

7:                                                ; preds = %3
  %8 = icmp eq %struct.zbus_channel.158* %0, null, !dbg !10007
  br i1 %8, label %9, label %10, !dbg !10010

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 109) #26, !dbg !10011
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.158, i32 0, i32 0)) #26, !dbg !10011
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 109) #26, !dbg !10011
  unreachable, !dbg !10011

10:                                               ; preds = %7
  %11 = icmp eq i8* %1, null, !dbg !10013
  br i1 %11, label %12, label %13, !dbg !10016

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 110) #26, !dbg !10017
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.160, i32 0, i32 0)) #26, !dbg !10017
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 110) #26, !dbg !10017
  unreachable, !dbg !10017

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 4, !dbg !10019
  %15 = load i1 (i8*, i32)*, i1 (i8*, i32)** %14, align 4, !dbg !10019
  %16 = icmp eq i1 (i8*, i32)* %15, null, !dbg !10021
  br i1 %16, label %22, label %17, !dbg !10022

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 1, !dbg !10023
  %19 = load i16, i16* %18, align 4, !dbg !10023
  %20 = zext i16 %19 to i32, !dbg !10024
  %21 = tail call zeroext i1 %15(i8* noundef nonnull %1, i32 noundef %20) #26, !dbg !10025
  br i1 %21, label %22, label %36, !dbg !10026

22:                                               ; preds = %17, %13
  %23 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 5, !dbg !10027
  %24 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !10027
  %25 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %24, [1 x i64] %2) #27, !dbg !10028
  call void @llvm.dbg.value(metadata i32 %25, metadata !9997, metadata !DIExpression()), !dbg !9999
  %26 = icmp eq i32 %25, 0, !dbg !10029
  br i1 %26, label %27, label %36, !dbg !10031

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 3, !dbg !10032
  %29 = load i8*, i8** %28, align 4, !dbg !10032
  %30 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 1, !dbg !10033
  %31 = load i16, i16* %30, align 4, !dbg !10033
  %32 = zext i16 %31 to i32, !dbg !10034
  %33 = tail call i8* @memcpy(i8* noundef %29, i8* noundef nonnull %1, i32 noundef %32) #26, !dbg !10035
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.158* noundef nonnull %0, i64 noundef %4) #27, !dbg !10036
  call void @llvm.dbg.value(metadata i32 0, metadata !9997, metadata !DIExpression()), !dbg !9999
  %34 = load %struct.k_mutex*, %struct.k_mutex** %23, align 4, !dbg !10037
  %35 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %34) #27, !dbg !10038
  br label %36, !dbg !10039

36:                                               ; preds = %22, %17, %27
  %37 = phi i32 [ 0, %27 ], [ -35, %17 ], [ %25, %22 ], !dbg !9999
  ret i32 %37, !dbg !10040
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !10041 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10046, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10045, metadata !DIExpression()), !dbg !10047
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10048, !srcloc !10050
  %3 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) #26, !dbg !10051
  ret i32 %3, !dbg !10052
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @_zbus_notify_observers(%struct.zbus_channel.158* noundef %0, i64 noundef %1) unnamed_addr #1 !dbg !10053 {
  %3 = alloca %struct.zbus_channel.158*, align 4
  %4 = alloca %union.argument_value, align 8
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158* %0, metadata !10057, metadata !DIExpression()), !dbg !10065
  store %struct.zbus_channel.158* %0, %struct.zbus_channel.158** %3, align 4
  call void @llvm.dbg.value(metadata i64 %1, metadata !10058, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.value(metadata i32 0, metadata !10059, metadata !DIExpression()), !dbg !10065
  %5 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 6, !dbg !10066
  %6 = load %struct.zbus_observer.157**, %struct.zbus_observer.157*** %5, align 4, !dbg !10066
  call void @llvm.dbg.value(metadata %struct.zbus_observer.157** %6, metadata !10061, metadata !DIExpression()), !dbg !10067
  %7 = load %struct.zbus_observer.157*, %struct.zbus_observer.157** %6, align 4, !dbg !10068
  %8 = icmp eq %struct.zbus_observer.157* %7, null, !dbg !10070
  br i1 %8, label %31, label %16, !dbg !10071

9:                                                ; preds = %27
  %10 = load %struct.zbus_observer.157**, %struct.zbus_observer.157*** %5, align 4, !dbg !10072
  %11 = load %struct.zbus_observer.157*, %struct.zbus_observer.157** %10, align 4, !dbg !10073
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158* %0, metadata !10057, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.value(metadata %struct.zbus_observer.157** %10, metadata !10063, metadata !DIExpression()), !dbg !10075
  call void @llvm.dbg.value(metadata i32 0, metadata !10059, metadata !DIExpression()), !dbg !10065
  %12 = icmp eq %struct.zbus_observer.157* %11, null, !dbg !10076
  br i1 %12, label %31, label %13, !dbg !10077

13:                                               ; preds = %9
  %14 = bitcast %struct.zbus_channel.158** %3 to i8*
  %15 = getelementptr inbounds %union.argument_value, %union.argument_value* %4, i32 0, i32 0
  br label %32, !dbg !10077

16:                                               ; preds = %2, %27
  %17 = phi %struct.zbus_observer.157* [ %29, %27 ], [ %7, %2 ]
  %18 = phi %struct.zbus_observer.157** [ %28, %27 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.157** %18, metadata !10061, metadata !DIExpression()), !dbg !10067
  %19 = getelementptr inbounds %struct.zbus_observer.157, %struct.zbus_observer.157* %17, i32 0, i32 0, !dbg !10078
  %20 = load i8, i8* %19, align 4, !dbg !10078, !range !8168
  %21 = icmp eq i8 %20, 0, !dbg !10078
  br i1 %21, label %27, label %22, !dbg !10081

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.zbus_observer.157, %struct.zbus_observer.157* %17, i32 0, i32 2, !dbg !10082
  %24 = load void (%struct.zbus_channel.158*)*, void (%struct.zbus_channel.158*)** %23, align 4, !dbg !10082
  %25 = icmp eq void (%struct.zbus_channel.158*)* %24, null, !dbg !10083
  br i1 %25, label %27, label %26, !dbg !10084

26:                                               ; preds = %22
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158* %0, metadata !10057, metadata !DIExpression()), !dbg !10065
  tail call void %24(%struct.zbus_channel.158* noundef %0) #26, !dbg !10085
  br label %27, !dbg !10087

27:                                               ; preds = %16, %22, %26
  %28 = getelementptr inbounds %struct.zbus_observer.157*, %struct.zbus_observer.157** %18, i32 1, !dbg !10088
  call void @llvm.dbg.value(metadata %struct.zbus_observer.157** %28, metadata !10061, metadata !DIExpression()), !dbg !10067
  %29 = load %struct.zbus_observer.157*, %struct.zbus_observer.157** %28, align 4, !dbg !10068
  %30 = icmp eq %struct.zbus_observer.157* %29, null, !dbg !10070
  br i1 %30, label %9, label %16, !dbg !10071, !llvm.loop !10089

31:                                               ; preds = %48, %2, %9
  ret void, !dbg !10091

32:                                               ; preds = %13, %48
  %33 = phi %struct.zbus_observer.157* [ %11, %13 ], [ %50, %48 ]
  %34 = phi %struct.zbus_observer.157** [ %10, %13 ], [ %49, %48 ]
  call void @llvm.dbg.value(metadata %struct.zbus_observer.157** %34, metadata !10063, metadata !DIExpression()), !dbg !10075
  %35 = getelementptr inbounds %struct.zbus_observer.157, %struct.zbus_observer.157* %33, i32 0, i32 0, !dbg !10092
  %36 = load i8, i8* %35, align 4, !dbg !10092, !range !8168
  %37 = icmp eq i8 %36, 0, !dbg !10092
  br i1 %37, label %48, label %38, !dbg !10095

38:                                               ; preds = %32
  %39 = getelementptr inbounds %struct.zbus_observer.157, %struct.zbus_observer.157* %33, i32 0, i32 1, !dbg !10096
  %40 = load %struct.k_msgq*, %struct.k_msgq** %39, align 4, !dbg !10096
  %41 = icmp eq %struct.k_msgq* %40, null, !dbg !10097
  br i1 %41, label %48, label %42, !dbg !10098

42:                                               ; preds = %38
  call void @_zbus_timeout_remainder(%union.argument_value* nonnull sret(%union.argument_value) align 8 %4, i64 noundef %1) #27, !dbg !10099
  %43 = load i64, i64* %15, align 8, !dbg !10101
  %44 = insertvalue [1 x i64] poison, i64 %43, 0, !dbg !10101
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158** %3, metadata !10057, metadata !DIExpression(DW_OP_deref)), !dbg !10065
  %45 = call fastcc i32 @k_msgq_put(%struct.k_msgq* noundef nonnull %40, i8* noundef nonnull %14, [1 x i64] %44) #27, !dbg !10101
  call void @llvm.dbg.value(metadata i32 %45, metadata !10060, metadata !DIExpression()), !dbg !10065
  %46 = icmp eq i32 %45, 0, !dbg !10102
  br i1 %46, label %48, label %47, !dbg !10105

47:                                               ; preds = %42
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 85) #26, !dbg !10106
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.162, i32 0, i32 0), i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.13.163, i32 0, i32 0)) #26, !dbg !10106
  call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 85) #26, !dbg !10106
  unreachable, !dbg !10106

48:                                               ; preds = %42, %32, %38
  call void @llvm.dbg.value(metadata i32 0, metadata !10059, metadata !DIExpression()), !dbg !10065
  %49 = getelementptr inbounds %struct.zbus_observer.157*, %struct.zbus_observer.157** %34, i32 1, !dbg !10108
  call void @llvm.dbg.value(metadata %struct.zbus_observer.157** %49, metadata !10063, metadata !DIExpression()), !dbg !10075
  %50 = load %struct.zbus_observer.157*, %struct.zbus_observer.157** %49, align 4, !dbg !10073
  %51 = icmp eq %struct.zbus_observer.157* %50, null, !dbg !10076
  br i1 %51, label %31, label %32, !dbg !10077, !llvm.loop !10109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !10111 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !10115, metadata !DIExpression()), !dbg !10116
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10117, !srcloc !10119
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !10120
  ret i32 %2, !dbg !10121
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10122 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10128, metadata !DIExpression()), !dbg !10129
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10126, metadata !DIExpression()), !dbg !10129
  call void @llvm.dbg.value(metadata i8* %1, metadata !10127, metadata !DIExpression()), !dbg !10129
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10130, !srcloc !10132
  %4 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10133
  ret i32 %4, !dbg !10134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_read(%struct.zbus_channel.158* noundef readonly %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10135 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10141, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158* %0, metadata !10139, metadata !DIExpression()), !dbg !10143
  call void @llvm.dbg.value(metadata i8* %1, metadata !10140, metadata !DIExpression()), !dbg !10143
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10144
  br i1 %4, label %5, label %6, !dbg !10147

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 134) #26, !dbg !10148
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.156, i32 0, i32 0)) #26, !dbg !10148
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 134) #26, !dbg !10148
  unreachable, !dbg !10148

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_channel.158* %0, null, !dbg !10150
  br i1 %7, label %8, label %9, !dbg !10153

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 135) #26, !dbg !10154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.158, i32 0, i32 0)) #26, !dbg !10154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 135) #26, !dbg !10154
  unreachable, !dbg !10154

9:                                                ; preds = %6
  %10 = icmp eq i8* %1, null, !dbg !10156
  br i1 %10, label %11, label %12, !dbg !10159

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 136) #26, !dbg !10160
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.160, i32 0, i32 0)) #26, !dbg !10160
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 136) #26, !dbg !10160
  unreachable, !dbg !10160

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 5, !dbg !10162
  %14 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10162
  %15 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %14, [1 x i64] %2) #27, !dbg !10163
  call void @llvm.dbg.value(metadata i32 %15, metadata !10142, metadata !DIExpression()), !dbg !10143
  %16 = icmp eq i32 %15, 0, !dbg !10164
  br i1 %16, label %17, label %26, !dbg !10166

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 3, !dbg !10167
  %19 = load i8*, i8** %18, align 4, !dbg !10167
  %20 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 1, !dbg !10168
  %21 = load i16, i16* %20, align 4, !dbg !10168
  %22 = zext i16 %21 to i32, !dbg !10169
  %23 = tail call i8* @memcpy(i8* noundef nonnull %1, i8* noundef %19, i32 noundef %22) #26, !dbg !10170
  %24 = load %struct.k_mutex*, %struct.k_mutex** %13, align 4, !dbg !10171
  %25 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %24) #27, !dbg !10172
  br label %26, !dbg !10173

26:                                               ; preds = %12, %17
  %27 = phi i32 [ %25, %17 ], [ %15, %12 ], !dbg !10143
  ret i32 %27, !dbg !10174
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_notify(%struct.zbus_channel.158* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10175 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10180, metadata !DIExpression()), !dbg !10183
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158* %0, metadata !10179, metadata !DIExpression()), !dbg !10183
  %3 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %1) #26, !dbg !10184
  call void @llvm.dbg.value(metadata i64 %3, metadata !10182, metadata !DIExpression()), !dbg !10183
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10185
  br i1 %4, label %5, label %6, !dbg !10188

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 153) #26, !dbg !10189
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.156, i32 0, i32 0)) #26, !dbg !10189
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 153) #26, !dbg !10189
  unreachable, !dbg !10189

6:                                                ; preds = %2
  %7 = icmp eq %struct.zbus_channel.158* %0, null, !dbg !10191
  br i1 %7, label %8, label %9, !dbg !10194

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 154) #26, !dbg !10195
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.158, i32 0, i32 0)) #26, !dbg !10195
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 154) #26, !dbg !10195
  unreachable, !dbg !10195

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 5, !dbg !10197
  %11 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10197
  %12 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %11, [1 x i64] %1) #27, !dbg !10198
  call void @llvm.dbg.value(metadata i32 %12, metadata !10181, metadata !DIExpression()), !dbg !10183
  %13 = icmp eq i32 %12, 0, !dbg !10199
  br i1 %13, label %14, label %17, !dbg !10201

14:                                               ; preds = %9
  tail call fastcc void @_zbus_notify_observers(%struct.zbus_channel.158* noundef nonnull %0, i64 noundef %3) #27, !dbg !10202
  call void @llvm.dbg.value(metadata i32 0, metadata !10181, metadata !DIExpression()), !dbg !10183
  %15 = load %struct.k_mutex*, %struct.k_mutex** %10, align 4, !dbg !10203
  %16 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %15) #27, !dbg !10204
  br label %17, !dbg !10205

17:                                               ; preds = %9, %14
  ret i32 %12, !dbg !10206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_claim(%struct.zbus_channel.158* noundef readonly %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !10207 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10210, metadata !DIExpression()), !dbg !10212
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158* %0, metadata !10209, metadata !DIExpression()), !dbg !10212
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10213
  br i1 %3, label %4, label %5, !dbg !10216

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 170) #26, !dbg !10217
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.156, i32 0, i32 0)) #26, !dbg !10217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 170) #26, !dbg !10217
  unreachable, !dbg !10217

5:                                                ; preds = %2
  %6 = icmp eq %struct.zbus_channel.158* %0, null, !dbg !10219
  br i1 %6, label %7, label %8, !dbg !10222

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 171) #26, !dbg !10223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.158, i32 0, i32 0)) #26, !dbg !10223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 171) #26, !dbg !10223
  unreachable, !dbg !10223

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 5, !dbg !10225
  %10 = load %struct.k_mutex*, %struct.k_mutex** %9, align 4, !dbg !10225
  %11 = tail call fastcc i32 @k_mutex_lock(%struct.k_mutex* noundef %10, [1 x i64] %1) #27, !dbg !10226
  call void @llvm.dbg.value(metadata i32 %11, metadata !10211, metadata !DIExpression()), !dbg !10212
  ret i32 %11, !dbg !10227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_chan_finish(%struct.zbus_channel.158* noundef readonly %0) local_unnamed_addr #1 !dbg !10228 {
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158* %0, metadata !10232, metadata !DIExpression()), !dbg !10234
  %2 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10235
  br i1 %2, label %3, label %4, !dbg !10238

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 184) #26, !dbg !10239
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.156, i32 0, i32 0)) #26, !dbg !10239
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 184) #26, !dbg !10239
  unreachable, !dbg !10239

4:                                                ; preds = %1
  %5 = icmp eq %struct.zbus_channel.158* %0, null, !dbg !10241
  br i1 %5, label %6, label %7, !dbg !10244

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 185) #26, !dbg !10245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.158, i32 0, i32 0)) #26, !dbg !10245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 185) #26, !dbg !10245
  unreachable, !dbg !10245

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.zbus_channel.158, %struct.zbus_channel.158* %0, i32 0, i32 5, !dbg !10247
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !10247
  %10 = tail call fastcc i32 @k_mutex_unlock(%struct.k_mutex* noundef %9) #27, !dbg !10248
  call void @llvm.dbg.value(metadata i32 %10, metadata !10233, metadata !DIExpression()), !dbg !10234
  ret i32 %10, !dbg !10249
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @zbus_sub_wait(%struct.zbus_observer.157* noundef readonly %0, %struct.zbus_channel.158** noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !10250 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10257, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata %struct.zbus_observer.157* %0, metadata !10255, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata %struct.zbus_channel.158** %1, metadata !10256, metadata !DIExpression()), !dbg !10258
  %4 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !10259
  br i1 %4, label %5, label %6, !dbg !10262

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.154, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 195) #26, !dbg !10263
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.156, i32 0, i32 0)) #26, !dbg !10263
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 195) #26, !dbg !10263
  unreachable, !dbg !10263

6:                                                ; preds = %3
  %7 = icmp eq %struct.zbus_observer.157* %0, null, !dbg !10265
  br i1 %7, label %8, label %9, !dbg !10268

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9.170, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 196) #26, !dbg !10269
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.171, i32 0, i32 0)) #26, !dbg !10269
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 196) #26, !dbg !10269
  unreachable, !dbg !10269

9:                                                ; preds = %6
  %10 = icmp eq %struct.zbus_channel.158** %1, null, !dbg !10271
  br i1 %10, label %11, label %12, !dbg !10274

11:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.153, i32 0, i32 0), i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 197) #26, !dbg !10275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6.158, i32 0, i32 0)) #26, !dbg !10275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.155, i32 0, i32 0), i32 noundef 197) #26, !dbg !10275
  unreachable, !dbg !10275

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.zbus_observer.157, %struct.zbus_observer.157* %0, i32 0, i32 1, !dbg !10277
  %14 = load %struct.k_msgq*, %struct.k_msgq** %13, align 4, !dbg !10277
  %15 = icmp eq %struct.k_msgq* %14, null, !dbg !10279
  br i1 %15, label %19, label %16, !dbg !10280

16:                                               ; preds = %12
  %17 = bitcast %struct.zbus_channel.158** %1 to i8*, !dbg !10281
  %18 = tail call fastcc i32 @k_msgq_get(%struct.k_msgq* noundef nonnull %14, i8* noundef nonnull %17, [1 x i64] %2) #27, !dbg !10282
  br label %19, !dbg !10283

19:                                               ; preds = %12, %16
  %20 = phi i32 [ %18, %16 ], [ -22, %12 ], !dbg !10258
  ret i32 %20, !dbg !10284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !10285 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !10291, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !10289, metadata !DIExpression()), !dbg !10292
  call void @llvm.dbg.value(metadata i8* %1, metadata !10290, metadata !DIExpression()), !dbg !10292
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10293, !srcloc !10295
  %4 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) #26, !dbg !10296
  ret i32 %4, !dbg !10297
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10300, metadata !DIExpression()), !dbg !10301
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #27, !dbg !10302
  ret void, !dbg !10303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10308, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.value(metadata i32 %1, metadata !10309, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10310, metadata !DIExpression()), !dbg !10314
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10315
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10315
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10315
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10311, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.value(metadata i32 %0, metadata !10313, metadata !DIExpression()), !dbg !10314
  %7 = icmp slt i32 %0, %1, !dbg !10316
  br i1 %7, label %8, label %22, !dbg !10319

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10313, metadata !DIExpression()), !dbg !10314
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #27, !dbg !10320
  %11 = icmp eq i32 %10, 0, !dbg !10320
  br i1 %11, label %19, label %12, !dbg !10323

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #27, !dbg !10324
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10326
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10326
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10328
  br i1 %15, label %19, label %16, !dbg !10329

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10330
  %18 = load i8*, i8** %17, align 4, !dbg !10330
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !10331
  br label %19, !dbg !10332

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %20, metadata !10313, metadata !DIExpression()), !dbg !10314
  %21 = icmp eq i32 %20, %1, !dbg !10316
  br i1 %21, label %22, label %8, !dbg !10319, !llvm.loop !10334

22:                                               ; preds = %19, %3
  ret void, !dbg !10336
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #18 !dbg !10337 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10339, metadata !DIExpression()), !dbg !10340
  %2 = shl nuw i32 1, %0, !dbg !10341
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #27, !dbg !10344
  ret i32 %3, !dbg !10345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #17 !dbg !10346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10350, metadata !DIExpression()), !dbg !10351
  %2 = shl nuw i32 1, %0, !dbg !10352
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #27, !dbg !10355
  ret void, !dbg !10356
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10357 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10360, metadata !DIExpression()), !dbg !10361
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !10362
  ret void, !dbg !10363
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #18 !dbg !10364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10366, metadata !DIExpression()), !dbg !10367
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !10368
  %3 = and i32 %2, %0, !dbg !10368
  %4 = icmp eq i32 %3, %0, !dbg !10369
  %5 = zext i1 %4 to i32, !dbg !10369
  ret i32 %5, !dbg !10370
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10371 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10373, metadata !DIExpression()), !dbg !10374
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #27, !dbg !10375
  ret void, !dbg !10376
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10377 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10379, metadata !DIExpression()), !dbg !10380
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #27, !dbg !10381
  ret void, !dbg !10382
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10383 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10385, metadata !DIExpression()), !dbg !10386
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #27, !dbg !10387
  ret void, !dbg !10388
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10391, metadata !DIExpression()), !dbg !10392
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #27, !dbg !10393
  ret void, !dbg !10394
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10395 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10397, metadata !DIExpression()), !dbg !10398
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #27, !dbg !10399
  ret void, !dbg !10400
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10401 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10403, metadata !DIExpression()), !dbg !10404
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #27, !dbg !10405
  ret void, !dbg !10406
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10409, metadata !DIExpression()), !dbg !10410
  tail call fastcc void @__stm32_exti_connect_irqs() #27, !dbg !10411
  ret i32 0, !dbg !10412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !1313 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !1317, metadata !DIExpression()), !dbg !10413
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !10414
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !10416
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !10418
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !10420
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !10422
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !10424
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !10426
  ret void, !dbg !10428
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10429 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10431, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 0, metadata !10432, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata i32 undef, metadata !10432, metadata !DIExpression()), !dbg !10433
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10434
  %3 = load i32, i32* %2, align 4, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %3, metadata !10432, metadata !DIExpression()), !dbg !10433
  %4 = shl nuw i32 1, %0, !dbg !10435
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #27, !dbg !10436
  tail call void @arch_irq_enable(i32 noundef %3) #26, !dbg !10437
  ret void, !dbg !10438
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10441, metadata !DIExpression()), !dbg !10442
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !10443
  %3 = or i32 %2, %0, !dbg !10443
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !10443
  ret void, !dbg !10444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #17 !dbg !10445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10447, metadata !DIExpression()), !dbg !10448
  %2 = icmp slt i32 %0, 32, !dbg !10449
  br i1 %2, label %3, label %5, !dbg !10451

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10452
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #27, !dbg !10454
  br label %5, !dbg !10455

5:                                                ; preds = %1, %3
  ret void, !dbg !10456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10457 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10459, metadata !DIExpression()), !dbg !10460
  %2 = xor i32 %0, -1, !dbg !10461
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !10461
  %4 = and i32 %3, %2, !dbg !10461
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !10461
  ret void, !dbg !10462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 !dbg !10463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10467, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.value(metadata i32 %1, metadata !10468, metadata !DIExpression()), !dbg !10469
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10470

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10471
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #27, !dbg !10473
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #27, !dbg !10474
  br label %11, !dbg !10475

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10476
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #27, !dbg !10477
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #27, !dbg !10478
  br label %11, !dbg !10479

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10480
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #27, !dbg !10481
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #27, !dbg !10482
  br label %11, !dbg !10483

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10484
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #27, !dbg !10485
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #27, !dbg !10486
  br label %11, !dbg !10487

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10491, metadata !DIExpression()), !dbg !10492
  %2 = xor i32 %0, -1, !dbg !10493
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !10493
  %4 = and i32 %3, %2, !dbg !10493
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !10493
  ret void, !dbg !10494
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10497, metadata !DIExpression()), !dbg !10498
  %2 = xor i32 %0, -1, !dbg !10499
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !10499
  %4 = and i32 %3, %2, !dbg !10499
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !10499
  ret void, !dbg !10500
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10501 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10503, metadata !DIExpression()), !dbg !10504
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !10505
  %3 = or i32 %2, %0, !dbg !10505
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !10505
  ret void, !dbg !10506
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10509, metadata !DIExpression()), !dbg !10510
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !10511
  %3 = or i32 %2, %0, !dbg !10511
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !10511
  ret void, !dbg !10512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !10513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10517, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10518, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata i8* %2, metadata !10519, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !10520, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10522, metadata !DIExpression()), !dbg !10523
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10524
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10524
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10526
  br i1 %6, label %7, label %9, !dbg !10527

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10528
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10529
  store i8* %2, i8** %8, align 4, !dbg !10530
  br label %9, !dbg !10531

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10523
  ret i32 %10, !dbg !10532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !10533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10535, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !10536, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10537, metadata !DIExpression()), !dbg !10538
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10539
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10540
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10541
  store i8* null, i8** %3, align 4, !dbg !10542
  ret void, !dbg !10543
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !10544 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10546, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i8* %1, metadata !10547, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i8* %1, metadata !10548, metadata !DIExpression()), !dbg !10551
  %3 = bitcast i8* %1 to i32*, !dbg !10552
  %4 = load i32, i32* %3, align 4, !dbg !10552
  %5 = add i32 %4, -37, !dbg !10552
  %6 = icmp ult i32 %5, -9, !dbg !10552
  br i1 %6, label %15, label %7, !dbg !10554

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10555
  %9 = inttoptr i32 %8 to i32*, !dbg !10556
  call void @llvm.dbg.value(metadata i32* %9, metadata !10549, metadata !DIExpression()), !dbg !10551
  %10 = load volatile i32, i32* %9, align 4, !dbg !10557
  call void @llvm.dbg.value(metadata i32 %10, metadata !10550, metadata !DIExpression()), !dbg !10551
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10558
  %12 = bitcast i8* %11 to i32*, !dbg !10558
  %13 = load i32, i32* %12, align 4, !dbg !10558
  %14 = or i32 %13, %10, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %14, metadata !10550, metadata !DIExpression()), !dbg !10551
  store volatile i32 %14, i32* %9, align 4, !dbg !10560
  br label %15, !dbg !10561

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10551
  ret i32 %16, !dbg !10562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #17 !dbg !10563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10565, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i8* %1, metadata !10566, metadata !DIExpression()), !dbg !10570
  call void @llvm.dbg.value(metadata i8* %1, metadata !10567, metadata !DIExpression()), !dbg !10570
  %3 = bitcast i8* %1 to i32*, !dbg !10571
  %4 = load i32, i32* %3, align 4, !dbg !10571
  %5 = add i32 %4, -37, !dbg !10571
  %6 = icmp ult i32 %5, -9, !dbg !10571
  br i1 %6, label %16, label %7, !dbg !10573

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10574
  %9 = inttoptr i32 %8 to i32*, !dbg !10575
  call void @llvm.dbg.value(metadata i32* %9, metadata !10568, metadata !DIExpression()), !dbg !10570
  %10 = load volatile i32, i32* %9, align 4, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %10, metadata !10569, metadata !DIExpression()), !dbg !10570
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10577
  %12 = bitcast i8* %11 to i32*, !dbg !10577
  %13 = load i32, i32* %12, align 4, !dbg !10577
  %14 = xor i32 %13, -1, !dbg !10578
  %15 = and i32 %10, %14, !dbg !10579
  call void @llvm.dbg.value(metadata i32 %15, metadata !10569, metadata !DIExpression()), !dbg !10570
  store volatile i32 %15, i32* %9, align 4, !dbg !10580
  br label %16, !dbg !10581

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10570
  ret i32 %17, !dbg !10582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #9 !dbg !10583 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10585, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i8* %1, metadata !10586, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32* %2, metadata !10587, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i8* %1, metadata !10588, metadata !DIExpression()), !dbg !10592
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10593
  call void @llvm.dbg.value(metadata i32 %4, metadata !10589, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 %4, metadata !10590, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.value(metadata i32 %4, metadata !10591, metadata !DIExpression()), !dbg !10592
  %5 = bitcast i8* %1 to i32*, !dbg !10594
  %6 = load i32, i32* %5, align 4, !dbg !10594
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !10595

7:                                                ; preds = %3
  br label %10, !dbg !10596

8:                                                ; preds = %3
  br label %10, !dbg !10598

9:                                                ; preds = %3
  br label %10, !dbg !10599

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !10600
  br label %12, !dbg !10601

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !10592
  ret i32 %13, !dbg !10601
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #17 !dbg !10602 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10604, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata i8* %1, metadata !10605, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata i8* %2, metadata !10606, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata i8* %1, metadata !10607, metadata !DIExpression()), !dbg !10612
  %4 = bitcast i8* %1 to i32*, !dbg !10613
  %5 = load i32, i32* %4, align 4, !dbg !10613
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #27, !dbg !10614
  call void @llvm.dbg.value(metadata i32 %6, metadata !10611, metadata !DIExpression()), !dbg !10612
  %7 = icmp slt i32 %6, 0, !dbg !10615
  br i1 %7, label %22, label %8, !dbg !10617

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10607, metadata !DIExpression()), !dbg !10612
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10618
  %10 = bitcast i8* %9 to i32*, !dbg !10618
  %11 = load i32, i32* %10, align 4, !dbg !10618
  %12 = lshr i32 %11, 16, !dbg !10618
  %13 = and i32 %12, 7, !dbg !10618
  %14 = lshr i32 %11, 8, !dbg !10619
  %15 = and i32 %14, 31, !dbg !10619
  %16 = shl i32 %13, %15, !dbg !10620
  call void @llvm.dbg.value(metadata i32 %16, metadata !10610, metadata !DIExpression()), !dbg !10612
  %17 = and i32 %11, 255, !dbg !10621
  %18 = or i32 %17, 1073887232, !dbg !10622
  %19 = inttoptr i32 %18 to i32*, !dbg !10623
  call void @llvm.dbg.value(metadata i32* %19, metadata !10608, metadata !DIExpression()), !dbg !10612
  %20 = load volatile i32, i32* %19, align 4, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %20, metadata !10609, metadata !DIExpression()), !dbg !10612
  %21 = or i32 %16, %20, !dbg !10625
  call void @llvm.dbg.value(metadata i32 %21, metadata !10609, metadata !DIExpression()), !dbg !10612
  store volatile i32 %21, i32* %19, align 4, !dbg !10626
  br label %22, !dbg !10627

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10612
  ret i32 %23, !dbg !10628
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !10629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10633, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.value(metadata i32 0, metadata !10634, metadata !DIExpression()), !dbg !10635
  %2 = add i32 %0, -1, !dbg !10636
  %3 = icmp ult i32 %2, 4, !dbg !10636
  br i1 %3, label %4, label %7, !dbg !10636

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10636
  %6 = load i32, i32* %5, align 4, !dbg !10636
  call void @llvm.dbg.value(metadata i32 %6, metadata !10634, metadata !DIExpression()), !dbg !10635
  br label %7, !dbg !10637

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10635
  ret i32 %8, !dbg !10638
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10639 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10641, metadata !DIExpression()), !dbg !10644
  tail call void @config_enable_default_clocks() #26, !dbg !10645
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !10646
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #27, !dbg !10646
  %4 = lshr i32 %3, 4, !dbg !10646
  %5 = and i32 %4, 15, !dbg !10646
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10646
  %7 = load i8, i8* %6, align 1, !dbg !10646
  %8 = zext i8 %7 to i32, !dbg !10646
  %9 = lshr i32 %2, %8, !dbg !10646
  call void @llvm.dbg.value(metadata i32 %9, metadata !10642, metadata !DIExpression()), !dbg !10644
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !10643, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10644
  %10 = icmp ult i32 %9, 32000000, !dbg !10647
  br i1 %10, label %11, label %13, !dbg !10649

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #26, !dbg !10650
  br label %13, !dbg !10652

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #27, !dbg !10653
  tail call fastcc void @set_up_plls() #27, !dbg !10654
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10655
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #27, !dbg !10658
  br label %14, !dbg !10659

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10660
  %16 = icmp eq i32 %15, 12, !dbg !10661
  br i1 %16, label %17, label %14, !dbg !10659, !llvm.loop !10662

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !10664
  br i1 %18, label %19, label %21, !dbg !10666

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #26, !dbg !10667
  br label %21, !dbg !10669

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !10670
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #27, !dbg !10671
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #27, !dbg !10672
  ret i32 0, !dbg !10673
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #18 !dbg !10674 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10676
  %2 = and i32 %1, 240, !dbg !10676
  ret i32 %2, !dbg !10677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #17 !dbg !10678 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10679
  %2 = icmp eq i32 %1, 1, !dbg !10683
  br i1 %2, label %7, label %3, !dbg !10684

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !10685
  br label %4, !dbg !10687

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10688
  %6 = icmp eq i32 %5, 1, !dbg !10689
  br i1 %6, label %7, label %4, !dbg !10687, !llvm.loop !10690

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #27, !dbg !10692
  br label %8, !dbg !10695

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #27, !dbg !10696
  %10 = icmp eq i32 %9, 1, !dbg !10697
  br i1 %10, label %11, label %8, !dbg !10695, !llvm.loop !10698

11:                                               ; preds = %8
  ret void, !dbg !10700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10701 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10702
  %2 = icmp eq i32 %1, 12, !dbg !10704
  br i1 %2, label %3, label %4, !dbg !10705

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #27, !dbg !10706
  tail call fastcc void @stm32_clock_switch_to_hsi() #27, !dbg !10708
  br label %4, !dbg !10709

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #27, !dbg !10710
  tail call void @config_pll_sysclock() #26, !dbg !10711
  tail call fastcc void @LL_RCC_PLL_Enable() #27, !dbg !10712
  br label %5, !dbg !10713

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #27, !dbg !10714
  %7 = icmp eq i32 %6, 1, !dbg !10715
  br i1 %7, label %8, label %5, !dbg !10713, !llvm.loop !10716

8:                                                ; preds = %5
  ret void, !dbg !10718
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #17 !dbg !10719 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10721, metadata !DIExpression()), !dbg !10722
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10723
  %2 = and i32 %1, -241, !dbg !10723
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10723
  ret void, !dbg !10724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #17 !dbg !10725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10727, metadata !DIExpression()), !dbg !10728
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10729
  %3 = and i32 %2, -4, !dbg !10729
  %4 = or i32 %3, %0, !dbg !10729
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10729
  ret void, !dbg !10730
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #18 !dbg !10731 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10732
  %2 = and i32 %1, 12, !dbg !10732
  ret i32 %2, !dbg !10733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #17 !dbg !10734 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10736, metadata !DIExpression()), !dbg !10737
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10738
  %2 = and i32 %1, -1793, !dbg !10738
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10738
  ret void, !dbg !10739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #17 !dbg !10740 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10742, metadata !DIExpression()), !dbg !10743
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10744
  %2 = and i32 %1, -14337, !dbg !10744
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10744
  ret void, !dbg !10745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #17 !dbg !10746 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10747
  %2 = icmp eq i32 %1, 1, !dbg !10749
  br i1 %2, label %7, label %3, !dbg !10750

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #27, !dbg !10751
  br label %4, !dbg !10753

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #27, !dbg !10754
  %6 = icmp eq i32 %5, 1, !dbg !10755
  br i1 %6, label %7, label %4, !dbg !10753, !llvm.loop !10756

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #27, !dbg !10758
  br label %8, !dbg !10759

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #27, !dbg !10760
  %10 = icmp eq i32 %9, 4, !dbg !10761
  br i1 %10, label %11, label %8, !dbg !10759, !llvm.loop !10762

11:                                               ; preds = %8
  ret void, !dbg !10764
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #17 !dbg !10765 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10766
  %2 = and i32 %1, -16777217, !dbg !10766
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10766
  ret void, !dbg !10767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #17 !dbg !10768 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10769
  %2 = or i32 %1, 16777216, !dbg !10769
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10769
  ret void, !dbg !10770
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #18 !dbg !10771 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10772
  %2 = lshr i32 %1, 25, !dbg !10773
  %3 = and i32 %2, 1, !dbg !10773
  ret i32 %3, !dbg !10774
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #18 !dbg !10775 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10776
  %2 = lshr i32 %1, 1, !dbg !10777
  %3 = and i32 %2, 1, !dbg !10777
  ret i32 %3, !dbg !10778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #17 !dbg !10779 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10780
  %2 = or i32 %1, 1, !dbg !10780
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10780
  ret void, !dbg !10781
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #17 !dbg !10782 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10783
  %2 = or i32 %1, 1, !dbg !10783
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10783
  ret void, !dbg !10784
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #18 !dbg !10785 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !10786
  %2 = lshr i32 %1, 1, !dbg !10787
  %3 = and i32 %2, 1, !dbg !10787
  ret i32 %3, !dbg !10788
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !10789 {
  ret i32 16000000, !dbg !10791
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #17 !dbg !10794 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #27, !dbg !10795
  ret void, !dbg !10796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #17 !dbg !10797 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10801, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.value(metadata i32 262144, metadata !10802, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10803, metadata !DIExpression()), !dbg !10804
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10805
  %2 = and i32 %1, -16580609, !dbg !10805
  %3 = or i32 %2, 4456448, !dbg !10805
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10805
  ret void, !dbg !10806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #4 !dbg !10807 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !10808
  %2 = zext i8 %1 to i32, !dbg !10808
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !10808
  ret i32 %3, !dbg !10809
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #16 !dbg !10810 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #27, !dbg !10811
  ret void, !dbg !10812
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #16 !dbg !10813 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !10815, metadata !DIExpression()), !dbg !10817
  %2 = bitcast i32* %1 to i8*, !dbg !10818
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10818
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10816, metadata !DIExpression()), !dbg !10819
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10820
  %4 = or i32 %3, 1, !dbg !10820
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10820
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !10821
  %6 = and i32 %5, 1, !dbg !10821
  store volatile i32 %6, i32* %1, align 4, !dbg !10822
  %7 = load volatile i32, i32* %1, align 4, !dbg !10823
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10824
  ret void, !dbg !10824
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10825 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10827, metadata !DIExpression()), !dbg !10828
  %2 = tail call fastcc zeroext i1 @device_is_ready.181() #27, !dbg !10829
  br i1 %2, label %3, label %4, !dbg !10831

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #27, !dbg !10832
  br label %4, !dbg !10833

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10828
  ret i32 %5, !dbg !10834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.181() unnamed_addr #1 !dbg !10835 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10839, metadata !DIExpression()), !dbg !10840
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10841, !srcloc !10843
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.182() #27, !dbg !10844
  ret i1 %1, !dbg !10845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10846 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !10847
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !10848
  ret void, !dbg !10849
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10852, metadata !DIExpression()), !dbg !10853
  %2 = icmp eq i32 %0, 10, !dbg !10854
  br i1 %2, label %3, label %4, !dbg !10856

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #27, !dbg !10857
  br label %4, !dbg !10859

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10860
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #27, !dbg !10861
  ret i32 %0, !dbg !10862
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10863 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10866, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.value(metadata i8 %0, metadata !10867, metadata !DIExpression()), !dbg !10868
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10869, !srcloc !10871
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #27, !dbg !10872
  ret void, !dbg !10873
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10874 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10876, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.value(metadata i8 %0, metadata !10877, metadata !DIExpression()), !dbg !10879
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10880
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10878, metadata !DIExpression()), !dbg !10879
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10881
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10881
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #26, !dbg !10882
  ret void, !dbg !10883
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.182() unnamed_addr #1 !dbg !10884 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !10886, metadata !DIExpression()), !dbg !10887
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #26, !dbg !10888
  ret i1 %1, !dbg !10889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !10890 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10939, metadata !DIExpression()), !dbg !10942
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10940, metadata !DIExpression()), !dbg !10942
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10941, metadata !DIExpression()), !dbg !10942
  ret void, !dbg !10943
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !10944 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10946, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.value(metadata i8 %1, metadata !10947, metadata !DIExpression()), !dbg !10951
  call void @llvm.dbg.value(metadata i32 %2, metadata !10948, metadata !DIExpression()), !dbg !10951
  %5 = bitcast i32* %4 to i8*, !dbg !10952
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10952
  call void @llvm.dbg.value(metadata i32* %4, metadata !10950, metadata !DIExpression(DW_OP_deref)), !dbg !10951
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !10953
  call void @llvm.dbg.value(metadata i32 %6, metadata !10949, metadata !DIExpression()), !dbg !10951
  %7 = icmp eq i32 %6, 0, !dbg !10954
  br i1 %7, label %8, label %31, !dbg !10956

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !10949, metadata !DIExpression()), !dbg !10951
  %9 = and i32 %2, 131072, !dbg !10957
  %10 = icmp eq i32 %9, 0, !dbg !10959
  br i1 %10, label %28, label %11, !dbg !10960

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !10961
  %13 = icmp eq i32 %12, 0, !dbg !10964
  br i1 %13, label %18, label %14, !dbg !10965

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !10966
  %16 = shl nuw i32 1, %15, !dbg !10966
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #27, !dbg !10968
  br label %25, !dbg !10969

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !10970
  %20 = icmp eq i32 %19, 0, !dbg !10972
  %21 = zext i8 %1 to i32, !dbg !10951
  br i1 %20, label %25, label %22, !dbg !10973

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !10974
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #27, !dbg !10976
  br label %25, !dbg !10977

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !10978
  %27 = load i32, i32* %4, align 4, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %30, metadata !10950, metadata !DIExpression()), !dbg !10951
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #27, !dbg !10980
  br label %31, !dbg !10981

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !10978
  %30 = load i32, i32* %4, align 4, !dbg !10979
  call void @llvm.dbg.value(metadata i32 %30, metadata !10950, metadata !DIExpression()), !dbg !10951
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #27, !dbg !10980
  call void @llvm.dbg.value(metadata i32 0, metadata !10949, metadata !DIExpression()), !dbg !10951
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !10982
  ret i32 %6, !dbg !10982
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #18 !dbg !10983 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10987, metadata !DIExpression()), !dbg !10992
  call void @llvm.dbg.value(metadata i32* %1, metadata !10988, metadata !DIExpression()), !dbg !10992
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10993
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !10993
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !10993
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !10989, metadata !DIExpression()), !dbg !10992
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !10994
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !10994
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !10994
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !10991, metadata !DIExpression()), !dbg !10992
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #27, !dbg !10995
  store i32 %9, i32* %1, align 4, !dbg !10996
  ret i32 0, !dbg !10997
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #17 !dbg !10998 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11000, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.value(metadata i32 %1, metadata !11001, metadata !DIExpression()), !dbg !11006
  call void @llvm.dbg.value(metadata i32 %2, metadata !11002, metadata !DIExpression()), !dbg !11006
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11007
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11007
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11007
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11003, metadata !DIExpression()), !dbg !11006
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11008
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11008
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11008
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11004, metadata !DIExpression()), !dbg !11006
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #27, !dbg !11009
  call void @llvm.dbg.value(metadata i32 %10, metadata !11005, metadata !DIExpression()), !dbg !11006
  %11 = xor i32 %1, -1, !dbg !11010
  %12 = and i32 %10, %11, !dbg !11011
  %13 = and i32 %2, %1, !dbg !11012
  %14 = or i32 %12, %13, !dbg !11013
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #27, !dbg !11014
  ret i32 0, !dbg !11015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !11016 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11018, metadata !DIExpression()), !dbg !11022
  call void @llvm.dbg.value(metadata i32 %1, metadata !11019, metadata !DIExpression()), !dbg !11022
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11023
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11023
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11023
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11020, metadata !DIExpression()), !dbg !11022
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11024
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11024
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11024
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11021, metadata !DIExpression()), !dbg !11022
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11025
  store volatile i32 %1, i32* %9, align 4, !dbg !11025
  ret i32 0, !dbg !11026
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !11027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11029, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.value(metadata i32 %1, metadata !11030, metadata !DIExpression()), !dbg !11033
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11034
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11034
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11034
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11031, metadata !DIExpression()), !dbg !11033
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11035
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11035
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11035
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11032, metadata !DIExpression()), !dbg !11033
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #27, !dbg !11036
  ret i32 0, !dbg !11037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #17 !dbg !11038 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11040, metadata !DIExpression()), !dbg !11044
  call void @llvm.dbg.value(metadata i32 %1, metadata !11041, metadata !DIExpression()), !dbg !11044
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11045
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11045
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11045
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11042, metadata !DIExpression()), !dbg !11044
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11046
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11046
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11046
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11043, metadata !DIExpression()), !dbg !11044
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11047
  %10 = load volatile i32, i32* %9, align 4, !dbg !11047
  %11 = xor i32 %10, %1, !dbg !11047
  store volatile i32 %11, i32* %9, align 4, !dbg !11047
  ret i32 0, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11049 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11051, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i8 %1, metadata !11052, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i32 %2, metadata !11053, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i32 %3, metadata !11054, metadata !DIExpression()), !dbg !11061
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11062
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11062
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11062
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11055, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i8* undef, metadata !11056, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i32 0, metadata !11058, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i32 0, metadata !11059, metadata !DIExpression()), !dbg !11061
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11063

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11064
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #27, !dbg !11068
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11069
  %12 = load i32, i32* %11, align 4, !dbg !11069
  %13 = icmp eq i32 %10, %12, !dbg !11070
  br i1 %13, label %14, label %29, !dbg !11071

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !11072
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !11074
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !11075
  br label %29, !dbg !11076

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11077
  %17 = load i8*, i8** %16, align 4, !dbg !11077
  call void @llvm.dbg.value(metadata i8* %17, metadata !11056, metadata !DIExpression()), !dbg !11061
  %18 = zext i8 %1 to i32, !dbg !11078
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !11080
  %20 = icmp eq i32 %19, 0, !dbg !11081
  br i1 %20, label %21, label %29, !dbg !11082

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11083
  %23 = load i32, i32* %22, align 4, !dbg !11083
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #27, !dbg !11084
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11085

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11058, metadata !DIExpression()), !dbg !11061
  br label %27, !dbg !11086

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11058, metadata !DIExpression()), !dbg !11061
  br label %27, !dbg !11088

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11058, metadata !DIExpression()), !dbg !11061
  br label %27, !dbg !11089

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11061
  call void @llvm.dbg.value(metadata i32 %28, metadata !11058, metadata !DIExpression()), !dbg !11061
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !11090
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !11091
  br label %29, !dbg !11091

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11061
  call void @llvm.dbg.value(metadata i32 %30, metadata !11059, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.label(metadata !11060), !dbg !11092
  ret i32 %30, !dbg !11093
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !11094 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11096, metadata !DIExpression()), !dbg !11100
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11097, metadata !DIExpression()), !dbg !11100
  call void @llvm.dbg.value(metadata i1 %2, metadata !11098, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11100
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11101
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11101
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11101
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11099, metadata !DIExpression()), !dbg !11100
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11102
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #27, !dbg !11103
  ret i32 %8, !dbg !11104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !11105 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11111, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11112, metadata !DIExpression()), !dbg !11114
  call void @llvm.dbg.value(metadata i1 %2, metadata !11113, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11114
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !11115
  br i1 %4, label %5, label %6, !dbg !11118

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.187, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.188, i32 0, i32 0), i32 noundef 42) #26, !dbg !11119
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.189, i32 0, i32 0)) #26, !dbg !11119
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.188, i32 0, i32 0), i32 noundef 42) #26, !dbg !11119
  unreachable, !dbg !11119

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !11121
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !11121
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !11121
  br i1 %9, label %10, label %11, !dbg !11124

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34.190, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.188, i32 0, i32 0), i32 noundef 43) #26, !dbg !11125
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.191, i32 0, i32 0)) #26, !dbg !11125
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.188, i32 0, i32 0), i32 noundef 43) #26, !dbg !11125
  unreachable, !dbg !11125

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #27, !dbg !11127
  br i1 %12, label %18, label %13, !dbg !11129

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11130
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #27, !dbg !11133
  %16 = or i1 %15, %2, !dbg !11134
  %17 = select i1 %16, i32 0, i32 -22, !dbg !11134
  br i1 %2, label %19, label %21, !dbg !11134

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !11135

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11136
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #27, !dbg !11139
  br label %21, !dbg !11140

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !11114
  ret i32 %22, !dbg !11141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11142 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11146, metadata !DIExpression()), !dbg !11147
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11148
  %3 = icmp eq %struct._snode* %2, null, !dbg !11148
  ret i1 %3, !dbg !11148
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #15 !dbg !11149 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11153, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11154, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11155, metadata !DIExpression()), !dbg !11157
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11158
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11156, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11155, metadata !DIExpression()), !dbg !11157
  %4 = icmp eq %struct._snode* %3, null, !dbg !11160
  br i1 %4, label %15, label %5, !dbg !11158

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11156, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11155, metadata !DIExpression()), !dbg !11157
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11162
  br i1 %6, label %9, label %11, !dbg !11165

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11156, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11155, metadata !DIExpression()), !dbg !11157
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11162
  br i1 %8, label %9, label %11, !dbg !11165, !llvm.loop !11166

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #27, !dbg !11167
  br label %15, !dbg !11167

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11156, metadata !DIExpression()), !dbg !11157
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11155, metadata !DIExpression()), !dbg !11157
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #27, !dbg !11160
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11156, metadata !DIExpression()), !dbg !11157
  %14 = icmp eq %struct._snode* %13, null, !dbg !11160
  br i1 %14, label %15, label %7, !dbg !11158, !llvm.loop !11166

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11170 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11174, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11175, metadata !DIExpression()), !dbg !11176
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11177
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #27, !dbg !11177
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #27, !dbg !11177
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !11178
  %5 = icmp eq %struct._snode* %4, null, !dbg !11178
  br i1 %5, label %6, label %8, !dbg !11177

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11180
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #27, !dbg !11180
  br label %8, !dbg !11180

8:                                                ; preds = %6, %2
  ret void, !dbg !11177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11182 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11186, metadata !DIExpression()), !dbg !11187
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11188
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11188
  ret %struct._snode* %3, !dbg !11189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !11190 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11194, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11195, metadata !DIExpression()), !dbg !11196
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11197
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11198
  ret void, !dbg !11199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !11200 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11202, metadata !DIExpression()), !dbg !11204
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11203, metadata !DIExpression()), !dbg !11204
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11205
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11206
  ret void, !dbg !11207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11208 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11210, metadata !DIExpression()), !dbg !11211
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11212
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11212
  ret %struct._snode* %3, !dbg !11213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !11214 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11216, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11217, metadata !DIExpression()), !dbg !11218
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11219
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11220
  ret void, !dbg !11221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !11222 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11226, metadata !DIExpression()), !dbg !11229
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11227, metadata !DIExpression()), !dbg !11229
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11228, metadata !DIExpression()), !dbg !11229
  %4 = icmp eq %struct._snode* %1, null, !dbg !11230
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #27, !dbg !11232
  br i1 %4, label %6, label %11, !dbg !11233

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #27, !dbg !11234
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !11236
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11236
  br i1 %8, label %9, label %15, !dbg !11234

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11238
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #27, !dbg !11238
  br label %15, !dbg !11238

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #27, !dbg !11240
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #27, !dbg !11242
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11242
  br i1 %13, label %14, label %15, !dbg !11240

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #27, !dbg !11244
  br label %15, !dbg !11244

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #27, !dbg !11233
  ret void, !dbg !11233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !11246 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11250, metadata !DIExpression()), !dbg !11251
  %2 = icmp eq %struct._snode* %0, null, !dbg !11252
  br i1 %2, label %5, label %3, !dbg !11252

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #27, !dbg !11252
  br label %5, !dbg !11252

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11252
  ret %struct._snode* %6, !dbg !11252
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11253 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11255, metadata !DIExpression()), !dbg !11256
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #27, !dbg !11257
  ret %struct._snode* %2, !dbg !11257
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !11258 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11260, metadata !DIExpression()), !dbg !11261
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11262
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11262
  ret %struct._snode* %3, !dbg !11263
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11264 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11266, metadata !DIExpression()), !dbg !11269
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #27, !dbg !11270, !range !11271
  call void @llvm.dbg.value(metadata i32 %2, metadata !11267, metadata !DIExpression()), !dbg !11269
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #27, !dbg !11272
  call void @llvm.dbg.value(metadata i32 %3, metadata !11268, metadata !DIExpression()), !dbg !11269
  ret i32 %3, !dbg !11273
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11276, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.value(metadata i8* %1, metadata !11277, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.value(metadata i8* %1, metadata !11278, metadata !DIExpression()), !dbg !11279
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11280
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11280
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11281
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11281
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11281
  %8 = shl nuw i32 1, %0, !dbg !11282
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #27, !dbg !11283
  ret void, !dbg !11284
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11285 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11289, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata i32 %1, metadata !11290, metadata !DIExpression()), !dbg !11295
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11291, metadata !DIExpression()), !dbg !11295
  %4 = bitcast i64* %3 to i8*, !dbg !11296
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11296
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !11293, metadata !DIExpression()), !dbg !11295
  store i64 4294967328, i64* %3, align 8, !dbg !11297
  call void @llvm.dbg.value(metadata i64* %3, metadata !11293, metadata !DIExpression(DW_OP_deref)), !dbg !11295
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #27, !dbg !11298
  call void @llvm.dbg.value(metadata i32 %5, metadata !11294, metadata !DIExpression()), !dbg !11295
  %6 = icmp eq i32 %5, 0, !dbg !11299
  br i1 %6, label %7, label %8, !dbg !11301

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #27, !dbg !11302
  br label %8, !dbg !11303

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11304
  ret void, !dbg !11304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11305 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11307, metadata !DIExpression()), !dbg !11310
  call void @llvm.dbg.value(metadata i8* %0, metadata !11308, metadata !DIExpression()), !dbg !11310
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11311
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11309, metadata !DIExpression()), !dbg !11310
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11312
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11312
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #26, !dbg !11313
  ret i32 %5, !dbg !11314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11317, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 %1, metadata !11318, metadata !DIExpression()), !dbg !11320
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #27, !dbg !11321
  call void @llvm.dbg.value(metadata i32 %3, metadata !11319, metadata !DIExpression()), !dbg !11320
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #27, !dbg !11322
  ret void, !dbg !11323
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !11324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11328, metadata !DIExpression()), !dbg !11329
  %2 = sdiv i32 %0, 4, !dbg !11330
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11331
  %6 = add nsw i32 %5, 16, !dbg !11332
  %7 = shl i32 15, %6, !dbg !11333
  %8 = or i32 %7, %2, !dbg !11334
  ret i32 %8, !dbg !11335
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11341, metadata !DIExpression()), !dbg !11343
  call void @llvm.dbg.value(metadata i32 %1, metadata !11342, metadata !DIExpression()), !dbg !11343
  %3 = and i32 %1, 3, !dbg !11344
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !11344
  %5 = load volatile i32, i32* %4, align 4, !dbg !11344
  %6 = lshr i32 %1, 16, !dbg !11344
  %7 = xor i32 %6, -1, !dbg !11344
  %8 = and i32 %5, %7, !dbg !11344
  call void @llvm.dbg.value(metadata i32 %6, metadata !11345, metadata !DIExpression()) #25, !dbg !11349
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11351, !srcloc !11352
  call void @llvm.dbg.value(metadata i32 %9, metadata !11348, metadata !DIExpression()) #25, !dbg !11349
  call void @llvm.dbg.value(metadata i32 %9, metadata !11353, metadata !DIExpression()) #25, !dbg !11358
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11360, !range !5450
  %11 = shl i32 %0, %10, !dbg !11344
  %12 = or i32 %11, %8, !dbg !11344
  store volatile i32 %12, i32* %4, align 4, !dbg !11344
  ret void, !dbg !11361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11362 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11366, metadata !DIExpression()), !dbg !11371
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11367, metadata !DIExpression()), !dbg !11371
  call void @llvm.dbg.value(metadata i32 %2, metadata !11368, metadata !DIExpression()), !dbg !11371
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #27, !dbg !11372
  %5 = icmp eq %struct._snode* %4, null, !dbg !11372
  br i1 %5, label %24, label %6, !dbg !11372

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #27, !dbg !11374
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11370, metadata !DIExpression()), !dbg !11371
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !11369, metadata !DIExpression()), !dbg !11371
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11375
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !11375
  %12 = load i32, i32* %11, align 4, !dbg !11375
  %13 = and i32 %12, %2, !dbg !11379
  %14 = icmp eq i32 %13, 0, !dbg !11379
  br i1 %14, label %22, label %15, !dbg !11380

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11381
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11381
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11381
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !11381
  br i1 %19, label %20, label %21, !dbg !11385

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.186, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.188, i32 0, i32 0), i32 noundef 77) #26, !dbg !11386
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.191, i32 0, i32 0)) #26, !dbg !11386
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.188, i32 0, i32 0), i32 noundef 77) #26, !dbg !11386
  unreachable, !dbg !11386

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #26, !dbg !11388
  br label %22, !dbg !11389

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11369, metadata !DIExpression()), !dbg !11371
  %23 = icmp eq %struct._snode* %8, null, !dbg !11390
  br i1 %23, label %24, label %6, !dbg !11390

24:                                               ; preds = %22, %3
  ret void, !dbg !11391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11394, metadata !DIExpression()), !dbg !11395
  %2 = and i32 %0, 3, !dbg !11396
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !11396
  %4 = load volatile i32, i32* %3, align 4, !dbg !11396
  %5 = lshr i32 %0, 16, !dbg !11396
  %6 = and i32 %4, %5, !dbg !11396
  call void @llvm.dbg.value(metadata i32 %5, metadata !11345, metadata !DIExpression()) #25, !dbg !11397
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11399, !srcloc !11352
  call void @llvm.dbg.value(metadata i32 %7, metadata !11348, metadata !DIExpression()) #25, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %7, metadata !11353, metadata !DIExpression()) #25, !dbg !11400
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11402, !range !5450
  %9 = lshr i32 %6, %8, !dbg !11403
  ret i32 %9, !dbg !11404
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11405 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11410, metadata !DIExpression()), !dbg !11412
  call void @llvm.dbg.value(metadata i32 %1, metadata !11411, metadata !DIExpression()), !dbg !11412
  %3 = shl i32 %1, 16, !dbg !11413
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11413
  store volatile i32 %3, i32* %4, align 4, !dbg !11413
  ret void, !dbg !11414
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !11415 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11419, metadata !DIExpression()), !dbg !11420
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11421
  %3 = load volatile i32, i32* %2, align 4, !dbg !11421
  ret i32 %3, !dbg !11422
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !11423 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11425, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.value(metadata i32 %1, metadata !11426, metadata !DIExpression()), !dbg !11427
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11428
  store volatile i32 %1, i32* %3, align 4, !dbg !11428
  ret void, !dbg !11429
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #18 !dbg !11430 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11432, metadata !DIExpression()), !dbg !11433
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11434
  %3 = load volatile i32, i32* %2, align 4, !dbg !11434
  ret i32 %3, !dbg !11435
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !11436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11440, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.value(metadata i32* %1, metadata !11441, metadata !DIExpression()), !dbg !11442
  %3 = and i32 %0, 131072, !dbg !11443
  %4 = icmp eq i32 %3, 0, !dbg !11445
  br i1 %4, label %22, label %5, !dbg !11446

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11447
  %6 = and i32 %0, 2, !dbg !11449
  %7 = icmp eq i32 %6, 0, !dbg !11451
  br i1 %7, label %11, label %8, !dbg !11452

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11453
  %10 = icmp eq i32 %9, 0, !dbg !11453
  br i1 %10, label %33, label %11, !dbg !11456

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11457
  store i32 %12, i32* %1, align 4, !dbg !11457
  %13 = and i32 %0, 16, !dbg !11458
  %14 = icmp eq i32 %13, 0, !dbg !11460
  br i1 %14, label %17, label %15, !dbg !11461

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11462
  br label %31, !dbg !11464

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11465
  %19 = icmp eq i32 %18, 0, !dbg !11467
  br i1 %19, label %33, label %20, !dbg !11468

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11469
  br label %31, !dbg !11471

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11472
  %24 = icmp eq i32 %23, 0, !dbg !11474
  br i1 %24, label %31, label %25, !dbg !11475

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11476
  %27 = icmp eq i32 %26, 0, !dbg !11479
  br i1 %27, label %28, label %31, !dbg !11480

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11481
  br label %33, !dbg !11482

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11442
  ret i32 %34, !dbg !11482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11487, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %1, metadata !11488, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %2, metadata !11489, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %3, metadata !11490, metadata !DIExpression()), !dbg !11498
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11499
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11499
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11499
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11491, metadata !DIExpression()), !dbg !11498
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11500
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11500
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11500
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11492, metadata !DIExpression()), !dbg !11498
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #27, !dbg !11501
  call void @llvm.dbg.value(metadata i32 %11, metadata !11493, metadata !DIExpression()), !dbg !11498
  %12 = and i32 %2, 48, !dbg !11502
  call void @llvm.dbg.value(metadata i32 %12, metadata !11494, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %2, metadata !11495, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %2, metadata !11496, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11498
  call void @llvm.dbg.value(metadata i32 %2, metadata !11497, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11498
  %13 = lshr i32 %2, 6, !dbg !11503
  %14 = and i32 %13, 1, !dbg !11503
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #27, !dbg !11504
  %15 = lshr i32 %2, 7, !dbg !11505
  %16 = and i32 %15, 3, !dbg !11505
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #27, !dbg !11506
  %17 = lshr i32 %2, 9, !dbg !11507
  %18 = and i32 %17, 3, !dbg !11507
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #27, !dbg !11508
  %19 = icmp eq i32 %12, 32, !dbg !11509
  br i1 %19, label %20, label %24, !dbg !11511

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11512
  br i1 %21, label %22, label %23, !dbg !11515

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11516
  br label %24, !dbg !11518

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #27, !dbg !11519
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11521
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #27, !dbg !11522
  ret void, !dbg !11523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !11524 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11526, metadata !DIExpression()), !dbg !11528
  %2 = shl nuw i32 1, %0, !dbg !11529
  call void @llvm.dbg.value(metadata i32 %2, metadata !11527, metadata !DIExpression()), !dbg !11528
  ret i32 %2, !dbg !11530
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !11531 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11535, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.value(metadata i32 %1, metadata !11536, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.value(metadata i32 %2, metadata !11537, metadata !DIExpression()), !dbg !11538
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11539
  %5 = load volatile i32, i32* %4, align 4, !dbg !11539
  %6 = xor i32 %1, -1, !dbg !11539
  %7 = and i32 %5, %6, !dbg !11539
  %8 = mul i32 %2, %1, !dbg !11539
  %9 = or i32 %7, %8, !dbg !11539
  store volatile i32 %9, i32* %4, align 4, !dbg !11539
  ret void, !dbg !11540
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11541 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11543, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i32 %1, metadata !11544, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata i32 %2, metadata !11545, metadata !DIExpression()), !dbg !11546
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11547
  %5 = load volatile i32, i32* %4, align 4, !dbg !11547
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()) #25, !dbg !11548
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11550, !srcloc !11352
  call void @llvm.dbg.value(metadata i32 %6, metadata !11348, metadata !DIExpression()) #25, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %6, metadata !11353, metadata !DIExpression()) #25, !dbg !11551
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11553, !range !5450
  %8 = shl nuw nsw i32 %7, 1, !dbg !11547
  %9 = shl i32 3, %8, !dbg !11547
  %10 = xor i32 %9, -1, !dbg !11547
  %11 = and i32 %5, %10, !dbg !11547
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()) #25, !dbg !11554
  call void @llvm.dbg.value(metadata i32 %6, metadata !11348, metadata !DIExpression()) #25, !dbg !11554
  call void @llvm.dbg.value(metadata i32 %6, metadata !11353, metadata !DIExpression()) #25, !dbg !11556
  %12 = shl i32 %2, %8, !dbg !11547
  %13 = or i32 %11, %12, !dbg !11547
  store volatile i32 %13, i32* %4, align 4, !dbg !11547
  ret void, !dbg !11558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11559 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11561, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i32 %1, metadata !11562, metadata !DIExpression()), !dbg !11564
  call void @llvm.dbg.value(metadata i32 %2, metadata !11563, metadata !DIExpression()), !dbg !11564
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11565
  %5 = load volatile i32, i32* %4, align 4, !dbg !11565
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()) #25, !dbg !11566
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11568, !srcloc !11352
  call void @llvm.dbg.value(metadata i32 %6, metadata !11348, metadata !DIExpression()) #25, !dbg !11566
  call void @llvm.dbg.value(metadata i32 %6, metadata !11353, metadata !DIExpression()) #25, !dbg !11569
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11571, !range !5450
  %8 = shl nuw nsw i32 %7, 1, !dbg !11565
  %9 = shl i32 3, %8, !dbg !11565
  %10 = xor i32 %9, -1, !dbg !11565
  %11 = and i32 %5, %10, !dbg !11565
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()) #25, !dbg !11572
  call void @llvm.dbg.value(metadata i32 %6, metadata !11348, metadata !DIExpression()) #25, !dbg !11572
  call void @llvm.dbg.value(metadata i32 %6, metadata !11353, metadata !DIExpression()) #25, !dbg !11574
  %12 = shl i32 %2, %8, !dbg !11565
  %13 = or i32 %11, %12, !dbg !11565
  store volatile i32 %13, i32* %4, align 4, !dbg !11565
  ret void, !dbg !11576
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11577 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11579, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i32 %1, metadata !11580, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.value(metadata i32 %2, metadata !11581, metadata !DIExpression()), !dbg !11582
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11583
  %5 = load volatile i32, i32* %4, align 4, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()) #25, !dbg !11584
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11586, !srcloc !11352
  call void @llvm.dbg.value(metadata i32 %6, metadata !11348, metadata !DIExpression()) #25, !dbg !11584
  call void @llvm.dbg.value(metadata i32 %6, metadata !11353, metadata !DIExpression()) #25, !dbg !11587
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11589, !range !5450
  %8 = shl nuw nsw i32 %7, 2, !dbg !11583
  %9 = shl i32 15, %8, !dbg !11583
  %10 = xor i32 %9, -1, !dbg !11583
  %11 = and i32 %5, %10, !dbg !11583
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()) #25, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %6, metadata !11348, metadata !DIExpression()) #25, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %6, metadata !11353, metadata !DIExpression()) #25, !dbg !11592
  %12 = shl i32 %2, %8, !dbg !11583
  %13 = or i32 %11, %12, !dbg !11583
  store volatile i32 %13, i32* %4, align 4, !dbg !11583
  ret void, !dbg !11594
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11595 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11597, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.value(metadata i32 %1, metadata !11598, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.value(metadata i32 %2, metadata !11599, metadata !DIExpression()), !dbg !11600
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11601
  %5 = load volatile i32, i32* %4, align 4, !dbg !11601
  %6 = lshr i32 %1, 8, !dbg !11601
  call void @llvm.dbg.value(metadata i32 %6, metadata !11345, metadata !DIExpression()) #25, !dbg !11602
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11604, !srcloc !11352
  call void @llvm.dbg.value(metadata i32 %7, metadata !11348, metadata !DIExpression()) #25, !dbg !11602
  call void @llvm.dbg.value(metadata i32 %7, metadata !11353, metadata !DIExpression()) #25, !dbg !11605
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11607, !range !5450
  %9 = shl nuw nsw i32 %8, 2, !dbg !11601
  %10 = shl i32 15, %9, !dbg !11601
  %11 = xor i32 %10, -1, !dbg !11601
  %12 = and i32 %5, %11, !dbg !11601
  call void @llvm.dbg.value(metadata i32 %6, metadata !11345, metadata !DIExpression()) #25, !dbg !11608
  call void @llvm.dbg.value(metadata i32 %7, metadata !11348, metadata !DIExpression()) #25, !dbg !11608
  call void @llvm.dbg.value(metadata i32 %7, metadata !11353, metadata !DIExpression()) #25, !dbg !11610
  %13 = shl i32 %2, %9, !dbg !11601
  %14 = or i32 %12, %13, !dbg !11601
  store volatile i32 %14, i32* %4, align 4, !dbg !11601
  ret void, !dbg !11612
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11613 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11615, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i32 %1, metadata !11616, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i32 %2, metadata !11617, metadata !DIExpression()), !dbg !11618
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11619
  %5 = load volatile i32, i32* %4, align 4, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()) #25, !dbg !11620
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11622, !srcloc !11352
  call void @llvm.dbg.value(metadata i32 %6, metadata !11348, metadata !DIExpression()) #25, !dbg !11620
  call void @llvm.dbg.value(metadata i32 %6, metadata !11353, metadata !DIExpression()) #25, !dbg !11623
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11625, !range !5450
  %8 = shl nuw nsw i32 %7, 1, !dbg !11619
  %9 = shl i32 3, %8, !dbg !11619
  %10 = xor i32 %9, -1, !dbg !11619
  %11 = and i32 %5, %10, !dbg !11619
  call void @llvm.dbg.value(metadata i32 %1, metadata !11345, metadata !DIExpression()) #25, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %6, metadata !11348, metadata !DIExpression()) #25, !dbg !11626
  call void @llvm.dbg.value(metadata i32 %6, metadata !11353, metadata !DIExpression()) #25, !dbg !11628
  %12 = shl i32 %2, %8, !dbg !11619
  %13 = or i32 %11, %12, !dbg !11619
  store volatile i32 %13, i32* %4, align 4, !dbg !11619
  ret void, !dbg !11630
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11633, metadata !DIExpression()), !dbg !11636
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11637
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11637
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11637
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11634, metadata !DIExpression()), !dbg !11636
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11638
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11639
  %6 = tail call fastcc zeroext i1 @device_is_ready.201() #27, !dbg !11640
  br i1 %6, label %7, label %11, !dbg !11642

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #27, !dbg !11643
  call void @llvm.dbg.value(metadata i32 %8, metadata !11635, metadata !DIExpression()), !dbg !11636
  %9 = icmp slt i32 %8, 0, !dbg !11644
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11646
  br label %11, !dbg !11646

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11636
  ret i32 %12, !dbg !11647
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.201() unnamed_addr #1 !dbg !11648 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11652, metadata !DIExpression()), !dbg !11653
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11654, !srcloc !11656
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.202() #27, !dbg !11657
  ret i1 %1, !dbg !11658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !11659 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11663, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.value(metadata i8 1, metadata !11664, metadata !DIExpression()), !dbg !11668
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11669
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !11669
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !11669
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !11665, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.value(metadata i32 0, metadata !11666, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11667, metadata !DIExpression()), !dbg !11668
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !11670
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !11673
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #27, !dbg !11674
  call void @llvm.dbg.value(metadata i32 %7, metadata !11666, metadata !DIExpression()), !dbg !11668
  ret i32 %7, !dbg !11675
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.202() unnamed_addr #1 !dbg !11676 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11678, metadata !DIExpression()), !dbg !11679
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #26, !dbg !11680
  ret i1 %1, !dbg !11681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !11682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11686, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 %1, metadata !11687, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 %2, metadata !11688, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 %3, metadata !11689, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.value(metadata i32 0, metadata !11690, metadata !DIExpression()), !dbg !11694
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #27, !dbg !11695
  %5 = icmp eq i32 %3, 17, !dbg !11696
  br i1 %5, label %6, label %14, !dbg !11697

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !11698
  call void @llvm.dbg.value(metadata i32 %7, metadata !11691, metadata !DIExpression()), !dbg !11699
  %8 = icmp eq i32 %7, 0, !dbg !11700
  %9 = shl nuw i32 1, %1, !dbg !11702
  br i1 %8, label %12, label %10, !dbg !11703

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11704
  br label %14, !dbg !11706

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #27, !dbg !11707
  br label %14, !dbg !11710

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !11711
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #16 !dbg !11712 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11714, metadata !DIExpression()), !dbg !11718
  call void @llvm.dbg.value(metadata i8* %1, metadata !11715, metadata !DIExpression()), !dbg !11718
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11719
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11719
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11719
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11716, metadata !DIExpression()), !dbg !11718
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11720
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11720
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #27, !dbg !11722
  %9 = icmp eq i32 %8, 0, !dbg !11722
  br i1 %9, label %12, label %10, !dbg !11723

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11724
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #27, !dbg !11726
  br label %12, !dbg !11727

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11728
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11730
  %15 = icmp eq i32 %14, 0, !dbg !11730
  br i1 %15, label %19, label %16, !dbg !11731

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11732
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #27, !dbg !11733
  store i8 %18, i8* %1, align 1, !dbg !11734
  br label %19, !dbg !11735

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !11718
  ret i32 %20, !dbg !11736
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !11737 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11739, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.value(metadata i8 %1, metadata !11740, metadata !DIExpression()), !dbg !11743
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11744
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11744
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11744
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11741, metadata !DIExpression()), !dbg !11743
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !11745

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11746
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #27, !dbg !11749
  %10 = icmp eq i32 %9, 0, !dbg !11749
  br i1 %10, label %18, label %11, !dbg !11750

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !11751, !srcloc !11758
  call void @llvm.dbg.value(metadata i32 undef, metadata !11754, metadata !DIExpression()) #25, !dbg !11759
  call void @llvm.dbg.value(metadata i32 undef, metadata !11755, metadata !DIExpression()) #25, !dbg !11759
  call void @llvm.dbg.value(metadata i32 undef, metadata !11742, metadata !DIExpression()), !dbg !11743
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11760
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #27, !dbg !11762
  %15 = icmp eq i32 %14, 0, !dbg !11762
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !11751
  br i1 %15, label %17, label %19, !dbg !11763

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !11754, metadata !DIExpression()) #25, !dbg !11759
  call void @llvm.dbg.value(metadata i32 %16, metadata !11742, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.value(metadata i32 undef, metadata !11764, metadata !DIExpression()) #25, !dbg !11767
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !11769, !srcloc !11770
  br label %18, !dbg !11771

18:                                               ; preds = %17, %7
  br label %7, !dbg !11746, !llvm.loop !11772

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !11751
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11774
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #27, !dbg !11775
  call void @llvm.dbg.value(metadata i32 %20, metadata !11764, metadata !DIExpression()) #25, !dbg !11776
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !11778, !srcloc !11770
  ret void, !dbg !11779
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #16 !dbg !11780 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11782, metadata !DIExpression()), !dbg !11785
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11786
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11786
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11786
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11783, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.value(metadata i32 0, metadata !11784, metadata !DIExpression()), !dbg !11785
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11787
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11787
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #27, !dbg !11789
  %8 = icmp ne i32 %7, 0, !dbg !11789
  %9 = zext i1 %8 to i32, !dbg !11790
  call void @llvm.dbg.value(metadata i32 %9, metadata !11784, metadata !DIExpression()), !dbg !11785
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11791
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #27, !dbg !11793
  %12 = icmp eq i32 %11, 0, !dbg !11793
  %13 = or i32 %9, 2, !dbg !11794
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !11794
  call void @llvm.dbg.value(metadata i32 %14, metadata !11784, metadata !DIExpression()), !dbg !11785
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11795
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #27, !dbg !11797
  %17 = icmp eq i32 %16, 0, !dbg !11797
  %18 = or i32 %14, 4, !dbg !11798
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !11798
  call void @llvm.dbg.value(metadata i32 %19, metadata !11784, metadata !DIExpression()), !dbg !11785
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11799
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #27, !dbg !11801
  %22 = icmp eq i32 %21, 0, !dbg !11801
  %23 = or i32 %19, 8, !dbg !11802
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !11802
  call void @llvm.dbg.value(metadata i32 %24, metadata !11784, metadata !DIExpression()), !dbg !11785
  %25 = and i32 %24, 8, !dbg !11803
  %26 = icmp eq i32 %25, 0, !dbg !11803
  br i1 %26, label %29, label %27, !dbg !11805

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11806
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #27, !dbg !11808
  br label %29, !dbg !11809

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !11810
  %31 = icmp eq i32 %30, 0, !dbg !11810
  br i1 %31, label %34, label %32, !dbg !11812

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11813
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #27, !dbg !11815
  br label %34, !dbg !11816

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !11817
  %36 = icmp eq i32 %35, 0, !dbg !11817
  br i1 %36, label %39, label %37, !dbg !11819

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11820
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #27, !dbg !11822
  br label %39, !dbg !11823

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !11824
  %41 = icmp eq i32 %40, 0, !dbg !11824
  br i1 %41, label %44, label %42, !dbg !11826

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11827
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #27, !dbg !11829
  br label %44, !dbg !11830

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11831
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #27, !dbg !11832
  ret i32 %24, !dbg !11833
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !11834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11836, metadata !DIExpression()), !dbg !11845
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11837, metadata !DIExpression()), !dbg !11845
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11846
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11846
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11846
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11838, metadata !DIExpression()), !dbg !11845
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11847
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !11847
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !11847
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !11839, metadata !DIExpression()), !dbg !11845
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11848
  %10 = load i8, i8* %9, align 4, !dbg !11848
  %11 = zext i8 %10 to i32, !dbg !11849
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #27, !dbg !11850
  call void @llvm.dbg.value(metadata i32 %12, metadata !11841, metadata !DIExpression()), !dbg !11845
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11851
  %14 = load i8, i8* %13, align 1, !dbg !11851
  %15 = zext i8 %14 to i32, !dbg !11852
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #27, !dbg !11853
  call void @llvm.dbg.value(metadata i32 %16, metadata !11842, metadata !DIExpression()), !dbg !11845
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11854
  %18 = load i8, i8* %17, align 2, !dbg !11854
  %19 = zext i8 %18 to i32, !dbg !11855
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #27, !dbg !11856
  call void @llvm.dbg.value(metadata i32 %20, metadata !11843, metadata !DIExpression()), !dbg !11845
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11857
  %22 = load i8, i8* %21, align 1, !dbg !11857
  %23 = zext i8 %22 to i32, !dbg !11858
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #27, !dbg !11859
  call void @llvm.dbg.value(metadata i32 %24, metadata !11844, metadata !DIExpression()), !dbg !11845
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !11860

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !11862
  br i1 %26, label %69, label %27, !dbg !11864

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !11865

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !11866
  br i1 %29, label %65, label %30, !dbg !11866

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !11868
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !11845
  br i1 %31, label %38, label %34, !dbg !11870

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !11871
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !11871

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !11874
  br i1 %37, label %38, label %69, !dbg !11875

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11876
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #27, !dbg !11877
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #27, !dbg !11878
  %41 = icmp eq i32 %12, %40, !dbg !11880
  br i1 %41, label %43, label %42, !dbg !11881

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #27, !dbg !11882
  br label %43, !dbg !11884

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #27, !dbg !11885
  %45 = icmp eq i32 %16, %44, !dbg !11887
  br i1 %45, label %47, label %46, !dbg !11888

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #27, !dbg !11889
  br label %47, !dbg !11891

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #27, !dbg !11892
  %49 = icmp eq i32 %20, %48, !dbg !11894
  br i1 %49, label %51, label %50, !dbg !11895

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #27, !dbg !11896
  br label %51, !dbg !11898

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #27, !dbg !11899
  %53 = icmp eq i32 %24, %52, !dbg !11901
  br i1 %53, label %55, label %54, !dbg !11902

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #27, !dbg !11903
  br label %55, !dbg !11905

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11906
  %57 = load i32, i32* %56, align 4, !dbg !11906
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !11908
  %59 = load i32, i32* %58, align 4, !dbg !11908
  %60 = icmp eq i32 %57, %59, !dbg !11909
  br i1 %60, label %63, label %61, !dbg !11910

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #27, !dbg !11911
  %62 = load i32, i32* %56, align 4, !dbg !11913
  store i32 %62, i32* %58, align 4, !dbg !11914
  br label %63, !dbg !11915

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !11916
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #27, !dbg !11917
  br label %69, !dbg !11918

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !11866
  %67 = and i8 %66, 1, !dbg !11866
  %68 = icmp eq i8 %67, 0, !dbg !11866
  br i1 %68, label %30, label %69, !dbg !11866

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !11845
  ret i32 %70, !dbg !11919
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !11920 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11922, metadata !DIExpression()), !dbg !11925
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !11923, metadata !DIExpression()), !dbg !11925
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11926
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !11926
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !11926
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !11924, metadata !DIExpression()), !dbg !11925
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !11927
  %7 = load i32, i32* %6, align 4, !dbg !11927
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !11928
  store i32 %7, i32* %8, align 4, !dbg !11929
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11930, !range !11931
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #27, !dbg !11932
  %11 = trunc i32 %10 to i8, !dbg !11932
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !11933
  store i8 %11, i8* %12, align 4, !dbg !11934
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #27, !dbg !11935, !range !11936
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #27, !dbg !11937
  %15 = trunc i32 %14 to i8, !dbg !11937
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !11938
  store i8 %15, i8* %16, align 1, !dbg !11939
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #27, !dbg !11940
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #27, !dbg !11941, !range !11931
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #27, !dbg !11942
  %20 = trunc i32 %19 to i8, !dbg !11942
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !11943
  store i8 %20, i8* %21, align 2, !dbg !11944
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #27, !dbg !11945, !range !11946
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #27, !dbg !11947
  %24 = trunc i32 %23 to i8, !dbg !11947
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !11948
  store i8 %24, i8* %25, align 1, !dbg !11949
  ret i32 0, !dbg !11950
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11951 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11955, metadata !DIExpression()), !dbg !11957
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11958
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11958
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11958
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11956, metadata !DIExpression()), !dbg !11957
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11959
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11959
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #27, !dbg !11960
  ret i32 %7, !dbg !11961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !11962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11966, metadata !DIExpression()), !dbg !11967
  %2 = icmp eq i32 %0, 1024, !dbg !11968
  %3 = select i1 %2, i32 2, i32 0, !dbg !11968
  %4 = icmp eq i32 %0, 1536, !dbg !11968
  %5 = select i1 %4, i32 1, i32 %3, !dbg !11968
  ret i32 %5, !dbg !11969
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11970 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11972, metadata !DIExpression()), !dbg !11974
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11975
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11975
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11975
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11973, metadata !DIExpression()), !dbg !11974
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11976
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11976
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #27, !dbg !11977
  ret i32 %7, !dbg !11978
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !11979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11983, metadata !DIExpression()), !dbg !11984
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !11985
  %3 = icmp ult i32 %2, 4, !dbg !11985
  br i1 %3, label %4, label %7, !dbg !11985

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !11985
  %6 = load i32, i32* %5, align 4, !dbg !11985
  br label %7, !dbg !11985

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !11986
  ret i32 %8, !dbg !11988
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !11989 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11991, metadata !DIExpression()), !dbg !11993
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11994
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11994
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11994
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11992, metadata !DIExpression()), !dbg !11993
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11995
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !11995
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #27, !dbg !11996
  ret i32 %7, !dbg !11997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !11998 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12002, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 %1, metadata !12003, metadata !DIExpression()), !dbg !12004
  %3 = icmp eq i32 %0, 4096, !dbg !12005
  %4 = icmp eq i32 %1, 0, !dbg !12005
  %5 = select i1 %4, i32 4, i32 3, !dbg !12005
  %6 = select i1 %4, i32 3, i32 2, !dbg !12005
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12005
  ret i32 %7, !dbg !12006
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #18 !dbg !12007 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12009, metadata !DIExpression()), !dbg !12011
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12012
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12012
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12012
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12010, metadata !DIExpression()), !dbg !12011
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12013
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12013
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #27, !dbg !12014
  ret i32 %7, !dbg !12015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !12016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12020, metadata !DIExpression()), !dbg !12021
  %2 = icmp eq i32 %0, 768, !dbg !12022
  %3 = zext i1 %2 to i32, !dbg !12021
  ret i32 %3, !dbg !12024
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12025 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12030, metadata !DIExpression()), !dbg !12031
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12032
  %3 = load volatile i32, i32* %2, align 4, !dbg !12032
  %4 = and i32 %3, 768, !dbg !12032
  ret i32 %4, !dbg !12033
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12034 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12036, metadata !DIExpression()), !dbg !12037
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12038
  %3 = load volatile i32, i32* %2, align 4, !dbg !12038
  %4 = and i32 %3, 4096, !dbg !12038
  ret i32 %4, !dbg !12039
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12040 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12042, metadata !DIExpression()), !dbg !12043
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12044
  %3 = load volatile i32, i32* %2, align 4, !dbg !12044
  %4 = and i32 %3, 12288, !dbg !12044
  ret i32 %4, !dbg !12045
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12046 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12048, metadata !DIExpression()), !dbg !12049
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12050
  %3 = load volatile i32, i32* %2, align 4, !dbg !12050
  %4 = and i32 %3, 1536, !dbg !12050
  ret i32 %4, !dbg !12051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !12052 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12056, metadata !DIExpression()), !dbg !12057
  %2 = icmp eq i32 %0, 2, !dbg !12058
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12058
  %4 = icmp eq i32 %0, 1, !dbg !12058
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12058
  ret i32 %5, !dbg !12059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !12060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12064, metadata !DIExpression()), !dbg !12065
  %2 = icmp ult i32 %0, 3, !dbg !12066
  br i1 %2, label %3, label %6, !dbg !12066

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12066
  %5 = load i32, i32* %4, align 4, !dbg !12066
  br label %6, !dbg !12066

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12067
  ret i32 %7, !dbg !12069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !12070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12074, metadata !DIExpression()), !dbg !12076
  call void @llvm.dbg.value(metadata i32 %1, metadata !12075, metadata !DIExpression()), !dbg !12076
  %3 = icmp eq i32 %0, 4, !dbg !12077
  %4 = icmp eq i32 %1, 0, !dbg !12077
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12077
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12077
  ret i32 %6, !dbg !12078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !12079 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12083, metadata !DIExpression()), !dbg !12084
  %2 = icmp eq i32 %0, 1, !dbg !12085
  %3 = select i1 %2, i32 768, i32 0, !dbg !12084
  ret i32 %3, !dbg !12087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12088 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12092, metadata !DIExpression()), !dbg !12093
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12094
  %3 = load volatile i32, i32* %2, align 4, !dbg !12094
  %4 = and i32 %3, -8193, !dbg !12094
  store volatile i32 %4, i32* %2, align 4, !dbg !12094
  ret void, !dbg !12095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !12096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12100, metadata !DIExpression()), !dbg !12103
  call void @llvm.dbg.value(metadata i32 %1, metadata !12101, metadata !DIExpression()), !dbg !12103
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12104
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12104
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12104
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12102, metadata !DIExpression()), !dbg !12103
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12105
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12105
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12106
  ret void, !dbg !12107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !12108 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12110, metadata !DIExpression()), !dbg !12113
  call void @llvm.dbg.value(metadata i32 %1, metadata !12111, metadata !DIExpression()), !dbg !12113
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12114
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12114
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12114
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12112, metadata !DIExpression()), !dbg !12113
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12115
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12115
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12116
  ret void, !dbg !12117
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !12118 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12120, metadata !DIExpression()), !dbg !12123
  call void @llvm.dbg.value(metadata i32 %1, metadata !12121, metadata !DIExpression()), !dbg !12123
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12124
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12124
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12124
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12122, metadata !DIExpression()), !dbg !12123
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12125
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12125
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12126
  ret void, !dbg !12127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #17 !dbg !12128 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12130, metadata !DIExpression()), !dbg !12133
  call void @llvm.dbg.value(metadata i32 %1, metadata !12131, metadata !DIExpression()), !dbg !12133
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12134
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12134
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12134
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12132, metadata !DIExpression()), !dbg !12133
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12135
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12135
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #27, !dbg !12136
  ret void, !dbg !12137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12138 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12140, metadata !DIExpression()), !dbg !12145
  call void @llvm.dbg.value(metadata i32 %1, metadata !12141, metadata !DIExpression()), !dbg !12145
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12146
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12146
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12146
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12142, metadata !DIExpression()), !dbg !12145
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12147
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12147
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12147
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12143, metadata !DIExpression()), !dbg !12145
  %10 = bitcast i32* %3 to i8*, !dbg !12148
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12148
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12149
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12149
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12153
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12153
  %15 = load i8*, i8** %14, align 4, !dbg !12153
  call void @llvm.dbg.value(metadata i32* %3, metadata !12144, metadata !DIExpression(DW_OP_deref)), !dbg !12145
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #27, !dbg !12154
  %17 = icmp slt i32 %16, 0, !dbg !12155
  br i1 %17, label %18, label %21, !dbg !12156

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.205(i32 noundef 1) #27, !dbg !12157
  %20 = zext i8 %19 to i32, !dbg !12157
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.206, i32 0, i32 0), i32 noundef %20) #26, !dbg !12157
  br label %31, !dbg !12163

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12164
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12164
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #27, !dbg !12165
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12166
  %25 = load i32, i32* %3, align 4, !dbg !12167
  call void @llvm.dbg.value(metadata i32 %25, metadata !12144, metadata !DIExpression()), !dbg !12145
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #27, !dbg !12168
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12169
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !12169
  %28 = load volatile i32, i32* %27, align 4, !dbg !12169
  %29 = icmp ugt i32 %28, 16, !dbg !12169
  br i1 %29, label %31, label %30, !dbg !12172

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.207, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.208, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.209, i32 0, i32 0), i32 noundef 190) #26, !dbg !12173
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.210, i32 0, i32 0)) #26, !dbg !12173
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.209, i32 0, i32 0), i32 noundef 190) #26, !dbg !12173
  unreachable, !dbg !12173

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12175
  ret void, !dbg !12175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12176 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12178, metadata !DIExpression()), !dbg !12179
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12180
  %3 = load volatile i32, i32* %2, align 4, !dbg !12180
  %4 = or i32 %3, 8192, !dbg !12180
  store volatile i32 %4, i32* %2, align 4, !dbg !12180
  ret void, !dbg !12181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12182 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12184, metadata !DIExpression()), !dbg !12188
  call void @llvm.dbg.value(metadata i8* %1, metadata !12185, metadata !DIExpression()), !dbg !12188
  call void @llvm.dbg.value(metadata i32* %2, metadata !12186, metadata !DIExpression()), !dbg !12188
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12189
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12189
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12189
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12187, metadata !DIExpression()), !dbg !12188
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12190
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12190
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12192
  br i1 %9, label %12, label %10, !dbg !12193

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !12194
  br label %12, !dbg !12195

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12188
  ret i32 %13, !dbg !12196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.205(i32 noundef %0) unnamed_addr #4 !dbg !12197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12199, metadata !DIExpression()), !dbg !12200
  %2 = icmp eq i32 %0, 2, !dbg !12201
  %3 = select i1 %2, i8 87, i8 63, !dbg !12201
  %4 = icmp eq i32 %0, 1, !dbg !12201
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12201
  ret i8 %5, !dbg !12202
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12203 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12207, metadata !DIExpression()), !dbg !12209
  call void @llvm.dbg.value(metadata i32 0, metadata !12208, metadata !DIExpression()), !dbg !12209
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12210
  %3 = load volatile i32, i32* %2, align 4, !dbg !12210
  %4 = and i32 %3, -32769, !dbg !12210
  store volatile i32 %4, i32* %2, align 4, !dbg !12210
  ret void, !dbg !12211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !12212 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12216, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i32 %1, metadata !12217, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i32 0, metadata !12218, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.value(metadata i32 %2, metadata !12219, metadata !DIExpression()), !dbg !12220
  %4 = mul i32 %1, 25, !dbg !12221
  %5 = shl i32 %2, 2, !dbg !12221
  %6 = udiv i32 %4, %5, !dbg !12221
  %7 = udiv i32 %6, 100, !dbg !12221
  %8 = shl nuw nsw i32 %7, 4, !dbg !12221
  %9 = mul i32 %7, -100, !dbg !12221
  %10 = add i32 %9, %6, !dbg !12221
  %11 = shl i32 %10, 4, !dbg !12221
  %12 = add i32 %11, 50, !dbg !12221
  %13 = udiv i32 %12, 100, !dbg !12221
  %14 = and i32 %13, 240, !dbg !12221
  %15 = add nuw nsw i32 %14, %8, !dbg !12221
  %16 = and i32 %13, 15, !dbg !12221
  %17 = and i32 %15, 65520, !dbg !12224
  %18 = or i32 %17, %16, !dbg !12224
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12225
  store volatile i32 %18, i32* %19, align 4, !dbg !12226
  ret void, !dbg !12227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12228 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12230, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.value(metadata i32 %1, metadata !12231, metadata !DIExpression()), !dbg !12232
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12233
  %4 = load volatile i32, i32* %3, align 4, !dbg !12233
  %5 = and i32 %4, -769, !dbg !12233
  %6 = or i32 %5, %1, !dbg !12233
  store volatile i32 %6, i32* %3, align 4, !dbg !12233
  ret void, !dbg !12234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12235 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12237, metadata !DIExpression()), !dbg !12239
  call void @llvm.dbg.value(metadata i32 %1, metadata !12238, metadata !DIExpression()), !dbg !12239
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12240
  %4 = load volatile i32, i32* %3, align 4, !dbg !12240
  %5 = and i32 %4, -4097, !dbg !12240
  %6 = or i32 %5, %1, !dbg !12240
  store volatile i32 %6, i32* %3, align 4, !dbg !12240
  ret void, !dbg !12241
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12242 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12244, metadata !DIExpression()), !dbg !12246
  call void @llvm.dbg.value(metadata i32 %1, metadata !12245, metadata !DIExpression()), !dbg !12246
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12247
  %4 = load volatile i32, i32* %3, align 4, !dbg !12247
  %5 = and i32 %4, -12289, !dbg !12247
  %6 = or i32 %5, %1, !dbg !12247
  store volatile i32 %6, i32* %3, align 4, !dbg !12247
  ret void, !dbg !12248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !12249 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12251, metadata !DIExpression()), !dbg !12253
  call void @llvm.dbg.value(metadata i32 %1, metadata !12252, metadata !DIExpression()), !dbg !12253
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12254
  %4 = load volatile i32, i32* %3, align 4, !dbg !12254
  %5 = and i32 %4, -1537, !dbg !12254
  %6 = or i32 %5, %1, !dbg !12254
  store volatile i32 %6, i32* %3, align 4, !dbg !12254
  ret void, !dbg !12255
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12256 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12258, metadata !DIExpression()), !dbg !12259
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12260
  %3 = load volatile i32, i32* %2, align 4, !dbg !12260
  %4 = lshr i32 %3, 3, !dbg !12261
  %5 = and i32 %4, 1, !dbg !12261
  ret i32 %5, !dbg !12262
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12263 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12265, metadata !DIExpression()), !dbg !12266
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12267
  %3 = load volatile i32, i32* %2, align 4, !dbg !12267
  %4 = and i32 %3, 1, !dbg !12267
  ret i32 %4, !dbg !12268
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12269 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12271, metadata !DIExpression()), !dbg !12272
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12273
  %3 = load volatile i32, i32* %2, align 4, !dbg !12273
  %4 = lshr i32 %3, 1, !dbg !12274
  %5 = and i32 %4, 1, !dbg !12274
  ret i32 %5, !dbg !12275
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12276 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12278, metadata !DIExpression()), !dbg !12279
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12280
  %3 = load volatile i32, i32* %2, align 4, !dbg !12280
  %4 = lshr i32 %3, 8, !dbg !12281
  %5 = and i32 %4, 1, !dbg !12281
  ret i32 %5, !dbg !12282
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12283 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12285, metadata !DIExpression()), !dbg !12286
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12287
  store volatile i32 -257, i32* %2, align 4, !dbg !12287
  ret void, !dbg !12288
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12289 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12291, metadata !DIExpression()), !dbg !12293
  %3 = bitcast i32* %2 to i8*, !dbg !12294
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12294
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12292, metadata !DIExpression()), !dbg !12295
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12296
  %5 = load volatile i32, i32* %4, align 4, !dbg !12296
  store volatile i32 %5, i32* %2, align 4, !dbg !12297
  %6 = load volatile i32, i32* %2, align 4, !dbg !12298
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12299
  %8 = load volatile i32, i32* %7, align 4, !dbg !12299
  store volatile i32 %8, i32* %2, align 4, !dbg !12300
  %9 = load volatile i32, i32* %2, align 4, !dbg !12301
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12302
  ret void, !dbg !12302
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12303 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12305, metadata !DIExpression()), !dbg !12307
  %3 = bitcast i32* %2 to i8*, !dbg !12308
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12308
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12306, metadata !DIExpression()), !dbg !12309
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12310
  %5 = load volatile i32, i32* %4, align 4, !dbg !12310
  store volatile i32 %5, i32* %2, align 4, !dbg !12311
  %6 = load volatile i32, i32* %2, align 4, !dbg !12312
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12313
  %8 = load volatile i32, i32* %7, align 4, !dbg !12313
  store volatile i32 %8, i32* %2, align 4, !dbg !12314
  %9 = load volatile i32, i32* %2, align 4, !dbg !12315
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12316
  ret void, !dbg !12316
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12317 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12319, metadata !DIExpression()), !dbg !12321
  %3 = bitcast i32* %2 to i8*, !dbg !12322
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12322
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12320, metadata !DIExpression()), !dbg !12323
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12324
  %5 = load volatile i32, i32* %4, align 4, !dbg !12324
  store volatile i32 %5, i32* %2, align 4, !dbg !12325
  %6 = load volatile i32, i32* %2, align 4, !dbg !12326
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12327
  %8 = load volatile i32, i32* %7, align 4, !dbg !12327
  store volatile i32 %8, i32* %2, align 4, !dbg !12328
  %9 = load volatile i32, i32* %2, align 4, !dbg !12329
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12330
  ret void, !dbg !12330
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !12331 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12333, metadata !DIExpression()), !dbg !12335
  %3 = bitcast i32* %2 to i8*, !dbg !12336
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12336
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12334, metadata !DIExpression()), !dbg !12337
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12338
  %5 = load volatile i32, i32* %4, align 4, !dbg !12338
  store volatile i32 %5, i32* %2, align 4, !dbg !12339
  %6 = load volatile i32, i32* %2, align 4, !dbg !12340
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12341
  %8 = load volatile i32, i32* %7, align 4, !dbg !12341
  store volatile i32 %8, i32* %2, align 4, !dbg !12342
  %9 = load volatile i32, i32* %2, align 4, !dbg !12343
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12344
  ret void, !dbg !12344
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12345 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12347, metadata !DIExpression()), !dbg !12348
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12349
  %3 = load volatile i32, i32* %2, align 4, !dbg !12349
  %4 = lshr i32 %3, 7, !dbg !12350
  %5 = and i32 %4, 1, !dbg !12350
  ret i32 %5, !dbg !12351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !12352 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12356, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata i8 %1, metadata !12357, metadata !DIExpression()), !dbg !12358
  %3 = zext i8 %1 to i32, !dbg !12359
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12360
  store volatile i32 %3, i32* %4, align 4, !dbg !12361
  ret void, !dbg !12362
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12363 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12365, metadata !DIExpression()), !dbg !12366
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12367
  %3 = load volatile i32, i32* %2, align 4, !dbg !12367
  %4 = lshr i32 %3, 5, !dbg !12368
  %5 = and i32 %4, 1, !dbg !12368
  ret i32 %5, !dbg !12369
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #18 !dbg !12370 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12374, metadata !DIExpression()), !dbg !12375
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12376
  %3 = load volatile i32, i32* %2, align 4, !dbg !12376
  %4 = trunc i32 %3 to i8, !dbg !12377
  ret i8 %4, !dbg !12378
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12379 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12381, metadata !DIExpression()), !dbg !12387
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12388
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12388
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12388
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12382, metadata !DIExpression()), !dbg !12387
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12389
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12389
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12389
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12383, metadata !DIExpression()), !dbg !12387
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #27, !dbg !12390
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12391
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12391
  %10 = tail call fastcc zeroext i1 @device_is_ready.215(%struct.device* noundef %9) #27, !dbg !12393
  br i1 %10, label %14, label %11, !dbg !12394

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.205(i32 noundef 1) #27, !dbg !12395
  %13 = zext i8 %12 to i32, !dbg !12395
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.216, i32 0, i32 0), i32 noundef %13) #26, !dbg !12395
  br label %62, !dbg !12401

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12402
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12403
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12403
  %18 = load i8*, i8** %17, align 4, !dbg !12403
  %19 = tail call fastcc i32 @clock_control_on.217(%struct.device* noundef %15, i8* noundef %18) #27, !dbg !12404
  call void @llvm.dbg.value(metadata i32 %19, metadata !12386, metadata !DIExpression()), !dbg !12387
  %20 = icmp eq i32 %19, 0, !dbg !12405
  br i1 %20, label %24, label %21, !dbg !12407

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.205(i32 noundef 1) #27, !dbg !12408
  %23 = zext i8 %22 to i32, !dbg !12408
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.218, i32 0, i32 0), i32 noundef %23) #26, !dbg !12408
  br label %62, !dbg !12414

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12415
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12415
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #27, !dbg !12416
  call void @llvm.dbg.value(metadata i32 %27, metadata !12386, metadata !DIExpression()), !dbg !12387
  %28 = icmp slt i32 %27, 0, !dbg !12417
  br i1 %28, label %62, label %29, !dbg !12419

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12420
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12420
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #27, !dbg !12421
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12422
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #27, !dbg !12423
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12424
  %34 = load i32, i32* %33, align 4, !dbg !12424
  %35 = icmp ult i32 %34, 3, !dbg !12426
  br i1 %35, label %39, label %36, !dbg !12426

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.205(i32 noundef 2) #27, !dbg !12427
  %38 = zext i8 %37 to i32, !dbg !12427
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10.219, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #26, !dbg !12427
  call void @llvm.dbg.value(metadata i32 0, metadata !12384, metadata !DIExpression()), !dbg !12387
  call void @llvm.dbg.value(metadata i32 0, metadata !12385, metadata !DIExpression()), !dbg !12387
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12426
  %41 = load i32, i32* %40, align 4, !dbg !12426
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.11, i32 0, i32 %34, !dbg !12426
  %43 = load i32, i32* %42, align 4, !dbg !12426
  br label %44, !dbg !12426

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12436
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12436
  call void @llvm.dbg.value(metadata i32 %46, metadata !12385, metadata !DIExpression()), !dbg !12387
  call void @llvm.dbg.value(metadata i32 %45, metadata !12384, metadata !DIExpression()), !dbg !12387
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12437
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #27, !dbg !12438
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12439
  %49 = load i8, i8* %48, align 4, !dbg !12439, !range !8168
  %50 = icmp eq i8 %49, 0, !dbg !12439
  br i1 %50, label %52, label %51, !dbg !12441

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #27, !dbg !12442
  br label %52, !dbg !12444

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12445
  %54 = load i32, i32* %53, align 4, !dbg !12445
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #27, !dbg !12446
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12447
  %56 = load i8, i8* %55, align 4, !dbg !12447, !range !8168
  %57 = icmp eq i8 %56, 0, !dbg !12447
  br i1 %57, label %60, label %58, !dbg !12449

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12450
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #27, !dbg !12452
  br label %60, !dbg !12453

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12454
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #27, !dbg !12455
  br label %62, !dbg !12456

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12387
  ret i32 %63, !dbg !12457
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !12458 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12462, metadata !DIExpression()), !dbg !12466
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12467
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12467
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12467
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12463, metadata !DIExpression()), !dbg !12466
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !12464, metadata !DIExpression()), !dbg !12466
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12468
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !12469
  ret void, !dbg !12470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.215(%struct.device* noundef %0) unnamed_addr #1 !dbg !12471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12475, metadata !DIExpression()), !dbg !12476
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12477, !srcloc !12479
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.220(%struct.device* noundef %0) #27, !dbg !12480
  ret i1 %2, !dbg !12481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.217(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12482 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12484, metadata !DIExpression()), !dbg !12487
  call void @llvm.dbg.value(metadata i8* %1, metadata !12485, metadata !DIExpression()), !dbg !12487
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12488
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12488
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12488
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12486, metadata !DIExpression()), !dbg !12487
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12489
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12489
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !12490
  ret i32 %8, !dbg !12491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12492 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12496, metadata !DIExpression()), !dbg !12500
  call void @llvm.dbg.value(metadata i8 0, metadata !12497, metadata !DIExpression()), !dbg !12500
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12501
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12501
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12499, metadata !DIExpression(DW_OP_deref)), !dbg !12500
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !12502
  call void @llvm.dbg.value(metadata i32 %4, metadata !12498, metadata !DIExpression()), !dbg !12500
  %5 = icmp slt i32 %4, 0, !dbg !12503
  br i1 %5, label %9, label %6, !dbg !12505

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12506
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12499, metadata !DIExpression()), !dbg !12500
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #27, !dbg !12507
  br label %9, !dbg !12508

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12500
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12509
  ret i32 %10, !dbg !12509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12510 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12512, metadata !DIExpression()), !dbg !12514
  call void @llvm.dbg.value(metadata i32 12, metadata !12513, metadata !DIExpression()), !dbg !12514
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12515
  %3 = load volatile i32, i32* %2, align 4, !dbg !12515
  %4 = or i32 %3, 12, !dbg !12515
  store volatile i32 %4, i32* %2, align 4, !dbg !12515
  ret void, !dbg !12516
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !12517 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12519, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.value(metadata i32 %1, metadata !12520, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.value(metadata i32 %2, metadata !12521, metadata !DIExpression()), !dbg !12523
  call void @llvm.dbg.value(metadata i32 0, metadata !12522, metadata !DIExpression()), !dbg !12523
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12524
  %5 = load volatile i32, i32* %4, align 4, !dbg !12524
  %6 = and i32 %5, -5633, !dbg !12524
  %7 = or i32 %2, %1, !dbg !12524
  %8 = or i32 %7, %6, !dbg !12524
  store volatile i32 %8, i32* %4, align 4, !dbg !12524
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12525
  %10 = load volatile i32, i32* %9, align 4, !dbg !12525
  %11 = and i32 %10, -12289, !dbg !12525
  store volatile i32 %11, i32* %9, align 4, !dbg !12525
  ret void, !dbg !12526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12527 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12529, metadata !DIExpression()), !dbg !12530
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12531
  %3 = load volatile i32, i32* %2, align 4, !dbg !12531
  %4 = or i32 %3, 8, !dbg !12531
  store volatile i32 %4, i32* %2, align 4, !dbg !12531
  ret void, !dbg !12532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12533 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12537, metadata !DIExpression()), !dbg !12540
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12538, metadata !DIExpression()), !dbg !12540
  call void @llvm.dbg.value(metadata i32 0, metadata !12539, metadata !DIExpression()), !dbg !12540
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12541
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12541
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12542
  %5 = load i8, i8* %4, align 4, !dbg !12542
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !12543
  ret i32 %6, !dbg !12544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.220(%struct.device* noundef %0) unnamed_addr #1 !dbg !12545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12547, metadata !DIExpression()), !dbg !12548
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !12549
  ret i1 %2, !dbg !12550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #17 !dbg !12551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12553, metadata !DIExpression()), !dbg !12554
  tail call fastcc void @__NVIC_SetPriority.222() #27, !dbg !12555
  store i32 3199, i32* @last_load, align 4, !dbg !12556
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12557
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12558
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12559
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12560
  %3 = or i32 %2, 7, !dbg !12560
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12560
  ret i32 0, !dbg !12561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.222() unnamed_addr #17 !dbg !12562 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12564, metadata !DIExpression()), !dbg !12566
  call void @llvm.dbg.value(metadata i32 1, metadata !12565, metadata !DIExpression()), !dbg !12566
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12567
  ret void, !dbg !12570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12571 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12573, metadata !DIExpression()), !dbg !12575
  %2 = tail call fastcc i32 @elapsed() #27, !dbg !12576
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12577
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12578
  %5 = add i32 %4, %3, !dbg !12578
  store i32 %5, i32* @cycle_count, align 4, !dbg !12578
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12579
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12580
  %7 = sub i32 %5, %6, !dbg !12583
  %8 = udiv i32 %7, 3200, !dbg !12584
  call void @llvm.dbg.value(metadata i32 %8, metadata !12574, metadata !DIExpression()), !dbg !12575
  %9 = mul nuw i32 %8, 3200, !dbg !12585
  %10 = add i32 %9, %6, !dbg !12586
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12586
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !12587
  tail call void @z_arm_int_exit() #26, !dbg !12588
  ret void, !dbg !12589
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #17 !dbg !12590 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12595
  call void @llvm.dbg.value(metadata i32 %1, metadata !12592, metadata !DIExpression()), !dbg !12596
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12597
  call void @llvm.dbg.value(metadata i32 %2, metadata !12593, metadata !DIExpression()), !dbg !12596
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12598
  call void @llvm.dbg.value(metadata i32 %3, metadata !12594, metadata !DIExpression()), !dbg !12596
  %4 = and i32 %2, 65536, !dbg !12599
  %5 = icmp ne i32 %4, 0, !dbg !12599
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12601
  %8 = load i32, i32* @last_load, align 4, !dbg !12596
  br i1 %7, label %9, label %13, !dbg !12601

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12602
  %11 = add i32 %10, %8, !dbg !12602
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12602
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12604
  br label %13, !dbg !12605

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12606
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12607
  %16 = add i32 %14, %15, !dbg !12608
  ret i32 %16, !dbg !12609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12610 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12614, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i1 %1, metadata !12615, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12627
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12628
  br i1 %4, label %5, label %8, !dbg !12628

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12630
  %7 = and i32 %6, -2, !dbg !12630
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12630
  store i32 -16777216, i32* @last_load, align 4, !dbg !12632
  br label %60, !dbg !12633

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12634
  call void @llvm.dbg.value(metadata i32 %9, metadata !12619, metadata !DIExpression()), !dbg !12627
  br i1 %3, label %18, label %10, !dbg !12635

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12635
  call void @llvm.dbg.value(metadata i32 undef, metadata !12614, metadata !DIExpression()), !dbg !12627
  %12 = icmp slt i32 %11, 1, !dbg !12636
  br i1 %12, label %18, label %13, !dbg !12636

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !12636
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !12636
  %16 = mul nuw nsw i32 %15, 3200, !dbg !12636
  %17 = add nuw nsw i32 %16, 3199, !dbg !12636
  br label %18, !dbg !12636

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12614, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12637, metadata !DIExpression()) #25, !dbg !12644
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12646, !srcloc !12652
  call void @llvm.dbg.value(metadata i32 undef, metadata !12649, metadata !DIExpression()) #25, !dbg !12653
  call void @llvm.dbg.value(metadata i32 undef, metadata !12650, metadata !DIExpression()) #25, !dbg !12653
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()) #25, !dbg !12644
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12654
  br i1 %21, label %23, label %22, !dbg !12657

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 148) #26, !dbg !12658
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.226, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12658
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 148) #26, !dbg !12658
  unreachable, !dbg !12658

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !12646
  call void @llvm.dbg.value(metadata i32 %24, metadata !12649, metadata !DIExpression()) #25, !dbg !12653
  call void @llvm.dbg.value(metadata i32 %24, metadata !12643, metadata !DIExpression()) #25, !dbg !12644
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12660
  call void @llvm.dbg.value(metadata i32 %24, metadata !12620, metadata !DIExpression()), !dbg !12627
  %25 = tail call fastcc i32 @elapsed() #27, !dbg !12661
  call void @llvm.dbg.value(metadata i32 %25, metadata !12625, metadata !DIExpression()), !dbg !12627
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12662
  call void @llvm.dbg.value(metadata i32 %26, metadata !12617, metadata !DIExpression()), !dbg !12627
  %27 = load i32, i32* @cycle_count, align 4, !dbg !12663
  %28 = add i32 %27, %25, !dbg !12663
  store i32 %28, i32* @cycle_count, align 4, !dbg !12663
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12664
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !12665
  %30 = sub i32 %28, %29, !dbg !12666
  call void @llvm.dbg.value(metadata i32 %30, metadata !12626, metadata !DIExpression()), !dbg !12627
  %31 = icmp slt i32 %30, 0, !dbg !12667
  br i1 %31, label %41, label %32, !dbg !12669

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !12616, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 undef, metadata !12616, metadata !DIExpression()), !dbg !12627
  %33 = add nuw i32 %19, %30, !dbg !12670
  %34 = urem i32 %33, 3200, !dbg !12672
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !12616, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12627
  %35 = sub nuw nsw i32 %19, %34, !dbg !12673
  call void @llvm.dbg.value(metadata i32 %35, metadata !12616, metadata !DIExpression()), !dbg !12627
  %36 = icmp ugt i32 %35, 1024, !dbg !12674
  br i1 %36, label %37, label %39, !dbg !12674

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !12616, metadata !DIExpression()), !dbg !12627
  %38 = icmp ugt i32 %35, 16771200, !dbg !12675
  br i1 %38, label %41, label %39, !dbg !12677

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16771200, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !12678
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12679
  call void @llvm.dbg.value(metadata i32 %43, metadata !12618, metadata !DIExpression()), !dbg !12627
  %44 = add nsw i32 %42, -1, !dbg !12680
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12681
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12682
  %45 = icmp ult i32 %26, %43, !dbg !12683
  br i1 %45, label %46, label %51, !dbg !12685

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !12686
  %48 = add i32 %26, %9, !dbg !12688
  %49 = sub i32 %48, %43, !dbg !12689
  %50 = add i32 %49, %47, !dbg !12686
  br label %55, !dbg !12690

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !12691
  %53 = load i32, i32* @cycle_count, align 4, !dbg !12693
  %54 = add i32 %52, %53, !dbg !12693
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !12694
  store i32 %56, i32* @cycle_count, align 4, !dbg !12694
  call void @llvm.dbg.value(metadata i32 undef, metadata !12695, metadata !DIExpression()) #25, !dbg !12701
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12700, metadata !DIExpression()) #25, !dbg !12701
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12703
  br i1 %57, label %59, label %58, !dbg !12706

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.227, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 194) #26, !dbg !12707
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.228, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12707
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 194) #26, !dbg !12707
  unreachable, !dbg !12707

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !12695, metadata !DIExpression()) #25, !dbg !12701
  call void @llvm.dbg.value(metadata i32 %24, metadata !12709, metadata !DIExpression()) #25, !dbg !12712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !12714, !srcloc !12715
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !12716
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !12717 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12637, metadata !DIExpression()) #25, !dbg !12721
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12723, !srcloc !12652
  call void @llvm.dbg.value(metadata i32 undef, metadata !12649, metadata !DIExpression()) #25, !dbg !12725
  call void @llvm.dbg.value(metadata i32 undef, metadata !12650, metadata !DIExpression()) #25, !dbg !12725
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()) #25, !dbg !12721
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12726
  br i1 %2, label %4, label %3, !dbg !12727

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 148) #26, !dbg !12728
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.226, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12728
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 148) #26, !dbg !12728
  unreachable, !dbg !12728

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12649, metadata !DIExpression()) #25, !dbg !12725
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()) #25, !dbg !12721
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12729
  call void @llvm.dbg.value(metadata i32 undef, metadata !12719, metadata !DIExpression()), !dbg !12730
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !12731
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12732
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !12733
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !12720, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12730
  call void @llvm.dbg.value(metadata i32 undef, metadata !12695, metadata !DIExpression()) #25, !dbg !12734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12700, metadata !DIExpression()) #25, !dbg !12734
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12736
  br i1 %8, label %10, label %9, !dbg !12737

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.227, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 194) #26, !dbg !12738
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.228, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 194) #26, !dbg !12738
  unreachable, !dbg !12738

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !12739
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !12720, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12730
  %12 = sub i32 %11, %7, !dbg !12740
  call void @llvm.dbg.value(metadata i32 %12, metadata !12720, metadata !DIExpression()), !dbg !12730
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !12723
  call void @llvm.dbg.value(metadata i32 %13, metadata !12649, metadata !DIExpression()) #25, !dbg !12725
  call void @llvm.dbg.value(metadata i32 %13, metadata !12643, metadata !DIExpression()) #25, !dbg !12721
  call void @llvm.dbg.value(metadata i32 %13, metadata !12719, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.value(metadata i32 undef, metadata !12695, metadata !DIExpression()) #25, !dbg !12734
  call void @llvm.dbg.value(metadata i32 undef, metadata !12709, metadata !DIExpression()) #25, !dbg !12741
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !12743, !srcloc !12715
  %14 = udiv i32 %12, 3200, !dbg !12744
  ret i32 %14, !dbg !12745
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !12746 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12637, metadata !DIExpression()) #25, !dbg !12750
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12752, !srcloc !12652
  call void @llvm.dbg.value(metadata i32 undef, metadata !12649, metadata !DIExpression()) #25, !dbg !12754
  call void @llvm.dbg.value(metadata i32 undef, metadata !12650, metadata !DIExpression()) #25, !dbg !12754
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()) #25, !dbg !12750
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12755
  br i1 %2, label %4, label %3, !dbg !12756

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.224, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 148) #26, !dbg !12757
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.226, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12757
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 148) #26, !dbg !12757
  unreachable, !dbg !12757

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !12649, metadata !DIExpression()) #25, !dbg !12754
  call void @llvm.dbg.value(metadata i32 undef, metadata !12643, metadata !DIExpression()) #25, !dbg !12750
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12758
  call void @llvm.dbg.value(metadata i32 undef, metadata !12748, metadata !DIExpression()), !dbg !12759
  %5 = tail call fastcc i32 @elapsed() #27, !dbg !12760
  %6 = load i32, i32* @cycle_count, align 4, !dbg !12761
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !12749, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12695, metadata !DIExpression()) #25, !dbg !12762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !12700, metadata !DIExpression()) #25, !dbg !12762
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12764
  br i1 %7, label %9, label %8, !dbg !12765

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.223, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.227, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 194) #26, !dbg !12766
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.228, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !12766
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.225, i32 0, i32 0), i32 noundef 194) #26, !dbg !12766
  unreachable, !dbg !12766

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !12767
  call void @llvm.dbg.value(metadata i32 %10, metadata !12749, metadata !DIExpression()), !dbg !12759
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !12752
  call void @llvm.dbg.value(metadata i32 %11, metadata !12649, metadata !DIExpression()) #25, !dbg !12754
  call void @llvm.dbg.value(metadata i32 %11, metadata !12643, metadata !DIExpression()) #25, !dbg !12750
  call void @llvm.dbg.value(metadata i32 %11, metadata !12748, metadata !DIExpression()), !dbg !12759
  call void @llvm.dbg.value(metadata i32 undef, metadata !12695, metadata !DIExpression()) #25, !dbg !12762
  call void @llvm.dbg.value(metadata i32 undef, metadata !12709, metadata !DIExpression()) #25, !dbg !12768
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !12770, !srcloc !12715
  ret i32 %10, !dbg !12771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #17 !dbg !12772 {
  %1 = load i32, i32* @last_load, align 4, !dbg !12773
  %2 = icmp eq i32 %1, -16777216, !dbg !12775
  br i1 %2, label %3, label %6, !dbg !12776

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12777
  %5 = or i32 %4, 1, !dbg !12777
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12777
  br label %6, !dbg !12779

6:                                                ; preds = %3, %0
  ret void, !dbg !12780
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #17 !dbg !12781 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12782
  %2 = and i32 %1, -2, !dbg !12782
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12782
  ret void, !dbg !12783
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #15 !dbg !12784 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12810, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata i8 %1, metadata !12811, metadata !DIExpression()), !dbg !12813
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12812, metadata !DIExpression()), !dbg !12813
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !12814
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12814
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !12813
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12815
  %8 = load i8, i8* %6, align 4, !dbg !12816
  %9 = zext i8 %8 to i32, !dbg !12817
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !12817
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !12818
  br i1 %11, label %18, label %24, !dbg !12819

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !12813
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !12815
  %14 = load i8, i8* %6, align 4, !dbg !12816
  %15 = zext i8 %14 to i32, !dbg !12817
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !12817
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !12818
  br i1 %17, label %18, label %24, !dbg !12819, !llvm.loop !12820

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !12822
  %21 = load i8, i8* %20, align 1, !dbg !12822
  %22 = icmp eq i8 %21, %1, !dbg !12825
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !12826
  br i1 %22, label %24, label %12, !dbg !12827

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !12813
  ret i32 %25, !dbg !12828
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12829 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12840, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i8 %1, metadata !12841, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i32 %2, metadata !12842, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i32 0, metadata !12845, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i32 0, metadata !12846, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.value(metadata i8 0, metadata !12847, metadata !DIExpression()), !dbg !12857
  %4 = icmp eq i8 %1, 0, !dbg !12858
  br i1 %4, label %35, label %5, !dbg !12859

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !12858
  br label %9, !dbg !12859

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !12847, metadata !DIExpression()), !dbg !12857
  call void @llvm.dbg.value(metadata i32 %29, metadata !12845, metadata !DIExpression()), !dbg !12856
  %8 = icmp eq i32 %34, %6, !dbg !12858
  br i1 %8, label %35, label %9, !dbg !12859, !llvm.loop !12860

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12847, metadata !DIExpression()), !dbg !12857
  call void @llvm.dbg.value(metadata i32 %11, metadata !12845, metadata !DIExpression()), !dbg !12856
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !12862
  %13 = load i32, i32* %12, align 4, !dbg !12862
  call void @llvm.dbg.value(metadata i32 %13, metadata !12844, metadata !DIExpression()), !dbg !12856
  %14 = and i32 %13, 31, !dbg !12863
  %15 = icmp ult i32 %14, 16, !dbg !12864
  br i1 %15, label %16, label %20, !dbg !12865

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12866
  %18 = load i32, i32* %17, align 4, !dbg !12866
  %19 = or i32 %18, 32, !dbg !12868
  call void @llvm.dbg.value(metadata i32 %19, metadata !12845, metadata !DIExpression()), !dbg !12856
  br label %28, !dbg !12869

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !12870

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !12871
  %23 = load i32, i32* %22, align 4, !dbg !12871
  call void @llvm.dbg.value(metadata i32 %23, metadata !12849, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !12872
  %24 = lshr i32 %23, 7, !dbg !12873
  %25 = and i32 %24, 16, !dbg !12873
  %26 = or i32 %25, %23, !dbg !12873
  call void @llvm.dbg.value(metadata i32 %26, metadata !12845, metadata !DIExpression()), !dbg !12856
  br label %28, !dbg !12874

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !12856
  call void @llvm.dbg.value(metadata i32 %29, metadata !12845, metadata !DIExpression()), !dbg !12856
  %30 = lshr i32 %13, 5, !dbg !12875
  %31 = and i32 %30, 255, !dbg !12875
  call void @llvm.dbg.value(metadata i32 %31, metadata !12843, metadata !DIExpression()), !dbg !12856
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #27, !dbg !12876
  call void @llvm.dbg.value(metadata i32 %32, metadata !12846, metadata !DIExpression()), !dbg !12856
  %33 = icmp slt i32 %32, 0, !dbg !12877
  %34 = add nuw nsw i32 %10, 1, !dbg !12879
  call void @llvm.dbg.value(metadata i32 %34, metadata !12847, metadata !DIExpression()), !dbg !12857
  br i1 %33, label %35, label %7, !dbg !12880

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !12881
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !12882 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12886, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %1, metadata !12887, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.value(metadata i32 %2, metadata !12888, metadata !DIExpression()), !dbg !12890
  %4 = icmp ugt i32 %0, 175, !dbg !12891
  br i1 %4, label %17, label %5, !dbg !12893

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !12894
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !12895
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !12895
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12889, metadata !DIExpression()), !dbg !12890
  %9 = lshr i32 1888, %6, !dbg !12896
  %10 = and i32 %9, 1, !dbg !12896
  %11 = icmp eq i32 %10, 0, !dbg !12896
  br i1 %11, label %12, label %17, !dbg !12898

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.233(%struct.device* noundef %8) #27, !dbg !12899
  br i1 %13, label %14, label %17, !dbg !12900

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !12901
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #26, !dbg !12902
  br label %17, !dbg !12903

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !12890
  ret i32 %18, !dbg !12904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.233(%struct.device* noundef %0) unnamed_addr #1 !dbg !12905 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12909, metadata !DIExpression()), !dbg !12910
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12911, !srcloc !12913
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.234(%struct.device* noundef %0) #27, !dbg !12914
  ret i1 %2, !dbg !12915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.234(%struct.device* noundef %0) unnamed_addr #1 !dbg !12916 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12918, metadata !DIExpression()), !dbg !12919
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !12920
  ret i1 %2, !dbg !12921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !12922 {
  ret void, !dbg !12923
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #18 !dbg !12924 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12926, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.value(metadata i32 0, metadata !12927, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.value(metadata i32 0, metadata !12928, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.value(metadata i32 0, metadata !12929, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.value(metadata i32 0, metadata !12930, metadata !DIExpression()), !dbg !12931
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12932
  call void @llvm.dbg.value(metadata i32 %1, metadata !12926, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !12931
  %2 = lshr i32 %1, 2, !dbg !12933
  %3 = and i32 %2, 3, !dbg !12933
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !12933

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12934
  %6 = lshr i32 %5, 13, !dbg !12936
  %7 = and i32 %6, 7, !dbg !12936
  call void @llvm.dbg.value(metadata i32 %7, metadata !12930, metadata !DIExpression()), !dbg !12931
  %8 = shl nuw nsw i32 65536, %7, !dbg !12937
  br label %31, !dbg !12938

9:                                                ; preds = %0
  br label %31, !dbg !12939

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12940
  call void @llvm.dbg.value(metadata i32 %11, metadata !12927, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !12931
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12941
  call void @llvm.dbg.value(metadata i32 %12, metadata !12928, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !12931
  %13 = lshr i32 %11, 18, !dbg !12942
  %14 = and i32 %13, 15, !dbg !12942
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !12943
  %16 = load i8, i8* %15, align 1, !dbg !12943
  %17 = zext i8 %16 to i32, !dbg !12943
  call void @llvm.dbg.value(metadata i32 %17, metadata !12927, metadata !DIExpression()), !dbg !12931
  %18 = lshr i32 %12, 22, !dbg !12944
  %19 = and i32 %18, 3, !dbg !12944
  %20 = add nuw nsw i32 %19, 1, !dbg !12945
  call void @llvm.dbg.value(metadata i32 %20, metadata !12928, metadata !DIExpression()), !dbg !12931
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12946
  %22 = and i32 %21, 65536, !dbg !12947
  call void @llvm.dbg.value(metadata i32 %22, metadata !12929, metadata !DIExpression()), !dbg !12931
  %23 = icmp eq i32 %22, 0, !dbg !12948
  br i1 %23, label %24, label %27, !dbg !12950

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !12951
  %26 = udiv i32 %25, %20, !dbg !12953
  br label %31, !dbg !12954

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !12955
  %29 = udiv i32 %28, %20, !dbg !12957
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !12958
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12959
  %34 = lshr i32 %33, 4, !dbg !12960
  %35 = and i32 %34, 15, !dbg !12960
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !12961
  %37 = load i8, i8* %36, align 1, !dbg !12961
  %38 = zext i8 %37 to i32, !dbg !12961
  call void @llvm.dbg.value(metadata i32 %38, metadata !12926, metadata !DIExpression()), !dbg !12931
  %39 = lshr i32 %32, %38, !dbg !12962
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !12962
  ret void, !dbg !12963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !12964 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12972
  %2 = and i32 %1, 16711935, !dbg !12972
  %3 = or i32 %2, 45056, !dbg !12972
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12972
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12973
  %5 = or i32 %4, 256, !dbg !12973
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12973
  %6 = tail call i32 @HAL_GetTick() #26, !dbg !12974
  call void @llvm.dbg.value(metadata i32 %6, metadata !12970, metadata !DIExpression()), !dbg !12975
  br label %7, !dbg !12976

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12977
  %9 = and i32 %8, 512, !dbg !12977
  %10 = icmp eq i32 %9, 0, !dbg !12978
  br i1 %10, label %11, label %15, !dbg !12976

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #26, !dbg !12979
  %13 = sub i32 %12, %6, !dbg !12982
  %14 = icmp ugt i32 %13, 2, !dbg !12983
  br i1 %14, label %47, label %7, !dbg !12984, !llvm.loop !12985

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12987
  %17 = and i32 %16, -4, !dbg !12987
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12987
  br label %18, !dbg !12988

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12989
  %20 = and i32 %19, 12, !dbg !12989
  %21 = icmp eq i32 %20, 0, !dbg !12990
  br i1 %21, label %26, label %22, !dbg !12988

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #26, !dbg !12991
  %24 = sub i32 %23, %6, !dbg !12994
  %25 = icmp ugt i32 %24, 5000, !dbg !12995
  br i1 %25, label %47, label %18, !dbg !12996, !llvm.loop !12997

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !12999
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !13000
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #26, !dbg !13001
  call void @llvm.dbg.value(metadata i32 %28, metadata !12971, metadata !DIExpression()), !dbg !12975
  %29 = icmp eq i32 %28, 0, !dbg !13002
  br i1 %29, label %30, label %47, !dbg !13004

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13005
  %32 = and i32 %31, -285278210, !dbg !13005
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13005
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13006
  %34 = and i32 %33, -262145, !dbg !13006
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13006
  %35 = tail call i32 @HAL_GetTick() #26, !dbg !13007
  call void @llvm.dbg.value(metadata i32 %35, metadata !12970, metadata !DIExpression()), !dbg !12975
  br label %36, !dbg !13008

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13009
  %38 = and i32 %37, 33554432, !dbg !13009
  %39 = icmp eq i32 %38, 0, !dbg !13010
  br i1 %39, label %44, label %40, !dbg !13008

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #26, !dbg !13011
  %42 = sub i32 %41, %35, !dbg !13014
  %43 = icmp ugt i32 %42, 2, !dbg !13015
  br i1 %43, label %47, label %36, !dbg !13016, !llvm.loop !13017

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13019
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13020
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13021
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13022
  %46 = or i32 %45, 16777216, !dbg !13022
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13022
  br label %47, !dbg !13023

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !12975
  ret i32 %48, !dbg !13024
}

; Function Attrs: optsize
declare !dbg !13025 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !13027 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !13030 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13056, metadata !DIExpression()), !dbg !13069
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13070
  br i1 %3, label %385, label %4, !dbg !13072

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13073
  %6 = and i32 %5, 12, !dbg !13073
  call void @llvm.dbg.value(metadata i32 %6, metadata !13059, metadata !DIExpression()), !dbg !13069
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13074
  %8 = and i32 %7, 65536, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %8, metadata !13060, metadata !DIExpression()), !dbg !13069
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13075
  %10 = load i32, i32* %9, align 4, !dbg !13075
  %11 = and i32 %10, 1, !dbg !13077
  %12 = icmp eq i32 %11, 0, !dbg !13078
  br i1 %12, label %69, label %13, !dbg !13079

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !13080
  br i1 %14, label %19, label %15, !dbg !13083

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !13084
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !13085
  br i1 %18, label %19, label %27, !dbg !13085

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13086
  %21 = and i32 %20, 131072, !dbg !13086
  %22 = icmp eq i32 %21, 0, !dbg !13089
  br i1 %22, label %69, label %23, !dbg !13090

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13091
  %25 = load i32, i32* %24, align 4, !dbg !13091
  %26 = icmp eq i32 %25, 0, !dbg !13092
  br i1 %26, label %385, label %69, !dbg !13093

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13094
  %29 = load i32, i32* %28, align 4, !dbg !13094
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !13098

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13099
  %32 = or i32 %31, 65536, !dbg !13099
  br label %48, !dbg !13099

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13101
  %35 = and i32 %34, -65537, !dbg !13101
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13101
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13101
  %37 = and i32 %36, -262145, !dbg !13101
  br label %48, !dbg !13101

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13104
  %40 = or i32 %39, 262144, !dbg !13104
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13104
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13104
  %42 = or i32 %41, 65536, !dbg !13104
  br label %48, !dbg !13104

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13107
  %45 = and i32 %44, -65537, !dbg !13107
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13107
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13107
  %47 = and i32 %46, -262145, !dbg !13107
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13109
  %50 = load i32, i32* %28, align 4, !dbg !13110
  %51 = icmp eq i32 %50, 0, !dbg !13112
  %52 = tail call i32 @HAL_GetTick() #26, !dbg !13113
  call void @llvm.dbg.value(metadata i32 %52, metadata !13057, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32 %52, metadata !13057, metadata !DIExpression()), !dbg !13069
  br i1 %51, label %61, label %53, !dbg !13114

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13115
  %55 = and i32 %54, 131072, !dbg !13115
  %56 = icmp eq i32 %55, 0, !dbg !13117
  br i1 %56, label %57, label %69, !dbg !13118

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #26, !dbg !13119
  %59 = sub i32 %58, %52, !dbg !13122
  %60 = icmp ugt i32 %59, 100, !dbg !13123
  br i1 %60, label %385, label %53, !dbg !13124, !llvm.loop !13125

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13127
  %63 = and i32 %62, 131072, !dbg !13127
  %64 = icmp eq i32 %63, 0, !dbg !13129
  br i1 %64, label %69, label %65, !dbg !13130

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #26, !dbg !13131
  %67 = sub i32 %66, %52, !dbg !13134
  %68 = icmp ugt i32 %67, 100, !dbg !13135
  br i1 %68, label %385, label %61, !dbg !13136, !llvm.loop !13137

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !13139
  %71 = and i32 %70, 2, !dbg !13141
  %72 = icmp eq i32 %71, 0, !dbg !13142
  br i1 %72, label %118, label %73, !dbg !13143

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !13144
  br i1 %74, label %79, label %75, !dbg !13147

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !13148
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !13149
  br i1 %78, label %79, label %87, !dbg !13149

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13150
  %81 = and i32 %80, 2, !dbg !13150
  %82 = icmp eq i32 %81, 0, !dbg !13153
  br i1 %82, label %111, label %83, !dbg !13154

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13155
  %85 = load i32, i32* %84, align 4, !dbg !13155
  %86 = icmp eq i32 %85, 1, !dbg !13156
  br i1 %86, label %111, label %385, !dbg !13157

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13158
  %89 = load i32, i32* %88, align 4, !dbg !13158
  %90 = icmp eq i32 %89, 0, !dbg !13161
  br i1 %90, label %101, label %91, !dbg !13162

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13163
  %92 = tail call i32 @HAL_GetTick() #26, !dbg !13165
  call void @llvm.dbg.value(metadata i32 %92, metadata !13057, metadata !DIExpression()), !dbg !13069
  br label %93, !dbg !13166

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13167
  %95 = and i32 %94, 2, !dbg !13167
  %96 = icmp eq i32 %95, 0, !dbg !13168
  br i1 %96, label %97, label %111, !dbg !13166

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #26, !dbg !13169
  %99 = sub i32 %98, %92, !dbg !13172
  %100 = icmp ugt i32 %99, 2, !dbg !13173
  br i1 %100, label %385, label %93, !dbg !13174, !llvm.loop !13175

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13177
  %102 = tail call i32 @HAL_GetTick() #26, !dbg !13179
  call void @llvm.dbg.value(metadata i32 %102, metadata !13057, metadata !DIExpression()), !dbg !13069
  br label %103, !dbg !13180

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13181
  %105 = and i32 %104, 2, !dbg !13181
  %106 = icmp eq i32 %105, 0, !dbg !13182
  br i1 %106, label %118, label %107, !dbg !13180

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #26, !dbg !13183
  %109 = sub i32 %108, %102, !dbg !13186
  %110 = icmp ugt i32 %109, 2, !dbg !13187
  br i1 %110, label %385, label %103, !dbg !13188, !llvm.loop !13189

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13191
  %113 = and i32 %112, -7937, !dbg !13191
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13191
  %115 = load i32, i32* %114, align 4, !dbg !13191
  %116 = shl i32 %115, 8, !dbg !13191
  %117 = or i32 %116, %113, !dbg !13191
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13191
  br label %118, !dbg !13192

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !13192
  %120 = and i32 %119, 16, !dbg !13194
  %121 = icmp eq i32 %120, 0, !dbg !13195
  br i1 %121, label %215, label %122, !dbg !13196

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !13197
  br i1 %123, label %124, label %179, !dbg !13200

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13201
  %126 = and i32 %125, 512, !dbg !13201
  %127 = icmp eq i32 %126, 0, !dbg !13204
  br i1 %127, label %132, label %128, !dbg !13205

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13206
  %130 = load i32, i32* %129, align 4, !dbg !13206
  %131 = icmp eq i32 %130, 0, !dbg !13207
  br i1 %131, label %385, label %132, !dbg !13208

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13209
  %134 = load i32, i32* %133, align 4, !dbg !13209
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13212
  %136 = and i32 %135, 57344, !dbg !13212
  %137 = icmp ugt i32 %134, %136, !dbg !13213
  br i1 %137, label %138, label %152, !dbg !13214

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #27, !dbg !13215
  %140 = icmp eq i32 %139, 0, !dbg !13218
  br i1 %140, label %141, label %385, !dbg !13219

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13220
  %143 = and i32 %142, -57345, !dbg !13220
  %144 = load i32, i32* %133, align 4, !dbg !13220
  %145 = or i32 %143, %144, !dbg !13220
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13220
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13221
  %147 = and i32 %146, 16777215, !dbg !13221
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13221
  %149 = load i32, i32* %148, align 4, !dbg !13221
  %150 = shl i32 %149, 24, !dbg !13221
  %151 = or i32 %150, %147, !dbg !13221
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13221
  br label %165, !dbg !13222

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13223
  %154 = and i32 %153, -57345, !dbg !13223
  %155 = or i32 %154, %134, !dbg !13223
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13223
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13225
  %157 = and i32 %156, 16777215, !dbg !13225
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13225
  %159 = load i32, i32* %158, align 4, !dbg !13225
  %160 = shl i32 %159, 24, !dbg !13225
  %161 = or i32 %160, %157, !dbg !13225
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13225
  %162 = load i32, i32* %133, align 4, !dbg !13226
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #27, !dbg !13228
  %164 = icmp eq i32 %163, 0, !dbg !13229
  br i1 %164, label %165, label %385, !dbg !13230

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !13231
  %167 = lshr i32 %166, 13, !dbg !13232
  %168 = shl i32 65536, %167, !dbg !13233
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13234
  %170 = lshr i32 %169, 4, !dbg !13235
  %171 = and i32 %170, 15, !dbg !13235
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !13236
  %173 = load i8, i8* %172, align 1, !dbg !13236
  %174 = zext i8 %173 to i32, !dbg !13236
  %175 = lshr i32 %168, %174, !dbg !13237
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !13238
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !13239
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #26, !dbg !13240
  call void @llvm.dbg.value(metadata i32 %177, metadata !13058, metadata !DIExpression()), !dbg !13069
  %178 = icmp eq i32 %177, 0, !dbg !13241
  br i1 %178, label %215, label %385, !dbg !13243

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13244
  %181 = load i32, i32* %180, align 4, !dbg !13244
  %182 = icmp eq i32 %181, 0, !dbg !13247
  br i1 %182, label %205, label %183, !dbg !13248

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !13249
  %184 = tail call i32 @HAL_GetTick() #26, !dbg !13251
  call void @llvm.dbg.value(metadata i32 %184, metadata !13057, metadata !DIExpression()), !dbg !13069
  br label %185, !dbg !13252

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13253
  %187 = and i32 %186, 512, !dbg !13253
  %188 = icmp eq i32 %187, 0, !dbg !13254
  br i1 %188, label %189, label %193, !dbg !13252

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #26, !dbg !13255
  %191 = sub i32 %190, %184, !dbg !13258
  %192 = icmp ugt i32 %191, 2, !dbg !13259
  br i1 %192, label %385, label %185, !dbg !13260, !llvm.loop !13261

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13263
  %195 = and i32 %194, -57345, !dbg !13263
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13263
  %197 = load i32, i32* %196, align 4, !dbg !13263
  %198 = or i32 %195, %197, !dbg !13263
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13263
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13264
  %200 = and i32 %199, 16777215, !dbg !13264
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13264
  %202 = load i32, i32* %201, align 4, !dbg !13264
  %203 = shl i32 %202, 24, !dbg !13264
  %204 = or i32 %203, %200, !dbg !13264
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13264
  br label %215, !dbg !13265

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !13266
  %206 = tail call i32 @HAL_GetTick() #26, !dbg !13268
  call void @llvm.dbg.value(metadata i32 %206, metadata !13057, metadata !DIExpression()), !dbg !13069
  br label %207, !dbg !13269

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13270
  %209 = and i32 %208, 512, !dbg !13270
  %210 = icmp eq i32 %209, 0, !dbg !13271
  br i1 %210, label %215, label %211, !dbg !13269

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #26, !dbg !13272
  %213 = sub i32 %212, %206, !dbg !13275
  %214 = icmp ugt i32 %213, 2, !dbg !13276
  br i1 %214, label %385, label %207, !dbg !13277, !llvm.loop !13278

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !13280
  %217 = and i32 %216, 8, !dbg !13282
  %218 = icmp eq i32 %217, 0, !dbg !13283
  br i1 %218, label %243, label %219, !dbg !13284

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13285
  %221 = load i32, i32* %220, align 4, !dbg !13285
  %222 = icmp eq i32 %221, 0, !dbg !13288
  br i1 %222, label %233, label %223, !dbg !13289

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !13290
  %224 = tail call i32 @HAL_GetTick() #26, !dbg !13292
  call void @llvm.dbg.value(metadata i32 %224, metadata !13057, metadata !DIExpression()), !dbg !13069
  br label %225, !dbg !13293

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13294
  %227 = and i32 %226, 2, !dbg !13294
  %228 = icmp eq i32 %227, 0, !dbg !13295
  br i1 %228, label %229, label %243, !dbg !13293

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #26, !dbg !13296
  %231 = sub i32 %230, %224, !dbg !13299
  %232 = icmp ugt i32 %231, 2, !dbg !13300
  br i1 %232, label %385, label %225, !dbg !13301, !llvm.loop !13302

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !13304
  %234 = tail call i32 @HAL_GetTick() #26, !dbg !13306
  call void @llvm.dbg.value(metadata i32 %234, metadata !13057, metadata !DIExpression()), !dbg !13069
  br label %235, !dbg !13307

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13308
  %237 = and i32 %236, 2, !dbg !13308
  %238 = icmp eq i32 %237, 0, !dbg !13309
  br i1 %238, label %243, label %239, !dbg !13307

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #26, !dbg !13310
  %241 = sub i32 %240, %234, !dbg !13313
  %242 = icmp ugt i32 %241, 2, !dbg !13314
  br i1 %242, label %385, label %235, !dbg !13315, !llvm.loop !13316

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !13318
  %245 = and i32 %244, 4, !dbg !13319
  %246 = icmp eq i32 %245, 0, !dbg !13320
  br i1 %246, label %320, label %247, !dbg !13321

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !13061, metadata !DIExpression()), !dbg !13322
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13323
  %249 = and i32 %248, 268435456, !dbg !13323
  %250 = icmp eq i32 %249, 0, !dbg !13323
  br i1 %250, label %251, label %258, !dbg !13324

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !13325
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !13325
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13065, metadata !DIExpression()), !dbg !13325
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13325
  %254 = or i32 %253, 268435456, !dbg !13325
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13325
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13325
  %256 = and i32 %255, 268435456, !dbg !13325
  store volatile i32 %256, i32* %2, align 4, !dbg !13325
  %257 = load volatile i32, i32* %2, align 4, !dbg !13325
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !13326
  call void @llvm.dbg.value(metadata i32 1, metadata !13061, metadata !DIExpression()), !dbg !13322
  br label %258, !dbg !13327

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !13061, metadata !DIExpression()), !dbg !13322
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13328
  %260 = and i32 %259, 256, !dbg !13328
  %261 = icmp eq i32 %260, 0, !dbg !13328
  br i1 %261, label %262, label %274, !dbg !13330

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13331
  %264 = or i32 %263, 256, !dbg !13331
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13331
  %265 = tail call i32 @HAL_GetTick() #26, !dbg !13333
  call void @llvm.dbg.value(metadata i32 %265, metadata !13057, metadata !DIExpression()), !dbg !13069
  br label %266, !dbg !13334

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13335
  %268 = and i32 %267, 256, !dbg !13335
  %269 = icmp eq i32 %268, 0, !dbg !13335
  br i1 %269, label %270, label %274, !dbg !13334

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #26, !dbg !13336
  %272 = sub i32 %271, %265, !dbg !13339
  %273 = icmp ugt i32 %272, 100, !dbg !13340
  br i1 %273, label %385, label %266, !dbg !13341, !llvm.loop !13342

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13344
  %276 = load i32, i32* %275, align 4, !dbg !13344
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !13347

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13348
  %279 = or i32 %278, 256, !dbg !13348
  br label %295, !dbg !13348

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13350
  %282 = and i32 %281, -257, !dbg !13350
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13350
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13350
  %284 = and i32 %283, -1025, !dbg !13350
  br label %295, !dbg !13350

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13353
  %287 = or i32 %286, 1024, !dbg !13353
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13353
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13353
  %289 = or i32 %288, 256, !dbg !13353
  br label %295, !dbg !13353

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13356
  %292 = and i32 %291, -257, !dbg !13356
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13356
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13356
  %294 = and i32 %293, -1025, !dbg !13356
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13358
  %297 = load i32, i32* %275, align 4, !dbg !13359
  %298 = icmp eq i32 %297, 0, !dbg !13361
  %299 = tail call i32 @HAL_GetTick() #26, !dbg !13362
  call void @llvm.dbg.value(metadata i32 %299, metadata !13057, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32 %299, metadata !13057, metadata !DIExpression()), !dbg !13069
  br i1 %298, label %308, label %300, !dbg !13363

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13364
  %302 = and i32 %301, 512, !dbg !13364
  %303 = icmp eq i32 %302, 0, !dbg !13366
  br i1 %303, label %304, label %316, !dbg !13367

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #26, !dbg !13368
  %306 = sub i32 %305, %299, !dbg !13371
  %307 = icmp ugt i32 %306, 5000, !dbg !13372
  br i1 %307, label %385, label %300, !dbg !13373, !llvm.loop !13374

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13376
  %310 = and i32 %309, 512, !dbg !13376
  %311 = icmp eq i32 %310, 0, !dbg !13378
  br i1 %311, label %316, label %312, !dbg !13379

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #26, !dbg !13380
  %314 = sub i32 %313, %299, !dbg !13383
  %315 = icmp ugt i32 %314, 5000, !dbg !13384
  br i1 %315, label %385, label %308, !dbg !13385, !llvm.loop !13386

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !13388

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13389
  %319 = and i32 %318, -268435457, !dbg !13389
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13389
  br label %320, !dbg !13392

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !13393
  %322 = load i32, i32* %321, align 4, !dbg !13393
  %323 = icmp eq i32 %322, 0, !dbg !13395
  br i1 %323, label %384, label %324, !dbg !13396

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !13397
  br i1 %325, label %366, label %326, !dbg !13400

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !13401
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13404
  %328 = tail call i32 @HAL_GetTick() #26, !dbg !13404
  call void @llvm.dbg.value(metadata i32 %328, metadata !13057, metadata !DIExpression()), !dbg !13069
  call void @llvm.dbg.value(metadata i32 %328, metadata !13057, metadata !DIExpression()), !dbg !13069
  br i1 %327, label %329, label %358, !dbg !13405

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13406
  %331 = and i32 %330, 33554432, !dbg !13406
  %332 = icmp eq i32 %331, 0, !dbg !13408
  br i1 %332, label %337, label %333, !dbg !13409

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #26, !dbg !13410
  %335 = sub i32 %334, %328, !dbg !13413
  %336 = icmp ugt i32 %335, 2, !dbg !13414
  br i1 %336, label %385, label %329, !dbg !13415, !llvm.loop !13416

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13418
  %339 = and i32 %338, -16580609, !dbg !13418
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !13418
  %341 = load i32, i32* %340, align 4, !dbg !13418
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !13418
  %343 = load i32, i32* %342, align 4, !dbg !13418
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !13418
  %345 = load i32, i32* %344, align 4, !dbg !13418
  %346 = or i32 %339, %341, !dbg !13418
  %347 = or i32 %346, %343, !dbg !13418
  %348 = or i32 %347, %345, !dbg !13418
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13418
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13419
  %349 = tail call i32 @HAL_GetTick() #26, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %349, metadata !13057, metadata !DIExpression()), !dbg !13069
  br label %350, !dbg !13421

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13422
  %352 = and i32 %351, 33554432, !dbg !13422
  %353 = icmp eq i32 %352, 0, !dbg !13423
  br i1 %353, label %354, label %384, !dbg !13421

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #26, !dbg !13424
  %356 = sub i32 %355, %349, !dbg !13427
  %357 = icmp ugt i32 %356, 2, !dbg !13428
  br i1 %357, label %385, label %350, !dbg !13429, !llvm.loop !13430

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13432
  %360 = and i32 %359, 33554432, !dbg !13432
  %361 = icmp eq i32 %360, 0, !dbg !13434
  br i1 %361, label %384, label %362, !dbg !13435

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #26, !dbg !13436
  %364 = sub i32 %363, %328, !dbg !13439
  %365 = icmp ugt i32 %364, 2, !dbg !13440
  br i1 %365, label %385, label %358, !dbg !13441, !llvm.loop !13442

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !13444
  br i1 %367, label %385, label %368, !dbg !13447

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13448
  call void @llvm.dbg.value(metadata i32 %369, metadata !13060, metadata !DIExpression()), !dbg !13069
  %370 = and i32 %369, 65536, !dbg !13450
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !13452
  %372 = load i32, i32* %371, align 4, !dbg !13452
  %373 = icmp eq i32 %370, %372, !dbg !13453
  br i1 %373, label %374, label %385, !dbg !13454

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !13455
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !13456
  %377 = load i32, i32* %376, align 4, !dbg !13456
  %378 = icmp eq i32 %375, %377, !dbg !13457
  br i1 %378, label %379, label %385, !dbg !13458

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !13459
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !13460
  %382 = load i32, i32* %381, align 4, !dbg !13460
  %383 = icmp eq i32 %380, %382, !dbg !13461
  br i1 %383, label %384, label %385, !dbg !13462

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !13463

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !13069
  ret i32 %386, !dbg !13464
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #16 !dbg !13465 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13467, metadata !DIExpression()), !dbg !13476
  call void @llvm.dbg.value(metadata i32 0, metadata !13469, metadata !DIExpression()), !dbg !13476
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13477
  %4 = and i32 %3, 240, !dbg !13477
  %5 = icmp eq i32 %4, 0, !dbg !13478
  br i1 %5, label %6, label %31, !dbg !13479

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13480
  %8 = and i32 %7, 268435456, !dbg !13480
  %9 = icmp eq i32 %8, 0, !dbg !13480
  br i1 %9, label %12, label %10, !dbg !13481

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13482
  call void @llvm.dbg.value(metadata i32 %11, metadata !13468, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !13476
  br label %22, !dbg !13484

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !13485
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !13485
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13470, metadata !DIExpression()), !dbg !13485
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13485
  %15 = or i32 %14, 268435456, !dbg !13485
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13485
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13485
  %17 = and i32 %16, 268435456, !dbg !13485
  store volatile i32 %17, i32* %2, align 4, !dbg !13485
  %18 = load volatile i32, i32* %2, align 4, !dbg !13485
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !13486
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13487
  call void @llvm.dbg.value(metadata i32 %19, metadata !13468, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !13476
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13488
  %21 = and i32 %20, -268435457, !dbg !13488
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !13488
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !13489
  call void @llvm.dbg.value(metadata i32 %24, metadata !13468, metadata !DIExpression()), !dbg !13476
  %25 = icmp eq i32 %24, 6144, !dbg !13490
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !13492
  call void @llvm.dbg.value(metadata i32 undef, metadata !13469, metadata !DIExpression()), !dbg !13476
  br i1 %27, label %28, label %31, !dbg !13493

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13495
  %30 = or i32 %29, 4, !dbg !13495
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13495
  br label %31, !dbg !13495

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13493
  %34 = and i32 %33, -2, !dbg !13493
  %35 = or i32 %34, %32, !dbg !13493
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13493
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13498
  %37 = and i32 %36, 1, !dbg !13498
  %38 = xor i32 %37, %32, !dbg !13476
  ret i32 %38, !dbg !13500
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13501 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13514, metadata !DIExpression()), !dbg !13518
  call void @llvm.dbg.value(metadata i32 %1, metadata !13515, metadata !DIExpression()), !dbg !13518
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !13519
  br i1 %3, label %136, label %4, !dbg !13521

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13522
  %6 = and i32 %5, 1, !dbg !13522
  %7 = icmp ult i32 %6, %1, !dbg !13524
  br i1 %7, label %8, label %20, !dbg !13525

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !13526
  br i1 %9, label %10, label %13, !dbg !13530

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13531
  %12 = or i32 %11, 4, !dbg !13531
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13531
  br label %13, !dbg !13531

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13530
  %15 = and i32 %14, -2, !dbg !13530
  %16 = or i32 %15, %1, !dbg !13530
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13530
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13533
  %18 = and i32 %17, 1, !dbg !13533
  %19 = icmp eq i32 %18, %1, !dbg !13535
  br i1 %19, label %20, label %136, !dbg !13536

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13537
  %22 = load i32, i32* %21, align 4, !dbg !13537
  %23 = and i32 %22, 2, !dbg !13539
  %24 = icmp eq i32 %23, 0, !dbg !13540
  br i1 %24, label %32, label %25, !dbg !13541

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13542
  %27 = and i32 %26, -241, !dbg !13542
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13542
  %29 = load i32, i32* %28, align 4, !dbg !13542
  %30 = or i32 %27, %29, !dbg !13542
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13542
  %31 = load i32, i32* %21, align 4, !dbg !13544
  br label %32, !dbg !13546

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !13544
  %34 = and i32 %33, 1, !dbg !13547
  %35 = icmp eq i32 %34, 0, !dbg !13548
  br i1 %35, label %93, label %36, !dbg !13549

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13550
  %38 = load i32, i32* %37, align 4, !dbg !13550
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !13553

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13554
  %41 = and i32 %40, 131072, !dbg !13554
  %42 = icmp eq i32 %41, 0, !dbg !13557
  br i1 %42, label %136, label %55, !dbg !13558

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13559
  %45 = and i32 %44, 33554432, !dbg !13559
  %46 = icmp eq i32 %45, 0, !dbg !13563
  br i1 %46, label %136, label %55, !dbg !13564

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13565
  %49 = and i32 %48, 2, !dbg !13565
  %50 = icmp eq i32 %49, 0, !dbg !13569
  br i1 %50, label %136, label %55, !dbg !13570

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13571
  %53 = and i32 %52, 512, !dbg !13571
  %54 = icmp eq i32 %53, 0, !dbg !13574
  br i1 %54, label %136, label %55, !dbg !13575

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13576
  %57 = and i32 %56, -4, !dbg !13576
  %58 = or i32 %57, %38, !dbg !13576
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13576
  %59 = tail call i32 @HAL_GetTick() #26, !dbg !13577
  call void @llvm.dbg.value(metadata i32 %59, metadata !13516, metadata !DIExpression()), !dbg !13518
  %60 = load i32, i32* %37, align 4, !dbg !13578
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !13580

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13581
  %63 = and i32 %62, 12, !dbg !13581
  %64 = icmp eq i32 %63, 8, !dbg !13583
  br i1 %64, label %93, label %65, !dbg !13584

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #26, !dbg !13585
  %67 = sub i32 %66, %59, !dbg !13588
  %68 = icmp ugt i32 %67, 5000, !dbg !13589
  br i1 %68, label %136, label %61, !dbg !13590, !llvm.loop !13591

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13593
  %71 = and i32 %70, 12, !dbg !13593
  %72 = icmp eq i32 %71, 12, !dbg !13596
  br i1 %72, label %93, label %73, !dbg !13597

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #26, !dbg !13598
  %75 = sub i32 %74, %59, !dbg !13601
  %76 = icmp ugt i32 %75, 5000, !dbg !13602
  br i1 %76, label %136, label %69, !dbg !13603, !llvm.loop !13604

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13606
  %79 = and i32 %78, 12, !dbg !13606
  %80 = icmp eq i32 %79, 4, !dbg !13609
  br i1 %80, label %93, label %81, !dbg !13610

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #26, !dbg !13611
  %83 = sub i32 %82, %59, !dbg !13614
  %84 = icmp ugt i32 %83, 5000, !dbg !13615
  br i1 %84, label %136, label %77, !dbg !13616, !llvm.loop !13617

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13619
  %87 = and i32 %86, 12, !dbg !13619
  %88 = icmp eq i32 %87, 0, !dbg !13621
  br i1 %88, label %93, label %89, !dbg !13622

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #26, !dbg !13623
  %91 = sub i32 %90, %59, !dbg !13626
  %92 = icmp ugt i32 %91, 5000, !dbg !13627
  br i1 %92, label %136, label %85, !dbg !13628, !llvm.loop !13629

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13631
  %95 = and i32 %94, 1, !dbg !13631
  %96 = icmp ugt i32 %95, %1, !dbg !13633
  br i1 %96, label %97, label %103, !dbg !13634

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13635
  %99 = and i32 %98, -2, !dbg !13635
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13635
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13638
  %101 = and i32 %100, 1, !dbg !13638
  %102 = icmp eq i32 %101, 0, !dbg !13640
  br i1 %102, label %103, label %136, !dbg !13641

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !13642
  %105 = and i32 %104, 4, !dbg !13644
  %106 = icmp eq i32 %105, 0, !dbg !13645
  br i1 %106, label %114, label %107, !dbg !13646

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13647
  %109 = and i32 %108, -1793, !dbg !13647
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13647
  %111 = load i32, i32* %110, align 4, !dbg !13647
  %112 = or i32 %109, %111, !dbg !13647
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13647
  %113 = load i32, i32* %21, align 4, !dbg !13649
  br label %114, !dbg !13651

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !13649
  %116 = and i32 %115, 8, !dbg !13652
  %117 = icmp eq i32 %116, 0, !dbg !13653
  br i1 %117, label %125, label %118, !dbg !13654

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13655
  %120 = and i32 %119, -14337, !dbg !13655
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13655
  %122 = load i32, i32* %121, align 4, !dbg !13655
  %123 = shl i32 %122, 3, !dbg !13655
  %124 = or i32 %123, %120, !dbg !13655
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13655
  br label %125, !dbg !13657

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !13658
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13659
  %128 = lshr i32 %127, 4, !dbg !13660
  %129 = and i32 %128, 15, !dbg !13660
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !13661
  %131 = load i8, i8* %130, align 1, !dbg !13661
  %132 = zext i8 %131 to i32, !dbg !13661
  %133 = lshr i32 %126, %132, !dbg !13662
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !13663
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !13664
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #26, !dbg !13665
  call void @llvm.dbg.value(metadata i32 %135, metadata !13517, metadata !DIExpression()), !dbg !13518
  br label %136, !dbg !13666

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !13518
  ret i32 %137, !dbg !13667
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #18 !dbg !13668 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13676
  call void @llvm.dbg.value(metadata i32 %1, metadata !13670, metadata !DIExpression()), !dbg !13677
  %2 = lshr i32 %1, 2, !dbg !13678
  %3 = and i32 %2, 3, !dbg !13678
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !13678

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !13675, metadata !DIExpression()), !dbg !13677
  br label %26, !dbg !13679

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !13682
  %7 = and i32 %6, 15, !dbg !13682
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !13684
  %9 = load i8, i8* %8, align 1, !dbg !13684
  call void @llvm.dbg.value(metadata i8 %9, metadata !13671, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13677
  %10 = lshr i32 %1, 22, !dbg !13685
  %11 = and i32 %10, 3, !dbg !13685
  %12 = add nuw nsw i32 %11, 1, !dbg !13686
  call void @llvm.dbg.value(metadata i32 %12, metadata !13672, metadata !DIExpression()), !dbg !13677
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13687
  %14 = and i32 %13, 65536, !dbg !13687
  %15 = icmp eq i32 %14, 0, !dbg !13689
  %16 = zext i8 %9 to i32, !dbg !13690
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !13690
  %18 = mul nuw i32 %17, %16, !dbg !13690
  %19 = udiv i32 %18, %12, !dbg !13691
  call void @llvm.dbg.value(metadata i32 %19, metadata !13673, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata i32 %19, metadata !13675, metadata !DIExpression()), !dbg !13677
  br label %26, !dbg !13692

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13693
  %23 = lshr i32 %22, 13, !dbg !13695
  %24 = and i32 %23, 7, !dbg !13695
  call void @llvm.dbg.value(metadata i32 %24, metadata !13674, metadata !DIExpression()), !dbg !13677
  %25 = shl nuw nsw i32 65536, %24, !dbg !13696
  call void @llvm.dbg.value(metadata i32 %25, metadata !13675, metadata !DIExpression()), !dbg !13677
  br label %26, !dbg !13697

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !13698
  call void @llvm.dbg.value(metadata i32 %27, metadata !13675, metadata !DIExpression()), !dbg !13677
  ret i32 %27, !dbg !13699
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13700 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13702, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.value(metadata i32 %1, metadata !13703, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.value(metadata i32 %2, metadata !13704, metadata !DIExpression()), !dbg !13717
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13718
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !13718
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13705, metadata !DIExpression()), !dbg !13719
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13720
  store i32 2, i32* %7, align 4, !dbg !13721
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13722
  store i32 2, i32* %8, align 4, !dbg !13723
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13724
  store i32 0, i32* %9, align 4, !dbg !13725
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13726
  store i32 256, i32* %10, align 4, !dbg !13727
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13728
  store i32 0, i32* %11, align 4, !dbg !13729
  %12 = bitcast i32* %5 to i8*, !dbg !13730
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !13730
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13715, metadata !DIExpression()), !dbg !13730
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13730
  %14 = or i32 %13, 1, !dbg !13730
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13730
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !13730
  %16 = and i32 %15, 1, !dbg !13730
  store volatile i32 %16, i32* %5, align 4, !dbg !13730
  %17 = load volatile i32, i32* %5, align 4, !dbg !13730
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !13731
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #26, !dbg !13732
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13733
  %19 = and i32 %18, -1996488705, !dbg !13733
  %20 = or i32 %2, %1, !dbg !13733
  %21 = or i32 %20, %19, !dbg !13733
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13733
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !13734
  ret void, !dbg !13734
}

; Function Attrs: optsize
declare !dbg !13735 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #17 !dbg !13739 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13740
  ret void, !dbg !13741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #17 !dbg !13742 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !13743
  ret void, !dbg !13744
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !13745 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13746
  ret i32 %1, !dbg !13747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #18 !dbg !13748 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !13749
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13750
  %3 = lshr i32 %2, 8, !dbg !13751
  %4 = and i32 %3, 7, !dbg !13751
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13752
  %6 = load i8, i8* %5, align 1, !dbg !13752
  %7 = zext i8 %6 to i32, !dbg !13752
  %8 = lshr i32 %1, %7, !dbg !13753
  ret i32 %8, !dbg !13754
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #18 !dbg !13755 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #27, !dbg !13756
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13757
  %3 = lshr i32 %2, 11, !dbg !13758
  %4 = and i32 %3, 7, !dbg !13758
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13759
  %6 = load i8, i8* %5, align 1, !dbg !13759
  %7 = zext i8 %6 to i32, !dbg !13759
  %8 = lshr i32 %1, %7, !dbg !13760
  ret i32 %8, !dbg !13761
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #18 !dbg !13762 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13766, metadata !DIExpression()), !dbg !13767
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13768
  store i32 31, i32* %2, align 4, !dbg !13769
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13770
  %4 = and i32 %3, 262144, !dbg !13772
  %5 = icmp eq i32 %4, 0, !dbg !13773
  br i1 %5, label %8, label %6, !dbg !13774

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13775
  store i32 5, i32* %7, align 4, !dbg !13777
  br label %15, !dbg !13778

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13779
  %10 = and i32 %9, 65536, !dbg !13781
  %11 = icmp eq i32 %10, 0, !dbg !13782
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13783
  br i1 %11, label %14, label %13, !dbg !13784

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !13785
  br label %15, !dbg !13787

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13788
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13790
  %17 = and i32 %16, 1, !dbg !13792
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13793
  store i32 %17, i32* %18, align 4, !dbg !13795
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13796
  %20 = lshr i32 %19, 8, !dbg !13797
  %21 = and i32 %20, 31, !dbg !13797
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13798
  store i32 %21, i32* %22, align 4, !dbg !13799
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13800
  %24 = lshr i32 %23, 8, !dbg !13802
  %25 = and i32 %24, 1, !dbg !13802
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !13803
  store i32 %25, i32* %26, align 4, !dbg !13805
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13806
  %28 = lshr i32 %27, 24, !dbg !13807
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !13808
  store i32 %28, i32* %29, align 4, !dbg !13809
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13810
  %31 = and i32 %30, 57344, !dbg !13811
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !13812
  store i32 %31, i32* %32, align 4, !dbg !13813
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13814
  %34 = and i32 %33, 1024, !dbg !13816
  %35 = icmp eq i32 %34, 0, !dbg !13817
  br i1 %35, label %38, label %36, !dbg !13818

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13819
  store i32 5, i32* %37, align 4, !dbg !13821
  br label %45, !dbg !13822

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13823
  %40 = and i32 %39, 256, !dbg !13825
  %41 = icmp eq i32 %40, 0, !dbg !13826
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13827
  br i1 %41, label %44, label %43, !dbg !13828

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !13829
  br label %45, !dbg !13831

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !13832
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !13834
  %47 = and i32 %46, 1, !dbg !13836
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13837
  store i32 %47, i32* %48, align 4, !dbg !13839
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13840
  %50 = and i32 %49, 16777216, !dbg !13842
  %51 = icmp eq i32 %50, 0, !dbg !13843
  %52 = select i1 %51, i32 1, i32 2, !dbg !13844
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !13845
  store i32 %52, i32* %53, align 4, !dbg !13847
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13848
  %55 = and i32 %54, 65536, !dbg !13849
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !13850
  store i32 %55, i32* %56, align 4, !dbg !13851
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13852
  %58 = and i32 %57, 3932160, !dbg !13853
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !13854
  store i32 %58, i32* %59, align 4, !dbg !13855
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13856
  %61 = and i32 %60, 12582912, !dbg !13857
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !13858
  store i32 %61, i32* %62, align 4, !dbg !13859
  ret void, !dbg !13860
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #18 !dbg !13861 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13865, metadata !DIExpression()), !dbg !13867
  call void @llvm.dbg.value(metadata i32* %1, metadata !13866, metadata !DIExpression()), !dbg !13867
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13868
  store i32 15, i32* %3, align 4, !dbg !13869
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13870
  %5 = and i32 %4, 3, !dbg !13871
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13872
  store i32 %5, i32* %6, align 4, !dbg !13873
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13874
  %8 = and i32 %7, 240, !dbg !13875
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13876
  store i32 %8, i32* %9, align 4, !dbg !13877
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13878
  %11 = and i32 %10, 1792, !dbg !13879
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13880
  store i32 %11, i32* %12, align 4, !dbg !13881
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13882
  %14 = lshr i32 %13, 3, !dbg !13883
  %15 = and i32 %14, 1792, !dbg !13883
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13884
  store i32 %15, i32* %16, align 4, !dbg !13885
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13886
  %18 = and i32 %17, 1, !dbg !13886
  store i32 %18, i32* %1, align 4, !dbg !13887
  ret void, !dbg !13888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13889 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13890
  %2 = and i32 %1, 128, !dbg !13890
  %3 = icmp eq i32 %2, 0, !dbg !13890
  br i1 %3, label %5, label %4, !dbg !13892

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #27, !dbg !13893
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !13895
  br label %5, !dbg !13896

5:                                                ; preds = %4, %0
  ret void, !dbg !13897
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !13898 {
  ret void, !dbg !13899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #17 !dbg !13900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13903, metadata !DIExpression()), !dbg !13904
  tail call fastcc void @LL_InitTick(i32 noundef %0) #27, !dbg !13905
  ret void, !dbg !13906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #17 !dbg !13907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13910, metadata !DIExpression()), !dbg !13912
  call void @llvm.dbg.value(metadata i32 1000, metadata !13911, metadata !DIExpression()), !dbg !13912
  %2 = udiv i32 %0, 1000, !dbg !13913
  %3 = add nsw i32 %2, -1, !dbg !13914
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13915
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13916
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13917
  ret void, !dbg !13918
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #16 !dbg !13919 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13921, metadata !DIExpression()), !dbg !13924
  %3 = bitcast i32* %2 to i8*, !dbg !13925
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !13925
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13922, metadata !DIExpression()), !dbg !13926
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13927
  store volatile i32 %4, i32* %2, align 4, !dbg !13926
  call void @llvm.dbg.value(metadata i32 %0, metadata !13923, metadata !DIExpression()), !dbg !13924
  %5 = load volatile i32, i32* %2, align 4, !dbg !13928
  %6 = icmp eq i32 %0, -1, !dbg !13929
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !13923, metadata !DIExpression()), !dbg !13924
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %8, metadata !13923, metadata !DIExpression()), !dbg !13924
  br label %9, !dbg !13931

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13923, metadata !DIExpression()), !dbg !13924
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13932
  call void @llvm.dbg.value(metadata i32 undef, metadata !13923, metadata !DIExpression()), !dbg !13924
  %12 = shl i32 %11, 15, !dbg !13924
  %13 = ashr i32 %12, 31, !dbg !13924
  %14 = add i32 %13, %10, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %14, metadata !13923, metadata !DIExpression()), !dbg !13924
  %15 = icmp eq i32 %14, 0, !dbg !13935
  br i1 %15, label %16, label %9, !dbg !13931

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !13936
  ret void, !dbg !13936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !13937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13939, metadata !DIExpression()), !dbg !13940
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !13941
  ret void, !dbg !13942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #17 !dbg !13943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13948, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata i32 0, metadata !13949, metadata !DIExpression()), !dbg !13951
  call void @llvm.dbg.value(metadata i32 0, metadata !13950, metadata !DIExpression()), !dbg !13951
  %2 = add i32 %0, -32000001, !dbg !13952
  %3 = icmp ult i32 %2, -32000000, !dbg !13952
  br i1 %3, label %22, label %4, !dbg !13952

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13954
  %6 = icmp eq i32 %5, 2048, !dbg !13957
  br i1 %6, label %7, label %9, !dbg !13958

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !13959
  call void @llvm.dbg.value(metadata i32 undef, metadata !13950, metadata !DIExpression()), !dbg !13951
  br i1 %8, label %16, label %17, !dbg !13962

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #27, !dbg !13963
  %11 = icmp eq i32 %10, 4096, !dbg !13965
  br i1 %11, label %12, label %14, !dbg !13966

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !13967
  call void @llvm.dbg.value(metadata i32 undef, metadata !13950, metadata !DIExpression()), !dbg !13951
  br i1 %13, label %16, label %17, !dbg !13962

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !13970
  call void @llvm.dbg.value(metadata i32 undef, metadata !13950, metadata !DIExpression()), !dbg !13951
  br i1 %15, label %16, label %17, !dbg !13962

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #27, !dbg !13973
  br label %17, !dbg !13976

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #27, !dbg !13977
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #27, !dbg !13978
  %20 = icmp ne i32 %19, %18, !dbg !13980
  %21 = zext i1 %20 to i32, !dbg !13981
  br label %22, !dbg !13981

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !13951
  call void @llvm.dbg.value(metadata i32 %23, metadata !13949, metadata !DIExpression()), !dbg !13951
  ret i32 %23, !dbg !13982
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #18 !dbg !13983 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13984
  %2 = and i32 %1, 6144, !dbg !13984
  ret i32 %2, !dbg !13985
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #17 !dbg !13986 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13987
  %2 = or i32 %1, 4, !dbg !13987
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13987
  ret void, !dbg !13988
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #17 !dbg !13989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13991, metadata !DIExpression()), !dbg !13992
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13993
  %3 = and i32 %2, -2, !dbg !13993
  %4 = or i32 %3, %0, !dbg !13993
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13993
  ret void, !dbg !13994
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #18 !dbg !13995 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13996
  %2 = and i32 %1, 1, !dbg !13996
  ret i32 %2, !dbg !13997
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #17 !dbg !13998 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !14015, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14016, metadata !DIExpression()), !dbg !14019
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !14020
  %4 = icmp eq i32 %3, 0, !dbg !14022
  br i1 %4, label %5, label %19, !dbg !14023

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #27, !dbg !14024
  call void @llvm.dbg.value(metadata i32 %6, metadata !14018, metadata !DIExpression()), !dbg !14019
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.245() #27, !dbg !14026
  %8 = icmp eq i32 %7, 1, !dbg !14028
  br i1 %8, label %13, label %9, !dbg !14029

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.246() #27, !dbg !14030
  br label %10, !dbg !14032

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.245() #27, !dbg !14033
  %12 = icmp eq i32 %11, 1, !dbg !14034
  br i1 %12, label %13, label %10, !dbg !14032, !llvm.loop !14035

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !14037
  %15 = load i32, i32* %14, align 4, !dbg !14037
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !14038
  %17 = load i32, i32* %16, align 4, !dbg !14038
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.247(i32 noundef 0, i32 noundef %15, i32 noundef %17) #27, !dbg !14039
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #27, !dbg !14040
  call void @llvm.dbg.value(metadata i32 %18, metadata !14017, metadata !DIExpression()), !dbg !14019
  br label %19, !dbg !14041

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !14042
  call void @llvm.dbg.value(metadata i32 %20, metadata !14017, metadata !DIExpression()), !dbg !14019
  ret i32 %20, !dbg !14043
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #18 !dbg !14044 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14048, metadata !DIExpression()), !dbg !14049
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.249() #27, !dbg !14050
  %2 = icmp ne i32 %1, 0, !dbg !14052
  %3 = zext i1 %2 to i32, !dbg !14053
  call void @llvm.dbg.value(metadata i32 %3, metadata !14048, metadata !DIExpression()), !dbg !14049
  ret i32 %3, !dbg !14054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #8 !dbg !14055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14059, metadata !DIExpression()), !dbg !14062
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !14060, metadata !DIExpression()), !dbg !14062
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !14063
  %4 = load i32, i32* %3, align 4, !dbg !14063
  %5 = lshr i32 %4, 18, !dbg !14064
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !14065
  %7 = load i8, i8* %6, align 1, !dbg !14065
  %8 = zext i8 %7 to i32, !dbg !14066
  %9 = mul i32 %8, %0, !dbg !14067
  call void @llvm.dbg.value(metadata i32 %9, metadata !14061, metadata !DIExpression()), !dbg !14062
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !14068
  %11 = load i32, i32* %10, align 4, !dbg !14068
  %12 = lshr i32 %11, 22, !dbg !14069
  %13 = add nuw nsw i32 %12, 1, !dbg !14070
  %14 = udiv i32 %9, %13, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %14, metadata !14061, metadata !DIExpression()), !dbg !14062
  ret i32 %14, !dbg !14072
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.245() unnamed_addr #18 !dbg !14073 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14074
  %2 = lshr i32 %1, 1, !dbg !14075
  %3 = and i32 %2, 1, !dbg !14075
  ret i32 %3, !dbg !14076
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.246() unnamed_addr #17 !dbg !14077 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14078
  %2 = or i32 %1, 1, !dbg !14078
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14078
  ret void, !dbg !14079
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.247(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #17 !dbg !14080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14082, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.value(metadata i32 %1, metadata !14083, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.value(metadata i32 %2, metadata !14084, metadata !DIExpression()), !dbg !14085
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14086
  %5 = and i32 %4, -16580609, !dbg !14086
  %6 = or i32 %1, %0, !dbg !14086
  %7 = or i32 %6, %2, !dbg !14086
  %8 = or i32 %7, %5, !dbg !14086
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14086
  ret void, !dbg !14087
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #17 !dbg !14088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14092, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14093, metadata !DIExpression()), !dbg !14096
  call void @llvm.dbg.value(metadata i32 0, metadata !14094, metadata !DIExpression()), !dbg !14096
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14097
  %4 = load i32, i32* %3, align 4, !dbg !14097
  %5 = lshr i32 %4, 4, !dbg !14097
  %6 = and i32 %5, 15, !dbg !14097
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14097
  %8 = load i8, i8* %7, align 1, !dbg !14097
  %9 = zext i8 %8 to i32, !dbg !14097
  %10 = lshr i32 %0, %9, !dbg !14097
  call void @llvm.dbg.value(metadata i32 %10, metadata !14095, metadata !DIExpression()), !dbg !14096
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14098
  %12 = icmp ult i32 %11, %10, !dbg !14100
  br i1 %12, label %13, label %16, !dbg !14101

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !14102
  call void @llvm.dbg.value(metadata i32 %14, metadata !14094, metadata !DIExpression()), !dbg !14096
  %15 = icmp eq i32 %14, 0, !dbg !14104
  br i1 %15, label %16, label %30, !dbg !14106

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.248() #27, !dbg !14107
  br label %17, !dbg !14109

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.249() #27, !dbg !14110
  %19 = icmp eq i32 %18, 1, !dbg !14111
  br i1 %19, label %20, label %17, !dbg !14109, !llvm.loop !14112

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14114
  tail call fastcc void @LL_RCC_SetAHBPrescaler.250(i32 noundef %21) #27, !dbg !14115
  tail call fastcc void @LL_RCC_SetSysClkSource.251() #27, !dbg !14116
  br label %22, !dbg !14117

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.252() #27, !dbg !14118
  %24 = icmp eq i32 %23, 12, !dbg !14119
  br i1 %24, label %25, label %22, !dbg !14117, !llvm.loop !14120

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14122
  %27 = load i32, i32* %26, align 4, !dbg !14122
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.253(i32 noundef %27) #27, !dbg !14123
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14124
  %29 = load i32, i32* %28, align 4, !dbg !14124
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.254(i32 noundef %29) #27, !dbg !14125
  br label %30, !dbg !14126

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14127
  %33 = icmp ugt i32 %32, %10, !dbg !14129
  br i1 %33, label %34, label %36, !dbg !14130

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #27, !dbg !14131
  call void @llvm.dbg.value(metadata i32 %35, metadata !14094, metadata !DIExpression()), !dbg !14096
  br label %36, !dbg !14133

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14096
  call void @llvm.dbg.value(metadata i32 %37, metadata !14094, metadata !DIExpression()), !dbg !14096
  %38 = icmp eq i32 %37, 0, !dbg !14134
  br i1 %38, label %39, label %40, !dbg !14136

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #27, !dbg !14137
  br label %40, !dbg !14139

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.248() unnamed_addr #17 !dbg !14141 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14142
  %2 = or i32 %1, 16777216, !dbg !14142
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14142
  ret void, !dbg !14143
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.249() unnamed_addr #18 !dbg !14144 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14145
  %2 = lshr i32 %1, 25, !dbg !14146
  %3 = and i32 %2, 1, !dbg !14146
  ret i32 %3, !dbg !14147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.250(i32 noundef %0) unnamed_addr #17 !dbg !14148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14150, metadata !DIExpression()), !dbg !14151
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14152
  %3 = and i32 %2, -241, !dbg !14152
  %4 = or i32 %3, %0, !dbg !14152
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14152
  ret void, !dbg !14153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.251() unnamed_addr #17 !dbg !14154 {
  call void @llvm.dbg.value(metadata i32 3, metadata !14156, metadata !DIExpression()), !dbg !14157
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14158
  %2 = or i32 %1, 3, !dbg !14158
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14158
  ret void, !dbg !14159
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.252() unnamed_addr #18 !dbg !14160 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14161
  %2 = and i32 %1, 12, !dbg !14161
  ret i32 %2, !dbg !14162
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.253(i32 noundef %0) unnamed_addr #17 !dbg !14163 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14165, metadata !DIExpression()), !dbg !14166
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14167
  %3 = and i32 %2, -1793, !dbg !14167
  %4 = or i32 %3, %0, !dbg !14167
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14167
  ret void, !dbg !14168
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.254(i32 noundef %0) unnamed_addr #17 !dbg !14169 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14171, metadata !DIExpression()), !dbg !14172
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14173
  %3 = and i32 %2, -14337, !dbg !14173
  %4 = or i32 %3, %0, !dbg !14173
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14173
  ret void, !dbg !14174
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #17 !dbg !14175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14179, metadata !DIExpression()), !dbg !14185
  call void @llvm.dbg.value(metadata i32 %1, metadata !14180, metadata !DIExpression()), !dbg !14185
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !14181, metadata !DIExpression()), !dbg !14185
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14182, metadata !DIExpression()), !dbg !14185
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #27, !dbg !14186
  %6 = icmp eq i32 %5, 0, !dbg !14188
  br i1 %6, label %7, label %25, !dbg !14189

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #27, !dbg !14190
  call void @llvm.dbg.value(metadata i32 %8, metadata !14184, metadata !DIExpression()), !dbg !14185
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !14192
  %10 = icmp eq i32 %9, 1, !dbg !14194
  br i1 %10, label %19, label %11, !dbg !14195

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14196
  br i1 %12, label %13, label %14, !dbg !14199

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #27, !dbg !14200
  br label %15, !dbg !14202

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #27, !dbg !14203
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #27, !dbg !14205
  br label %16, !dbg !14206

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #27, !dbg !14207
  %18 = icmp eq i32 %17, 1, !dbg !14208
  br i1 %18, label %19, label %16, !dbg !14206, !llvm.loop !14209

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !14211
  %21 = load i32, i32* %20, align 4, !dbg !14211
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !14212
  %23 = load i32, i32* %22, align 4, !dbg !14212
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.247(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #27, !dbg !14213
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #27, !dbg !14214
  call void @llvm.dbg.value(metadata i32 %24, metadata !14183, metadata !DIExpression()), !dbg !14185
  br label %25, !dbg !14215

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !14216
  call void @llvm.dbg.value(metadata i32 %26, metadata !14183, metadata !DIExpression()), !dbg !14185
  ret i32 %26, !dbg !14217
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #18 !dbg !14218 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14219
  %2 = lshr i32 %1, 17, !dbg !14220
  %3 = and i32 %2, 1, !dbg !14220
  ret i32 %3, !dbg !14221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #17 !dbg !14222 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14223
  %2 = or i32 %1, 262144, !dbg !14223
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14223
  ret void, !dbg !14224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #17 !dbg !14225 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14226
  %2 = and i32 %1, -262145, !dbg !14226
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14226
  ret void, !dbg !14227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #17 !dbg !14228 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14229
  %2 = or i32 %1, 65536, !dbg !14229
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14229
  ret void, !dbg !14230
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !14231 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14234, metadata !DIExpression()), !dbg !14250
  call void @llvm.dbg.value(metadata i32 undef, metadata !14234, metadata !DIExpression()), !dbg !14250
  call void @llvm.dbg.value(metadata i32 undef, metadata !14234, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14250
  ret void, !dbg !14251
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14252 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14256, metadata !DIExpression()), !dbg !14258
  %2 = icmp eq i8* %0, null, !dbg !14259
  br i1 %2, label %29, label %3, !dbg !14261

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14262
  %5 = icmp eq i8 %4, 0, !dbg !14263
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14264
  br i1 %6, label %29, label %8, !dbg !14264

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14257, metadata !DIExpression()), !dbg !14258
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14265

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14257, metadata !DIExpression()), !dbg !14258
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #27, !dbg !14267
  br i1 %10, label %11, label %15, !dbg !14272

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14273
  %13 = load i8*, i8** %12, align 4, !dbg !14273
  %14 = icmp eq i8* %13, %0, !dbg !14274
  br i1 %14, label %29, label %15, !dbg !14275

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14276
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14257, metadata !DIExpression()), !dbg !14258
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14277
  br i1 %17, label %7, label %8, !dbg !14278, !llvm.loop !14279

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14257, metadata !DIExpression()), !dbg !14258
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #27, !dbg !14281
  br i1 %20, label %21, label %26, !dbg !14285

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14286
  %23 = load i8*, i8** %22, align 4, !dbg !14286
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !14287
  %25 = icmp eq i32 %24, 0, !dbg !14288
  br i1 %25, label %29, label %26, !dbg !14289

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14290
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14257, metadata !DIExpression()), !dbg !14258
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14291
  br i1 %28, label %29, label %18, !dbg !14265, !llvm.loop !14292

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14258
  ret %struct.device* %30, !dbg !14294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !14295 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14299, metadata !DIExpression()), !dbg !14300
  %2 = icmp eq %struct.device* %0, null, !dbg !14301
  br i1 %2, label %14, label %3, !dbg !14303

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14304
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14304
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14305
  %7 = load i8, i8* %6, align 1, !dbg !14305
  %8 = and i8 %7, 1, !dbg !14305
  %9 = icmp eq i8 %8, 0, !dbg !14305
  br i1 %9, label %14, label %10, !dbg !14306

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14307
  %12 = load i8, i8* %11, align 1, !dbg !14307
  %13 = icmp eq i8 %12, 0, !dbg !14308
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14300
  ret i1 %15, !dbg !14309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !14310 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14315, metadata !DIExpression()), !dbg !14316
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14317
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14318
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14319 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14327, metadata !DIExpression()), !dbg !14332
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14328, metadata !DIExpression()), !dbg !14332
  call void @llvm.dbg.value(metadata i8* %2, metadata !14329, metadata !DIExpression()), !dbg !14332
  %5 = bitcast i32* %4 to i8*, !dbg !14333
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14333
  call void @llvm.dbg.value(metadata i32 0, metadata !14330, metadata !DIExpression()), !dbg !14332
  store i32 0, i32* %4, align 4, !dbg !14334
  call void @llvm.dbg.value(metadata i32* %4, metadata !14330, metadata !DIExpression(DW_OP_deref)), !dbg !14332
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !14335
  call void @llvm.dbg.value(metadata i16* %6, metadata !14331, metadata !DIExpression()), !dbg !14332
  %7 = load i32, i32* %4, align 4, !dbg !14336
  call void @llvm.dbg.value(metadata i32 %7, metadata !14330, metadata !DIExpression()), !dbg !14332
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !14337
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14338
  ret i32 %8, !dbg !14339
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !14340 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14344, metadata !DIExpression()), !dbg !14350
  call void @llvm.dbg.value(metadata i32* %1, metadata !14345, metadata !DIExpression()), !dbg !14350
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14351
  %4 = load i16*, i16** %3, align 4, !dbg !14351
  call void @llvm.dbg.value(metadata i16* %4, metadata !14346, metadata !DIExpression()), !dbg !14350
  %5 = icmp eq i16* %4, null, !dbg !14352
  br i1 %5, label %14, label %6, !dbg !14353

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14354
  call void @llvm.dbg.value(metadata i32 %7, metadata !14347, metadata !DIExpression()), !dbg !14354
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14355
  %9 = load i16, i16* %8, align 2, !dbg !14355
  %10 = add i16 %9, -32767, !dbg !14356
  %11 = icmp ult i16 %10, 2, !dbg !14356
  %12 = add i32 %7, 1, !dbg !14357
  call void @llvm.dbg.value(metadata i32 %12, metadata !14347, metadata !DIExpression()), !dbg !14354
  br i1 %11, label %13, label %6, !dbg !14356, !llvm.loop !14359

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14362
  br label %14, !dbg !14363

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14364
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14365 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14369, metadata !DIExpression()), !dbg !14380
  call void @llvm.dbg.value(metadata i32 %1, metadata !14370, metadata !DIExpression()), !dbg !14380
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14371, metadata !DIExpression()), !dbg !14380
  call void @llvm.dbg.value(metadata i8* %3, metadata !14372, metadata !DIExpression()), !dbg !14380
  call void @llvm.dbg.value(metadata i32 0, metadata !14373, metadata !DIExpression()), !dbg !14381
  %5 = icmp eq i32 %1, 0, !dbg !14382
  br i1 %5, label %16, label %8, !dbg !14383

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14373, metadata !DIExpression()), !dbg !14381
  %7 = icmp eq i32 %15, %1, !dbg !14382
  br i1 %7, label %16, label %8, !dbg !14383, !llvm.loop !14384

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14373, metadata !DIExpression()), !dbg !14381
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14386
  %11 = load i16, i16* %10, align 2, !dbg !14386
  call void @llvm.dbg.value(metadata i16 %11, metadata !14375, metadata !DIExpression()), !dbg !14387
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #27, !dbg !14388
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14378, metadata !DIExpression()), !dbg !14387
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !14389
  call void @llvm.dbg.value(metadata i32 %13, metadata !14379, metadata !DIExpression()), !dbg !14387
  %14 = icmp slt i32 %13, 0, !dbg !14390
  %15 = add nuw i32 %9, 1, !dbg !14392
  call void @llvm.dbg.value(metadata i32 %15, metadata !14373, metadata !DIExpression()), !dbg !14381
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !14394 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14398, metadata !DIExpression()), !dbg !14401
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14399, metadata !DIExpression()), !dbg !14401
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14400, metadata !DIExpression()), !dbg !14401
  %2 = sext i16 %0 to i32, !dbg !14402
  %3 = icmp slt i16 %0, 1, !dbg !14404
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14405
  %6 = add nsw i32 %2, -1, !dbg !14405
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14405
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14405
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14399, metadata !DIExpression()), !dbg !14401
  ret %struct.device* %8, !dbg !14406
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14407 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14409, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14410, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8* %2, metadata !14411, metadata !DIExpression()), !dbg !14414
  %5 = bitcast i32* %4 to i8*, !dbg !14415
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14415
  call void @llvm.dbg.value(metadata i32 0, metadata !14412, metadata !DIExpression()), !dbg !14414
  store i32 0, i32* %4, align 4, !dbg !14416
  call void @llvm.dbg.value(metadata i32* %4, metadata !14412, metadata !DIExpression(DW_OP_deref)), !dbg !14414
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #27, !dbg !14417
  call void @llvm.dbg.value(metadata i16* %6, metadata !14413, metadata !DIExpression()), !dbg !14414
  %7 = load i32, i32* %4, align 4, !dbg !14418
  call void @llvm.dbg.value(metadata i32 %7, metadata !14412, metadata !DIExpression()), !dbg !14414
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #27, !dbg !14419
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14420
  ret i32 %8, !dbg !14421
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !14422 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14424, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32* %1, metadata !14425, metadata !DIExpression()), !dbg !14429
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14430
  %4 = load i16*, i16** %3, align 4, !dbg !14430
  call void @llvm.dbg.value(metadata i16* %4, metadata !14426, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32 0, metadata !14427, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i32 0, metadata !14428, metadata !DIExpression()), !dbg !14429
  %5 = icmp eq i16* %4, null, !dbg !14431
  br i1 %5, label %22, label %6, !dbg !14433

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14427, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i16* %8, metadata !14426, metadata !DIExpression()), !dbg !14429
  %9 = load i16, i16* %8, align 2, !dbg !14434
  %10 = icmp eq i16 %9, -32768, !dbg !14438
  call void @llvm.dbg.value(metadata i32 undef, metadata !14427, metadata !DIExpression()), !dbg !14429
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14439
  call void @llvm.dbg.value(metadata i16* %11, metadata !14426, metadata !DIExpression()), !dbg !14429
  %12 = zext i1 %10 to i32, !dbg !14440
  %13 = add i32 %7, %12, !dbg !14440
  call void @llvm.dbg.value(metadata i32 %13, metadata !14427, metadata !DIExpression()), !dbg !14429
  %14 = icmp eq i32 %13, 2, !dbg !14441
  br i1 %14, label %15, label %6, !dbg !14442

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14429
  call void @llvm.dbg.value(metadata i32 %16, metadata !14428, metadata !DIExpression()), !dbg !14429
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14443
  %18 = load i16, i16* %17, align 2, !dbg !14443
  %19 = icmp eq i16 %18, 32767, !dbg !14444
  %20 = add i32 %16, 1, !dbg !14445
  call void @llvm.dbg.value(metadata i32 %20, metadata !14428, metadata !DIExpression()), !dbg !14429
  br i1 %19, label %21, label %15, !dbg !14447, !llvm.loop !14448

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14450
  br label %22, !dbg !14451

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14452
  call void @llvm.dbg.value(metadata i16* %23, metadata !14426, metadata !DIExpression()), !dbg !14429
  ret i16* %23, !dbg !14453
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !14454 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14457
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14458
  ret i32* %2, !dbg !14459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !14460 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14610, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14611, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14612, metadata !DIExpression()), !dbg !14613
  ret void, !dbg !14614
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14615 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14619, metadata !DIExpression()), !dbg !14621
  call void @llvm.dbg.value(metadata i32 %1, metadata !14620, metadata !DIExpression()), !dbg !14621
  ret void, !dbg !14622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14623 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14627, metadata !DIExpression()), !dbg !14629
  call void @llvm.dbg.value(metadata i32 %1, metadata !14628, metadata !DIExpression()), !dbg !14629
  ret void, !dbg !14630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14635, metadata !DIExpression()), !dbg !14637
  call void @llvm.dbg.value(metadata i8* %1, metadata !14636, metadata !DIExpression()), !dbg !14637
  ret i32 -134, !dbg !14638
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !14639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14643, metadata !DIExpression()), !dbg !14645
  call void @llvm.dbg.value(metadata i8* %1, metadata !14644, metadata !DIExpression()), !dbg !14645
  ret i32 -134, !dbg !14646
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14650, metadata !DIExpression()), !dbg !14651
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14652, !srcloc !14658
  call void @llvm.dbg.value(metadata i32 undef, metadata !14655, metadata !DIExpression()) #25, !dbg !14659
  call void @llvm.dbg.value(metadata i32 undef, metadata !14656, metadata !DIExpression()) #25, !dbg !14659
  br label %3, !dbg !14660

3:                                                ; preds = %3, %1
  br label %3, !dbg !14661, !llvm.loop !14664
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14671, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14672, metadata !DIExpression()), !dbg !14673
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.259, i32 0, i32 0), i32 noundef 69) #26, !dbg !14674
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14679
  unreachable, !dbg !14679
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !14680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14682, metadata !DIExpression()), !dbg !14683
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14684
  unreachable, !dbg !14684
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14687, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14688, metadata !DIExpression()), !dbg !14691
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14692, !srcloc !14658
  call void @llvm.dbg.value(metadata i32 undef, metadata !14655, metadata !DIExpression()) #25, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14656, metadata !DIExpression()) #25, !dbg !14694
  call void @llvm.dbg.value(metadata i32 undef, metadata !14689, metadata !DIExpression()), !dbg !14691
  %4 = tail call fastcc %struct.k_thread* @k_current_get.262() #28, !dbg !14695
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14690, metadata !DIExpression()), !dbg !14691
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #27, !dbg !14696
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.263, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #26, !dbg !14696
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14701
  br i1 %6, label %13, label %7, !dbg !14703

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14704, metadata !DIExpression()), !dbg !14709
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14711
  %9 = load i32, i32* %8, align 4, !dbg !14711
  %10 = and i32 %9, 511, !dbg !14712
  %11 = icmp eq i32 %10, 0, !dbg !14713
  br i1 %11, label %13, label %12, !dbg !14714

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.264, i32 0, i32 0), i32 noundef 69) #26, !dbg !14715
  br label %13, !dbg !14721

13:                                               ; preds = %12, %7, %2
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #27, !dbg !14722
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.265, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #26, !dbg !14722
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !14727
  %15 = icmp eq i32 %0, 4, !dbg !14728
  br i1 %15, label %16, label %17, !dbg !14733

16:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.267, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.268, i32 0, i32 0), i32 noundef 148) #26, !dbg !14734
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7.269, i32 0, i32 0)) #26, !dbg !14734
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.268, i32 0, i32 0), i32 noundef 148) #26, !dbg !14734
  unreachable, !dbg !14734

17:                                               ; preds = %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14692
  call void @llvm.dbg.value(metadata i32 %18, metadata !14655, metadata !DIExpression()) #25, !dbg !14694
  call void @llvm.dbg.value(metadata i32 %18, metadata !14689, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.value(metadata i32 undef, metadata !14736, metadata !DIExpression()) #25, !dbg !14739
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14741, !srcloc !14742
  tail call fastcc void @k_thread_abort.270(%struct.k_thread* noundef %4) #27, !dbg !14743
  ret void, !dbg !14746
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.262() unnamed_addr #11 !dbg !14747 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.278() #28, !dbg !14751
  ret %struct.k_thread* %1, !dbg !14752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !14753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14757, metadata !DIExpression()), !dbg !14758
  %2 = icmp ult i32 %0, 5, !dbg !14759
  br i1 %2, label %3, label %6, !dbg !14759

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14759
  %5 = load i8*, i8** %4, align 4, !dbg !14759
  br label %6, !dbg !14759

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13.272, i32 0, i32 0), %1 ], !dbg !14760
  ret i8* %7, !dbg !14762
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14763 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14767, metadata !DIExpression()), !dbg !14769
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14770
  br i1 %2, label %9, label %3, !dbg !14771

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #26, !dbg !14772
  call void @llvm.dbg.value(metadata i8* %4, metadata !14768, metadata !DIExpression()), !dbg !14769
  %5 = icmp eq i8* %4, null, !dbg !14773
  br i1 %5, label %9, label %6, !dbg !14775

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14776
  %8 = icmp eq i8 %7, 0, !dbg !14777
  br i1 %8, label %9, label %10, !dbg !14778

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.271, i32 0, i32 0), metadata !14768, metadata !DIExpression()), !dbg !14769
  br label %10, !dbg !14779

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.271, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14769
  call void @llvm.dbg.value(metadata i8* %11, metadata !14768, metadata !DIExpression()), !dbg !14769
  ret i8* %11, !dbg !14781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.270(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14782 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14786, metadata !DIExpression()), !dbg !14787
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14788, !srcloc !14790
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !14791
  ret void, !dbg !14792
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.278() unnamed_addr #11 !dbg !14793 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14794, !srcloc !14796
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !14797
  ret %struct.k_thread* %1, !dbg !14798
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14799 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14803, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata i32 %1, metadata !14804, metadata !DIExpression()), !dbg !14806
  call void @llvm.dbg.value(metadata i32 %2, metadata !14805, metadata !DIExpression()), !dbg !14806
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !14807
  ret void, !dbg !14808
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14809 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14813, metadata !DIExpression()), !dbg !14816
  call void @llvm.dbg.value(metadata i8* %1, metadata !14814, metadata !DIExpression()), !dbg !14816
  call void @llvm.dbg.value(metadata i32 %2, metadata !14815, metadata !DIExpression()), !dbg !14816
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !14817
  ret void, !dbg !14818
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14819 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #27, !dbg !14820
  ret void, !dbg !14821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14824, metadata !DIExpression()), !dbg !14825
  tail call fastcc void @init_idle_thread(i32 noundef %0) #27, !dbg !14826
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14827
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14828
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14829
  %4 = trunc i32 %0 to i8, !dbg !14830
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14831
  store i8 %4, i8* %5, align 4, !dbg !14832
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14833
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #27, !dbg !14834
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14835
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14836
  store i8* %8, i8** %9, align 4, !dbg !14837
  ret void, !dbg !14838
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14839 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14841, metadata !DIExpression()), !dbg !14847
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14848
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14842, metadata !DIExpression()), !dbg !14847
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14849
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14843, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.value(metadata i8* null, metadata !14846, metadata !DIExpression()), !dbg !14847
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14850
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14851
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #26, !dbg !14852
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #27, !dbg !14853
  ret void, !dbg !14854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14855 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14859, metadata !DIExpression()), !dbg !14860
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14861
  ret i8* %2, !dbg !14862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14863 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14868, metadata !DIExpression()), !dbg !14869
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14870
  %3 = load i8, i8* %2, align 1, !dbg !14871
  %4 = and i8 %3, -5, !dbg !14871
  store i8 %4, i8* %2, align 1, !dbg !14871
  ret void, !dbg !14872
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !14873 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #27, !dbg !14876
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !14877
  %3 = ptrtoint i8* %2 to i32, !dbg !14886
  %4 = add i32 %3, 2048, !dbg !14887
  call void @llvm.dbg.value(metadata i32 %4, metadata !14881, metadata !DIExpression()) #25, !dbg !14888
  call void @llvm.dbg.value(metadata i32 %4, metadata !14889, metadata !DIExpression()) #25, !dbg !14892
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !14894, !srcloc !14895
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14896
  %6 = or i32 %5, 512, !dbg !14896
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !14896
  tail call fastcc void @__NVIC_SetPriority.287(i32 noundef -2, i32 noundef 255) #26, !dbg !14897
  tail call fastcc void @__NVIC_SetPriority.287(i32 noundef -5, i32 noundef 0) #26, !dbg !14900
  tail call fastcc void @__NVIC_SetPriority.287(i32 noundef -12, i32 noundef 0) #26, !dbg !14901
  tail call fastcc void @__NVIC_SetPriority.287(i32 noundef -11, i32 noundef 0) #26, !dbg !14902
  tail call fastcc void @__NVIC_SetPriority.287(i32 noundef -10, i32 noundef 0) #26, !dbg !14903
  tail call fastcc void @__NVIC_SetPriority.287(i32 noundef -4, i32 noundef 0) #26, !dbg !14904
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14905
  %8 = or i32 %7, 458752, !dbg !14905
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !14905
  tail call void @z_arm_fault_init() #26, !dbg !14906
  tail call void @z_arm_cpu_idle_init() #26, !dbg !14907
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !14908
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !14911
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !14912
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !14913
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !14914
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !14914
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !14875, metadata !DIExpression()), !dbg !14915
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #27, !dbg !14916
  call void @z_device_state_init() #26, !dbg !14917
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #27, !dbg !14918
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #27, !dbg !14919
  %11 = call fastcc i8* @prepare_multithreading() #27, !dbg !14920
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !14921
  unreachable, !dbg !14921
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2543 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2547, metadata !DIExpression()), !dbg !14922
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !14923
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !14923
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2548, metadata !DIExpression()), !dbg !14922
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2548, metadata !DIExpression()), !dbg !14922
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !14924
  br i1 %7, label %8, label %35, !dbg !14925

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2548, metadata !DIExpression()), !dbg !14922
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !14926
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !14926
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2558, metadata !DIExpression()), !dbg !14927
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !14928
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !14928
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !14929
  call void @llvm.dbg.value(metadata i32 %14, metadata !2562, metadata !DIExpression()), !dbg !14927
  %15 = icmp eq %struct.device* %11, null, !dbg !14930
  br i1 %15, label %32, label %16, !dbg !14932

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !14933
  br i1 %17, label %26, label %18, !dbg !14936

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !14937
  call void @llvm.dbg.value(metadata i32 %19, metadata !2562, metadata !DIExpression()), !dbg !14927
  %20 = icmp ult i32 %19, 255, !dbg !14939
  %21 = select i1 %20, i32 %19, i32 255, !dbg !14939
  call void @llvm.dbg.value(metadata i32 %21, metadata !2562, metadata !DIExpression()), !dbg !14927
  %22 = trunc i32 %21 to i8, !dbg !14940
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14941
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !14941
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !14942
  store i8 %22, i8* %25, align 1, !dbg !14943
  br label %26, !dbg !14944

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !14945
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !14945
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !14946
  %30 = load i8, i8* %29, align 1, !dbg !14947
  %31 = or i8 %30, 1, !dbg !14947
  store i8 %31, i8* %29, align 1, !dbg !14947
  br label %32, !dbg !14948

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !14949
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2548, metadata !DIExpression()), !dbg !14922
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !14924
  br i1 %34, label %8, label %35, !dbg !14925, !llvm.loop !14950

35:                                               ; preds = %32, %1
  ret void, !dbg !14952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.287(i32 noundef %0, i32 noundef %1) unnamed_addr #17 !dbg !14953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14955, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.value(metadata i32 %1, metadata !14956, metadata !DIExpression()), !dbg !14957
  %3 = trunc i32 %1 to i8, !dbg !14958
  %4 = shl i8 %3, 4, !dbg !14958
  %5 = and i32 %0, 15, !dbg !14961
  %6 = add nsw i32 %5, -4, !dbg !14962
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !14963
  store volatile i8 %4, i8* %7, align 1, !dbg !14964
  ret void, !dbg !14965
}

; Function Attrs: optsize
declare !dbg !14966 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14967 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14970, metadata !DIExpression()), !dbg !14971
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14972
  store i8 1, i8* %2, align 1, !dbg !14973
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !14974
  store i8 1, i8* %3, align 4, !dbg !14975
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !14976
  store i32 0, i32* %4, align 4, !dbg !14977
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !14978
  store i32 0, i32* %5, align 4, !dbg !14979
  tail call void @k_thread_system_pool_assign(%struct.k_thread* noundef %0) #26, !dbg !14980
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14981
  ret void, !dbg !14982
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !14983 {
  tail call void @z_sched_init() #26, !dbg !14988
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14989
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.288, i32 0, i32 0)) #26, !dbg !14990
  call void @llvm.dbg.value(metadata i8* %1, metadata !14987, metadata !DIExpression()), !dbg !14991
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !14992
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !14993
  tail call void @z_init_cpu(i32 noundef 0) #27, !dbg !14994
  ret i8* %1, !dbg !14995
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !14996 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15000, metadata !DIExpression()), !dbg !15001
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !15002
  unreachable, !dbg !15003
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15006, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i8* %1, metadata !15007, metadata !DIExpression()), !dbg !15009
  call void @llvm.dbg.value(metadata i8* %2, metadata !15008, metadata !DIExpression()), !dbg !15009
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15010
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #27, !dbg !15011
  tail call void @boot_banner() #26, !dbg !15012
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #27, !dbg !15013
  tail call void @z_init_static_threads() #26, !dbg !15014
  tail call void @main() #26, !dbg !15015
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15016
  %5 = and i8 %4, -2, !dbg !15016
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15016
  ret void, !dbg !15017
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !15018 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15028, metadata !DIExpression()), !dbg !15030
  call void @llvm.dbg.value(metadata i8* %1, metadata !15029, metadata !DIExpression()), !dbg !15030
  ret void, !dbg !15031
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !15032 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15034, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.value(metadata i8* %1, metadata !15035, metadata !DIExpression()), !dbg !15036
  ret void, !dbg !15037
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15038 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15039, !srcloc !15046
  call void @llvm.dbg.value(metadata i32 %1, metadata !15042, metadata !DIExpression()) #25, !dbg !15047
  %2 = icmp ne i32 %1, 0, !dbg !15048
  ret i1 %2, !dbg !15049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !15050 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15051
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15052
  %3 = load i8, i8* %2, align 4, !dbg !15053
  %4 = or i8 %3, 1, !dbg !15053
  store i8 %4, i8* %2, align 4, !dbg !15053
  ret void, !dbg !15054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !15055 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15056
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15057
  %3 = load i8, i8* %2, align 4, !dbg !15058
  %4 = and i8 %3, -2, !dbg !15058
  store i8 %4, i8* %2, align 4, !dbg !15058
  ret void, !dbg !15059
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !15060 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15061
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15062
  %3 = load i8, i8* %2, align 4, !dbg !15062
  %4 = and i8 %3, 1, !dbg !15063
  %5 = icmp ne i8 %4, 0, !dbg !15064
  ret i1 %5, !dbg !15065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !15066 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15070, metadata !DIExpression()), !dbg !15072
  call void @llvm.dbg.value(metadata i8* %1, metadata !15071, metadata !DIExpression()), !dbg !15072
  ret i32 -88, !dbg !15073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !15074 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15078, metadata !DIExpression()), !dbg !15079
  ret i8* null, !dbg !15080
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #4 !dbg !15081 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15085, metadata !DIExpression()), !dbg !15088
  call void @llvm.dbg.value(metadata i8* %1, metadata !15086, metadata !DIExpression()), !dbg !15088
  call void @llvm.dbg.value(metadata i32 %2, metadata !15087, metadata !DIExpression()), !dbg !15088
  ret i32 -88, !dbg !15089
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2571 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2687, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata i8* %1, metadata !2688, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata i32 %2, metadata !2689, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata i32 0, metadata !2690, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata i8 undef, metadata !2692, metadata !DIExpression()), !dbg !15090
  %4 = icmp eq i8* %1, null, !dbg !15091
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15093
  br i1 %6, label %46, label %7, !dbg !15093

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15094
  %9 = load i8, i8* %8, align 1, !dbg !15094
  call void @llvm.dbg.value(metadata i8 %9, metadata !2692, metadata !DIExpression()), !dbg !15090
  %10 = add i32 %2, -1, !dbg !15095
  call void @llvm.dbg.value(metadata i32 %10, metadata !2689, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata i8 0, metadata !2693, metadata !DIExpression()), !dbg !15096
  call void @llvm.dbg.value(metadata i8 %9, metadata !2692, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata i32 0, metadata !2690, metadata !DIExpression()), !dbg !15090
  %11 = icmp eq i8 %9, 0, !dbg !15097
  br i1 %11, label %12, label %15, !dbg !15099

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15100
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15101
  store i8 0, i8* %14, align 1, !dbg !15102
  br label %46, !dbg !15103

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2693, metadata !DIExpression()), !dbg !15096
  call void @llvm.dbg.value(metadata i8 %17, metadata !2692, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata i32 %18, metadata !2690, metadata !DIExpression()), !dbg !15090
  %19 = zext i8 %17 to i32, !dbg !15104
  %20 = zext i8 %16 to i32, !dbg !15105
  %21 = shl nuw i32 1, %20, !dbg !15105
  call void @llvm.dbg.value(metadata i32 %21, metadata !2691, metadata !DIExpression()), !dbg !15090
  %22 = and i32 %21, %19, !dbg !15107
  %23 = icmp eq i32 %22, 0, !dbg !15109
  br i1 %23, label %42, label %24, !dbg !15110

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15111
  %26 = sub i32 %10, %18, !dbg !15112
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15113
  %28 = load i8*, i8** %27, align 4, !dbg !15113
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15114
  %30 = load i32, i32* %29, align 4, !dbg !15114
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #27, !dbg !15115
  %32 = add i32 %31, %18, !dbg !15116
  call void @llvm.dbg.value(metadata i32 %32, metadata !2690, metadata !DIExpression()), !dbg !15090
  %33 = trunc i32 %21 to i8, !dbg !15117
  %34 = xor i8 %33, -1, !dbg !15117
  %35 = and i8 %17, %34, !dbg !15117
  call void @llvm.dbg.value(metadata i8 %35, metadata !2692, metadata !DIExpression()), !dbg !15090
  %36 = icmp eq i8 %35, 0, !dbg !15118
  br i1 %36, label %12, label %37, !dbg !15120

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15121
  %39 = sub i32 %10, %32, !dbg !15123
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.293, i32 0, i32 0), i32 noundef 1) #27, !dbg !15124
  %41 = add i32 %40, %32, !dbg !15125
  call void @llvm.dbg.value(metadata i32 %41, metadata !2690, metadata !DIExpression()), !dbg !15090
  br label %42, !dbg !15126

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15090
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15090
  call void @llvm.dbg.value(metadata i8 %44, metadata !2692, metadata !DIExpression()), !dbg !15090
  call void @llvm.dbg.value(metadata i32 %43, metadata !2690, metadata !DIExpression()), !dbg !15090
  %45 = add i8 %16, 1, !dbg !15127
  call void @llvm.dbg.value(metadata i8 %45, metadata !2693, metadata !DIExpression()), !dbg !15096
  br label %15, !dbg !15099

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.294, i32 0, i32 0), %3 ], !dbg !15090
  ret i8* %47, !dbg !15128
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15133, metadata !DIExpression()), !dbg !15138
  call void @llvm.dbg.value(metadata i32 %1, metadata !15134, metadata !DIExpression()), !dbg !15138
  call void @llvm.dbg.value(metadata i8* %2, metadata !15135, metadata !DIExpression()), !dbg !15138
  call void @llvm.dbg.value(metadata i32 %3, metadata !15136, metadata !DIExpression()), !dbg !15138
  %5 = icmp ult i32 %1, %3, !dbg !15139
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15139
  call void @llvm.dbg.value(metadata i32 %6, metadata !15137, metadata !DIExpression()), !dbg !15138
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !15140
  ret i32 %6, !dbg !15141
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15146, metadata !DIExpression()), !dbg !15147
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !15148
  ret void, !dbg !15149
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15150 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15159, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15160, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata i32 %2, metadata !15161, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15162, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata i8* %4, metadata !15163, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata i8* %5, metadata !15164, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata i8* %6, metadata !15165, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata i32 %7, metadata !15166, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata i32 %8, metadata !15167, metadata !DIExpression()), !dbg !15170
  call void @llvm.dbg.value(metadata i8* undef, metadata !15168, metadata !DIExpression()), !dbg !15170
  %11 = icmp eq i32 %7, 15, !dbg !15171
  br i1 %11, label %12, label %15, !dbg !15171

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !15171
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #27, !dbg !15171
  br i1 %14, label %19, label %18, !dbg !15171

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !15171
  %17 = icmp ult i32 %16, 31, !dbg !15171
  br i1 %17, label %19, label %18, !dbg !15171

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.306, i32 0, i32 0), i32 noundef 536) #26, !dbg !15175
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.307, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #26, !dbg !15175
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.306, i32 0, i32 0), i32 noundef 536) #26, !dbg !15175
  unreachable, !dbg !15175

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15177
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #27, !dbg !15178
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15179
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #27, !dbg !15180
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #27, !dbg !15181
  call void @llvm.dbg.value(metadata i8* %22, metadata !15169, metadata !DIExpression()), !dbg !15170
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !15182
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15183
  store i8* null, i8** %23, align 4, !dbg !15184
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15185
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15185
  br i1 %25, label %29, label %26, !dbg !15187

26:                                               ; preds = %19
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 6, !dbg !15188
  %28 = load %struct.k_heap*, %struct.k_heap** %27, align 8, !dbg !15188
  br label %29, !dbg !15189

29:                                               ; preds = %19, %26
  %30 = phi %struct.k_heap* [ %28, %26 ], [ null, %19 ], !dbg !15170
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15190
  store %struct.k_heap* %30, %struct.k_heap** %31, align 8, !dbg !15192
  ret i8* %22, !dbg !15193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !15194 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15198, metadata !DIExpression()), !dbg !15199
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !15200
  ret i1 %2, !dbg !15201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !15202 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15207, metadata !DIExpression()), !dbg !15208
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15209
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #27, !dbg !15210
  ret void, !dbg !15211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !15212 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15217, metadata !DIExpression()), !dbg !15221
  call void @llvm.dbg.value(metadata i32 %1, metadata !15218, metadata !DIExpression()), !dbg !15221
  call void @llvm.dbg.value(metadata i32 %2, metadata !15219, metadata !DIExpression()), !dbg !15221
  call void @llvm.dbg.value(metadata i32 %3, metadata !15220, metadata !DIExpression()), !dbg !15221
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15222
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !15223
  %6 = trunc i32 %3 to i8, !dbg !15224
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15225
  store i8 %6, i8* %7, align 4, !dbg !15226
  %8 = trunc i32 %2 to i8, !dbg !15227
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15228
  store i8 %8, i8* %9, align 1, !dbg !15229
  %10 = trunc i32 %1 to i8, !dbg !15230
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15231
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15231
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15231
  store i8 %10, i8* %13, align 2, !dbg !15232
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15233
  store i8 0, i8* %14, align 1, !dbg !15234
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #27, !dbg !15235
  ret void, !dbg !15236
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !15237 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15241, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15242, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.value(metadata i32 %2, metadata !15243, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.value(metadata i32 0, metadata !15248, metadata !DIExpression()), !dbg !15249
  %4 = add i32 %2, 7, !dbg !15250
  %5 = and i32 %4, -8, !dbg !15250
  %6 = add i32 %5, 64, !dbg !15250
  call void @llvm.dbg.value(metadata i32 %6, metadata !15244, metadata !DIExpression()), !dbg !15249
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.308(%struct.z_thread_stack_element* noundef %1) #27, !dbg !15252
  call void @llvm.dbg.value(metadata i8* %7, metadata !15247, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.value(metadata i32 %5, metadata !15245, metadata !DIExpression()), !dbg !15249
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15253
  call void @llvm.dbg.value(metadata i8* %8, metadata !15246, metadata !DIExpression()), !dbg !15249
  call void @llvm.dbg.value(metadata i32 0, metadata !15248, metadata !DIExpression()), !dbg !15249
  %9 = ptrtoint i8* %7 to i32, !dbg !15254
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15255
  store i32 %9, i32* %10, align 4, !dbg !15256
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15257
  store i32 %5, i32* %11, align 4, !dbg !15258
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15259
  store i32 0, i32* %12, align 4, !dbg !15260
  call void @llvm.dbg.value(metadata i8* %8, metadata !15246, metadata !DIExpression()), !dbg !15249
  ret i8* %8, !dbg !15261
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.308(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !15262 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15266, metadata !DIExpression()), !dbg !15267
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15268
  ret i8* %2, !dbg !15269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15270 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15275, metadata !DIExpression()), !dbg !15276
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15277
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !15278
  ret void, !dbg !15279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15280 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15282, metadata !DIExpression()), !dbg !15283
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15284
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #27, !dbg !15285
  ret void, !dbg !15286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15287 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15291, metadata !DIExpression()), !dbg !15292
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15293
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15294
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15295
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15296
  ret void, !dbg !15297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15298 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15303, metadata !DIExpression()), !dbg !15304
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15305
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15306
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15307
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15308
  ret void, !dbg !15309
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15310 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15327, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15318, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15319, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 %2, metadata !15320, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15321, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i8* %4, metadata !15322, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i8* %5, metadata !15323, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i8* %6, metadata !15324, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 %7, metadata !15325, metadata !DIExpression()), !dbg !15328
  call void @llvm.dbg.value(metadata i32 %8, metadata !15326, metadata !DIExpression()), !dbg !15328
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15329, !srcloc !15046
  call void @llvm.dbg.value(metadata i32 %11, metadata !15042, metadata !DIExpression()) #25, !dbg !15334
  %12 = icmp eq i32 %11, 0, !dbg !15335
  br i1 %12, label %14, label %13, !dbg !15336

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.309, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.306, i32 0, i32 0), i32 noundef 647) #26, !dbg !15337
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.310, i32 0, i32 0)) #26, !dbg !15337
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.306, i32 0, i32 0), i32 noundef 647) #26, !dbg !15337
  unreachable, !dbg !15337

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !15327, metadata !DIExpression()), !dbg !15328
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #27, !dbg !15339
  %17 = icmp eq i64 %15, -1, !dbg !15340
  br i1 %17, label %19, label %18, !dbg !15342

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #27, !dbg !15343
  br label %19, !dbg !15345

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !15346
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15347 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15352, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15351, metadata !DIExpression()), !dbg !15353
  %4 = icmp eq i64 %3, 0, !dbg !15354
  br i1 %4, label %5, label %6, !dbg !15356

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !15357
  br label %7, !dbg !15359

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !15360
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15363 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15367, metadata !DIExpression()), !dbg !15368
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15369, !srcloc !15371
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #27, !dbg !15372
  ret void, !dbg !15373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15374 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15377, metadata !DIExpression()), !dbg !15378
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15376, metadata !DIExpression()), !dbg !15378
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15379
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15380
  ret void, !dbg !15381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15382 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15384, metadata !DIExpression()), !dbg !15403
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !15404

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.306, i32 0, i32 0), i32 noundef 750) #26, !dbg !15408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.314, i32 0, i32 0)) #26, !dbg !15408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.306, i32 0, i32 0), i32 noundef 750) #26, !dbg !15408
  unreachable, !dbg !15408

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %29, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15384, metadata !DIExpression()), !dbg !15403
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15411
  br i1 %4, label %6, label %5, !dbg !15412

5:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !15413
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15401, metadata !DIExpression()), !dbg !15414
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %31, label %32, !dbg !15415

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15419
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !15419
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15421
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !15421
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15422
  %12 = load i32, i32* %11, align 4, !dbg !15422
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15423
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !15423
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15424
  %16 = load i8*, i8** %15, align 4, !dbg !15424
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15425
  %18 = load i8*, i8** %17, align 4, !dbg !15425
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15426
  %20 = load i8*, i8** %19, align 4, !dbg !15426
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15427
  %22 = load i32, i32* %21, align 4, !dbg !15427
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15428
  %24 = load i32, i32* %23, align 4, !dbg !15428
  %25 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* undef) #27, !dbg !15429
  %26 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !15430
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %26, i32 0, i32 2, !dbg !15431
  %28 = bitcast i8** %27 to %struct._static_thread_data**, !dbg !15432
  store %struct._static_thread_data* %3, %struct._static_thread_data** %28, align 4, !dbg !15432
  %29 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15433
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %29, metadata !15384, metadata !DIExpression()), !dbg !15403
  %30 = icmp ugt %struct._static_thread_data* %29, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15434
  br i1 %30, label %1, label %2, !dbg !15404, !llvm.loop !15435

31:                                               ; preds = %48, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.304, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.313, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.306, i32 0, i32 0), i32 noundef 781) #26, !dbg !15437
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.314, i32 0, i32 0)) #26, !dbg !15437
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.306, i32 0, i32 0), i32 noundef 781) #26, !dbg !15437
  unreachable, !dbg !15437

32:                                               ; preds = %5, %48
  %33 = phi %struct._static_thread_data* [ %49, %48 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %33, metadata !15401, metadata !DIExpression()), !dbg !15414
  %34 = icmp ult %struct._static_thread_data* %33, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15440
  br i1 %34, label %36, label %35, !dbg !15441

35:                                               ; preds = %32
  tail call void @k_sched_unlock() #26, !dbg !15442
  ret void, !dbg !15443

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 9, !dbg !15444
  %38 = load i32, i32* %37, align 4, !dbg !15444
  %39 = icmp eq i32 %38, -1, !dbg !15447
  br i1 %39, label %48, label %40, !dbg !15448

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 0, i32 0, !dbg !15449
  %42 = load %struct.k_thread*, %struct.k_thread** %41, align 4, !dbg !15449
  %43 = icmp sgt i32 %38, 0, !dbg !15451
  %44 = select i1 %43, i32 %38, i32 0, !dbg !15451
  %45 = zext i32 %44 to i64, !dbg !15451
  %46 = tail call fastcc i64 @k_ms_to_ticks_ceil64.315(i64 noundef %45) #27, !dbg !15451
  %47 = insertvalue [1 x i64] poison, i64 %46, 0, !dbg !15452
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %42, [1 x i64] %47) #27, !dbg !15452
  br label %48, !dbg !15453

48:                                               ; preds = %36, %40
  %49 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %33, i32 1, !dbg !15454
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %49, metadata !15401, metadata !DIExpression()), !dbg !15414
  %50 = icmp ugt %struct._static_thread_data* %49, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15455
  br i1 %50, label %31, label %32, !dbg !15415, !llvm.loop !15456
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.315(i64 noundef %0) unnamed_addr #4 !dbg !15458 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15460, metadata !DIExpression()), !dbg !15461
  call void @llvm.dbg.value(metadata i64 %0, metadata !15462, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i32 1000, metadata !15465, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i32 10000, metadata !15466, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i8 1, metadata !15467, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i8 0, metadata !15468, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i8 1, metadata !15469, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i8 0, metadata !15470, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i8 1, metadata !15471, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i8 0, metadata !15472, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !15477
  call void @llvm.dbg.value(metadata i64 0, metadata !15473, metadata !DIExpression()), !dbg !15477
  %2 = mul i64 %0, 10, !dbg !15479
  ret i64 %2, !dbg !15485
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !15486 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15488, metadata !DIExpression()), !dbg !15492
  call void @llvm.dbg.value(metadata i8* %1, metadata !15489, metadata !DIExpression()), !dbg !15492
  call void @llvm.dbg.value(metadata i8* %2, metadata !15490, metadata !DIExpression()), !dbg !15492
  call void @llvm.dbg.value(metadata i8* %3, metadata !15491, metadata !DIExpression()), !dbg !15492
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15493
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15494
  %7 = load i8, i8* %6, align 4, !dbg !15495
  %8 = or i8 %7, 4, !dbg !15495
  store i8 %8, i8* %6, align 4, !dbg !15495
  tail call void @z_thread_essential_clear() #27, !dbg !15496
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !15497
  unreachable, !dbg !15497
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15498 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15503, metadata !DIExpression()), !dbg !15505
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15506
  %3 = load i32, i32* %2, align 4, !dbg !15506
  call void @llvm.dbg.value(metadata i32 %3, metadata !15504, metadata !DIExpression()), !dbg !15505
  %4 = icmp eq i32 %3, 0, !dbg !15507
  br i1 %4, label %10, label %5, !dbg !15509

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !15510
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15513
  %8 = zext i8 %7 to i32, !dbg !15514
  %9 = icmp eq i32 %6, %8, !dbg !15515
  br i1 %9, label %11, label %10, !dbg !15516

10:                                               ; preds = %5, %1
  br label %11, !dbg !15517

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !15505
  ret i1 %12, !dbg !15518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !15519 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15521, metadata !DIExpression()), !dbg !15522
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15523
  %3 = load i32, i32* %2, align 4, !dbg !15523
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15525
  %5 = zext i8 %4 to i32, !dbg !15526
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15527
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !15528
  %8 = or i32 %7, %5, !dbg !15529
  %9 = icmp eq i32 %3, %8, !dbg !15530
  br i1 %9, label %10, label %11, !dbg !15531

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !15532
  br label %11, !dbg !15533

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !15534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !15535 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15539, metadata !DIExpression()), !dbg !15540
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !15541
  %3 = zext i8 %2 to i32, !dbg !15542
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15543
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !15544
  %6 = or i32 %5, %3, !dbg !15545
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !15546
  store i32 %6, i32* %7, align 4, !dbg !15547
  ret void, !dbg !15548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !15549 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15553, metadata !DIExpression()), !dbg !15554
  ret i32 -134, !dbg !15555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !15556 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15560, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.value(metadata i32 %1, metadata !15561, metadata !DIExpression()), !dbg !15562
  ret i32 -134, !dbg !15563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !15564 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15571, metadata !DIExpression()), !dbg !15573
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !15572, metadata !DIExpression()), !dbg !15573
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15574
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !15576
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15573
  ret i32 %6, !dbg !15577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !15578 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !15582, metadata !DIExpression()), !dbg !15583
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !15584
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15583
  ret i32 %3, !dbg !15586
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15587 {
  tail call void @sys_clock_idle_exit() #26, !dbg !15589
  ret void, !dbg !15590
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !15591 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15593, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata i8* %1, metadata !15594, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata i8* %2, metadata !15595, metadata !DIExpression()), !dbg !15596
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15597
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !15597
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !15597
  %7 = load i8, i8* %6, align 2, !dbg !15597
  %8 = icmp sgt i8 %7, -1, !dbg !15597
  br i1 %8, label %10, label %9, !dbg !15600

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.324, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.326, i32 0, i32 0), i32 noundef 39) #26, !dbg !15601
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.326, i32 0, i32 0), i32 noundef 39) #26, !dbg !15601
  unreachable, !dbg !15601

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15603, !srcloc !15610
  call void @llvm.dbg.value(metadata i32 undef, metadata !15606, metadata !DIExpression()) #25, !dbg !15611
  call void @llvm.dbg.value(metadata i32 undef, metadata !15607, metadata !DIExpression()) #25, !dbg !15611
  tail call fastcc void @k_cpu_idle() #27, !dbg !15612
  br label %10, !dbg !15613, !llvm.loop !15614
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15616 {
  tail call void @arch_cpu_idle() #26, !dbg !15617
  ret void, !dbg !15618
}

; Function Attrs: optsize
declare !dbg !15619 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !15620 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15638, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.value(metadata i8* %1, metadata !15639, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.value(metadata i32 %2, metadata !15640, metadata !DIExpression()), !dbg !15642
  call void @llvm.dbg.value(metadata i32 %3, metadata !15641, metadata !DIExpression()), !dbg !15642
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15643
  store i32 %2, i32* %5, align 4, !dbg !15644
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15645
  store i32 %3, i32* %6, align 4, !dbg !15646
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15647
  store i8* %1, i8** %7, align 4, !dbg !15648
  %8 = mul i32 %3, %2, !dbg !15649
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !15650
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15651
  store i8* %9, i8** %10, align 4, !dbg !15652
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15653
  store i8* %1, i8** %11, align 4, !dbg !15654
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15655
  store i8* %1, i8** %12, align 4, !dbg !15656
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15657
  store i32 0, i32* %13, align 4, !dbg !15658
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15659
  store i8 0, i8* %14, align 4, !dbg !15660
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15661
  tail call fastcc void @z_waitq_init.327(%struct._wait_q_t* noundef %15) #27, !dbg !15662
  %16 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, i32 0, !dbg !15663
  store i32 0, i32* %16, align 4, !dbg !15663
  ret void, !dbg !15664
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.327(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !15665 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15669, metadata !DIExpression()), !dbg !15670
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15671
  tail call fastcc void @sys_dlist_init.328(%struct._dnode* noundef %2) #27, !dbg !15672
  ret void, !dbg !15673
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.328(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15674 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15679, metadata !DIExpression()), !dbg !15680
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15681
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15682
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15683
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15684
  ret void, !dbg !15685
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !15686 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15690, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.value(metadata i32 %1, metadata !15691, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.value(metadata i32 %2, metadata !15692, metadata !DIExpression()), !dbg !15696
  %5 = bitcast i32* %4 to i8*, !dbg !15697
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15697
  call void @llvm.dbg.value(metadata i32* %4, metadata !15695, metadata !DIExpression(DW_OP_deref)), !dbg !15696
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !15698
  br i1 %6, label %13, label %7, !dbg !15700

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !15701
  call void @llvm.dbg.value(metadata i32 %8, metadata !15695, metadata !DIExpression()), !dbg !15696
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #27, !dbg !15703
  call void @llvm.dbg.value(metadata i8* %9, metadata !15693, metadata !DIExpression()), !dbg !15696
  %10 = icmp eq i8* %9, null, !dbg !15704
  br i1 %10, label %13, label %11, !dbg !15706

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #27, !dbg !15707
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15709
  store i8 1, i8* %12, align 4, !dbg !15710
  call void @llvm.dbg.value(metadata i32 0, metadata !15694, metadata !DIExpression()), !dbg !15696
  br label %13, !dbg !15711

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !15712
  call void @llvm.dbg.value(metadata i32 %14, metadata !15694, metadata !DIExpression()), !dbg !15696
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !15713
  ret i32 %14, !dbg !15714
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !15715 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15720, metadata !DIExpression()), !dbg !15723
  call void @llvm.dbg.value(metadata i32 %1, metadata !15721, metadata !DIExpression()), !dbg !15723
  call void @llvm.dbg.value(metadata i32* %2, metadata !15722, metadata !DIExpression()), !dbg !15723
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !15724
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !15724
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !15724
  store i32 %6, i32* %2, align 4, !dbg !15724
  ret i1 %5, !dbg !15725
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !15726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15730, metadata !DIExpression()), !dbg !15731
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #26, !dbg !15732
  ret i8* %2, !dbg !15733
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !15734 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15738, metadata !DIExpression()), !dbg !15739
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15740
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #27, !dbg !15740
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !15740
  br i1 %4, label %5, label %15, !dbg !15742

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !15743
  %7 = load i8, i8* %6, align 4, !dbg !15743
  %8 = and i8 %7, 1, !dbg !15745
  %9 = icmp eq i8 %8, 0, !dbg !15746
  br i1 %9, label %15, label %10, !dbg !15747

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15748
  %12 = load i8*, i8** %11, align 4, !dbg !15748
  tail call void @k_free(i8* noundef %12) #26, !dbg !15750
  %13 = load i8, i8* %6, align 4, !dbg !15751
  %14 = and i8 %13, -2, !dbg !15751
  store i8 %14, i8* %6, align 4, !dbg !15751
  br label %15, !dbg !15752

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !15739
  ret i32 %16, !dbg !15753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15754 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15758, metadata !DIExpression()), !dbg !15759
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15760
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #27, !dbg !15761
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15762
  ret %struct.k_thread* %4, !dbg !15763
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15764 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15768, metadata !DIExpression()), !dbg !15769
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #27, !dbg !15770
  br i1 %2, label %6, label %3, !dbg !15770

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15771
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15771
  br label %6, !dbg !15770

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15770
  ret %struct._dnode* %7, !dbg !15772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15773 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15777, metadata !DIExpression()), !dbg !15778
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15779
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15779
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15780
  ret i1 %4, !dbg !15781
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15782 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15792, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15790, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.value(metadata i8* %1, metadata !15791, metadata !DIExpression()), !dbg !15800
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15801, !srcloc !15810
  call void @llvm.dbg.value(metadata i32 %5, metadata !15804, metadata !DIExpression()) #25, !dbg !15811
  %6 = icmp eq i32 %5, 0, !dbg !15812
  %7 = icmp eq i64 %4, 0, !dbg !15813
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15813
  br i1 %8, label %10, label %9, !dbg !15813

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 118) #26, !dbg !15814
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.334, i32 0, i32 0)) #26, !dbg !15814
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 118) #26, !dbg !15814
  unreachable, !dbg !15814

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15817, metadata !DIExpression()) #25, !dbg !15824
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15826, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #25, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #25, !dbg !15833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #25, !dbg !15824
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15834
  br i1 %13, label %15, label %14, !dbg !15837

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 148) #26, !dbg !15838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.337, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !15838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 148) #26, !dbg !15838
  unreachable, !dbg !15838

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15826
  call void @llvm.dbg.value(metadata i32 %16, metadata !15829, metadata !DIExpression()) #25, !dbg !15833
  call void @llvm.dbg.value(metadata i32 %16, metadata !15823, metadata !DIExpression()) #25, !dbg !15824
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15840
  call void @llvm.dbg.value(metadata i32 %16, metadata !15794, metadata !DIExpression()), !dbg !15800
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15841
  %18 = load i32, i32* %17, align 4, !dbg !15841
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15843
  %20 = load i32, i32* %19, align 4, !dbg !15843
  %21 = icmp ult i32 %18, %20, !dbg !15844
  br i1 %21, label %22, label %52, !dbg !15845

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15846
  %24 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %23) #26, !dbg !15848
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15793, metadata !DIExpression()), !dbg !15800
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !15849
  br i1 %25, label %34, label %26, !dbg !15851

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 0, i32 6, !dbg !15852
  %28 = load i8*, i8** %27, align 4, !dbg !15852
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15854
  %30 = load i32, i32* %29, align 4, !dbg !15854
  %31 = tail call i8* @memcpy(i8* noundef %28, i8* noundef %1, i32 noundef %30) #26, !dbg !15855
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !15856, metadata !DIExpression()), !dbg !15862
  call void @llvm.dbg.value(metadata i32 0, metadata !15861, metadata !DIExpression()), !dbg !15862
  %32 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %24, i32 0, i32 7, i32 1, !dbg !15864
  store i32 0, i32* %32, align 4, !dbg !15865
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %24) #26, !dbg !15866
  %33 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15867
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %33) #26, !dbg !15867
  br label %64, !dbg !15868

34:                                               ; preds = %22
  %35 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15869
  %36 = load i8*, i8** %35, align 4, !dbg !15869
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15871
  %38 = load i32, i32* %37, align 4, !dbg !15871
  %39 = tail call i8* @memcpy(i8* noundef %36, i8* noundef %1, i32 noundef %38) #26, !dbg !15872
  %40 = load i32, i32* %37, align 4, !dbg !15873
  %41 = load i8*, i8** %35, align 4, !dbg !15874
  %42 = getelementptr inbounds i8, i8* %41, i32 %40, !dbg !15874
  store i8* %42, i8** %35, align 4, !dbg !15874
  %43 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15875
  %44 = load i8*, i8** %43, align 4, !dbg !15875
  %45 = icmp eq i8* %42, %44, !dbg !15877
  br i1 %45, label %46, label %49, !dbg !15878

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15879
  %48 = load i8*, i8** %47, align 4, !dbg !15879
  store i8* %48, i8** %35, align 4, !dbg !15881
  br label %49, !dbg !15882

49:                                               ; preds = %46, %34
  %50 = load i32, i32* %17, align 4, !dbg !15883
  %51 = add i32 %50, 1, !dbg !15883
  store i32 %51, i32* %17, align 4, !dbg !15883
  call void @llvm.dbg.value(metadata i32 0, metadata !15799, metadata !DIExpression()), !dbg !15800
  br label %59, !dbg !15884

52:                                               ; preds = %15
  br i1 %7, label %59, label %53, !dbg !15885

53:                                               ; preds = %52
  %54 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15886
  %55 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %54, i32 0, i32 0, i32 6, !dbg !15889
  store i8* %1, i8** %55, align 4, !dbg !15890
  %56 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15891
  %57 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !15892
  %58 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %57, %struct._wait_q_t* noundef %56, [1 x i64] %2) #26, !dbg !15892
  call void @llvm.dbg.value(metadata i32 %58, metadata !15799, metadata !DIExpression()), !dbg !15800
  br label %64, !dbg !15893

59:                                               ; preds = %52, %49
  %60 = phi i32 [ 0, %49 ], [ -35, %52 ], !dbg !15894
  call void @llvm.dbg.value(metadata i32 %60, metadata !15799, metadata !DIExpression()), !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !15901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15900, metadata !DIExpression()) #25, !dbg !15901
  %61 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15903
  br i1 %61, label %63, label %62, !dbg !15906

62:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 194) #26, !dbg !15907
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.339, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !15907
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 194) #26, !dbg !15907
  unreachable, !dbg !15907

63:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !15895, metadata !DIExpression()) #25, !dbg !15901
  call void @llvm.dbg.value(metadata i32 %16, metadata !15909, metadata !DIExpression()) #25, !dbg !15912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !15914, !srcloc !15915
  br label %64, !dbg !15916

64:                                               ; preds = %63, %53, %26
  %65 = phi i32 [ 0, %26 ], [ %60, %63 ], [ %58, %53 ], !dbg !15800
  ret i32 %65, !dbg !15917
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !15918 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15928, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !15929, metadata !DIExpression()), !dbg !15930
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15931
  %4 = load i32, i32* %3, align 4, !dbg !15931
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !15932
  store i32 %4, i32* %5, align 4, !dbg !15933
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !15934
  %7 = load i32, i32* %6, align 4, !dbg !15934
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !15935
  store i32 %7, i32* %8, align 4, !dbg !15936
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15937
  %10 = load i32, i32* %9, align 4, !dbg !15937
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !15938
  store i32 %10, i32* %11, align 4, !dbg !15939
  ret void, !dbg !15940
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15941 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15947, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !15945, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i8* %1, metadata !15946, metadata !DIExpression()), !dbg !15951
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15952, !srcloc !15810
  call void @llvm.dbg.value(metadata i32 %5, metadata !15804, metadata !DIExpression()) #25, !dbg !15957
  %6 = icmp eq i32 %5, 0, !dbg !15958
  %7 = icmp eq i64 %4, 0, !dbg !15959
  %8 = select i1 %6, i1 true, i1 %7, !dbg !15959
  br i1 %8, label %10, label %9, !dbg !15959

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 208) #26, !dbg !15960
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.334, i32 0, i32 0)) #26, !dbg !15960
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.333, i32 0, i32 0), i32 noundef 208) #26, !dbg !15960
  unreachable, !dbg !15960

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !15962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15817, metadata !DIExpression()) #25, !dbg !15963
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15965, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #25, !dbg !15967
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #25, !dbg !15967
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #25, !dbg !15963
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15968
  br i1 %13, label %15, label %14, !dbg !15969

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 148) #26, !dbg !15970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.337, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !15970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 148) #26, !dbg !15970
  unreachable, !dbg !15970

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %16, metadata !15829, metadata !DIExpression()) #25, !dbg !15967
  call void @llvm.dbg.value(metadata i32 %16, metadata !15823, metadata !DIExpression()) #25, !dbg !15963
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !15971
  call void @llvm.dbg.value(metadata i32 %16, metadata !15948, metadata !DIExpression()), !dbg !15951
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !15972
  %18 = load i32, i32* %17, align 4, !dbg !15972
  %19 = icmp eq i32 %18, 0, !dbg !15974
  br i1 %19, label %61, label %20, !dbg !15975

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !15976
  %22 = load i8*, i8** %21, align 4, !dbg !15976
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !15978
  %24 = load i32, i32* %23, align 4, !dbg !15978
  %25 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %22, i32 noundef %24) #26, !dbg !15979
  %26 = load i32, i32* %23, align 4, !dbg !15980
  %27 = load i8*, i8** %21, align 4, !dbg !15981
  %28 = getelementptr inbounds i8, i8* %27, i32 %26, !dbg !15981
  store i8* %28, i8** %21, align 4, !dbg !15981
  %29 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !15982
  %30 = load i8*, i8** %29, align 4, !dbg !15982
  %31 = icmp eq i8* %28, %30, !dbg !15984
  br i1 %31, label %32, label %35, !dbg !15985

32:                                               ; preds = %20
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !15986
  %34 = load i8*, i8** %33, align 4, !dbg !15986
  store i8* %34, i8** %21, align 4, !dbg !15988
  br label %35, !dbg !15989

35:                                               ; preds = %32, %20
  %36 = load i32, i32* %17, align 4, !dbg !15990
  %37 = add i32 %36, -1, !dbg !15990
  store i32 %37, i32* %17, align 4, !dbg !15990
  %38 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !15991
  %39 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %38) #26, !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15949, metadata !DIExpression()), !dbg !15951
  %40 = icmp eq %struct.k_thread* %39, null, !dbg !15993
  br i1 %40, label %68, label %41, !dbg !15995

41:                                               ; preds = %35
  %42 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !15996
  %43 = load i8*, i8** %42, align 4, !dbg !15996
  %44 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 0, i32 6, !dbg !15998
  %45 = load i8*, i8** %44, align 4, !dbg !15998
  %46 = load i32, i32* %23, align 4, !dbg !15999
  %47 = tail call i8* @memcpy(i8* noundef %43, i8* noundef %45, i32 noundef %46) #26, !dbg !16000
  %48 = load i32, i32* %23, align 4, !dbg !16001
  %49 = load i8*, i8** %42, align 4, !dbg !16002
  %50 = getelementptr inbounds i8, i8* %49, i32 %48, !dbg !16002
  store i8* %50, i8** %42, align 4, !dbg !16002
  %51 = load i8*, i8** %29, align 4, !dbg !16003
  %52 = icmp eq i8* %50, %51, !dbg !16005
  br i1 %52, label %53, label %56, !dbg !16006

53:                                               ; preds = %41
  %54 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !16007
  %55 = load i8*, i8** %54, align 4, !dbg !16007
  store i8* %55, i8** %42, align 4, !dbg !16009
  br label %56, !dbg !16010

56:                                               ; preds = %53, %41
  %57 = load i32, i32* %17, align 4, !dbg !16011
  %58 = add i32 %57, 1, !dbg !16011
  store i32 %58, i32* %17, align 4, !dbg !16011
  call void @llvm.dbg.value(metadata %struct.k_thread* %39, metadata !15856, metadata !DIExpression()), !dbg !16012
  call void @llvm.dbg.value(metadata i32 0, metadata !15861, metadata !DIExpression()), !dbg !16012
  %59 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %39, i32 0, i32 7, i32 1, !dbg !16014
  store i32 0, i32* %59, align 4, !dbg !16015
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %39) #26, !dbg !16016
  %60 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16017
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %60) #26, !dbg !16017
  br label %73, !dbg !16018

61:                                               ; preds = %15
  br i1 %7, label %68, label %62, !dbg !16019

62:                                               ; preds = %61
  %63 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16020
  %64 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %63, i32 0, i32 0, i32 6, !dbg !16023
  store i8* %1, i8** %64, align 4, !dbg !16024
  %65 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !16025
  %66 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16026
  %67 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %11, [1 x i32] %66, %struct._wait_q_t* noundef %65, [1 x i64] %2) #26, !dbg !16026
  call void @llvm.dbg.value(metadata i32 %67, metadata !15950, metadata !DIExpression()), !dbg !15951
  br label %73, !dbg !16027

68:                                               ; preds = %61, %35
  %69 = phi i32 [ 0, %35 ], [ -35, %61 ], !dbg !16028
  call void @llvm.dbg.value(metadata i32 %69, metadata !15950, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !16029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %11, metadata !15900, metadata !DIExpression()) #25, !dbg !16029
  %70 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %11) #26, !dbg !16031
  br i1 %70, label %72, label %71, !dbg !16032

71:                                               ; preds = %68
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 194) #26, !dbg !16033
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.339, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %11) #26, !dbg !16033
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 194) #26, !dbg !16033
  unreachable, !dbg !16033

72:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i32 %16, metadata !15895, metadata !DIExpression()) #25, !dbg !16029
  call void @llvm.dbg.value(metadata i32 %16, metadata !15909, metadata !DIExpression()) #25, !dbg !16034
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !16036, !srcloc !15915
  br label %73, !dbg !16037

73:                                               ; preds = %72, %62, %56
  %74 = phi i32 [ 0, %56 ], [ %69, %72 ], [ %67, %62 ], !dbg !15951
  ret i32 %74, !dbg !16038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16039 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16043, metadata !DIExpression()), !dbg !16047
  call void @llvm.dbg.value(metadata i8* %1, metadata !16044, metadata !DIExpression()), !dbg !16047
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15817, metadata !DIExpression()) #25, !dbg !16049
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16051, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #25, !dbg !16053
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #25, !dbg !16053
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #25, !dbg !16049
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !16054
  br i1 %5, label %7, label %6, !dbg !16055

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 148) #26, !dbg !16056
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.337, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !16056
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 148) #26, !dbg !16056
  unreachable, !dbg !16056

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #25, !dbg !16053
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #25, !dbg !16049
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !16057
  call void @llvm.dbg.value(metadata i32 undef, metadata !16045, metadata !DIExpression()), !dbg !16047
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16058
  %9 = load i32, i32* %8, align 4, !dbg !16058
  %10 = icmp eq i32 %9, 0, !dbg !16060
  br i1 %10, label %17, label %11, !dbg !16061

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !16062
  %13 = load i8*, i8** %12, align 4, !dbg !16062
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !16064
  %15 = load i32, i32* %14, align 4, !dbg !16064
  %16 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %13, i32 noundef %15) #26, !dbg !16065
  call void @llvm.dbg.value(metadata i32 0, metadata !16046, metadata !DIExpression()), !dbg !16047
  br label %17, !dbg !16066

17:                                               ; preds = %7, %11
  %18 = phi i32 [ 0, %11 ], [ -35, %7 ], !dbg !16067
  call void @llvm.dbg.value(metadata i32 %18, metadata !16046, metadata !DIExpression()), !dbg !16047
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !16068
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !15900, metadata !DIExpression()) #25, !dbg !16068
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !16070
  br i1 %19, label %21, label %20, !dbg !16071

20:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.338, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 194) #26, !dbg !16072
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.339, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !16072
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 194) #26, !dbg !16072
  unreachable, !dbg !16072

21:                                               ; preds = %17
  %22 = extractvalue { i32, i32 } %4, 0, !dbg !16051
  call void @llvm.dbg.value(metadata i32 %22, metadata !15829, metadata !DIExpression()) #25, !dbg !16053
  call void @llvm.dbg.value(metadata i32 %22, metadata !15823, metadata !DIExpression()) #25, !dbg !16049
  call void @llvm.dbg.value(metadata i32 %22, metadata !16045, metadata !DIExpression()), !dbg !16047
  call void @llvm.dbg.value(metadata i32 undef, metadata !15895, metadata !DIExpression()) #25, !dbg !16068
  call void @llvm.dbg.value(metadata i32 undef, metadata !15909, metadata !DIExpression()) #25, !dbg !16073
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #25, !dbg !16075, !srcloc !15915
  ret i32 %18, !dbg !16076
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !16077 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !16081, metadata !DIExpression()), !dbg !16084
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !16085
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %2, metadata !15817, metadata !DIExpression()) #25, !dbg !16086
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16088, !srcloc !15832
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #25, !dbg !16090
  call void @llvm.dbg.value(metadata i32 undef, metadata !15830, metadata !DIExpression()) #25, !dbg !16090
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #25, !dbg !16086
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !16091
  br i1 %4, label %6, label %5, !dbg !16092

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.331, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.335, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 148) #26, !dbg !16093
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.337, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %2) #26, !dbg !16093
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.336, i32 0, i32 0), i32 noundef 148) #26, !dbg !16093
  unreachable, !dbg !16093

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !15829, metadata !DIExpression()) #25, !dbg !16090
  call void @llvm.dbg.value(metadata i32 undef, metadata !15823, metadata !DIExpression()) #25, !dbg !16086
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %2) #26, !dbg !16094
  call void @llvm.dbg.value(metadata i32 undef, metadata !16082, metadata !DIExpression()), !dbg !16084
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !16095
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16083, metadata !DIExpression()), !dbg !16084
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16096
  br i1 %9, label %15, label %10, !dbg !16097

10:                                               ; preds = %6, %10
  %11 = phi %struct.k_thread* [ %13, %10 ], [ %8, %6 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15856, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata i32 -35, metadata !15861, metadata !DIExpression()), !dbg !16098
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %11, i32 0, i32 7, i32 1, !dbg !16101
  store i32 -35, i32* %12, align 4, !dbg !16102
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %11) #26, !dbg !16103
  %13 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #26, !dbg !16095
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16083, metadata !DIExpression()), !dbg !16084
  %14 = icmp eq %struct.k_thread* %13, null, !dbg !16096
  br i1 %14, label %15, label %10, !dbg !16097, !llvm.loop !16104

15:                                               ; preds = %10, %6
  %16 = extractvalue { i32, i32 } %3, 0, !dbg !16088
  call void @llvm.dbg.value(metadata i32 %16, metadata !15829, metadata !DIExpression()) #25, !dbg !16090
  call void @llvm.dbg.value(metadata i32 %16, metadata !15823, metadata !DIExpression()) #25, !dbg !16086
  call void @llvm.dbg.value(metadata i32 %16, metadata !16082, metadata !DIExpression()), !dbg !16084
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !16106
  store i32 0, i32* %17, align 4, !dbg !16107
  %18 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !16108
  %19 = load i8*, i8** %18, align 4, !dbg !16108
  %20 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !16109
  store i8* %19, i8** %20, align 4, !dbg !16110
  %21 = insertvalue [1 x i32] poison, i32 %16, 0, !dbg !16111
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %2, [1 x i32] %21) #26, !dbg !16111
  ret void, !dbg !16112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !16113 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16124, metadata !DIExpression()), !dbg !16125
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16126
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !16127
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16128
  store i32 0, i32* %3, align 4, !dbg !16129
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16130
  tail call fastcc void @z_waitq_init.342(%struct._wait_q_t* noundef %4) #27, !dbg !16131
  ret i32 0, !dbg !16132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.342(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16133 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16137, metadata !DIExpression()), !dbg !16138
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16139
  tail call fastcc void @sys_dlist_init.343(%struct._dnode* noundef %2) #27, !dbg !16140
  ret void, !dbg !16141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.343(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16142 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16147, metadata !DIExpression()), !dbg !16148
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16149
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16150
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16151
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16152
  ret void, !dbg !16153
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16154 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16163, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16162, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.value(metadata i8 0, metadata !16170, metadata !DIExpression()), !dbg !16175
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16176, !srcloc !16185
  call void @llvm.dbg.value(metadata i32 %4, metadata !16179, metadata !DIExpression()) #25, !dbg !16186
  %5 = icmp eq i32 %4, 0, !dbg !16187
  br i1 %5, label %7, label %6, !dbg !16188

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.348, i32 0, i32 0), i32 noundef 101) #26, !dbg !16189
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.349, i32 0, i32 0)) #26, !dbg !16189
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.348, i32 0, i32 0), i32 noundef 101) #26, !dbg !16189
  unreachable, !dbg !16189

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.350, metadata !16191, metadata !DIExpression()) #25, !dbg !16198
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16200, !srcloc !16206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16203, metadata !DIExpression()) #25, !dbg !16207
  call void @llvm.dbg.value(metadata i32 undef, metadata !16204, metadata !DIExpression()) #25, !dbg !16207
  call void @llvm.dbg.value(metadata i32 undef, metadata !16197, metadata !DIExpression()) #25, !dbg !16198
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16208
  br i1 %9, label %11, label %10, !dbg !16211

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !16212
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16212
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !16212
  unreachable, !dbg !16212

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !16200
  call void @llvm.dbg.value(metadata i32 %12, metadata !16203, metadata !DIExpression()) #25, !dbg !16207
  call void @llvm.dbg.value(metadata i32 %12, metadata !16197, metadata !DIExpression()) #25, !dbg !16198
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16214
  call void @llvm.dbg.value(metadata i32 %12, metadata !16165, metadata !DIExpression()), !dbg !16175
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16215
  %14 = load i32, i32* %13, align 4, !dbg !16215
  %15 = icmp eq i32 %14, 0, !dbg !16215
  br i1 %15, label %21, label %16, !dbg !16215

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16215
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !16215
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16215
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !16215
  br i1 %20, label %27, label %39, !dbg !16217, !prof !16218

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16219
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !16221
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !16221
  %25 = load i8, i8* %24, align 2, !dbg !16221
  %26 = sext i8 %25 to i32, !dbg !16219
  br label %30, !dbg !16222

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16223
  %29 = load i32, i32* %28, align 4, !dbg !16223
  br label %30, !dbg !16222

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !16224
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !16222
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16225
  store i32 %32, i32* %33, align 4, !dbg !16226
  %34 = add i32 %14, 1, !dbg !16227
  store i32 %34, i32* %13, align 4, !dbg !16227
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16228
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !16229
  call void @llvm.dbg.value(metadata i32 undef, metadata !16230, metadata !DIExpression()) #25, !dbg !16236
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.350, metadata !16235, metadata !DIExpression()) #25, !dbg !16236
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16238
  br i1 %36, label %38, label %37, !dbg !16241

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !16242
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16242
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !16242
  unreachable, !dbg !16242

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !16230, metadata !DIExpression()) #25, !dbg !16236
  call void @llvm.dbg.value(metadata i32 %12, metadata !16244, metadata !DIExpression()) #25, !dbg !16247
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16249, !srcloc !16250
  br label %97, !dbg !16251

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !16252
  br i1 %40, label %41, label %45, !dbg !16254, !prof !16255

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !16230, metadata !DIExpression()) #25, !dbg !16256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.350, metadata !16235, metadata !DIExpression()) #25, !dbg !16256
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16259
  br i1 %42, label %44, label %43, !dbg !16260

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !16261
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16261
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !16261
  unreachable, !dbg !16261

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !16230, metadata !DIExpression()) #25, !dbg !16256
  call void @llvm.dbg.value(metadata i32 %12, metadata !16244, metadata !DIExpression()) #25, !dbg !16262
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16264, !srcloc !16250
  br label %97, !dbg !16265

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !16266
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !16266
  %48 = load i8, i8* %47, align 2, !dbg !16266
  %49 = sext i8 %48 to i32, !dbg !16267
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !16268
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !16268
  %52 = load i8, i8* %51, align 2, !dbg !16268
  %53 = sext i8 %52 to i32, !dbg !16269
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #27, !dbg !16270
  call void @llvm.dbg.value(metadata i32 %54, metadata !16164, metadata !DIExpression()), !dbg !16175
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #27, !dbg !16271
  br i1 %55, label %56, label %58, !dbg !16273

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #27, !dbg !16274
  call void @llvm.dbg.value(metadata i1 %57, metadata !16170, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16175
  br label %58, !dbg !16276

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !16170, metadata !DIExpression()), !dbg !16175
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16277
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !16278
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.350, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #26, !dbg !16278
  call void @llvm.dbg.value(metadata i32 %62, metadata !16171, metadata !DIExpression()), !dbg !16175
  %63 = icmp eq i32 %62, 0, !dbg !16279
  br i1 %63, label %97, label %64, !dbg !16281

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.350, metadata !16191, metadata !DIExpression()) #25, !dbg !16282
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16284, !srcloc !16206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16203, metadata !DIExpression()) #25, !dbg !16286
  call void @llvm.dbg.value(metadata i32 undef, metadata !16204, metadata !DIExpression()) #25, !dbg !16286
  call void @llvm.dbg.value(metadata i32 undef, metadata !16197, metadata !DIExpression()) #25, !dbg !16282
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16287
  br i1 %66, label %68, label %67, !dbg !16288

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !16289
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16289
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !16289
  unreachable, !dbg !16289

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !16284
  call void @llvm.dbg.value(metadata i32 %69, metadata !16203, metadata !DIExpression()) #25, !dbg !16286
  call void @llvm.dbg.value(metadata i32 %69, metadata !16197, metadata !DIExpression()) #25, !dbg !16282
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16290
  call void @llvm.dbg.value(metadata i32 %69, metadata !16165, metadata !DIExpression()), !dbg !16175
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !16291
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !16291
  br i1 %71, label %90, label %72, !dbg !16292, !prof !16255

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head.356(%struct._wait_q_t* noundef nonnull %60) #27, !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !16172, metadata !DIExpression()), !dbg !16294
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !16295
  br i1 %74, label %83, label %75, !dbg !16296

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !16297
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !16297
  %78 = load i8, i8* %77, align 2, !dbg !16297
  %79 = sext i8 %78 to i32, !dbg !16298
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16299
  %81 = load i32, i32* %80, align 4, !dbg !16299
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #27, !dbg !16300
  br label %86, !dbg !16296

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16301
  %85 = load i32, i32* %84, align 4, !dbg !16301
  br label %86, !dbg !16296

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !16296
  call void @llvm.dbg.value(metadata i32 %87, metadata !16164, metadata !DIExpression()), !dbg !16175
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #27, !dbg !16302
  %89 = select i1 %88, i1 true, i1 %59, !dbg !16303
  call void @llvm.dbg.value(metadata i1 %89, metadata !16170, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16175
  call void @llvm.dbg.value(metadata i8 poison, metadata !16170, metadata !DIExpression()), !dbg !16175
  br i1 %89, label %91, label %93, !dbg !16304

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !16170, metadata !DIExpression()), !dbg !16175
  br i1 %59, label %91, label %93, !dbg !16304

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !16305
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.350, [1 x i32] %92) #26, !dbg !16305
  br label %97, !dbg !16308

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !16230, metadata !DIExpression()) #25, !dbg !16309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.350, metadata !16235, metadata !DIExpression()) #25, !dbg !16309
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16312
  br i1 %94, label %96, label %95, !dbg !16313

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !16314
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16314
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !16314
  unreachable, !dbg !16314

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !16230, metadata !DIExpression()) #25, !dbg !16309
  call void @llvm.dbg.value(metadata i32 %69, metadata !16244, metadata !DIExpression()) #25, !dbg !16315
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #25, !dbg !16317, !srcloc !16250
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !16175
  ret i32 %98, !dbg !16318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16323, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.value(metadata i32 %1, metadata !16324, metadata !DIExpression()), !dbg !16326
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #27, !dbg !16327
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !16327
  call void @llvm.dbg.value(metadata i32 %4, metadata !16325, metadata !DIExpression()), !dbg !16326
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #27, !dbg !16328
  call void @llvm.dbg.value(metadata i32 %5, metadata !16325, metadata !DIExpression()), !dbg !16326
  ret i32 %5, !dbg !16329
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16334, metadata !DIExpression()), !dbg !16336
  call void @llvm.dbg.value(metadata i32 %1, metadata !16335, metadata !DIExpression()), !dbg !16336
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #27, !dbg !16337
  ret i1 %3, !dbg !16338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !16339 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16343, metadata !DIExpression()), !dbg !16345
  call void @llvm.dbg.value(metadata i32 %1, metadata !16344, metadata !DIExpression()), !dbg !16345
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16346
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !16346
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !16348
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !16348
  %7 = load i8, i8* %6, align 2, !dbg !16348
  %8 = sext i8 %7 to i32, !dbg !16349
  %9 = icmp eq i32 %8, %1, !dbg !16350
  br i1 %9, label %12, label %10, !dbg !16351

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #26, !dbg !16352
  br label %12, !dbg !16354

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !16345
  ret i1 %13, !dbg !16355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.356(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !16356 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16360, metadata !DIExpression()), !dbg !16361
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16362
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.357(%struct._dnode* noundef %2) #27, !dbg !16363
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16364
  ret %struct.k_thread* %4, !dbg !16365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.357(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16366 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16370, metadata !DIExpression()), !dbg !16371
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.358(%struct._dnode* noundef %0) #27, !dbg !16372
  br i1 %2, label %6, label %3, !dbg !16372

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16373
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16373
  br label %6, !dbg !16372

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16372
  ret %struct._dnode* %7, !dbg !16374
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.358(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16375 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16379, metadata !DIExpression()), !dbg !16380
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16381
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16381
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16382
  ret i1 %4, !dbg !16383
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !16384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16386, metadata !DIExpression()), !dbg !16388
  call void @llvm.dbg.value(metadata i32 %1, metadata !16387, metadata !DIExpression()), !dbg !16388
  %3 = icmp slt i32 %0, %1, !dbg !16389
  ret i1 %3, !dbg !16390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !16391 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16393, metadata !DIExpression()), !dbg !16394
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #27, !dbg !16395
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !16395
  ret i32 %3, !dbg !16396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !16397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16401, metadata !DIExpression()), !dbg !16402
  %2 = icmp sgt i32 %0, -128, !dbg !16403
  ret i1 %2, !dbg !16404
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !16405 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16407, metadata !DIExpression()), !dbg !16411
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16412, !srcloc !16185
  call void @llvm.dbg.value(metadata i32 %2, metadata !16179, metadata !DIExpression()) #25, !dbg !16417
  %3 = icmp eq i32 %2, 0, !dbg !16418
  br i1 %3, label %5, label %4, !dbg !16419

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.347, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.348, i32 0, i32 0), i32 noundef 205) #26, !dbg !16420
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.349, i32 0, i32 0)) #26, !dbg !16420
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.348, i32 0, i32 0), i32 noundef 205) #26, !dbg !16420
  unreachable, !dbg !16420

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !16422
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !16422
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16422
  br i1 %8, label %41, label %9, !dbg !16424

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16425
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !16425
  br i1 %11, label %12, label %41, !dbg !16427

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !16428
  %14 = load i32, i32* %13, align 4, !dbg !16428
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !16431

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.361, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.348, i32 0, i32 0), i32 noundef 229) #26, !dbg !16432
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.348, i32 0, i32 0), i32 noundef 229) #26, !dbg !16432
  unreachable, !dbg !16432

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !16434
  store i32 %17, i32* %13, align 4, !dbg !16434
  br label %41, !dbg !16437

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.350, metadata !16191, metadata !DIExpression()) #25, !dbg !16438
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16440, !srcloc !16206
  call void @llvm.dbg.value(metadata i32 undef, metadata !16203, metadata !DIExpression()) #25, !dbg !16442
  call void @llvm.dbg.value(metadata i32 undef, metadata !16204, metadata !DIExpression()) #25, !dbg !16442
  call void @llvm.dbg.value(metadata i32 undef, metadata !16197, metadata !DIExpression()) #25, !dbg !16438
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16443
  br i1 %20, label %22, label %21, !dbg !16444

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !16445
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.353, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16445
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 148) #26, !dbg !16445
  unreachable, !dbg !16445

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16440
  call void @llvm.dbg.value(metadata i32 %23, metadata !16203, metadata !DIExpression()) #25, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %23, metadata !16197, metadata !DIExpression()) #25, !dbg !16438
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16446
  call void @llvm.dbg.value(metadata i32 %23, metadata !16409, metadata !DIExpression()), !dbg !16411
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !16447
  %25 = load i32, i32* %24, align 4, !dbg !16447
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #27, !dbg !16448
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !16449
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #26, !dbg !16450
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !16408, metadata !DIExpression()), !dbg !16411
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !16451
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !16452
  br i1 %29, label %37, label %30, !dbg !16454

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !16455
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !16455
  %33 = load i8, i8* %32, align 2, !dbg !16455
  %34 = sext i8 %33 to i32, !dbg !16457
  store i32 %34, i32* %24, align 4, !dbg !16458
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !16459, metadata !DIExpression()), !dbg !16465
  call void @llvm.dbg.value(metadata i32 0, metadata !16464, metadata !DIExpression()), !dbg !16465
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 7, i32 1, !dbg !16467
  store i32 0, i32* %35, align 4, !dbg !16468
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #26, !dbg !16469
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16470
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.350, [1 x i32] %36) #26, !dbg !16470
  br label %41, !dbg !16471

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !16472
  call void @llvm.dbg.value(metadata i32 undef, metadata !16230, metadata !DIExpression()) #25, !dbg !16474
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.350, metadata !16235, metadata !DIExpression()) #25, !dbg !16474
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16476
  br i1 %38, label %40, label %39, !dbg !16477

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.346, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !16478
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.355, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.350) #26, !dbg !16478
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.352, i32 0, i32 0), i32 noundef 194) #26, !dbg !16478
  unreachable, !dbg !16478

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !16230, metadata !DIExpression()) #25, !dbg !16474
  call void @llvm.dbg.value(metadata i32 %23, metadata !16244, metadata !DIExpression()) #25, !dbg !16479
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !16481, !srcloc !16250
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !16411
  ret i32 %42, !dbg !16482
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !16483 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16487, metadata !DIExpression()), !dbg !16491
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16488, metadata !DIExpression()), !dbg !16491
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16492
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !16492
  %5 = load i8, i8* %4, align 2, !dbg !16492
  call void @llvm.dbg.value(metadata i8 %5, metadata !16489, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16491
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16493
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !16493
  %8 = load i8, i8* %7, align 2, !dbg !16493
  call void @llvm.dbg.value(metadata i8 %8, metadata !16490, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !16491
  %9 = icmp eq i8 %8, %5, !dbg !16494
  %10 = sext i8 %5 to i32, !dbg !16496
  %11 = sext i8 %8 to i32, !dbg !16496
  %12 = sub nsw i32 %11, %10, !dbg !16496
  %13 = select i1 %9, i32 0, i32 %12, !dbg !16496
  ret i32 %13, !dbg !16497
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !16498 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16502, metadata !DIExpression()), !dbg !16503
  %2 = tail call fastcc i32 @slice_time() #27, !dbg !16504
  %3 = icmp eq i32 %2, 0, !dbg !16506
  br i1 %3, label %8, label %4, !dbg !16507

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !16508
  %6 = add i32 %5, %2, !dbg !16510
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16511
  %7 = tail call fastcc i32 @slice_time() #27, !dbg !16512
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !16513
  br label %8, !dbg !16514

8:                                                ; preds = %4, %1
  ret void, !dbg !16515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !16516 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !16520, metadata !DIExpression()), !dbg !16522
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !16523
  call void @llvm.dbg.value(metadata i32 %1, metadata !16521, metadata !DIExpression()), !dbg !16522
  ret i32 %1, !dbg !16524
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16529, metadata !DIExpression()), !dbg !16538
  call void @llvm.dbg.value(metadata i32 %1, metadata !16530, metadata !DIExpression()), !dbg !16538
  call void @llvm.dbg.value(metadata i32 0, metadata !16531, metadata !DIExpression()), !dbg !16539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !16547
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16549, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !16556
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !16556
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !16547
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16557
  br i1 %4, label %6, label %5, !dbg !16560

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !16561
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16561
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !16561
  unreachable, !dbg !16561

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !16556
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !16547
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16563
  call void @llvm.dbg.value(metadata i32 undef, metadata !16537, metadata !DIExpression()), !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16531, metadata !DIExpression()), !dbg !16539
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16564
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #27, !dbg !16567
  %8 = icmp sgt i32 %0, 0, !dbg !16568
  %9 = icmp sgt i32 %7, 2, !dbg !16570
  %10 = select i1 %9, i32 %7, i32 2, !dbg !16570
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !16570
  store i32 %11, i32* @slice_ticks, align 4, !dbg !16571
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !16572
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16573
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !16580
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !16580
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16582
  br i1 %12, label %14, label %13, !dbg !16585

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !16586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !16586
  unreachable, !dbg !16586

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !16549
  call void @llvm.dbg.value(metadata i32 %15, metadata !16552, metadata !DIExpression()) #25, !dbg !16556
  call void @llvm.dbg.value(metadata i32 %15, metadata !16546, metadata !DIExpression()) #25, !dbg !16547
  call void @llvm.dbg.value(metadata i32 %15, metadata !16537, metadata !DIExpression()), !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !16580
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !16591
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !16593, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !16531, metadata !DIExpression()), !dbg !16539
  call void @llvm.dbg.value(metadata i32 undef, metadata !16531, metadata !DIExpression()), !dbg !16539
  ret void, !dbg !16595
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !16596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16598, metadata !DIExpression()), !dbg !16599
  call void @llvm.dbg.value(metadata i32 %0, metadata !16600, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16615
  call void @llvm.dbg.value(metadata i32 1000, metadata !16603, metadata !DIExpression()), !dbg !16615
  call void @llvm.dbg.value(metadata i32 10000, metadata !16604, metadata !DIExpression()), !dbg !16615
  call void @llvm.dbg.value(metadata i8 1, metadata !16605, metadata !DIExpression()), !dbg !16615
  call void @llvm.dbg.value(metadata i1 true, metadata !16606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16615
  call void @llvm.dbg.value(metadata i1 true, metadata !16607, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16615
  call void @llvm.dbg.value(metadata i8 0, metadata !16608, metadata !DIExpression()), !dbg !16615
  call void @llvm.dbg.value(metadata i1 true, metadata !16609, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16615
  call void @llvm.dbg.value(metadata i1 false, metadata !16610, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16615
  call void @llvm.dbg.value(metadata i64 0, metadata !16611, metadata !DIExpression()), !dbg !16615
  call void @llvm.dbg.value(metadata i64 0, metadata !16611, metadata !DIExpression()), !dbg !16615
  %2 = mul i32 %0, 10, !dbg !16617
  ret i32 %2, !dbg !16623
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !16624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16626, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !16629
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16631, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !16633
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !16629
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16634
  br i1 %3, label %5, label %4, !dbg !16635

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !16636
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !16636
  unreachable, !dbg !16636

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16631
  call void @llvm.dbg.value(metadata i32 %6, metadata !16552, metadata !DIExpression()) #25, !dbg !16633
  call void @llvm.dbg.value(metadata i32 %6, metadata !16546, metadata !DIExpression()) #25, !dbg !16629
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16637
  call void @llvm.dbg.value(metadata i32 %6, metadata !16627, metadata !DIExpression()), !dbg !16628
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16638
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16640
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !16641
  br i1 %9, label %10, label %14, !dbg !16642

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16643
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !16645
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !16645
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16647
  br i1 %11, label %13, label %12, !dbg !16648

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !16649
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16649
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !16649
  unreachable, !dbg !16649

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !16574, metadata !DIExpression()) #25, !dbg !16645
  call void @llvm.dbg.value(metadata i32 %6, metadata !16588, metadata !DIExpression()) #25, !dbg !16650
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !16652, !srcloc !16594
  br label %33, !dbg !16653

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16654
  %15 = tail call fastcc i32 @slice_time() #27, !dbg !16655
  %16 = icmp eq i32 %15, 0, !dbg !16655
  br i1 %16, label %27, label %17, !dbg !16657

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #27, !dbg !16658
  br i1 %18, label %19, label %27, !dbg !16659

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16660
  %21 = icmp sgt i32 %20, %0, !dbg !16663
  br i1 %21, label %25, label %22, !dbg !16664

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16665
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #27, !dbg !16665
  call void @llvm.dbg.value(metadata i32 %24, metadata !16627, metadata !DIExpression()), !dbg !16628
  br label %28, !dbg !16667

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !16668
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16668
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16670
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !16628
  call void @llvm.dbg.value(metadata i32 %29, metadata !16627, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !16672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !16672
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16674
  br i1 %30, label %32, label %31, !dbg !16675

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !16676
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16676
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !16676
  unreachable, !dbg !16676

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !16574, metadata !DIExpression()) #25, !dbg !16672
  call void @llvm.dbg.value(metadata i32 %29, metadata !16588, metadata !DIExpression()) #25, !dbg !16677
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #25, !dbg !16679, !srcloc !16594
  br label %33, !dbg !16680

33:                                               ; preds = %32, %13
  ret void, !dbg !16680
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !16681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16685, metadata !DIExpression()), !dbg !16687
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #27, !dbg !16688
  %3 = icmp eq i32 %2, 0, !dbg !16688
  br i1 %3, label %16, label %4, !dbg !16689

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !16690
  br i1 %5, label %16, label %6, !dbg !16691

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16692
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !16692
  %9 = load i8, i8* %8, align 2, !dbg !16692
  %10 = sext i8 %9 to i32, !dbg !16693
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !16694
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.375(i32 noundef %10, i32 noundef %11) #27, !dbg !16695
  br i1 %12, label %16, label %13, !dbg !16696

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #27, !dbg !16697
  %15 = xor i1 %14, true, !dbg !16698
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !16687
  call void @llvm.dbg.value(metadata i1 %17, metadata !16686, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16687
  ret i1 %17, !dbg !16699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !16700 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16704, metadata !DIExpression()), !dbg !16706
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16707
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16705, metadata !DIExpression()), !dbg !16706
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #27, !dbg !16708
  br i1 %3, label %5, label %4, !dbg !16710

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #27, !dbg !16711
  br label %5, !dbg !16713

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !16704, metadata !DIExpression()), !dbg !16706
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16714
  ret i32 %6, !dbg !16715
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16716 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16718, metadata !DIExpression()), !dbg !16720
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16721
  %3 = load i8, i8* %2, align 1, !dbg !16721
  call void @llvm.dbg.value(metadata i8 %3, metadata !16719, metadata !DIExpression()), !dbg !16720
  %4 = and i8 %3, 31, !dbg !16722
  %5 = icmp ne i8 %4, 0, !dbg !16723
  ret i1 %5, !dbg !16724
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16725 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16727, metadata !DIExpression()), !dbg !16728
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !16729
  br i1 %2, label %3, label %7, !dbg !16731

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16732, metadata !DIExpression()) #25, !dbg !16735
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16738
  %5 = load i8, i8* %4, align 1, !dbg !16739
  %6 = and i8 %5, 127, !dbg !16739
  store i8 %6, i8* %4, align 1, !dbg !16739
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16740, metadata !DIExpression()) #25, !dbg !16743
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16747
  br label %7, !dbg !16748

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16749, metadata !DIExpression()) #25, !dbg !16752
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16754
  %9 = load i8, i8* %8, align 1, !dbg !16755
  %10 = or i8 %9, -128, !dbg !16755
  store i8 %10, i8* %8, align 1, !dbg !16755
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16756, metadata !DIExpression()) #25, !dbg !16759
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16763, metadata !DIExpression()) #25, !dbg !16771
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16769, metadata !DIExpression()) #25, !dbg !16771
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !16773
  br i1 %11, label %12, label %13, !dbg !16776

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !16777
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !16777
  unreachable, !dbg !16777

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.370(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !16779
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !16770, metadata !DIExpression()) #25, !dbg !16771
  %15 = icmp eq %struct._dnode* %14, null, !dbg !16781
  br i1 %15, label %26, label %16, !dbg !16779

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !16770, metadata !DIExpression()) #25, !dbg !16771
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !16783
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !16770, metadata !DIExpression()) #25, !dbg !16771
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #26, !dbg !16784
  %20 = icmp sgt i32 %19, 0, !dbg !16787
  br i1 %20, label %21, label %23, !dbg !16788

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16789
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #26, !dbg !16791
  br label %28, !dbg !16792

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #26, !dbg !16781
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16770, metadata !DIExpression()) #25, !dbg !16771
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16781
  br i1 %25, label %26, label %16, !dbg !16779, !llvm.loop !16793

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16795
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #26, !dbg !16796
  br label %28, !dbg !16797

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16798
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !16799
  %31 = zext i1 %30 to i32, !dbg !16799
  tail call fastcc void @update_cache(i32 noundef %31) #27, !dbg !16800
  ret void, !dbg !16801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16802 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16804, metadata !DIExpression()), !dbg !16805
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #27, !dbg !16806
  ret i1 %2, !dbg !16807
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16808 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !16810, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16811, metadata !DIExpression()), !dbg !16812
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !16813
  br i1 %3, label %4, label %5, !dbg !16816

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1139) #26, !dbg !16817
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1139) #26, !dbg !16817
  unreachable, !dbg !16817

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !16819
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #27, !dbg !16820
  ret void, !dbg !16821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !16822 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16824, metadata !DIExpression()), !dbg !16825
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16826
  ret i1 %2, !dbg !16827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.370(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !16828 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16832, metadata !DIExpression()), !dbg !16833
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.373(%struct._dnode* noundef %0) #27, !dbg !16834
  br i1 %2, label %6, label %3, !dbg !16834

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16835
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16835
  br label %6, !dbg !16834

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !16834
  ret %struct._dnode* %7, !dbg !16836
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16837 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16841, metadata !DIExpression()), !dbg !16845
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16842, metadata !DIExpression()), !dbg !16845
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16846
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16846
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16843, metadata !DIExpression()), !dbg !16845
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16847
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16848
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16849
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16850
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16851
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16852
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16853
  ret void, !dbg !16854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !16855 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16859, metadata !DIExpression()), !dbg !16861
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16860, metadata !DIExpression()), !dbg !16861
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16862
  br i1 %3, label %6, label %4, !dbg !16863

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #27, !dbg !16864
  br label %6, !dbg !16863

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16863
  ret %struct._dnode* %7, !dbg !16865
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16866 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16870, metadata !DIExpression()), !dbg !16873
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16871, metadata !DIExpression()), !dbg !16873
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16874
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16874
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16872, metadata !DIExpression()), !dbg !16873
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16875
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16876
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16877
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16878
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16879
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16880
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16881
  ret void, !dbg !16882
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16883 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16885, metadata !DIExpression()), !dbg !16887
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !16888
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16895, metadata !DIExpression()) #25, !dbg !16897
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16898
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16899
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16899
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16886, metadata !DIExpression()), !dbg !16887
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16900, metadata !DIExpression()) #25, !dbg !16906
  call void @llvm.dbg.value(metadata i32 %0, metadata !16905, metadata !DIExpression()) #25, !dbg !16906
  %6 = icmp eq i32 %0, 0, !dbg !16909
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16911
  br i1 %6, label %8, label %18, !dbg !16912

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !16913
  br i1 %9, label %10, label %11, !dbg !16916

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.371, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 137) #26, !dbg !16917
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !16917
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 137) #26, !dbg !16917
  unreachable, !dbg !16917

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #26, !dbg !16919
  br i1 %12, label %18, label %13, !dbg !16921

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !16922
  br i1 %14, label %18, label %15, !dbg !16924

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #26, !dbg !16925
  %17 = icmp eq i32 %16, 0, !dbg !16925
  br i1 %17, label %21, label %18, !dbg !16927

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !16928
  br i1 %19, label %21, label %20, !dbg !16931

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #27, !dbg !16932
  br label %21, !dbg !16934

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !16911
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16911
  ret void, !dbg !16935
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !16936 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16940, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16941, metadata !DIExpression()), !dbg !16943
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.370(%struct._dnode* noundef %0) #27, !dbg !16944
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16942, metadata !DIExpression()), !dbg !16943
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16941, metadata !DIExpression()), !dbg !16943
  ret %struct.k_thread* %3, !dbg !16945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16946 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16948, metadata !DIExpression()), !dbg !16949
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16950
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16951
  %4 = xor i1 %3, true, !dbg !16952
  ret i1 %4, !dbg !16953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16954 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16956, metadata !DIExpression()), !dbg !16957
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16958
  %3 = load i16, i16* %2, align 2, !dbg !16958
  %4 = icmp ult i16 %3, 128, !dbg !16959
  %5 = zext i1 %4 to i32, !dbg !16959
  ret i32 %5, !dbg !16960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16961 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16967, metadata !DIExpression()), !dbg !16968
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16969
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #27, !dbg !16970
  %4 = xor i1 %3, true, !dbg !16971
  ret i1 %4, !dbg !16972
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16973 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16979, metadata !DIExpression()), !dbg !16980
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16981
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16981
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16982
  ret i1 %4, !dbg !16983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !16984 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16986, metadata !DIExpression()), !dbg !16988
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16987, metadata !DIExpression()), !dbg !16988
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16989
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16989
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16990
  br i1 %5, label %9, label %6, !dbg !16991

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16992
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16992
  br label %9, !dbg !16991

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16991
  ret %struct._dnode* %10, !dbg !16993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.373(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16994 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16998, metadata !DIExpression()), !dbg !16999
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17000
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17000
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !17001
  ret i1 %4, !dbg !17002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17003 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17007, metadata !DIExpression()), !dbg !17010
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17011
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17011
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17008, metadata !DIExpression()), !dbg !17010
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17012
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17012
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17009, metadata !DIExpression()), !dbg !17010
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17013
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17014
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17015
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17016
  tail call fastcc void @sys_dnode_init.374(%struct._dnode* noundef %0) #27, !dbg !17017
  ret void, !dbg !17018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.374(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17019 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17021, metadata !DIExpression()), !dbg !17022
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17023
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17024
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17025
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17026
  ret void, !dbg !17027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !17028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17032, metadata !DIExpression()), !dbg !17034
  call void @llvm.dbg.value(metadata i32 %1, metadata !17033, metadata !DIExpression()), !dbg !17034
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17035
  %4 = load i8, i8* %3, align 1, !dbg !17035
  %5 = zext i8 %4 to i32, !dbg !17036
  %6 = and i32 %5, %1, !dbg !17037
  %7 = icmp ne i32 %6, 0, !dbg !17038
  ret i1 %7, !dbg !17039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.375(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !17040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17042, metadata !DIExpression()), !dbg !17044
  call void @llvm.dbg.value(metadata i32 %1, metadata !17043, metadata !DIExpression()), !dbg !17044
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.376(i32 noundef %0, i32 noundef %1) #27, !dbg !17045
  ret i1 %3, !dbg !17046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.376(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !17047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17049, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata i32 %1, metadata !17050, metadata !DIExpression()), !dbg !17051
  %3 = icmp slt i32 %0, %1, !dbg !17052
  ret i1 %3, !dbg !17053
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17054 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17056, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i32 0, metadata !17057, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17062
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17064, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17066
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17066
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17062
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17067
  br i1 %3, label %5, label %4, !dbg !17068

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17069
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17069
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17069
  unreachable, !dbg !17069

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17066
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17062
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17070
  call void @llvm.dbg.value(metadata i32 undef, metadata !17059, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.value(metadata i32 undef, metadata !17057, metadata !DIExpression()), !dbg !17061
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17071
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17076
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17076
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17078
  br i1 %6, label %8, label %7, !dbg !17079

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17080
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17080
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17080
  unreachable, !dbg !17080

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17064
  call void @llvm.dbg.value(metadata i32 %9, metadata !16552, metadata !DIExpression()) #25, !dbg !17066
  call void @llvm.dbg.value(metadata i32 %9, metadata !16546, metadata !DIExpression()) #25, !dbg !17062
  call void @llvm.dbg.value(metadata i32 %9, metadata !17059, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17076
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17081
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17083, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !17057, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.value(metadata i32 undef, metadata !17057, metadata !DIExpression()), !dbg !17061
  ret void, !dbg !17084
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17085 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17087, metadata !DIExpression()), !dbg !17088
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17089
  br i1 %2, label %27, label %3, !dbg !17091

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !17092
  br i1 %4, label %5, label %27, !dbg !17093

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16749, metadata !DIExpression()) #25, !dbg !17094
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17097
  %7 = load i8, i8* %6, align 1, !dbg !17098
  %8 = or i8 %7, -128, !dbg !17098
  store i8 %8, i8* %6, align 1, !dbg !17098
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16756, metadata !DIExpression()) #25, !dbg !17099
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16763, metadata !DIExpression()) #25, !dbg !17101
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16769, metadata !DIExpression()) #25, !dbg !17101
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !17103
  br i1 %9, label %10, label %11, !dbg !17104

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !17105
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !17105
  unreachable, !dbg !17105

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.370(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !17106
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !16770, metadata !DIExpression()) #25, !dbg !17101
  %13 = icmp eq %struct._dnode* %12, null, !dbg !17107
  br i1 %13, label %24, label %14, !dbg !17106

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !16770, metadata !DIExpression()) #25, !dbg !17101
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !17108
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !16770, metadata !DIExpression()) #25, !dbg !17101
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #26, !dbg !17109
  %18 = icmp sgt i32 %17, 0, !dbg !17110
  br i1 %18, label %19, label %21, !dbg !17111

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17112
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #26, !dbg !17113
  br label %26, !dbg !17114

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #26, !dbg !17107
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !16770, metadata !DIExpression()) #25, !dbg !17101
  %23 = icmp eq %struct._dnode* %22, null, !dbg !17107
  br i1 %23, label %24, label %14, !dbg !17106, !llvm.loop !17115

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17117
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #26, !dbg !17118
  br label %26, !dbg !17119

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !17120
  br label %27, !dbg !17121

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !17122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17123 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17125, metadata !DIExpression()), !dbg !17126
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #27, !dbg !17127
  br i1 %2, label %6, label %3, !dbg !17128

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #27, !dbg !17129
  %5 = xor i1 %4, true, !dbg !17128
  br label %6, !dbg !17128

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !17130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17131 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17133, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.value(metadata i32 0, metadata !17134, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17139
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17141, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17139
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17144
  br i1 %3, label %5, label %4, !dbg !17145

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17146
  unreachable, !dbg !17146

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17143
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17139
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17147
  call void @llvm.dbg.value(metadata i32 undef, metadata !17136, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !17134, metadata !DIExpression()), !dbg !17138
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #27, !dbg !17148
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17151
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17151
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17153
  br i1 %6, label %8, label %7, !dbg !17154

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17155
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17155
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17155
  unreachable, !dbg !17155

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17141
  call void @llvm.dbg.value(metadata i32 %9, metadata !16552, metadata !DIExpression()) #25, !dbg !17143
  call void @llvm.dbg.value(metadata i32 %9, metadata !16546, metadata !DIExpression()) #25, !dbg !17139
  call void @llvm.dbg.value(metadata i32 %9, metadata !17136, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17151
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17156
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17158, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !17134, metadata !DIExpression()), !dbg !17138
  call void @llvm.dbg.value(metadata i32 undef, metadata !17134, metadata !DIExpression()), !dbg !17138
  ret void, !dbg !17159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17160 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17162, metadata !DIExpression()), !dbg !17164
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17165
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17167, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17169
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17165
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17170
  br i1 %3, label %5, label %4, !dbg !17171

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17172
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17172
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17172
  unreachable, !dbg !17172

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17167
  call void @llvm.dbg.value(metadata i32 %6, metadata !16552, metadata !DIExpression()) #25, !dbg !17169
  call void @llvm.dbg.value(metadata i32 %6, metadata !16546, metadata !DIExpression()) #25, !dbg !17165
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17173
  call void @llvm.dbg.value(metadata i32 %6, metadata !17163, metadata !DIExpression()), !dbg !17164
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #27, !dbg !17174
  br i1 %7, label %8, label %12, !dbg !17176

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17177
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17180
  br i1 %9, label %11, label %10, !dbg !17181

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17182
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17182
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17182
  unreachable, !dbg !17182

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !16574, metadata !DIExpression()) #25, !dbg !17177
  call void @llvm.dbg.value(metadata i32 %6, metadata !16588, metadata !DIExpression()) #25, !dbg !17183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !17185, !srcloc !16594
  br label %14, !dbg !17186

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.381(%struct.k_thread* noundef %0) #27, !dbg !17187
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17188
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17189
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !17189
  br label %14, !dbg !17190

14:                                               ; preds = %12, %11
  ret void, !dbg !17190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17191 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17193, metadata !DIExpression()), !dbg !17194
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17195
  %3 = load i8, i8* %2, align 1, !dbg !17195
  %4 = and i8 %3, 4, !dbg !17196
  %5 = icmp eq i8 %4, 0, !dbg !17197
  ret i1 %5, !dbg !17198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.381(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17199 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17201, metadata !DIExpression()), !dbg !17202
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17203
  %3 = load i8, i8* %2, align 1, !dbg !17204
  %4 = and i8 %3, -5, !dbg !17204
  store i8 %4, i8* %2, align 1, !dbg !17204
  ret void, !dbg !17205
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !17206 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !17209, metadata !DIExpression()), !dbg !17210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17208, metadata !DIExpression()), !dbg !17210
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #27, !dbg !17211
  br i1 %4, label %5, label %12, !dbg !17213

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #27, !dbg !17214
  br i1 %6, label %7, label %12, !dbg !17215

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !17216, metadata !DIExpression()) #25, !dbg !17222
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17221, metadata !DIExpression()) #25, !dbg !17222
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17225, metadata !DIExpression()) #25, !dbg !17230
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !17232
  br i1 %8, label %10, label %9, !dbg !17235

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !17236
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !17236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !17236
  unreachable, !dbg !17236

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !17216, metadata !DIExpression()) #25, !dbg !17222
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !17238
  br label %16, !dbg !17239

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16579, metadata !DIExpression()) #25, !dbg !17240
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !17243
  br i1 %13, label %15, label %14, !dbg !17244

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17245
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !17245
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17245
  unreachable, !dbg !17245

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !16574, metadata !DIExpression()) #25, !dbg !17240
  call void @llvm.dbg.value(metadata i32 %3, metadata !16588, metadata !DIExpression()) #25, !dbg !17246
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17248, !srcloc !16594
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !17249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !17250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17254, metadata !DIExpression()), !dbg !17255
  call void @llvm.dbg.value(metadata i32 %0, metadata !17256, metadata !DIExpression()), !dbg !17261
  %2 = icmp eq i32 %0, 0, !dbg !17263
  br i1 %2, label %3, label %6, !dbg !17264

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17265, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %4, metadata !17268, metadata !DIExpression()) #25, !dbg !17273
  %5 = icmp eq i32 %4, 0, !dbg !17274
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !17255
  ret i1 %7, !dbg !17275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !17276 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !17279
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17278, metadata !DIExpression()), !dbg !17280
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17281
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !17282
  ret i1 %3, !dbg !17283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !17284 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17286, metadata !DIExpression()), !dbg !17288
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !17289
  call void @llvm.dbg.value(metadata i32 %2, metadata !17287, metadata !DIExpression()), !dbg !17288
  ret i32 %2, !dbg !17290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17291 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17293, metadata !DIExpression()), !dbg !17297
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !17298
  call void @llvm.dbg.value(metadata i32 0, metadata !17294, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17300
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17302, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17304
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17304
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17300
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17305
  br i1 %4, label %6, label %5, !dbg !17306

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17307
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17307
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17307
  unreachable, !dbg !17307

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !17302
  call void @llvm.dbg.value(metadata i32 %7, metadata !16552, metadata !DIExpression()) #25, !dbg !17304
  call void @llvm.dbg.value(metadata i32 %7, metadata !16546, metadata !DIExpression()) #25, !dbg !17300
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17308
  call void @llvm.dbg.value(metadata i32 %7, metadata !17296, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata i32 undef, metadata !17294, metadata !DIExpression()), !dbg !17299
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17309
  br i1 %8, label %9, label %13, !dbg !17313

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16732, metadata !DIExpression()) #25, !dbg !17314
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17317
  %11 = load i8, i8* %10, align 1, !dbg !17318
  %12 = and i8 %11, 127, !dbg !17318
  store i8 %12, i8* %10, align 1, !dbg !17318
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16740, metadata !DIExpression()) #25, !dbg !17319
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17321
  br label %13, !dbg !17322

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #27, !dbg !17323
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17324
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !17325
  %16 = zext i1 %15 to i32, !dbg !17325
  tail call fastcc void @update_cache(i32 noundef %16) #27, !dbg !17326
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17327
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17327
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17329
  br i1 %17, label %19, label %18, !dbg !17330

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17331
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17331
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17331
  unreachable, !dbg !17331

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !16574, metadata !DIExpression()) #25, !dbg !17327
  call void @llvm.dbg.value(metadata i32 %7, metadata !16588, metadata !DIExpression()) #25, !dbg !17332
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !17334, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !17294, metadata !DIExpression()), !dbg !17299
  call void @llvm.dbg.value(metadata i32 undef, metadata !17294, metadata !DIExpression()), !dbg !17299
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17335
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !17337
  br i1 %21, label %22, label %23, !dbg !17338

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17339
  br label %23, !dbg !17341

23:                                               ; preds = %22, %19
  ret void, !dbg !17342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17343 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17345, metadata !DIExpression()), !dbg !17346
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17347
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !17348
  ret i32 %3, !dbg !17349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17350 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17352, metadata !DIExpression()), !dbg !17353
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17354
  %3 = load i8, i8* %2, align 1, !dbg !17355
  %4 = or i8 %3, 16, !dbg !17355
  store i8 %4, i8* %2, align 1, !dbg !17355
  ret void, !dbg !17356
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !17357 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17358, !srcloc !16555
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !17358
  call void @llvm.dbg.value(metadata i32 %2, metadata !16552, metadata !DIExpression()) #25, !dbg !17360
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17360
  tail call void @z_reschedule_irqlock(i32 noundef %2) #27, !dbg !17361
  ret void, !dbg !17362
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !17363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17365, metadata !DIExpression()), !dbg !17366
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #27, !dbg !17367
  br i1 %2, label %3, label %5, !dbg !17369

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !17370
  br label %6, !dbg !17372

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !16588, metadata !DIExpression()) #25, !dbg !17373
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !17376, !srcloc !16594
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !17377
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17378 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17380, metadata !DIExpression()), !dbg !17382
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17383
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17385, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17387
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17387
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17383
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17388
  br i1 %3, label %5, label %4, !dbg !17389

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17390
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17390
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17390
  unreachable, !dbg !17390

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !17385
  call void @llvm.dbg.value(metadata i32 %6, metadata !16552, metadata !DIExpression()) #25, !dbg !17387
  call void @llvm.dbg.value(metadata i32 %6, metadata !16546, metadata !DIExpression()) #25, !dbg !17383
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17391
  call void @llvm.dbg.value(metadata i32 %6, metadata !17381, metadata !DIExpression()), !dbg !17382
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #27, !dbg !17392
  br i1 %7, label %12, label %8, !dbg !17394

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17395
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17395
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17398
  br i1 %9, label %11, label %10, !dbg !17399

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17400
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17400
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17400
  unreachable, !dbg !17400

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !16574, metadata !DIExpression()) #25, !dbg !17395
  call void @llvm.dbg.value(metadata i32 %6, metadata !16588, metadata !DIExpression()) #25, !dbg !17401
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !17403, !srcloc !16594
  br label %14, !dbg !17404

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !17405
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #27, !dbg !17406
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !17407
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #27, !dbg !17407
  br label %14, !dbg !17408

14:                                               ; preds = %12, %11
  ret void, !dbg !17408
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17409 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17411, metadata !DIExpression()), !dbg !17412
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17413
  %3 = load i8, i8* %2, align 1, !dbg !17413
  %4 = and i8 %3, 16, !dbg !17414
  %5 = icmp ne i8 %4, 0, !dbg !17415
  ret i1 %5, !dbg !17416
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17417 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17419, metadata !DIExpression()), !dbg !17420
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17421
  %3 = load i8, i8* %2, align 1, !dbg !17422
  %4 = and i8 %3, -17, !dbg !17422
  store i8 %4, i8* %2, align 1, !dbg !17422
  ret void, !dbg !17423
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17424 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17434, metadata !DIExpression()), !dbg !17438
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17432, metadata !DIExpression()), !dbg !17438
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17433, metadata !DIExpression()), !dbg !17438
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17439
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !17439
  br i1 %5, label %9, label %6, !dbg !17439

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #27, !dbg !17439
  br i1 %7, label %9, label %8, !dbg !17442

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.384, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 773) #26, !dbg !17443
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 773) #26, !dbg !17443
  unreachable, !dbg !17443

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !17435, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17446
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17448, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17446
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17451
  br i1 %11, label %13, label %12, !dbg !17452

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17453
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17453
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17453
  unreachable, !dbg !17453

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17446
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17454
  call void @llvm.dbg.value(metadata i32 undef, metadata !17437, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()), !dbg !17445
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !17455
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17458
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17460
  br i1 %14, label %16, label %15, !dbg !17461

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17462
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17462
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17462
  unreachable, !dbg !17462

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !17448
  call void @llvm.dbg.value(metadata i32 %17, metadata !16552, metadata !DIExpression()) #25, !dbg !17450
  call void @llvm.dbg.value(metadata i32 %17, metadata !16546, metadata !DIExpression()) #25, !dbg !17446
  call void @llvm.dbg.value(metadata i32 %17, metadata !17437, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17458
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17463
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #25, !dbg !17465, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !17435, metadata !DIExpression()), !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !17435, metadata !DIExpression()), !dbg !17445
  ret void, !dbg !17466
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17469, metadata !DIExpression()), !dbg !17470
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17471
  %3 = load i8, i8* %2, align 1, !dbg !17471
  %4 = and i8 %3, 1, !dbg !17472
  %5 = icmp ne i8 %4, 0, !dbg !17473
  ret i1 %5, !dbg !17474
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !17475 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17479, metadata !DIExpression()), !dbg !17480
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17477, metadata !DIExpression()), !dbg !17480
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17478, metadata !DIExpression()), !dbg !17480
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #27, !dbg !17481
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #27, !dbg !17482
  ret void, !dbg !17483
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !17484 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17488, metadata !DIExpression()), !dbg !17490
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17489, metadata !DIExpression()), !dbg !17490
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #27, !dbg !17491
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #27, !dbg !17492
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !17493
  br i1 %3, label %24, label %4, !dbg !17495

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17496
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !17498
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !17499
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !16763, metadata !DIExpression()) #25, !dbg !17500
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16769, metadata !DIExpression()) #25, !dbg !17500
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !17502
  br i1 %7, label %8, label %9, !dbg !17503

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !17504
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !17504
  unreachable, !dbg !17504

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.370(%struct._dnode* noundef nonnull %6) #26, !dbg !17505
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !16770, metadata !DIExpression()) #25, !dbg !17500
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17506
  br i1 %11, label %22, label %12, !dbg !17505

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !16770, metadata !DIExpression()) #25, !dbg !17500
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17507
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16770, metadata !DIExpression()) #25, !dbg !17500
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #26, !dbg !17508
  %16 = icmp sgt i32 %15, 0, !dbg !17509
  br i1 %16, label %17, label %19, !dbg !17510

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17511
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !17512
  br label %24, !dbg !17513

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #26, !dbg !17506
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16770, metadata !DIExpression()) #25, !dbg !17500
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17506
  br i1 %21, label %22, label %12, !dbg !17505, !llvm.loop !17514

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !17516
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #26, !dbg !17517
  br label %24, !dbg !17518

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !17519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17520 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !17525, metadata !DIExpression()), !dbg !17526
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17524, metadata !DIExpression()), !dbg !17526
  %4 = icmp eq i64 %3, -1, !dbg !17527
  br i1 %4, label %6, label %5, !dbg !17529

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.385(%struct.k_thread* noundef %0, [1 x i64] %1) #27, !dbg !17530
  br label %6, !dbg !17532

6:                                                ; preds = %5, %2
  ret void, !dbg !17533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.385(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !17534 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17537, metadata !DIExpression()), !dbg !17538
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17536, metadata !DIExpression()), !dbg !17538
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !17539
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !17540
  ret void, !dbg !17541
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !17542 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17544, metadata !DIExpression()), !dbg !17552
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !17553
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !17553
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !17545, metadata !DIExpression()), !dbg !17552
  call void @llvm.dbg.value(metadata i32 0, metadata !17546, metadata !DIExpression()), !dbg !17554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17555
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17557, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17559
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17559
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17555
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17560
  br i1 %5, label %7, label %6, !dbg !17561

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17562
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17562
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17562
  unreachable, !dbg !17562

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17559
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17555
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17563
  call void @llvm.dbg.value(metadata i32 undef, metadata !17548, metadata !DIExpression()), !dbg !17554
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()), !dbg !17554
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !17564
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !17565
  %10 = load i8, i8* %9, align 1, !dbg !17565
  %11 = and i8 %10, 40, !dbg !17566
  %12 = icmp eq i8 %11, 0, !dbg !17566
  call void @llvm.dbg.value(metadata i1 %12, metadata !17549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17567
  br i1 %12, label %13, label %20, !dbg !17568

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !17569
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !17569
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !17569
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !17573
  br i1 %17, label %19, label %18, !dbg !17574

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #27, !dbg !17575
  br label %19, !dbg !17577

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.381(%struct.k_thread* noundef nonnull %3) #27, !dbg !17578
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #27, !dbg !17579
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #27, !dbg !17580
  br label %20, !dbg !17581

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17582
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17584
  br i1 %21, label %23, label %22, !dbg !17585

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17586
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17586
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17586
  unreachable, !dbg !17586

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !17557
  call void @llvm.dbg.value(metadata i32 %24, metadata !16552, metadata !DIExpression()) #25, !dbg !17559
  call void @llvm.dbg.value(metadata i32 %24, metadata !16546, metadata !DIExpression()) #25, !dbg !17555
  call void @llvm.dbg.value(metadata i32 %24, metadata !17548, metadata !DIExpression()), !dbg !17554
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17582
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17587
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #25, !dbg !17589, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !17546, metadata !DIExpression()), !dbg !17554
  call void @llvm.dbg.value(metadata i32 undef, metadata !17546, metadata !DIExpression()), !dbg !17554
  ret void, !dbg !17590
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17591 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17593, metadata !DIExpression()), !dbg !17594
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #27, !dbg !17595
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !17596
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #27, !dbg !17597
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17598
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !17599
  ret void, !dbg !17600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !17601 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17605, metadata !DIExpression()), !dbg !17606
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17607
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !17607
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !17607
  br i1 %4, label %5, label %6, !dbg !17610

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.388, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 726) #26, !dbg !17611
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 726) #26, !dbg !17611
  unreachable, !dbg !17611

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !17613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17614 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17616, metadata !DIExpression()), !dbg !17617
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17618
  %3 = load i8, i8* %2, align 1, !dbg !17619
  %4 = and i8 %3, -3, !dbg !17619
  store i8 %4, i8* %2, align 1, !dbg !17619
  ret void, !dbg !17620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17623, metadata !DIExpression()), !dbg !17624
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #27, !dbg !17625
  br i1 %2, label %3, label %7, !dbg !17627

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16732, metadata !DIExpression()) #25, !dbg !17628
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17631
  %5 = load i8, i8* %4, align 1, !dbg !17632
  %6 = and i8 %5, 127, !dbg !17632
  store i8 %6, i8* %4, align 1, !dbg !17632
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16740, metadata !DIExpression()) #25, !dbg !17633
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17635
  br label %7, !dbg !17636

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17637
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !17638
  %10 = zext i1 %9 to i32, !dbg !17638
  tail call fastcc void @update_cache(i32 noundef %10) #27, !dbg !17639
  ret void, !dbg !17640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !17641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17643, metadata !DIExpression()), !dbg !17644
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17645
  %3 = load i8, i8* %2, align 1, !dbg !17646
  %4 = or i8 %3, 2, !dbg !17646
  store i8 %4, i8* %2, align 1, !dbg !17646
  ret void, !dbg !17647
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #24 !dbg !17648 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17650, metadata !DIExpression()), !dbg !17654
  call void @llvm.dbg.value(metadata i32 0, metadata !17651, metadata !DIExpression()), !dbg !17655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17656
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17658, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17660
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17660
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17656
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17661
  br i1 %3, label %5, label %4, !dbg !17662

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17663
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17663
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17663
  unreachable, !dbg !17663

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17660
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17656
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17664
  call void @llvm.dbg.value(metadata i32 undef, metadata !17653, metadata !DIExpression()), !dbg !17655
  call void @llvm.dbg.value(metadata i32 undef, metadata !17651, metadata !DIExpression()), !dbg !17655
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !17665
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17668
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17668
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17670
  br i1 %6, label %8, label %7, !dbg !17671

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17672
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17672
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17672
  unreachable, !dbg !17672

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17658
  call void @llvm.dbg.value(metadata i32 %9, metadata !16552, metadata !DIExpression()) #25, !dbg !17660
  call void @llvm.dbg.value(metadata i32 %9, metadata !16546, metadata !DIExpression()) #25, !dbg !17656
  call void @llvm.dbg.value(metadata i32 %9, metadata !17653, metadata !DIExpression()), !dbg !17655
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17668
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17673
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17675, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !17651, metadata !DIExpression()), !dbg !17655
  call void @llvm.dbg.value(metadata i32 undef, metadata !17651, metadata !DIExpression()), !dbg !17655
  ret void, !dbg !17676
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17677 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17683, metadata !DIExpression()), !dbg !17688
  call void @llvm.dbg.value(metadata i32 %0, metadata !17681, metadata !DIExpression()), !dbg !17688
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !17682, metadata !DIExpression()), !dbg !17688
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17689
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #27, !dbg !17690
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17691
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17692
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #27, !dbg !17693
  call void @llvm.dbg.value(metadata i32 %6, metadata !17684, metadata !DIExpression()), !dbg !17688
  call void @llvm.dbg.value(metadata i32 0, metadata !17685, metadata !DIExpression()), !dbg !17694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17695
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17697, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17699
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17699
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17695
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17700
  br i1 %8, label %10, label %9, !dbg !17701

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17702
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17702
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17702
  unreachable, !dbg !17702

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17699
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17695
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17703
  call void @llvm.dbg.value(metadata i32 undef, metadata !17687, metadata !DIExpression()), !dbg !17694
  call void @llvm.dbg.value(metadata i32 undef, metadata !17685, metadata !DIExpression()), !dbg !17694
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !17704
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17708
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !17709
  br i1 %13, label %14, label %15, !dbg !17710

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !17711
  br label %15, !dbg !17713

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17714
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17716
  br i1 %16, label %18, label %17, !dbg !17717

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17718
  unreachable, !dbg !17718

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !17697
  call void @llvm.dbg.value(metadata i32 %19, metadata !16552, metadata !DIExpression()) #25, !dbg !17699
  call void @llvm.dbg.value(metadata i32 %19, metadata !16546, metadata !DIExpression()) #25, !dbg !17695
  call void @llvm.dbg.value(metadata i32 %19, metadata !17687, metadata !DIExpression()), !dbg !17694
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17714
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17719
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #25, !dbg !17721, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !17685, metadata !DIExpression()), !dbg !17694
  call void @llvm.dbg.value(metadata i32 undef, metadata !17685, metadata !DIExpression()), !dbg !17694
  ret i32 %6, !dbg !17722
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !17723 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17728, metadata !DIExpression()), !dbg !17731
  call void @llvm.dbg.value(metadata i64 undef, metadata !17730, metadata !DIExpression()), !dbg !17731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17727, metadata !DIExpression()), !dbg !17731
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !17729, metadata !DIExpression()), !dbg !17731
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17732
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !17733
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !17734
  br i1 %6, label %7, label %8, !dbg !17737

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.391, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 846) #26, !dbg !17738
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 846) #26, !dbg !17738
  unreachable, !dbg !17738

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17740
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17742, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17740
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17745
  br i1 %10, label %12, label %11, !dbg !17746

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17747
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17747
  unreachable, !dbg !17747

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17740
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17748
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17749
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !17750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17225, metadata !DIExpression()) #25, !dbg !17751
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !17753
  br i1 %14, label %16, label %15, !dbg !17754

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !17755
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !17755
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !17755
  unreachable, !dbg !17755

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !17216, metadata !DIExpression()) #25, !dbg !17756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17221, metadata !DIExpression()) #25, !dbg !17756
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17225, metadata !DIExpression()) #25, !dbg !17758
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17760
  br i1 %17, label %19, label %18, !dbg !17761

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !17762
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !17762
  unreachable, !dbg !17762

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !17216, metadata !DIExpression()) #25, !dbg !17756
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !17763
  ret i32 %21, !dbg !17764
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17765 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17769, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17770, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 0, metadata !17771, metadata !DIExpression()), !dbg !17775
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17776
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17778, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17776
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17781
  br i1 %3, label %5, label %4, !dbg !17782

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17783
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17783
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17783
  unreachable, !dbg !17783

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17780
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17776
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17784
  call void @llvm.dbg.value(metadata i32 undef, metadata !17773, metadata !DIExpression()), !dbg !17775
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17770, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()), !dbg !17775
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !17785
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17770, metadata !DIExpression()), !dbg !17774
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17788
  br i1 %8, label %10, label %9, !dbg !17790

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !17791
  br label %10, !dbg !17793

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17794
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17796
  br i1 %11, label %13, label %12, !dbg !17797

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17798
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17798
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17798
  unreachable, !dbg !17798

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17778
  call void @llvm.dbg.value(metadata i32 %14, metadata !16552, metadata !DIExpression()) #25, !dbg !17780
  call void @llvm.dbg.value(metadata i32 %14, metadata !16546, metadata !DIExpression()) #25, !dbg !17776
  call void @llvm.dbg.value(metadata i32 %14, metadata !17773, metadata !DIExpression()), !dbg !17775
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17794
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17799
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17801, !srcloc !16594
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17770, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.value(metadata i32 undef, metadata !17771, metadata !DIExpression()), !dbg !17775
  ret %struct.k_thread* %7, !dbg !17802
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !17803 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !17805, metadata !DIExpression()), !dbg !17810
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17806, metadata !DIExpression()), !dbg !17810
  call void @llvm.dbg.value(metadata i32 0, metadata !17807, metadata !DIExpression()), !dbg !17811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17812
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17814, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17812
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17817
  br i1 %3, label %5, label %4, !dbg !17818

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17819
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17819
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17819
  unreachable, !dbg !17819

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17812
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17820
  call void @llvm.dbg.value(metadata i32 undef, metadata !17809, metadata !DIExpression()), !dbg !17811
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17806, metadata !DIExpression()), !dbg !17810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17807, metadata !DIExpression()), !dbg !17811
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #27, !dbg !17821
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17806, metadata !DIExpression()), !dbg !17810
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !17824
  br i1 %8, label %11, label %9, !dbg !17826

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !17827
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #27, !dbg !17829
  br label %11, !dbg !17830

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17831
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17831
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17833
  br i1 %12, label %14, label %13, !dbg !17834

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17835
  unreachable, !dbg !17835

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !17814
  call void @llvm.dbg.value(metadata i32 %15, metadata !16552, metadata !DIExpression()) #25, !dbg !17816
  call void @llvm.dbg.value(metadata i32 %15, metadata !16546, metadata !DIExpression()) #25, !dbg !17812
  call void @llvm.dbg.value(metadata i32 %15, metadata !17809, metadata !DIExpression()), !dbg !17811
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17831
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17836
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !17838, !srcloc !16594
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !17806, metadata !DIExpression()), !dbg !17810
  call void @llvm.dbg.value(metadata i32 undef, metadata !17807, metadata !DIExpression()), !dbg !17811
  ret %struct.k_thread* %7, !dbg !17839
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17840 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17842, metadata !DIExpression()), !dbg !17843
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17650, metadata !DIExpression()) #25, !dbg !17844
  call void @llvm.dbg.value(metadata i32 0, metadata !17651, metadata !DIExpression()) #25, !dbg !17846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17847
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17849, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17851
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17851
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17847
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17852
  br i1 %3, label %5, label %4, !dbg !17853

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17854
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17854
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17854
  unreachable, !dbg !17854

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17851
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17847
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17855
  call void @llvm.dbg.value(metadata i32 undef, metadata !17653, metadata !DIExpression()) #25, !dbg !17846
  call void @llvm.dbg.value(metadata i32 undef, metadata !17651, metadata !DIExpression()) #25, !dbg !17846
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !17856
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17857
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17859
  br i1 %6, label %8, label %7, !dbg !17860

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17861
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17861
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17861
  unreachable, !dbg !17861

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !17849
  call void @llvm.dbg.value(metadata i32 %9, metadata !16552, metadata !DIExpression()) #25, !dbg !17851
  call void @llvm.dbg.value(metadata i32 %9, metadata !16546, metadata !DIExpression()) #25, !dbg !17847
  call void @llvm.dbg.value(metadata i32 %9, metadata !17653, metadata !DIExpression()) #25, !dbg !17846
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17857
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17862
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17864, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !17651, metadata !DIExpression()) #25, !dbg !17846
  call void @llvm.dbg.value(metadata i32 undef, metadata !17651, metadata !DIExpression()) #25, !dbg !17846
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !17865
  ret void, !dbg !17866
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17867 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17869, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.value(metadata i32 %1, metadata !17870, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.value(metadata i8 0, metadata !17871, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.value(metadata i32 0, metadata !17872, metadata !DIExpression()), !dbg !17876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17877
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17879, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17877
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17882
  br i1 %4, label %6, label %5, !dbg !17883

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17884
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17884
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17884
  unreachable, !dbg !17884

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17881
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17877
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17885
  call void @llvm.dbg.value(metadata i32 undef, metadata !17874, metadata !DIExpression()), !dbg !17876
  call void @llvm.dbg.value(metadata i8 poison, metadata !17871, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.value(metadata i32 undef, metadata !17872, metadata !DIExpression()), !dbg !17876
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #27, !dbg !17886
  call void @llvm.dbg.value(metadata i1 %9, metadata !17871, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17875
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !17889

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16732, metadata !DIExpression()) #25, !dbg !17890
  %14 = load i8, i8* %7, align 1, !dbg !17896
  %15 = and i8 %14, 127, !dbg !17896
  store i8 %15, i8* %7, align 1, !dbg !17896
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16740, metadata !DIExpression()) #25, !dbg !17897
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !17899
  store i8 %12, i8* %11, align 2, !dbg !17900
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16749, metadata !DIExpression()) #25, !dbg !17901
  %16 = load i8, i8* %7, align 1, !dbg !17903
  %17 = or i8 %16, -128, !dbg !17903
  store i8 %17, i8* %7, align 1, !dbg !17903
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16756, metadata !DIExpression()) #25, !dbg !17904
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16763, metadata !DIExpression()) #25, !dbg !17906
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16769, metadata !DIExpression()) #25, !dbg !17906
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !17908
  br i1 %18, label %19, label %20, !dbg !17909

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !17910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !17910
  unreachable, !dbg !17910

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.370(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !17911
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !16770, metadata !DIExpression()) #25, !dbg !17906
  %22 = icmp eq %struct._dnode* %21, null, !dbg !17912
  br i1 %22, label %32, label %23, !dbg !17911

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !16770, metadata !DIExpression()) #25, !dbg !17906
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !17913
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !16770, metadata !DIExpression()) #25, !dbg !17906
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #26, !dbg !17914
  %27 = icmp sgt i32 %26, 0, !dbg !17915
  br i1 %27, label %28, label %29, !dbg !17916

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #26, !dbg !17917
  br label %33, !dbg !17918

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #26, !dbg !17912
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16770, metadata !DIExpression()) #25, !dbg !17906
  %31 = icmp eq %struct._dnode* %30, null, !dbg !17912
  br i1 %31, label %32, label %23, !dbg !17911, !llvm.loop !17919

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #26, !dbg !17921
  br label %33, !dbg !17922

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !17923
  br label %35, !dbg !17924

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !17925
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17927
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17927
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17929
  br i1 %36, label %38, label %37, !dbg !17930

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17931
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17931
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17931
  unreachable, !dbg !17931

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !17879
  call void @llvm.dbg.value(metadata i32 %39, metadata !16552, metadata !DIExpression()) #25, !dbg !17881
  call void @llvm.dbg.value(metadata i32 %39, metadata !16546, metadata !DIExpression()) #25, !dbg !17877
  call void @llvm.dbg.value(metadata i32 %39, metadata !17874, metadata !DIExpression()), !dbg !17876
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17927
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17932
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #25, !dbg !17934, !srcloc !16594
  call void @llvm.dbg.value(metadata i8 poison, metadata !17871, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.value(metadata i32 undef, metadata !17872, metadata !DIExpression()), !dbg !17876
  ret i1 %9, !dbg !17935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17936 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17940, metadata !DIExpression()), !dbg !17943
  call void @llvm.dbg.value(metadata i32 %1, metadata !17941, metadata !DIExpression()), !dbg !17943
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !17944
  call void @llvm.dbg.value(metadata i1 %3, metadata !17942, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17943
  br i1 %3, label %4, label %12, !dbg !17945

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17947
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17948
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17948
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17948
  %9 = load i8, i8* %8, align 1, !dbg !17948
  %10 = icmp eq i8 %9, 0, !dbg !17949
  br i1 %10, label %11, label %12, !dbg !17950

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !17951
  br label %12, !dbg !17953

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !17954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !17955 {
  call void @llvm.dbg.value(metadata i32 0, metadata !17957, metadata !DIExpression()), !dbg !17960
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !17961
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17963, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17965
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !17965
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17961
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17966
  br i1 %2, label %4, label %3, !dbg !17967

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17968
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17968
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !17968
  unreachable, !dbg !17968

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !17965
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !17961
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17969
  call void @llvm.dbg.value(metadata i32 undef, metadata !17959, metadata !DIExpression()), !dbg !17960
  call void @llvm.dbg.value(metadata i32 undef, metadata !17957, metadata !DIExpression()), !dbg !17960
  tail call fastcc void @z_sched_lock() #27, !dbg !17970
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !17973
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17975
  br i1 %5, label %7, label %6, !dbg !17976

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17977
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !17977
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !17977
  unreachable, !dbg !17977

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !17963
  call void @llvm.dbg.value(metadata i32 %8, metadata !16552, metadata !DIExpression()) #25, !dbg !17965
  call void @llvm.dbg.value(metadata i32 %8, metadata !16546, metadata !DIExpression()) #25, !dbg !17961
  call void @llvm.dbg.value(metadata i32 %8, metadata !17959, metadata !DIExpression()), !dbg !17960
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !17973
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !17978
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17980, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !17957, metadata !DIExpression()), !dbg !17960
  call void @llvm.dbg.value(metadata i32 undef, metadata !17957, metadata !DIExpression()), !dbg !17960
  ret void, !dbg !17981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !17982 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17983, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %1, metadata !17268, metadata !DIExpression()) #25, !dbg !17988
  %2 = icmp eq i32 %1, 0, !dbg !17989
  br i1 %2, label %4, label %3, !dbg !17990

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.399, i32 0, i32 0), i32 noundef 253) #26, !dbg !17991
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !17991
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.399, i32 0, i32 0), i32 noundef 253) #26, !dbg !17991
  unreachable, !dbg !17991

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17993
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !17993
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !17993
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !17993
  %9 = load i8, i8* %8, align 1, !dbg !17993
  %10 = icmp eq i8 %9, 1, !dbg !17993
  br i1 %10, label %11, label %12, !dbg !17996

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.400, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.399, i32 0, i32 0), i32 noundef 254) #26, !dbg !17997
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !17997
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.399, i32 0, i32 0), i32 noundef 254) #26, !dbg !17997
  unreachable, !dbg !17997

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !17999
  store i8 %13, i8* %8, align 1, !dbg !17999
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !18000, !srcloc !18002
  ret void, !dbg !18003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !18004 {
  call void @llvm.dbg.value(metadata i32 0, metadata !18006, metadata !DIExpression()), !dbg !18009
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !18010
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18012, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18014
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !18014
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18010
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18015
  br i1 %2, label %4, label %3, !dbg !18016

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18017
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18017
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18017
  unreachable, !dbg !18017

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18014
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18010
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18018
  call void @llvm.dbg.value(metadata i32 undef, metadata !18008, metadata !DIExpression()), !dbg !18009
  call void @llvm.dbg.value(metadata i32 undef, metadata !18006, metadata !DIExpression()), !dbg !18009
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18019
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !18019
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !18019
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !18019
  %9 = load i8, i8* %8, align 1, !dbg !18019
  %10 = icmp eq i8 %9, 0, !dbg !18019
  br i1 %10, label %11, label %12, !dbg !18024

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.403, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 999) #26, !dbg !18025
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !18025
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 999) #26, !dbg !18025
  unreachable, !dbg !18025

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18027, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %13, metadata !17268, metadata !DIExpression()) #25, !dbg !18032
  %14 = icmp eq i32 %13, 0, !dbg !18033
  br i1 %14, label %16, label %15, !dbg !18034

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1000) #26, !dbg !18035
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !18035
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1000) #26, !dbg !18035
  unreachable, !dbg !18035

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18037
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !18038
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !18038
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !18038
  %21 = load i8, i8* %20, align 1, !dbg !18039
  %22 = add i8 %21, 1, !dbg !18039
  store i8 %22, i8* %20, align 1, !dbg !18039
  tail call fastcc void @update_cache(i32 noundef 0) #27, !dbg !18040
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !18041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !18041
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18043
  br i1 %23, label %25, label %24, !dbg !18044

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18045
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18045
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18045
  unreachable, !dbg !18045

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !18012
  call void @llvm.dbg.value(metadata i32 %26, metadata !16552, metadata !DIExpression()) #25, !dbg !18014
  call void @llvm.dbg.value(metadata i32 %26, metadata !16546, metadata !DIExpression()) #25, !dbg !18010
  call void @llvm.dbg.value(metadata i32 %26, metadata !18008, metadata !DIExpression()), !dbg !18009
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !18041
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !18046
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #25, !dbg !18048, !srcloc !16594
  call void @llvm.dbg.value(metadata i32 1, metadata !18006, metadata !DIExpression()), !dbg !18009
  call void @llvm.dbg.value(metadata i32 undef, metadata !18006, metadata !DIExpression()), !dbg !18009
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !18049
  ret void, !dbg !18050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !18051 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !18052
  ret %struct.k_thread* %1, !dbg !18053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !18054 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !18058, metadata !DIExpression()), !dbg !18063
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !18059, metadata !DIExpression()), !dbg !18063
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !18064
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !18060, metadata !DIExpression()), !dbg !18063
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !18065
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !18061, metadata !DIExpression()), !dbg !18063
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #27, !dbg !18066
  call void @llvm.dbg.value(metadata i32 %5, metadata !18062, metadata !DIExpression()), !dbg !18063
  %6 = icmp sgt i32 %5, 0, !dbg !18067
  br i1 %6, label %17, label %7, !dbg !18069

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !18070
  br i1 %8, label %17, label %9, !dbg !18072

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !18073
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !18073
  %12 = load i32, i32* %11, align 8, !dbg !18073
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !18075
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !18075
  %15 = load i32, i32* %14, align 8, !dbg !18075
  %16 = icmp ult i32 %12, %15, !dbg !18076
  br label %17, !dbg !18077

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !18078
  ret i1 %18, !dbg !18079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18080 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18097, metadata !DIExpression()), !dbg !18112
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18098, metadata !DIExpression()), !dbg !18112
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !18113
  br i1 %4, label %5, label %6, !dbg !18116

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1179) #26, !dbg !18117
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1179) #26, !dbg !18117
  unreachable, !dbg !18117

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !18119
  %8 = load i32, i32* %7, align 4, !dbg !18120
  %9 = add nsw i32 %8, 1, !dbg !18120
  store i32 %9, i32* %7, align 4, !dbg !18120
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !18121
  store i32 %8, i32* %10, align 8, !dbg !18122
  %11 = load i32, i32* %7, align 4, !dbg !18123
  %12 = icmp eq i32 %11, 0, !dbg !18124
  br i1 %12, label %13, label %35, !dbg !18125

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !18126
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #25, !dbg !18126
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !18100, metadata !DIExpression()), !dbg !18126
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18126
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !18126
  %17 = load i32, i32* %16, align 4, !dbg !18126
  %18 = shl i32 %17, 2, !dbg !18126
  %19 = alloca i8, i32 %18, align 8, !dbg !18126
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !18126
  store i8* %19, i8** %20, align 4, !dbg !18126
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !18126
  %22 = alloca i8, i32 %17, align 8, !dbg !18126
  store i8* %22, i8** %21, align 4, !dbg !18126
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !18126
  store i32 -1, i32* %23, align 4, !dbg !18126
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !18127
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !18109, metadata !DIExpression()), !dbg !18128
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !18099, metadata !DIExpression()), !dbg !18112
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !18129
  br i1 %25, label %26, label %27, !dbg !18126

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #25, !dbg !18129
  br label %35, !dbg !18130

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !18099, metadata !DIExpression()), !dbg !18112
  %29 = load i32, i32* %7, align 4, !dbg !18131
  %30 = add nsw i32 %29, 1, !dbg !18131
  store i32 %30, i32* %7, align 4, !dbg !18131
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !18133
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !18133
  store i32 %29, i32* %32, align 8, !dbg !18134
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !18127
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !18109, metadata !DIExpression()), !dbg !18128
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !18099, metadata !DIExpression()), !dbg !18112
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !18129
  br i1 %34, label %26, label %27, !dbg !18126, !llvm.loop !18135

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18137
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !18138
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #26, !dbg !18139
  ret void, !dbg !18140
}

; Function Attrs: optsize
declare !dbg !18141 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !18146 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !18149 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18151, metadata !DIExpression()), !dbg !18153
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18152, metadata !DIExpression()), !dbg !18153
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #27, !dbg !18154
  br i1 %3, label %4, label %5, !dbg !18157

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1200) #26, !dbg !18158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1200) #26, !dbg !18158
  unreachable, !dbg !18158

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18160
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !18161
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #26, !dbg !18162
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !18163
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !18163
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !18165
  br i1 %10, label %11, label %13, !dbg !18166

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !18167
  store i32 0, i32* %12, align 4, !dbg !18169
  br label %13, !dbg !18170

13:                                               ; preds = %11, %5
  ret void, !dbg !18171
}

; Function Attrs: optsize
declare !dbg !18172 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !18173 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !18177, metadata !DIExpression()), !dbg !18180
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18178, metadata !DIExpression()), !dbg !18180
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !18181
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #27, !dbg !18182
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !18179, metadata !DIExpression()), !dbg !18180
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !18178, metadata !DIExpression()), !dbg !18180
  ret %struct.k_thread* %4, !dbg !18183
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !18184 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !18188, metadata !DIExpression()), !dbg !18189
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !18190
  ret %struct.rbnode* %2, !dbg !18191
}

; Function Attrs: optsize
declare !dbg !18192 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #19 !dbg !18195 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !18205, metadata !DIExpression()), !dbg !18209
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !18210
  %3 = load i32, i32* %2, align 4, !dbg !18210
  %4 = icmp eq i32 %3, 0, !dbg !18212
  br i1 %4, label %10, label %5, !dbg !18213

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !18206, metadata !DIExpression()), !dbg !18209
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !18214, !range !5450
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !18215
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !18207, metadata !DIExpression()), !dbg !18209
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.370(%struct._dnode* noundef %7) #27, !dbg !18216
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !18208, metadata !DIExpression()), !dbg !18209
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18206, metadata !DIExpression()), !dbg !18209
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !18209
  ret %struct.k_thread* %11, !dbg !18217
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !18218 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18222, metadata !DIExpression()), !dbg !18225
  call void @llvm.dbg.value(metadata i32 0, metadata !18223, metadata !DIExpression()), !dbg !18225
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.404(%struct._wait_q_t* noundef %0) #27, !dbg !18226
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18224, metadata !DIExpression()), !dbg !18225
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18227
  br i1 %3, label %8, label %4, !dbg !18228

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !18229
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !18231
  call void @llvm.dbg.value(metadata i32 1, metadata !18223, metadata !DIExpression()), !dbg !18225
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.404(%struct._wait_q_t* noundef %0) #27, !dbg !18226
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !18224, metadata !DIExpression()), !dbg !18225
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !18227
  br i1 %7, label %8, label %4, !dbg !18228, !llvm.loop !18232

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !18225
  ret i32 %9, !dbg !18234
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.404(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !18235 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18237, metadata !DIExpression()), !dbg !18238
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !18239
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.370(%struct._dnode* noundef %2) #27, !dbg !18240
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !18241
  ret %struct.k_thread* %4, !dbg !18242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !18243 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !18252, metadata !DIExpression()), !dbg !18253
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !18254
  tail call fastcc void @sys_dlist_init.405(%struct._dnode* noundef nonnull %2) #27, !dbg !18255
  ret void, !dbg !18256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.405(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !18257 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18261, metadata !DIExpression()), !dbg !18262
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18263
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !18264
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18265
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !18266
  ret void, !dbg !18267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !18268 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #27, !dbg !18269
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #27, !dbg !18270
  ret void, !dbg !18271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !18272 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18277, metadata !DIExpression()), !dbg !18278
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !18279
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !18279
  %4 = load i8, i8* %3, align 2, !dbg !18279
  %5 = sext i8 %4 to i32, !dbg !18280
  ret i32 %5, !dbg !18281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !18282 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18286, metadata !DIExpression()), !dbg !18289
  call void @llvm.dbg.value(metadata i32 %1, metadata !18287, metadata !DIExpression()), !dbg !18289
  %3 = add i32 %1, 16, !dbg !18290
  %4 = icmp ult i32 %3, 31, !dbg !18290
  br i1 %4, label %6, label %5, !dbg !18290

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.408, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1331) #26, !dbg !18294
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.409, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #26, !dbg !18294
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1331) #26, !dbg !18294
  unreachable, !dbg !18294

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18296, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %7, metadata !17268, metadata !DIExpression()) #25, !dbg !18301
  %8 = icmp eq i32 %7, 0, !dbg !18302
  br i1 %8, label %10, label %9, !dbg !18303

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1332) #26, !dbg !18304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !18304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1332) #26, !dbg !18304
  unreachable, !dbg !18304

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18288, metadata !DIExpression()), !dbg !18289
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #27, !dbg !18306
  ret void, !dbg !18307
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !18308 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #27, !dbg !18309
  br i1 %1, label %8, label %2, !dbg !18310

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !18311
  br i1 %3, label %8, label %4, !dbg !18312

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18313
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #27, !dbg !18314
  %7 = xor i1 %6, true, !dbg !18312
  br label %8, !dbg !18312

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !18315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !18316 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !18317, !range !8168
  %2 = icmp eq i8 %1, 0, !dbg !18317
  ret i1 %2, !dbg !18318
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !18319 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18322, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %1, metadata !17268, metadata !DIExpression()) #25, !dbg !18327
  %2 = icmp eq i32 %1, 0, !dbg !18328
  br i1 %2, label %4, label %3, !dbg !18329

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1392) #26, !dbg !18330
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !18330
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1392) #26, !dbg !18330
  unreachable, !dbg !18330

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !18332
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18334, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !18336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18332
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18337
  br i1 %6, label %8, label %7, !dbg !18338

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18339
  unreachable, !dbg !18339

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18336
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18332
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18340
  call void @llvm.dbg.value(metadata i32 undef, metadata !18321, metadata !DIExpression()), !dbg !18341
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18342
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16732, metadata !DIExpression()) #25, !dbg !18345
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !18347
  %11 = load i8, i8* %10, align 1, !dbg !18348
  %12 = and i8 %11, 127, !dbg !18348
  store i8 %12, i8* %10, align 1, !dbg !18348
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16740, metadata !DIExpression()) #25, !dbg !18349
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #26, !dbg !18351
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18352
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16749, metadata !DIExpression()) #25, !dbg !18353
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !18355
  %15 = load i8, i8* %14, align 1, !dbg !18356
  %16 = or i8 %15, -128, !dbg !18356
  store i8 %16, i8* %14, align 1, !dbg !18356
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16756, metadata !DIExpression()) #25, !dbg !18357
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !16763, metadata !DIExpression()) #25, !dbg !18359
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !16769, metadata !DIExpression()) #25, !dbg !18359
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #26, !dbg !18361
  br i1 %17, label %18, label %19, !dbg !18362

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.368, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !18363
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 186) #26, !dbg !18363
  unreachable, !dbg !18363

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.370(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !18364
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !16770, metadata !DIExpression()) #25, !dbg !18359
  %21 = icmp eq %struct._dnode* %20, null, !dbg !18365
  br i1 %21, label %32, label %22, !dbg !18364

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !16770, metadata !DIExpression()) #25, !dbg !18359
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !18366
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !16770, metadata !DIExpression()) #25, !dbg !18359
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #26, !dbg !18367
  %26 = icmp sgt i32 %25, 0, !dbg !18368
  br i1 %26, label %27, label %29, !dbg !18369

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18370
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #26, !dbg !18371
  br label %34, !dbg !18372

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #26, !dbg !18365
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !16770, metadata !DIExpression()) #25, !dbg !18359
  %31 = icmp eq %struct._dnode* %30, null, !dbg !18365
  br i1 %31, label %32, label %22, !dbg !18364, !llvm.loop !18373

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !18375
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #26, !dbg !18376
  br label %34, !dbg !18377

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !18378
  call void @llvm.dbg.value(metadata i32 undef, metadata !17216, metadata !DIExpression()) #25, !dbg !18379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17221, metadata !DIExpression()) #25, !dbg !18379
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17225, metadata !DIExpression()) #25, !dbg !18381
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18383
  br i1 %35, label %37, label %36, !dbg !18384

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !18385
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18385
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !18385
  unreachable, !dbg !18385

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !18334
  call void @llvm.dbg.value(metadata i32 %38, metadata !16552, metadata !DIExpression()) #25, !dbg !18336
  call void @llvm.dbg.value(metadata i32 %38, metadata !16546, metadata !DIExpression()) #25, !dbg !18332
  call void @llvm.dbg.value(metadata i32 %38, metadata !18321, metadata !DIExpression()), !dbg !18341
  call void @llvm.dbg.value(metadata i32 undef, metadata !17216, metadata !DIExpression()) #25, !dbg !18379
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #26, !dbg !18386
  ret void, !dbg !18387
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !18388 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18392, metadata !DIExpression()), !dbg !18395
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18396, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %3, metadata !17268, metadata !DIExpression()) #25, !dbg !18401
  %4 = icmp eq i32 %3, 0, !dbg !18402
  br i1 %4, label %6, label %5, !dbg !18403

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1463) #26, !dbg !18404
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !18404
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1463) #26, !dbg !18404
  unreachable, !dbg !18404

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !18406
  br i1 %7, label %8, label %10, !dbg !18408

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18409
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #27, !dbg !18411
  br label %15, !dbg !18412

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !18393, metadata !DIExpression()), !dbg !18395
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #27, !dbg !18413
  %12 = sext i32 %11 to i64, !dbg !18413
  call void @llvm.dbg.value(metadata i64 %12, metadata !18393, metadata !DIExpression()), !dbg !18395
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #27, !dbg !18414
  %14 = trunc i64 %13 to i32, !dbg !18414
  call void @llvm.dbg.value(metadata i32 %14, metadata !18394, metadata !DIExpression()), !dbg !18395
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !18395
  ret i32 %16, !dbg !18415
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18416 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18420, metadata !DIExpression()), !dbg !18421
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !18422, !srcloc !18424
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #27, !dbg !18425
  ret void, !dbg !18426
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !18427 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18431, metadata !DIExpression()), !dbg !18435
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18436, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %2, metadata !17268, metadata !DIExpression()) #25, !dbg !18441
  %3 = icmp eq i32 %2, 0, !dbg !18442
  br i1 %3, label %5, label %4, !dbg !18443

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1420) #26, !dbg !18444
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !18444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1420) #26, !dbg !18444
  unreachable, !dbg !18444

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !18446
  br i1 %6, label %7, label %8, !dbg !18448

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #27, !dbg !18449
  br label %43, !dbg !18451

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !18433, metadata !DIExpression()), !dbg !18435
  %9 = icmp sgt i64 %0, -3, !dbg !18452
  br i1 %9, label %10, label %14, !dbg !18454

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !18455
  %12 = trunc i64 %0 to i32, !dbg !18457
  %13 = add i32 %11, %12, !dbg !18457
  call void @llvm.dbg.value(metadata i32 %13, metadata !18432, metadata !DIExpression()), !dbg !18435
  br label %17, !dbg !18458

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !18459
  %16 = sub i32 -2, %15, !dbg !18459
  call void @llvm.dbg.value(metadata i32 %16, metadata !18432, metadata !DIExpression()), !dbg !18435
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !18461
  call void @llvm.dbg.value(metadata i32 %18, metadata !18432, metadata !DIExpression()), !dbg !18435
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !18462
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18464, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18466
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !18466
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18462
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18467
  br i1 %20, label %22, label %21, !dbg !18468

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18469
  unreachable, !dbg !18469

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18466
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18462
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18470
  call void @llvm.dbg.value(metadata i32 undef, metadata !18434, metadata !DIExpression()), !dbg !18435
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18471
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !18472
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #27, !dbg !18473
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18474
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !18475
  tail call fastcc void @z_add_thread_timeout.385(%struct.k_thread* noundef %24, [1 x i64] %25) #27, !dbg !18475
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18476
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #27, !dbg !18477
  call void @llvm.dbg.value(metadata i32 undef, metadata !17216, metadata !DIExpression()) #25, !dbg !18478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17221, metadata !DIExpression()) #25, !dbg !18478
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17225, metadata !DIExpression()) #25, !dbg !18480
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18482
  br i1 %27, label %29, label %28, !dbg !18483

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !18484
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !18484
  unreachable, !dbg !18484

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !18464
  call void @llvm.dbg.value(metadata i32 %30, metadata !16552, metadata !DIExpression()) #25, !dbg !18466
  call void @llvm.dbg.value(metadata i32 %30, metadata !16546, metadata !DIExpression()) #25, !dbg !18462
  call void @llvm.dbg.value(metadata i32 %30, metadata !18434, metadata !DIExpression()), !dbg !18435
  call void @llvm.dbg.value(metadata i32 undef, metadata !17216, metadata !DIExpression()) #25, !dbg !18478
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #26, !dbg !18485
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18486
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #27, !dbg !18486
  br i1 %33, label %34, label %35, !dbg !18489

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.410, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1448) #26, !dbg !18490
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.372, i32 0, i32 0)) #26, !dbg !18490
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1448) #26, !dbg !18490
  unreachable, !dbg !18490

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !18492
  %37 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !18493
  %38 = zext i32 %37 to i64, !dbg !18493
  %39 = sub nsw i64 %36, %38, !dbg !18494
  call void @llvm.dbg.value(metadata i64 %39, metadata !18431, metadata !DIExpression()), !dbg !18435
  %40 = icmp sgt i64 %39, 0, !dbg !18495
  %41 = select i1 %40, i64 %39, i64 0, !dbg !18495
  %42 = trunc i64 %41 to i32, !dbg !18495
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !18435
  ret i32 %44, !dbg !18496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !18497 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18499, metadata !DIExpression()), !dbg !18500
  call void @llvm.dbg.value(metadata i64 %0, metadata !16600, metadata !DIExpression()), !dbg !18501
  call void @llvm.dbg.value(metadata i32 10000, metadata !16603, metadata !DIExpression()), !dbg !18501
  call void @llvm.dbg.value(metadata i32 1000, metadata !16604, metadata !DIExpression()), !dbg !18501
  call void @llvm.dbg.value(metadata i8 1, metadata !16605, metadata !DIExpression()), !dbg !18501
  call void @llvm.dbg.value(metadata i1 false, metadata !16606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18501
  call void @llvm.dbg.value(metadata i1 false, metadata !16607, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18501
  call void @llvm.dbg.value(metadata i8 0, metadata !16608, metadata !DIExpression()), !dbg !18501
  call void @llvm.dbg.value(metadata i1 false, metadata !16609, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18501
  call void @llvm.dbg.value(metadata i1 true, metadata !16610, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18501
  call void @llvm.dbg.value(metadata i64 0, metadata !16611, metadata !DIExpression()), !dbg !18501
  call void @llvm.dbg.value(metadata i64 0, metadata !16611, metadata !DIExpression()), !dbg !18501
  call void @llvm.dbg.value(metadata i64 %0, metadata !16600, metadata !DIExpression()), !dbg !18501
  %2 = udiv i64 %0, 10, !dbg !18503
  ret i64 %2, !dbg !18507
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !18508 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !18509, !srcloc !18511
  tail call void @z_impl_k_yield() #27, !dbg !18512
  ret void, !dbg !18513
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !18514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18518, metadata !DIExpression()), !dbg !18520
  %2 = sext i32 %0 to i64, !dbg !18521
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #27, !dbg !18522
  call void @llvm.dbg.value(metadata i64 %3, metadata !18519, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18520
  %4 = shl i64 %3, 32, !dbg !18523
  %5 = ashr exact i64 %4, 32, !dbg !18523
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #27, !dbg !18524
  call void @llvm.dbg.value(metadata i32 %6, metadata !18519, metadata !DIExpression()), !dbg !18520
  %7 = sext i32 %6 to i64, !dbg !18525
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #27, !dbg !18526
  %9 = trunc i64 %8 to i32, !dbg !18526
  ret i32 %9, !dbg !18527
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !18528 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18530, metadata !DIExpression()), !dbg !18531
  call void @llvm.dbg.value(metadata i64 %0, metadata !16600, metadata !DIExpression()), !dbg !18532
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16603, metadata !DIExpression()), !dbg !18532
  call void @llvm.dbg.value(metadata i32 10000, metadata !16604, metadata !DIExpression()), !dbg !18532
  call void @llvm.dbg.value(metadata i8 1, metadata !16605, metadata !DIExpression()), !dbg !18532
  call void @llvm.dbg.value(metadata i1 false, metadata !16606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18532
  call void @llvm.dbg.value(metadata i1 true, metadata !16607, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18532
  call void @llvm.dbg.value(metadata i8 0, metadata !16608, metadata !DIExpression()), !dbg !18532
  call void @llvm.dbg.value(metadata i1 false, metadata !16609, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18532
  call void @llvm.dbg.value(metadata i1 true, metadata !16610, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18532
  call void @llvm.dbg.value(metadata i64 0, metadata !16611, metadata !DIExpression()), !dbg !18532
  call void @llvm.dbg.value(metadata i64 0, metadata !16611, metadata !DIExpression()), !dbg !18532
  %2 = add i64 %0, 99, !dbg !18534
  call void @llvm.dbg.value(metadata i64 %2, metadata !16600, metadata !DIExpression()), !dbg !18532
  %3 = udiv i64 %2, 100, !dbg !18535
  ret i64 %3, !dbg !18536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !18537 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !18539, metadata !DIExpression()), !dbg !18540
  call void @llvm.dbg.value(metadata i64 %0, metadata !16600, metadata !DIExpression()), !dbg !18541
  call void @llvm.dbg.value(metadata i32 10000, metadata !16603, metadata !DIExpression()), !dbg !18541
  call void @llvm.dbg.value(metadata i32 1000000, metadata !16604, metadata !DIExpression()), !dbg !18541
  call void @llvm.dbg.value(metadata i8 1, metadata !16605, metadata !DIExpression()), !dbg !18541
  call void @llvm.dbg.value(metadata i1 false, metadata !16606, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18541
  call void @llvm.dbg.value(metadata i1 false, metadata !16607, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18541
  call void @llvm.dbg.value(metadata i8 0, metadata !16608, metadata !DIExpression()), !dbg !18541
  call void @llvm.dbg.value(metadata i1 true, metadata !16609, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18541
  call void @llvm.dbg.value(metadata i1 false, metadata !16610, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18541
  call void @llvm.dbg.value(metadata i64 0, metadata !16611, metadata !DIExpression()), !dbg !18541
  call void @llvm.dbg.value(metadata i64 0, metadata !16611, metadata !DIExpression()), !dbg !18541
  %2 = mul i64 %0, 100, !dbg !18543
  ret i64 %2, !dbg !18545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18548, metadata !DIExpression()), !dbg !18549
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #27, !dbg !18550
  br i1 %2, label %14, label %3, !dbg !18552

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #27, !dbg !18553
  %5 = icmp slt i32 %4, 0, !dbg !18555
  br i1 %5, label %6, label %10, !dbg !18556

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18557
  %8 = load i8, i8* %7, align 1, !dbg !18557
  %9 = icmp eq i8 %8, 16, !dbg !18560
  br i1 %9, label %10, label %14, !dbg !18561

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #27, !dbg !18562
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #27, !dbg !18563
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18564, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %11, metadata !17268, metadata !DIExpression()) #25, !dbg !18568
  %12 = icmp eq i32 %11, 0, !dbg !18569
  br i1 %12, label %13, label %14, !dbg !18570

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #27, !dbg !18571
  br label %14, !dbg !18573

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !18574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !18575 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18577, metadata !DIExpression()), !dbg !18578
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18579
  %3 = load i8, i8* %2, align 1, !dbg !18579
  %4 = and i8 %3, 2, !dbg !18580
  %5 = icmp ne i8 %4, 0, !dbg !18581
  ret i1 %5, !dbg !18582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !18583 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18588
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !18587, metadata !DIExpression()), !dbg !18589
  ret %struct.k_thread* %1, !dbg !18590
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !18591 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18592, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %1, metadata !17268, metadata !DIExpression()) #25, !dbg !18595
  %2 = icmp eq i32 %1, 0, !dbg !18596
  br i1 %2, label %3, label %8, !dbg !18597

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18598
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #27, !dbg !18599
  %6 = icmp ne i32 %5, 0, !dbg !18597
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !18600
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !18601 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18603, metadata !DIExpression()), !dbg !18605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !18606
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18608, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18610
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !18610
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18606
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18611
  br i1 %3, label %5, label %4, !dbg !18612

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18613
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18613
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18613
  unreachable, !dbg !18613

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !18608
  call void @llvm.dbg.value(metadata i32 %6, metadata !16552, metadata !DIExpression()) #25, !dbg !18610
  call void @llvm.dbg.value(metadata i32 %6, metadata !16546, metadata !DIExpression()) #25, !dbg !18606
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18614
  call void @llvm.dbg.value(metadata i32 %6, metadata !18604, metadata !DIExpression()), !dbg !18605
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !18615
  %8 = load i8, i8* %7, align 4, !dbg !18615
  %9 = and i8 %8, 1, !dbg !18617
  %10 = icmp eq i8 %9, 0, !dbg !18618
  br i1 %10, label %15, label %11, !dbg !18619

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !18620
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !18620
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18623
  br i1 %12, label %14, label %13, !dbg !18624

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18625
  unreachable, !dbg !18625

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !16574, metadata !DIExpression()) #25, !dbg !18620
  call void @llvm.dbg.value(metadata i32 %6, metadata !16588, metadata !DIExpression()) #25, !dbg !18626
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18628, !srcloc !16594
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.415, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1731) #26, !dbg !18629
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.416, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #26, !dbg !18629
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1731) #26, !dbg !18629
  unreachable, !dbg !18629

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18633
  %17 = load i8, i8* %16, align 1, !dbg !18633
  %18 = and i8 %17, 8, !dbg !18635
  %19 = icmp eq i8 %18, 0, !dbg !18636
  br i1 %19, label %24, label %20, !dbg !18637

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !18638
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !18638
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18641
  br i1 %21, label %23, label %22, !dbg !18642

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18643
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18643
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18643
  unreachable, !dbg !18643

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !16574, metadata !DIExpression()) #25, !dbg !18638
  call void @llvm.dbg.value(metadata i32 %6, metadata !16588, metadata !DIExpression()) #25, !dbg !18644
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18646, !srcloc !16594
  br label %39, !dbg !18647

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #27, !dbg !18648
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18649
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !18651
  br i1 %26, label %27, label %35, !dbg !18652

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18653, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %28, metadata !17268, metadata !DIExpression()) #25, !dbg !18656
  %29 = icmp eq i32 %28, 0, !dbg !18657
  br i1 %29, label %30, label %35, !dbg !18658

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !17216, metadata !DIExpression()) #25, !dbg !18659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17221, metadata !DIExpression()) #25, !dbg !18659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17225, metadata !DIExpression()) #25, !dbg !18662
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18664
  br i1 %31, label %33, label %32, !dbg !18665

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !18666
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18666
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !18666
  unreachable, !dbg !18666

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !17216, metadata !DIExpression()) #25, !dbg !18659
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #26, !dbg !18667
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.415, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1778) #26, !dbg !18668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.417, i32 0, i32 0)) #26, !dbg !18668
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1778) #26, !dbg !18668
  unreachable, !dbg !18668

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !18672
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !18672
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18674
  br i1 %36, label %38, label %37, !dbg !18675

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18676
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18676
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18676
  unreachable, !dbg !18676

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !16574, metadata !DIExpression()) #25, !dbg !18672
  call void @llvm.dbg.value(metadata i32 %6, metadata !16588, metadata !DIExpression()) #25, !dbg !18677
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !18679, !srcloc !16594
  br label %39, !dbg !18680

39:                                               ; preds = %38, %23
  ret void, !dbg !18680
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !18681 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18683, metadata !DIExpression()), !dbg !18684
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18685
  %3 = load i8, i8* %2, align 1, !dbg !18685
  %4 = and i8 %3, 8, !dbg !18687
  %5 = icmp eq i8 %4, 0, !dbg !18688
  br i1 %5, label %6, label %20, !dbg !18689

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !18690
  %8 = or i8 %7, 8, !dbg !18690
  store i8 %8, i8* %2, align 1, !dbg !18690
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #27, !dbg !18692
  br i1 %9, label %10, label %12, !dbg !18694

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16732, metadata !DIExpression()) #25, !dbg !18695
  %11 = and i8 %8, 95, !dbg !18698
  store i8 %11, i8* %2, align 1, !dbg !18698
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16740, metadata !DIExpression()) #25, !dbg !18699
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #26, !dbg !18701
  br label %12, !dbg !18702

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18703
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !18703
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !18705
  br i1 %15, label %17, label %16, !dbg !18706

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !18707
  br label %17, !dbg !18709

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #27, !dbg !18710
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18711
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #27, !dbg !18712
  tail call fastcc void @update_cache(i32 noundef 1) #27, !dbg !18713
  br label %20, !dbg !18714

20:                                               ; preds = %17, %1
  ret void, !dbg !18715
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !18716 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18720, metadata !DIExpression()), !dbg !18722
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.404(%struct._wait_q_t* noundef %0) #27, !dbg !18723
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !18721, metadata !DIExpression()), !dbg !18722
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !18724
  br i1 %3, label %10, label %4, !dbg !18725

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !18726
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #27, !dbg !18728
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !18729, metadata !DIExpression()), !dbg !18735
  call void @llvm.dbg.value(metadata i32 0, metadata !18734, metadata !DIExpression()), !dbg !18735
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !18737
  store i32 0, i32* %7, align 4, !dbg !18738
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #27, !dbg !18739
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.404(%struct._wait_q_t* noundef %0) #27, !dbg !18723
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !18721, metadata !DIExpression()), !dbg !18722
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !18724
  br i1 %9, label %10, label %4, !dbg !18725, !llvm.loop !18740

10:                                               ; preds = %4, %1
  ret void, !dbg !18742
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !18743 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !18748, metadata !DIExpression()), !dbg !18751
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !18747, metadata !DIExpression()), !dbg !18751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !18752
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18754, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18756
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !18756
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18752
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18757
  br i1 %4, label %6, label %5, !dbg !18758

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18759
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18759
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18759
  unreachable, !dbg !18759

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !18754
  call void @llvm.dbg.value(metadata i32 %7, metadata !16552, metadata !DIExpression()) #25, !dbg !18756
  call void @llvm.dbg.value(metadata i32 %7, metadata !16546, metadata !DIExpression()) #25, !dbg !18752
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18760
  call void @llvm.dbg.value(metadata i32 %7, metadata !18749, metadata !DIExpression()), !dbg !18751
  call void @llvm.dbg.value(metadata i32 0, metadata !18750, metadata !DIExpression()), !dbg !18751
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !18761
  %9 = load i8, i8* %8, align 1, !dbg !18761
  %10 = and i8 %9, 8, !dbg !18763
  %11 = icmp eq i8 %10, 0, !dbg !18764
  br i1 %11, label %12, label %35, !dbg !18765

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !18748, metadata !DIExpression()), !dbg !18751
  %14 = icmp eq i64 %13, 0, !dbg !18766
  br i1 %14, label %35, label %15, !dbg !18768

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18769
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !18771
  br i1 %17, label %35, label %18, !dbg !18772

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !18773
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !18773
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !18774
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !18775
  br i1 %22, label %35, label %23, !dbg !18776

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !18777, !srcloc !17272
  call void @llvm.dbg.value(metadata i32 %24, metadata !17268, metadata !DIExpression()) #25, !dbg !18783
  %25 = icmp eq i32 %24, 0, !dbg !18784
  br i1 %25, label %27, label %26, !dbg !18785

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.398, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1809) #26, !dbg !18786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.418, i32 0, i32 0)) #26, !dbg !18786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.369, i32 0, i32 0), i32 noundef 1809) #26, !dbg !18786
  unreachable, !dbg !18786

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18788
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !18789
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #27, !dbg !18790
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18791
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #27, !dbg !18792
  call void @llvm.dbg.value(metadata i32 undef, metadata !17216, metadata !DIExpression()) #25, !dbg !18793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17221, metadata !DIExpression()) #25, !dbg !18793
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !17225, metadata !DIExpression()) #25, !dbg !18795
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18797
  br i1 %31, label %33, label %32, !dbg !18798

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !18799
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18799
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 225) #26, !dbg !18799
  unreachable, !dbg !18799

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !17216, metadata !DIExpression()) #25, !dbg !18793
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #26, !dbg !18800
  call void @llvm.dbg.value(metadata i32 %34, metadata !18750, metadata !DIExpression()), !dbg !18751
  br label %40, !dbg !18801

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !18802
  call void @llvm.dbg.value(metadata i32 %36, metadata !18750, metadata !DIExpression()), !dbg !18751
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !18803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !18803
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18805
  br i1 %37, label %39, label %38, !dbg !18806

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18807
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18807
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18807
  unreachable, !dbg !18807

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !16574, metadata !DIExpression()) #25, !dbg !18803
  call void @llvm.dbg.value(metadata i32 %7, metadata !16588, metadata !DIExpression()) #25, !dbg !18808
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #25, !dbg !18810, !srcloc !16594
  br label %40, !dbg !18811

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !18751
  ret i32 %41, !dbg !18812
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !18813 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !18817, metadata !DIExpression()), !dbg !18825
  call void @llvm.dbg.value(metadata i32 %1, metadata !18818, metadata !DIExpression()), !dbg !18825
  call void @llvm.dbg.value(metadata i8* %2, metadata !18819, metadata !DIExpression()), !dbg !18825
  call void @llvm.dbg.value(metadata i8 0, metadata !18821, metadata !DIExpression()), !dbg !18825
  call void @llvm.dbg.value(metadata i32 0, metadata !18822, metadata !DIExpression()), !dbg !18826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16540, metadata !DIExpression()) #25, !dbg !18827
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18829, !srcloc !16555
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18831
  call void @llvm.dbg.value(metadata i32 undef, metadata !16553, metadata !DIExpression()) #25, !dbg !18831
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18827
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18832
  br i1 %5, label %7, label %6, !dbg !18833

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.363, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18834
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.365, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18834
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 148) #26, !dbg !18834
  unreachable, !dbg !18834

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !16552, metadata !DIExpression()) #25, !dbg !18831
  call void @llvm.dbg.value(metadata i32 undef, metadata !16546, metadata !DIExpression()) #25, !dbg !18827
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18835
  call void @llvm.dbg.value(metadata i32 undef, metadata !18824, metadata !DIExpression()), !dbg !18826
  call void @llvm.dbg.value(metadata i8 poison, metadata !18821, metadata !DIExpression()), !dbg !18825
  call void @llvm.dbg.value(metadata i32 undef, metadata !18822, metadata !DIExpression()), !dbg !18826
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #27, !dbg !18836
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18820, metadata !DIExpression()), !dbg !18825
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !18839
  br i1 %10, label %15, label %11, !dbg !18841

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18842, metadata !DIExpression()), !dbg !18849
  call void @llvm.dbg.value(metadata i32 %1, metadata !18847, metadata !DIExpression()), !dbg !18849
  call void @llvm.dbg.value(metadata i8* %2, metadata !18848, metadata !DIExpression()), !dbg !18849
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !18729, metadata !DIExpression()), !dbg !18852
  call void @llvm.dbg.value(metadata i32 %1, metadata !18734, metadata !DIExpression()), !dbg !18852
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 7, i32 1, !dbg !18854
  store i32 %1, i32* %12, align 4, !dbg !18855
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18856
  store i8* %2, i8** %13, align 4, !dbg !18857
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !18858
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #27, !dbg !18859
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #27, !dbg !18860
  call void @llvm.dbg.value(metadata i8 1, metadata !18821, metadata !DIExpression()), !dbg !18825
  br label %15, !dbg !18861

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !18821, metadata !DIExpression()), !dbg !18825
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !18862
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !16579, metadata !DIExpression()) #25, !dbg !18862
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18864
  br i1 %16, label %18, label %17, !dbg !18865

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.362, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.366, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18866
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.367, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !18866
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.364, i32 0, i32 0), i32 noundef 194) #26, !dbg !18866
  unreachable, !dbg !18866

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !18825
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !18829
  call void @llvm.dbg.value(metadata i32 %20, metadata !16552, metadata !DIExpression()) #25, !dbg !18831
  call void @llvm.dbg.value(metadata i32 %20, metadata !16546, metadata !DIExpression()) #25, !dbg !18827
  call void @llvm.dbg.value(metadata i32 %20, metadata !18824, metadata !DIExpression()), !dbg !18826
  call void @llvm.dbg.value(metadata i32 undef, metadata !16574, metadata !DIExpression()) #25, !dbg !18862
  call void @llvm.dbg.value(metadata i32 undef, metadata !16588, metadata !DIExpression()) #25, !dbg !18867
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !18869, !srcloc !16594
  call void @llvm.dbg.value(metadata i8 poison, metadata !18821, metadata !DIExpression()), !dbg !18825
  call void @llvm.dbg.value(metadata i32 undef, metadata !18822, metadata !DIExpression()), !dbg !18826
  ret i1 %19, !dbg !18870
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !18871 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !18877, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata i64 undef, metadata !18879, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !18876, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !18878, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.value(metadata i8** %4, metadata !18880, metadata !DIExpression()), !dbg !18882
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #27, !dbg !18883
  call void @llvm.dbg.value(metadata i32 %6, metadata !18881, metadata !DIExpression()), !dbg !18882
  %7 = icmp eq i8** %4, null, !dbg !18884
  br i1 %7, label %12, label %8, !dbg !18886

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !18887
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !18889
  %11 = load i8*, i8** %10, align 4, !dbg !18889
  store i8* %11, i8** %4, align 4, !dbg !18890
  br label %12, !dbg !18891

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !18892
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !18893 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !18895
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !18896
  ret void, !dbg !18897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !18898 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !18908, metadata !DIExpression()), !dbg !18925
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18906, metadata !DIExpression()), !dbg !18925
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !18907, metadata !DIExpression()), !dbg !18925
  %5 = icmp eq i64 %4, -1, !dbg !18926
  br i1 %5, label %63, label %6, !dbg !18928

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18929
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.423(%struct._dnode* noundef %7) #27, !dbg !18929
  br i1 %8, label %9, label %10, !dbg !18932

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.425, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.426, i32 0, i32 0), i32 noundef 99) #26, !dbg !18933
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.427, i32 0, i32 0)) #26, !dbg !18933
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.426, i32 0, i32 0), i32 noundef 99) #26, !dbg !18933
  unreachable, !dbg !18933

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !18935
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !18936
  call void @llvm.dbg.value(metadata i32 0, metadata !18909, metadata !DIExpression()), !dbg !18937
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18938, metadata !DIExpression()) #25, !dbg !18945
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18947, !srcloc !18953
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !18954
  call void @llvm.dbg.value(metadata i32 undef, metadata !18951, metadata !DIExpression()) #25, !dbg !18954
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !18945
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !18955
  br i1 %13, label %15, label %14, !dbg !18958

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !18959
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !18959
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !18959
  unreachable, !dbg !18959

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !18947
  call void @llvm.dbg.value(metadata i32 %16, metadata !18950, metadata !DIExpression()) #25, !dbg !18954
  call void @llvm.dbg.value(metadata i32 %16, metadata !18944, metadata !DIExpression()) #25, !dbg !18945
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !18961
  call void @llvm.dbg.value(metadata i32 %16, metadata !18915, metadata !DIExpression()), !dbg !18937
  call void @llvm.dbg.value(metadata i32 undef, metadata !18909, metadata !DIExpression()), !dbg !18937
  %17 = icmp slt i64 %4, -1, !dbg !18962
  br i1 %17, label %18, label %24, !dbg !18963

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !18964
  %20 = add i64 %4, %19, !dbg !18965
  %21 = sub i64 -2, %20, !dbg !18965
  call void @llvm.dbg.value(metadata i64 %21, metadata !18919, metadata !DIExpression()), !dbg !18966
  %22 = icmp sgt i64 %21, 1, !dbg !18967
  %23 = select i1 %22, i64 %21, i64 1, !dbg !18967
  br label %29, !dbg !18968

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !18969
  %26 = tail call fastcc i32 @elapsed.431() #27, !dbg !18971
  %27 = sext i32 %26 to i64, !dbg !18971
  %28 = add nsw i64 %25, %27, !dbg !18972
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !18973
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !18974
  store i64 %30, i64* %31, align 8, !dbg !18975
  %32 = tail call fastcc %struct._timeout* @first() #27, !dbg !18976
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !18916, metadata !DIExpression()), !dbg !18978
  %33 = icmp eq %struct._timeout* %32, null, !dbg !18979
  br i1 %33, label %48, label %34, !dbg !18979

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !18980
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !18916, metadata !DIExpression()), !dbg !18978
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18984
  %38 = load i64, i64* %37, align 8, !dbg !18984
  %39 = icmp slt i64 %35, %38, !dbg !18985
  br i1 %39, label %40, label %44, !dbg !18986

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !18984
  %42 = sub nsw i64 %38, %35, !dbg !18987
  store i64 %42, i64* %41, align 8, !dbg !18987
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !18989
  tail call fastcc void @sys_dlist_insert.432(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #27, !dbg !18990
  br label %49, !dbg !18991

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !18992
  store i64 %45, i64* %31, align 8, !dbg !18992
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #27, !dbg !18993
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !18916, metadata !DIExpression()), !dbg !18978
  %47 = icmp eq %struct._timeout* %46, null, !dbg !18979
  br i1 %47, label %48, label %34, !dbg !18979, !llvm.loop !18994

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.433(%struct._dnode* noundef nonnull %7) #27, !dbg !18996
  br label %49, !dbg !18999

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #27, !dbg !19000
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !19001
  br i1 %51, label %52, label %59, !dbg !19002

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #27, !dbg !19003
  call void @llvm.dbg.value(metadata i32 %53, metadata !18922, metadata !DIExpression()), !dbg !19004
  %54 = icmp ne i32 %53, 0, !dbg !19005
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !19007
  br i1 %57, label %59, label %58, !dbg !19007

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #26, !dbg !19008
  br label %59, !dbg !19010

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19016, metadata !DIExpression()) #25, !dbg !19017
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19019
  br i1 %60, label %62, label %61, !dbg !19022

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19023
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.435, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19023
  unreachable, !dbg !19023

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !19011, metadata !DIExpression()) #25, !dbg !19017
  call void @llvm.dbg.value(metadata i32 %16, metadata !19025, metadata !DIExpression()) #25, !dbg !19028
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !19030, !srcloc !19031
  call void @llvm.dbg.value(metadata i32 undef, metadata !18909, metadata !DIExpression()), !dbg !18937
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !19032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.423(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !19033 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19039, metadata !DIExpression()), !dbg !19040
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19041
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !19041
  %4 = icmp ne %struct._dnode* %3, null, !dbg !19042
  ret i1 %4, !dbg !19043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.431() unnamed_addr #1 !dbg !19044 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !19047
  %2 = icmp eq i32 %1, 0, !dbg !19048
  br i1 %2, label %3, label %5, !dbg !19047

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !19049
  br label %5, !dbg !19047

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !19047
  ret i32 %6, !dbg !19050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !19051 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.438() #27, !dbg !19057
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !19055, metadata !DIExpression()), !dbg !19058
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !19059
  ret %struct._timeout* %2, !dbg !19060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.432(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !19061 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19065, metadata !DIExpression()), !dbg !19069
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !19066, metadata !DIExpression()), !dbg !19069
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19070
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !19070
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !19067, metadata !DIExpression()), !dbg !19069
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !19071
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !19072
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !19073
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !19074
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !19075
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !19076
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !19077
  ret void, !dbg !19078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !19079 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19083, metadata !DIExpression()), !dbg !19085
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19086
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.436(%struct._dnode* noundef %2) #27, !dbg !19087
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !19084, metadata !DIExpression()), !dbg !19085
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !19088
  ret %struct._timeout* %4, !dbg !19089
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.433(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !19090 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19095, metadata !DIExpression()), !dbg !19098
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19096, metadata !DIExpression()), !dbg !19098
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19099
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !19097, metadata !DIExpression()), !dbg !19098
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19100
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !19101
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19102
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !19103
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !19104
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !19105
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19106
  ret void, !dbg !19107
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !19108 {
  %1 = tail call fastcc %struct._timeout* @first() #27, !dbg !19113
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !19110, metadata !DIExpression()), !dbg !19114
  %2 = tail call fastcc i32 @elapsed.431() #27, !dbg !19115
  call void @llvm.dbg.value(metadata i32 %2, metadata !19111, metadata !DIExpression()), !dbg !19114
  %3 = icmp eq %struct._timeout* %1, null, !dbg !19116
  br i1 %3, label %14, label %4, !dbg !19118

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !19119
  %6 = load i64, i64* %5, align 8, !dbg !19119
  %7 = sext i32 %2 to i64, !dbg !19120
  %8 = sub nsw i64 %6, %7, !dbg !19121
  %9 = icmp sgt i64 %8, 2147483647, !dbg !19122
  br i1 %9, label %14, label %10, !dbg !19123

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !19124
  %12 = select i1 %11, i64 %8, i64 0, !dbg !19124
  %13 = trunc i64 %12 to i32, !dbg !19124
  call void @llvm.dbg.value(metadata i32 %13, metadata !19112, metadata !DIExpression()), !dbg !19114
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !19126
  call void @llvm.dbg.value(metadata i32 %15, metadata !19112, metadata !DIExpression()), !dbg !19114
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !19127
  %17 = icmp ne i32 %16, 0, !dbg !19129
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !19130
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !19130
  call void @llvm.dbg.value(metadata i32 %20, metadata !19112, metadata !DIExpression()), !dbg !19114
  ret i32 %20, !dbg !19131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.436(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !19132 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19136, metadata !DIExpression()), !dbg !19138
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19137, metadata !DIExpression()), !dbg !19138
  %2 = icmp eq %struct._dnode* %0, null, !dbg !19139
  br i1 %2, label %5, label %3, !dbg !19140

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.437(%struct._dnode* noundef nonnull %0) #27, !dbg !19141
  br label %5, !dbg !19140

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !19140
  ret %struct._dnode* %6, !dbg !19142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.437(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !19143 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19145, metadata !DIExpression()), !dbg !19147
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19146, metadata !DIExpression()), !dbg !19147
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !19148
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !19149
  br i1 %3, label %7, label %4, !dbg !19150

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19151
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !19151
  br label %7, !dbg !19150

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !19150
  ret %struct._dnode* %8, !dbg !19152
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.438() unnamed_addr #8 !dbg !19153 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19157, metadata !DIExpression()), !dbg !19158
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.439() #27, !dbg !19159
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !19159
  ret %struct._dnode* %3, !dbg !19160
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.439() unnamed_addr #8 !dbg !19161 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !19165, metadata !DIExpression()), !dbg !19166
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !19167
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !19168
  ret i1 %2, !dbg !19169
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19170 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19174, metadata !DIExpression()), !dbg !19179
  call void @llvm.dbg.value(metadata i32 -22, metadata !19175, metadata !DIExpression()), !dbg !19179
  call void @llvm.dbg.value(metadata i32 0, metadata !19176, metadata !DIExpression()), !dbg !19180
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18938, metadata !DIExpression()) #25, !dbg !19181
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19183, !srcloc !18953
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19185
  call void @llvm.dbg.value(metadata i32 undef, metadata !18951, metadata !DIExpression()) #25, !dbg !19185
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19181
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19186
  br i1 %3, label %5, label %4, !dbg !19187

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19188
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19188
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19188
  unreachable, !dbg !19188

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19185
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19181
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19189
  call void @llvm.dbg.value(metadata i32 undef, metadata !19178, metadata !DIExpression()), !dbg !19180
  call void @llvm.dbg.value(metadata i32 -22, metadata !19175, metadata !DIExpression()), !dbg !19179
  call void @llvm.dbg.value(metadata i32 undef, metadata !19176, metadata !DIExpression()), !dbg !19180
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !19175, metadata !DIExpression()), !dbg !19179
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.423(%struct._dnode* noundef %6) #27, !dbg !19190
  br i1 %7, label %8, label %9, !dbg !19194

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #27, !dbg !19195
  call void @llvm.dbg.value(metadata i32 0, metadata !19175, metadata !DIExpression()), !dbg !19179
  br label %9, !dbg !19197

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !19179
  call void @llvm.dbg.value(metadata i32 %10, metadata !19175, metadata !DIExpression()), !dbg !19179
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19198
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19016, metadata !DIExpression()) #25, !dbg !19198
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19200
  br i1 %11, label %13, label %12, !dbg !19201

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19202
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.435, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19202
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19202
  unreachable, !dbg !19202

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !19183
  call void @llvm.dbg.value(metadata i32 %14, metadata !18950, metadata !DIExpression()) #25, !dbg !19185
  call void @llvm.dbg.value(metadata i32 %14, metadata !18944, metadata !DIExpression()) #25, !dbg !19181
  call void @llvm.dbg.value(metadata i32 %14, metadata !19178, metadata !DIExpression()), !dbg !19180
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19198
  call void @llvm.dbg.value(metadata i32 undef, metadata !19025, metadata !DIExpression()) #25, !dbg !19203
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !19205, !srcloc !19031
  call void @llvm.dbg.value(metadata i32 %10, metadata !19175, metadata !DIExpression()), !dbg !19179
  call void @llvm.dbg.value(metadata i32 undef, metadata !19176, metadata !DIExpression()), !dbg !19180
  ret i32 %10, !dbg !19206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !19207 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19209, metadata !DIExpression()), !dbg !19210
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #27, !dbg !19211
  %3 = icmp eq %struct._timeout* %2, null, !dbg !19213
  br i1 %3, label %10, label %4, !dbg !19214

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !19215
  %6 = load i64, i64* %5, align 8, !dbg !19215
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !19217
  %8 = load i64, i64* %7, align 8, !dbg !19218
  %9 = add nsw i64 %8, %6, !dbg !19218
  store i64 %9, i64* %7, align 8, !dbg !19218
  br label %10, !dbg !19219

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19220
  tail call fastcc void @sys_dlist_remove.442(%struct._dnode* noundef %11) #27, !dbg !19221
  ret void, !dbg !19222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.442(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !19223 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19227, metadata !DIExpression()), !dbg !19230
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19231
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !19231
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !19228, metadata !DIExpression()), !dbg !19230
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19232
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !19232
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !19229, metadata !DIExpression()), !dbg !19230
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !19233
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !19234
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !19235
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !19236
  tail call fastcc void @sys_dnode_init.443(%struct._dnode* noundef %0) #27, !dbg !19237
  ret void, !dbg !19238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.443(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !19239 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19241, metadata !DIExpression()), !dbg !19242
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19243
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !19244
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19245
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !19246
  ret void, !dbg !19247
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19248 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19254, metadata !DIExpression()), !dbg !19259
  call void @llvm.dbg.value(metadata i64 0, metadata !19255, metadata !DIExpression()), !dbg !19259
  call void @llvm.dbg.value(metadata i32 0, metadata !19256, metadata !DIExpression()), !dbg !19260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18938, metadata !DIExpression()) #25, !dbg !19261
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19263, !srcloc !18953
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19265
  call void @llvm.dbg.value(metadata i32 undef, metadata !18951, metadata !DIExpression()) #25, !dbg !19265
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19261
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19266
  br i1 %3, label %5, label %4, !dbg !19267

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19268
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19268
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19268
  unreachable, !dbg !19268

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19265
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19261
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19269
  call void @llvm.dbg.value(metadata i32 undef, metadata !19258, metadata !DIExpression()), !dbg !19260
  call void @llvm.dbg.value(metadata i64 0, metadata !19255, metadata !DIExpression()), !dbg !19259
  call void @llvm.dbg.value(metadata i32 undef, metadata !19256, metadata !DIExpression()), !dbg !19260
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !19270
  call void @llvm.dbg.value(metadata i64 %6, metadata !19255, metadata !DIExpression()), !dbg !19259
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19273
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19016, metadata !DIExpression()) #25, !dbg !19273
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19275
  br i1 %7, label %9, label %8, !dbg !19276

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19277
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.435, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19277
  unreachable, !dbg !19277

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !19263
  call void @llvm.dbg.value(metadata i32 %10, metadata !18950, metadata !DIExpression()) #25, !dbg !19265
  call void @llvm.dbg.value(metadata i32 %10, metadata !18944, metadata !DIExpression()) #25, !dbg !19261
  call void @llvm.dbg.value(metadata i32 %10, metadata !19258, metadata !DIExpression()), !dbg !19260
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19273
  call void @llvm.dbg.value(metadata i32 undef, metadata !19025, metadata !DIExpression()) #25, !dbg !19278
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !19280, !srcloc !19031
  call void @llvm.dbg.value(metadata i64 %6, metadata !19255, metadata !DIExpression()), !dbg !19259
  call void @llvm.dbg.value(metadata i32 undef, metadata !19256, metadata !DIExpression()), !dbg !19260
  ret i64 %6, !dbg !19281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !19282 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19284, metadata !DIExpression()), !dbg !19288
  call void @llvm.dbg.value(metadata i64 0, metadata !19285, metadata !DIExpression()), !dbg !19288
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.444(%struct._timeout* noundef %0) #27, !dbg !19289
  br i1 %2, label %21, label %3, !dbg !19291

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #27, !dbg !19292
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !19286, metadata !DIExpression()), !dbg !19293
  call void @llvm.dbg.value(metadata i64 0, metadata !19285, metadata !DIExpression()), !dbg !19288
  %5 = icmp eq %struct._timeout* %4, null, !dbg !19294
  br i1 %5, label %16, label %6, !dbg !19296

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !19286, metadata !DIExpression()), !dbg !19293
  call void @llvm.dbg.value(metadata i64 %8, metadata !19285, metadata !DIExpression()), !dbg !19288
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !19297
  %10 = load i64, i64* %9, align 8, !dbg !19297
  %11 = add nsw i64 %10, %8, !dbg !19299
  call void @llvm.dbg.value(metadata i64 %11, metadata !19285, metadata !DIExpression()), !dbg !19288
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !19300
  br i1 %12, label %16, label %13, !dbg !19302

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #27, !dbg !19303
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !19286, metadata !DIExpression()), !dbg !19293
  call void @llvm.dbg.value(metadata i64 %11, metadata !19285, metadata !DIExpression()), !dbg !19288
  %15 = icmp eq %struct._timeout* %14, null, !dbg !19294
  br i1 %15, label %16, label %6, !dbg !19296, !llvm.loop !19304

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !19288
  call void @llvm.dbg.value(metadata i64 %17, metadata !19285, metadata !DIExpression()), !dbg !19288
  %18 = tail call fastcc i32 @elapsed.431() #27, !dbg !19306
  %19 = sext i32 %18 to i64, !dbg !19306
  %20 = sub nsw i64 %17, %19, !dbg !19307
  br label %21, !dbg !19308

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !19288
  ret i64 %22, !dbg !19309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.444(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !19310 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19314, metadata !DIExpression()), !dbg !19315
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !19316
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.423(%struct._dnode* noundef %2) #27, !dbg !19317
  %4 = xor i1 %3, true, !dbg !19318
  ret i1 %4, !dbg !19319
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !19320 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !19322, metadata !DIExpression()), !dbg !19327
  call void @llvm.dbg.value(metadata i64 0, metadata !19323, metadata !DIExpression()), !dbg !19327
  call void @llvm.dbg.value(metadata i32 0, metadata !19324, metadata !DIExpression()), !dbg !19328
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18938, metadata !DIExpression()) #25, !dbg !19329
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19331, !srcloc !18953
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19333
  call void @llvm.dbg.value(metadata i32 undef, metadata !18951, metadata !DIExpression()) #25, !dbg !19333
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19329
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19334
  br i1 %3, label %5, label %4, !dbg !19335

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19336
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19336
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19336
  unreachable, !dbg !19336

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19333
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19329
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19337
  call void @llvm.dbg.value(metadata i32 undef, metadata !19326, metadata !DIExpression()), !dbg !19328
  call void @llvm.dbg.value(metadata i64 0, metadata !19323, metadata !DIExpression()), !dbg !19327
  call void @llvm.dbg.value(metadata i32 undef, metadata !19324, metadata !DIExpression()), !dbg !19328
  %6 = load i64, i64* @curr_tick, align 8, !dbg !19338
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #27, !dbg !19341
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !19323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19327
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19342
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19016, metadata !DIExpression()) #25, !dbg !19342
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19344
  br i1 %8, label %10, label %9, !dbg !19345

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19346
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.435, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19346
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19346
  unreachable, !dbg !19346

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !19331
  call void @llvm.dbg.value(metadata i32 %11, metadata !18950, metadata !DIExpression()) #25, !dbg !19333
  call void @llvm.dbg.value(metadata i32 %11, metadata !18944, metadata !DIExpression()) #25, !dbg !19329
  call void @llvm.dbg.value(metadata i32 %11, metadata !19326, metadata !DIExpression()), !dbg !19328
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !19323, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19327
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19342
  call void @llvm.dbg.value(metadata i32 undef, metadata !19025, metadata !DIExpression()) #25, !dbg !19347
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #25, !dbg !19349, !srcloc !19031
  call void @llvm.dbg.value(metadata i32 undef, metadata !19324, metadata !DIExpression()), !dbg !19328
  %12 = add i64 %7, %6, !dbg !19350
  ret i64 %12, !dbg !19351
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !19352 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !19354, metadata !DIExpression()), !dbg !19358
  call void @llvm.dbg.value(metadata i32 0, metadata !19355, metadata !DIExpression()), !dbg !19359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18938, metadata !DIExpression()) #25, !dbg !19360
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19362, !srcloc !18953
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19364
  call void @llvm.dbg.value(metadata i32 undef, metadata !18951, metadata !DIExpression()) #25, !dbg !19364
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19360
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19365
  br i1 %2, label %4, label %3, !dbg !19366

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19367
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19367
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19367
  unreachable, !dbg !19367

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19364
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19360
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19368
  call void @llvm.dbg.value(metadata i32 undef, metadata !19357, metadata !DIExpression()), !dbg !19359
  call void @llvm.dbg.value(metadata i32 -1, metadata !19354, metadata !DIExpression()), !dbg !19358
  call void @llvm.dbg.value(metadata i32 undef, metadata !19355, metadata !DIExpression()), !dbg !19359
  %5 = tail call fastcc i32 @next_timeout() #27, !dbg !19369
  call void @llvm.dbg.value(metadata i32 %5, metadata !19354, metadata !DIExpression()), !dbg !19358
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19016, metadata !DIExpression()) #25, !dbg !19372
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19374
  br i1 %6, label %8, label %7, !dbg !19375

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19376
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.435, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19376
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19376
  unreachable, !dbg !19376

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !19362
  call void @llvm.dbg.value(metadata i32 %9, metadata !18950, metadata !DIExpression()) #25, !dbg !19364
  call void @llvm.dbg.value(metadata i32 %9, metadata !18944, metadata !DIExpression()) #25, !dbg !19360
  call void @llvm.dbg.value(metadata i32 %9, metadata !19357, metadata !DIExpression()), !dbg !19359
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19372
  call void @llvm.dbg.value(metadata i32 undef, metadata !19025, metadata !DIExpression()) #25, !dbg !19377
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !19379, !srcloc !19031
  call void @llvm.dbg.value(metadata i32 %5, metadata !19354, metadata !DIExpression()), !dbg !19358
  call void @llvm.dbg.value(metadata i32 undef, metadata !19355, metadata !DIExpression()), !dbg !19359
  ret i32 %5, !dbg !19380
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !19381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19383, metadata !DIExpression()), !dbg !19393
  call void @llvm.dbg.value(metadata i1 %1, metadata !19384, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19393
  call void @llvm.dbg.value(metadata i32 0, metadata !19385, metadata !DIExpression()), !dbg !19394
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18938, metadata !DIExpression()) #25, !dbg !19395
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19397, !srcloc !18953
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19399
  call void @llvm.dbg.value(metadata i32 undef, metadata !18951, metadata !DIExpression()) #25, !dbg !19399
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19395
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19400
  br i1 %4, label %6, label %5, !dbg !19401

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19402
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19402
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19402
  unreachable, !dbg !19402

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19399
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19395
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19403
  call void @llvm.dbg.value(metadata i32 undef, metadata !19387, metadata !DIExpression()), !dbg !19394
  call void @llvm.dbg.value(metadata i32 undef, metadata !19385, metadata !DIExpression()), !dbg !19394
  %7 = tail call fastcc i32 @next_timeout() #27, !dbg !19404
  call void @llvm.dbg.value(metadata i32 %7, metadata !19388, metadata !DIExpression()), !dbg !19405
  call void @llvm.dbg.value(metadata i1 undef, metadata !19391, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19405
  %8 = icmp slt i32 %7, 2, !dbg !19406
  call void @llvm.dbg.value(metadata i1 %8, metadata !19392, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19405
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !19407
  call void @llvm.dbg.value(metadata i1 %9, metadata !19391, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !19405
  br i1 %10, label %14, label %11, !dbg !19407

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !19409
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !19409
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #26, !dbg !19411
  br label %14, !dbg !19412

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19413
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19016, metadata !DIExpression()) #25, !dbg !19413
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19415
  br i1 %15, label %17, label %16, !dbg !19416

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19417
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.435, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19417
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19417
  unreachable, !dbg !19417

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !19397
  call void @llvm.dbg.value(metadata i32 %18, metadata !18950, metadata !DIExpression()) #25, !dbg !19399
  call void @llvm.dbg.value(metadata i32 %18, metadata !18944, metadata !DIExpression()) #25, !dbg !19395
  call void @llvm.dbg.value(metadata i32 %18, metadata !19387, metadata !DIExpression()), !dbg !19394
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19413
  call void @llvm.dbg.value(metadata i32 undef, metadata !19025, metadata !DIExpression()) #25, !dbg !19418
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !19420, !srcloc !19031
  call void @llvm.dbg.value(metadata i32 1, metadata !19385, metadata !DIExpression()), !dbg !19394
  call void @llvm.dbg.value(metadata i32 undef, metadata !19385, metadata !DIExpression()), !dbg !19394
  ret void, !dbg !19421
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !19422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19426, metadata !DIExpression()), !dbg !19431
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !19432
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18938, metadata !DIExpression()) #25, !dbg !19433
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19435, !srcloc !18953
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19437
  call void @llvm.dbg.value(metadata i32 undef, metadata !18951, metadata !DIExpression()) #25, !dbg !19437
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19433
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19438
  br i1 %3, label %5, label %4, !dbg !19439

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19440
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19440
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19440
  unreachable, !dbg !19440

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19437
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19433
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19441
  call void @llvm.dbg.value(metadata i32 undef, metadata !19427, metadata !DIExpression()), !dbg !19431
  store i32 %0, i32* @announce_remaining, align 4, !dbg !19431
  call void @llvm.dbg.value(metadata i32 undef, metadata !19427, metadata !DIExpression()), !dbg !19431
  %6 = tail call fastcc %struct._timeout* @first() #27, !dbg !19442
  %7 = icmp eq %struct._timeout* %6, null, !dbg !19443
  br i1 %7, label %37, label %8, !dbg !19444

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !19431
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !19445
  %14 = load i64, i64* %13, align 8, !dbg !19445
  %15 = sext i32 %11 to i64, !dbg !19446
  %16 = icmp sgt i64 %14, %15, !dbg !19447
  br i1 %16, label %35, label %17, !dbg !19448

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !19428, metadata !DIExpression()), !dbg !19449
  %18 = trunc i64 %14 to i32, !dbg !19450
  call void @llvm.dbg.value(metadata i32 %18, metadata !19430, metadata !DIExpression()), !dbg !19449
  %19 = sext i32 %18 to i64, !dbg !19451
  %20 = load i64, i64* @curr_tick, align 8, !dbg !19452
  %21 = add i64 %20, %19, !dbg !19452
  store i64 %21, i64* @curr_tick, align 8, !dbg !19452
  store i64 0, i64* %13, align 8, !dbg !19453
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #27, !dbg !19454
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19016, metadata !DIExpression()) #25, !dbg !19455
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19457
  br i1 %22, label %24, label %23, !dbg !19458

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19459
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.435, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19459
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19459
  unreachable, !dbg !19459

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !19011, metadata !DIExpression()) #25, !dbg !19455
  call void @llvm.dbg.value(metadata i32 %12, metadata !19025, metadata !DIExpression()) #25, !dbg !19460
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !19462, !srcloc !19031
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !19463
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !19463
  tail call void %26(%struct._timeout* noundef nonnull %9) #26, !dbg !19464
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18938, metadata !DIExpression()) #25, !dbg !19465
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19467, !srcloc !18953
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19469
  call void @llvm.dbg.value(metadata i32 undef, metadata !18951, metadata !DIExpression()) #25, !dbg !19469
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19465
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19470
  br i1 %28, label %30, label %29, !dbg !19471

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19472
  unreachable, !dbg !19472

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19469
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19465
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19473
  call void @llvm.dbg.value(metadata i32 undef, metadata !19427, metadata !DIExpression()), !dbg !19431
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !19474
  %32 = sub nsw i32 %31, %18, !dbg !19474
  store i32 %32, i32* @announce_remaining, align 4, !dbg !19431
  call void @llvm.dbg.value(metadata i32 undef, metadata !19427, metadata !DIExpression()), !dbg !19431
  %33 = tail call fastcc %struct._timeout* @first() #27, !dbg !19442
  %34 = icmp eq %struct._timeout* %33, null, !dbg !19443
  br i1 %34, label %37, label %8, !dbg !19444, !llvm.loop !19475

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !19477
  store i64 %36, i64* %13, align 8, !dbg !19477
  br label %41, !dbg !19480

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !19431
  %40 = sext i32 %39 to i64, !dbg !19481
  br label %41, !dbg !19481

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !19481
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !19482
  %45 = add i64 %44, %42, !dbg !19482
  store i64 %45, i64* @curr_tick, align 8, !dbg !19482
  store i32 0, i32* @announce_remaining, align 4, !dbg !19483
  %46 = tail call fastcc i32 @next_timeout() #27, !dbg !19484
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #26, !dbg !19485
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19016, metadata !DIExpression()) #25, !dbg !19486
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19488
  br i1 %47, label %49, label %48, !dbg !19489

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19490
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.435, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19490
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19490
  unreachable, !dbg !19490

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !19431
  call void @llvm.dbg.value(metadata i32 %50, metadata !19011, metadata !DIExpression()) #25, !dbg !19486
  call void @llvm.dbg.value(metadata i32 %50, metadata !19025, metadata !DIExpression()) #25, !dbg !19491
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #25, !dbg !19493, !srcloc !19031
  ret void, !dbg !19494
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !19495 {
  call void @llvm.dbg.value(metadata i64 0, metadata !19499, metadata !DIExpression()), !dbg !19503
  call void @llvm.dbg.value(metadata i32 0, metadata !19500, metadata !DIExpression()), !dbg !19504
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !18938, metadata !DIExpression()) #25, !dbg !19505
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19507, !srcloc !18953
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19509
  call void @llvm.dbg.value(metadata i32 undef, metadata !18951, metadata !DIExpression()) #25, !dbg !19509
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19505
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19510
  br i1 %2, label %4, label %3, !dbg !19511

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.428, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19512
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.430, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19512
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 148) #26, !dbg !19512
  unreachable, !dbg !19512

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !18950, metadata !DIExpression()) #25, !dbg !19509
  call void @llvm.dbg.value(metadata i32 undef, metadata !18944, metadata !DIExpression()) #25, !dbg !19505
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19513
  call void @llvm.dbg.value(metadata i32 undef, metadata !19502, metadata !DIExpression()), !dbg !19504
  call void @llvm.dbg.value(metadata i64 0, metadata !19499, metadata !DIExpression()), !dbg !19503
  call void @llvm.dbg.value(metadata i32 undef, metadata !19500, metadata !DIExpression()), !dbg !19504
  %5 = load i64, i64* @curr_tick, align 8, !dbg !19514
  %6 = tail call fastcc i32 @elapsed.431() #27, !dbg !19517
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !19499, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !19503
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19518
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !19016, metadata !DIExpression()) #25, !dbg !19518
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19520
  br i1 %7, label %9, label %8, !dbg !19521

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.424, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.434, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19522
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.435, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !19522
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.429, i32 0, i32 0), i32 noundef 194) #26, !dbg !19522
  unreachable, !dbg !19522

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !19507
  call void @llvm.dbg.value(metadata i32 %10, metadata !18950, metadata !DIExpression()) #25, !dbg !19509
  call void @llvm.dbg.value(metadata i32 %10, metadata !18944, metadata !DIExpression()) #25, !dbg !19505
  call void @llvm.dbg.value(metadata i32 %10, metadata !19502, metadata !DIExpression()), !dbg !19504
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !19499, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !19503
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !19499, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !19503
  call void @llvm.dbg.value(metadata i32 undef, metadata !19011, metadata !DIExpression()) #25, !dbg !19518
  call void @llvm.dbg.value(metadata i32 undef, metadata !19025, metadata !DIExpression()) #25, !dbg !19523
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #25, !dbg !19525, !srcloc !19031
  call void @llvm.dbg.value(metadata i32 undef, metadata !19500, metadata !DIExpression()), !dbg !19504
  %11 = sext i32 %6 to i64, !dbg !19517
  %12 = add i64 %5, %11, !dbg !19526
  ret i64 %12, !dbg !19527
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !19528 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !19529
  %2 = trunc i64 %1 to i32, !dbg !19530
  ret i32 %2, !dbg !19531
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !19532 {
  %1 = tail call i64 @sys_clock_tick_get() #27, !dbg !19533
  ret i64 %1, !dbg !19534
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !19535 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19537, metadata !DIExpression()), !dbg !19544
  %2 = icmp eq i32 %0, 0, !dbg !19545
  br i1 %2, label %10, label %3, !dbg !19547

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !19548
  call void @llvm.dbg.value(metadata i32 %4, metadata !19538, metadata !DIExpression()), !dbg !19544
  %5 = shl i32 %0, 5, !dbg !19549
  call void @llvm.dbg.value(metadata i32 %5, metadata !19539, metadata !DIExpression()), !dbg !19544
  br label %6, !dbg !19550

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #27, !dbg !19551
  call void @llvm.dbg.value(metadata i32 %7, metadata !19540, metadata !DIExpression()), !dbg !19552
  %8 = sub i32 %7, %4, !dbg !19553
  %9 = icmp ult i32 %8, %5, !dbg !19555
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !19556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !19557 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #27, !dbg !19558
  ret i32 %1, !dbg !19559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !19560 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !19562
  ret i32 %1, !dbg !19563
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !19564 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !19568, metadata !DIExpression()), !dbg !19570
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !19571

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #27, !dbg !19572
  br label %14, !dbg !19576

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !19569, metadata !DIExpression()), !dbg !19570
  %6 = icmp slt i64 %2, -1, !dbg !19577
  br i1 %6, label %7, label %9, !dbg !19580

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !19581
  br label %14, !dbg !19582

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #27, !dbg !19584
  %11 = icmp ugt i64 %2, 1, !dbg !19585
  %12 = select i1 %11, i64 %2, i64 1, !dbg !19585
  %13 = add nsw i64 %10, %12, !dbg !19586
  br label %14, !dbg !19587

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !19588
  ret i64 %15, !dbg !19589
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_free(i8* noundef %0) local_unnamed_addr #1 !dbg !19590 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !19592, metadata !DIExpression()), !dbg !19596
  %2 = icmp eq i8* %0, null, !dbg !19597
  br i1 %2, label %7, label %3, !dbg !19599

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !19593, metadata !DIExpression()), !dbg !19596
  %4 = getelementptr inbounds i8, i8* %0, i32 -4, !dbg !19600
  %5 = bitcast i8* %4 to %struct.k_heap**, !dbg !19600
  call void @llvm.dbg.value(metadata %struct.k_heap** %5, metadata !19593, metadata !DIExpression()), !dbg !19596
  call void @llvm.dbg.value(metadata i8* %4, metadata !19592, metadata !DIExpression()), !dbg !19596
  %6 = load %struct.k_heap*, %struct.k_heap** %5, align 4, !dbg !19602
  tail call void @k_heap_free(%struct.k_heap* noundef %6, i8* noundef nonnull %4) #26, !dbg !19603
  br label %7, !dbg !19604

7:                                                ; preds = %3, %1
  ret void, !dbg !19605
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19610, metadata !DIExpression()), !dbg !19613
  call void @llvm.dbg.value(metadata i32 %1, metadata !19611, metadata !DIExpression()), !dbg !19613
  %3 = icmp ugt i32 %0, 3, !dbg !19614
  %4 = and i32 %0, 3, !dbg !19614
  %5 = icmp eq i32 %4, 0, !dbg !19614
  %6 = and i1 %3, %5, !dbg !19614
  br i1 %6, label %8, label %7, !dbg !19614

7:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.458, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.459, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.460, i32 0, i32 0), i32 noundef 68) #26, !dbg !19617
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3.461, i32 0, i32 0)) #26, !dbg !19617
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.460, i32 0, i32 0), i32 noundef 68) #26, !dbg !19617
  unreachable, !dbg !19617

8:                                                ; preds = %2
  %9 = tail call i32 @llvm.ctpop.i32(i32 %0), !dbg !19619, !range !5450
  %10 = icmp ult i32 %9, 2, !dbg !19619
  br i1 %10, label %12, label %11, !dbg !19622

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.458, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.462, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.460, i32 0, i32 0), i32 noundef 71) #26, !dbg !19623
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5.463, i32 0, i32 0)) #26, !dbg !19623
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.460, i32 0, i32 0), i32 noundef 71) #26, !dbg !19623
  unreachable, !dbg !19623

12:                                               ; preds = %8
  %13 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull @_system_heap, i32 noundef %0, i32 noundef %1) #27, !dbg !19625
  call void @llvm.dbg.value(metadata i8* %13, metadata !19612, metadata !DIExpression()), !dbg !19613
  ret i8* %13, !dbg !19626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !19627 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19631, metadata !DIExpression()), !dbg !19637
  call void @llvm.dbg.value(metadata i32 %1, metadata !19632, metadata !DIExpression()), !dbg !19637
  call void @llvm.dbg.value(metadata i32 %2, metadata !19633, metadata !DIExpression()), !dbg !19637
  store i32 %2, i32* %4, align 4
  call void @llvm.dbg.value(metadata i32* %4, metadata !19633, metadata !DIExpression(DW_OP_deref)), !dbg !19637
  %5 = call fastcc zeroext i1 @size_add_overflow(i32 noundef %2, i32* noundef nonnull %4) #27, !dbg !19638
  br i1 %5, label %21, label %6, !dbg !19640

6:                                                ; preds = %3
  %7 = or i32 %1, 4, !dbg !19641
  call void @llvm.dbg.value(metadata i32 %7, metadata !19636, metadata !DIExpression()), !dbg !19637
  %8 = load i32, i32* %4, align 4, !dbg !19642
  call void @llvm.dbg.value(metadata i32 %8, metadata !19633, metadata !DIExpression()), !dbg !19637
  %9 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %7, i32 noundef %8, [1 x i64] zeroinitializer) #26, !dbg !19643
  call void @llvm.dbg.value(metadata i8* %9, metadata !19634, metadata !DIExpression()), !dbg !19637
  %10 = icmp eq i8* %9, null, !dbg !19644
  br i1 %10, label %21, label %11, !dbg !19646

11:                                               ; preds = %6
  %12 = bitcast i8* %9 to %struct.k_heap**, !dbg !19647
  call void @llvm.dbg.value(metadata %struct.k_heap** %12, metadata !19635, metadata !DIExpression()), !dbg !19637
  store %struct.k_heap* %0, %struct.k_heap** %12, align 4, !dbg !19648
  %13 = getelementptr inbounds i8, i8* %9, i32 4, !dbg !19649
  call void @llvm.dbg.value(metadata i8* %13, metadata !19635, metadata !DIExpression()), !dbg !19637
  call void @llvm.dbg.value(metadata i8* %13, metadata !19634, metadata !DIExpression()), !dbg !19637
  %14 = icmp eq i32 %1, 0, !dbg !19650
  br i1 %14, label %21, label %15, !dbg !19650

15:                                               ; preds = %11
  %16 = ptrtoint i8* %13 to i32, !dbg !19650
  %17 = add i32 %1, -1, !dbg !19650
  %18 = and i32 %17, %16, !dbg !19650
  %19 = icmp eq i32 %18, 0, !dbg !19650
  br i1 %19, label %21, label %20, !dbg !19653

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.458, i32 0, i32 0), i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.464, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.460, i32 0, i32 0), i32 noundef 38) #26, !dbg !19654
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7.465, i32 0, i32 0), i8* noundef nonnull %13, i32 noundef %1) #26, !dbg !19654
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.460, i32 0, i32 0), i32 noundef 38) #26, !dbg !19654
  unreachable, !dbg !19654

21:                                               ; preds = %11, %15, %6, %3
  %22 = phi i8* [ null, %3 ], [ null, %6 ], [ %13, %15 ], [ %13, %11 ], !dbg !19637
  ret i8* %22, !dbg !19656
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_add_overflow(i32 noundef %0, i32* nocapture noundef writeonly %1) unnamed_addr #23 !dbg !19657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19659, metadata !DIExpression()), !dbg !19662
  call void @llvm.dbg.value(metadata i32 4, metadata !19660, metadata !DIExpression()), !dbg !19662
  call void @llvm.dbg.value(metadata i32* %1, metadata !19661, metadata !DIExpression()), !dbg !19662
  %3 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 4), !dbg !19663
  %4 = extractvalue { i32, i1 } %3, 1, !dbg !19663
  %5 = extractvalue { i32, i1 } %3, 0, !dbg !19663
  store i32 %5, i32* %1, align 4, !dbg !19663
  ret i1 %4, !dbg !19664
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_malloc(i32 noundef %0) local_unnamed_addr #1 !dbg !19665 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19667, metadata !DIExpression()), !dbg !19669
  %2 = tail call i8* @k_aligned_alloc(i32 noundef 4, i32 noundef %0) #27, !dbg !19670
  call void @llvm.dbg.value(metadata i8* %2, metadata !19668, metadata !DIExpression()), !dbg !19669
  ret i8* %2, !dbg !19671
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_calloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19672 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !19674, metadata !DIExpression()), !dbg !19678
  call void @llvm.dbg.value(metadata i32 %1, metadata !19675, metadata !DIExpression()), !dbg !19678
  %4 = bitcast i32* %3 to i8*, !dbg !19679
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #25, !dbg !19679
  call void @llvm.dbg.value(metadata i32* %3, metadata !19677, metadata !DIExpression(DW_OP_deref)), !dbg !19678
  %5 = call fastcc zeroext i1 @size_mul_overflow.468(i32 noundef %0, i32 noundef %1, i32* noundef nonnull %3) #27, !dbg !19680
  br i1 %5, label %12, label %6, !dbg !19682

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4, !dbg !19683
  call void @llvm.dbg.value(metadata i32 %7, metadata !19677, metadata !DIExpression()), !dbg !19678
  %8 = tail call i8* @k_malloc(i32 noundef %7) #27, !dbg !19684
  call void @llvm.dbg.value(metadata i8* %8, metadata !19676, metadata !DIExpression()), !dbg !19678
  %9 = icmp eq i8* %8, null, !dbg !19685
  br i1 %9, label %12, label %10, !dbg !19687

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 %7, metadata !19677, metadata !DIExpression()), !dbg !19678
  %11 = tail call i8* @memset(i8* noundef nonnull %8, i32 noundef 0, i32 noundef %7) #26, !dbg !19688
  br label %12, !dbg !19690

12:                                               ; preds = %10, %6, %2
  %13 = phi i8* [ null, %2 ], [ null, %6 ], [ %8, %10 ], !dbg !19678
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #25, !dbg !19691
  ret i8* %13, !dbg !19691
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow.468(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !19692 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19694, metadata !DIExpression()), !dbg !19697
  call void @llvm.dbg.value(metadata i32 %1, metadata !19695, metadata !DIExpression()), !dbg !19697
  call void @llvm.dbg.value(metadata i32* %2, metadata !19696, metadata !DIExpression()), !dbg !19697
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !19698
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !19698
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !19698
  store i32 %6, i32* %2, align 4, !dbg !19698
  ret i1 %5, !dbg !19699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_thread_system_pool_assign(%struct.k_thread* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !19700 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !19774, metadata !DIExpression()), !dbg !19775
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !19776
  store %struct.k_heap* @_system_heap, %struct.k_heap** %2, align 8, !dbg !19777
  ret void, !dbg !19778
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_thread_aligned_alloc(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !19779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !19781, metadata !DIExpression()), !dbg !19785
  call void @llvm.dbg.value(metadata i32 %1, metadata !19782, metadata !DIExpression()), !dbg !19785
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !19786
  br i1 %3, label %9, label %4, !dbg !19788

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !19789
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, !dbg !19791
  %7 = load %struct.k_heap*, %struct.k_heap** %6, align 8, !dbg !19791
  call void @llvm.dbg.value(metadata %struct.k_heap* %7, metadata !19784, metadata !DIExpression()), !dbg !19785
  %8 = icmp eq %struct.k_heap* %7, null, !dbg !19792
  br i1 %8, label %12, label %9, !dbg !19794

9:                                                ; preds = %2, %4
  %10 = phi %struct.k_heap* [ %7, %4 ], [ @_system_heap, %2 ]
  %11 = tail call fastcc i8* @z_heap_aligned_alloc(%struct.k_heap* noundef nonnull %10, i32 noundef %0, i32 noundef %1) #27, !dbg !19795
  call void @llvm.dbg.value(metadata i8* %11, metadata !19783, metadata !DIExpression()), !dbg !19785
  br label %12, !dbg !19797

12:                                               ; preds = %4, %9
  %13 = phi i8* [ %11, %9 ], [ null, %4 ], !dbg !19798
  call void @llvm.dbg.value(metadata i8* %13, metadata !19783, metadata !DIExpression()), !dbg !19785
  ret i8* %13, !dbg !19799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @boot_banner() local_unnamed_addr #4 !dbg !19800 {
  ret void, !dbg !19802
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !19803 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !19805, metadata !DIExpression()), !dbg !19827
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !19806, metadata !DIExpression()), !dbg !19828
  br i1 icmp ugt (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %2, label %3, !dbg !19829

2:                                                ; preds = %7, %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.476, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4.477, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.478, i32 0, i32 0), i32 noundef 24) #26, !dbg !19833
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.479, i32 0, i32 0)) #26, !dbg !19833
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.478, i32 0, i32 0), i32 noundef 24) #26, !dbg !19833
  unreachable, !dbg !19833

3:                                                ; preds = %1, %7
  %4 = phi %struct.k_heap* [ %12, %7 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !19806, metadata !DIExpression()), !dbg !19828
  %5 = icmp ult %struct.k_heap* %4, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19836
  br i1 %5, label %7, label %6, !dbg !19837

6:                                                ; preds = %3
  ret i32 0, !dbg !19838

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !19839
  %9 = load i8*, i8** %8, align 4, !dbg !19839
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !19842
  %11 = load i32, i32* %10, align 4, !dbg !19842
  tail call void @k_heap_init(%struct.k_heap* noundef %4, i8* noundef %9, i32 noundef %11) #27, !dbg !19843
  %12 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !19844
  call void @llvm.dbg.value(metadata %struct.k_heap* %12, metadata !19806, metadata !DIExpression()), !dbg !19828
  %13 = icmp ugt %struct.k_heap* %12, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !19845
  br i1 %13, label %2, label %3, !dbg !19829, !llvm.loop !19846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !19848 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19852, metadata !DIExpression()), !dbg !19855
  call void @llvm.dbg.value(metadata i8* %1, metadata !19853, metadata !DIExpression()), !dbg !19855
  call void @llvm.dbg.value(metadata i32 %2, metadata !19854, metadata !DIExpression()), !dbg !19855
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !19856
  tail call fastcc void @z_waitq_init.480(%struct._wait_q_t* noundef nonnull %4) #27, !dbg !19857
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !19858
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #26, !dbg !19859
  ret void, !dbg !19860
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.480(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !19861 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !19866, metadata !DIExpression()), !dbg !19867
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !19868
  tail call fastcc void @sys_dlist_init.481(%struct._dnode* noundef %2) #27, !dbg !19869
  ret void, !dbg !19870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.481(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !19871 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !19876, metadata !DIExpression()), !dbg !19877
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !19878
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !19879
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !19880
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !19881
  ret void, !dbg !19882
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !19883 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !19894, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19891, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata i32 %1, metadata !19892, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata i32 %2, metadata !19893, metadata !DIExpression()), !dbg !19904
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #26, !dbg !19905
  call void @llvm.dbg.value(metadata i64 %6, metadata !19896, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata i8* null, metadata !19897, metadata !DIExpression()), !dbg !19904
  %7 = icmp eq i64 %5, -1, !dbg !19906
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !19906
  call void @llvm.dbg.value(metadata i64 %8, metadata !19896, metadata !DIExpression()), !dbg !19904
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !19907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19908, metadata !DIExpression()) #25, !dbg !19915
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19917, !srcloc !19923
  call void @llvm.dbg.value(metadata i32 undef, metadata !19920, metadata !DIExpression()) #25, !dbg !19924
  call void @llvm.dbg.value(metadata i32 undef, metadata !19921, metadata !DIExpression()) #25, !dbg !19924
  call void @llvm.dbg.value(metadata i32 undef, metadata !19914, metadata !DIExpression()) #25, !dbg !19915
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19925
  br i1 %11, label %13, label %12, !dbg !19928

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.476, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.484, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 148) #26, !dbg !19929
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.486, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !19929
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 148) #26, !dbg !19929
  unreachable, !dbg !19929

13:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !19920, metadata !DIExpression()) #25, !dbg !19924
  call void @llvm.dbg.value(metadata i32 undef, metadata !19914, metadata !DIExpression()) #25, !dbg !19915
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19931
  call void @llvm.dbg.value(metadata i32 undef, metadata !19898, metadata !DIExpression()), !dbg !19904
  %14 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !19932, !srcloc !19941
  call void @llvm.dbg.value(metadata i32 %14, metadata !19935, metadata !DIExpression()) #25, !dbg !19942
  %15 = icmp eq i32 %14, 0, !dbg !19943
  %16 = icmp eq i64 %5, 0, !dbg !19944
  %17 = select i1 %15, i1 true, i1 %16, !dbg !19944
  br i1 %17, label %18, label %25, !dbg !19944

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !19897, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata i8 0, metadata !19903, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata i32 undef, metadata !19898, metadata !DIExpression()), !dbg !19904
  %20 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !19945
  call void @llvm.dbg.value(metadata i8* %20, metadata !19897, metadata !DIExpression()), !dbg !19904
  %21 = tail call i64 @sys_clock_tick_get() #26, !dbg !19947
  call void @llvm.dbg.value(metadata i64 %21, metadata !19895, metadata !DIExpression()), !dbg !19904
  %22 = icmp eq i8* %20, null, !dbg !19948
  br i1 %22, label %23, label %43, !dbg !19950

23:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !19898, metadata !DIExpression()), !dbg !19904
  %24 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %26, !dbg !19950

25:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.476, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.487, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.478, i32 0, i32 0), i32 noundef 76) #26, !dbg !19951
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.488, i32 0, i32 0)) #26, !dbg !19951
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.478, i32 0, i32 0), i32 noundef 76) #26, !dbg !19951
  unreachable, !dbg !19951

26:                                               ; preds = %23, %39
  %27 = phi i64 [ %21, %23 ], [ %41, %39 ]
  %28 = phi { i32, i32 } [ %10, %23 ], [ %36, %39 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !19903, metadata !DIExpression()), !dbg !19904
  %29 = sub nsw i64 %8, %27, !dbg !19953
  %30 = icmp slt i64 %29, 1, !dbg !19954
  br i1 %30, label %43, label %31, !dbg !19955

31:                                               ; preds = %26
  %32 = extractvalue { i32, i32 } %28, 0, !dbg !19904
  call void @llvm.dbg.value(metadata i8 undef, metadata !19903, metadata !DIExpression()), !dbg !19904
  %33 = insertvalue [1 x i32] poison, i32 %32, 0, !dbg !19956
  %34 = insertvalue [1 x i64] poison, i64 %29, 0, !dbg !19956
  %35 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %33, %struct._wait_q_t* noundef nonnull %24, [1 x i64] %34) #26, !dbg !19956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19908, metadata !DIExpression()) #25, !dbg !19957
  %36 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !19959, !srcloc !19923
  call void @llvm.dbg.value(metadata i32 undef, metadata !19920, metadata !DIExpression()) #25, !dbg !19961
  call void @llvm.dbg.value(metadata i32 undef, metadata !19921, metadata !DIExpression()) #25, !dbg !19961
  call void @llvm.dbg.value(metadata i32 undef, metadata !19914, metadata !DIExpression()) #25, !dbg !19957
  %37 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19962
  br i1 %37, label %39, label %38, !dbg !19963

38:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.476, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.484, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 148) #26, !dbg !19964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.486, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !19964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 148) #26, !dbg !19964
  unreachable, !dbg !19964

39:                                               ; preds = %31
  call void @llvm.dbg.value(metadata i8 undef, metadata !19903, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata i32 undef, metadata !19920, metadata !DIExpression()) #25, !dbg !19961
  call void @llvm.dbg.value(metadata i32 undef, metadata !19914, metadata !DIExpression()) #25, !dbg !19957
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19965
  call void @llvm.dbg.value(metadata i32 undef, metadata !19898, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata i8* null, metadata !19897, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata i32 undef, metadata !19898, metadata !DIExpression()), !dbg !19904
  %40 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %19, i32 noundef %1, i32 noundef %2) #26, !dbg !19945
  call void @llvm.dbg.value(metadata i8* %40, metadata !19897, metadata !DIExpression()), !dbg !19904
  %41 = tail call i64 @sys_clock_tick_get() #26, !dbg !19947
  call void @llvm.dbg.value(metadata i64 %41, metadata !19895, metadata !DIExpression()), !dbg !19904
  %42 = icmp eq i8* %40, null, !dbg !19948
  br i1 %42, label %26, label %43, !dbg !19950, !llvm.loop !19966

43:                                               ; preds = %39, %26, %18
  %44 = phi { i32, i32 } [ %10, %18 ], [ %28, %26 ], [ %36, %39 ]
  %45 = phi i8* [ %20, %18 ], [ null, %26 ], [ %40, %39 ], !dbg !19945
  call void @llvm.dbg.value(metadata i8* %45, metadata !19897, metadata !DIExpression()), !dbg !19904
  call void @llvm.dbg.value(metadata i32 undef, metadata !19969, metadata !DIExpression()) #25, !dbg !19975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !19974, metadata !DIExpression()) #25, !dbg !19975
  %46 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %9) #26, !dbg !19977
  br i1 %46, label %48, label %47, !dbg !19980

47:                                               ; preds = %43
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.476, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.489, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 194) #26, !dbg !19981
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.490, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %9) #26, !dbg !19981
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 194) #26, !dbg !19981
  unreachable, !dbg !19981

48:                                               ; preds = %43
  %49 = extractvalue { i32, i32 } %44, 0, !dbg !19904
  call void @llvm.dbg.value(metadata i32 %49, metadata !19969, metadata !DIExpression()) #25, !dbg !19975
  call void @llvm.dbg.value(metadata i32 %49, metadata !19983, metadata !DIExpression()) #25, !dbg !19986
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %49) #25, !dbg !19988, !srcloc !19989
  ret i8* %45, !dbg !19990
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !19991 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !19997, metadata !DIExpression()), !dbg !19999
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !19995, metadata !DIExpression()), !dbg !19999
  call void @llvm.dbg.value(metadata i32 %1, metadata !19996, metadata !DIExpression()), !dbg !19999
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #27, !dbg !20000
  call void @llvm.dbg.value(metadata i8* %4, metadata !19998, metadata !DIExpression()), !dbg !19999
  ret i8* %4, !dbg !20001
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !20002 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !20006, metadata !DIExpression()), !dbg !20009
  call void @llvm.dbg.value(metadata i8* %1, metadata !20007, metadata !DIExpression()), !dbg !20009
  %3 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !20010
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19908, metadata !DIExpression()) #25, !dbg !20011
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !20013, !srcloc !19923
  call void @llvm.dbg.value(metadata i32 undef, metadata !19920, metadata !DIExpression()) #25, !dbg !20015
  call void @llvm.dbg.value(metadata i32 undef, metadata !19921, metadata !DIExpression()) #25, !dbg !20015
  call void @llvm.dbg.value(metadata i32 undef, metadata !19914, metadata !DIExpression()) #25, !dbg !20011
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !20016
  br i1 %5, label %7, label %6, !dbg !20017

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.476, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.484, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 148) #26, !dbg !20018
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.486, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !20018
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 148) #26, !dbg !20018
  unreachable, !dbg !20018

7:                                                ; preds = %2
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !20013
  call void @llvm.dbg.value(metadata i32 %8, metadata !19920, metadata !DIExpression()) #25, !dbg !20015
  call void @llvm.dbg.value(metadata i32 %8, metadata !19914, metadata !DIExpression()) #25, !dbg !20011
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !20019
  call void @llvm.dbg.value(metadata i32 %8, metadata !20008, metadata !DIExpression()), !dbg !20009
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !20020
  tail call void @sys_heap_free(%struct.sys_heap* noundef %9, i8* noundef %1) #26, !dbg !20021
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !20022
  %11 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %10) #26, !dbg !20024
  %12 = icmp eq i32 %11, 0, !dbg !20025
  br i1 %12, label %15, label %13, !dbg !20026

13:                                               ; preds = %7
  %14 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !20027
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %3, [1 x i32] %14) #26, !dbg !20027
  br label %19, !dbg !20029

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !19969, metadata !DIExpression()) #25, !dbg !20030
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %3, metadata !19974, metadata !DIExpression()) #25, !dbg !20030
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull %3) #26, !dbg !20033
  br i1 %16, label %18, label %17, !dbg !20034

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.476, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.489, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 194) #26, !dbg !20035
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10.490, i32 0, i32 0), %struct.k_spinlock* noundef nonnull %3) #26, !dbg !20035
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.485, i32 0, i32 0), i32 noundef 194) #26, !dbg !20035
  unreachable, !dbg !20035

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %8, metadata !19969, metadata !DIExpression()) #25, !dbg !20030
  call void @llvm.dbg.value(metadata i32 %8, metadata !19983, metadata !DIExpression()) #25, !dbg !20036
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !20038, !srcloc !19989
  br label %19

19:                                               ; preds = %18, %13
  ret void, !dbg !20039
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { argmemonly nofree nounwind willreturn writeonly }
attributes #15 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1341, !2, !3040, !27, !344, !547, !736, !759, !3042, !3044, !3077, !3111, !3113, !768, !831, !3115, !3118, !3129, !3175, !3177, !3205, !3233, !3276, !3347, !3392, !860, !1000, !3420, !1036, !1046, !1071, !1179, !1191, !1371, !3425, !1489, !1555, !1824, !2064, !3446, !2179, !2266, !3448, !3519, !3568, !2301, !3571, !2308, !2678, !3589, !3591, !2698, !2808, !3697, !2925, !2966, !3700, !3009}
!llvm.ident = !{!3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702, !3702}
!llvm.module.flags = !{!3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_consumer_sub", scope: !27, file: !117, line: 13, type: !126, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !114, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !104, !108, !111, !112}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !113)
!113 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!114 = !{!25, !115, !295, !326, !330, !335, !340}
!115 = !DIGlobalVariableExpression(var: !116, expr: !DIExpression())
!116 = distinct !DIGlobalVariable(name: "consumer_sub", scope: !27, file: !117, line: 13, type: !118, isLocal: false, isDefinition: true, align: 32)
!117 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/consumer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !120)
!119 = !DIFile(filename: "zephyr/include/zephyr/zbus/zbus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = !{!121, !123, !168}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !118, file: !119, line: 91, baseType: !122, size: 8)
!122 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !118, file: !119, line: 93, baseType: !124, size: 32, offset: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = !{!129, !150, !155, !158, !159, !161, !162, !163, !164, !165}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !126, file: !127, line: 4206, baseType: !130, size: 64)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !132)
!131 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !133)
!133 = !{!134}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !132, file: !131, line: 232, baseType: !135, size: 64)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !137)
!136 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !138)
!138 = !{!139, !145}
!139 = !DIDerivedType(tag: DW_TAG_member, scope: !137, file: !136, line: 38, baseType: !140, size: 32)
!140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !137, file: !136, line: 38, size: 32, elements: !141)
!141 = !{!142, !144}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !140, file: !136, line: 39, baseType: !143, size: 32)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !140, file: !136, line: 40, baseType: !143, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, scope: !137, file: !136, line: 42, baseType: !146, size: 32, offset: 32)
!146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !137, file: !136, line: 42, size: 32, elements: !147)
!147 = !{!148, !149}
!148 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !146, file: !136, line: 43, baseType: !143, size: 32)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !146, file: !136, line: 44, baseType: !143, size: 32)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !126, file: !127, line: 4208, baseType: !151, size: 32, offset: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !153)
!152 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!153 = !{!154}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !151, file: !152, line: 52, baseType: !22, size: 32)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !126, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !157, line: 214, baseType: !32)
!157 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !126, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !126, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !126, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !126, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !126, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !126, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !126, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!166 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !167)
!167 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !118, file: !119, line: 96, baseType: !169, size: 32, offset: 64)
!169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 32)
!171 = !DISubroutineType(types: !172)
!172 = !{null, !173}
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !176)
!176 = !{!177, !179, !183, !185, !186, !191, !290}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !175, file: !119, line: 32, baseType: !178, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !108)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !175, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !182)
!182 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !175, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !175, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !175, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !188)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DISubroutineType(types: !190)
!190 = !{!122, !13, !156}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !175, file: !119, line: 56, baseType: !192, size: 32, offset: 160)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !194)
!194 = !{!195, !196, !288, !289}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !193, file: !127, line: 2722, baseType: !130, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !193, file: !127, line: 2724, baseType: !197, size: 32, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 32)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !200)
!199 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!200 = !{!201, !246, !259, !260, !261, !262, !268, !283}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !198, file: !199, line: 247, baseType: !202, size: 384)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !203)
!203 = !{!204, !218, !220, !221, !222, !233, !234, !235}
!204 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !199, line: 60, baseType: !205, size: 64)
!205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !202, file: !199, line: 60, size: 64, elements: !206)
!206 = !{!207, !209}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !205, file: !199, line: 61, baseType: !208, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !137)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !205, file: !199, line: 62, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !212)
!211 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!212 = !{!213}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !210, file: !211, line: 50, baseType: !214, size: 64)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !216)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!216 = !{!217}
!217 = !DISubrange(count: 2)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !202, file: !199, line: 68, baseType: !219, size: 32, offset: 64)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !202, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !202, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!222 = !DIDerivedType(tag: DW_TAG_member, scope: !202, file: !199, line: 90, baseType: !223, size: 16, offset: 112)
!223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !202, file: !199, line: 90, size: 16, elements: !224)
!224 = !{!225, !232}
!225 = !DIDerivedType(tag: DW_TAG_member, scope: !223, file: !199, line: 91, baseType: !226, size: 16)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !223, file: !199, line: 91, size: 16, elements: !227)
!227 = !{!228, !231}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !226, file: !199, line: 96, baseType: !229, size: 8)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !230)
!230 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !226, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !223, file: !199, line: 100, baseType: !181, size: 16)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !202, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !202, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !202, file: !199, line: 131, baseType: !236, size: 192, offset: 192)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !237)
!237 = !{!238, !239, !245}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !236, file: !131, line: 245, baseType: !208, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !236, file: !131, line: 246, baseType: !240, size: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DISubroutineType(types: !243)
!243 = !{null, !244}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 32)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !236, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !198, file: !199, line: 250, baseType: !247, size: 288, offset: 384)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !249)
!248 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!249 = !{!250, !251, !252, !253, !254, !255, !256, !257, !258}
!250 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !247, file: !248, line: 26, baseType: !111, size: 32)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !247, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !247, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !247, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !247, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !247, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !247, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !247, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !247, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !198, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !198, file: !199, line: 256, baseType: !130, size: 64, offset: 704)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !198, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !198, file: !199, line: 300, baseType: !263, size: 96, offset: 800)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !264)
!264 = !{!265, !266, !267}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !263, file: !199, line: 153, baseType: !22, size: 32)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !263, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !263, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !198, file: !199, line: 325, baseType: !269, size: 32, offset: 896)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !271)
!271 = !{!272, !281, !282}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !270, file: !127, line: 5074, baseType: !273, size: 96)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !275)
!274 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!275 = !{!276, !279, !280}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !273, file: !274, line: 57, baseType: !277, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !274, line: 57, flags: DIFlagFwdDecl)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !273, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !273, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !270, file: !127, line: 5075, baseType: !130, size: 64, offset: 96)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !270, file: !127, line: 5076, baseType: !151, size: 32, offset: 160)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !198, file: !199, line: 343, baseType: !284, size: 64, offset: 928)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !285)
!285 = !{!286, !287}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !284, file: !248, line: 63, baseType: !111, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !284, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !193, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !193, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !175, file: !119, line: 67, baseType: !291, size: 32, offset: 192)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_k_thread_data_consumer_thread_id", scope: !27, file: !117, line: 44, type: !297, isLocal: false, isDefinition: true, align: 32)
!297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !298)
!298 = !{!299, !300, !308, !309, !314, !315, !316, !317, !318, !319, !321, !325}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !297, file: !127, line: 621, baseType: !197, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !297, file: !127, line: 622, baseType: !301, size: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !304)
!303 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !306)
!305 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !304, file: !305, line: 48, baseType: !110, size: 8)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !297, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !297, file: !127, line: 624, baseType: !310, size: 32, offset: 96)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !303, line: 46, baseType: !311)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 32)
!312 = !DISubroutineType(types: !313)
!313 = !{null, !102, !102, !102}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !297, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !297, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !297, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !297, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !297, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !297, file: !127, line: 630, baseType: !320, size: 32, offset: 288)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !297, file: !127, line: 631, baseType: !322, size: 32, offset: 320)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!323 = !DISubroutineType(types: !324)
!324 = !{null}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !297, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!326 = !DIGlobalVariableExpression(var: !327, expr: !DIExpression())
!327 = distinct !DIGlobalVariable(name: "consumer_thread_id", scope: !27, file: !117, line: 44, type: !328, isLocal: false, isDefinition: true)
!328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !329)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !197)
!330 = !DIGlobalVariableExpression(var: !331, expr: !DIExpression())
!331 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_consumer_sub", scope: !27, file: !117, line: 13, type: !332, isLocal: true, isDefinition: true, align: 32)
!332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 128, elements: !333)
!333 = !{!334}
!334 = !DISubrange(count: 16)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "_k_thread_stack_consumer_thread_id", scope: !27, file: !117, line: 44, type: !337, isLocal: false, isDefinition: true, align: 512)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 8704, elements: !338)
!338 = !{!339}
!339 = !DISubrange(count: 1088)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "_k_thread_obj_consumer_thread_id", scope: !27, file: !117, line: 44, type: !198, isLocal: false, isDefinition: true)
!342 = !DIGlobalVariableExpression(var: !343, expr: !DIExpression())
!343 = distinct !DIGlobalVariable(name: "_zbus_mutex_pkt_chan", scope: !344, file: !350, line: 15, type: !361, isLocal: true, isDefinition: true, align: 32)
!344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !345, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, globals: !347, splitDebugInlining: false, nameTableKind: None)
!345 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!346 = !{!102, !103}
!347 = !{!342, !348, !498, !500, !502, !504, !506, !508, !510, !512, !519, !522, !529, !534, !539, !541, !543}
!348 = !DIGlobalVariableExpression(var: !349, expr: !DIExpression())
!349 = distinct !DIGlobalVariable(name: "pkt_chan", scope: !344, file: !350, line: 15, type: !351, isLocal: false, isDefinition: true, align: 32)
!350 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !469}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !352, file: !119, line: 32, baseType: !178, size: 32)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !352, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !352, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !352, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !352, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !352, file: !119, line: 56, baseType: !360, size: 32, offset: 160)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !362)
!362 = !{!363, !382, !467, !468}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !361, file: !127, line: 2722, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !366)
!366 = !{!367}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !365, file: !131, line: 232, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !370)
!370 = !{!371, !377}
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !136, line: 38, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !136, line: 38, size: 32, elements: !373)
!373 = !{!374, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !372, file: !136, line: 39, baseType: !375, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !372, file: !136, line: 40, baseType: !375, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !136, line: 42, baseType: !378, size: 32, offset: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !136, line: 42, size: 32, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !378, file: !136, line: 43, baseType: !375, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !378, file: !136, line: 44, baseType: !375, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !361, file: !127, line: 2724, baseType: !383, size: 32, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 32)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !385)
!385 = !{!386, !426, !438, !439, !440, !441, !447, !462}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !384, file: !199, line: 247, baseType: !387, size: 384)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !388)
!388 = !{!389, !400, !402, !403, !404, !413, !414, !415}
!389 = !DIDerivedType(tag: DW_TAG_member, scope: !387, file: !199, line: 60, baseType: !390, size: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !387, file: !199, line: 60, size: 64, elements: !391)
!391 = !{!392, !394}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !390, file: !199, line: 61, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !369)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !390, file: !199, line: 62, baseType: !395, size: 64)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !396)
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !395, file: !211, line: 50, baseType: !398, size: 64)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !399, size: 64, elements: !216)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !387, file: !199, line: 68, baseType: !401, size: 32, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !387, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !387, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!404 = !DIDerivedType(tag: DW_TAG_member, scope: !387, file: !199, line: 90, baseType: !405, size: 16, offset: 112)
!405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !387, file: !199, line: 90, size: 16, elements: !406)
!406 = !{!407, !412}
!407 = !DIDerivedType(tag: DW_TAG_member, scope: !405, file: !199, line: 91, baseType: !408, size: 16)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !405, file: !199, line: 91, size: 16, elements: !409)
!409 = !{!410, !411}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !408, file: !199, line: 96, baseType: !229, size: 8)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !408, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !405, file: !199, line: 100, baseType: !181, size: 16)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !387, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !387, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !387, file: !199, line: 131, baseType: !416, size: 192, offset: 192)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !417)
!417 = !{!418, !419, !425}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !416, file: !131, line: 245, baseType: !393, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !416, file: !131, line: 246, baseType: !420, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DISubroutineType(types: !423)
!423 = !{null, !424}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !416, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !384, file: !199, line: 250, baseType: !427, size: 288, offset: 384)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !428)
!428 = !{!429, !430, !431, !432, !433, !434, !435, !436, !437}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !427, file: !248, line: 26, baseType: !111, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !427, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !427, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !427, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !427, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !427, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !427, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !427, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !427, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !384, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !384, file: !199, line: 256, baseType: !364, size: 64, offset: 704)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !384, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !384, file: !199, line: 300, baseType: !442, size: 96, offset: 800)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !443)
!443 = !{!444, !445, !446}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !442, file: !199, line: 153, baseType: !22, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !442, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !442, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !384, file: !199, line: 325, baseType: !448, size: 32, offset: 896)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !450)
!450 = !{!451, !457, !458}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !449, file: !127, line: 5074, baseType: !452, size: 96)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !453)
!453 = !{!454, !455, !456}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !452, file: !274, line: 57, baseType: !277, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !452, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !452, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !449, file: !127, line: 5075, baseType: !364, size: 64, offset: 96)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !449, file: !127, line: 5076, baseType: !459, size: 32, offset: 160)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !460)
!460 = !{!461}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !459, file: !152, line: 52, baseType: !22, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !384, file: !199, line: 343, baseType: !463, size: 64, offset: 928)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !464)
!464 = !{!465, !466}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !463, file: !248, line: 63, baseType: !111, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !463, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !361, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !361, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !352, file: !119, line: 67, baseType: !470, size: 32, offset: 192)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !475)
!475 = !{!476, !477, !492}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !474, file: !119, line: 91, baseType: !122, size: 8)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !474, file: !119, line: 93, baseType: !478, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !481)
!481 = !{!482, !483, !484, !485, !486, !487, !488, !489, !490, !491}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !480, file: !127, line: 4206, baseType: !364, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !480, file: !127, line: 4208, baseType: !459, size: 32, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !480, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !480, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !480, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !480, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !480, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !480, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !480, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !480, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !474, file: !119, line: 96, baseType: !493, size: 32, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 32)
!495 = !DISubroutineType(types: !496)
!496 = !{null, !497}
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!498 = !DIGlobalVariableExpression(var: !499, expr: !DIExpression())
!499 = distinct !DIGlobalVariable(name: "_zbus_mutex_version_chan", scope: !344, file: !350, line: 24, type: !361, isLocal: true, isDefinition: true, align: 32)
!500 = !DIGlobalVariableExpression(var: !501, expr: !DIExpression())
!501 = distinct !DIGlobalVariable(name: "version_chan", scope: !344, file: !350, line: 24, type: !351, isLocal: false, isDefinition: true, align: 32)
!502 = !DIGlobalVariableExpression(var: !503, expr: !DIExpression())
!503 = distinct !DIGlobalVariable(name: "_zbus_mutex_data_ready_chan", scope: !344, file: !350, line: 33, type: !361, isLocal: true, isDefinition: true, align: 32)
!504 = !DIGlobalVariableExpression(var: !505, expr: !DIExpression())
!505 = distinct !DIGlobalVariable(name: "data_ready_chan", scope: !344, file: !350, line: 33, type: !351, isLocal: false, isDefinition: true, align: 32)
!506 = !DIGlobalVariableExpression(var: !507, expr: !DIExpression())
!507 = distinct !DIGlobalVariable(name: "_zbus_mutex_ack", scope: !344, file: !350, line: 42, type: !361, isLocal: true, isDefinition: true, align: 32)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "ack", scope: !344, file: !350, line: 42, type: !351, isLocal: false, isDefinition: true, align: 32)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "filter_lis", scope: !344, file: !350, line: 73, type: !474, isLocal: false, isDefinition: true, align: 32)
!512 = !DIGlobalVariableExpression(var: !513, expr: !DIExpression())
!513 = distinct !DIGlobalVariable(name: "_zbus_message_pkt_chan", scope: !344, file: !350, line: 15, type: !514, isLocal: true, isDefinition: true)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !515, line: 16, size: 64, elements: !516)
!515 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/messages.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !514, file: !515, line: 17, baseType: !102, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !514, file: !515, line: 18, baseType: !156, size: 32, offset: 32)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "_zbus_observers_pkt_chan", scope: !344, file: !350, line: 15, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 64, elements: !216)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "_zbus_message_version_chan", scope: !344, file: !350, line: 24, type: !524, isLocal: true, isDefinition: true)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "version_msg", file: !515, line: 10, size: 32, elements: !525)
!525 = !{!526, !527, !528}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !524, file: !515, line: 11, baseType: !166, size: 8)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !524, file: !515, line: 12, baseType: !166, size: 8, offset: 8)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "build", scope: !524, file: !515, line: 13, baseType: !181, size: 16, offset: 16)
!529 = !DIGlobalVariableExpression(var: !530, expr: !DIExpression())
!530 = distinct !DIGlobalVariable(name: "_zbus_observers_version_chan", scope: !344, file: !350, line: 24, type: !531, isLocal: true, isDefinition: true)
!531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 32, elements: !532)
!532 = !{!533}
!533 = !DISubrange(count: 1)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "_zbus_message_data_ready_chan", scope: !344, file: !350, line: 33, type: !536, isLocal: true, isDefinition: true)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_msg", file: !515, line: 21, size: 8, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !536, file: !515, line: 22, baseType: !166, size: 8)
!539 = !DIGlobalVariableExpression(var: !540, expr: !DIExpression())
!540 = distinct !DIGlobalVariable(name: "_zbus_observers_data_ready_chan", scope: !344, file: !350, line: 33, type: !521, isLocal: true, isDefinition: true)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "_zbus_message_ack", scope: !344, file: !350, line: 42, type: !536, isLocal: true, isDefinition: true)
!543 = !DIGlobalVariableExpression(var: !544, expr: !DIExpression())
!544 = distinct !DIGlobalVariable(name: "_zbus_observers_ack", scope: !344, file: !350, line: 42, type: !521, isLocal: true, isDefinition: true)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(name: "_zbus_observer_queue_producer_sub", scope: !547, file: !554, line: 13, type: !561, isLocal: false, isDefinition: true, align: 32)
!547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !549, globals: !551, splitDebugInlining: false, nameTableKind: None)
!548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/zbus/dyn_channel/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!549 = !{!102, !103, !550, !104, !111, !112}
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!551 = !{!545, !552, !702, !723, !727, !729, !732}
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "producer_sub", scope: !547, file: !554, line: 13, type: !555, isLocal: false, isDefinition: true, align: 32)
!554 = !DIFile(filename: "zephyr/samples/subsys/zbus/dyn_channel/src/producer.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !556)
!556 = !{!557, !558, !594}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !555, file: !119, line: 91, baseType: !122, size: 8)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !555, file: !119, line: 93, baseType: !559, size: 32, offset: 32)
!559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !560)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 32)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !562)
!562 = !{!563, !582, !586, !587, !588, !589, !590, !591, !592, !593}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !561, file: !127, line: 4206, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !566)
!566 = !{!567}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !565, file: !131, line: 232, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !569)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !570)
!570 = !{!571, !577}
!571 = !DIDerivedType(tag: DW_TAG_member, scope: !569, file: !136, line: 38, baseType: !572, size: 32)
!572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !569, file: !136, line: 38, size: 32, elements: !573)
!573 = !{!574, !576}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !572, file: !136, line: 39, baseType: !575, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !572, file: !136, line: 40, baseType: !575, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !569, file: !136, line: 42, baseType: !578, size: 32, offset: 32)
!578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !569, file: !136, line: 42, size: 32, elements: !579)
!579 = !{!580, !581}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !578, file: !136, line: 43, baseType: !575, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !578, file: !136, line: 44, baseType: !575, size: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !561, file: !127, line: 4208, baseType: !583, size: 32, offset: 64)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !584)
!584 = !{!585}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !583, file: !152, line: 52, baseType: !22, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !561, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !561, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !561, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !561, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !561, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !561, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !561, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !561, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !555, file: !119, line: 96, baseType: !595, size: 32, offset: 64)
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !596)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 32)
!597 = !DISubroutineType(types: !598)
!598 = !{null, !599}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !602)
!602 = !{!603, !604, !605, !606, !607, !608, !697}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !601, file: !119, line: 32, baseType: !178, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !601, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !601, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !601, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !601, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !601, file: !119, line: 56, baseType: !609, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 32)
!610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !611)
!611 = !{!612, !613, !695, !696}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !610, file: !127, line: 2722, baseType: !564, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !610, file: !127, line: 2724, baseType: !614, size: 32, offset: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 32)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !616)
!616 = !{!617, !657, !669, !670, !671, !672, !678, !690}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !615, file: !199, line: 247, baseType: !618, size: 384)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !619)
!619 = !{!620, !631, !633, !634, !635, !644, !645, !646}
!620 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !199, line: 60, baseType: !621, size: 64)
!621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !199, line: 60, size: 64, elements: !622)
!622 = !{!623, !625}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !621, file: !199, line: 61, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !569)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !621, file: !199, line: 62, baseType: !626, size: 64)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !627)
!627 = !{!628}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !626, file: !211, line: 50, baseType: !629, size: 64)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 64, elements: !216)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !618, file: !199, line: 68, baseType: !632, size: 32, offset: 64)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !618, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !618, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!635 = !DIDerivedType(tag: DW_TAG_member, scope: !618, file: !199, line: 90, baseType: !636, size: 16, offset: 112)
!636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !618, file: !199, line: 90, size: 16, elements: !637)
!637 = !{!638, !643}
!638 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !199, line: 91, baseType: !639, size: 16)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !199, line: 91, size: 16, elements: !640)
!640 = !{!641, !642}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !639, file: !199, line: 96, baseType: !229, size: 8)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !639, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !636, file: !199, line: 100, baseType: !181, size: 16)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !618, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !618, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !618, file: !199, line: 131, baseType: !647, size: 192, offset: 192)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !648)
!648 = !{!649, !650, !656}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !647, file: !131, line: 245, baseType: !624, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !647, file: !131, line: 246, baseType: !651, size: 32, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !652)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 32)
!653 = !DISubroutineType(types: !654)
!654 = !{null, !655}
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !647, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !615, file: !199, line: 250, baseType: !658, size: 288, offset: 384)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !659)
!659 = !{!660, !661, !662, !663, !664, !665, !666, !667, !668}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !658, file: !248, line: 26, baseType: !111, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !658, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !658, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !658, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !658, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !658, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !658, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !658, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !658, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !615, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !615, file: !199, line: 256, baseType: !564, size: 64, offset: 704)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !615, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !615, file: !199, line: 300, baseType: !673, size: 96, offset: 800)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !674)
!674 = !{!675, !676, !677}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !673, file: !199, line: 153, baseType: !22, size: 32)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !673, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !673, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !615, file: !199, line: 325, baseType: !679, size: 32, offset: 896)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !681)
!681 = !{!682, !688, !689}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !680, file: !127, line: 5074, baseType: !683, size: 96)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !684)
!684 = !{!685, !686, !687}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !683, file: !274, line: 57, baseType: !277, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !683, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !683, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !680, file: !127, line: 5075, baseType: !564, size: 64, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !680, file: !127, line: 5076, baseType: !583, size: 32, offset: 160)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !615, file: !199, line: 343, baseType: !691, size: 64, offset: 928)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !692)
!692 = !{!693, !694}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !691, file: !248, line: 63, baseType: !111, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !691, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !610, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !610, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !601, file: !119, line: 67, baseType: !698, size: 32, offset: 192)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !555)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "_k_thread_data_producer_thread_id", scope: !547, file: !554, line: 40, type: !704, isLocal: false, isDefinition: true, align: 32)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !705)
!705 = !{!706, !707, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !704, file: !127, line: 621, baseType: !614, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !704, file: !127, line: 622, baseType: !708, size: 32, offset: 32)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !711)
!711 = !{!712}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !710, file: !305, line: 48, baseType: !110, size: 8)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !704, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !704, file: !127, line: 624, baseType: !310, size: 32, offset: 96)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !704, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !704, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !704, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !704, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !704, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !704, file: !127, line: 630, baseType: !320, size: 32, offset: 288)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !704, file: !127, line: 631, baseType: !322, size: 32, offset: 320)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !704, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!723 = !DIGlobalVariableExpression(var: !724, expr: !DIExpression())
!724 = distinct !DIGlobalVariable(name: "producer_thread_id", scope: !547, file: !554, line: 40, type: !725, isLocal: false, isDefinition: true)
!725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !726)
!726 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !614)
!727 = !DIGlobalVariableExpression(var: !728, expr: !DIExpression())
!728 = distinct !DIGlobalVariable(name: "_k_fifo_buf__zbus_observer_queue_producer_sub", scope: !547, file: !554, line: 13, type: !332, isLocal: true, isDefinition: true, align: 32)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "_k_thread_stack_producer_thread_id", scope: !547, file: !554, line: 40, type: !731, isLocal: false, isDefinition: true, align: 512)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !710, size: 8704, elements: !338)
!732 = !DIGlobalVariableExpression(var: !733, expr: !DIExpression())
!733 = distinct !DIGlobalVariable(name: "_k_thread_obj_producer_thread_id", scope: !547, file: !554, line: 40, type: !615, isLocal: false, isDefinition: true)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !736, file: !750, line: 18, type: !751, isLocal: false, isDefinition: true)
!736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !738, globals: !749, splitDebugInlining: false, nameTableKind: None)
!737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!738 = !{!22, !102, !24, !739, !741, !743, !156, !103, !744, !745, !747, !748, !160, !550, !181, !108}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 32)
!740 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 32)
!742 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!749 = !{!734}
!750 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !752)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !754)
!753 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!754 = !{!755, !756}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !752, file: !753, line: 17, baseType: !108, size: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !752, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!757 = !DIGlobalVariableExpression(var: !758, expr: !DIExpression())
!758 = distinct !DIGlobalVariable(name: "_char_out", scope: !759, file: !762, line: 54, type: !763, isLocal: false, isDefinition: true)
!759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, globals: !761, splitDebugInlining: false, nameTableKind: None)
!760 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!761 = !{!757}
!762 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 32)
!764 = !DISubroutineType(types: !765)
!765 = !{!103, !103}
!766 = !DIGlobalVariableExpression(var: !767, expr: !DIExpression())
!767 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !768, file: !798, line: 60, type: !799, isLocal: true, isDefinition: true, align: 32)
!768 = distinct !DICompileUnit(language: DW_LANG_C99, file: !769, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !770, globals: !797, splitDebugInlining: false, nameTableKind: None)
!769 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!770 = !{!771, !791}
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 386, baseType: !774)
!773 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 370, size: 448, elements: !775)
!775 = !{!776, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !774, file: !773, line: 372, baseType: !777, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !111)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !774, file: !773, line: 373, baseType: !777, size: 32, offset: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !774, file: !773, line: 374, baseType: !777, size: 32, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !774, file: !773, line: 375, baseType: !777, size: 32, offset: 96)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !774, file: !773, line: 376, baseType: !777, size: 32, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !774, file: !773, line: 377, baseType: !777, size: 32, offset: 160)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !774, file: !773, line: 378, baseType: !777, size: 32, offset: 192)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !774, file: !773, line: 379, baseType: !777, size: 32, offset: 224)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !774, file: !773, line: 380, baseType: !777, size: 32, offset: 256)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !774, file: !773, line: 381, baseType: !777, size: 32, offset: 288)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !774, file: !773, line: 382, baseType: !777, size: 32, offset: 320)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !774, file: !773, line: 383, baseType: !777, size: 32, offset: 352)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !774, file: !773, line: 384, baseType: !777, size: 32, offset: 384)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !774, file: !773, line: 385, baseType: !777, size: 32, offset: 416)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 32)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !773, line: 364, baseType: !793)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 360, size: 64, elements: !794)
!794 = !{!795, !796}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !793, file: !773, line: 362, baseType: !777, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !793, file: !773, line: 363, baseType: !777, size: 32, offset: 32)
!797 = !{!766}
!798 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !800)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !802)
!801 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!802 = !{!803, !828}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !800, file: !801, line: 60, baseType: !804, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 32)
!805 = !DISubroutineType(types: !806)
!806 = !{!103, !807}
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !809)
!809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !811)
!810 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!811 = !{!812, !813, !814, !815, !821, !822}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !809, file: !810, line: 380, baseType: !108, size: 32)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !809, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !809, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !809, file: !810, line: 386, baseType: !816, size: 32, offset: 96)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 32)
!817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !818)
!818 = !{!819, !820}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !817, file: !810, line: 359, baseType: !166, size: 8)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !817, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !809, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !809, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !810, line: 43, baseType: !826)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !827)
!827 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !800, file: !801, line: 65, baseType: !807, size: 32, offset: 32)
!829 = !DIGlobalVariableExpression(var: !830, expr: !DIExpression())
!830 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !831, file: !834, line: 71, type: !835, isLocal: true, isDefinition: true, align: 32)
!831 = distinct !DICompileUnit(language: DW_LANG_C99, file: !832, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !833, splitDebugInlining: false, nameTableKind: None)
!832 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!833 = !{!829}
!834 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !837)
!837 = !{!838, !857}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !836, file: !801, line: 60, baseType: !839, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = !DISubroutineType(types: !841)
!841 = !{!103, !842}
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !845)
!845 = !{!846, !847, !848, !849, !855, !856}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !844, file: !810, line: 380, baseType: !108, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !844, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !844, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !844, file: !810, line: 386, baseType: !850, size: 32, offset: 96)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 32)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !852)
!852 = !{!853, !854}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !851, file: !810, line: 359, baseType: !166, size: 8)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !851, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !844, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !844, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !836, file: !801, line: 65, baseType: !842, size: 32, offset: 32)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !860, file: !867, line: 17, type: !993, isLocal: false, isDefinition: true)
!860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !862, globals: !863, splitDebugInlining: false, nameTableKind: None)
!861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!862 = !{!156, !103, !111, !102}
!863 = !{!858, !864, !989}
!864 = !DIGlobalVariableExpression(var: !865, expr: !DIExpression())
!865 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !866, file: !867, line: 198, type: !977, isLocal: true, isDefinition: true)
!866 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !867, file: !867, line: 175, type: !868, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !972)
!867 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!868 = !DISubroutineType(types: !869)
!869 = !{null, !870}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 32)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !872)
!872 = !{!873, !931, !943, !944, !945, !946, !952, !967}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !871, file: !199, line: 247, baseType: !874, size: 384)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !875)
!875 = !{!876, !900, !907, !908, !909, !918, !919, !920}
!876 = !DIDerivedType(tag: DW_TAG_member, scope: !874, file: !199, line: 60, baseType: !877, size: 64)
!877 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !874, file: !199, line: 60, size: 64, elements: !878)
!878 = !{!879, !894}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !877, file: !199, line: 61, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !881)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !882)
!882 = !{!883, !889}
!883 = !DIDerivedType(tag: DW_TAG_member, scope: !881, file: !136, line: 38, baseType: !884, size: 32)
!884 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !881, file: !136, line: 38, size: 32, elements: !885)
!885 = !{!886, !888}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !884, file: !136, line: 39, baseType: !887, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !884, file: !136, line: 40, baseType: !887, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, scope: !881, file: !136, line: 42, baseType: !890, size: 32, offset: 32)
!890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !881, file: !136, line: 42, size: 32, elements: !891)
!891 = !{!892, !893}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !890, file: !136, line: 43, baseType: !887, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !890, file: !136, line: 44, baseType: !887, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !877, file: !199, line: 62, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !896)
!896 = !{!897}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !895, file: !211, line: 50, baseType: !898, size: 64)
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 64, elements: !216)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !874, file: !199, line: 68, baseType: !901, size: 32, offset: 64)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !903)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !904)
!904 = !{!905}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !903, file: !131, line: 232, baseType: !906, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !881)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !874, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !874, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!909 = !DIDerivedType(tag: DW_TAG_member, scope: !874, file: !199, line: 90, baseType: !910, size: 16, offset: 112)
!910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !874, file: !199, line: 90, size: 16, elements: !911)
!911 = !{!912, !917}
!912 = !DIDerivedType(tag: DW_TAG_member, scope: !910, file: !199, line: 91, baseType: !913, size: 16)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !910, file: !199, line: 91, size: 16, elements: !914)
!914 = !{!915, !916}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !913, file: !199, line: 96, baseType: !229, size: 8)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !913, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !910, file: !199, line: 100, baseType: !181, size: 16)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !874, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !874, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !874, file: !199, line: 131, baseType: !921, size: 192, offset: 192)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !922)
!922 = !{!923, !924, !930}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !921, file: !131, line: 245, baseType: !880, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !921, file: !131, line: 246, baseType: !925, size: 32, offset: 64)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !926)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{null, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !921, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !871, file: !199, line: 250, baseType: !932, size: 288, offset: 384)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !933)
!933 = !{!934, !935, !936, !937, !938, !939, !940, !941, !942}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !932, file: !248, line: 26, baseType: !111, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !932, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !932, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !932, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !932, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !932, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !932, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !932, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !932, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !871, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !871, file: !199, line: 256, baseType: !902, size: 64, offset: 704)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !871, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !871, file: !199, line: 300, baseType: !947, size: 96, offset: 800)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !948)
!948 = !{!949, !950, !951}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !947, file: !199, line: 153, baseType: !22, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !947, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !947, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !871, file: !199, line: 325, baseType: !953, size: 32, offset: 896)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !955)
!955 = !{!956, !962, !963}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !954, file: !127, line: 5074, baseType: !957, size: 96)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !958)
!958 = !{!959, !960, !961}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !957, file: !274, line: 57, baseType: !277, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !957, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !957, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !954, file: !127, line: 5075, baseType: !902, size: 64, offset: 96)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !954, file: !127, line: 5076, baseType: !964, size: 32, offset: 160)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !965)
!965 = !{!966}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !964, file: !152, line: 52, baseType: !22, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !871, file: !199, line: 343, baseType: !968, size: 64, offset: 928)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !969)
!969 = !{!970, !971}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !968, file: !248, line: 63, baseType: !111, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !968, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!972 = !{!973, !974, !975, !976}
!973 = !DILocalVariable(name: "thread", arg: 1, scope: !866, file: !867, line: 175, type: !870)
!974 = !DILocalVariable(name: "region_num", scope: !866, file: !867, line: 200, type: !166)
!975 = !DILocalVariable(name: "guard_start", scope: !866, file: !867, line: 265, type: !22)
!976 = !DILocalVariable(name: "guard_size", scope: !866, file: !867, line: 266, type: !156)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !978, size: 96, elements: !532)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !979, line: 52, size: 96, elements: !980)
!979 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!980 = !{!981, !982, !983}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !978, file: !979, line: 53, baseType: !22, size: 32)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !978, file: !979, line: 54, baseType: !156, size: 32, offset: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !978, file: !979, line: 55, baseType: !984, size: 32, offset: 64)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !985, line: 151, baseType: !986)
!985 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !985, line: 149, size: 32, elements: !987)
!987 = !{!988}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !986, file: !985, line: 150, baseType: !111, size: 32)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "static_regions", scope: !860, file: !867, line: 62, type: !991, isLocal: true, isDefinition: true)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 96, elements: !532)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !978)
!993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !994)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !995)
!995 = !{!996, !997}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !994, file: !753, line: 17, baseType: !108, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !994, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !1000, file: !1033, line: 39, type: !166, isLocal: true, isDefinition: true)
!1000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1002, globals: !1032, splitDebugInlining: false, nameTableKind: None)
!1001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1002 = !{!1003, !102, !103, !1020, !166}
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !1005, line: 1168, baseType: !1006)
!1005 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 1155, size: 352, elements: !1007)
!1007 = !{!1008, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !1006, file: !1005, line: 1157, baseType: !1009, size: 32)
!1009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1006, file: !1005, line: 1158, baseType: !777, size: 32, offset: 32)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !1006, file: !1005, line: 1159, baseType: !777, size: 32, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !1006, file: !1005, line: 1160, baseType: !777, size: 32, offset: 96)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !1006, file: !1005, line: 1161, baseType: !777, size: 32, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !1006, file: !1005, line: 1162, baseType: !777, size: 32, offset: 160)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !1006, file: !1005, line: 1163, baseType: !777, size: 32, offset: 192)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !1006, file: !1005, line: 1164, baseType: !777, size: 32, offset: 224)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !1006, file: !1005, line: 1165, baseType: !777, size: 32, offset: 256)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !1006, file: !1005, line: 1166, baseType: !777, size: 32, offset: 288)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !1006, file: !1005, line: 1167, baseType: !777, size: 32, offset: 320)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 32)
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1023, line: 27, size: 96, elements: !1024)
!1023 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1024 = !{!1025, !1026, !1027}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1022, file: !1023, line: 29, baseType: !111, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1022, file: !1023, line: 31, baseType: !108, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1022, file: !1023, line: 37, baseType: !1028, size: 32, offset: 64)
!1028 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !985, line: 146, baseType: !1029)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !985, line: 141, size: 32, elements: !1030)
!1030 = !{!1031}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1029, file: !985, line: 143, baseType: !111, size: 32)
!1032 = !{!998}
!1033 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !1036, file: !1043, line: 21, type: !763, isLocal: true, isDefinition: true)
!1036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1037, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1038, globals: !1042, splitDebugInlining: false, nameTableKind: None)
!1037 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1038 = !{!1039, !103, !102}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1041, line: 22, baseType: !103)
!1041 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1042 = !{!1034}
!1043 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1044 = !DIGlobalVariableExpression(var: !1045, expr: !DIExpression())
!1045 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !1046, file: !1051, line: 13, type: !1068, isLocal: true, isDefinition: true)
!1046 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1047, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1048, splitDebugInlining: false, nameTableKind: None)
!1047 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1048 = !{!1049, !1044}
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "mpu_config", scope: !1046, file: !1051, line: 37, type: !1052, isLocal: false, isDefinition: true)
!1051 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !1023, line: 41, size: 64, elements: !1054)
!1054 = !{!1055, !1056}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !1053, file: !1023, line: 43, baseType: !111, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !1053, file: !1023, line: 45, baseType: !1057, size: 32, offset: 32)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !1023, line: 27, size: 96, elements: !1060)
!1060 = !{!1061, !1062, !1063}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1059, file: !1023, line: 29, baseType: !111, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1059, file: !1023, line: 31, baseType: !108, size: 32, offset: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1059, file: !1023, line: 37, baseType: !1064, size: 32, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !985, line: 146, baseType: !1065)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !985, line: 141, size: 32, elements: !1066)
!1066 = !{!1067}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !1065, file: !985, line: 143, baseType: !111, size: 32)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 192, elements: !216)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !1071, file: !1168, line: 36, type: !1169, isLocal: true, isDefinition: true, align: 32)
!1071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1073, retainedTypes: !1085, globals: !1167, splitDebugInlining: false, nameTableKind: None)
!1072 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1073 = !{!1074, !1080}
!1074 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1075, line: 506, baseType: !32, size: 32, elements: !1076)
!1075 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1076 = !{!1077, !1078, !1079}
!1077 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1078 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1079 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1080 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1075, line: 512, baseType: !32, size: 32, elements: !1081)
!1081 = !{!1082, !1083, !1084}
!1082 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1083 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1084 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1085 = !{!1086, !1156, !1161, !1121, !1080, !1074, !1166, !102}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1088)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1075, line: 523, size: 288, elements: !1089)
!1089 = !{!1090, !1111, !1117, !1122, !1126, !1127, !1128, !1132, !1152}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1088, file: !1075, line: 524, baseType: !1091, size: 32)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 32)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!103, !1094, !1109, !1110}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1096)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !1097)
!1097 = !{!1098, !1099, !1100, !1101, !1107, !1108}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1096, file: !810, line: 380, baseType: !108, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1096, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1096, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1096, file: !810, line: 386, baseType: !1102, size: 32, offset: 96)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !1104)
!1104 = !{!1105, !1106}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1103, file: !810, line: 359, baseType: !166, size: 8)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1103, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1096, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1096, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1075, line: 237, baseType: !166)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1075, line: 257, baseType: !111)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1088, file: !1075, line: 530, baseType: !1112, size: 32, offset: 32)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!103, !1094, !1115}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1075, line: 229, baseType: !111)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1088, file: !1075, line: 532, baseType: !1118, size: 32, offset: 64)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!103, !1094, !1121, !1116}
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1075, line: 216, baseType: !111)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1088, file: !1075, line: 535, baseType: !1123, size: 32, offset: 96)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!103, !1094, !1121}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1088, file: !1075, line: 537, baseType: !1123, size: 32, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1088, file: !1075, line: 539, baseType: !1123, size: 32, offset: 160)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1088, file: !1075, line: 541, baseType: !1129, size: 32, offset: 192)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!103, !1094, !1109, !1074, !1080}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1088, file: !1075, line: 544, baseType: !1133, size: 32, offset: 224)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{!103, !1094, !1136, !122}
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 32)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1075, line: 478, size: 96, elements: !1138)
!1138 = !{!1139, !1146, !1151}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1137, file: !1075, line: 482, baseType: !1140, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1141, line: 33, baseType: !1142)
!1141 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1141, line: 29, size: 32, elements: !1143)
!1143 = !{!1144}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1142, file: !1141, line: 30, baseType: !1145, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1137, file: !1075, line: 485, baseType: !1147, size: 32, offset: 32)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1075, line: 464, baseType: !1148)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 32)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{null, !1094, !1136, !1121}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1137, file: !1075, line: 493, baseType: !1121, size: 32, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1088, file: !1075, line: 547, baseType: !1153, size: 32, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!111, !1094}
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1158)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1075, line: 428, size: 32, elements: !1159)
!1159 = !{!1160}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1158, file: !1075, line: 434, baseType: !1121, size: 32)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1075, line: 441, size: 32, elements: !1164)
!1164 = !{!1165}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1163, file: !1075, line: 447, baseType: !1121, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 32)
!1167 = !{!1069}
!1168 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1170)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !1171)
!1171 = !{!1172, !1176}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1170, file: !801, line: 60, baseType: !1173, size: 32)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!103, !1094}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1170, file: !801, line: 65, baseType: !1094, size: 32, offset: 32)
!1177 = !DIGlobalVariableExpression(var: !1178, expr: !DIExpression())
!1178 = distinct !DIGlobalVariable(name: "log_const_zbus", scope: !1179, file: !1183, line: 10, type: !1184, isLocal: false, isDefinition: true)
!1179 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1180, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1181, globals: !1182, splitDebugInlining: false, nameTableKind: None)
!1180 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1181 = !{!104, !102, !103}
!1182 = !{!1177}
!1183 = !DIFile(filename: "zephyr/subsys/zbus/zbus.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1185)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !1186)
!1186 = !{!1187, !1188}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1185, file: !753, line: 17, baseType: !108, size: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1185, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !1191, file: !1263, line: 48, type: !1336, isLocal: true, isDefinition: true)
!1191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1192, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1193, retainedTypes: !1249, globals: !1260, splitDebugInlining: false, nameTableKind: None)
!1192 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1193 = !{!30, !1194}
!1194 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !773, line: 69, baseType: !103, size: 32, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248}
!1196 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1197 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1198 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1199 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1200 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1201 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!1202 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1203 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1204 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1205 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!1206 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!1207 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!1208 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!1209 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!1210 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!1211 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!1212 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!1213 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!1214 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!1215 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!1216 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!1217 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!1218 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!1219 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!1220 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!1221 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!1222 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!1223 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!1224 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!1225 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!1226 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!1227 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!1228 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!1229 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!1230 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!1231 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!1232 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!1233 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!1234 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!1235 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!1236 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!1237 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!1238 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!1239 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!1240 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!1241 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!1242 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!1243 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!1244 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!1245 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!1246 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!1247 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!1248 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!1249 = !{!156, !103, !102, !1250}
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 32)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !773, line: 270, baseType: !1252)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 262, size: 192, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1258, !1259}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !1252, file: !773, line: 264, baseType: !777, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !1252, file: !773, line: 265, baseType: !777, size: 32, offset: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !1252, file: !773, line: 266, baseType: !777, size: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !1252, file: !773, line: 267, baseType: !777, size: 32, offset: 96)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !1252, file: !773, line: 268, baseType: !777, size: 32, offset: 128)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !1252, file: !773, line: 269, baseType: !777, size: 32, offset: 160)
!1260 = !{!1261, !1267, !1283, !1294, !1309, !1189, !1311, !1324, !1326, !1328, !1330, !1332, !1334}
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !1191, file: !1263, line: 424, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1263 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 64, elements: !1265)
!1265 = !{!1266}
!1266 = !DISubrange(count: 4)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !1191, file: !1263, line: 424, type: !1269, isLocal: false, isDefinition: true, align: 32)
!1269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1270)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !1271)
!1271 = !{!1272, !1273, !1274, !1275, !1281, !1282}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1270, file: !810, line: 380, baseType: !108, size: 32)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1270, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1270, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1270, file: !810, line: 386, baseType: !1276, size: 32, offset: 96)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !1278)
!1278 = !{!1279, !1280}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1277, file: !810, line: 359, baseType: !166, size: 8)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1277, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1270, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1270, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !1191, file: !1263, line: 424, type: !1285, isLocal: true, isDefinition: true, align: 32)
!1285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1286)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !1287)
!1287 = !{!1288, !1293}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1286, file: !801, line: 60, baseType: !1289, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 32)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!103, !1292}
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 32)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1286, file: !801, line: 65, baseType: !1292, size: 32, offset: 32)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "exti_data", scope: !1191, file: !1263, line: 423, type: !1296, isLocal: true, isDefinition: true)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !1263, line: 107, size: 1024, elements: !1297)
!1297 = !{!1298}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1296, file: !1263, line: 109, baseType: !1299, size: 1024)
!1299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1300, size: 1024, elements: !333)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !1263, line: 101, size: 64, elements: !1301)
!1301 = !{!1302, !1308}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1300, file: !1263, line: 102, baseType: !1303, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !1304, line: 63, baseType: !1305)
!1304 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 32)
!1306 = !DISubroutineType(types: !1307)
!1307 = !{null, !103, !102}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1300, file: !1263, line: 103, baseType: !102, size: 32, offset: 32)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !1191, file: !1263, line: 424, type: !1277, isLocal: true, isDefinition: true, align: 8)
!1311 = !DIGlobalVariableExpression(var: !1312, expr: !DIExpression())
!1312 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !1313, file: !1263, line: 493, type: !1318, isLocal: true, isDefinition: true, align: 32)
!1313 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !1263, file: !1263, line: 460, type: !1314, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !1316)
!1314 = !DISubroutineType(types: !1315)
!1315 = !{null, !1292}
!1316 = !{!1317}
!1317 = !DILocalVariable(name: "dev", arg: 1, scope: !1313, file: !1263, line: 460, type: !1292)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1319)
!1319 = !{!1320, !1321, !1322, !1323}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1318, file: !10, line: 55, baseType: !320, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1318, file: !10, line: 57, baseType: !320, size: 32, offset: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1318, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1318, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !1313, file: !1263, line: 497, type: !1318, isLocal: true, isDefinition: true, align: 32)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !1313, file: !1263, line: 507, type: !1318, isLocal: true, isDefinition: true, align: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !1313, file: !1263, line: 512, type: !1318, isLocal: true, isDefinition: true, align: 32)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !1313, file: !1263, line: 516, type: !1318, isLocal: true, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !1313, file: !1263, line: 523, type: !1318, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !1313, file: !1263, line: 527, type: !1318, isLocal: true, isDefinition: true, align: 32)
!1336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1337, size: 512, elements: !333)
!1337 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1338)
!1338 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !773, line: 127, baseType: !1194)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !1341, file: !1346, line: 21, type: !1366, isLocal: false, isDefinition: true, align: 16)
!1341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1342, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1343, splitDebugInlining: false, nameTableKind: None)
!1342 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1343 = !{!1344, !1339, !1350, !1352, !1354, !1356, !1358, !1360, !1362, !1364}
!1344 = !DIGlobalVariableExpression(var: !1345, expr: !DIExpression())
!1345 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1341, file: !1346, line: 16, type: !1347, isLocal: false, isDefinition: true, align: 16)
!1346 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 176, elements: !1348)
!1348 = !{!1349}
!1349 = !DISubrange(count: 11)
!1350 = !DIGlobalVariableExpression(var: !1351, expr: !DIExpression())
!1351 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1341, file: !1346, line: 28, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1352 = !DIGlobalVariableExpression(var: !1353, expr: !DIExpression())
!1353 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1341, file: !1346, line: 35, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1354 = !DIGlobalVariableExpression(var: !1355, expr: !DIExpression())
!1355 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1341, file: !1346, line: 42, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1356 = !DIGlobalVariableExpression(var: !1357, expr: !DIExpression())
!1357 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1341, file: !1346, line: 49, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1358 = !DIGlobalVariableExpression(var: !1359, expr: !DIExpression())
!1359 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1341, file: !1346, line: 56, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1360 = !DIGlobalVariableExpression(var: !1361, expr: !DIExpression())
!1361 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1341, file: !1346, line: 63, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1362 = !DIGlobalVariableExpression(var: !1363, expr: !DIExpression())
!1363 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1341, file: !1346, line: 70, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1364 = !DIGlobalVariableExpression(var: !1365, expr: !DIExpression())
!1365 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1341, file: !1346, line: 77, type: !1264, isLocal: false, isDefinition: true, align: 16)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 48, elements: !1367)
!1367 = !{!1368}
!1368 = !DISubrange(count: 3)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1371, file: !1415, line: 398, type: !1448, isLocal: true, isDefinition: true)
!1371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1372, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1373, retainedTypes: !1386, globals: !1412, splitDebugInlining: false, nameTableKind: None)
!1372 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1373 = !{!1374, !30, !1379}
!1374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1375, line: 190, baseType: !32, size: 32, elements: !1376)
!1375 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1376 = !{!1377, !1378}
!1377 = !DIEnumerator(name: "SUCCESS", value: 0)
!1378 = !DIEnumerator(name: "ERROR", value: 1)
!1379 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1380, line: 44, baseType: !32, size: 32, elements: !1381)
!1380 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1381 = !{!1382, !1383, !1384, !1385}
!1382 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1383 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1384 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1385 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1386 = !{!102, !103, !111, !1387, !1405, !1411}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 386, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 370, size: 448, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1389, file: !773, line: 372, baseType: !777, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1389, file: !773, line: 373, baseType: !777, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1389, file: !773, line: 374, baseType: !777, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1389, file: !773, line: 375, baseType: !777, size: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1389, file: !773, line: 376, baseType: !777, size: 32, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1389, file: !773, line: 377, baseType: !777, size: 32, offset: 160)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1389, file: !773, line: 378, baseType: !777, size: 32, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1389, file: !773, line: 379, baseType: !777, size: 32, offset: 224)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1389, file: !773, line: 380, baseType: !777, size: 32, offset: 256)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1389, file: !773, line: 381, baseType: !777, size: 32, offset: 288)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1389, file: !773, line: 382, baseType: !777, size: 32, offset: 320)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1389, file: !773, line: 383, baseType: !777, size: 32, offset: 352)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1389, file: !773, line: 384, baseType: !777, size: 32, offset: 384)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1389, file: !773, line: 385, baseType: !777, size: 32, offset: 416)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1407, line: 343, size: 64, elements: !1408)
!1407 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1408 = !{!1409, !1410}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1406, file: !1407, line: 344, baseType: !111, size: 32)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1406, file: !1407, line: 345, baseType: !111, size: 32, offset: 32)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!1412 = !{!1413, !1419, !1435, !1446, !1369}
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1371, file: !1415, line: 752, type: !1416, isLocal: false, isDefinition: true, align: 16)
!1415 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 512, elements: !1417)
!1417 = !{!1418}
!1418 = !DISubrange(count: 32)
!1419 = !DIGlobalVariableExpression(var: !1420, expr: !DIExpression())
!1420 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1371, file: !1415, line: 752, type: !1421, isLocal: false, isDefinition: true, align: 32)
!1421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1422)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1433, !1434}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1422, file: !810, line: 380, baseType: !108, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1422, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1422, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1422, file: !810, line: 386, baseType: !1428, size: 32, offset: 96)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !1430)
!1430 = !{!1431, !1432}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1429, file: !810, line: 359, baseType: !166, size: 8)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1429, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1422, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1422, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!1435 = !DIGlobalVariableExpression(var: !1436, expr: !DIExpression())
!1436 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1371, file: !1415, line: 752, type: !1437, isLocal: true, isDefinition: true, align: 32)
!1437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !1439)
!1439 = !{!1440, !1445}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1438, file: !801, line: 60, baseType: !1441, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!103, !1444}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1438, file: !801, line: 65, baseType: !1444, size: 32, offset: 32)
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1371, file: !1415, line: 752, type: !1429, isLocal: true, isDefinition: true, align: 8)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1380, line: 100, size: 224, elements: !1449)
!1449 = !{!1450, !1456, !1457, !1466, !1471, !1476, !1482}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1448, file: !1380, line: 101, baseType: !1451, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1380, line: 76, baseType: !1452)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!103, !1444, !1455}
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1380, line: 56, baseType: !102)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1448, file: !1380, line: 102, baseType: !1451, size: 32, offset: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1448, file: !1380, line: 103, baseType: !1458, size: 32, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1380, line: 83, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 32)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!103, !1444, !1455, !1462, !102}
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1380, line: 72, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{null, !1444, !1455, !102}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1448, file: !1380, line: 104, baseType: !1467, size: 32, offset: 96)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1380, line: 79, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!103, !1444, !1455, !1411}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1448, file: !1380, line: 105, baseType: !1472, size: 32, offset: 128)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1380, line: 88, baseType: !1473)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!1379, !1444, !1455}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1448, file: !1380, line: 106, baseType: !1477, size: 32, offset: 160)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1380, line: 92, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!103, !1444, !1455, !1481}
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1380, line: 64, baseType: !102)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1448, file: !1380, line: 107, baseType: !1483, size: 32, offset: 192)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1380, line: 96, baseType: !1484)
!1484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 32)
!1485 = !DISubroutineType(types: !1486)
!1486 = !{!103, !1444, !1455, !102}
!1487 = !DIGlobalVariableExpression(var: !1488, expr: !DIExpression())
!1488 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1489, file: !1546, line: 603, type: !1548, isLocal: true, isDefinition: true, align: 32)
!1489 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1490, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1491, globals: !1543, splitDebugInlining: false, nameTableKind: None)
!1490 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1491 = !{!102, !103, !1492}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1495, line: 336, size: 160, elements: !1496)
!1495 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1496 = !{!1497, !1517, !1521, !1525, !1538}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1494, file: !1495, line: 365, baseType: !1498, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!103, !1501, !1516}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1514, !1515}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1503, file: !810, line: 380, baseType: !108, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1503, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1503, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1503, file: !810, line: 386, baseType: !1509, size: 32, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !1511)
!1511 = !{!1512, !1513}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1510, file: !810, line: 359, baseType: !166, size: 8)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1510, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1503, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1503, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!1516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1494, file: !1495, line: 366, baseType: !1518, size: 32, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{null, !1501, !167}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1494, file: !1495, line: 374, baseType: !1522, size: 32, offset: 64)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!103, !1501}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1494, file: !1495, line: 377, baseType: !1526, size: 32, offset: 96)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 32)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{!103, !1501, !1529}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1531)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1495, line: 122, size: 64, elements: !1532)
!1532 = !{!1533, !1534, !1535, !1536, !1537}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1531, file: !1495, line: 123, baseType: !111, size: 32)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1531, file: !1495, line: 124, baseType: !166, size: 8, offset: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1531, file: !1495, line: 125, baseType: !166, size: 8, offset: 40)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1531, file: !1495, line: 126, baseType: !166, size: 8, offset: 48)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1531, file: !1495, line: 127, baseType: !166, size: 8, offset: 56)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1494, file: !1495, line: 379, baseType: !1539, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DISubroutineType(types: !1541)
!1541 = !{!103, !1501, !1542}
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1543 = !{!1487, !1544}
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1489, file: !1546, line: 38, type: !1547, isLocal: true, isDefinition: true)
!1546 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1501)
!1548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !1550)
!1550 = !{!1551, !1552}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1549, file: !801, line: 60, baseType: !1522, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1549, file: !801, line: 65, baseType: !1501, size: 32, offset: 32)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1555, file: !1705, line: 762, type: !1803, isLocal: true, isDefinition: true)
!1555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1557, retainedTypes: !1564, globals: !1702, splitDebugInlining: false, nameTableKind: None)
!1556 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1557 = !{!30, !1074, !1080, !1558, !1379}
!1558 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !1304, line: 43, baseType: !32, size: 32, elements: !1559)
!1559 = !{!1560, !1561, !1562, !1563}
!1560 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1561 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1562 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1563 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1564 = !{!102, !103, !1565, !1629, !1634, !1121, !1080, !1074, !1639, !1640, !111, !1654, !1610, !160, !1662, !1663}
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1075, line: 523, size: 288, elements: !1568)
!1568 = !{!1569, !1588, !1592, !1596, !1600, !1601, !1602, !1606, !1625}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1567, file: !1075, line: 524, baseType: !1570, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!103, !1573, !1109, !1110}
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !1576)
!1576 = !{!1577, !1578, !1579, !1580, !1586, !1587}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1575, file: !810, line: 380, baseType: !108, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1575, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1575, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1575, file: !810, line: 386, baseType: !1581, size: 32, offset: 96)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 32)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !1583)
!1583 = !{!1584, !1585}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1582, file: !810, line: 359, baseType: !166, size: 8)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1582, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1575, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1575, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1567, file: !1075, line: 530, baseType: !1589, size: 32, offset: 32)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!1590 = !DISubroutineType(types: !1591)
!1591 = !{!103, !1573, !1115}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1567, file: !1075, line: 532, baseType: !1593, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DISubroutineType(types: !1595)
!1595 = !{!103, !1573, !1121, !1116}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1567, file: !1075, line: 535, baseType: !1597, size: 32, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 32)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!103, !1573, !1121}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1567, file: !1075, line: 537, baseType: !1597, size: 32, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1567, file: !1075, line: 539, baseType: !1597, size: 32, offset: 160)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1567, file: !1075, line: 541, baseType: !1603, size: 32, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!103, !1573, !1109, !1074, !1080}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1567, file: !1075, line: 544, baseType: !1607, size: 32, offset: 224)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 32)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!103, !1573, !1610, !122}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 32)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1075, line: 478, size: 96, elements: !1612)
!1612 = !{!1613, !1619, !1624}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1611, file: !1075, line: 482, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1141, line: 33, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1141, line: 29, size: 32, elements: !1616)
!1616 = !{!1617}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1615, file: !1141, line: 30, baseType: !1618, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1611, file: !1075, line: 485, baseType: !1620, size: 32, offset: 32)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1075, line: 464, baseType: !1621)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 32)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{null, !1573, !1610, !1121}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1611, file: !1075, line: 493, baseType: !1121, size: 32, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1567, file: !1075, line: 547, baseType: !1626, size: 32, offset: 256)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 32)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!111, !1573}
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1075, line: 428, size: 32, elements: !1632)
!1632 = !{!1633}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1631, file: !1075, line: 434, baseType: !1121, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 32)
!1635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1636)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1075, line: 441, size: 32, elements: !1637)
!1637 = !{!1638}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1636, file: !1075, line: 447, baseType: !1121, size: 32)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !773, line: 314, baseType: !1642)
!1642 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 303, size: 320, elements: !1643)
!1643 = !{!1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1642, file: !773, line: 305, baseType: !777, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1642, file: !773, line: 306, baseType: !777, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1642, file: !773, line: 307, baseType: !777, size: 32, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1642, file: !773, line: 308, baseType: !777, size: 32, offset: 96)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1642, file: !773, line: 309, baseType: !777, size: 32, offset: 128)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1642, file: !773, line: 310, baseType: !777, size: 32, offset: 160)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1642, file: !773, line: 311, baseType: !777, size: 32, offset: 192)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1642, file: !773, line: 312, baseType: !777, size: 32, offset: 224)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1642, file: !773, line: 313, baseType: !1653, size: 64, offset: 256)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 64, elements: !216)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !773, line: 325, baseType: !1656)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 320, size: 192, elements: !1657)
!1657 = !{!1658, !1659, !1660}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1656, file: !773, line: 322, baseType: !777, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1656, file: !773, line: 323, baseType: !777, size: 32, offset: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1656, file: !773, line: 324, baseType: !1661, size: 128, offset: 64)
!1661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 128, elements: !1265)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1380, line: 100, size: 224, elements: !1666)
!1666 = !{!1667, !1672, !1673, !1682, !1687, !1692, !1697}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1665, file: !1380, line: 101, baseType: !1668, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1380, line: 76, baseType: !1669)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 32)
!1670 = !DISubroutineType(types: !1671)
!1671 = !{!103, !1573, !1455}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1665, file: !1380, line: 102, baseType: !1668, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1665, file: !1380, line: 103, baseType: !1674, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1380, line: 83, baseType: !1675)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 32)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!103, !1573, !1455, !1678, !102}
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1380, line: 72, baseType: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{null, !1573, !1455, !102}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1665, file: !1380, line: 104, baseType: !1683, size: 32, offset: 96)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1380, line: 79, baseType: !1684)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!103, !1573, !1455, !1411}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1665, file: !1380, line: 105, baseType: !1688, size: 32, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1380, line: 88, baseType: !1689)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 32)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{!1379, !1573, !1455}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1665, file: !1380, line: 106, baseType: !1693, size: 32, offset: 160)
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1380, line: 92, baseType: !1694)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 32)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{!103, !1573, !1455, !1481}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1665, file: !1380, line: 107, baseType: !1698, size: 32, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1380, line: 96, baseType: !1699)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 32)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!103, !1573, !1455, !102}
!1702 = !{!1703, !1709, !1711, !1721, !1726, !1728, !1730, !1735, !1737, !1739, !1744, !1746, !1748, !1750, !1752, !1754, !1759, !1761, !1763, !1777, !1779, !1781, !1783, !1785, !1787, !1789, !1791, !1793, !1795, !1797, !1553, !1799, !1801, !1814, !1816, !1818, !1820}
!1703 = !DIGlobalVariableExpression(var: !1704, expr: !DIExpression())
!1704 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1555, file: !1705, line: 762, type: !1706, isLocal: false, isDefinition: true, align: 16)
!1705 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 128, elements: !1707)
!1707 = !{!1708}
!1708 = !DISubrange(count: 8)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1555, file: !1705, line: 762, type: !1574, isLocal: false, isDefinition: true, align: 32)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1555, file: !1705, line: 762, type: !1713, isLocal: true, isDefinition: true, align: 32)
!1713 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1714)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !1715)
!1715 = !{!1716, !1720}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1714, file: !801, line: 60, baseType: !1717, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!103, !1573}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1714, file: !801, line: 65, baseType: !1573, size: 32, offset: 32)
!1721 = !DIGlobalVariableExpression(var: !1722, expr: !DIExpression())
!1722 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1555, file: !1705, line: 766, type: !1723, isLocal: false, isDefinition: true, align: 16)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 144, elements: !1724)
!1724 = !{!1725}
!1725 = !DISubrange(count: 9)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1555, file: !1705, line: 766, type: !1574, isLocal: false, isDefinition: true, align: 32)
!1728 = !DIGlobalVariableExpression(var: !1729, expr: !DIExpression())
!1729 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1555, file: !1705, line: 766, type: !1713, isLocal: true, isDefinition: true, align: 32)
!1730 = !DIGlobalVariableExpression(var: !1731, expr: !DIExpression())
!1731 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1555, file: !1705, line: 770, type: !1732, isLocal: false, isDefinition: true, align: 16)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 96, elements: !1733)
!1733 = !{!1734}
!1734 = !DISubrange(count: 6)
!1735 = !DIGlobalVariableExpression(var: !1736, expr: !DIExpression())
!1736 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1555, file: !1705, line: 770, type: !1574, isLocal: false, isDefinition: true, align: 32)
!1737 = !DIGlobalVariableExpression(var: !1738, expr: !DIExpression())
!1738 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1555, file: !1705, line: 770, type: !1713, isLocal: true, isDefinition: true, align: 32)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1555, file: !1705, line: 774, type: !1741, isLocal: false, isDefinition: true, align: 16)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 80, elements: !1742)
!1742 = !{!1743}
!1743 = !DISubrange(count: 5)
!1744 = !DIGlobalVariableExpression(var: !1745, expr: !DIExpression())
!1745 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1555, file: !1705, line: 774, type: !1574, isLocal: false, isDefinition: true, align: 32)
!1746 = !DIGlobalVariableExpression(var: !1747, expr: !DIExpression())
!1747 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1555, file: !1705, line: 774, type: !1713, isLocal: true, isDefinition: true, align: 32)
!1748 = !DIGlobalVariableExpression(var: !1749, expr: !DIExpression())
!1749 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1555, file: !1705, line: 778, type: !1741, isLocal: false, isDefinition: true, align: 16)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1555, file: !1705, line: 778, type: !1574, isLocal: false, isDefinition: true, align: 32)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1555, file: !1705, line: 778, type: !1713, isLocal: true, isDefinition: true, align: 32)
!1754 = !DIGlobalVariableExpression(var: !1755, expr: !DIExpression())
!1755 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1555, file: !1705, line: 790, type: !1756, isLocal: false, isDefinition: true, align: 16)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 112, elements: !1757)
!1757 = !{!1758}
!1758 = !DISubrange(count: 7)
!1759 = !DIGlobalVariableExpression(var: !1760, expr: !DIExpression())
!1760 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1555, file: !1705, line: 790, type: !1574, isLocal: false, isDefinition: true, align: 32)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1555, file: !1705, line: 790, type: !1713, isLocal: true, isDefinition: true, align: 32)
!1763 = !DIGlobalVariableExpression(var: !1764, expr: !DIExpression())
!1764 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1555, file: !1705, line: 762, type: !1765, isLocal: true, isDefinition: true)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1766, line: 237, size: 128, elements: !1767)
!1766 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1767 = !{!1768, !1769, !1770}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1765, file: !1766, line: 239, baseType: !1636, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1765, file: !1766, line: 241, baseType: !1573, size: 32, offset: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1765, file: !1766, line: 243, baseType: !1771, size: 64, offset: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1141, line: 40, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1141, line: 35, size: 64, elements: !1773)
!1773 = !{!1774, !1776}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1772, file: !1141, line: 36, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1772, file: !1141, line: 37, baseType: !1775, size: 32, offset: 32)
!1777 = !DIGlobalVariableExpression(var: !1778, expr: !DIExpression())
!1778 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1555, file: !1705, line: 762, type: !1582, isLocal: true, isDefinition: true, align: 8)
!1779 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression())
!1780 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1555, file: !1705, line: 766, type: !1765, isLocal: true, isDefinition: true)
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression())
!1782 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1555, file: !1705, line: 766, type: !1582, isLocal: true, isDefinition: true, align: 8)
!1783 = !DIGlobalVariableExpression(var: !1784, expr: !DIExpression())
!1784 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1555, file: !1705, line: 770, type: !1765, isLocal: true, isDefinition: true)
!1785 = !DIGlobalVariableExpression(var: !1786, expr: !DIExpression())
!1786 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1555, file: !1705, line: 770, type: !1582, isLocal: true, isDefinition: true, align: 8)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1555, file: !1705, line: 774, type: !1765, isLocal: true, isDefinition: true)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1555, file: !1705, line: 774, type: !1582, isLocal: true, isDefinition: true, align: 8)
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1555, file: !1705, line: 778, type: !1765, isLocal: true, isDefinition: true)
!1793 = !DIGlobalVariableExpression(var: !1794, expr: !DIExpression())
!1794 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1555, file: !1705, line: 778, type: !1582, isLocal: true, isDefinition: true, align: 8)
!1795 = !DIGlobalVariableExpression(var: !1796, expr: !DIExpression())
!1796 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1555, file: !1705, line: 790, type: !1765, isLocal: true, isDefinition: true)
!1797 = !DIGlobalVariableExpression(var: !1798, expr: !DIExpression())
!1798 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1555, file: !1705, line: 790, type: !1582, isLocal: true, isDefinition: true, align: 8)
!1799 = !DIGlobalVariableExpression(var: !1800, expr: !DIExpression())
!1800 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1555, file: !1705, line: 656, type: !1566, isLocal: true, isDefinition: true)
!1801 = !DIGlobalVariableExpression(var: !1802, expr: !DIExpression())
!1802 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1555, file: !1705, line: 766, type: !1803, isLocal: true, isDefinition: true)
!1803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1766, line: 224, size: 160, elements: !1805)
!1805 = !{!1806, !1807, !1808, !1809}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1804, file: !1766, line: 226, baseType: !1631, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1804, file: !1766, line: 228, baseType: !1411, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1804, file: !1766, line: 230, baseType: !103, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1804, file: !1766, line: 231, baseType: !1810, size: 64, offset: 96)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1407, line: 343, size: 64, elements: !1811)
!1811 = !{!1812, !1813}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1810, file: !1407, line: 344, baseType: !111, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1810, file: !1407, line: 345, baseType: !111, size: 32, offset: 32)
!1814 = !DIGlobalVariableExpression(var: !1815, expr: !DIExpression())
!1815 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1555, file: !1705, line: 770, type: !1803, isLocal: true, isDefinition: true)
!1816 = !DIGlobalVariableExpression(var: !1817, expr: !DIExpression())
!1817 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1555, file: !1705, line: 774, type: !1803, isLocal: true, isDefinition: true)
!1818 = !DIGlobalVariableExpression(var: !1819, expr: !DIExpression())
!1819 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1555, file: !1705, line: 778, type: !1803, isLocal: true, isDefinition: true)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1555, file: !1705, line: 790, type: !1803, isLocal: true, isDefinition: true)
!1822 = !DIGlobalVariableExpression(var: !1823, expr: !DIExpression())
!1823 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1824, file: !1962, line: 44, type: !2057, isLocal: false, isDefinition: true)
!1824 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1825, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1826, retainedTypes: !1859, globals: !1959, splitDebugInlining: false, nameTableKind: None)
!1825 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!1826 = !{!30, !1827, !1834, !1841, !1848, !1854, !1379}
!1827 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1495, line: 47, baseType: !32, size: 32, elements: !1828)
!1828 = !{!1829, !1830, !1831, !1832, !1833}
!1829 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1830 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1831 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1832 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1833 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1495, line: 75, baseType: !32, size: 32, elements: !1835)
!1835 = !{!1836, !1837, !1838, !1839, !1840}
!1836 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1837 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1838 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1839 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1840 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1841 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1495, line: 92, baseType: !32, size: 32, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847}
!1843 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1844 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1845 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1846 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1847 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1848 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1495, line: 84, baseType: !32, size: 32, elements: !1849)
!1849 = !{!1850, !1851, !1852, !1853}
!1850 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1851 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1852 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1853 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1854 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1495, line: 107, baseType: !32, size: 32, elements: !1855)
!1855 = !{!1856, !1857, !1858}
!1856 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1857 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1858 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1859 = !{!102, !103, !1860, !167, !166, !1909, !111, !1455, !1920, !181}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1862)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1495, line: 336, size: 160, elements: !1863)
!1863 = !{!1864, !1883, !1887, !1891, !1904}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1862, file: !1495, line: 365, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 32)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!103, !1868, !1516}
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !1871)
!1871 = !{!1872, !1873, !1874, !1875, !1881, !1882}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1870, file: !810, line: 380, baseType: !108, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1870, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1870, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1870, file: !810, line: 386, baseType: !1876, size: 32, offset: 96)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !1878)
!1878 = !{!1879, !1880}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1877, file: !810, line: 359, baseType: !166, size: 8)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1877, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1870, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1870, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1862, file: !1495, line: 366, baseType: !1884, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{null, !1868, !167}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1862, file: !1495, line: 374, baseType: !1888, size: 32, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{!103, !1868}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1862, file: !1495, line: 377, baseType: !1892, size: 32, offset: 96)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 32)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!103, !1868, !1895}
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1495, line: 122, size: 64, elements: !1898)
!1898 = !{!1899, !1900, !1901, !1902, !1903}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1897, file: !1495, line: 123, baseType: !111, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1897, file: !1495, line: 124, baseType: !166, size: 8, offset: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1897, file: !1495, line: 125, baseType: !166, size: 8, offset: 40)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1897, file: !1495, line: 126, baseType: !166, size: 8, offset: 48)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1897, file: !1495, line: 127, baseType: !166, size: 8, offset: 56)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1862, file: !1495, line: 379, baseType: !1905, size: 32, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!103, !1868, !1908}
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 32)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !773, line: 505, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 496, size: 224, elements: !1912)
!1912 = !{!1913, !1914, !1915, !1916, !1917, !1918, !1919}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1911, file: !773, line: 498, baseType: !777, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1911, file: !773, line: 499, baseType: !777, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1911, file: !773, line: 500, baseType: !777, size: 32, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1911, file: !773, line: 501, baseType: !777, size: 32, offset: 96)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1911, file: !773, line: 502, baseType: !777, size: 32, offset: 128)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1911, file: !773, line: 503, baseType: !777, size: 32, offset: 160)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1911, file: !773, line: 504, baseType: !777, size: 32, offset: 192)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1380, line: 100, size: 224, elements: !1923)
!1923 = !{!1924, !1929, !1930, !1939, !1944, !1949, !1954}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1922, file: !1380, line: 101, baseType: !1925, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1380, line: 76, baseType: !1926)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!103, !1868, !1455}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1922, file: !1380, line: 102, baseType: !1925, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1922, file: !1380, line: 103, baseType: !1931, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1380, line: 83, baseType: !1932)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 32)
!1933 = !DISubroutineType(types: !1934)
!1934 = !{!103, !1868, !1455, !1935, !102}
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1380, line: 72, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 32)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !1868, !1455, !102}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1922, file: !1380, line: 104, baseType: !1940, size: 32, offset: 96)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1380, line: 79, baseType: !1941)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!103, !1868, !1455, !1411}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1922, file: !1380, line: 105, baseType: !1945, size: 32, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1380, line: 88, baseType: !1946)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 32)
!1947 = !DISubroutineType(types: !1948)
!1948 = !{!1379, !1868, !1455}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1922, file: !1380, line: 106, baseType: !1950, size: 32, offset: 160)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1380, line: 92, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 32)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!103, !1868, !1455, !1481}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1922, file: !1380, line: 107, baseType: !1955, size: 32, offset: 192)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1380, line: 96, baseType: !1956)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 32)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!103, !1868, !1455, !102}
!1959 = !{!1822, !1960, !1963, !1965, !1972, !1974, !1976, !1978, !1980, !1982, !2026, !2029, !2031, !2034, !2037, !2039, !2045, !2047, !2049, !2051, !2053, !2055}
!1960 = !DIGlobalVariableExpression(var: !1961, expr: !DIExpression())
!1961 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1824, file: !1962, line: 1914, type: !1706, isLocal: false, isDefinition: true, align: 16)
!1962 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1963 = !DIGlobalVariableExpression(var: !1964, expr: !DIExpression())
!1964 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1824, file: !1962, line: 1914, type: !1869, isLocal: false, isDefinition: true, align: 32)
!1965 = !DIGlobalVariableExpression(var: !1966, expr: !DIExpression())
!1966 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1824, file: !1962, line: 1914, type: !1967, isLocal: true, isDefinition: true, align: 32)
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !1969)
!1969 = !{!1970, !1971}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1968, file: !801, line: 60, baseType: !1888, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1968, file: !801, line: 65, baseType: !1868, size: 32, offset: 32)
!1972 = !DIGlobalVariableExpression(var: !1973, expr: !DIExpression())
!1973 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1824, file: !1962, line: 1914, type: !1706, isLocal: false, isDefinition: true, align: 16)
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1824, file: !1962, line: 1914, type: !1869, isLocal: false, isDefinition: true, align: 32)
!1976 = !DIGlobalVariableExpression(var: !1977, expr: !DIExpression())
!1977 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1824, file: !1962, line: 1914, type: !1967, isLocal: true, isDefinition: true, align: 32)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1824, file: !1962, line: 1914, type: !1877, isLocal: true, isDefinition: true, align: 8)
!1980 = !DIGlobalVariableExpression(var: !1981, expr: !DIExpression())
!1981 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1824, file: !1962, line: 1914, type: !1877, isLocal: true, isDefinition: true, align: 8)
!1982 = !DIGlobalVariableExpression(var: !1983, expr: !DIExpression())
!1983 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1824, file: !1962, line: 1914, type: !1984, isLocal: true, isDefinition: true)
!1984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1986, line: 22, size: 224, elements: !1987)
!1986 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1987 = !{!1988, !1989, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1985, file: !1986, line: 24, baseType: !1909, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1985, file: !1986, line: 26, baseType: !1990, size: 32, offset: 32)
!1990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1992)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1407, line: 343, size: 64, elements: !1993)
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1992, file: !1407, line: 344, baseType: !111, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1992, file: !1407, line: 345, baseType: !111, size: 32, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1985, file: !1986, line: 28, baseType: !156, size: 32, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1985, file: !1986, line: 30, baseType: !122, size: 8, offset: 96)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1985, file: !1986, line: 32, baseType: !103, size: 32, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1985, file: !1986, line: 34, baseType: !122, size: 8, offset: 160)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1985, file: !1986, line: 36, baseType: !122, size: 8, offset: 168)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1985, file: !1986, line: 38, baseType: !122, size: 8, offset: 176)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1985, file: !1986, line: 40, baseType: !122, size: 8, offset: 184)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1985, file: !1986, line: 41, baseType: !2004, size: 32, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2006)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2007, line: 60, size: 64, elements: !2008)
!2007 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2008 = !{!2009, !2025}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !2006, file: !2007, line: 69, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2007, line: 50, size: 64, elements: !2013)
!2013 = !{!2014, !2023, !2024}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !2012, file: !2007, line: 52, baseType: !2015, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2017)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2018, line: 37, baseType: !2019)
!2018 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2018, line: 32, size: 64, elements: !2020)
!2020 = !{!2021, !2022}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !2019, file: !2018, line: 34, baseType: !111, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !2019, file: !2018, line: 36, baseType: !111, size: 32, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !2012, file: !2007, line: 54, baseType: !166, size: 8, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2012, file: !2007, line: 56, baseType: !166, size: 8, offset: 40)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !2006, file: !2007, line: 71, baseType: !166, size: 8, offset: 32)
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1824, file: !1962, line: 1914, type: !2028, isLocal: true, isDefinition: true)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1991, size: 64, elements: !532)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1824, file: !1962, line: 1914, type: !2005, isLocal: true, isDefinition: true)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1824, file: !1962, line: 1914, type: !2033, isLocal: true, isDefinition: true)
!2033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 64, elements: !532)
!2034 = !DIGlobalVariableExpression(var: !2035, expr: !DIExpression())
!2035 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1824, file: !1962, line: 1914, type: !2036, isLocal: true, isDefinition: true)
!2036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2016, size: 128, elements: !216)
!2037 = !DIGlobalVariableExpression(var: !2038, expr: !DIExpression())
!2038 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1824, file: !1962, line: 1539, type: !1861, isLocal: true, isDefinition: true)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1824, file: !1962, line: 1914, type: !2041, isLocal: true, isDefinition: true)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1986, line: 74, size: 64, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !2041, file: !1986, line: 76, baseType: !111, size: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !2041, file: !1986, line: 78, baseType: !1868, size: 32, offset: 32)
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1824, file: !1962, line: 1914, type: !1984, isLocal: true, isDefinition: true)
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1824, file: !1962, line: 1914, type: !2028, isLocal: true, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1824, file: !1962, line: 1914, type: !2005, isLocal: true, isDefinition: true)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1824, file: !1962, line: 1914, type: !2033, isLocal: true, isDefinition: true)
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1824, file: !1962, line: 1914, type: !2036, isLocal: true, isDefinition: true)
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1824, file: !1962, line: 1914, type: !2041, isLocal: true, isDefinition: true)
!2057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !2059)
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2058, file: !753, line: 17, baseType: !108, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2058, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !2064, file: !2142, line: 65, type: !777, isLocal: true, isDefinition: true)
!2064 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2065, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2066, retainedTypes: !2067, globals: !2139, splitDebugInlining: false, nameTableKind: None)
!2065 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2066 = !{!1194}
!2067 = !{!104, !2068, !320, !166, !111, !2076, !2107}
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1005, line: 712, baseType: !2070)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 706, size: 128, elements: !2071)
!2071 = !{!2072, !2073, !2074, !2075}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2070, file: !1005, line: 708, baseType: !777, size: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2070, file: !1005, line: 709, baseType: !777, size: 32, offset: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2070, file: !1005, line: 710, baseType: !777, size: 32, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2070, file: !1005, line: 711, baseType: !1009, size: 32, offset: 96)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1005, line: 360, baseType: !2078)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 345, size: 28704, elements: !2079)
!2079 = !{!2080, !2082, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2097, !2102, !2106}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2078, file: !1005, line: 347, baseType: !2081, size: 256)
!2081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 256, elements: !1707)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2078, file: !1005, line: 348, baseType: !2083, size: 768, offset: 256)
!2083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 768, elements: !2084)
!2084 = !{!2085}
!2085 = !DISubrange(count: 24)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2078, file: !1005, line: 349, baseType: !2081, size: 256, offset: 1024)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2078, file: !1005, line: 350, baseType: !2083, size: 768, offset: 1280)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2078, file: !1005, line: 351, baseType: !2081, size: 256, offset: 2048)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2078, file: !1005, line: 352, baseType: !2083, size: 768, offset: 2304)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2078, file: !1005, line: 353, baseType: !2081, size: 256, offset: 3072)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2078, file: !1005, line: 354, baseType: !2083, size: 768, offset: 3328)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2078, file: !1005, line: 355, baseType: !2081, size: 256, offset: 4096)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2078, file: !1005, line: 356, baseType: !2094, size: 1792, offset: 4352)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 1792, elements: !2095)
!2095 = !{!2096}
!2096 = !DISubrange(count: 56)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2078, file: !1005, line: 357, baseType: !2098, size: 1920, offset: 6144)
!2098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2099, size: 1920, elements: !2100)
!2099 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !166)
!2100 = !{!2101}
!2101 = !DISubrange(count: 240)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2078, file: !1005, line: 358, baseType: !2103, size: 20608, offset: 8064)
!2103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 20608, elements: !2104)
!2104 = !{!2105}
!2105 = !DISubrange(count: 644)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2078, file: !1005, line: 359, baseType: !777, size: 32, offset: 28672)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1005, line: 402, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 379, size: 1120, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115, !2116, !2117, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2130, !2131, !2132, !2134, !2136, !2138}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2109, file: !1005, line: 381, baseType: !1009, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2109, file: !1005, line: 382, baseType: !777, size: 32, offset: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2109, file: !1005, line: 383, baseType: !777, size: 32, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2109, file: !1005, line: 384, baseType: !777, size: 32, offset: 96)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2109, file: !1005, line: 385, baseType: !777, size: 32, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2109, file: !1005, line: 386, baseType: !777, size: 32, offset: 160)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2109, file: !1005, line: 387, baseType: !2118, size: 96, offset: 192)
!2118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2099, size: 96, elements: !2119)
!2119 = !{!2120}
!2120 = !DISubrange(count: 12)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2109, file: !1005, line: 388, baseType: !777, size: 32, offset: 288)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2109, file: !1005, line: 389, baseType: !777, size: 32, offset: 320)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2109, file: !1005, line: 390, baseType: !777, size: 32, offset: 352)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2109, file: !1005, line: 391, baseType: !777, size: 32, offset: 384)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2109, file: !1005, line: 392, baseType: !777, size: 32, offset: 416)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2109, file: !1005, line: 393, baseType: !777, size: 32, offset: 448)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2109, file: !1005, line: 394, baseType: !777, size: 32, offset: 480)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2109, file: !1005, line: 395, baseType: !2129, size: 64, offset: 512)
!2129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1009, size: 64, elements: !216)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2109, file: !1005, line: 396, baseType: !1009, size: 32, offset: 576)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2109, file: !1005, line: 397, baseType: !1009, size: 32, offset: 608)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2109, file: !1005, line: 398, baseType: !2133, size: 128, offset: 640)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1009, size: 128, elements: !1265)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2109, file: !1005, line: 399, baseType: !2135, size: 160, offset: 768)
!2135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1009, size: 160, elements: !1742)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2109, file: !1005, line: 400, baseType: !2137, size: 160, offset: 928)
!2137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !111, size: 160, elements: !1742)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2109, file: !1005, line: 401, baseType: !777, size: 32, offset: 1088)
!2139 = !{!2140, !2166, !2171, !2173, !2175, !2062}
!2140 = !DIGlobalVariableExpression(var: !2141, expr: !DIExpression())
!2141 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !2064, file: !2142, line: 285, type: !2143, isLocal: true, isDefinition: true, align: 32)
!2142 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2144)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !2145)
!2145 = !{!2146, !2165}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2144, file: !801, line: 60, baseType: !2147, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 32)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{!103, !2150}
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2152)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !2153)
!2153 = !{!2154, !2155, !2156, !2157, !2163, !2164}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2152, file: !810, line: 380, baseType: !108, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2152, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2152, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2152, file: !810, line: 386, baseType: !2158, size: 32, offset: 96)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !2160)
!2160 = !{!2161, !2162}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2159, file: !810, line: 359, baseType: !166, size: 8)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2159, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2152, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2152, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2144, file: !801, line: 65, baseType: !2150, size: 32, offset: 32)
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "lock", scope: !2064, file: !2142, line: 34, type: !2168, isLocal: true, isDefinition: true)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2169)
!2169 = !{!2170}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2168, file: !152, line: 52, baseType: !22, size: 32)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "last_load", scope: !2064, file: !2142, line: 36, type: !111, isLocal: true, isDefinition: true)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "cycle_count", scope: !2064, file: !2142, line: 48, type: !111, isLocal: true, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !2064, file: !2142, line: 54, type: !111, isLocal: true, isDefinition: true)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !2179, file: !2260, line: 22, type: !2262, isLocal: true, isDefinition: true)
!2179 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2180, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1073, retainedTypes: !2181, globals: !2257, splitDebugInlining: false, nameTableKind: None)
!2180 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2181 = !{!2182, !2246, !2251, !1121, !1080, !1074, !2256, !102}
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1075, line: 523, size: 288, elements: !2185)
!2185 = !{!2186, !2205, !2209, !2213, !2217, !2218, !2219, !2223, !2242}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2184, file: !1075, line: 524, baseType: !2187, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 32)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{!103, !2190, !1109, !1110}
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !2193)
!2193 = !{!2194, !2195, !2196, !2197, !2203, !2204}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2192, file: !810, line: 380, baseType: !108, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2192, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2192, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2192, file: !810, line: 386, baseType: !2198, size: 32, offset: 96)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !2200)
!2200 = !{!2201, !2202}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2199, file: !810, line: 359, baseType: !166, size: 8)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2199, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2192, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2192, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2184, file: !1075, line: 530, baseType: !2206, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 32)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{!103, !2190, !1115}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2184, file: !1075, line: 532, baseType: !2210, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!103, !2190, !1121, !1116}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2184, file: !1075, line: 535, baseType: !2214, size: 32, offset: 96)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 32)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!103, !2190, !1121}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2184, file: !1075, line: 537, baseType: !2214, size: 32, offset: 128)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2184, file: !1075, line: 539, baseType: !2214, size: 32, offset: 160)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2184, file: !1075, line: 541, baseType: !2220, size: 32, offset: 192)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 32)
!2221 = !DISubroutineType(types: !2222)
!2222 = !{!103, !2190, !1109, !1074, !1080}
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2184, file: !1075, line: 544, baseType: !2224, size: 32, offset: 224)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 32)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!103, !2190, !2227, !122}
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1075, line: 478, size: 96, elements: !2229)
!2229 = !{!2230, !2236, !2241}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2228, file: !1075, line: 482, baseType: !2231, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1141, line: 33, baseType: !2232)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1141, line: 29, size: 32, elements: !2233)
!2233 = !{!2234}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2232, file: !1141, line: 30, baseType: !2235, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2228, file: !1075, line: 485, baseType: !2237, size: 32, offset: 32)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1075, line: 464, baseType: !2238)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 32)
!2239 = !DISubroutineType(types: !2240)
!2240 = !{null, !2190, !2227, !1121}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2228, file: !1075, line: 493, baseType: !1121, size: 32, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2184, file: !1075, line: 547, baseType: !2243, size: 32, offset: 256)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 32)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{!111, !2190}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1075, line: 428, size: 32, elements: !2249)
!2249 = !{!2250}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2248, file: !1075, line: 434, baseType: !1121, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2253)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1075, line: 441, size: 32, elements: !2254)
!2254 = !{!2255}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2253, file: !1075, line: 447, baseType: !1121, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 32)
!2257 = !{!2258, !2177}
!2258 = !DIGlobalVariableExpression(var: !2259, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2259 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !2179, file: !2260, line: 37, type: !2261, isLocal: true, isDefinition: true)
!2260 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !156)
!2262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2263, size: 352, elements: !1348)
!2263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2190)
!2264 = !DIGlobalVariableExpression(var: !2265, expr: !DIExpression())
!2265 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2266, file: !2290, line: 129, type: !2298, isLocal: false, isDefinition: true)
!2266 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2267, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2268, globals: !2287, splitDebugInlining: false, nameTableKind: None)
!2267 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2268 = !{!2269}
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 386, baseType: !2271)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 370, size: 448, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2271, file: !773, line: 372, baseType: !777, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2271, file: !773, line: 373, baseType: !777, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2271, file: !773, line: 374, baseType: !777, size: 32, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2271, file: !773, line: 375, baseType: !777, size: 32, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2271, file: !773, line: 376, baseType: !777, size: 32, offset: 128)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2271, file: !773, line: 377, baseType: !777, size: 32, offset: 160)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2271, file: !773, line: 378, baseType: !777, size: 32, offset: 192)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2271, file: !773, line: 379, baseType: !777, size: 32, offset: 224)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2271, file: !773, line: 380, baseType: !777, size: 32, offset: 256)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2271, file: !773, line: 381, baseType: !777, size: 32, offset: 288)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2271, file: !773, line: 382, baseType: !777, size: 32, offset: 320)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2271, file: !773, line: 383, baseType: !777, size: 32, offset: 352)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2271, file: !773, line: 384, baseType: !777, size: 32, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2271, file: !773, line: 385, baseType: !777, size: 32, offset: 416)
!2287 = !{!2288, !2291, !2295, !2264}
!2288 = !DIGlobalVariableExpression(var: !2289, expr: !DIExpression())
!2289 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2266, file: !2290, line: 126, type: !111, isLocal: false, isDefinition: true)
!2290 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2291 = !DIGlobalVariableExpression(var: !2292, expr: !DIExpression())
!2292 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !2266, file: !2290, line: 127, type: !2293, isLocal: false, isDefinition: true)
!2293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2294, size: 72, elements: !1724)
!2294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2266, file: !2290, line: 128, type: !2297, isLocal: false, isDefinition: true)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2294, size: 128, elements: !333)
!2298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2294, size: 64, elements: !1707)
!2299 = !DIGlobalVariableExpression(var: !2300, expr: !DIExpression())
!2300 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2301, file: !2304, line: 23, type: !2305, isLocal: false, isDefinition: true)
!2301 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2302, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, globals: !2303, splitDebugInlining: false, nameTableKind: None)
!2302 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2303 = !{!2299}
!2304 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!2306 = !DIGlobalVariableExpression(var: !2307, expr: !DIExpression())
!2307 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2308, file: !2312, line: 37, type: !2564, isLocal: false, isDefinition: true)
!2308 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2309, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2310, retainedTypes: !2319, globals: !2392, splitDebugInlining: false, nameTableKind: None)
!2309 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2310 = !{!2311, !30, !1194}
!2311 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2312, line: 63, baseType: !32, size: 32, elements: !2313)
!2312 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2313 = !{!2314, !2315, !2316, !2317, !2318}
!2314 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2315 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2316 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2317 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2318 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2319 = !{!156, !102, !103, !2320, !160, !111, !2350, !320, !166, !2375}
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2322)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2323, line: 51, size: 64, elements: !2324)
!2323 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2324 = !{!2325, !2345}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2322, file: !2323, line: 52, baseType: !2326, size: 32)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2323, line: 38, baseType: !2327)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 32)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!103, !2330, !550, !181}
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2332)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !2333)
!2333 = !{!2334, !2335, !2336, !2337, !2343, !2344}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2332, file: !810, line: 380, baseType: !108, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2332, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2332, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2332, file: !810, line: 386, baseType: !2338, size: 32, offset: 96)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !2340)
!2340 = !{!2341, !2342}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2339, file: !810, line: 359, baseType: !166, size: 8)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2339, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2332, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2332, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2322, file: !2323, line: 53, baseType: !2346, size: 32, offset: 32)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2323, line: 47, baseType: !2347)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 32)
!2348 = !DISubroutineType(types: !2349)
!2349 = !{!103, !2330, !550, !181, !111}
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1005, line: 402, baseType: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 379, size: 1120, elements: !2353)
!2353 = !{!2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2352, file: !1005, line: 381, baseType: !1009, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2352, file: !1005, line: 382, baseType: !777, size: 32, offset: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2352, file: !1005, line: 383, baseType: !777, size: 32, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2352, file: !1005, line: 384, baseType: !777, size: 32, offset: 96)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2352, file: !1005, line: 385, baseType: !777, size: 32, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2352, file: !1005, line: 386, baseType: !777, size: 32, offset: 160)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2352, file: !1005, line: 387, baseType: !2118, size: 96, offset: 192)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2352, file: !1005, line: 388, baseType: !777, size: 32, offset: 288)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2352, file: !1005, line: 389, baseType: !777, size: 32, offset: 320)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2352, file: !1005, line: 390, baseType: !777, size: 32, offset: 352)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2352, file: !1005, line: 391, baseType: !777, size: 32, offset: 384)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2352, file: !1005, line: 392, baseType: !777, size: 32, offset: 416)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2352, file: !1005, line: 393, baseType: !777, size: 32, offset: 448)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2352, file: !1005, line: 394, baseType: !777, size: 32, offset: 480)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2352, file: !1005, line: 395, baseType: !2129, size: 64, offset: 512)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2352, file: !1005, line: 396, baseType: !1009, size: 32, offset: 576)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2352, file: !1005, line: 397, baseType: !1009, size: 32, offset: 608)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2352, file: !1005, line: 398, baseType: !2133, size: 128, offset: 640)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2352, file: !1005, line: 399, baseType: !2135, size: 160, offset: 768)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2352, file: !1005, line: 400, baseType: !2137, size: 160, offset: 928)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2352, file: !1005, line: 401, baseType: !777, size: 32, offset: 1088)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1005, line: 360, baseType: !2377)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 345, size: 28704, elements: !2378)
!2378 = !{!2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2377, file: !1005, line: 347, baseType: !2081, size: 256)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2377, file: !1005, line: 348, baseType: !2083, size: 768, offset: 256)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2377, file: !1005, line: 349, baseType: !2081, size: 256, offset: 1024)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2377, file: !1005, line: 350, baseType: !2083, size: 768, offset: 1280)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2377, file: !1005, line: 351, baseType: !2081, size: 256, offset: 2048)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2377, file: !1005, line: 352, baseType: !2083, size: 768, offset: 2304)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2377, file: !1005, line: 353, baseType: !2081, size: 256, offset: 3072)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2377, file: !1005, line: 354, baseType: !2083, size: 768, offset: 3328)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2377, file: !1005, line: 355, baseType: !2081, size: 256, offset: 4096)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2377, file: !1005, line: 356, baseType: !2094, size: 1792, offset: 4352)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2377, file: !1005, line: 357, baseType: !2098, size: 1920, offset: 6144)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2377, file: !1005, line: 358, baseType: !2103, size: 20608, offset: 8064)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2377, file: !1005, line: 359, baseType: !777, size: 32, offset: 28672)
!2392 = !{!2306, !2393, !2518, !2524, !2526, !2529, !2534, !2536, !2541}
!2393 = !DIGlobalVariableExpression(var: !2394, expr: !DIExpression())
!2394 = distinct !DIGlobalVariable(name: "_kernel", scope: !2308, file: !2312, line: 40, type: !2395, isLocal: false, isDefinition: true)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !131, line: 158, size: 288, elements: !2396)
!2396 = !{!2397, !2513}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2395, file: !131, line: 159, baseType: !2398, size: 192)
!2398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2399, size: 192, elements: !532)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !131, line: 100, size: 192, elements: !2400)
!2400 = !{!2401, !2402, !2403, !2506, !2507, !2508, !2509}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2399, file: !131, line: 102, baseType: !111, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2399, file: !131, line: 105, baseType: !160, size: 32, offset: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2399, file: !131, line: 108, baseType: !2404, size: 32, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 32)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2406)
!2406 = !{!2407, !2465, !2477, !2478, !2479, !2480, !2486, !2501}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2405, file: !199, line: 247, baseType: !2408, size: 384)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2409)
!2409 = !{!2410, !2434, !2441, !2442, !2443, !2452, !2453, !2454}
!2410 = !DIDerivedType(tag: DW_TAG_member, scope: !2408, file: !199, line: 60, baseType: !2411, size: 64)
!2411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2408, file: !199, line: 60, size: 64, elements: !2412)
!2412 = !{!2413, !2428}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2411, file: !199, line: 61, baseType: !2414, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2415)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2416)
!2416 = !{!2417, !2423}
!2417 = !DIDerivedType(tag: DW_TAG_member, scope: !2415, file: !136, line: 38, baseType: !2418, size: 32)
!2418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2415, file: !136, line: 38, size: 32, elements: !2419)
!2419 = !{!2420, !2422}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2418, file: !136, line: 39, baseType: !2421, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2418, file: !136, line: 40, baseType: !2421, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, scope: !2415, file: !136, line: 42, baseType: !2424, size: 32, offset: 32)
!2424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2415, file: !136, line: 42, size: 32, elements: !2425)
!2425 = !{!2426, !2427}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2424, file: !136, line: 43, baseType: !2421, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2424, file: !136, line: 44, baseType: !2421, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2411, file: !199, line: 62, baseType: !2429, size: 64)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2430)
!2430 = !{!2431}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2429, file: !211, line: 50, baseType: !2432, size: 64)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2433, size: 64, elements: !216)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2408, file: !199, line: 68, baseType: !2435, size: 32, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2437)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2438)
!2438 = !{!2439}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2437, file: !131, line: 232, baseType: !2440, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2415)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2408, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2408, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2443 = !DIDerivedType(tag: DW_TAG_member, scope: !2408, file: !199, line: 90, baseType: !2444, size: 16, offset: 112)
!2444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2408, file: !199, line: 90, size: 16, elements: !2445)
!2445 = !{!2446, !2451}
!2446 = !DIDerivedType(tag: DW_TAG_member, scope: !2444, file: !199, line: 91, baseType: !2447, size: 16)
!2447 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2444, file: !199, line: 91, size: 16, elements: !2448)
!2448 = !{!2449, !2450}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2447, file: !199, line: 96, baseType: !229, size: 8)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2447, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2444, file: !199, line: 100, baseType: !181, size: 16)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2408, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2408, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2408, file: !199, line: 131, baseType: !2455, size: 192, offset: 192)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2456)
!2456 = !{!2457, !2458, !2464}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2455, file: !131, line: 245, baseType: !2414, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2455, file: !131, line: 246, baseType: !2459, size: 32, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2460)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{null, !2463}
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2455, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2405, file: !199, line: 250, baseType: !2466, size: 288, offset: 384)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2467)
!2467 = !{!2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2466, file: !248, line: 26, baseType: !111, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2466, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2466, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2466, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2466, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2466, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2466, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2466, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2466, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2405, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2405, file: !199, line: 256, baseType: !2436, size: 64, offset: 704)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2405, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2405, file: !199, line: 300, baseType: !2481, size: 96, offset: 800)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2482)
!2482 = !{!2483, !2484, !2485}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2481, file: !199, line: 153, baseType: !22, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2481, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2481, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2405, file: !199, line: 325, baseType: !2487, size: 32, offset: 896)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2489)
!2489 = !{!2490, !2496, !2497}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2488, file: !127, line: 5074, baseType: !2491, size: 96)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2492)
!2492 = !{!2493, !2494, !2495}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2491, file: !274, line: 57, baseType: !277, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2491, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2491, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2488, file: !127, line: 5075, baseType: !2436, size: 64, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2488, file: !127, line: 5076, baseType: !2498, size: 32, offset: 160)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2499)
!2499 = !{!2500}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2498, file: !152, line: 52, baseType: !22, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2405, file: !199, line: 343, baseType: !2502, size: 64, offset: 928)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2503)
!2503 = !{!2504, !2505}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2502, file: !248, line: 63, baseType: !111, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2502, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2399, file: !131, line: 111, baseType: !2404, size: 32, offset: 96)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2399, file: !131, line: 124, baseType: !103, size: 32, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2399, file: !131, line: 127, baseType: !166, size: 8, offset: 160)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2399, file: !131, line: 153, baseType: !2510, offset: 168)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2511, line: 33, elements: !2512)
!2511 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2512 = !{}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2395, file: !131, line: 170, baseType: !2514, size: 96, offset: 192)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !131, line: 83, size: 96, elements: !2515)
!2515 = !{!2516, !2517}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2514, file: !131, line: 86, baseType: !2404, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2514, file: !131, line: 90, baseType: !2440, size: 64, offset: 32)
!2518 = !DIGlobalVariableExpression(var: !2519, expr: !DIExpression())
!2519 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2308, file: !2312, line: 43, type: !2520, isLocal: false, isDefinition: true, align: 512)
!2520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2521, size: 8704, elements: !338)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !2522)
!2522 = !{!2523}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2521, file: !305, line: 48, baseType: !110, size: 8)
!2524 = !DIGlobalVariableExpression(var: !2525, expr: !DIExpression())
!2525 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2308, file: !2312, line: 44, type: !2405, isLocal: false, isDefinition: true)
!2526 = !DIGlobalVariableExpression(var: !2527, expr: !DIExpression())
!2527 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2308, file: !2312, line: 48, type: !2528, isLocal: false, isDefinition: true)
!2528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2405, size: 1024, elements: !532)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2308, file: !2312, line: 86, type: !2531, isLocal: false, isDefinition: true, align: 512)
!2531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2521, size: 16896, elements: !2532)
!2532 = !{!533, !2533}
!2533 = !DISubrange(count: 2112)
!2534 = !DIGlobalVariableExpression(var: !2535, expr: !DIExpression())
!2535 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2308, file: !2312, line: 217, type: !122, isLocal: false, isDefinition: true)
!2536 = !DIGlobalVariableExpression(var: !2537, expr: !DIExpression())
!2537 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2308, file: !2312, line: 50, type: !2538, isLocal: true, isDefinition: true, align: 512)
!2538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2521, size: 2560, elements: !2539)
!2539 = !{!533, !2540}
!2540 = !DISubrange(count: 320)
!2541 = !DIGlobalVariableExpression(var: !2542, expr: !DIExpression())
!2542 = distinct !DIGlobalVariable(name: "levels", scope: !2543, file: !2312, line: 232, type: !2563, isLocal: true, isDefinition: true)
!2543 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2312, file: !2312, line: 230, type: !2544, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2546)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{null, !2311}
!2546 = !{!2547, !2548, !2558, !2562}
!2547 = !DILocalVariable(name: "level", arg: 1, scope: !2543, file: !2312, line: 230, type: !2311)
!2548 = !DILocalVariable(name: "entry", scope: !2543, file: !2312, line: 244, type: !2549)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 32)
!2550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2551)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !2552)
!2552 = !{!2553, !2557}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2551, file: !801, line: 60, baseType: !2554, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!103, !2330}
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2551, file: !801, line: 65, baseType: !2330, size: 32, offset: 32)
!2558 = !DILocalVariable(name: "dev", scope: !2559, file: !2312, line: 247, type: !2330)
!2559 = distinct !DILexicalBlock(scope: !2560, file: !2312, line: 246, column: 64)
!2560 = distinct !DILexicalBlock(scope: !2561, file: !2312, line: 246, column: 2)
!2561 = distinct !DILexicalBlock(scope: !2543, file: !2312, line: 246, column: 2)
!2562 = !DILocalVariable(name: "rc", scope: !2559, file: !2312, line: 248, type: !103)
!2563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2549, size: 192, elements: !1733)
!2564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2565)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !753, line: 16, size: 64, elements: !2566)
!2566 = !{!2567, !2568}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2565, file: !753, line: 17, baseType: !108, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2565, file: !753, line: 18, baseType: !166, size: 8, offset: 32)
!2569 = !DIGlobalVariableExpression(var: !2570, expr: !DIExpression())
!2570 = distinct !DIGlobalVariable(name: "states_str", scope: !2571, file: !2572, line: 276, type: !2695, isLocal: true, isDefinition: true)
!2571 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2572, file: !2572, line: 271, type: !2573, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !2686)
!2572 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!108, !2575, !160, !156}
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !2576)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 32)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2578)
!2578 = !{!2579, !2637, !2649, !2650, !2651, !2652, !2658, !2673}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2577, file: !199, line: 247, baseType: !2580, size: 384)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2581)
!2581 = !{!2582, !2606, !2613, !2614, !2615, !2624, !2625, !2626}
!2582 = !DIDerivedType(tag: DW_TAG_member, scope: !2580, file: !199, line: 60, baseType: !2583, size: 64)
!2583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2580, file: !199, line: 60, size: 64, elements: !2584)
!2584 = !{!2585, !2600}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2583, file: !199, line: 61, baseType: !2586, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2587)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2588)
!2588 = !{!2589, !2595}
!2589 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !136, line: 38, baseType: !2590, size: 32)
!2590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !136, line: 38, size: 32, elements: !2591)
!2591 = !{!2592, !2594}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2590, file: !136, line: 39, baseType: !2593, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2590, file: !136, line: 40, baseType: !2593, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !136, line: 42, baseType: !2596, size: 32, offset: 32)
!2596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !136, line: 42, size: 32, elements: !2597)
!2597 = !{!2598, !2599}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2596, file: !136, line: 43, baseType: !2593, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2596, file: !136, line: 44, baseType: !2593, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2583, file: !199, line: 62, baseType: !2601, size: 64)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2602)
!2602 = !{!2603}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2601, file: !211, line: 50, baseType: !2604, size: 64)
!2604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2605, size: 64, elements: !216)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2580, file: !199, line: 68, baseType: !2607, size: 32, offset: 64)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2609)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2610)
!2610 = !{!2611}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2609, file: !131, line: 232, baseType: !2612, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2587)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2580, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2580, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2615 = !DIDerivedType(tag: DW_TAG_member, scope: !2580, file: !199, line: 90, baseType: !2616, size: 16, offset: 112)
!2616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2580, file: !199, line: 90, size: 16, elements: !2617)
!2617 = !{!2618, !2623}
!2618 = !DIDerivedType(tag: DW_TAG_member, scope: !2616, file: !199, line: 91, baseType: !2619, size: 16)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2616, file: !199, line: 91, size: 16, elements: !2620)
!2620 = !{!2621, !2622}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2619, file: !199, line: 96, baseType: !229, size: 8)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2619, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2616, file: !199, line: 100, baseType: !181, size: 16)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2580, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2580, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2580, file: !199, line: 131, baseType: !2627, size: 192, offset: 192)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2628)
!2628 = !{!2629, !2630, !2636}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2627, file: !131, line: 245, baseType: !2586, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2627, file: !131, line: 246, baseType: !2631, size: 32, offset: 64)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2632)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 32)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{null, !2635}
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2627, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2577, file: !199, line: 250, baseType: !2638, size: 288, offset: 384)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2639)
!2639 = !{!2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2638, file: !248, line: 26, baseType: !111, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2638, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2638, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2638, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2638, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2638, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2638, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2638, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2638, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2577, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2577, file: !199, line: 256, baseType: !2608, size: 64, offset: 704)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2577, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2577, file: !199, line: 300, baseType: !2653, size: 96, offset: 800)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2654)
!2654 = !{!2655, !2656, !2657}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2653, file: !199, line: 153, baseType: !22, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2653, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2653, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2577, file: !199, line: 325, baseType: !2659, size: 32, offset: 896)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2661)
!2661 = !{!2662, !2668, !2669}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2660, file: !127, line: 5074, baseType: !2663, size: 96)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2664)
!2664 = !{!2665, !2666, !2667}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2663, file: !274, line: 57, baseType: !277, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2663, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2663, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2660, file: !127, line: 5075, baseType: !2608, size: 64, offset: 96)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2660, file: !127, line: 5076, baseType: !2670, size: 32, offset: 160)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2671)
!2671 = !{!2672}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2670, file: !152, line: 52, baseType: !22, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2577, file: !199, line: 343, baseType: !2674, size: 64, offset: 928)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2675)
!2675 = !{!2676, !2677}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2674, file: !248, line: 63, baseType: !111, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2674, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2678 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2679, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2680, globals: !2682, splitDebugInlining: false, nameTableKind: None)
!2679 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2680 = !{!102, !108, !104, !166, !22, !103, !2681, !24, !156, !160, !111, !112}
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!2682 = !{!2569, !2683}
!2683 = !DIGlobalVariableExpression(var: !2684, expr: !DIExpression())
!2684 = distinct !DIGlobalVariable(name: "states_sz", scope: !2571, file: !2572, line: 279, type: !2685, isLocal: true, isDefinition: true)
!2685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2261, size: 256, elements: !1707)
!2686 = !{!2687, !2688, !2689, !2690, !2691, !2692, !2693}
!2687 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2571, file: !2572, line: 271, type: !2575)
!2688 = !DILocalVariable(name: "buf", arg: 2, scope: !2571, file: !2572, line: 271, type: !160)
!2689 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2571, file: !2572, line: 271, type: !156)
!2690 = !DILocalVariable(name: "off", scope: !2571, file: !2572, line: 273, type: !156)
!2691 = !DILocalVariable(name: "bit", scope: !2571, file: !2572, line: 274, type: !166)
!2692 = !DILocalVariable(name: "thread_state", scope: !2571, file: !2572, line: 275, type: !166)
!2693 = !DILocalVariable(name: "index", scope: !2694, file: !2572, line: 293, type: !166)
!2694 = distinct !DILexicalBlock(scope: !2571, file: !2572, line: 293, column: 2)
!2695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !108, size: 256, elements: !1707)
!2696 = !DIGlobalVariableExpression(var: !2697, expr: !DIExpression())
!2697 = distinct !DIGlobalVariable(name: "lock", scope: !2698, file: !2805, line: 47, type: !2796, isLocal: true, isDefinition: true)
!2698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2699, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2700, globals: !2804, splitDebugInlining: false, nameTableKind: None)
!2699 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2700 = !{!122, !102, !103, !2701, !2716}
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2704)
!2704 = !{!2705, !2711}
!2705 = !DIDerivedType(tag: DW_TAG_member, scope: !2703, file: !136, line: 38, baseType: !2706, size: 32)
!2706 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2703, file: !136, line: 38, size: 32, elements: !2707)
!2707 = !{!2708, !2710}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2706, file: !136, line: 39, baseType: !2709, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2706, file: !136, line: 40, baseType: !2709, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2703, file: !136, line: 42, baseType: !2712, size: 32, offset: 32)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2703, file: !136, line: 42, size: 32, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2712, file: !136, line: 43, baseType: !2709, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2712, file: !136, line: 44, baseType: !2709, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 32)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2718)
!2718 = !{!2719, !2763, !2775, !2776, !2777, !2778, !2784, !2799}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2717, file: !199, line: 247, baseType: !2720, size: 384)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2721)
!2721 = !{!2722, !2732, !2739, !2740, !2741, !2750, !2751, !2752}
!2722 = !DIDerivedType(tag: DW_TAG_member, scope: !2720, file: !199, line: 60, baseType: !2723, size: 64)
!2723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2720, file: !199, line: 60, size: 64, elements: !2724)
!2724 = !{!2725, !2726}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2723, file: !199, line: 61, baseType: !2702, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2723, file: !199, line: 62, baseType: !2727, size: 64)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2728)
!2728 = !{!2729}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2727, file: !211, line: 50, baseType: !2730, size: 64)
!2730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2731, size: 64, elements: !216)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2720, file: !199, line: 68, baseType: !2733, size: 32, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2735)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2736)
!2736 = !{!2737}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2735, file: !131, line: 232, baseType: !2738, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2703)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2720, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2720, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2741 = !DIDerivedType(tag: DW_TAG_member, scope: !2720, file: !199, line: 90, baseType: !2742, size: 16, offset: 112)
!2742 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2720, file: !199, line: 90, size: 16, elements: !2743)
!2743 = !{!2744, !2749}
!2744 = !DIDerivedType(tag: DW_TAG_member, scope: !2742, file: !199, line: 91, baseType: !2745, size: 16)
!2745 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2742, file: !199, line: 91, size: 16, elements: !2746)
!2746 = !{!2747, !2748}
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2745, file: !199, line: 96, baseType: !229, size: 8)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2745, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2742, file: !199, line: 100, baseType: !181, size: 16)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2720, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2720, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2720, file: !199, line: 131, baseType: !2753, size: 192, offset: 192)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2754)
!2754 = !{!2755, !2756, !2762}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2753, file: !131, line: 245, baseType: !2702, size: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2753, file: !131, line: 246, baseType: !2757, size: 32, offset: 64)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2758)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 32)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{null, !2761}
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2753, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2717, file: !199, line: 250, baseType: !2764, size: 288, offset: 384)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2765)
!2765 = !{!2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2764, file: !248, line: 26, baseType: !111, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2764, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2764, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2764, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2764, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2764, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2764, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2764, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2764, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2717, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2717, file: !199, line: 256, baseType: !2734, size: 64, offset: 704)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2717, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2717, file: !199, line: 300, baseType: !2779, size: 96, offset: 800)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2780)
!2780 = !{!2781, !2782, !2783}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2779, file: !199, line: 153, baseType: !22, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2779, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2779, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2717, file: !199, line: 325, baseType: !2785, size: 32, offset: 896)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 32)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2787)
!2787 = !{!2788, !2794, !2795}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2786, file: !127, line: 5074, baseType: !2789, size: 96)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2790)
!2790 = !{!2791, !2792, !2793}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2789, file: !274, line: 57, baseType: !277, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2789, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2789, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2786, file: !127, line: 5075, baseType: !2734, size: 64, offset: 96)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2786, file: !127, line: 5076, baseType: !2796, size: 32, offset: 160)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2797)
!2797 = !{!2798}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2796, file: !152, line: 52, baseType: !22, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2717, file: !199, line: 343, baseType: !2800, size: 64, offset: 928)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2801)
!2801 = !{!2802, !2803}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2800, file: !248, line: 63, baseType: !111, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2800, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2804 = !{!2696}
!2805 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2806 = !DIGlobalVariableExpression(var: !2807, expr: !DIExpression())
!2807 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2808, file: !2918, line: 56, type: !2905, isLocal: false, isDefinition: true)
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2810, globals: !2915, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2810 = !{!2811, !160, !102, !2913, !550, !104, !320, !103, !111, !112, !2914}
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 32)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !2813)
!2813 = !{!2814, !2872, !2884, !2885, !2886, !2887, !2893, !2908}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2812, file: !199, line: 247, baseType: !2815, size: 384)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !2816)
!2816 = !{!2817, !2841, !2848, !2849, !2850, !2859, !2860, !2861}
!2817 = !DIDerivedType(tag: DW_TAG_member, scope: !2815, file: !199, line: 60, baseType: !2818, size: 64)
!2818 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2815, file: !199, line: 60, size: 64, elements: !2819)
!2819 = !{!2820, !2835}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2818, file: !199, line: 61, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2822)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2823)
!2823 = !{!2824, !2830}
!2824 = !DIDerivedType(tag: DW_TAG_member, scope: !2822, file: !136, line: 38, baseType: !2825, size: 32)
!2825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2822, file: !136, line: 38, size: 32, elements: !2826)
!2826 = !{!2827, !2829}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2825, file: !136, line: 39, baseType: !2828, size: 32)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2825, file: !136, line: 40, baseType: !2828, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, scope: !2822, file: !136, line: 42, baseType: !2831, size: 32, offset: 32)
!2831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2822, file: !136, line: 42, size: 32, elements: !2832)
!2832 = !{!2833, !2834}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2831, file: !136, line: 43, baseType: !2828, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2831, file: !136, line: 44, baseType: !2828, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2818, file: !199, line: 62, baseType: !2836, size: 64)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !2837)
!2837 = !{!2838}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2836, file: !211, line: 50, baseType: !2839, size: 64)
!2839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2840, size: 64, elements: !216)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2815, file: !199, line: 68, baseType: !2842, size: 32, offset: 64)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2844)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2845)
!2845 = !{!2846}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2844, file: !131, line: 232, baseType: !2847, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2822)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2815, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2815, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!2850 = !DIDerivedType(tag: DW_TAG_member, scope: !2815, file: !199, line: 90, baseType: !2851, size: 16, offset: 112)
!2851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2815, file: !199, line: 90, size: 16, elements: !2852)
!2852 = !{!2853, !2858}
!2853 = !DIDerivedType(tag: DW_TAG_member, scope: !2851, file: !199, line: 91, baseType: !2854, size: 16)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2851, file: !199, line: 91, size: 16, elements: !2855)
!2855 = !{!2856, !2857}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2854, file: !199, line: 96, baseType: !229, size: 8)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2854, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2851, file: !199, line: 100, baseType: !181, size: 16)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2815, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2815, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2815, file: !199, line: 131, baseType: !2862, size: 192, offset: 192)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2863)
!2863 = !{!2864, !2865, !2871}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2862, file: !131, line: 245, baseType: !2821, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2862, file: !131, line: 246, baseType: !2866, size: 32, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2867)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 32)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{null, !2870}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2862, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2812, file: !199, line: 250, baseType: !2873, size: 288, offset: 384)
!2873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !2874)
!2874 = !{!2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883}
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2873, file: !248, line: 26, baseType: !111, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2873, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2873, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2873, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2873, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2873, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2873, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2873, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2873, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2812, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2812, file: !199, line: 256, baseType: !2843, size: 64, offset: 704)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2812, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2812, file: !199, line: 300, baseType: !2888, size: 96, offset: 800)
!2888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !2889)
!2889 = !{!2890, !2891, !2892}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2888, file: !199, line: 153, baseType: !22, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2888, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2888, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2812, file: !199, line: 325, baseType: !2894, size: 32, offset: 896)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 32)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2896)
!2896 = !{!2897, !2903, !2904}
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2895, file: !127, line: 5074, baseType: !2898, size: 96)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2899)
!2899 = !{!2900, !2901, !2902}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2898, file: !274, line: 57, baseType: !277, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2898, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2898, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2895, file: !127, line: 5075, baseType: !2843, size: 64, offset: 96)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2895, file: !127, line: 5076, baseType: !2905, size: 32, offset: 160)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2906)
!2906 = !{!2907}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2905, file: !152, line: 52, baseType: !22, size: 32)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2812, file: !199, line: 343, baseType: !2909, size: 64, offset: 928)
!2909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !2910)
!2910 = !{!2911, !2912}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2909, file: !248, line: 63, baseType: !111, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2909, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 32)
!2915 = !{!2806, !2916, !2919, !2921}
!2916 = !DIGlobalVariableExpression(var: !2917, expr: !DIExpression())
!2917 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2808, file: !2918, line: 404, type: !103, isLocal: true, isDefinition: true)
!2918 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2919 = !DIGlobalVariableExpression(var: !2920, expr: !DIExpression())
!2920 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2808, file: !2918, line: 405, type: !103, isLocal: true, isDefinition: true)
!2921 = !DIGlobalVariableExpression(var: !2922, expr: !DIExpression())
!2922 = distinct !DIGlobalVariable(name: "pending_current", scope: !2808, file: !2918, line: 425, type: !2811, isLocal: true, isDefinition: true)
!2923 = !DIGlobalVariableExpression(var: !2924, expr: !DIExpression())
!2924 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2925, file: !2955, line: 19, type: !2961, isLocal: true, isDefinition: true)
!2925 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2926, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2927, globals: !2952, splitDebugInlining: false, nameTableKind: None)
!2926 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2927 = !{!104, !102, !320, !111, !112, !103, !2928, !160, !106}
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 32)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !2930)
!2930 = !{!2931, !2946, !2951}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2929, file: !131, line: 245, baseType: !2932, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2933)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2934)
!2934 = !{!2935, !2941}
!2935 = !DIDerivedType(tag: DW_TAG_member, scope: !2933, file: !136, line: 38, baseType: !2936, size: 32)
!2936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2933, file: !136, line: 38, size: 32, elements: !2937)
!2937 = !{!2938, !2940}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2936, file: !136, line: 39, baseType: !2939, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2936, file: !136, line: 40, baseType: !2939, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, scope: !2933, file: !136, line: 42, baseType: !2942, size: 32, offset: 32)
!2942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2933, file: !136, line: 42, size: 32, elements: !2943)
!2943 = !{!2944, !2945}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2942, file: !136, line: 43, baseType: !2939, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2942, file: !136, line: 44, baseType: !2939, size: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2929, file: !131, line: 246, baseType: !2947, size: 32, offset: 64)
!2947 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !2948)
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 32)
!2949 = !DISubroutineType(types: !2950)
!2950 = !{null, !2928}
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2929, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!2952 = !{!2953, !2923, !2956, !2958}
!2953 = !DIGlobalVariableExpression(var: !2954, expr: !DIExpression())
!2954 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2925, file: !2955, line: 15, type: !112, isLocal: true, isDefinition: true)
!2955 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2956 = !DIGlobalVariableExpression(var: !2957, expr: !DIExpression())
!2957 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2925, file: !2955, line: 25, type: !103, isLocal: true, isDefinition: true)
!2958 = !DIGlobalVariableExpression(var: !2959, expr: !DIExpression())
!2959 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2925, file: !2955, line: 17, type: !2960, isLocal: true, isDefinition: true)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2933)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !2962)
!2962 = !{!2963}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2961, file: !152, line: 52, baseType: !22, size: 32)
!2964 = !DIGlobalVariableExpression(var: !2965, expr: !DIExpression())
!2965 = distinct !DIGlobalVariable(name: "kheap__system_heap", scope: !2966, file: !2972, line: 61, type: !3004, isLocal: false, isDefinition: true, align: 64)
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2968, globals: !2969, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!2968 = !{!102, !103, !22}
!2969 = !{!2970, !2964}
!2970 = !DIGlobalVariableExpression(var: !2971, expr: !DIExpression())
!2971 = distinct !DIGlobalVariable(name: "_system_heap", scope: !2966, file: !2972, line: 61, type: !2973, isLocal: false, isDefinition: true, align: 32)
!2972 = !DIFile(filename: "zephyr/kernel/mempool.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !2974)
!2974 = !{!2975, !2981, !3000}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2973, file: !127, line: 5074, baseType: !2976, size: 96)
!2976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !2977)
!2977 = !{!2978, !2979, !2980}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2976, file: !274, line: 57, baseType: !277, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2976, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2976, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2973, file: !127, line: 5075, baseType: !2982, size: 64, offset: 96)
!2982 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !2983)
!2983 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !2984)
!2984 = !{!2985}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2983, file: !131, line: 232, baseType: !2986, size: 64)
!2986 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !2987)
!2987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !2988)
!2988 = !{!2989, !2995}
!2989 = !DIDerivedType(tag: DW_TAG_member, scope: !2987, file: !136, line: 38, baseType: !2990, size: 32)
!2990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2987, file: !136, line: 38, size: 32, elements: !2991)
!2991 = !{!2992, !2994}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2990, file: !136, line: 39, baseType: !2993, size: 32)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2990, file: !136, line: 40, baseType: !2993, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, scope: !2987, file: !136, line: 42, baseType: !2996, size: 32, offset: 32)
!2996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2987, file: !136, line: 42, size: 32, elements: !2997)
!2997 = !{!2998, !2999}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2996, file: !136, line: 43, baseType: !2993, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2996, file: !136, line: 44, baseType: !2993, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2973, file: !127, line: 5076, baseType: !3001, size: 32, offset: 160)
!3001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !3002)
!3002 = !{!3003}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3001, file: !152, line: 52, baseType: !22, size: 32)
!3004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 8192, elements: !3005)
!3005 = !{!3006}
!3006 = !DISubrange(count: 1024)
!3007 = !DIGlobalVariableExpression(var: !3008, expr: !DIExpression())
!3008 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !3009, file: !3028, line: 55, type: !3029, isLocal: true, isDefinition: true, align: 32)
!3009 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3010, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3011, globals: !3027, splitDebugInlining: false, nameTableKind: None)
!3010 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3011 = !{!102, !104, !103, !3012}
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !3014)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !3015)
!3015 = !{!3016, !3022}
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !136, line: 38, baseType: !3017, size: 32)
!3017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !136, line: 38, size: 32, elements: !3018)
!3018 = !{!3019, !3021}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3017, file: !136, line: 39, baseType: !3020, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3017, file: !136, line: 40, baseType: !3020, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !136, line: 42, baseType: !3023, size: 32, offset: 32)
!3023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !136, line: 42, size: 32, elements: !3024)
!3024 = !{!3025, !3026}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3023, file: !136, line: 43, baseType: !3020, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3023, file: !136, line: 44, baseType: !3020, size: 32)
!3027 = !{!3007}
!3028 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3030)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !801, line: 51, size: 64, elements: !3031)
!3031 = !{!3032, !3039}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3030, file: !801, line: 60, baseType: !3033, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 32)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!103, !3036}
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 32)
!3037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3038)
!3038 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !801, line: 48, flags: DIFlagFwdDecl)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3030, file: !801, line: 65, baseType: !3036, size: 32, offset: 32)
!3040 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3041, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3041 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3042 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3043, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3043 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3044 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3045, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3046, retainedTypes: !3054, splitDebugInlining: false, nameTableKind: None)
!3045 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3046 = !{!30, !3047}
!3047 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !3048, line: 54, baseType: !32, size: 32, elements: !3049)
!3048 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3049 = !{!3050, !3051, !3052, !3053}
!3050 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!3051 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!3052 = !DIEnumerator(name: "FREE_PREV", value: 2)
!3053 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!3054 = !{!102, !156, !550, !24, !3055, !22, !3061, !103, !1411, !3076}
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !3048, line: 58, baseType: !3057)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3048, line: 58, size: 64, elements: !3058)
!3058 = !{!3059}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !3057, file: !3048, line: 58, baseType: !3060, size: 64)
!3060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !1707)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 32)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !3048, line: 68, size: 128, elements: !3063)
!3063 = !{!3064, !3067, !3068, !3069}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !3062, file: !3048, line: 69, baseType: !3065, size: 64)
!3065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3066, size: 64, elements: !216)
!3066 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !3048, line: 61, baseType: !111)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !3062, file: !3048, line: 70, baseType: !3066, size: 32, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !3062, file: !3048, line: 71, baseType: !111, size: 32, offset: 96)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !3062, file: !3048, line: 77, baseType: !3070, offset: 128)
!3070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3071, elements: !3074)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !3048, line: 64, size: 32, elements: !3072)
!3072 = !{!3073}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3071, file: !3048, line: 65, baseType: !3066, size: 32)
!3074 = !{!3075}
!3075 = !DISubrange(count: 0)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!3077 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3078, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3079, retainedTypes: !3099, splitDebugInlining: false, nameTableKind: None)
!3078 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3079 = !{!3080, !3088}
!3080 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !3081, line: 69, baseType: !32, size: 32, elements: !3082)
!3081 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3082 = !{!3083, !3084, !3085, !3086, !3087}
!3083 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!3084 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!3085 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!3086 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!3087 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!3088 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !3081, line: 56, baseType: !32, size: 32, elements: !3089)
!3089 = !{!3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098}
!3090 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!3091 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!3092 = !DIEnumerator(name: "LENGTH_H", value: 2)
!3093 = !DIEnumerator(name: "LENGTH_L", value: 3)
!3094 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!3095 = !DIEnumerator(name: "LENGTH_J", value: 5)
!3096 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!3097 = !DIEnumerator(name: "LENGTH_T", value: 7)
!3098 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!3099 = !{!103, !3080, !3088, !3100, !230, !827, !3102, !3103, !167, !182, !108, !156, !102, !22, !32, !744, !3105, !3106, !746, !745, !107, !747, !3101, !3107, !3108, !3109, !3110}
!3100 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !3081, line: 31, baseType: !3101)
!3101 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!3102 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !157, line: 329, baseType: !32)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !3081, line: 32, baseType: !3104)
!3104 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !113)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 32)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3101, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!3109 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !157, line: 145, baseType: !103)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 32)
!3111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3117, splitDebugInlining: false, nameTableKind: None)
!3116 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3117 = !{!108, !167, !103, !32}
!3118 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3119, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3120, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3119 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3120 = !{!3121, !30}
!3121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !3122, line: 27, baseType: !32, size: 32, elements: !3123)
!3122 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3123 = !{!3124, !3125, !3126, !3127, !3128}
!3124 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!3125 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!3126 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!3127 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!3128 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!3129 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3130, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3131, retainedTypes: !3132, splitDebugInlining: false, nameTableKind: None)
!3130 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3131 = !{!1194, !3121, !30}
!3132 = !{!1338, !3133, !102, !103, !320, !111, !166, !3150}
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 32)
!3134 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1005, line: 360, baseType: !3135)
!3135 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 345, size: 28704, elements: !3136)
!3136 = !{!3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3135, file: !1005, line: 347, baseType: !2081, size: 256)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3135, file: !1005, line: 348, baseType: !2083, size: 768, offset: 256)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3135, file: !1005, line: 349, baseType: !2081, size: 256, offset: 1024)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3135, file: !1005, line: 350, baseType: !2083, size: 768, offset: 1280)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3135, file: !1005, line: 351, baseType: !2081, size: 256, offset: 2048)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3135, file: !1005, line: 352, baseType: !2083, size: 768, offset: 2304)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3135, file: !1005, line: 353, baseType: !2081, size: 256, offset: 3072)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3135, file: !1005, line: 354, baseType: !2083, size: 768, offset: 3328)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3135, file: !1005, line: 355, baseType: !2081, size: 256, offset: 4096)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3135, file: !1005, line: 356, baseType: !2094, size: 1792, offset: 4352)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3135, file: !1005, line: 357, baseType: !2098, size: 1920, offset: 6144)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3135, file: !1005, line: 358, baseType: !2103, size: 20608, offset: 8064)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3135, file: !1005, line: 359, baseType: !777, size: 32, offset: 28672)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1005, line: 402, baseType: !3152)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 379, size: 1120, elements: !3153)
!3153 = !{!3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3152, file: !1005, line: 381, baseType: !1009, size: 32)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3152, file: !1005, line: 382, baseType: !777, size: 32, offset: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3152, file: !1005, line: 383, baseType: !777, size: 32, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3152, file: !1005, line: 384, baseType: !777, size: 32, offset: 96)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3152, file: !1005, line: 385, baseType: !777, size: 32, offset: 128)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3152, file: !1005, line: 386, baseType: !777, size: 32, offset: 160)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3152, file: !1005, line: 387, baseType: !2118, size: 96, offset: 192)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3152, file: !1005, line: 388, baseType: !777, size: 32, offset: 288)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3152, file: !1005, line: 389, baseType: !777, size: 32, offset: 320)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3152, file: !1005, line: 390, baseType: !777, size: 32, offset: 352)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3152, file: !1005, line: 391, baseType: !777, size: 32, offset: 384)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3152, file: !1005, line: 392, baseType: !777, size: 32, offset: 416)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3152, file: !1005, line: 393, baseType: !777, size: 32, offset: 448)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3152, file: !1005, line: 394, baseType: !777, size: 32, offset: 480)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3152, file: !1005, line: 395, baseType: !2129, size: 64, offset: 512)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3152, file: !1005, line: 396, baseType: !1009, size: 32, offset: 576)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3152, file: !1005, line: 397, baseType: !1009, size: 32, offset: 608)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3152, file: !1005, line: 398, baseType: !2133, size: 128, offset: 640)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3152, file: !1005, line: 399, baseType: !2135, size: 160, offset: 768)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3152, file: !1005, line: 400, baseType: !2137, size: 160, offset: 928)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3152, file: !1005, line: 401, baseType: !777, size: 32, offset: 1088)
!3175 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3176, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3176 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3179, splitDebugInlining: false, nameTableKind: None)
!3178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3179 = !{!102, !103, !22, !3180}
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1005, line: 402, baseType: !3182)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 379, size: 1120, elements: !3183)
!3183 = !{!3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3182, file: !1005, line: 381, baseType: !1009, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3182, file: !1005, line: 382, baseType: !777, size: 32, offset: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3182, file: !1005, line: 383, baseType: !777, size: 32, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3182, file: !1005, line: 384, baseType: !777, size: 32, offset: 96)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3182, file: !1005, line: 385, baseType: !777, size: 32, offset: 128)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3182, file: !1005, line: 386, baseType: !777, size: 32, offset: 160)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3182, file: !1005, line: 387, baseType: !2118, size: 96, offset: 192)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3182, file: !1005, line: 388, baseType: !777, size: 32, offset: 288)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3182, file: !1005, line: 389, baseType: !777, size: 32, offset: 320)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3182, file: !1005, line: 390, baseType: !777, size: 32, offset: 352)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3182, file: !1005, line: 391, baseType: !777, size: 32, offset: 384)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3182, file: !1005, line: 392, baseType: !777, size: 32, offset: 416)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3182, file: !1005, line: 393, baseType: !777, size: 32, offset: 448)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3182, file: !1005, line: 394, baseType: !777, size: 32, offset: 480)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3182, file: !1005, line: 395, baseType: !2129, size: 64, offset: 512)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3182, file: !1005, line: 396, baseType: !1009, size: 32, offset: 576)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3182, file: !1005, line: 397, baseType: !1009, size: 32, offset: 608)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3182, file: !1005, line: 398, baseType: !2133, size: 128, offset: 640)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3182, file: !1005, line: 399, baseType: !2135, size: 160, offset: 768)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3182, file: !1005, line: 400, baseType: !2137, size: 160, offset: 928)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3182, file: !1005, line: 401, baseType: !777, size: 32, offset: 1088)
!3205 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3206, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3207, splitDebugInlining: false, nameTableKind: None)
!3206 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3207 = !{!3208, !102, !103}
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1005, line: 402, baseType: !3210)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 379, size: 1120, elements: !3211)
!3211 = !{!3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3210, file: !1005, line: 381, baseType: !1009, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3210, file: !1005, line: 382, baseType: !777, size: 32, offset: 32)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3210, file: !1005, line: 383, baseType: !777, size: 32, offset: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3210, file: !1005, line: 384, baseType: !777, size: 32, offset: 96)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3210, file: !1005, line: 385, baseType: !777, size: 32, offset: 128)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3210, file: !1005, line: 386, baseType: !777, size: 32, offset: 160)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3210, file: !1005, line: 387, baseType: !2118, size: 96, offset: 192)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3210, file: !1005, line: 388, baseType: !777, size: 32, offset: 288)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3210, file: !1005, line: 389, baseType: !777, size: 32, offset: 320)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3210, file: !1005, line: 390, baseType: !777, size: 32, offset: 352)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3210, file: !1005, line: 391, baseType: !777, size: 32, offset: 384)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3210, file: !1005, line: 392, baseType: !777, size: 32, offset: 416)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3210, file: !1005, line: 393, baseType: !777, size: 32, offset: 448)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3210, file: !1005, line: 394, baseType: !777, size: 32, offset: 480)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3210, file: !1005, line: 395, baseType: !2129, size: 64, offset: 512)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3210, file: !1005, line: 396, baseType: !1009, size: 32, offset: 576)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3210, file: !1005, line: 397, baseType: !1009, size: 32, offset: 608)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3210, file: !1005, line: 398, baseType: !2133, size: 128, offset: 640)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3210, file: !1005, line: 399, baseType: !2135, size: 160, offset: 768)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3210, file: !1005, line: 400, baseType: !2137, size: 160, offset: 928)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3210, file: !1005, line: 401, baseType: !777, size: 32, offset: 1088)
!3233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3234, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3235, splitDebugInlining: false, nameTableKind: None)
!3234 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3235 = !{!3236, !111, !102, !103}
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 32)
!3237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3238, line: 98, size: 256, elements: !3239)
!3238 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3239 = !{!3240, !3245, !3250, !3255, !3260, !3265, !3270, !3275}
!3240 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !3238, line: 99, baseType: !3241, size: 32)
!3241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !3238, line: 99, size: 32, elements: !3242)
!3242 = !{!3243, !3244}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3241, file: !3238, line: 99, baseType: !111, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3241, file: !3238, line: 99, baseType: !111, size: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !3238, line: 100, baseType: !3246, size: 32, offset: 32)
!3246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !3238, line: 100, size: 32, elements: !3247)
!3247 = !{!3248, !3249}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3246, file: !3238, line: 100, baseType: !111, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3246, file: !3238, line: 100, baseType: !111, size: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !3238, line: 101, baseType: !3251, size: 32, offset: 64)
!3251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !3238, line: 101, size: 32, elements: !3252)
!3252 = !{!3253, !3254}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3251, file: !3238, line: 101, baseType: !111, size: 32)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3251, file: !3238, line: 101, baseType: !111, size: 32)
!3255 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !3238, line: 102, baseType: !3256, size: 32, offset: 96)
!3256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !3238, line: 102, size: 32, elements: !3257)
!3257 = !{!3258, !3259}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3256, file: !3238, line: 102, baseType: !111, size: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3256, file: !3238, line: 102, baseType: !111, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !3238, line: 103, baseType: !3261, size: 32, offset: 128)
!3261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !3238, line: 103, size: 32, elements: !3262)
!3262 = !{!3263, !3264}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3261, file: !3238, line: 103, baseType: !111, size: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3261, file: !3238, line: 103, baseType: !111, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !3238, line: 104, baseType: !3266, size: 32, offset: 160)
!3266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !3238, line: 104, size: 32, elements: !3267)
!3267 = !{!3268, !3269}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3266, file: !3238, line: 104, baseType: !111, size: 32)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3266, file: !3238, line: 104, baseType: !111, size: 32)
!3270 = !DIDerivedType(tag: DW_TAG_member, scope: !3237, file: !3238, line: 105, baseType: !3271, size: 32, offset: 192)
!3271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3237, file: !3238, line: 105, size: 32, elements: !3272)
!3272 = !{!3273, !3274}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3271, file: !3238, line: 105, baseType: !111, size: 32)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3271, file: !3238, line: 105, baseType: !111, size: 32)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3237, file: !3238, line: 106, baseType: !111, size: 32, offset: 224)
!3276 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3277, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3120, retainedTypes: !3278, splitDebugInlining: false, nameTableKind: None)
!3277 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3278 = !{!3279, !102, !103, !3304, !3076, !111}
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 32)
!3280 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1005, line: 402, baseType: !3281)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 379, size: 1120, elements: !3282)
!3282 = !{!3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3281, file: !1005, line: 381, baseType: !1009, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3281, file: !1005, line: 382, baseType: !777, size: 32, offset: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3281, file: !1005, line: 383, baseType: !777, size: 32, offset: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3281, file: !1005, line: 384, baseType: !777, size: 32, offset: 96)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3281, file: !1005, line: 385, baseType: !777, size: 32, offset: 128)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3281, file: !1005, line: 386, baseType: !777, size: 32, offset: 160)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3281, file: !1005, line: 387, baseType: !2118, size: 96, offset: 192)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3281, file: !1005, line: 388, baseType: !777, size: 32, offset: 288)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3281, file: !1005, line: 389, baseType: !777, size: 32, offset: 320)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3281, file: !1005, line: 390, baseType: !777, size: 32, offset: 352)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3281, file: !1005, line: 391, baseType: !777, size: 32, offset: 384)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3281, file: !1005, line: 392, baseType: !777, size: 32, offset: 416)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3281, file: !1005, line: 393, baseType: !777, size: 32, offset: 448)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3281, file: !1005, line: 394, baseType: !777, size: 32, offset: 480)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3281, file: !1005, line: 395, baseType: !2129, size: 64, offset: 512)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3281, file: !1005, line: 396, baseType: !1009, size: 32, offset: 576)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3281, file: !1005, line: 397, baseType: !1009, size: 32, offset: 608)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3281, file: !1005, line: 398, baseType: !2133, size: 128, offset: 640)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3281, file: !1005, line: 399, baseType: !2135, size: 160, offset: 768)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3281, file: !1005, line: 400, baseType: !2137, size: 160, offset: 928)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3281, file: !1005, line: 401, baseType: !777, size: 32, offset: 1088)
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3305, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3238, line: 141, baseType: !3306)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3238, line: 97, size: 256, elements: !3307)
!3307 = !{!3308}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !3306, file: !3238, line: 107, baseType: !3309, size: 256)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3238, line: 98, size: 256, elements: !3310)
!3310 = !{!3311, !3316, !3321, !3326, !3331, !3336, !3341, !3346}
!3311 = !DIDerivedType(tag: DW_TAG_member, scope: !3309, file: !3238, line: 99, baseType: !3312, size: 32)
!3312 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3309, file: !3238, line: 99, size: 32, elements: !3313)
!3313 = !{!3314, !3315}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !3312, file: !3238, line: 99, baseType: !111, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !3312, file: !3238, line: 99, baseType: !111, size: 32)
!3316 = !DIDerivedType(tag: DW_TAG_member, scope: !3309, file: !3238, line: 100, baseType: !3317, size: 32, offset: 32)
!3317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3309, file: !3238, line: 100, size: 32, elements: !3318)
!3318 = !{!3319, !3320}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !3317, file: !3238, line: 100, baseType: !111, size: 32)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !3317, file: !3238, line: 100, baseType: !111, size: 32)
!3321 = !DIDerivedType(tag: DW_TAG_member, scope: !3309, file: !3238, line: 101, baseType: !3322, size: 32, offset: 64)
!3322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3309, file: !3238, line: 101, size: 32, elements: !3323)
!3323 = !{!3324, !3325}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !3322, file: !3238, line: 101, baseType: !111, size: 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !3322, file: !3238, line: 101, baseType: !111, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, scope: !3309, file: !3238, line: 102, baseType: !3327, size: 32, offset: 96)
!3327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3309, file: !3238, line: 102, size: 32, elements: !3328)
!3328 = !{!3329, !3330}
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !3327, file: !3238, line: 102, baseType: !111, size: 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !3327, file: !3238, line: 102, baseType: !111, size: 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, scope: !3309, file: !3238, line: 103, baseType: !3332, size: 32, offset: 128)
!3332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3309, file: !3238, line: 103, size: 32, elements: !3333)
!3333 = !{!3334, !3335}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3332, file: !3238, line: 103, baseType: !111, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3332, file: !3238, line: 103, baseType: !111, size: 32)
!3336 = !DIDerivedType(tag: DW_TAG_member, scope: !3309, file: !3238, line: 104, baseType: !3337, size: 32, offset: 160)
!3337 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3309, file: !3238, line: 104, size: 32, elements: !3338)
!3338 = !{!3339, !3340}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !3337, file: !3238, line: 104, baseType: !111, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3337, file: !3238, line: 104, baseType: !111, size: 32)
!3341 = !DIDerivedType(tag: DW_TAG_member, scope: !3309, file: !3238, line: 105, baseType: !3342, size: 32, offset: 192)
!3342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3309, file: !3238, line: 105, size: 32, elements: !3343)
!3343 = !{!3344, !3345}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !3342, file: !3238, line: 105, baseType: !111, size: 32)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3342, file: !3238, line: 105, baseType: !111, size: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !3309, file: !3238, line: 106, baseType: !111, size: 32, offset: 224)
!3347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3348, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2066, retainedTypes: !3349, splitDebugInlining: false, nameTableKind: None)
!3348 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3349 = !{!1338, !320, !166, !111, !3350, !3367}
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 32)
!3351 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1005, line: 360, baseType: !3352)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 345, size: 28704, elements: !3353)
!3353 = !{!3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !3352, file: !1005, line: 347, baseType: !2081, size: 256)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3352, file: !1005, line: 348, baseType: !2083, size: 768, offset: 256)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !3352, file: !1005, line: 349, baseType: !2081, size: 256, offset: 1024)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3352, file: !1005, line: 350, baseType: !2083, size: 768, offset: 1280)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !3352, file: !1005, line: 351, baseType: !2081, size: 256, offset: 2048)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3352, file: !1005, line: 352, baseType: !2083, size: 768, offset: 2304)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !3352, file: !1005, line: 353, baseType: !2081, size: 256, offset: 3072)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3352, file: !1005, line: 354, baseType: !2083, size: 768, offset: 3328)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !3352, file: !1005, line: 355, baseType: !2081, size: 256, offset: 4096)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3352, file: !1005, line: 356, baseType: !2094, size: 1792, offset: 4352)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !3352, file: !1005, line: 357, baseType: !2098, size: 1920, offset: 6144)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3352, file: !1005, line: 358, baseType: !2103, size: 20608, offset: 8064)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !3352, file: !1005, line: 359, baseType: !777, size: 32, offset: 28672)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 32)
!3368 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1005, line: 402, baseType: !3369)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 379, size: 1120, elements: !3370)
!3370 = !{!3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3369, file: !1005, line: 381, baseType: !1009, size: 32)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3369, file: !1005, line: 382, baseType: !777, size: 32, offset: 32)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3369, file: !1005, line: 383, baseType: !777, size: 32, offset: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3369, file: !1005, line: 384, baseType: !777, size: 32, offset: 96)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3369, file: !1005, line: 385, baseType: !777, size: 32, offset: 128)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3369, file: !1005, line: 386, baseType: !777, size: 32, offset: 160)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3369, file: !1005, line: 387, baseType: !2118, size: 96, offset: 192)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3369, file: !1005, line: 388, baseType: !777, size: 32, offset: 288)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3369, file: !1005, line: 389, baseType: !777, size: 32, offset: 320)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3369, file: !1005, line: 390, baseType: !777, size: 32, offset: 352)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3369, file: !1005, line: 391, baseType: !777, size: 32, offset: 384)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3369, file: !1005, line: 392, baseType: !777, size: 32, offset: 416)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3369, file: !1005, line: 393, baseType: !777, size: 32, offset: 448)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3369, file: !1005, line: 394, baseType: !777, size: 32, offset: 480)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3369, file: !1005, line: 395, baseType: !2129, size: 64, offset: 512)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3369, file: !1005, line: 396, baseType: !1009, size: 32, offset: 576)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3369, file: !1005, line: 397, baseType: !1009, size: 32, offset: 608)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3369, file: !1005, line: 398, baseType: !2133, size: 128, offset: 640)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3369, file: !1005, line: 399, baseType: !2135, size: 160, offset: 768)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3369, file: !1005, line: 400, baseType: !2137, size: 160, offset: 928)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3369, file: !1005, line: 401, baseType: !777, size: 32, offset: 1088)
!3392 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3393, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3394, splitDebugInlining: false, nameTableKind: None)
!3393 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3394 = !{!3395, !102, !103}
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 32)
!3396 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1005, line: 402, baseType: !3397)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 379, size: 1120, elements: !3398)
!3398 = !{!3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3397, file: !1005, line: 381, baseType: !1009, size: 32)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3397, file: !1005, line: 382, baseType: !777, size: 32, offset: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3397, file: !1005, line: 383, baseType: !777, size: 32, offset: 64)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3397, file: !1005, line: 384, baseType: !777, size: 32, offset: 96)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3397, file: !1005, line: 385, baseType: !777, size: 32, offset: 128)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3397, file: !1005, line: 386, baseType: !777, size: 32, offset: 160)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3397, file: !1005, line: 387, baseType: !2118, size: 96, offset: 192)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3397, file: !1005, line: 388, baseType: !777, size: 32, offset: 288)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3397, file: !1005, line: 389, baseType: !777, size: 32, offset: 320)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3397, file: !1005, line: 390, baseType: !777, size: 32, offset: 352)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3397, file: !1005, line: 391, baseType: !777, size: 32, offset: 384)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3397, file: !1005, line: 392, baseType: !777, size: 32, offset: 416)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3397, file: !1005, line: 393, baseType: !777, size: 32, offset: 448)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3397, file: !1005, line: 394, baseType: !777, size: 32, offset: 480)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3397, file: !1005, line: 395, baseType: !2129, size: 64, offset: 512)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3397, file: !1005, line: 396, baseType: !1009, size: 32, offset: 576)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3397, file: !1005, line: 397, baseType: !1009, size: 32, offset: 608)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3397, file: !1005, line: 398, baseType: !2133, size: 128, offset: 640)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3397, file: !1005, line: 399, baseType: !2135, size: 160, offset: 768)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3397, file: !1005, line: 400, baseType: !2137, size: 160, offset: 928)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3397, file: !1005, line: 401, baseType: !777, size: 32, offset: 1088)
!3420 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3421, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3422, splitDebugInlining: false, nameTableKind: None)
!3421 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3422 = !{!110, !160, !156, !1516, !3423, !167, !102}
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 32)
!3424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!3425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3426, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3427, splitDebugInlining: false, nameTableKind: None)
!3426 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3427 = !{!3428}
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 32)
!3429 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 386, baseType: !3430)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 370, size: 448, elements: !3431)
!3431 = !{!3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3430, file: !773, line: 372, baseType: !777, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3430, file: !773, line: 373, baseType: !777, size: 32, offset: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3430, file: !773, line: 374, baseType: !777, size: 32, offset: 64)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3430, file: !773, line: 375, baseType: !777, size: 32, offset: 96)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3430, file: !773, line: 376, baseType: !777, size: 32, offset: 128)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3430, file: !773, line: 377, baseType: !777, size: 32, offset: 160)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3430, file: !773, line: 378, baseType: !777, size: 32, offset: 192)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3430, file: !773, line: 379, baseType: !777, size: 32, offset: 224)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3430, file: !773, line: 380, baseType: !777, size: 32, offset: 256)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3430, file: !773, line: 381, baseType: !777, size: 32, offset: 288)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3430, file: !773, line: 382, baseType: !777, size: 32, offset: 320)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3430, file: !773, line: 383, baseType: !777, size: 32, offset: 352)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3430, file: !773, line: 384, baseType: !777, size: 32, offset: 384)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3430, file: !773, line: 385, baseType: !777, size: 32, offset: 416)
!3446 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3447, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3447 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3448 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3449, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3450, retainedTypes: !3466, splitDebugInlining: false, nameTableKind: None)
!3449 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3450 = !{!3451, !3458, !3462}
!3451 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3452, line: 39, baseType: !32, size: 32, elements: !3453)
!3452 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3453 = !{!3454, !3455, !3456, !3457}
!3454 = !DIEnumerator(name: "HAL_OK", value: 0)
!3455 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3456 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3457 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3458 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1375, line: 183, baseType: !32, size: 32, elements: !3459)
!3459 = !{!3460, !3461}
!3460 = !DIEnumerator(name: "DISABLE", value: 0)
!3461 = !DIEnumerator(name: "ENABLE", value: 1)
!3462 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1375, line: 177, baseType: !32, size: 32, elements: !3463)
!3463 = !{!3464, !3465}
!3464 = !DIEnumerator(name: "RESET", value: 0)
!3465 = !DIEnumerator(name: "SET", value: 1)
!3466 = !{!3467, !102, !111, !166, !3485, !3486, !3492, !181, !3505, !112, !3518}
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 32)
!3468 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 386, baseType: !3469)
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 370, size: 448, elements: !3470)
!3470 = !{!3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3469, file: !773, line: 372, baseType: !777, size: 32)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3469, file: !773, line: 373, baseType: !777, size: 32, offset: 32)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3469, file: !773, line: 374, baseType: !777, size: 32, offset: 64)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3469, file: !773, line: 375, baseType: !777, size: 32, offset: 96)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3469, file: !773, line: 376, baseType: !777, size: 32, offset: 128)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3469, file: !773, line: 377, baseType: !777, size: 32, offset: 160)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3469, file: !773, line: 378, baseType: !777, size: 32, offset: 192)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3469, file: !773, line: 379, baseType: !777, size: 32, offset: 224)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3469, file: !773, line: 380, baseType: !777, size: 32, offset: 256)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3469, file: !773, line: 381, baseType: !777, size: 32, offset: 288)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3469, file: !773, line: 382, baseType: !777, size: 32, offset: 320)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3469, file: !773, line: 383, baseType: !777, size: 32, offset: 352)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3469, file: !773, line: 384, baseType: !777, size: 32, offset: 384)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3469, file: !773, line: 385, baseType: !777, size: 32, offset: 416)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 32)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 32)
!3487 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !773, line: 364, baseType: !3488)
!3488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 360, size: 64, elements: !3489)
!3489 = !{!3490, !3491}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3488, file: !773, line: 362, baseType: !777, size: 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3488, file: !773, line: 363, baseType: !777, size: 32, offset: 32)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 32)
!3493 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !773, line: 286, baseType: !3494)
!3494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 275, size: 288, elements: !3495)
!3495 = !{!3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3494, file: !773, line: 277, baseType: !777, size: 32)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3494, file: !773, line: 278, baseType: !777, size: 32, offset: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3494, file: !773, line: 279, baseType: !777, size: 32, offset: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3494, file: !773, line: 280, baseType: !777, size: 32, offset: 96)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3494, file: !773, line: 281, baseType: !777, size: 32, offset: 128)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3494, file: !773, line: 282, baseType: !777, size: 32, offset: 160)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3494, file: !773, line: 283, baseType: !777, size: 32, offset: 192)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3494, file: !773, line: 284, baseType: !777, size: 32, offset: 224)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3494, file: !773, line: 285, baseType: !777, size: 32, offset: 256)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 32)
!3506 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !773, line: 314, baseType: !3507)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 303, size: 320, elements: !3508)
!3508 = !{!3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3507, file: !773, line: 305, baseType: !777, size: 32)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3507, file: !773, line: 306, baseType: !777, size: 32, offset: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3507, file: !773, line: 307, baseType: !777, size: 32, offset: 64)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3507, file: !773, line: 308, baseType: !777, size: 32, offset: 96)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3507, file: !773, line: 309, baseType: !777, size: 32, offset: 128)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3507, file: !773, line: 310, baseType: !777, size: 32, offset: 160)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3507, file: !773, line: 311, baseType: !777, size: 32, offset: 192)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3507, file: !773, line: 312, baseType: !777, size: 32, offset: 224)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3507, file: !773, line: 313, baseType: !1653, size: 64, offset: 256)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 32)
!3519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3521, retainedTypes: !3522, splitDebugInlining: false, nameTableKind: None)
!3520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3521 = !{!1374}
!3522 = !{!3523, !111, !3531, !3537, !3550}
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 32)
!3524 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1005, line: 712, baseType: !3525)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1005, line: 706, size: 128, elements: !3526)
!3526 = !{!3527, !3528, !3529, !3530}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3525, file: !1005, line: 708, baseType: !777, size: 32)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3525, file: !1005, line: 709, baseType: !777, size: 32, offset: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3525, file: !1005, line: 710, baseType: !777, size: 32, offset: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3525, file: !1005, line: 711, baseType: !1009, size: 32, offset: 96)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 32)
!3532 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !773, line: 364, baseType: !3533)
!3533 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 360, size: 64, elements: !3534)
!3534 = !{!3535, !3536}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3533, file: !773, line: 362, baseType: !777, size: 32)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3533, file: !773, line: 363, baseType: !777, size: 32, offset: 32)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 32)
!3538 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !773, line: 286, baseType: !3539)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 275, size: 288, elements: !3540)
!3540 = !{!3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3539, file: !773, line: 277, baseType: !777, size: 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !3539, file: !773, line: 278, baseType: !777, size: 32, offset: 32)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !3539, file: !773, line: 279, baseType: !777, size: 32, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !3539, file: !773, line: 280, baseType: !777, size: 32, offset: 96)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !3539, file: !773, line: 281, baseType: !777, size: 32, offset: 128)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3539, file: !773, line: 282, baseType: !777, size: 32, offset: 160)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3539, file: !773, line: 283, baseType: !777, size: 32, offset: 192)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !3539, file: !773, line: 284, baseType: !777, size: 32, offset: 224)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !3539, file: !773, line: 285, baseType: !777, size: 32, offset: 256)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 32)
!3551 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !773, line: 386, baseType: !3552)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !773, line: 370, size: 448, elements: !3553)
!3553 = !{!3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3552, file: !773, line: 372, baseType: !777, size: 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !3552, file: !773, line: 373, baseType: !777, size: 32, offset: 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3552, file: !773, line: 374, baseType: !777, size: 32, offset: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3552, file: !773, line: 375, baseType: !777, size: 32, offset: 96)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !3552, file: !773, line: 376, baseType: !777, size: 32, offset: 128)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3552, file: !773, line: 377, baseType: !777, size: 32, offset: 160)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3552, file: !773, line: 378, baseType: !777, size: 32, offset: 192)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !3552, file: !773, line: 379, baseType: !777, size: 32, offset: 224)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3552, file: !773, line: 380, baseType: !777, size: 32, offset: 256)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3552, file: !773, line: 381, baseType: !777, size: 32, offset: 288)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !3552, file: !773, line: 382, baseType: !777, size: 32, offset: 320)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3552, file: !773, line: 383, baseType: !777, size: 32, offset: 352)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3552, file: !773, line: 384, baseType: !777, size: 32, offset: 384)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3552, file: !773, line: 385, baseType: !777, size: 32, offset: 416)
!3568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3569, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3570, splitDebugInlining: false, nameTableKind: None)
!3569 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3570 = !{!102, !156}
!3571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3573, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3572 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3573 = !{!3574, !3581, !3121, !30}
!3574 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3575, line: 14, baseType: !32, size: 32, elements: !3576)
!3575 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3576 = !{!3577, !3578, !3579, !3580}
!3577 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3578 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3579 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3580 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3581 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3575, line: 42, baseType: !32, size: 32, elements: !3582)
!3582 = !{!3583, !3584, !3585, !3586, !3587, !3588}
!3583 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3584 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3585 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3586 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3587 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3588 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3593, splitDebugInlining: false, nameTableKind: None)
!3592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3593 = !{!102, !103, !3594, !3609}
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 32)
!3595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !3596)
!3596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !3597)
!3597 = !{!3598, !3604}
!3598 = !DIDerivedType(tag: DW_TAG_member, scope: !3596, file: !136, line: 38, baseType: !3599, size: 32)
!3599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3596, file: !136, line: 38, size: 32, elements: !3600)
!3600 = !{!3601, !3603}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3599, file: !136, line: 39, baseType: !3602, size: 32)
!3602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 32)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3599, file: !136, line: 40, baseType: !3602, size: 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, scope: !3596, file: !136, line: 42, baseType: !3605, size: 32, offset: 32)
!3605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3596, file: !136, line: 42, size: 32, elements: !3606)
!3606 = !{!3607, !3608}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3605, file: !136, line: 43, baseType: !3602, size: 32)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3605, file: !136, line: 44, baseType: !3602, size: 32)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 32)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !3611)
!3611 = !{!3612, !3656, !3668, !3669, !3670, !3671, !3677, !3692}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3610, file: !199, line: 247, baseType: !3613, size: 384)
!3613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !3614)
!3614 = !{!3615, !3625, !3632, !3633, !3634, !3643, !3644, !3645}
!3615 = !DIDerivedType(tag: DW_TAG_member, scope: !3613, file: !199, line: 60, baseType: !3616, size: 64)
!3616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3613, file: !199, line: 60, size: 64, elements: !3617)
!3617 = !{!3618, !3619}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3616, file: !199, line: 61, baseType: !3595, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3616, file: !199, line: 62, baseType: !3620, size: 64)
!3620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !3621)
!3621 = !{!3622}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3620, file: !211, line: 50, baseType: !3623, size: 64)
!3623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3624, size: 64, elements: !216)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3620, size: 32)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3613, file: !199, line: 68, baseType: !3626, size: 32, offset: 64)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 32)
!3627 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !3628)
!3628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !3629)
!3629 = !{!3630}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3628, file: !131, line: 232, baseType: !3631, size: 64)
!3631 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !3596)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3613, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3613, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!3634 = !DIDerivedType(tag: DW_TAG_member, scope: !3613, file: !199, line: 90, baseType: !3635, size: 16, offset: 112)
!3635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3613, file: !199, line: 90, size: 16, elements: !3636)
!3636 = !{!3637, !3642}
!3637 = !DIDerivedType(tag: DW_TAG_member, scope: !3635, file: !199, line: 91, baseType: !3638, size: 16)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3635, file: !199, line: 91, size: 16, elements: !3639)
!3639 = !{!3640, !3641}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3638, file: !199, line: 96, baseType: !229, size: 8)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3638, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3635, file: !199, line: 100, baseType: !181, size: 16)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3613, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3613, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3613, file: !199, line: 131, baseType: !3646, size: 192, offset: 192)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !3647)
!3647 = !{!3648, !3649, !3655}
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3646, file: !131, line: 245, baseType: !3595, size: 64)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3646, file: !131, line: 246, baseType: !3650, size: 32, offset: 64)
!3650 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !3651)
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 32)
!3652 = !DISubroutineType(types: !3653)
!3653 = !{null, !3654}
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 32)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3646, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3610, file: !199, line: 250, baseType: !3657, size: 288, offset: 384)
!3657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !3658)
!3658 = !{!3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667}
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3657, file: !248, line: 26, baseType: !111, size: 32)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3657, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3657, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3657, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3657, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3657, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3657, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3657, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3657, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3610, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3610, file: !199, line: 256, baseType: !3627, size: 64, offset: 704)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3610, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3610, file: !199, line: 300, baseType: !3672, size: 96, offset: 800)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !3673)
!3673 = !{!3674, !3675, !3676}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3672, file: !199, line: 153, baseType: !22, size: 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3672, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3672, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3610, file: !199, line: 325, baseType: !3678, size: 32, offset: 896)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 32)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !3680)
!3680 = !{!3681, !3687, !3688}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3679, file: !127, line: 5074, baseType: !3682, size: 96)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !3683)
!3683 = !{!3684, !3685, !3686}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3682, file: !274, line: 57, baseType: !277, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3682, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3682, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3679, file: !127, line: 5075, baseType: !3627, size: 64, offset: 96)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3679, file: !127, line: 5076, baseType: !3689, size: 32, offset: 160)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !3690)
!3690 = !{!3691}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3689, file: !152, line: 52, baseType: !22, size: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3610, file: !199, line: 343, baseType: !3693, size: 64, offset: 928)
!3693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !3694)
!3694 = !{!3695, !3696}
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3693, file: !248, line: 63, baseType: !111, size: 32)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3693, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!3697 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3698, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3699, splitDebugInlining: false, nameTableKind: None)
!3698 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3699 = !{!22, !102, !103}
!3700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3701, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !346, splitDebugInlining: false, nameTableKind: None)
!3701 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!3702 = !{!"Ubuntu clang version 14.0.6"}
!3703 = !{i32 7, !"Dwarf Version", i32 4}
!3704 = !{i32 2, !"Debug Info Version", i32 3}
!3705 = !{i32 1, !"wchar_size", i32 4}
!3706 = !{i32 1, !"min_enum_size", i32 4}
!3707 = !{i32 1, !"branch-target-enforcement", i32 0}
!3708 = !{i32 1, !"sign-return-address", i32 0}
!3709 = !{i32 1, !"sign-return-address-all", i32 0}
!3710 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3711 = !{i32 7, !"frame-pointer", i32 2}
!3712 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3713, file: !3713, line: 26, type: !323, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3040, retainedNodes: !2512)
!3713 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3714 = !DILocation(line: 28, column: 1, scope: !3712)
!3715 = !{i64 2152498469, i64 2152498489, i64 2152498552}
!3716 = !DILocation(line: 29, column: 1, scope: !3712)
!3717 = !{i64 2152498884, i64 2152498904, i64 2152498967}
!3718 = !DILocation(line: 30, column: 1, scope: !3712)
!3719 = !{i64 2152499303, i64 2152499323, i64 2152499386}
!3720 = !DILocation(line: 31, column: 1, scope: !3712)
!3721 = !{i64 2152499722, i64 2152499742, i64 2152499805}
!3722 = !DILocation(line: 33, column: 1, scope: !3712)
!3723 = !{i64 2152500014, i64 2152500034, i64 2152500097}
!3724 = !DILocation(line: 35, column: 1, scope: !3712)
!3725 = !{i64 2152500339, i64 2152500359, i64 2152500422}
!3726 = !DILocation(line: 50, column: 1, scope: !3712)
!3727 = !{i64 2152500766, i64 2152500786, i64 2152500849}
!3728 = !DILocation(line: 54, column: 1, scope: !3712)
!3729 = !{i64 2152501205, i64 2152501225, i64 2152501288}
!3730 = !DILocation(line: 61, column: 1, scope: !3712)
!3731 = !{i64 2152501522, i64 2152501542, i64 2152501605}
!3732 = !DILocation(line: 63, column: 1, scope: !3712)
!3733 = !{i64 2152501902, i64 2152501922, i64 2152501985}
!3734 = !DILocation(line: 64, column: 1, scope: !3712)
!3735 = !{i64 2152502424, i64 2152502444, i64 2152502507}
!3736 = !DILocation(line: 65, column: 1, scope: !3712)
!3737 = !{i64 2152502922, i64 2152502942, i64 2152503005}
!3738 = !DILocation(line: 66, column: 1, scope: !3712)
!3739 = !{i64 2152503404, i64 2152503424, i64 2152503487}
!3740 = !DILocation(line: 67, column: 1, scope: !3712)
!3741 = !{i64 2152503911, i64 2152503931, i64 2152503994}
!3742 = !DILocation(line: 68, column: 1, scope: !3712)
!3743 = !{i64 2152504399, i64 2152504419, i64 2152504482}
!3744 = !DILocation(line: 70, column: 1, scope: !3712)
!3745 = !{i64 2152504867, i64 2152504887, i64 2152504950}
!3746 = !DILocation(line: 71, column: 1, scope: !3712)
!3747 = !{i64 2152505309, i64 2152505329, i64 2152505392}
!3748 = !DILocation(line: 72, column: 1, scope: !3712)
!3749 = !{i64 2152505767, i64 2152505787, i64 2152505850}
!3750 = !DILocation(line: 79, column: 1, scope: !3712)
!3751 = !{i64 2152510282, i64 2152510302, i64 2152510365}
!3752 = !DILocation(line: 80, column: 1, scope: !3712)
!3753 = !{i64 2152510793, i64 2152510813, i64 2152510876}
!3754 = !DILocation(line: 82, column: 1, scope: !3712)
!3755 = !{i64 2152511284, i64 2152511304, i64 2152511367}
!3756 = !DILocation(line: 97, column: 1, scope: !3712)
!3757 = !{i64 2152511621, i64 2152511641, i64 2152511704}
!3758 = !DILocation(line: 99, column: 1, scope: !3712)
!3759 = !{i64 2152511839, i64 2152511859, i64 2152511922}
!3760 = !DILocation(line: 102, column: 1, scope: !3712)
!3761 = !{i64 2152512096, i64 2152512116, i64 2152512179}
!3762 = !DILocation(line: 105, column: 1, scope: !3712)
!3763 = !{i64 2152512336, i64 2152512356, i64 2152512419}
!3764 = !DILocation(line: 115, column: 1, scope: !3712)
!3765 = !{i64 2152512675, i64 2152512695, i64 2152512758}
!3766 = !DILocation(line: 118, column: 1, scope: !3712)
!3767 = !{i64 2152513019, i64 2152513039, i64 2152513102}
!3768 = !DILocation(line: 32, column: 1, scope: !3769)
!3769 = !DILexicalBlockFile(scope: !3712, file: !3770, discriminator: 0)
!3770 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3771 = !{i64 2152513375, i64 2152513395, i64 2152513458}
!3772 = !DILocation(line: 33, column: 1, scope: !3769)
!3773 = !{i64 2152513887, i64 2152513907, i64 2152513970}
!3774 = !DILocation(line: 53, column: 1, scope: !3769)
!3775 = !{i64 2152514395, i64 2152514415, i64 2152514478}
!3776 = !DILocation(line: 54, column: 1, scope: !3769)
!3777 = !{i64 2152514813, i64 2152514833, i64 2152514896}
!3778 = !DILocation(line: 55, column: 1, scope: !3769)
!3779 = !{i64 2152515231, i64 2152515251, i64 2152515314}
!3780 = !DILocation(line: 56, column: 1, scope: !3769)
!3781 = !{i64 2152515649, i64 2152515669, i64 2152515732}
!3782 = !DILocation(line: 57, column: 1, scope: !3769)
!3783 = !{i64 2152516067, i64 2152516087, i64 2152516150}
!3784 = !DILocation(line: 58, column: 1, scope: !3769)
!3785 = !{i64 2152516485, i64 2152516505, i64 2152516568}
!3786 = !DILocation(line: 59, column: 1, scope: !3769)
!3787 = !{i64 2152516903, i64 2152516923, i64 2152516986}
!3788 = !DILocation(line: 60, column: 1, scope: !3769)
!3789 = !{i64 2152517327, i64 2152517347, i64 2152517410}
!3790 = !DILocation(line: 61, column: 1, scope: !3769)
!3791 = !{i64 2152517644, i64 2152517664, i64 2152517727}
!3792 = !DILocation(line: 70, column: 1, scope: !3769)
!3793 = !{i64 2152517873, i64 2152517893, i64 2152517956}
!3794 = !DILocation(line: 72, column: 1, scope: !3769)
!3795 = !{i64 2152518205, i64 2152518225, i64 2152518288}
!3796 = !DILocation(line: 73, column: 1, scope: !3769)
!3797 = !{i64 2152518655, i64 2152518675, i64 2152518738}
!3798 = !DILocation(line: 74, column: 1, scope: !3769)
!3799 = !{i64 2152519105, i64 2152519125, i64 2152519188}
!3800 = !DILocation(line: 75, column: 1, scope: !3769)
!3801 = !{i64 2152519555, i64 2152519575, i64 2152519638}
!3802 = !DILocation(line: 76, column: 1, scope: !3769)
!3803 = !{i64 2152524066, i64 2152524086, i64 2152524149}
!3804 = !DILocation(line: 77, column: 1, scope: !3769)
!3805 = !{i64 2152524516, i64 2152524536, i64 2152524599}
!3806 = !DILocation(line: 78, column: 1, scope: !3769)
!3807 = !{i64 2152524966, i64 2152524986, i64 2152525049}
!3808 = !DILocation(line: 79, column: 1, scope: !3769)
!3809 = !{i64 2152525416, i64 2152525436, i64 2152525499}
!3810 = !DILocation(line: 80, column: 1, scope: !3769)
!3811 = !{i64 2152525869, i64 2152525889, i64 2152525952}
!3812 = !DILocation(line: 84, column: 1, scope: !3769)
!3813 = !{i64 2152526201, i64 2152526221, i64 2152526284}
!3814 = !DILocation(line: 91, column: 1, scope: !3769)
!3815 = !{i64 2152526598, i64 2152526618, i64 2152526681}
!3816 = !DILocation(line: 93, column: 1, scope: !3769)
!3817 = !{i64 2152526965, i64 2152526985, i64 2152527048}
!3818 = !DILocation(line: 106, column: 1, scope: !3769)
!3819 = !{i64 2152527235, i64 2152527255, i64 2152527318}
!3820 = !DILocation(line: 11, column: 1, scope: !3821)
!3821 = !DILexicalBlockFile(scope: !3712, file: !3822, discriminator: 0)
!3822 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3823 = distinct !DISubprogram(name: "consumer_thread", scope: !117, file: !117, line: 15, type: !323, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3824)
!3824 = !{!3825, !3831, !3832, !3837, !3838, !3839}
!3825 = !DILocalVariable(name: "dyn_alloc_msg", scope: !3823, file: !117, line: 17, type: !3826)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 32)
!3827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !515, line: 16, size: 64, elements: !3828)
!3828 = !{!3829, !3830}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3827, file: !515, line: 17, baseType: !102, size: 32)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3827, file: !515, line: 18, baseType: !156, size: 32, offset: 32)
!3831 = !DILocalVariable(name: "chan", scope: !3823, file: !117, line: 18, type: !173)
!3832 = !DILocalVariable(name: "_str", scope: !3833, file: !117, line: 29, type: !108)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !117, line: 29, column: 4)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !117, line: 25, column: 49)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !117, line: 25, column: 7)
!3836 = distinct !DILexicalBlock(scope: !3823, file: !117, line: 20, column: 58)
!3837 = !DILocalVariable(name: "is_user_context", scope: !3833, file: !117, line: 29, type: !122)
!3838 = !DILocalVariable(name: "filters", scope: !3833, file: !117, line: 29, type: !111)
!3839 = !DILocalVariable(name: "a", scope: !3836, file: !117, line: 38, type: !3840)
!3840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_msg", file: !515, line: 21, size: 8, elements: !3841)
!3841 = !{!3842}
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3840, file: !515, line: 22, baseType: !166, size: 8)
!3843 = !DILocation(line: 18, column: 2, scope: !3823)
!3844 = !DILocation(line: 0, scope: !3823)
!3845 = !DILocation(line: 20, column: 10, scope: !3823)
!3846 = !DILocation(line: 20, column: 9, scope: !3823)
!3847 = !DILocation(line: 20, column: 2, scope: !3823)
!3848 = !DILocation(line: 23, column: 3, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !117, line: 23, column: 3)
!3850 = distinct !DILexicalBlock(scope: !3836, file: !117, line: 23, column: 3)
!3851 = !DILocation(line: 23, column: 3, scope: !3850)
!3852 = !DILocation(line: 23, column: 3, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3849, file: !117, line: 23, column: 3)
!3854 = !DILocation(line: 25, column: 35, scope: !3835)
!3855 = !DILocation(line: 25, column: 8, scope: !3835)
!3856 = !DILocation(line: 25, column: 7, scope: !3836)
!3857 = !DILocation(line: 26, column: 20, scope: !3834)
!3858 = !DILocation(line: 28, column: 4, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !117, line: 28, column: 4)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !117, line: 28, column: 4)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !117, line: 28, column: 4)
!3862 = distinct !DILexicalBlock(scope: !3834, file: !117, line: 28, column: 4)
!3863 = !DILocation(line: 0, scope: !3833)
!3864 = !DILocation(line: 29, column: 4, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !117, line: 29, column: 4)
!3866 = distinct !DILexicalBlock(scope: !3867, file: !117, line: 29, column: 4)
!3867 = distinct !DILexicalBlock(scope: !3833, file: !117, line: 29, column: 4)
!3868 = !DILocation(line: 29, column: 4, scope: !3866)
!3869 = !DILocation(line: 32, column: 26, scope: !3834)
!3870 = !DILocation(line: 32, column: 4, scope: !3834)
!3871 = !DILocation(line: 33, column: 29, scope: !3834)
!3872 = !DILocation(line: 34, column: 24, scope: !3834)
!3873 = !DILocation(line: 36, column: 4, scope: !3834)
!3874 = !DILocation(line: 37, column: 3, scope: !3834)
!3875 = !DILocation(line: 38, column: 3, scope: !3836)
!3876 = !DILocation(line: 38, column: 18, scope: !3836)
!3877 = !DILocation(line: 40, column: 27, scope: !3836)
!3878 = !DILocation(line: 40, column: 3, scope: !3836)
!3879 = !DILocation(line: 41, column: 2, scope: !3823)
!3880 = distinct !{!3880, !3847, !3879}
!3881 = !DILocation(line: 42, column: 1, scope: !3823)
!3882 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3883, file: !3883, line: 403, type: !3884, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3886)
!3883 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!112, !112}
!3886 = !{!3887}
!3887 = !DILocalVariable(name: "t", arg: 1, scope: !3882, file: !3883, line: 403, type: !112)
!3888 = !DILocation(line: 0, scope: !3882)
!3889 = !DILocalVariable(name: "t", arg: 1, scope: !3890, file: !3883, line: 102, type: !112)
!3890 = distinct !DISubprogram(name: "z_tmcvt", scope: !3883, file: !3883, line: 102, type: !3891, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3893)
!3891 = !DISubroutineType(types: !3892)
!3892 = !{!112, !112, !111, !111, !122, !122, !122, !122}
!3893 = !{!3889, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903}
!3894 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3890, file: !3883, line: 102, type: !111)
!3895 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3890, file: !3883, line: 103, type: !111)
!3896 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3890, file: !3883, line: 103, type: !122)
!3897 = !DILocalVariable(name: "result32", arg: 5, scope: !3890, file: !3883, line: 104, type: !122)
!3898 = !DILocalVariable(name: "round_up", arg: 6, scope: !3890, file: !3883, line: 104, type: !122)
!3899 = !DILocalVariable(name: "round_off", arg: 7, scope: !3890, file: !3883, line: 105, type: !122)
!3900 = !DILocalVariable(name: "mul_ratio", scope: !3890, file: !3883, line: 107, type: !122)
!3901 = !DILocalVariable(name: "div_ratio", scope: !3890, file: !3883, line: 109, type: !122)
!3902 = !DILocalVariable(name: "off", scope: !3890, file: !3883, line: 116, type: !112)
!3903 = !DILocalVariable(name: "rdivisor", scope: !3904, file: !3883, line: 119, type: !111)
!3904 = distinct !DILexicalBlock(scope: !3905, file: !3883, line: 118, column: 18)
!3905 = distinct !DILexicalBlock(scope: !3890, file: !3883, line: 118, column: 6)
!3906 = !DILocation(line: 0, scope: !3890, inlinedAt: !3907)
!3907 = distinct !DILocation(line: 406, column: 9, scope: !3882)
!3908 = !DILocation(line: 145, column: 13, scope: !3909, inlinedAt: !3907)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !3883, line: 144, column: 10)
!3910 = distinct !DILexicalBlock(scope: !3911, file: !3883, line: 142, column: 7)
!3911 = distinct !DILexicalBlock(scope: !3912, file: !3883, line: 141, column: 24)
!3912 = distinct !DILexicalBlock(scope: !3913, file: !3883, line: 141, column: 13)
!3913 = distinct !DILexicalBlock(scope: !3890, file: !3883, line: 134, column: 6)
!3914 = !DILocation(line: 406, column: 2, scope: !3882)
!3915 = distinct !DISubprogram(name: "zbus_chan_msg", scope: !119, file: !119, line: 395, type: !3916, scopeLine: 396, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3918)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!102, !173}
!3918 = !{!3919}
!3919 = !DILocalVariable(name: "chan", arg: 1, scope: !3915, file: !119, line: 395, type: !173)
!3920 = !DILocation(line: 0, scope: !3915)
!3921 = !DILocation(line: 399, column: 15, scope: !3915)
!3922 = !DILocation(line: 399, column: 2, scope: !3915)
!3923 = distinct !DISubprogram(name: "filter_cb", scope: !350, file: !350, line: 51, type: !495, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !3924)
!3924 = !{!3925, !3926, !3929}
!3925 = !DILocalVariable(name: "chan", arg: 1, scope: !3923, file: !350, line: 51, type: !497)
!3926 = !DILocalVariable(name: "chan_message", scope: !3923, file: !350, line: 58, type: !3927)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 32)
!3928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!3929 = !DILocalVariable(name: "dr", scope: !3923, file: !350, line: 68, type: !536)
!3930 = !DILocation(line: 0, scope: !3923)
!3931 = !DILocation(line: 60, column: 2, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !350, line: 60, column: 2)
!3933 = distinct !DILexicalBlock(scope: !3923, file: !350, line: 60, column: 2)
!3934 = !DILocation(line: 60, column: 2, scope: !3933)
!3935 = !DILocation(line: 60, column: 2, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !3932, file: !350, line: 60, column: 2)
!3937 = !DILocation(line: 62, column: 17, scope: !3923)
!3938 = !DILocation(line: 64, column: 20, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3923, file: !350, line: 64, column: 6)
!3940 = !DILocation(line: 64, column: 25, scope: !3939)
!3941 = !DILocation(line: 64, column: 6, scope: !3923)
!3942 = !DILocation(line: 65, column: 24, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3939, file: !350, line: 64, column: 30)
!3944 = !DILocation(line: 65, column: 3, scope: !3943)
!3945 = !DILocation(line: 66, column: 2, scope: !3943)
!3946 = !DILocation(line: 68, column: 2, scope: !3923)
!3947 = !DILocation(line: 68, column: 17, scope: !3923)
!3948 = !DILocation(line: 70, column: 2, scope: !3923)
!3949 = !DILocation(line: 71, column: 1, scope: !3923)
!3950 = distinct !DISubprogram(name: "zbus_chan_const_msg", scope: !119, file: !119, line: 416, type: !3951, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !3953)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{!13, !497}
!3953 = !{!3954}
!3954 = !DILocalVariable(name: "chan", arg: 1, scope: !3950, file: !119, line: 416, type: !497)
!3955 = !DILocation(line: 0, scope: !3950)
!3956 = !DILocation(line: 418, column: 2, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !119, line: 418, column: 2)
!3958 = distinct !DILexicalBlock(scope: !3950, file: !119, line: 418, column: 2)
!3959 = !DILocation(line: 418, column: 2, scope: !3958)
!3960 = !DILocation(line: 418, column: 2, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3957, file: !119, line: 418, column: 2)
!3962 = !DILocation(line: 420, column: 15, scope: !3950)
!3963 = !DILocation(line: 420, column: 2, scope: !3950)
!3964 = distinct !DISubprogram(name: "main", scope: !350, file: !350, line: 75, type: !323, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !344, retainedNodes: !3965)
!3965 = !{!3966}
!3966 = !DILocalVariable(name: "v", scope: !3964, file: !350, line: 77, type: !3967)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 32)
!3968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!3969 = !DILocation(line: 77, column: 32, scope: !3964)
!3970 = !DILocation(line: 0, scope: !3964)
!3971 = !DILocation(line: 80, column: 1, scope: !3964)
!3972 = distinct !DISubprogram(name: "producer_thread", scope: !554, file: !554, line: 15, type: !323, scopeLine: 16, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !3973)
!3973 = !{!3974, !3975, !3976, !3978, !3985}
!3974 = !DILocalVariable(name: "chan", scope: !3972, file: !554, line: 17, type: !599)
!3975 = !DILocalVariable(name: "msg", scope: !3972, file: !554, line: 18, type: !102)
!3976 = !DILocalVariable(name: "i", scope: !3977, file: !554, line: 20, type: !166)
!3977 = distinct !DILexicalBlock(scope: !3972, file: !554, line: 20, column: 2)
!3978 = !DILocalVariable(name: "dyn_alloc_msg", scope: !3979, file: !554, line: 25, type: !3981)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !554, line: 20, column: 37)
!3980 = distinct !DILexicalBlock(scope: !3977, file: !554, line: 20, column: 2)
!3981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "external_data_msg", file: !515, line: 16, size: 64, elements: !3982)
!3982 = !{!3983, !3984}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3981, file: !515, line: 17, baseType: !102, size: 32)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3981, file: !515, line: 18, baseType: !156, size: 32, offset: 32)
!3985 = !DILocalVariable(name: "j", scope: !3986, file: !554, line: 27, type: !103)
!3986 = distinct !DILexicalBlock(scope: !3979, file: !554, line: 27, column: 3)
!3987 = !DILocation(line: 17, column: 2, scope: !3972)
!3988 = !DILocation(line: 0, scope: !3977)
!3989 = !DILocation(line: 20, column: 2, scope: !3977)
!3990 = !DILocation(line: 38, column: 1, scope: !3972)
!3991 = !DILocation(line: 21, column: 20, scope: !3979)
!3992 = !DILocation(line: 21, column: 9, scope: !3979)
!3993 = !DILocation(line: 0, scope: !3972)
!3994 = !DILocation(line: 23, column: 3, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3996, file: !554, line: 23, column: 3)
!3996 = distinct !DILexicalBlock(scope: !3979, file: !554, line: 23, column: 3)
!3997 = !DILocation(line: 23, column: 3, scope: !3996)
!3998 = !DILocation(line: 23, column: 3, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3995, file: !554, line: 23, column: 3)
!4000 = !DILocation(line: 25, column: 3, scope: !3979)
!4001 = !DILocation(line: 25, column: 28, scope: !3979)
!4002 = !DILocation(line: 25, column: 44, scope: !3979)
!4003 = !DILocation(line: 0, scope: !3986)
!4004 = !DILocation(line: 28, column: 44, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !554, line: 27, column: 48)
!4006 = distinct !DILexicalBlock(scope: !3986, file: !554, line: 27, column: 3)
!4007 = !DILocation(line: 27, column: 37, scope: !4006)
!4008 = !DILocation(line: 27, column: 21, scope: !4006)
!4009 = !DILocation(line: 27, column: 3, scope: !3986)
!4010 = distinct !{!4010, !4009, !4011}
!4011 = !DILocation(line: 29, column: 3, scope: !3986)
!4012 = !DILocation(line: 31, column: 3, scope: !3979)
!4013 = !DILocation(line: 34, column: 7, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3979, file: !554, line: 34, column: 7)
!4015 = !DILocation(line: 34, column: 7, scope: !3979)
!4016 = !DILocation(line: 28, column: 30, scope: !4005)
!4017 = !DILocation(line: 28, column: 4, scope: !4005)
!4018 = !DILocation(line: 27, column: 43, scope: !4006)
!4019 = !DILocation(line: 35, column: 4, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4021, file: !554, line: 35, column: 4)
!4021 = distinct !DILexicalBlock(scope: !4022, file: !554, line: 35, column: 4)
!4022 = distinct !DILexicalBlock(scope: !4023, file: !554, line: 35, column: 4)
!4023 = distinct !DILexicalBlock(scope: !4024, file: !554, line: 35, column: 4)
!4024 = distinct !DILexicalBlock(scope: !4014, file: !554, line: 34, column: 55)
!4025 = !DILocation(line: 36, column: 3, scope: !4024)
!4026 = !DILocation(line: 37, column: 2, scope: !3980)
!4027 = !DILocation(line: 20, column: 25, scope: !3980)
!4028 = distinct !{!4028, !3989, !4029}
!4029 = !DILocation(line: 37, column: 2, scope: !3977)
!4030 = distinct !DISubprogram(name: "cbvprintf_package", scope: !750, file: !750, line: 233, type: !4031, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4040)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!103, !102, !156, !111, !108, !4033}
!4033 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4034, line: 99, baseType: !4035)
!4034 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4034, line: 40, baseType: !4036)
!4036 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !750, baseType: !4037)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4038)
!4038 = !{!4039}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4037, file: !750, line: 18, baseType: !102, size: 32)
!4040 = !{!4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4076, !4085, !4088, !4089, !4092, !4095, !4098, !4101, !4107}
!4041 = !DILocalVariable(name: "packaged", arg: 1, scope: !4030, file: !750, line: 233, type: !102)
!4042 = !DILocalVariable(name: "len", arg: 2, scope: !4030, file: !750, line: 233, type: !156)
!4043 = !DILocalVariable(name: "flags", arg: 3, scope: !4030, file: !750, line: 233, type: !111)
!4044 = !DILocalVariable(name: "fmt", arg: 4, scope: !4030, file: !750, line: 234, type: !108)
!4045 = !DILocalVariable(name: "ap", arg: 5, scope: !4030, file: !750, line: 234, type: !4033)
!4046 = !DILocalVariable(name: "buf0", scope: !4030, file: !750, line: 247, type: !550)
!4047 = !DILocalVariable(name: "buf", scope: !4030, file: !750, line: 248, type: !550)
!4048 = !DILocalVariable(name: "size", scope: !4030, file: !750, line: 249, type: !32)
!4049 = !DILocalVariable(name: "align", scope: !4030, file: !750, line: 250, type: !32)
!4050 = !DILocalVariable(name: "str_ptr_pos", scope: !4030, file: !750, line: 251, type: !4051)
!4051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 128, elements: !333)
!4052 = !DILocalVariable(name: "str_ptr_arg", scope: !4030, file: !750, line: 252, type: !4051)
!4053 = !DILocalVariable(name: "s_idx", scope: !4030, file: !750, line: 253, type: !32)
!4054 = !DILocalVariable(name: "s_rw_cnt", scope: !4030, file: !750, line: 254, type: !32)
!4055 = !DILocalVariable(name: "s_ro_cnt", scope: !4030, file: !750, line: 255, type: !32)
!4056 = !DILocalVariable(name: "arg_idx", scope: !4030, file: !750, line: 256, type: !103)
!4057 = !DILocalVariable(name: "i", scope: !4030, file: !750, line: 257, type: !32)
!4058 = !DILocalVariable(name: "s", scope: !4030, file: !750, line: 258, type: !108)
!4059 = !DILocalVariable(name: "parsing", scope: !4030, file: !750, line: 259, type: !122)
!4060 = !DILocalVariable(name: "rws_pos_en", scope: !4030, file: !750, line: 263, type: !122)
!4061 = !DILocalVariable(name: "fros_cnt", scope: !4030, file: !750, line: 268, type: !103)
!4062 = !DILocalVariable(name: "is_str_arg", scope: !4030, file: !750, line: 269, type: !122)
!4063 = !DILocalVariable(name: "pkg_hdr", scope: !4030, file: !750, line: 270, type: !4064)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 32)
!4065 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4066, line: 78, size: 32, elements: !4067)
!4066 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4067 = !{!4068, !4075}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4065, file: !4066, line: 80, baseType: !4069, size: 32)
!4069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4066, line: 45, size: 32, elements: !4070)
!4070 = !{!4071, !4072, !4073, !4074}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4069, file: !4066, line: 47, baseType: !166, size: 8)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4069, file: !4066, line: 50, baseType: !166, size: 8, offset: 8)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4069, file: !4066, line: 53, baseType: !166, size: 8, offset: 16)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4069, file: !4066, line: 56, baseType: !166, size: 8, offset: 24)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4065, file: !4066, line: 82, baseType: !102, size: 32)
!4076 = !DILocalVariable(name: "v", scope: !4077, file: !750, line: 567, type: !4081)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !750, line: 562, column: 14)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !750, line: 481, column: 18)
!4079 = distinct !DILexicalBlock(scope: !4080, file: !750, line: 466, column: 3)
!4080 = distinct !DILexicalBlock(scope: !4030, file: !750, line: 343, column: 15)
!4081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4030, file: !750, line: 567, size: 64, elements: !4082)
!4082 = !{!4083, !4084}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4081, file: !750, line: 567, baseType: !742, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4081, file: !750, line: 567, baseType: !740, size: 64)
!4085 = !DILocalVariable(name: "is_ro", scope: !4086, file: !750, line: 620, type: !122)
!4086 = distinct !DILexicalBlock(scope: !4087, file: !750, line: 613, column: 19)
!4087 = distinct !DILexicalBlock(scope: !4080, file: !750, line: 613, column: 7)
!4088 = !DILocalVariable(name: "do_ro", scope: !4086, file: !750, line: 621, type: !122)
!4089 = !DILocalVariable(name: "s_ptr_idx", scope: !4090, file: !750, line: 626, type: !111)
!4090 = distinct !DILexicalBlock(scope: !4091, file: !750, line: 625, column: 11)
!4091 = distinct !DILexicalBlock(scope: !4086, file: !750, line: 623, column: 8)
!4092 = !DILocalVariable(name: "v", scope: !4093, file: !750, line: 684, type: !103)
!4093 = distinct !DILexicalBlock(scope: !4094, file: !750, line: 683, column: 35)
!4094 = distinct !DILexicalBlock(scope: !4087, file: !750, line: 683, column: 14)
!4095 = !DILocalVariable(name: "v", scope: !4096, file: !750, line: 691, type: !746)
!4096 = distinct !DILexicalBlock(scope: !4097, file: !750, line: 690, column: 36)
!4097 = distinct !DILexicalBlock(scope: !4094, file: !750, line: 690, column: 14)
!4098 = !DILocalVariable(name: "v", scope: !4099, file: !750, line: 698, type: !107)
!4099 = distinct !DILexicalBlock(scope: !4100, file: !750, line: 697, column: 41)
!4100 = distinct !DILexicalBlock(scope: !4097, file: !750, line: 697, column: 14)
!4101 = !DILocalVariable(name: "pos", scope: !4102, file: !750, line: 762, type: !166)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !750, line: 757, column: 31)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !750, line: 757, column: 3)
!4104 = distinct !DILexicalBlock(scope: !4105, file: !750, line: 757, column: 3)
!4105 = distinct !DILexicalBlock(scope: !4106, file: !750, line: 756, column: 16)
!4106 = distinct !DILexicalBlock(scope: !4030, file: !750, line: 756, column: 6)
!4107 = !DILabel(scope: !4086, name: "process_string", file: !750, line: 615)
!4108 = !DILocation(line: 0, scope: !4030)
!4109 = !DILocation(line: 251, column: 2, scope: !4030)
!4110 = !DILocation(line: 251, column: 10, scope: !4030)
!4111 = !DILocation(line: 252, column: 2, scope: !4030)
!4112 = !DILocation(line: 252, column: 10, scope: !4030)
!4113 = !DILocation(line: 263, column: 29, scope: !4030)
!4114 = !DILocation(line: 263, column: 21, scope: !4030)
!4115 = !DILocation(line: 268, column: 21, scope: !4030)
!4116 = !DILocation(line: 268, column: 19, scope: !4030)
!4117 = !DILocation(line: 273, column: 6, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4030, file: !750, line: 273, column: 6)
!4119 = !DILocation(line: 273, column: 26, scope: !4118)
!4120 = !DILocation(line: 273, column: 6, scope: !4030)
!4121 = !DILocation(line: 297, column: 6, scope: !4030)
!4122 = !DILocation(line: 305, column: 11, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4030, file: !750, line: 305, column: 6)
!4124 = !DILocation(line: 305, column: 6, scope: !4030)
!4125 = !DILocation(line: 327, column: 19, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4030, file: !750, line: 327, column: 6)
!4127 = !DILocation(line: 327, column: 22, scope: !4126)
!4128 = !DILocation(line: 327, column: 33, scope: !4126)
!4129 = !DILocation(line: 327, column: 50, scope: !4126)
!4130 = !DILocation(line: 327, column: 6, scope: !4030)
!4131 = !DILocation(line: 338, column: 9, scope: !4030)
!4132 = !DILocation(line: 341, column: 2, scope: !4030)
!4133 = !DILocation(line: 472, column: 8, scope: !4079)
!4134 = !DILocation(line: 473, column: 14, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !750, line: 473, column: 9)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !750, line: 472, column: 18)
!4137 = distinct !DILexicalBlock(scope: !4079, file: !750, line: 472, column: 8)
!4138 = !DILocation(line: 473, column: 9, scope: !4136)
!4139 = !DILocation(line: 479, column: 5, scope: !4136)
!4140 = !DILocation(line: 468, column: 9, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4079, file: !750, line: 468, column: 8)
!4142 = !DILocation(line: 468, column: 8, scope: !4141)
!4143 = !DILocation(line: 468, column: 15, scope: !4141)
!4144 = !DILocation(line: 468, column: 8, scope: !4079)
!4145 = distinct !{!4145, !4146, !4147}
!4146 = !DILocation(line: 343, column: 2, scope: !4030)
!4147 = !DILocation(line: 712, column: 2, scope: !4030)
!4148 = !DILocation(line: 481, column: 4, scope: !4079)
!4149 = !DILocation(line: 484, column: 12, scope: !4078)
!4150 = !DILocation(line: 485, column: 5, scope: !4078)
!4151 = !DILocation(line: 505, column: 5, scope: !4078)
!4152 = !DILocation(line: 518, column: 5, scope: !4078)
!4153 = !DILocation(line: 523, column: 5, scope: !4078)
!4154 = !DILocation(line: 532, column: 9, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4078, file: !750, line: 532, column: 9)
!4156 = !DILocation(line: 532, column: 17, scope: !4155)
!4157 = !DILocation(line: 532, column: 9, scope: !4078)
!4158 = !DILocation(line: 533, column: 10, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !750, line: 533, column: 10)
!4160 = distinct !DILexicalBlock(scope: !4155, file: !750, line: 532, column: 25)
!4161 = !DILocation(line: 533, column: 18, scope: !4159)
!4162 = !DILocation(line: 0, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4077, file: !750, line: 569, column: 9)
!4164 = !DILocation(line: 0, scope: !4077)
!4165 = !DILocation(line: 579, column: 20, scope: !4077)
!4166 = !DILocation(line: 579, column: 11, scope: !4077)
!4167 = !DILocation(line: 580, column: 9, scope: !4077)
!4168 = !DILocation(line: 582, column: 21, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4170, file: !750, line: 582, column: 10)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !750, line: 580, column: 23)
!4171 = distinct !DILexicalBlock(scope: !4077, file: !750, line: 580, column: 9)
!4172 = !DILocation(line: 582, column: 28, scope: !4169)
!4173 = !DILocation(line: 582, column: 10, scope: !4170)
!4174 = !DILocation(line: 0, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !750, line: 587, column: 17)
!4176 = distinct !DILexicalBlock(scope: !4170, file: !750, line: 585, column: 10)
!4177 = !DILocation(line: 593, column: 9, scope: !4077)
!4178 = !DILocation(line: 600, column: 5, scope: !4078)
!4179 = !DILocation(line: 605, column: 18, scope: !4080)
!4180 = !DILocation(line: 605, column: 9, scope: !4080)
!4181 = !DILocation(line: 608, column: 20, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4080, file: !750, line: 608, column: 7)
!4183 = !DILocation(line: 608, column: 23, scope: !4182)
!4184 = !DILocation(line: 608, column: 34, scope: !4182)
!4185 = !DILocation(line: 608, column: 41, scope: !4182)
!4186 = !DILocation(line: 608, column: 7, scope: !4080)
!4187 = !DILocation(line: 613, column: 7, scope: !4080)
!4188 = !DILocation(line: 614, column: 8, scope: !4086)
!4189 = !DILocation(line: 614, column: 4, scope: !4086)
!4190 = !DILocation(line: 256, column: 6, scope: !4030)
!4191 = !DILocation(line: 254, column: 15, scope: !4030)
!4192 = !DILocation(line: 320, column: 7, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4123, file: !750, line: 305, column: 20)
!4194 = !DILocation(line: 615, column: 1, scope: !4086)
!4195 = !DILocation(line: 616, column: 8, scope: !4086)
!4196 = !DILocation(line: 617, column: 5, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4198, file: !750, line: 616, column: 22)
!4198 = distinct !DILexicalBlock(scope: !4086, file: !750, line: 616, column: 8)
!4199 = !DILocation(line: 617, column: 25, scope: !4197)
!4200 = !DILocation(line: 618, column: 4, scope: !4197)
!4201 = !DILocation(line: 620, column: 26, scope: !4086)
!4202 = !DILocation(line: 620, column: 29, scope: !4086)
!4203 = !DILocation(line: 620, column: 17, scope: !4086)
!4204 = !DILocation(line: 620, column: 43, scope: !4086)
!4205 = !DILocation(line: 0, scope: !4086)
!4206 = !DILocation(line: 623, column: 14, scope: !4091)
!4207 = !DILocation(line: 626, column: 26, scope: !4090)
!4208 = !DILocation(line: 626, column: 37, scope: !4090)
!4209 = !DILocation(line: 0, scope: !4090)
!4210 = !DILocation(line: 634, column: 15, scope: !4211)
!4211 = distinct !DILexicalBlock(scope: !4090, file: !750, line: 634, column: 9)
!4212 = !DILocation(line: 635, column: 6, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4214, file: !750, line: 635, column: 6)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !750, line: 635, column: 6)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !750, line: 635, column: 6)
!4216 = distinct !DILexicalBlock(scope: !4211, file: !750, line: 634, column: 44)
!4217 = !DILocation(line: 639, column: 15, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4090, file: !750, line: 639, column: 9)
!4219 = !DILocation(line: 639, column: 9, scope: !4090)
!4220 = !DILocation(line: 640, column: 6, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4222, file: !750, line: 640, column: 6)
!4222 = distinct !DILexicalBlock(scope: !4223, file: !750, line: 640, column: 6)
!4223 = distinct !DILexicalBlock(scope: !4224, file: !750, line: 640, column: 6)
!4224 = distinct !DILexicalBlock(scope: !4218, file: !750, line: 639, column: 43)
!4225 = !DILocation(line: 644, column: 9, scope: !4090)
!4226 = !DILocation(line: 649, column: 27, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4228, file: !750, line: 644, column: 23)
!4228 = distinct !DILexicalBlock(scope: !4090, file: !750, line: 644, column: 9)
!4229 = !DILocation(line: 649, column: 6, scope: !4227)
!4230 = !DILocation(line: 649, column: 25, scope: !4227)
!4231 = !DILocation(line: 650, column: 27, scope: !4227)
!4232 = !DILocation(line: 650, column: 6, scope: !4227)
!4233 = !DILocation(line: 650, column: 25, scope: !4227)
!4234 = !DILocation(line: 651, column: 10, scope: !4227)
!4235 = !DILocation(line: 653, column: 26, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4237, file: !750, line: 651, column: 17)
!4237 = distinct !DILexicalBlock(scope: !4227, file: !750, line: 651, column: 10)
!4238 = !DILocation(line: 654, column: 15, scope: !4236)
!4239 = !DILocation(line: 655, column: 6, scope: !4236)
!4240 = !DILocation(line: 656, column: 15, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4237, file: !750, line: 655, column: 13)
!4242 = !DILocation(line: 658, column: 16, scope: !4228)
!4243 = !DILocation(line: 663, column: 10, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4245, file: !750, line: 658, column: 23)
!4245 = distinct !DILexicalBlock(scope: !4228, file: !750, line: 658, column: 16)
!4246 = !DILocation(line: 664, column: 5, scope: !4244)
!4247 = !DILocation(line: 664, column: 16, scope: !4245)
!4248 = !DILocation(line: 669, column: 10, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4250, file: !750, line: 664, column: 28)
!4250 = distinct !DILexicalBlock(scope: !4245, file: !750, line: 664, column: 16)
!4251 = !DILocation(line: 670, column: 5, scope: !4249)
!4252 = !DILocation(line: 675, column: 13, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4250, file: !750, line: 670, column: 12)
!4254 = !DILocation(line: 675, column: 27, scope: !4253)
!4255 = !DILocation(line: 675, column: 10, scope: !4253)
!4256 = !DILocation(line: 678, column: 10, scope: !4090)
!4257 = !DILocation(line: 680, column: 8, scope: !4086)
!4258 = !DILocation(line: 683, column: 14, scope: !4087)
!4259 = !DILocation(line: 684, column: 12, scope: !4093)
!4260 = !DILocation(line: 0, scope: !4093)
!4261 = !DILocation(line: 686, column: 8, scope: !4093)
!4262 = !DILocation(line: 687, column: 5, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !4264, file: !750, line: 686, column: 22)
!4264 = distinct !DILexicalBlock(scope: !4093, file: !750, line: 686, column: 8)
!4265 = !DILocation(line: 687, column: 17, scope: !4263)
!4266 = !DILocation(line: 688, column: 4, scope: !4263)
!4267 = !DILocation(line: 698, column: 18, scope: !4099)
!4268 = !DILocation(line: 0, scope: !4099)
!4269 = !DILocation(line: 700, column: 8, scope: !4099)
!4270 = !DILocation(line: 704, column: 6, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4272, file: !750, line: 703, column: 12)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !750, line: 701, column: 9)
!4273 = distinct !DILexicalBlock(scope: !4274, file: !750, line: 700, column: 22)
!4274 = distinct !DILexicalBlock(scope: !4099, file: !750, line: 700, column: 8)
!4275 = !DILocation(line: 704, column: 24, scope: !4271)
!4276 = !DILocation(line: 706, column: 4, scope: !4273)
!4277 = !DILocation(line: 709, column: 4, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !750, line: 709, column: 4)
!4279 = distinct !DILexicalBlock(scope: !4280, file: !750, line: 709, column: 4)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !750, line: 709, column: 4)
!4281 = distinct !DILexicalBlock(scope: !4100, file: !750, line: 708, column: 10)
!4282 = !DILocation(line: 0, scope: !4094)
!4283 = !DILocation(line: 0, scope: !4080)
!4284 = !DILocation(line: 720, column: 6, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4030, file: !750, line: 720, column: 6)
!4286 = !DILocation(line: 720, column: 17, scope: !4285)
!4287 = !DILocation(line: 720, column: 31, scope: !4285)
!4288 = !DILocation(line: 720, column: 6, scope: !4030)
!4289 = !DILocation(line: 721, column: 3, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4291, file: !750, line: 721, column: 3)
!4291 = distinct !DILexicalBlock(scope: !4292, file: !750, line: 721, column: 3)
!4292 = distinct !DILexicalBlock(scope: !4293, file: !750, line: 721, column: 3)
!4293 = distinct !DILexicalBlock(scope: !4285, file: !750, line: 720, column: 38)
!4294 = !DILocation(line: 729, column: 6, scope: !4030)
!4295 = !DILocation(line: 730, column: 21, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !750, line: 729, column: 20)
!4297 = distinct !DILexicalBlock(scope: !4030, file: !750, line: 729, column: 6)
!4298 = !DILocation(line: 730, column: 27, scope: !4296)
!4299 = !DILocation(line: 730, column: 3, scope: !4296)
!4300 = !DILocation(line: 737, column: 22, scope: !4030)
!4301 = !DILocation(line: 737, column: 20, scope: !4030)
!4302 = !DILocation(line: 0, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4030, file: !750, line: 739, column: 6)
!4304 = !DILocation(line: 745, column: 17, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4303, file: !750, line: 743, column: 9)
!4306 = !DILocation(line: 745, column: 25, scope: !4305)
!4307 = !DILocation(line: 746, column: 17, scope: !4305)
!4308 = !DILocation(line: 746, column: 28, scope: !4305)
!4309 = !DILocation(line: 749, column: 29, scope: !4030)
!4310 = !DILocation(line: 749, column: 16, scope: !4030)
!4311 = !DILocation(line: 749, column: 27, scope: !4030)
!4312 = !DILocation(line: 756, column: 6, scope: !4106)
!4313 = !DILocation(line: 756, column: 6, scope: !4030)
!4314 = !DILocation(line: 757, column: 3, scope: !4104)
!4315 = !DILocation(line: 758, column: 10, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4102, file: !750, line: 758, column: 8)
!4317 = !DILocation(line: 758, column: 25, scope: !4316)
!4318 = !DILocation(line: 758, column: 8, scope: !4102)
!4319 = !DILocation(line: 0, scope: !4102)
!4320 = !DILocation(line: 765, column: 8, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4102, file: !750, line: 765, column: 8)
!4322 = !DILocation(line: 765, column: 19, scope: !4321)
!4323 = !DILocation(line: 765, column: 23, scope: !4321)
!4324 = !DILocation(line: 765, column: 8, scope: !4102)
!4325 = !DILocation(line: 762, column: 33, scope: !4102)
!4326 = !DILocation(line: 769, column: 8, scope: !4102)
!4327 = !DILocation(line: 769, column: 11, scope: !4102)
!4328 = !DILocation(line: 757, column: 27, scope: !4103)
!4329 = !DILocation(line: 757, column: 17, scope: !4103)
!4330 = distinct !{!4330, !4314, !4331}
!4331 = !DILocation(line: 770, column: 3, scope: !4104)
!4332 = !DILocation(line: 774, column: 16, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4334, file: !750, line: 774, column: 2)
!4334 = distinct !DILexicalBlock(scope: !4030, file: !750, line: 774, column: 2)
!4335 = !DILocation(line: 774, column: 2, scope: !4334)
!4336 = !DILocation(line: 776, column: 16, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !750, line: 776, column: 7)
!4338 = distinct !DILexicalBlock(scope: !4333, file: !750, line: 774, column: 30)
!4339 = !DILocation(line: 776, column: 19, scope: !4337)
!4340 = !DILocation(line: 776, column: 34, scope: !4337)
!4341 = !DILocation(line: 776, column: 7, scope: !4338)
!4342 = !DILocation(line: 780, column: 7, scope: !4338)
!4343 = !DILocation(line: 782, column: 13, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4345, file: !750, line: 780, column: 19)
!4345 = distinct !DILexicalBlock(scope: !4338, file: !750, line: 780, column: 7)
!4346 = !DILocation(line: 782, column: 8, scope: !4344)
!4347 = !DILocation(line: 782, column: 11, scope: !4344)
!4348 = !DILocation(line: 783, column: 3, scope: !4344)
!4349 = !DILocation(line: 785, column: 26, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4345, file: !750, line: 783, column: 10)
!4351 = !DILocation(line: 785, column: 41, scope: !4350)
!4352 = !DILocation(line: 785, column: 24, scope: !4350)
!4353 = !DILocation(line: 785, column: 8, scope: !4350)
!4354 = !DILocation(line: 787, column: 52, scope: !4350)
!4355 = !DILocation(line: 789, column: 11, scope: !4350)
!4356 = !DILocation(line: 789, column: 21, scope: !4350)
!4357 = !DILocation(line: 0, scope: !4345)
!4358 = !DILocation(line: 793, column: 7, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4338, file: !750, line: 793, column: 7)
!4360 = !DILocation(line: 793, column: 18, scope: !4359)
!4361 = !DILocation(line: 793, column: 22, scope: !4359)
!4362 = !DILocation(line: 793, column: 29, scope: !4359)
!4363 = !DILocation(line: 793, column: 7, scope: !4338)
!4364 = !DILocation(line: 797, column: 12, scope: !4338)
!4365 = !DILocation(line: 797, column: 7, scope: !4338)
!4366 = !DILocation(line: 797, column: 10, scope: !4338)
!4367 = !DILocation(line: 799, column: 3, scope: !4338)
!4368 = !DILocation(line: 800, column: 7, scope: !4338)
!4369 = !DILocation(line: 801, column: 2, scope: !4338)
!4370 = !DILocation(line: 338, column: 4, scope: !4030)
!4371 = !DILocation(line: 774, column: 26, scope: !4333)
!4372 = distinct !{!4372, !4335, !4373}
!4373 = !DILocation(line: 801, column: 2, scope: !4334)
!4374 = !DILocation(line: 808, column: 9, scope: !4030)
!4375 = !DILocation(line: 808, column: 2, scope: !4030)
!4376 = !DILocation(line: 813, column: 1, scope: !4030)
!4377 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !750, file: !750, line: 33, type: !4378, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4380)
!4378 = !DISubroutineType(types: !4379)
!4379 = !{!122, !108}
!4380 = !{!4381}
!4381 = !DILocalVariable(name: "addr", arg: 1, scope: !4377, file: !750, line: 33, type: !108)
!4382 = !DILocation(line: 0, scope: !4377)
!4383 = !DILocation(line: 41, column: 9, scope: !4377)
!4384 = !DILocation(line: 41, column: 2, scope: !4377)
!4385 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4386, file: !4386, line: 24, type: !4387, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4389)
!4386 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4387 = !DISubroutineType(types: !4388)
!4388 = !{!122, !13}
!4389 = !{!4390}
!4390 = !DILocalVariable(name: "addr", arg: 1, scope: !4385, file: !4386, line: 24, type: !13)
!4391 = !DILocation(line: 0, scope: !4385)
!4392 = !DILocation(line: 49, column: 30, scope: !4385)
!4393 = !DILocation(line: 49, column: 57, scope: !4385)
!4394 = !DILocation(line: 49, column: 2, scope: !4385)
!4395 = distinct !DISubprogram(name: "cbprintf_package", scope: !750, file: !750, line: 815, type: !4396, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4398)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!103, !102, !156, !111, !108, null}
!4398 = !{!4399, !4400, !4401, !4402, !4403, !4404}
!4399 = !DILocalVariable(name: "packaged", arg: 1, scope: !4395, file: !750, line: 815, type: !102)
!4400 = !DILocalVariable(name: "len", arg: 2, scope: !4395, file: !750, line: 815, type: !156)
!4401 = !DILocalVariable(name: "flags", arg: 3, scope: !4395, file: !750, line: 815, type: !111)
!4402 = !DILocalVariable(name: "format", arg: 4, scope: !4395, file: !750, line: 816, type: !108)
!4403 = !DILocalVariable(name: "ap", scope: !4395, file: !750, line: 818, type: !4033)
!4404 = !DILocalVariable(name: "ret", scope: !4395, file: !750, line: 819, type: !103)
!4405 = !DILocation(line: 0, scope: !4395)
!4406 = !DILocation(line: 818, column: 2, scope: !4395)
!4407 = !DILocation(line: 818, column: 10, scope: !4395)
!4408 = !DILocation(line: 821, column: 2, scope: !4395)
!4409 = !DILocation(line: 822, column: 8, scope: !4395)
!4410 = !DILocation(line: 823, column: 2, scope: !4395)
!4411 = !DILocation(line: 825, column: 1, scope: !4395)
!4412 = !DILocation(line: 824, column: 2, scope: !4395)
!4413 = distinct !DISubprogram(name: "cbpprintf_external", scope: !750, file: !750, line: 827, type: !4414, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4424)
!4414 = !DISubroutineType(types: !4415)
!4415 = !{!103, !4416, !4420, !102, !102}
!4416 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4066, line: 297, baseType: !4417)
!4417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 32)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!103, null}
!4420 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4066, line: 328, baseType: !4421)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 32)
!4422 = !DISubroutineType(types: !4423)
!4423 = !{!103, !4416, !102, !108, !4033}
!4424 = !{!4425, !4426, !4427, !4428, !4429, !4430, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443}
!4425 = !DILocalVariable(name: "out", arg: 1, scope: !4413, file: !750, line: 827, type: !4416)
!4426 = !DILocalVariable(name: "formatter", arg: 2, scope: !4413, file: !750, line: 828, type: !4420)
!4427 = !DILocalVariable(name: "ctx", arg: 3, scope: !4413, file: !750, line: 829, type: !102)
!4428 = !DILocalVariable(name: "packaged", arg: 4, scope: !4413, file: !750, line: 829, type: !102)
!4429 = !DILocalVariable(name: "buf", scope: !4413, file: !750, line: 831, type: !550)
!4430 = !DILocalVariable(name: "hdr", scope: !4413, file: !750, line: 832, type: !4431)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 32)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4066, line: 96, size: 64, elements: !4433)
!4433 = !{!4434, !4435}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4432, file: !4066, line: 98, baseType: !4065, size: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4432, file: !4066, line: 101, baseType: !160, size: 32, offset: 32)
!4436 = !DILocalVariable(name: "s", scope: !4413, file: !750, line: 833, type: !160)
!4437 = !DILocalVariable(name: "ps", scope: !4413, file: !750, line: 833, type: !748)
!4438 = !DILocalVariable(name: "i", scope: !4413, file: !750, line: 834, type: !32)
!4439 = !DILocalVariable(name: "args_size", scope: !4413, file: !750, line: 834, type: !32)
!4440 = !DILocalVariable(name: "s_nbr", scope: !4413, file: !750, line: 834, type: !32)
!4441 = !DILocalVariable(name: "ros_nbr", scope: !4413, file: !750, line: 834, type: !32)
!4442 = !DILocalVariable(name: "rws_nbr", scope: !4413, file: !750, line: 834, type: !32)
!4443 = !DILocalVariable(name: "s_idx", scope: !4413, file: !750, line: 834, type: !32)
!4444 = !DILocation(line: 0, scope: !4413)
!4445 = !DILocation(line: 836, column: 10, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4413, file: !750, line: 836, column: 6)
!4447 = !DILocation(line: 836, column: 6, scope: !4413)
!4448 = !DILocation(line: 842, column: 28, scope: !4413)
!4449 = !DILocation(line: 842, column: 14, scope: !4413)
!4450 = !DILocation(line: 852, column: 16, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4452, file: !750, line: 852, column: 2)
!4452 = distinct !DILexicalBlock(scope: !4413, file: !750, line: 852, column: 2)
!4453 = !DILocation(line: 852, column: 2, scope: !4452)
!4454 = !DILocation(line: 841, column: 28, scope: !4413)
!4455 = !DILocation(line: 841, column: 14, scope: !4413)
!4456 = !DILocation(line: 841, column: 32, scope: !4413)
!4457 = !DILocation(line: 847, column: 19, scope: !4413)
!4458 = !DILocation(line: 843, column: 28, scope: !4413)
!4459 = !DILocation(line: 843, column: 14, scope: !4413)
!4460 = !DILocation(line: 847, column: 31, scope: !4413)
!4461 = !DILocation(line: 844, column: 28, scope: !4413)
!4462 = !DILocation(line: 844, column: 14, scope: !4413)
!4463 = !DILocation(line: 847, column: 45, scope: !4413)
!4464 = !DILocation(line: 847, column: 41, scope: !4413)
!4465 = !DILocation(line: 854, column: 24, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4451, file: !750, line: 852, column: 30)
!4467 = !DILocation(line: 854, column: 11, scope: !4466)
!4468 = !DILocation(line: 855, column: 30, scope: !4466)
!4469 = !DILocation(line: 855, column: 22, scope: !4466)
!4470 = !DILocation(line: 855, column: 8, scope: !4466)
!4471 = !DILocation(line: 857, column: 7, scope: !4466)
!4472 = !DILocation(line: 859, column: 8, scope: !4466)
!4473 = !DILocation(line: 859, column: 18, scope: !4466)
!4474 = !DILocation(line: 859, column: 5, scope: !4466)
!4475 = !DILocation(line: 852, column: 26, scope: !4451)
!4476 = distinct !{!4476, !4453, !4477}
!4477 = !DILocation(line: 860, column: 2, scope: !4452)
!4478 = !DILocation(line: 863, column: 6, scope: !4413)
!4479 = !DILocation(line: 866, column: 56, scope: !4413)
!4480 = !DILocation(line: 866, column: 9, scope: !4413)
!4481 = !DILocation(line: 866, column: 2, scope: !4413)
!4482 = !DILocation(line: 867, column: 1, scope: !4413)
!4483 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !750, file: !750, line: 179, type: !4484, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4486)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!103, !4416, !4420, !102, !108, !102}
!4486 = !{!4487, !4488, !4489, !4490, !4491, !4492}
!4487 = !DILocalVariable(name: "out", arg: 1, scope: !4483, file: !750, line: 179, type: !4416)
!4488 = !DILocalVariable(name: "formatter", arg: 2, scope: !4483, file: !750, line: 180, type: !4420)
!4489 = !DILocalVariable(name: "ctx", arg: 3, scope: !4483, file: !750, line: 181, type: !102)
!4490 = !DILocalVariable(name: "fmt", arg: 4, scope: !4483, file: !750, line: 182, type: !108)
!4491 = !DILocalVariable(name: "buf", arg: 5, scope: !4483, file: !750, line: 182, type: !102)
!4492 = !DILocalVariable(name: "u", scope: !4483, file: !750, line: 187, type: !4493)
!4493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4483, file: !750, line: 184, size: 32, elements: !4494)
!4494 = !{!4495, !4496}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4493, file: !750, line: 185, baseType: !4033, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4493, file: !750, line: 186, baseType: !102, size: 32)
!4497 = !DILocation(line: 0, scope: !4483)
!4498 = !DILocation(line: 191, column: 9, scope: !4483)
!4499 = !DILocation(line: 191, column: 2, scope: !4483)
!4500 = distinct !DISubprogram(name: "is_ptr", scope: !750, file: !750, line: 881, type: !4501, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4503)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{!122, !108, !103}
!4503 = !{!4504, !4505, !4506, !4507, !4508}
!4504 = !DILocalVariable(name: "fmt", arg: 1, scope: !4500, file: !750, line: 881, type: !108)
!4505 = !DILocalVariable(name: "n", arg: 2, scope: !4500, file: !750, line: 881, type: !103)
!4506 = !DILocalVariable(name: "c", scope: !4500, file: !750, line: 883, type: !110)
!4507 = !DILocalVariable(name: "mod", scope: !4500, file: !750, line: 884, type: !122)
!4508 = !DILocalVariable(name: "cnt", scope: !4500, file: !750, line: 885, type: !103)
!4509 = !DILocation(line: 0, scope: !4500)
!4510 = !DILocation(line: 887, column: 14, scope: !4500)
!4511 = !DILocation(line: 887, column: 22, scope: !4500)
!4512 = !DILocation(line: 887, column: 2, scope: !4500)
!4513 = !DILocation(line: 887, column: 18, scope: !4500)
!4514 = !DILocation(line: 888, column: 7, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4500, file: !750, line: 887, column: 31)
!4516 = !DILocation(line: 889, column: 12, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !750, line: 889, column: 8)
!4518 = distinct !DILexicalBlock(scope: !4519, file: !750, line: 888, column: 12)
!4519 = distinct !DILexicalBlock(scope: !4515, file: !750, line: 888, column: 7)
!4520 = !DILocation(line: 889, column: 8, scope: !4518)
!4521 = !DILocation(line: 890, column: 11, scope: !4522)
!4522 = distinct !DILexicalBlock(scope: !4523, file: !750, line: 890, column: 9)
!4523 = distinct !DILexicalBlock(scope: !4517, file: !750, line: 889, column: 18)
!4524 = !DILocation(line: 890, column: 9, scope: !4523)
!4525 = !DILocation(line: 892, column: 16, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4522, file: !750, line: 892, column: 16)
!4527 = !DILocation(line: 892, column: 16, scope: !4522)
!4528 = !DILocation(line: 895, column: 15, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4517, file: !750, line: 895, column: 15)
!4530 = !DILocation(line: 895, column: 15, scope: !4517)
!4531 = !DILocation(line: 900, column: 9, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4515, file: !750, line: 900, column: 7)
!4533 = !DILocation(line: 900, column: 7, scope: !4515)
!4534 = distinct !{!4534, !4512, !4535}
!4535 = !DILocation(line: 903, column: 2, scope: !4500)
!4536 = !DILocation(line: 906, column: 1, scope: !4500)
!4537 = distinct !DISubprogram(name: "is_fmt_spec", scope: !750, file: !750, line: 873, type: !4538, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4540)
!4538 = !DISubroutineType(types: !4539)
!4539 = !{!122, !110}
!4540 = !{!4541}
!4541 = !DILocalVariable(name: "c", arg: 1, scope: !4537, file: !750, line: 873, type: !110)
!4542 = !DILocation(line: 0, scope: !4537)
!4543 = !DILocation(line: 875, column: 19, scope: !4537)
!4544 = !DILocation(line: 875, column: 2, scope: !4537)
!4545 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !750, file: !750, line: 908, type: !4546, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4552)
!4546 = !DISubroutineType(types: !4547)
!4547 = !{!103, !102, !156, !4548, !102, !111, !3076, !156}
!4548 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4066, line: 308, baseType: !4549)
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 32)
!4550 = !DISubroutineType(types: !4551)
!4551 = !{!103, !13, !156, !102}
!4552 = !{!4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4570, !4571, !4572, !4573, !4574, !4580, !4583, !4584, !4585, !4587, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4603, !4606, !4607, !4608, !4609, !4610, !4611, !4613, !4616, !4617, !4618}
!4553 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4545, file: !750, line: 908, type: !102)
!4554 = !DILocalVariable(name: "in_len", arg: 2, scope: !4545, file: !750, line: 909, type: !156)
!4555 = !DILocalVariable(name: "cb", arg: 3, scope: !4545, file: !750, line: 910, type: !4548)
!4556 = !DILocalVariable(name: "ctx", arg: 4, scope: !4545, file: !750, line: 911, type: !102)
!4557 = !DILocalVariable(name: "flags", arg: 5, scope: !4545, file: !750, line: 912, type: !111)
!4558 = !DILocalVariable(name: "strl", arg: 6, scope: !4545, file: !750, line: 913, type: !3076)
!4559 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4545, file: !750, line: 914, type: !156)
!4560 = !DILocalVariable(name: "buf", scope: !4545, file: !750, line: 918, type: !550)
!4561 = !DILocalVariable(name: "buf32", scope: !4545, file: !750, line: 919, type: !1411)
!4562 = !DILocalVariable(name: "args_size", scope: !4545, file: !750, line: 920, type: !32)
!4563 = !DILocalVariable(name: "ros_nbr", scope: !4545, file: !750, line: 920, type: !32)
!4564 = !DILocalVariable(name: "rws_nbr", scope: !4545, file: !750, line: 920, type: !32)
!4565 = !DILocalVariable(name: "fmt_present", scope: !4545, file: !750, line: 921, type: !122)
!4566 = !DILocalVariable(name: "rw_cpy", scope: !4545, file: !750, line: 922, type: !122)
!4567 = !DILocalVariable(name: "ro_cpy", scope: !4545, file: !750, line: 923, type: !122)
!4568 = !DILocalVariable(name: "in_desc", scope: !4545, file: !750, line: 924, type: !4569)
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 32)
!4570 = !DILocalVariable(name: "out_len", scope: !4545, file: !750, line: 960, type: !103)
!4571 = !DILocalVariable(name: "fmt", scope: !4545, file: !750, line: 965, type: !108)
!4572 = !DILocalVariable(name: "str_pos", scope: !4545, file: !750, line: 966, type: !550)
!4573 = !DILocalVariable(name: "strl_cnt", scope: !4545, file: !750, line: 967, type: !156)
!4574 = !DILocalVariable(name: "i", scope: !4575, file: !750, line: 973, type: !103)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !750, line: 973, column: 4)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 972, column: 15)
!4577 = distinct !DILexicalBlock(scope: !4578, file: !750, line: 972, column: 7)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !750, line: 970, column: 18)
!4579 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 970, column: 6)
!4580 = !DILocalVariable(name: "str", scope: !4581, file: !750, line: 974, type: !108)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !750, line: 973, column: 38)
!4582 = distinct !DILexicalBlock(scope: !4575, file: !750, line: 973, column: 4)
!4583 = !DILocalVariable(name: "len", scope: !4581, file: !750, line: 975, type: !103)
!4584 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4578, file: !750, line: 990, type: !122)
!4585 = !DILocalVariable(name: "i", scope: !4586, file: !750, line: 995, type: !103)
!4586 = distinct !DILexicalBlock(scope: !4578, file: !750, line: 995, column: 3)
!4587 = !DILocalVariable(name: "arg_idx", scope: !4588, file: !750, line: 996, type: !166)
!4588 = distinct !DILexicalBlock(scope: !4589, file: !750, line: 995, column: 37)
!4589 = distinct !DILexicalBlock(scope: !4586, file: !750, line: 995, column: 3)
!4590 = !DILocalVariable(name: "arg_pos", scope: !4588, file: !750, line: 997, type: !166)
!4591 = !DILocalVariable(name: "str", scope: !4588, file: !750, line: 998, type: !108)
!4592 = !DILocalVariable(name: "is_ro", scope: !4588, file: !750, line: 999, type: !122)
!4593 = !DILocalVariable(name: "len", scope: !4588, file: !750, line: 1000, type: !103)
!4594 = !DILocalVariable(name: "out_desc", scope: !4545, file: !750, line: 1038, type: !4069)
!4595 = !DILocalVariable(name: "cpy_str_pos", scope: !4545, file: !750, line: 1040, type: !4051)
!4596 = !DILocalVariable(name: "keep_str_pos", scope: !4545, file: !750, line: 1042, type: !4051)
!4597 = !DILocalVariable(name: "scpy_cnt", scope: !4545, file: !750, line: 1043, type: !166)
!4598 = !DILocalVariable(name: "keep_cnt", scope: !4545, file: !750, line: 1044, type: !166)
!4599 = !DILocalVariable(name: "dst", scope: !4545, file: !750, line: 1045, type: !550)
!4600 = !DILocalVariable(name: "rv", scope: !4545, file: !750, line: 1046, type: !103)
!4601 = !DILocalVariable(name: "i", scope: !4602, file: !750, line: 1074, type: !103)
!4602 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 1074, column: 2)
!4603 = !DILocalVariable(name: "arg_idx", scope: !4604, file: !750, line: 1075, type: !166)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !750, line: 1074, column: 36)
!4605 = distinct !DILexicalBlock(scope: !4602, file: !750, line: 1074, column: 2)
!4606 = !DILocalVariable(name: "arg_pos", scope: !4604, file: !750, line: 1076, type: !166)
!4607 = !DILocalVariable(name: "str", scope: !4604, file: !750, line: 1077, type: !108)
!4608 = !DILocalVariable(name: "is_ro", scope: !4604, file: !750, line: 1078, type: !122)
!4609 = !DILocalVariable(name: "in_desc_backup", scope: !4545, file: !750, line: 1114, type: !4069)
!4610 = !DILocalVariable(name: "strs_len", scope: !4545, file: !750, line: 1134, type: !156)
!4611 = !DILocalVariable(name: "i", scope: !4612, file: !750, line: 1143, type: !103)
!4612 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 1143, column: 2)
!4613 = !DILocalVariable(name: "loc", scope: !4614, file: !750, line: 1144, type: !166)
!4614 = distinct !DILexicalBlock(scope: !4615, file: !750, line: 1143, column: 37)
!4615 = distinct !DILexicalBlock(scope: !4612, file: !750, line: 1143, column: 2)
!4616 = !DILocalVariable(name: "str", scope: !4614, file: !750, line: 1145, type: !108)
!4617 = !DILocalVariable(name: "str_len", scope: !4614, file: !750, line: 1146, type: !181)
!4618 = !DILabel(scope: !4619, name: "calculate_string_length", file: !750, line: 1021)
!4619 = distinct !DILexicalBlock(scope: !4620, file: !750, line: 1020, column: 56)
!4620 = distinct !DILexicalBlock(scope: !4621, file: !750, line: 1020, column: 15)
!4621 = distinct !DILexicalBlock(scope: !4588, file: !750, line: 1014, column: 8)
!4622 = !DILocation(line: 0, scope: !4545)
!4623 = !DILocation(line: 916, column: 2, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4625, file: !750, line: 916, column: 2)
!4625 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 916, column: 2)
!4626 = !DILocation(line: 916, column: 2, scope: !4625)
!4627 = !DILocation(line: 916, column: 2, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4624, file: !750, line: 916, column: 2)
!4629 = !DILocation(line: 919, column: 20, scope: !4545)
!4630 = !DILocation(line: 921, column: 27, scope: !4545)
!4631 = !DILocation(line: 921, column: 21, scope: !4545)
!4632 = !DILocation(line: 926, column: 18, scope: !4545)
!4633 = !DILocation(line: 926, column: 11, scope: !4545)
!4634 = !DILocation(line: 926, column: 34, scope: !4545)
!4635 = !DILocation(line: 931, column: 21, scope: !4545)
!4636 = !DILocation(line: 931, column: 12, scope: !4545)
!4637 = !DILocation(line: 932, column: 11, scope: !4545)
!4638 = !DILocation(line: 932, column: 19, scope: !4545)
!4639 = !DILocation(line: 938, column: 21, scope: !4545)
!4640 = !DILocation(line: 938, column: 12, scope: !4545)
!4641 = !DILocation(line: 939, column: 19, scope: !4545)
!4642 = !DILocation(line: 939, column: 23, scope: !4545)
!4643 = !DILocation(line: 946, column: 14, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 946, column: 6)
!4645 = !DILocation(line: 947, column: 7, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !750, line: 947, column: 7)
!4647 = distinct !DILexicalBlock(scope: !4644, file: !750, line: 946, column: 26)
!4648 = !DILocation(line: 947, column: 7, scope: !4647)
!4649 = !DILocation(line: 948, column: 4, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !750, line: 947, column: 11)
!4651 = !DILocation(line: 949, column: 3, scope: !4650)
!4652 = !DILocation(line: 958, column: 23, scope: !4545)
!4653 = !DILocation(line: 958, column: 14, scope: !4545)
!4654 = !DILocation(line: 958, column: 27, scope: !4545)
!4655 = !DILocation(line: 965, column: 41, scope: !4545)
!4656 = !DILocation(line: 965, column: 20, scope: !4545)
!4657 = !DILocation(line: 966, column: 22, scope: !4545)
!4658 = !DILocation(line: 970, column: 9, scope: !4579)
!4659 = !DILocation(line: 970, column: 6, scope: !4545)
!4660 = !DILocation(line: 972, column: 7, scope: !4578)
!4661 = !DILocation(line: 0, scope: !4575)
!4662 = !DILocation(line: 973, column: 4, scope: !4575)
!4663 = !DILocation(line: 974, column: 46, scope: !4581)
!4664 = !DILocation(line: 974, column: 40, scope: !4581)
!4665 = !DILocation(line: 974, column: 23, scope: !4581)
!4666 = !DILocation(line: 0, scope: !4581)
!4667 = !DILocation(line: 975, column: 15, scope: !4581)
!4668 = !DILocation(line: 978, column: 14, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4581, file: !750, line: 978, column: 9)
!4670 = !DILocation(line: 979, column: 25, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4669, file: !750, line: 978, column: 38)
!4672 = !DILocation(line: 979, column: 19, scope: !4671)
!4673 = !DILocation(line: 979, column: 6, scope: !4671)
!4674 = !DILocation(line: 979, column: 23, scope: !4671)
!4675 = !DILocation(line: 980, column: 5, scope: !4671)
!4676 = !DILocation(line: 981, column: 13, scope: !4581)
!4677 = !DILocation(line: 982, column: 12, scope: !4581)
!4678 = !DILocation(line: 973, column: 34, scope: !4582)
!4679 = !DILocation(line: 973, column: 22, scope: !4582)
!4680 = distinct !{!4680, !4662, !4681}
!4681 = !DILocation(line: 983, column: 4, scope: !4575)
!4682 = !DILocation(line: 985, column: 16, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !750, line: 985, column: 8)
!4684 = distinct !DILexicalBlock(scope: !4577, file: !750, line: 984, column: 10)
!4685 = !DILocation(line: 967, column: 9, scope: !4545)
!4686 = !DILocation(line: 971, column: 11, scope: !4578)
!4687 = !DILocation(line: 0, scope: !4578)
!4688 = !DILocation(line: 0, scope: !4586)
!4689 = !DILocation(line: 995, column: 21, scope: !4589)
!4690 = !DILocation(line: 995, column: 3, scope: !4586)
!4691 = !DILocation(line: 990, column: 34, scope: !4578)
!4692 = !DILocation(line: 990, column: 26, scope: !4578)
!4693 = !DILocation(line: 996, column: 30, scope: !4588)
!4694 = !DILocation(line: 0, scope: !4588)
!4695 = !DILocation(line: 997, column: 30, scope: !4588)
!4696 = !DILocation(line: 997, column: 22, scope: !4588)
!4697 = !DILocation(line: 998, column: 39, scope: !4588)
!4698 = !DILocation(line: 998, column: 22, scope: !4588)
!4699 = !DILocation(line: 999, column: 17, scope: !4588)
!4700 = !DILocation(line: 1002, column: 20, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4588, file: !750, line: 1002, column: 8)
!4702 = !DILocation(line: 996, column: 22, scope: !4588)
!4703 = !DILocation(line: 1002, column: 35, scope: !4701)
!4704 = !DILocation(line: 1002, column: 23, scope: !4701)
!4705 = !DILocation(line: 1002, column: 8, scope: !4588)
!4706 = !DILocation(line: 1003, column: 5, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !750, line: 1003, column: 5)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !750, line: 1003, column: 5)
!4709 = distinct !DILexicalBlock(scope: !4710, file: !750, line: 1003, column: 5)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !750, line: 1003, column: 5)
!4711 = distinct !DILexicalBlock(scope: !4701, file: !750, line: 1002, column: 45)
!4712 = !DILocation(line: 1010, column: 13, scope: !4711)
!4713 = !DILocation(line: 1011, column: 5, scope: !4711)
!4714 = !DILocation(line: 1014, column: 8, scope: !4588)
!4715 = !DILocation(line: 1015, column: 9, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4621, file: !750, line: 1014, column: 15)
!4717 = !DILocation(line: 1018, column: 14, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !750, line: 1017, column: 12)
!4719 = distinct !DILexicalBlock(scope: !4716, file: !750, line: 1015, column: 9)
!4720 = !DILocation(line: 1020, column: 4, scope: !4716)
!4721 = !DILocation(line: 1020, column: 15, scope: !4621)
!4722 = !DILocation(line: 1021, column: 1, scope: !4619)
!4723 = !DILocation(line: 1022, column: 11, scope: !4619)
!4724 = !DILocation(line: 1025, column: 14, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4619, file: !750, line: 1025, column: 9)
!4726 = !DILocation(line: 1026, column: 25, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4725, file: !750, line: 1025, column: 38)
!4728 = !DILocation(line: 1026, column: 19, scope: !4727)
!4729 = !DILocation(line: 1026, column: 6, scope: !4727)
!4730 = !DILocation(line: 1026, column: 23, scope: !4727)
!4731 = !DILocation(line: 1027, column: 5, scope: !4727)
!4732 = !DILocation(line: 1031, column: 21, scope: !4619)
!4733 = !DILocation(line: 1031, column: 13, scope: !4619)
!4734 = !DILocation(line: 1032, column: 4, scope: !4619)
!4735 = !DILocation(line: 995, column: 33, scope: !4589)
!4736 = distinct !{!4736, !4690, !4737}
!4737 = !DILocation(line: 1033, column: 3, scope: !4586)
!4738 = !DILocation(line: 1040, column: 10, scope: !4545)
!4739 = !DILocation(line: 1042, column: 10, scope: !4545)
!4740 = !DILocation(line: 1052, column: 6, scope: !4545)
!4741 = !DILocation(line: 1055, column: 9, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !750, line: 1052, column: 14)
!4743 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 1052, column: 6)
!4744 = !DILocation(line: 1056, column: 2, scope: !4742)
!4745 = !DILocation(line: 1056, column: 21, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4743, file: !750, line: 1056, column: 13)
!4747 = !DILocation(line: 1066, column: 3, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !750, line: 1065, column: 11)
!4749 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 1065, column: 6)
!4750 = !DILocation(line: 1067, column: 2, scope: !4748)
!4751 = !DILocation(line: 1068, column: 10, scope: !4545)
!4752 = !DILocation(line: 0, scope: !4602)
!4753 = !DILocation(line: 1074, column: 20, scope: !4605)
!4754 = !DILocation(line: 1074, column: 2, scope: !4602)
!4755 = !DILocation(line: 1110, column: 24, scope: !4545)
!4756 = !DILocation(line: 1053, column: 12, scope: !4742)
!4757 = !DILocation(line: 1054, column: 12, scope: !4742)
!4758 = !DILocation(line: 1108, column: 30, scope: !4545)
!4759 = !DILocation(line: 1108, column: 40, scope: !4545)
!4760 = !DILocation(line: 1108, column: 38, scope: !4545)
!4761 = !DILocation(line: 1109, column: 31, scope: !4545)
!4762 = !DILocation(line: 1109, column: 24, scope: !4545)
!4763 = !DILocation(line: 1110, column: 31, scope: !4545)
!4764 = !DILocation(line: 1114, column: 31, scope: !4545)
!4765 = !DILocation(line: 1114, column: 48, scope: !4545)
!4766 = !DILocation(line: 1115, column: 13, scope: !4545)
!4767 = !DILocation(line: 1118, column: 7, scope: !4545)
!4768 = !DILocation(line: 1119, column: 9, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 1119, column: 6)
!4770 = !DILocation(line: 1119, column: 6, scope: !4545)
!4771 = !DILocation(line: 1075, column: 29, scope: !4604)
!4772 = !DILocation(line: 1075, column: 21, scope: !4604)
!4773 = !DILocation(line: 0, scope: !4604)
!4774 = !DILocation(line: 1076, column: 29, scope: !4604)
!4775 = !DILocation(line: 1076, column: 21, scope: !4604)
!4776 = !DILocation(line: 1077, column: 38, scope: !4604)
!4777 = !DILocation(line: 1077, column: 21, scope: !4604)
!4778 = !DILocation(line: 1078, column: 16, scope: !4604)
!4779 = !DILocation(line: 1080, column: 19, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4604, file: !750, line: 1080, column: 7)
!4781 = !DILocation(line: 1080, column: 34, scope: !4780)
!4782 = !DILocation(line: 1080, column: 22, scope: !4780)
!4783 = !DILocation(line: 1080, column: 7, scope: !4604)
!4784 = !DILocation(line: 1084, column: 7, scope: !4604)
!4785 = !DILocation(line: 1085, column: 8, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4787, file: !750, line: 1084, column: 14)
!4787 = distinct !DILexicalBlock(scope: !4604, file: !750, line: 1084, column: 7)
!4788 = !DILocation(line: 1086, column: 5, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4790, file: !750, line: 1086, column: 5)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !750, line: 1086, column: 5)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !750, line: 1085, column: 49)
!4792 = distinct !DILexicalBlock(scope: !4786, file: !750, line: 1085, column: 8)
!4793 = !DILocation(line: 1086, column: 5, scope: !4790)
!4794 = !DILocation(line: 1086, column: 5, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4789, file: !750, line: 1086, column: 5)
!4796 = !DILocation(line: 1087, column: 25, scope: !4791)
!4797 = !DILocation(line: 1087, column: 5, scope: !4791)
!4798 = !DILocation(line: 1088, column: 4, scope: !4791)
!4799 = !DILocation(line: 1088, column: 15, scope: !4792)
!4800 = !DILocation(line: 1089, column: 5, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !750, line: 1089, column: 5)
!4802 = distinct !DILexicalBlock(scope: !4803, file: !750, line: 1089, column: 5)
!4803 = distinct !DILexicalBlock(scope: !4804, file: !750, line: 1088, column: 61)
!4804 = distinct !DILexicalBlock(scope: !4792, file: !750, line: 1088, column: 15)
!4805 = !DILocation(line: 1089, column: 5, scope: !4802)
!4806 = !DILocation(line: 1089, column: 5, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4801, file: !750, line: 1089, column: 5)
!4808 = !DILocation(line: 1090, column: 26, scope: !4803)
!4809 = !DILocation(line: 1090, column: 5, scope: !4803)
!4810 = !DILocation(line: 1091, column: 4, scope: !4803)
!4811 = !DILocation(line: 1095, column: 8, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4787, file: !750, line: 1094, column: 10)
!4813 = !DILocation(line: 1096, column: 5, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !750, line: 1096, column: 5)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !750, line: 1096, column: 5)
!4816 = distinct !DILexicalBlock(scope: !4817, file: !750, line: 1095, column: 49)
!4817 = distinct !DILexicalBlock(scope: !4812, file: !750, line: 1095, column: 8)
!4818 = !DILocation(line: 1096, column: 5, scope: !4815)
!4819 = !DILocation(line: 1096, column: 5, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4814, file: !750, line: 1096, column: 5)
!4821 = !DILocation(line: 1097, column: 25, scope: !4816)
!4822 = !DILocation(line: 1097, column: 5, scope: !4816)
!4823 = !DILocation(line: 1098, column: 4, scope: !4816)
!4824 = !DILocation(line: 1099, column: 5, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4826, file: !750, line: 1099, column: 5)
!4826 = distinct !DILexicalBlock(scope: !4827, file: !750, line: 1099, column: 5)
!4827 = distinct !DILexicalBlock(scope: !4817, file: !750, line: 1098, column: 11)
!4828 = !DILocation(line: 1099, column: 5, scope: !4826)
!4829 = !DILocation(line: 1099, column: 5, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4825, file: !750, line: 1099, column: 5)
!4831 = !DILocation(line: 1100, column: 26, scope: !4827)
!4832 = !DILocation(line: 1100, column: 5, scope: !4827)
!4833 = !DILocation(line: 1100, column: 30, scope: !4827)
!4834 = !DILocation(line: 1101, column: 26, scope: !4827)
!4835 = !DILocation(line: 1101, column: 5, scope: !4827)
!4836 = !DILocation(line: 0, scope: !4787)
!4837 = !DILocation(line: 1074, column: 32, scope: !4605)
!4838 = distinct !{!4838, !4754, !4839}
!4839 = !DILocation(line: 1104, column: 2, scope: !4602)
!4840 = !DILocation(line: 1124, column: 13, scope: !4545)
!4841 = !DILocation(line: 1127, column: 10, scope: !4545)
!4842 = !DILocation(line: 1127, column: 7, scope: !4545)
!4843 = !DILocation(line: 1128, column: 9, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 1128, column: 6)
!4845 = !DILocation(line: 1128, column: 6, scope: !4545)
!4846 = !DILocation(line: 1134, column: 27, scope: !4545)
!4847 = !DILocation(line: 1136, column: 7, scope: !4545)
!4848 = !DILocation(line: 1137, column: 9, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4545, file: !750, line: 1137, column: 6)
!4850 = !DILocation(line: 1137, column: 6, scope: !4545)
!4851 = !DILocation(line: 1131, column: 10, scope: !4545)
!4852 = !DILocation(line: 1140, column: 10, scope: !4545)
!4853 = !DILocation(line: 0, scope: !4612)
!4854 = !DILocation(line: 1143, column: 20, scope: !4615)
!4855 = !DILocation(line: 1143, column: 2, scope: !4612)
!4856 = !DILocation(line: 1144, column: 3, scope: !4614)
!4857 = !DILocation(line: 1144, column: 17, scope: !4614)
!4858 = !DILocation(line: 0, scope: !4614)
!4859 = !DILocation(line: 1144, column: 11, scope: !4614)
!4860 = !DILocation(line: 1145, column: 38, scope: !4614)
!4861 = !DILocation(line: 1145, column: 21, scope: !4614)
!4862 = !DILocation(line: 1146, column: 22, scope: !4614)
!4863 = !DILocation(line: 1146, column: 29, scope: !4614)
!4864 = !DILocation(line: 1148, column: 8, scope: !4614)
!4865 = !DILocation(line: 1149, column: 10, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4614, file: !750, line: 1149, column: 7)
!4867 = !DILocation(line: 1149, column: 7, scope: !4614)
!4868 = !DILocation(line: 1154, column: 8, scope: !4614)
!4869 = !DILocation(line: 1155, column: 10, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4614, file: !750, line: 1155, column: 7)
!4871 = !DILocation(line: 1155, column: 7, scope: !4614)
!4872 = !DILocation(line: 1159, column: 2, scope: !4615)
!4873 = !DILocation(line: 1152, column: 11, scope: !4614)
!4874 = !DILocation(line: 1158, column: 11, scope: !4614)
!4875 = !DILocation(line: 1143, column: 33, scope: !4615)
!4876 = distinct !{!4876, !4855, !4877}
!4877 = !DILocation(line: 1159, column: 2, scope: !4612)
!4878 = !DILocation(line: 1162, column: 8, scope: !4545)
!4879 = !DILocation(line: 1164, column: 2, scope: !4545)
!4880 = !DILocation(line: 1165, column: 1, scope: !4545)
!4881 = distinct !DISubprogram(name: "get_package_len", scope: !750, file: !750, line: 196, type: !4882, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4884)
!4882 = !DISubroutineType(types: !4883)
!4883 = !{!156, !102}
!4884 = !{!4885, !4886, !4887, !4888, !4889, !4890, !4891}
!4885 = !DILocalVariable(name: "packaged", arg: 1, scope: !4881, file: !750, line: 196, type: !102)
!4886 = !DILocalVariable(name: "buf", scope: !4881, file: !750, line: 200, type: !550)
!4887 = !DILocalVariable(name: "start", scope: !4881, file: !750, line: 201, type: !550)
!4888 = !DILocalVariable(name: "args_size", scope: !4881, file: !750, line: 202, type: !32)
!4889 = !DILocalVariable(name: "s_nbr", scope: !4881, file: !750, line: 202, type: !32)
!4890 = !DILocalVariable(name: "ros_nbr", scope: !4881, file: !750, line: 202, type: !32)
!4891 = !DILocalVariable(name: "i", scope: !4892, file: !750, line: 215, type: !103)
!4892 = distinct !DILexicalBlock(scope: !4881, file: !750, line: 215, column: 2)
!4893 = !DILocation(line: 0, scope: !4881)
!4894 = !DILocation(line: 198, column: 2, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4896, file: !750, line: 198, column: 2)
!4896 = distinct !DILexicalBlock(scope: !4881, file: !750, line: 198, column: 2)
!4897 = !DILocation(line: 198, column: 2, scope: !4896)
!4898 = !DILocation(line: 198, column: 2, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4895, file: !750, line: 198, column: 2)
!4900 = !DILocation(line: 204, column: 14, scope: !4881)
!4901 = !DILocation(line: 204, column: 21, scope: !4881)
!4902 = !DILocation(line: 205, column: 14, scope: !4881)
!4903 = !DILocation(line: 206, column: 14, scope: !4881)
!4904 = !DILocation(line: 209, column: 6, scope: !4881)
!4905 = !DILocation(line: 212, column: 6, scope: !4881)
!4906 = !DILocation(line: 0, scope: !4892)
!4907 = !DILocation(line: 215, column: 20, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4892, file: !750, line: 215, column: 2)
!4909 = !DILocation(line: 215, column: 2, scope: !4892)
!4910 = !DILocation(line: 220, column: 33, scope: !4881)
!4911 = !DILocation(line: 220, column: 2, scope: !4881)
!4912 = !DILocation(line: 216, column: 6, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4908, file: !750, line: 215, column: 34)
!4914 = !DILocation(line: 217, column: 10, scope: !4913)
!4915 = !DILocation(line: 217, column: 36, scope: !4913)
!4916 = !DILocation(line: 217, column: 7, scope: !4913)
!4917 = !DILocation(line: 215, column: 30, scope: !4908)
!4918 = distinct !{!4918, !4909, !4919}
!4919 = !DILocation(line: 218, column: 2, scope: !4892)
!4920 = distinct !DISubprogram(name: "append_string", scope: !750, file: !750, line: 223, type: !4921, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !736, retainedNodes: !4923)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{!103, !4548, !102, !108, !181}
!4923 = !{!4924, !4925, !4926, !4927}
!4924 = !DILocalVariable(name: "cb", arg: 1, scope: !4920, file: !750, line: 223, type: !4548)
!4925 = !DILocalVariable(name: "ctx", arg: 2, scope: !4920, file: !750, line: 223, type: !102)
!4926 = !DILocalVariable(name: "str", arg: 3, scope: !4920, file: !750, line: 223, type: !108)
!4927 = !DILocalVariable(name: "strl", arg: 4, scope: !4920, file: !750, line: 223, type: !181)
!4928 = !DILocation(line: 0, scope: !4920)
!4929 = !DILocation(line: 225, column: 9, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4920, file: !750, line: 225, column: 6)
!4931 = !DILocation(line: 225, column: 6, scope: !4920)
!4932 = !DILocation(line: 226, column: 14, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4930, file: !750, line: 225, column: 18)
!4934 = !DILocation(line: 226, column: 12, scope: !4933)
!4935 = !DILocation(line: 226, column: 3, scope: !4933)
!4936 = !DILocation(line: 229, column: 14, scope: !4920)
!4937 = !DILocation(line: 229, column: 9, scope: !4920)
!4938 = !DILocation(line: 229, column: 27, scope: !4920)
!4939 = !DILocation(line: 229, column: 39, scope: !4920)
!4940 = !DILocation(line: 230, column: 17, scope: !4920)
!4941 = !DILocation(line: 230, column: 9, scope: !4920)
!4942 = !DILocation(line: 230, column: 2, scope: !4920)
!4943 = !DILocation(line: 231, column: 1, scope: !4920)
!4944 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !762, file: !762, line: 45, type: !764, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !4945)
!4945 = !{!4946}
!4946 = !DILocalVariable(name: "c", arg: 1, scope: !4944, file: !762, line: 45, type: !103)
!4947 = !DILocation(line: 0, scope: !4944)
!4948 = !DILocation(line: 50, column: 2, scope: !4944)
!4949 = distinct !DISubprogram(name: "__printk_hook_install", scope: !762, file: !762, line: 63, type: !4950, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !4952)
!4950 = !DISubroutineType(types: !4951)
!4951 = !{null, !763}
!4952 = !{!4953}
!4953 = !DILocalVariable(name: "fn", arg: 1, scope: !4949, file: !762, line: 63, type: !763)
!4954 = !DILocation(line: 0, scope: !4949)
!4955 = !DILocation(line: 65, column: 12, scope: !4949)
!4956 = !DILocation(line: 66, column: 1, scope: !4949)
!4957 = distinct !DISubprogram(name: "__printk_get_hook", scope: !762, file: !762, line: 76, type: !4958, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !2512)
!4958 = !DISubroutineType(types: !4959)
!4959 = !{!102}
!4960 = !DILocation(line: 78, column: 9, scope: !4957)
!4961 = !DILocation(line: 78, column: 2, scope: !4957)
!4962 = distinct !DISubprogram(name: "vprintk", scope: !762, file: !762, line: 113, type: !4963, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !4971)
!4963 = !DISubroutineType(types: !4964)
!4964 = !{null, !108, !4965}
!4965 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4034, line: 99, baseType: !4966)
!4966 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4034, line: 40, baseType: !4967)
!4967 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !762, baseType: !4968)
!4968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4969)
!4969 = !{!4970}
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4968, file: !762, line: 79, baseType: !102, size: 32)
!4971 = !{!4972, !4973, !4974}
!4972 = !DILocalVariable(name: "fmt", arg: 1, scope: !4962, file: !762, line: 113, type: !108)
!4973 = !DILocalVariable(name: "ap", arg: 2, scope: !4962, file: !762, line: 113, type: !4965)
!4974 = !DILocalVariable(name: "ctx", scope: !4975, file: !762, line: 121, type: !4977)
!4975 = distinct !DILexicalBlock(scope: !4976, file: !762, line: 120, column: 27)
!4976 = distinct !DILexicalBlock(scope: !4962, file: !762, line: 120, column: 6)
!4977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !762, line: 81, size: 32, elements: !4978)
!4978 = !{!4979, !4980}
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4977, file: !762, line: 85, baseType: !32, size: 32)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4977, file: !762, line: 86, baseType: !4981, offset: 32)
!4981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, elements: !3074)
!4982 = !DILocation(line: 0, scope: !4962)
!4983 = !DILocation(line: 148, column: 3, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4976, file: !762, line: 138, column: 9)
!4985 = !DILocation(line: 155, column: 1, scope: !4962)
!4986 = distinct !DISubprogram(name: "char_out", scope: !762, file: !762, line: 107, type: !4987, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !4989)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!103, !103, !102}
!4989 = !{!4990, !4991}
!4990 = !DILocalVariable(name: "c", arg: 1, scope: !4986, file: !762, line: 107, type: !103)
!4991 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4986, file: !762, line: 107, type: !102)
!4992 = !DILocation(line: 0, scope: !4986)
!4993 = !DILocation(line: 110, column: 9, scope: !4986)
!4994 = !DILocation(line: 110, column: 2, scope: !4986)
!4995 = distinct !DISubprogram(name: "cbvprintf", scope: !4066, file: !4066, line: 739, type: !4996, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !4998)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{!103, !4416, !102, !108, !4965}
!4998 = !{!4999, !5000, !5001, !5002}
!4999 = !DILocalVariable(name: "out", arg: 1, scope: !4995, file: !4066, line: 739, type: !4416)
!5000 = !DILocalVariable(name: "ctx", arg: 2, scope: !4995, file: !4066, line: 739, type: !102)
!5001 = !DILocalVariable(name: "format", arg: 3, scope: !4995, file: !4066, line: 739, type: !108)
!5002 = !DILocalVariable(name: "ap", arg: 4, scope: !4995, file: !4066, line: 739, type: !4965)
!5003 = !DILocation(line: 0, scope: !4995)
!5004 = !DILocation(line: 741, column: 9, scope: !4995)
!5005 = !DILocation(line: 741, column: 2, scope: !4995)
!5006 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !762, file: !762, line: 157, type: !5007, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5009)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{null, !160, !156}
!5009 = !{!5010, !5011, !5012}
!5010 = !DILocalVariable(name: "c", arg: 1, scope: !5006, file: !762, line: 157, type: !160)
!5011 = !DILocalVariable(name: "n", arg: 2, scope: !5006, file: !762, line: 157, type: !156)
!5012 = !DILocalVariable(name: "i", scope: !5006, file: !762, line: 159, type: !156)
!5013 = !DILocation(line: 0, scope: !5006)
!5014 = !DILocation(line: 164, column: 16, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5016, file: !762, line: 164, column: 2)
!5016 = distinct !DILexicalBlock(scope: !5006, file: !762, line: 164, column: 2)
!5017 = !DILocation(line: 164, column: 2, scope: !5016)
!5018 = !DILocation(line: 165, column: 3, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5015, file: !762, line: 164, column: 26)
!5020 = !DILocation(line: 165, column: 13, scope: !5019)
!5021 = !DILocation(line: 164, column: 22, scope: !5015)
!5022 = distinct !{!5022, !5017, !5023}
!5023 = !DILocation(line: 166, column: 2, scope: !5016)
!5024 = !DILocation(line: 171, column: 1, scope: !5006)
!5025 = distinct !DISubprogram(name: "printk", scope: !762, file: !762, line: 203, type: !5026, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5028)
!5026 = !DISubroutineType(types: !5027)
!5027 = !{null, !108, null}
!5028 = !{!5029, !5030}
!5029 = !DILocalVariable(name: "fmt", arg: 1, scope: !5025, file: !762, line: 203, type: !108)
!5030 = !DILocalVariable(name: "ap", scope: !5025, file: !762, line: 205, type: !4965)
!5031 = !DILocation(line: 0, scope: !5025)
!5032 = !DILocation(line: 205, column: 2, scope: !5025)
!5033 = !DILocation(line: 205, column: 10, scope: !5025)
!5034 = !DILocation(line: 207, column: 2, scope: !5025)
!5035 = !DILocation(line: 209, column: 2, scope: !5025)
!5036 = !DILocation(line: 211, column: 2, scope: !5025)
!5037 = !DILocation(line: 212, column: 1, scope: !5025)
!5038 = distinct !DISubprogram(name: "snprintk", scope: !762, file: !762, line: 239, type: !5039, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5041)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!103, !160, !156, !108, null}
!5041 = !{!5042, !5043, !5044, !5045, !5046}
!5042 = !DILocalVariable(name: "str", arg: 1, scope: !5038, file: !762, line: 239, type: !160)
!5043 = !DILocalVariable(name: "size", arg: 2, scope: !5038, file: !762, line: 239, type: !156)
!5044 = !DILocalVariable(name: "fmt", arg: 3, scope: !5038, file: !762, line: 239, type: !108)
!5045 = !DILocalVariable(name: "ap", scope: !5038, file: !762, line: 241, type: !4965)
!5046 = !DILocalVariable(name: "ret", scope: !5038, file: !762, line: 242, type: !103)
!5047 = !DILocation(line: 0, scope: !5038)
!5048 = !DILocation(line: 241, column: 2, scope: !5038)
!5049 = !DILocation(line: 241, column: 10, scope: !5038)
!5050 = !DILocation(line: 244, column: 2, scope: !5038)
!5051 = !DILocation(line: 245, column: 8, scope: !5038)
!5052 = !DILocation(line: 246, column: 2, scope: !5038)
!5053 = !DILocation(line: 249, column: 1, scope: !5038)
!5054 = !DILocation(line: 248, column: 2, scope: !5038)
!5055 = distinct !DISubprogram(name: "vsnprintk", scope: !762, file: !762, line: 251, type: !5056, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5058)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{!103, !160, !156, !108, !4965}
!5058 = !{!5059, !5060, !5061, !5062, !5063}
!5059 = !DILocalVariable(name: "str", arg: 1, scope: !5055, file: !762, line: 251, type: !160)
!5060 = !DILocalVariable(name: "size", arg: 2, scope: !5055, file: !762, line: 251, type: !156)
!5061 = !DILocalVariable(name: "fmt", arg: 3, scope: !5055, file: !762, line: 251, type: !108)
!5062 = !DILocalVariable(name: "ap", arg: 4, scope: !5055, file: !762, line: 251, type: !4965)
!5063 = !DILocalVariable(name: "ctx", scope: !5055, file: !762, line: 253, type: !5064)
!5064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !762, line: 217, size: 96, elements: !5065)
!5065 = !{!5066, !5067, !5068}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5064, file: !762, line: 218, baseType: !160, size: 32)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5064, file: !762, line: 219, baseType: !103, size: 32, offset: 32)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5064, file: !762, line: 220, baseType: !103, size: 32, offset: 64)
!5069 = !DILocation(line: 0, scope: !5055)
!5070 = !DILocation(line: 253, column: 2, scope: !5055)
!5071 = !DILocation(line: 253, column: 21, scope: !5055)
!5072 = !DILocation(line: 253, column: 27, scope: !5055)
!5073 = !DILocation(line: 255, column: 2, scope: !5055)
!5074 = !DILocation(line: 257, column: 10, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5055, file: !762, line: 257, column: 6)
!5076 = !DILocation(line: 257, column: 22, scope: !5075)
!5077 = !DILocation(line: 257, column: 16, scope: !5075)
!5078 = !DILocation(line: 257, column: 6, scope: !5055)
!5079 = !DILocation(line: 258, column: 3, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5075, file: !762, line: 257, column: 27)
!5081 = !DILocation(line: 258, column: 18, scope: !5080)
!5082 = !DILocation(line: 259, column: 2, scope: !5080)
!5083 = !DILocation(line: 262, column: 1, scope: !5055)
!5084 = !DILocation(line: 261, column: 2, scope: !5055)
!5085 = distinct !DISubprogram(name: "str_out", scope: !762, file: !762, line: 223, type: !5086, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !759, retainedNodes: !5089)
!5086 = !DISubroutineType(types: !5087)
!5087 = !{!103, !103, !5088}
!5088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 32)
!5089 = !{!5090, !5091}
!5090 = !DILocalVariable(name: "c", arg: 1, scope: !5085, file: !762, line: 223, type: !103)
!5091 = !DILocalVariable(name: "ctx", arg: 2, scope: !5085, file: !762, line: 223, type: !5088)
!5092 = !DILocation(line: 0, scope: !5085)
!5093 = !DILocation(line: 225, column: 11, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5085, file: !762, line: 225, column: 6)
!5095 = !DILocation(line: 225, column: 15, scope: !5094)
!5096 = !DILocation(line: 0, scope: !5094)
!5097 = !DILocation(line: 225, column: 23, scope: !5094)
!5098 = !DILocation(line: 225, column: 45, scope: !5094)
!5099 = !DILocation(line: 225, column: 37, scope: !5094)
!5100 = !DILocation(line: 225, column: 6, scope: !5085)
!5101 = !DILocation(line: 226, column: 8, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5094, file: !762, line: 225, column: 50)
!5103 = !DILocation(line: 226, column: 13, scope: !5102)
!5104 = !DILocation(line: 227, column: 3, scope: !5102)
!5105 = !DILocation(line: 230, column: 29, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5085, file: !762, line: 230, column: 6)
!5107 = !DILocation(line: 230, column: 17, scope: !5106)
!5108 = !DILocation(line: 230, column: 6, scope: !5085)
!5109 = !DILocation(line: 231, column: 22, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5106, file: !762, line: 230, column: 34)
!5111 = !DILocation(line: 231, column: 3, scope: !5110)
!5112 = !DILocation(line: 231, column: 26, scope: !5110)
!5113 = !DILocation(line: 232, column: 2, scope: !5110)
!5114 = !DILocation(line: 233, column: 28, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !5106, file: !762, line: 232, column: 9)
!5116 = !DILocation(line: 233, column: 22, scope: !5115)
!5117 = !DILocation(line: 233, column: 3, scope: !5115)
!5118 = !DILocation(line: 233, column: 26, scope: !5115)
!5119 = !DILocation(line: 237, column: 1, scope: !5085)
!5120 = distinct !DISubprogram(name: "z_thread_entry", scope: !5121, file: !5121, line: 30, type: !5122, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !5124)
!5121 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5122 = !DISubroutineType(types: !5123)
!5123 = !{null, !310, !102, !102, !102}
!5124 = !{!5125, !5126, !5127, !5128}
!5125 = !DILocalVariable(name: "entry", arg: 1, scope: !5120, file: !5121, line: 30, type: !310)
!5126 = !DILocalVariable(name: "p1", arg: 2, scope: !5120, file: !5121, line: 31, type: !102)
!5127 = !DILocalVariable(name: "p2", arg: 3, scope: !5120, file: !5121, line: 31, type: !102)
!5128 = !DILocalVariable(name: "p3", arg: 4, scope: !5120, file: !5121, line: 31, type: !102)
!5129 = !DILocation(line: 0, scope: !5120)
!5130 = !DILocation(line: 36, column: 2, scope: !5120)
!5131 = !DILocation(line: 38, column: 17, scope: !5120)
!5132 = !DILocation(line: 38, column: 2, scope: !5120)
!5133 = !DILocation(line: 45, column: 2, scope: !5120)
!5134 = distinct !DISubprogram(name: "k_current_get", scope: !127, file: !127, line: 530, type: !5135, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !2512)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{!5137}
!5137 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !5138)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 32)
!5139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !5140)
!5140 = !{!5141, !5199, !5211, !5212, !5213, !5214, !5220, !5235}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5139, file: !199, line: 247, baseType: !5142, size: 384)
!5142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !5143)
!5143 = !{!5144, !5168, !5175, !5176, !5177, !5186, !5187, !5188}
!5144 = !DIDerivedType(tag: DW_TAG_member, scope: !5142, file: !199, line: 60, baseType: !5145, size: 64)
!5145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5142, file: !199, line: 60, size: 64, elements: !5146)
!5146 = !{!5147, !5162}
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5145, file: !199, line: 61, baseType: !5148, size: 64)
!5148 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !5149)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !5150)
!5150 = !{!5151, !5157}
!5151 = !DIDerivedType(tag: DW_TAG_member, scope: !5149, file: !136, line: 38, baseType: !5152, size: 32)
!5152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5149, file: !136, line: 38, size: 32, elements: !5153)
!5153 = !{!5154, !5156}
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5152, file: !136, line: 39, baseType: !5155, size: 32)
!5155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 32)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5152, file: !136, line: 40, baseType: !5155, size: 32)
!5157 = !DIDerivedType(tag: DW_TAG_member, scope: !5149, file: !136, line: 42, baseType: !5158, size: 32, offset: 32)
!5158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5149, file: !136, line: 42, size: 32, elements: !5159)
!5159 = !{!5160, !5161}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5158, file: !136, line: 43, baseType: !5155, size: 32)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5158, file: !136, line: 44, baseType: !5155, size: 32)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5145, file: !199, line: 62, baseType: !5163, size: 64)
!5163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !5164)
!5164 = !{!5165}
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5163, file: !211, line: 50, baseType: !5166, size: 64)
!5166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5167, size: 64, elements: !216)
!5167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5163, size: 32)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5142, file: !199, line: 68, baseType: !5169, size: 32, offset: 64)
!5169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5170, size: 32)
!5170 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !5171)
!5171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !5172)
!5172 = !{!5173}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5171, file: !131, line: 232, baseType: !5174, size: 64)
!5174 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !5149)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5142, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5142, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!5177 = !DIDerivedType(tag: DW_TAG_member, scope: !5142, file: !199, line: 90, baseType: !5178, size: 16, offset: 112)
!5178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5142, file: !199, line: 90, size: 16, elements: !5179)
!5179 = !{!5180, !5185}
!5180 = !DIDerivedType(tag: DW_TAG_member, scope: !5178, file: !199, line: 91, baseType: !5181, size: 16)
!5181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5178, file: !199, line: 91, size: 16, elements: !5182)
!5182 = !{!5183, !5184}
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5181, file: !199, line: 96, baseType: !229, size: 8)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5181, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5178, file: !199, line: 100, baseType: !181, size: 16)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5142, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5142, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5142, file: !199, line: 131, baseType: !5189, size: 192, offset: 192)
!5189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !5190)
!5190 = !{!5191, !5192, !5198}
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5189, file: !131, line: 245, baseType: !5148, size: 64)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5189, file: !131, line: 246, baseType: !5193, size: 32, offset: 64)
!5193 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !5194)
!5194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5195, size: 32)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{null, !5197}
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5189, size: 32)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5189, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5139, file: !199, line: 250, baseType: !5200, size: 288, offset: 384)
!5200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !5201)
!5201 = !{!5202, !5203, !5204, !5205, !5206, !5207, !5208, !5209, !5210}
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5200, file: !248, line: 26, baseType: !111, size: 32)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5200, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5200, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5200, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5200, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5200, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5200, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5200, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5200, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5139, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5139, file: !199, line: 256, baseType: !5170, size: 64, offset: 704)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5139, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5139, file: !199, line: 300, baseType: !5215, size: 96, offset: 800)
!5215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !5216)
!5216 = !{!5217, !5218, !5219}
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5215, file: !199, line: 153, baseType: !22, size: 32)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5215, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5215, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5139, file: !199, line: 325, baseType: !5221, size: 32, offset: 896)
!5221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5222, size: 32)
!5222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !5223)
!5223 = !{!5224, !5230, !5231}
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5222, file: !127, line: 5074, baseType: !5225, size: 96)
!5225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !5226)
!5226 = !{!5227, !5228, !5229}
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5225, file: !274, line: 57, baseType: !277, size: 32)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5225, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5225, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5222, file: !127, line: 5075, baseType: !5170, size: 64, offset: 96)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5222, file: !127, line: 5076, baseType: !5232, size: 32, offset: 160)
!5232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !5233)
!5233 = !{!5234}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5232, file: !152, line: 52, baseType: !22, size: 32)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5139, file: !199, line: 343, baseType: !5236, size: 64, offset: 928)
!5236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !5237)
!5237 = !{!5238, !5239}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5236, file: !248, line: 63, baseType: !111, size: 32)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5236, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!5240 = !DILocation(line: 535, column: 9, scope: !5134)
!5241 = !DILocation(line: 535, column: 2, scope: !5134)
!5242 = distinct !DISubprogram(name: "k_thread_abort", scope: !5243, file: !5243, line: 188, type: !5244, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !5246)
!5243 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!5244 = !DISubroutineType(types: !5245)
!5245 = !{null, !5137}
!5246 = !{!5247}
!5247 = !DILocalVariable(name: "thread", arg: 1, scope: !5242, file: !5243, line: 188, type: !5137)
!5248 = !DILocation(line: 0, scope: !5242)
!5249 = !DILocation(line: 197, column: 2, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5242, file: !5243, line: 197, column: 2)
!5251 = !{i64 2152220748}
!5252 = !DILocation(line: 198, column: 2, scope: !5242)
!5253 = !DILocation(line: 199, column: 1, scope: !5242)
!5254 = distinct !DISubprogram(name: "z_current_get", scope: !5243, file: !5243, line: 173, type: !5135, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3042, retainedNodes: !2512)
!5255 = !DILocation(line: 180, column: 2, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5254, file: !5243, line: 180, column: 2)
!5257 = !{i64 2152220680}
!5258 = !DILocation(line: 181, column: 9, scope: !5254)
!5259 = !DILocation(line: 181, column: 2, scope: !5254)
!5260 = distinct !DISubprogram(name: "sys_heap_free", scope: !5261, file: !5261, line: 163, type: !5262, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5270)
!5261 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5262 = !DISubroutineType(types: !5263)
!5263 = !{null, !5264, !102}
!5264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5265, size: 32)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !5266)
!5266 = !{!5267, !5268, !5269}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5265, file: !274, line: 57, baseType: !3061, size: 32)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5265, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5265, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!5270 = !{!5271, !5272, !5273, !5274}
!5271 = !DILocalVariable(name: "heap", arg: 1, scope: !5260, file: !5261, line: 163, type: !5264)
!5272 = !DILocalVariable(name: "mem", arg: 2, scope: !5260, file: !5261, line: 163, type: !102)
!5273 = !DILocalVariable(name: "h", scope: !5260, file: !5261, line: 168, type: !3061)
!5274 = !DILocalVariable(name: "c", scope: !5260, file: !5261, line: 169, type: !3066)
!5275 = !DILocation(line: 0, scope: !5260)
!5276 = !DILocation(line: 165, column: 10, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5260, file: !5261, line: 165, column: 6)
!5278 = !DILocation(line: 165, column: 6, scope: !5260)
!5279 = !DILocation(line: 168, column: 27, scope: !5260)
!5280 = !DILocation(line: 169, column: 16, scope: !5260)
!5281 = !{i32 0, i32 536870912}
!5282 = !DILocation(line: 175, column: 2, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5284, file: !5261, line: 175, column: 2)
!5284 = distinct !DILexicalBlock(scope: !5260, file: !5261, line: 175, column: 2)
!5285 = !DILocation(line: 175, column: 2, scope: !5284)
!5286 = !DILocation(line: 175, column: 2, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5283, file: !5261, line: 175, column: 2)
!5288 = !DILocation(line: 183, column: 2, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5290, file: !5261, line: 183, column: 2)
!5290 = distinct !DILexicalBlock(scope: !5260, file: !5261, line: 183, column: 2)
!5291 = !DILocation(line: 183, column: 2, scope: !5290)
!5292 = !DILocation(line: 183, column: 2, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5289, file: !5261, line: 183, column: 2)
!5294 = !DILocation(line: 187, column: 2, scope: !5260)
!5295 = !DILocation(line: 197, column: 2, scope: !5260)
!5296 = !DILocation(line: 198, column: 1, scope: !5260)
!5297 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !5261, file: !5261, line: 157, type: !5298, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5300)
!5298 = !DISubroutineType(types: !5299)
!5299 = !{!3066, !3061, !102}
!5300 = !{!5301, !5302, !5303, !5304}
!5301 = !DILocalVariable(name: "h", arg: 1, scope: !5297, file: !5261, line: 157, type: !3061)
!5302 = !DILocalVariable(name: "p", arg: 2, scope: !5297, file: !5261, line: 157, type: !102)
!5303 = !DILocalVariable(name: "mem", scope: !5297, file: !5261, line: 159, type: !550)
!5304 = !DILocalVariable(name: "base", scope: !5297, file: !5261, line: 159, type: !550)
!5305 = !DILocation(line: 0, scope: !5297)
!5306 = !DILocation(line: 159, column: 39, scope: !5297)
!5307 = !DILocation(line: 160, column: 14, scope: !5297)
!5308 = !DILocation(line: 160, column: 38, scope: !5297)
!5309 = !DILocation(line: 160, column: 46, scope: !5297)
!5310 = !DILocation(line: 160, column: 2, scope: !5297)
!5311 = distinct !DISubprogram(name: "chunk_used", scope: !3048, file: !3048, line: 137, type: !5312, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5314)
!5312 = !DISubroutineType(types: !5313)
!5313 = !{!122, !3061, !3066}
!5314 = !{!5315, !5316}
!5315 = !DILocalVariable(name: "h", arg: 1, scope: !5311, file: !3048, line: 137, type: !3061)
!5316 = !DILocalVariable(name: "c", arg: 2, scope: !5311, file: !3048, line: 137, type: !3066)
!5317 = !DILocation(line: 0, scope: !5311)
!5318 = !DILocation(line: 139, column: 9, scope: !5311)
!5319 = !DILocation(line: 139, column: 42, scope: !5311)
!5320 = !DILocation(line: 139, column: 2, scope: !5311)
!5321 = distinct !DISubprogram(name: "right_chunk", scope: !3048, file: !3048, line: 204, type: !5322, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5324)
!5322 = !DISubroutineType(types: !5323)
!5323 = !{!3066, !3061, !3066}
!5324 = !{!5325, !5326}
!5325 = !DILocalVariable(name: "h", arg: 1, scope: !5321, file: !3048, line: 204, type: !3061)
!5326 = !DILocalVariable(name: "c", arg: 2, scope: !5321, file: !3048, line: 204, type: !3066)
!5327 = !DILocation(line: 0, scope: !5321)
!5328 = !DILocation(line: 206, column: 13, scope: !5321)
!5329 = !DILocation(line: 206, column: 11, scope: !5321)
!5330 = !DILocation(line: 206, column: 2, scope: !5321)
!5331 = distinct !DISubprogram(name: "left_chunk", scope: !3048, file: !3048, line: 199, type: !5322, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5332)
!5332 = !{!5333, !5334}
!5333 = !DILocalVariable(name: "h", arg: 1, scope: !5331, file: !3048, line: 199, type: !3061)
!5334 = !DILocalVariable(name: "c", arg: 2, scope: !5331, file: !3048, line: 199, type: !3066)
!5335 = !DILocation(line: 0, scope: !5331)
!5336 = !DILocation(line: 201, column: 13, scope: !5331)
!5337 = !DILocation(line: 201, column: 11, scope: !5331)
!5338 = !DILocation(line: 201, column: 2, scope: !5331)
!5339 = distinct !DISubprogram(name: "set_chunk_used", scope: !3048, file: !3048, line: 147, type: !5340, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5342)
!5340 = !DISubroutineType(types: !5341)
!5341 = !{null, !3061, !3066, !122}
!5342 = !{!5343, !5344, !5345, !5346, !5347}
!5343 = !DILocalVariable(name: "h", arg: 1, scope: !5339, file: !3048, line: 147, type: !3061)
!5344 = !DILocalVariable(name: "c", arg: 2, scope: !5339, file: !3048, line: 147, type: !3066)
!5345 = !DILocalVariable(name: "used", arg: 3, scope: !5339, file: !3048, line: 147, type: !122)
!5346 = !DILocalVariable(name: "buf", scope: !5339, file: !3048, line: 149, type: !3055)
!5347 = !DILocalVariable(name: "cmem", scope: !5339, file: !3048, line: 150, type: !102)
!5348 = !DILocation(line: 0, scope: !5339)
!5349 = !DILocation(line: 149, column: 22, scope: !5339)
!5350 = !DILocation(line: 0, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5352, file: !3048, line: 159, column: 7)
!5352 = distinct !DILexicalBlock(scope: !5353, file: !3048, line: 158, column: 9)
!5353 = distinct !DILexicalBlock(scope: !5339, file: !3048, line: 152, column: 6)
!5354 = !DILocation(line: 159, column: 7, scope: !5352)
!5355 = !DILocation(line: 165, column: 1, scope: !5339)
!5356 = distinct !DISubprogram(name: "free_chunk", scope: !5261, file: !5261, line: 133, type: !5357, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5359)
!5357 = !DISubroutineType(types: !5358)
!5358 = !{null, !3061, !3066}
!5359 = !{!5360, !5361}
!5360 = !DILocalVariable(name: "h", arg: 1, scope: !5356, file: !5261, line: 133, type: !3061)
!5361 = !DILocalVariable(name: "c", arg: 2, scope: !5356, file: !5261, line: 133, type: !3066)
!5362 = !DILocation(line: 0, scope: !5356)
!5363 = !DILocation(line: 136, column: 21, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5356, file: !5261, line: 136, column: 6)
!5365 = !DILocation(line: 136, column: 7, scope: !5364)
!5366 = !DILocation(line: 136, column: 6, scope: !5356)
!5367 = !DILocation(line: 137, column: 3, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5364, file: !5261, line: 136, column: 41)
!5369 = !DILocation(line: 138, column: 22, scope: !5368)
!5370 = !DILocation(line: 138, column: 3, scope: !5368)
!5371 = !DILocation(line: 139, column: 2, scope: !5368)
!5372 = !DILocation(line: 142, column: 21, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5356, file: !5261, line: 142, column: 6)
!5374 = !DILocation(line: 142, column: 7, scope: !5373)
!5375 = !DILocation(line: 142, column: 6, scope: !5356)
!5376 = !DILocation(line: 143, column: 3, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5373, file: !5261, line: 142, column: 40)
!5378 = !DILocation(line: 144, column: 19, scope: !5377)
!5379 = !DILocation(line: 144, column: 3, scope: !5377)
!5380 = !DILocation(line: 145, column: 7, scope: !5377)
!5381 = !DILocation(line: 146, column: 2, scope: !5377)
!5382 = !DILocation(line: 148, column: 2, scope: !5356)
!5383 = !DILocation(line: 149, column: 1, scope: !5356)
!5384 = distinct !DISubprogram(name: "free_list_remove", scope: !5261, file: !5261, line: 60, type: !5357, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5385)
!5385 = !{!5386, !5387, !5388}
!5386 = !DILocalVariable(name: "h", arg: 1, scope: !5384, file: !5261, line: 60, type: !3061)
!5387 = !DILocalVariable(name: "c", arg: 2, scope: !5384, file: !5261, line: 60, type: !3066)
!5388 = !DILocalVariable(name: "bidx", scope: !5389, file: !5261, line: 63, type: !103)
!5389 = distinct !DILexicalBlock(scope: !5390, file: !5261, line: 62, column: 31)
!5390 = distinct !DILexicalBlock(scope: !5384, file: !5261, line: 62, column: 6)
!5391 = !DILocation(line: 0, scope: !5384)
!5392 = !DILocation(line: 63, column: 28, scope: !5389)
!5393 = !{i32 0, i32 32768}
!5394 = !DILocation(line: 63, column: 14, scope: !5389)
!5395 = !DILocation(line: 0, scope: !5389)
!5396 = !DILocation(line: 64, column: 3, scope: !5389)
!5397 = !DILocation(line: 66, column: 1, scope: !5384)
!5398 = distinct !DISubprogram(name: "merge_chunks", scope: !5261, file: !5261, line: 125, type: !5399, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5401)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{null, !3061, !3066, !3066}
!5401 = !{!5402, !5403, !5404, !5405}
!5402 = !DILocalVariable(name: "h", arg: 1, scope: !5398, file: !5261, line: 125, type: !3061)
!5403 = !DILocalVariable(name: "lc", arg: 2, scope: !5398, file: !5261, line: 125, type: !3066)
!5404 = !DILocalVariable(name: "rc", arg: 3, scope: !5398, file: !5261, line: 125, type: !3066)
!5405 = !DILocalVariable(name: "newsz", scope: !5398, file: !5261, line: 127, type: !5406)
!5406 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !3048, line: 62, baseType: !111)
!5407 = !DILocation(line: 0, scope: !5398)
!5408 = !DILocation(line: 127, column: 20, scope: !5398)
!5409 = !DILocation(line: 127, column: 40, scope: !5398)
!5410 = !DILocation(line: 127, column: 38, scope: !5398)
!5411 = !DILocation(line: 129, column: 2, scope: !5398)
!5412 = !DILocation(line: 130, column: 25, scope: !5398)
!5413 = !DILocation(line: 130, column: 2, scope: !5398)
!5414 = !DILocation(line: 131, column: 1, scope: !5398)
!5415 = distinct !DISubprogram(name: "free_list_add", scope: !5261, file: !5261, line: 98, type: !5357, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5416)
!5416 = !{!5417, !5418, !5419}
!5417 = !DILocalVariable(name: "h", arg: 1, scope: !5415, file: !5261, line: 98, type: !3061)
!5418 = !DILocalVariable(name: "c", arg: 2, scope: !5415, file: !5261, line: 98, type: !3066)
!5419 = !DILocalVariable(name: "bidx", scope: !5420, file: !5261, line: 101, type: !103)
!5420 = distinct !DILexicalBlock(scope: !5421, file: !5261, line: 100, column: 31)
!5421 = distinct !DILexicalBlock(scope: !5415, file: !5261, line: 100, column: 6)
!5422 = !DILocation(line: 0, scope: !5415)
!5423 = !DILocation(line: 101, column: 28, scope: !5420)
!5424 = !DILocation(line: 101, column: 14, scope: !5420)
!5425 = !DILocation(line: 0, scope: !5420)
!5426 = !DILocation(line: 102, column: 3, scope: !5420)
!5427 = !DILocation(line: 104, column: 1, scope: !5415)
!5428 = distinct !DISubprogram(name: "chunk_size", scope: !3048, file: !3048, line: 142, type: !5429, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5431)
!5429 = !DISubroutineType(types: !5430)
!5430 = !{!5406, !3061, !3066}
!5431 = !{!5432, !5433}
!5432 = !DILocalVariable(name: "h", arg: 1, scope: !5428, file: !3048, line: 142, type: !3061)
!5433 = !DILocalVariable(name: "c", arg: 2, scope: !5428, file: !3048, line: 142, type: !3066)
!5434 = !DILocation(line: 0, scope: !5428)
!5435 = !DILocation(line: 144, column: 9, scope: !5428)
!5436 = !DILocation(line: 144, column: 42, scope: !5428)
!5437 = !DILocation(line: 144, column: 2, scope: !5428)
!5438 = distinct !DISubprogram(name: "bucket_idx", scope: !3048, file: !3048, line: 250, type: !5439, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5441)
!5439 = !DISubroutineType(types: !5440)
!5440 = !{!103, !3061, !5406}
!5441 = !{!5442, !5443, !5444}
!5442 = !DILocalVariable(name: "h", arg: 1, scope: !5438, file: !3048, line: 250, type: !3061)
!5443 = !DILocalVariable(name: "sz", arg: 2, scope: !5438, file: !3048, line: 250, type: !5406)
!5444 = !DILocalVariable(name: "usable_sz", scope: !5438, file: !3048, line: 252, type: !32)
!5445 = !DILocation(line: 0, scope: !5438)
!5446 = !DILocation(line: 252, column: 32, scope: !5438)
!5447 = !DILocation(line: 252, column: 30, scope: !5438)
!5448 = !DILocation(line: 252, column: 50, scope: !5438)
!5449 = !DILocation(line: 253, column: 14, scope: !5438)
!5450 = !{i32 0, i32 33}
!5451 = !DILocation(line: 253, column: 12, scope: !5438)
!5452 = !DILocation(line: 253, column: 2, scope: !5438)
!5453 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !5261, file: !5261, line: 68, type: !5454, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5456)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{null, !3061, !3066, !103}
!5456 = !{!5457, !5458, !5459, !5460, !5462, !5465}
!5457 = !DILocalVariable(name: "h", arg: 1, scope: !5453, file: !5261, line: 68, type: !3061)
!5458 = !DILocalVariable(name: "c", arg: 2, scope: !5453, file: !5261, line: 68, type: !3066)
!5459 = !DILocalVariable(name: "bidx", arg: 3, scope: !5453, file: !5261, line: 68, type: !103)
!5460 = !DILocalVariable(name: "b", scope: !5453, file: !5261, line: 70, type: !5461)
!5461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 32)
!5462 = !DILocalVariable(name: "second", scope: !5463, file: !5261, line: 84, type: !3066)
!5463 = distinct !DILexicalBlock(scope: !5464, file: !5261, line: 80, column: 9)
!5464 = distinct !DILexicalBlock(scope: !5453, file: !5261, line: 72, column: 6)
!5465 = !DILocalVariable(name: "first", scope: !5463, file: !5261, line: 85, type: !3066)
!5466 = !DILocation(line: 0, scope: !5453)
!5467 = !DILocation(line: 72, column: 9, scope: !5464)
!5468 = !DILocation(line: 72, column: 14, scope: !5464)
!5469 = !DILocation(line: 72, column: 6, scope: !5453)
!5470 = !DILocation(line: 76, column: 23, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5464, file: !5261, line: 72, column: 21)
!5472 = !DILocation(line: 76, column: 6, scope: !5471)
!5473 = !DILocation(line: 76, column: 20, scope: !5471)
!5474 = !DILocation(line: 77, column: 11, scope: !5471)
!5475 = !DILocation(line: 78, column: 3, scope: !5471)
!5476 = !DILocation(line: 79, column: 3, scope: !5471)
!5477 = !DILocation(line: 80, column: 2, scope: !5471)
!5478 = !DILocation(line: 0, scope: !5463)
!5479 = !DILocation(line: 85, column: 21, scope: !5463)
!5480 = !{i32 0, i32 65536}
!5481 = !DILocation(line: 87, column: 3, scope: !5463)
!5482 = !DILocation(line: 88, column: 3, scope: !5463)
!5483 = !DILocation(line: 89, column: 3, scope: !5463)
!5484 = !DILocation(line: 90, column: 3, scope: !5463)
!5485 = !DILocation(line: 96, column: 1, scope: !5453)
!5486 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !3048, file: !3048, line: 187, type: !5399, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5487)
!5487 = !{!5488, !5489, !5490}
!5488 = !DILocalVariable(name: "h", arg: 1, scope: !5486, file: !3048, line: 187, type: !3061)
!5489 = !DILocalVariable(name: "c", arg: 2, scope: !5486, file: !3048, line: 187, type: !3066)
!5490 = !DILocalVariable(name: "prev", arg: 3, scope: !5486, file: !3048, line: 188, type: !3066)
!5491 = !DILocation(line: 0, scope: !5486)
!5492 = !DILocation(line: 190, column: 2, scope: !5486)
!5493 = !DILocation(line: 191, column: 1, scope: !5486)
!5494 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !3048, file: !3048, line: 193, type: !5399, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5495)
!5495 = !{!5496, !5497, !5498}
!5496 = !DILocalVariable(name: "h", arg: 1, scope: !5494, file: !3048, line: 193, type: !3061)
!5497 = !DILocalVariable(name: "c", arg: 2, scope: !5494, file: !3048, line: 193, type: !3066)
!5498 = !DILocalVariable(name: "next", arg: 3, scope: !5494, file: !3048, line: 194, type: !3066)
!5499 = !DILocation(line: 0, scope: !5494)
!5500 = !DILocation(line: 196, column: 2, scope: !5494)
!5501 = !DILocation(line: 197, column: 1, scope: !5494)
!5502 = distinct !DISubprogram(name: "prev_free_chunk", scope: !3048, file: !3048, line: 177, type: !5322, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5503)
!5503 = !{!5504, !5505}
!5504 = !DILocalVariable(name: "h", arg: 1, scope: !5502, file: !3048, line: 177, type: !3061)
!5505 = !DILocalVariable(name: "c", arg: 2, scope: !5502, file: !3048, line: 177, type: !3066)
!5506 = !DILocation(line: 0, scope: !5502)
!5507 = !DILocation(line: 179, column: 9, scope: !5502)
!5508 = !DILocation(line: 179, column: 2, scope: !5502)
!5509 = distinct !DISubprogram(name: "chunk_field", scope: !3048, file: !3048, line: 107, type: !5510, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5512)
!5510 = !DISubroutineType(types: !5511)
!5511 = !{!3066, !3061, !3066, !3047}
!5512 = !{!5513, !5514, !5515, !5516, !5517}
!5513 = !DILocalVariable(name: "h", arg: 1, scope: !5509, file: !3048, line: 107, type: !3061)
!5514 = !DILocalVariable(name: "c", arg: 2, scope: !5509, file: !3048, line: 107, type: !3066)
!5515 = !DILocalVariable(name: "f", arg: 3, scope: !5509, file: !3048, line: 108, type: !3047)
!5516 = !DILocalVariable(name: "buf", scope: !5509, file: !3048, line: 110, type: !3055)
!5517 = !DILocalVariable(name: "cmem", scope: !5509, file: !3048, line: 111, type: !102)
!5518 = !DILocation(line: 0, scope: !5509)
!5519 = !DILocation(line: 110, column: 22, scope: !5509)
!5520 = !DILocation(line: 111, column: 15, scope: !5509)
!5521 = !DILocation(line: 116, column: 11, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5523, file: !3048, line: 115, column: 9)
!5523 = distinct !DILexicalBlock(scope: !5509, file: !3048, line: 113, column: 6)
!5524 = !DILocation(line: 116, column: 10, scope: !5522)
!5525 = !DILocation(line: 118, column: 1, scope: !5509)
!5526 = distinct !DISubprogram(name: "chunk_buf", scope: !3048, file: !3048, line: 101, type: !5527, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5529)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{!3055, !3061}
!5529 = !{!5530}
!5530 = !DILocalVariable(name: "h", arg: 1, scope: !5526, file: !3048, line: 101, type: !3061)
!5531 = !DILocation(line: 0, scope: !5526)
!5532 = !DILocation(line: 104, column: 9, scope: !5526)
!5533 = !DILocation(line: 104, column: 2, scope: !5526)
!5534 = distinct !DISubprogram(name: "chunk_set", scope: !3048, file: !3048, line: 120, type: !5535, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5537)
!5535 = !DISubroutineType(types: !5536)
!5536 = !{null, !3061, !3066, !3047, !3066}
!5537 = !{!5538, !5539, !5540, !5541, !5542, !5543}
!5538 = !DILocalVariable(name: "h", arg: 1, scope: !5534, file: !3048, line: 120, type: !3061)
!5539 = !DILocalVariable(name: "c", arg: 2, scope: !5534, file: !3048, line: 120, type: !3066)
!5540 = !DILocalVariable(name: "f", arg: 3, scope: !5534, file: !3048, line: 121, type: !3047)
!5541 = !DILocalVariable(name: "val", arg: 4, scope: !5534, file: !3048, line: 121, type: !3066)
!5542 = !DILocalVariable(name: "buf", scope: !5534, file: !3048, line: 125, type: !3055)
!5543 = !DILocalVariable(name: "cmem", scope: !5534, file: !3048, line: 126, type: !102)
!5544 = !DILocation(line: 0, scope: !5534)
!5545 = !DILocation(line: 125, column: 22, scope: !5534)
!5546 = !DILocation(line: 126, column: 15, scope: !5534)
!5547 = !DILocation(line: 133, column: 27, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !3048, line: 131, column: 9)
!5549 = distinct !DILexicalBlock(scope: !5534, file: !3048, line: 128, column: 6)
!5550 = !DILocation(line: 133, column: 4, scope: !5548)
!5551 = !DILocation(line: 133, column: 3, scope: !5548)
!5552 = !DILocation(line: 133, column: 25, scope: !5548)
!5553 = !DILocation(line: 135, column: 1, scope: !5534)
!5554 = distinct !DISubprogram(name: "min_chunk_size", scope: !3048, file: !3048, line: 240, type: !5555, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5557)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{!5406, !3061}
!5557 = !{!5558}
!5558 = !DILocalVariable(name: "h", arg: 1, scope: !5554, file: !3048, line: 240, type: !3061)
!5559 = !DILocation(line: 0, scope: !5554)
!5560 = !DILocation(line: 242, column: 9, scope: !5554)
!5561 = !DILocation(line: 242, column: 2, scope: !5554)
!5562 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !3048, file: !3048, line: 235, type: !5563, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5565)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!5406, !3061, !156}
!5565 = !{!5566, !5567}
!5566 = !DILocalVariable(name: "h", arg: 1, scope: !5562, file: !3048, line: 235, type: !3061)
!5567 = !DILocalVariable(name: "bytes", arg: 2, scope: !5562, file: !3048, line: 235, type: !156)
!5568 = !DILocation(line: 0, scope: !5562)
!5569 = !DILocation(line: 237, column: 39, scope: !5562)
!5570 = !DILocation(line: 237, column: 9, scope: !5562)
!5571 = !DILocation(line: 237, column: 2, scope: !5562)
!5572 = distinct !DISubprogram(name: "chunksz", scope: !3048, file: !3048, line: 230, type: !5573, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5575)
!5573 = !DISubroutineType(types: !5574)
!5574 = !{!5406, !156}
!5575 = !{!5576}
!5576 = !DILocalVariable(name: "bytes", arg: 1, scope: !5572, file: !3048, line: 230, type: !156)
!5577 = !DILocation(line: 0, scope: !5572)
!5578 = !DILocation(line: 232, column: 29, scope: !5572)
!5579 = !DILocation(line: 232, column: 35, scope: !5572)
!5580 = !DILocation(line: 232, column: 2, scope: !5572)
!5581 = distinct !DISubprogram(name: "set_chunk_size", scope: !3048, file: !3048, line: 172, type: !5582, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5584)
!5582 = !DISubroutineType(types: !5583)
!5583 = !{null, !3061, !3066, !5406}
!5584 = !{!5585, !5586, !5587}
!5585 = !DILocalVariable(name: "h", arg: 1, scope: !5581, file: !3048, line: 172, type: !3061)
!5586 = !DILocalVariable(name: "c", arg: 2, scope: !5581, file: !3048, line: 172, type: !3066)
!5587 = !DILocalVariable(name: "size", arg: 3, scope: !5581, file: !3048, line: 172, type: !5406)
!5588 = !DILocation(line: 0, scope: !5581)
!5589 = !DILocation(line: 174, column: 38, scope: !5581)
!5590 = !DILocation(line: 174, column: 2, scope: !5581)
!5591 = !DILocation(line: 175, column: 1, scope: !5581)
!5592 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !3048, file: !3048, line: 209, type: !5582, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5593)
!5593 = !{!5594, !5595, !5596}
!5594 = !DILocalVariable(name: "h", arg: 1, scope: !5592, file: !3048, line: 209, type: !3061)
!5595 = !DILocalVariable(name: "c", arg: 2, scope: !5592, file: !3048, line: 209, type: !3066)
!5596 = !DILocalVariable(name: "size", arg: 3, scope: !5592, file: !3048, line: 210, type: !5406)
!5597 = !DILocation(line: 0, scope: !5592)
!5598 = !DILocation(line: 212, column: 2, scope: !5592)
!5599 = !DILocation(line: 213, column: 1, scope: !5592)
!5600 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !5261, file: !5261, line: 34, type: !5454, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5601)
!5601 = !{!5602, !5603, !5604, !5605, !5606, !5609}
!5602 = !DILocalVariable(name: "h", arg: 1, scope: !5600, file: !5261, line: 34, type: !3061)
!5603 = !DILocalVariable(name: "c", arg: 2, scope: !5600, file: !5261, line: 34, type: !3066)
!5604 = !DILocalVariable(name: "bidx", arg: 3, scope: !5600, file: !5261, line: 34, type: !103)
!5605 = !DILocalVariable(name: "b", scope: !5600, file: !5261, line: 36, type: !5461)
!5606 = !DILocalVariable(name: "first", scope: !5607, file: !5261, line: 47, type: !3066)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !5261, line: 46, column: 9)
!5608 = distinct !DILexicalBlock(scope: !5600, file: !5261, line: 42, column: 6)
!5609 = !DILocalVariable(name: "second", scope: !5607, file: !5261, line: 48, type: !3066)
!5610 = !DILocation(line: 0, scope: !5600)
!5611 = !DILocation(line: 36, column: 29, scope: !5600)
!5612 = !DILocation(line: 42, column: 6, scope: !5608)
!5613 = !DILocation(line: 42, column: 28, scope: !5608)
!5614 = !DILocation(line: 42, column: 6, scope: !5600)
!5615 = !DILocation(line: 44, column: 24, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5608, file: !5261, line: 42, column: 34)
!5617 = !DILocation(line: 44, column: 23, scope: !5616)
!5618 = !DILocation(line: 44, column: 6, scope: !5616)
!5619 = !DILocation(line: 44, column: 20, scope: !5616)
!5620 = !DILocation(line: 45, column: 6, scope: !5616)
!5621 = !DILocation(line: 45, column: 11, scope: !5616)
!5622 = !DILocation(line: 46, column: 2, scope: !5616)
!5623 = !DILocation(line: 47, column: 21, scope: !5607)
!5624 = !DILocation(line: 0, scope: !5607)
!5625 = !DILocation(line: 50, column: 6, scope: !5607)
!5626 = !DILocation(line: 50, column: 11, scope: !5607)
!5627 = !DILocation(line: 51, column: 3, scope: !5607)
!5628 = !DILocation(line: 52, column: 3, scope: !5607)
!5629 = !DILocation(line: 58, column: 1, scope: !5600)
!5630 = distinct !DISubprogram(name: "next_free_chunk", scope: !3048, file: !3048, line: 182, type: !5322, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5631)
!5631 = !{!5632, !5633}
!5632 = !DILocalVariable(name: "h", arg: 1, scope: !5630, file: !3048, line: 182, type: !3061)
!5633 = !DILocalVariable(name: "c", arg: 2, scope: !5630, file: !3048, line: 182, type: !3066)
!5634 = !DILocation(line: 0, scope: !5630)
!5635 = !DILocation(line: 184, column: 9, scope: !5630)
!5636 = !DILocation(line: 184, column: 2, scope: !5630)
!5637 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !5261, file: !5261, line: 200, type: !5638, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5640)
!5638 = !DISubroutineType(types: !5639)
!5639 = !{!156, !5264, !102}
!5640 = !{!5641, !5642, !5643, !5644, !5645, !5646, !5647}
!5641 = !DILocalVariable(name: "heap", arg: 1, scope: !5637, file: !5261, line: 200, type: !5264)
!5642 = !DILocalVariable(name: "mem", arg: 2, scope: !5637, file: !5261, line: 200, type: !102)
!5643 = !DILocalVariable(name: "h", scope: !5637, file: !5261, line: 202, type: !3061)
!5644 = !DILocalVariable(name: "c", scope: !5637, file: !5261, line: 203, type: !3066)
!5645 = !DILocalVariable(name: "addr", scope: !5637, file: !5261, line: 204, type: !156)
!5646 = !DILocalVariable(name: "chunk_base", scope: !5637, file: !5261, line: 205, type: !156)
!5647 = !DILocalVariable(name: "chunk_sz", scope: !5637, file: !5261, line: 206, type: !156)
!5648 = !DILocation(line: 0, scope: !5637)
!5649 = !DILocation(line: 202, column: 27, scope: !5637)
!5650 = !DILocation(line: 203, column: 16, scope: !5637)
!5651 = !DILocation(line: 204, column: 16, scope: !5637)
!5652 = !DILocation(line: 205, column: 31, scope: !5637)
!5653 = !DILocation(line: 205, column: 22, scope: !5637)
!5654 = !DILocation(line: 206, column: 20, scope: !5637)
!5655 = !DILocation(line: 206, column: 37, scope: !5637)
!5656 = !DILocation(line: 208, column: 26, scope: !5637)
!5657 = !DILocation(line: 208, column: 18, scope: !5637)
!5658 = !DILocation(line: 208, column: 2, scope: !5637)
!5659 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !5261, file: !5261, line: 263, type: !5660, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5662)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{!102, !5264, !156}
!5662 = !{!5663, !5664, !5665, !5666, !5667, !5668}
!5663 = !DILocalVariable(name: "heap", arg: 1, scope: !5659, file: !5261, line: 263, type: !5264)
!5664 = !DILocalVariable(name: "bytes", arg: 2, scope: !5659, file: !5261, line: 263, type: !156)
!5665 = !DILocalVariable(name: "h", scope: !5659, file: !5261, line: 265, type: !3061)
!5666 = !DILocalVariable(name: "mem", scope: !5659, file: !5261, line: 266, type: !102)
!5667 = !DILocalVariable(name: "chunk_sz", scope: !5659, file: !5261, line: 272, type: !5406)
!5668 = !DILocalVariable(name: "c", scope: !5659, file: !5261, line: 273, type: !3066)
!5669 = !DILocation(line: 0, scope: !5659)
!5670 = !DILocation(line: 265, column: 27, scope: !5659)
!5671 = !DILocation(line: 268, column: 12, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5659, file: !5261, line: 268, column: 6)
!5673 = !DILocation(line: 268, column: 18, scope: !5672)
!5674 = !DILocation(line: 268, column: 21, scope: !5672)
!5675 = !DILocation(line: 268, column: 6, scope: !5659)
!5676 = !DILocation(line: 272, column: 23, scope: !5659)
!5677 = !DILocation(line: 273, column: 16, scope: !5659)
!5678 = !DILocation(line: 274, column: 8, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5659, file: !5261, line: 274, column: 6)
!5680 = !DILocation(line: 274, column: 6, scope: !5659)
!5681 = !DILocation(line: 279, column: 6, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5659, file: !5261, line: 279, column: 6)
!5683 = !DILocation(line: 279, column: 23, scope: !5682)
!5684 = !DILocation(line: 279, column: 6, scope: !5659)
!5685 = !DILocation(line: 280, column: 24, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5682, file: !5261, line: 279, column: 35)
!5687 = !DILocation(line: 280, column: 3, scope: !5686)
!5688 = !DILocation(line: 281, column: 3, scope: !5686)
!5689 = !DILocation(line: 282, column: 2, scope: !5686)
!5690 = !DILocation(line: 284, column: 2, scope: !5659)
!5691 = !DILocation(line: 286, column: 8, scope: !5659)
!5692 = !DILocation(line: 298, column: 2, scope: !5659)
!5693 = !DILocation(line: 299, column: 1, scope: !5659)
!5694 = distinct !DISubprogram(name: "size_too_big", scope: !3048, file: !3048, line: 256, type: !5695, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5697)
!5695 = !DISubroutineType(types: !5696)
!5696 = !{!122, !3061, !156}
!5697 = !{!5698, !5699}
!5698 = !DILocalVariable(name: "h", arg: 1, scope: !5694, file: !3048, line: 256, type: !3061)
!5699 = !DILocalVariable(name: "bytes", arg: 2, scope: !5694, file: !3048, line: 256, type: !156)
!5700 = !DILocation(line: 0, scope: !5694)
!5701 = !DILocation(line: 262, column: 16, scope: !5694)
!5702 = !DILocation(line: 262, column: 36, scope: !5694)
!5703 = !DILocation(line: 262, column: 30, scope: !5694)
!5704 = !DILocation(line: 262, column: 2, scope: !5694)
!5705 = distinct !DISubprogram(name: "alloc_chunk", scope: !5261, file: !5261, line: 211, type: !5706, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5708)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!3066, !3061, !5406}
!5708 = !{!5709, !5710, !5711, !5712, !5713, !5716, !5717, !5719, !5720, !5723}
!5709 = !DILocalVariable(name: "h", arg: 1, scope: !5705, file: !5261, line: 211, type: !3061)
!5710 = !DILocalVariable(name: "sz", arg: 2, scope: !5705, file: !5261, line: 211, type: !5406)
!5711 = !DILocalVariable(name: "bi", scope: !5705, file: !5261, line: 213, type: !103)
!5712 = !DILocalVariable(name: "b", scope: !5705, file: !5261, line: 214, type: !5461)
!5713 = !DILocalVariable(name: "first", scope: !5714, file: !5261, line: 233, type: !3066)
!5714 = distinct !DILexicalBlock(scope: !5715, file: !5261, line: 232, column: 15)
!5715 = distinct !DILexicalBlock(scope: !5705, file: !5261, line: 232, column: 6)
!5716 = !DILocalVariable(name: "i", scope: !5714, file: !5261, line: 234, type: !103)
!5717 = !DILocalVariable(name: "c", scope: !5718, file: !5261, line: 236, type: !3066)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !5261, line: 235, column: 6)
!5719 = !DILocalVariable(name: "bmask", scope: !5705, file: !5261, line: 249, type: !111)
!5720 = !DILocalVariable(name: "minbucket", scope: !5721, file: !5261, line: 252, type: !103)
!5721 = distinct !DILexicalBlock(scope: !5722, file: !5261, line: 251, column: 19)
!5722 = distinct !DILexicalBlock(scope: !5705, file: !5261, line: 251, column: 6)
!5723 = !DILocalVariable(name: "c", scope: !5721, file: !5261, line: 253, type: !3066)
!5724 = !DILocation(line: 0, scope: !5705)
!5725 = !DILocation(line: 213, column: 11, scope: !5705)
!5726 = !DILocation(line: 232, column: 9, scope: !5715)
!5727 = !DILocation(line: 232, column: 6, scope: !5715)
!5728 = !DILocation(line: 232, column: 6, scope: !5705)
!5729 = !DILocation(line: 236, column: 21, scope: !5718)
!5730 = !DILocation(line: 0, scope: !5714)
!5731 = !DILocation(line: 0, scope: !5718)
!5732 = !DILocation(line: 237, column: 8, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5718, file: !5261, line: 237, column: 8)
!5734 = !DILocation(line: 237, column: 25, scope: !5733)
!5735 = !DILocation(line: 237, column: 8, scope: !5718)
!5736 = !DILocation(line: 238, column: 5, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5733, file: !5261, line: 237, column: 32)
!5738 = !DILocation(line: 241, column: 14, scope: !5718)
!5739 = !DILocation(line: 241, column: 12, scope: !5718)
!5740 = !DILocation(line: 243, column: 12, scope: !5714)
!5741 = !DILocation(line: 243, column: 16, scope: !5714)
!5742 = distinct !{!5742, !5743, !5744}
!5743 = !DILocation(line: 235, column: 3, scope: !5714)
!5744 = !DILocation(line: 243, column: 35, scope: !5714)
!5745 = !DILocation(line: 249, column: 22, scope: !5705)
!5746 = !DILocation(line: 249, column: 39, scope: !5705)
!5747 = !DILocation(line: 249, column: 36, scope: !5705)
!5748 = !DILocation(line: 251, column: 12, scope: !5722)
!5749 = !DILocation(line: 251, column: 6, scope: !5705)
!5750 = !DILocation(line: 252, column: 19, scope: !5721)
!5751 = !DILocation(line: 0, scope: !5721)
!5752 = !DILocation(line: 253, column: 39, scope: !5721)
!5753 = !DILocation(line: 255, column: 3, scope: !5721)
!5754 = !DILocation(line: 261, column: 1, scope: !5705)
!5755 = distinct !DISubprogram(name: "split_chunks", scope: !5261, file: !5261, line: 109, type: !5399, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5756)
!5756 = !{!5757, !5758, !5759, !5760, !5761, !5762}
!5757 = !DILocalVariable(name: "h", arg: 1, scope: !5755, file: !5261, line: 109, type: !3061)
!5758 = !DILocalVariable(name: "lc", arg: 2, scope: !5755, file: !5261, line: 109, type: !3066)
!5759 = !DILocalVariable(name: "rc", arg: 3, scope: !5755, file: !5261, line: 109, type: !3066)
!5760 = !DILocalVariable(name: "sz0", scope: !5755, file: !5261, line: 114, type: !5406)
!5761 = !DILocalVariable(name: "lsz", scope: !5755, file: !5261, line: 115, type: !5406)
!5762 = !DILocalVariable(name: "rsz", scope: !5755, file: !5261, line: 116, type: !5406)
!5763 = !DILocation(line: 0, scope: !5755)
!5764 = !DILocation(line: 114, column: 18, scope: !5755)
!5765 = !DILocation(line: 115, column: 21, scope: !5755)
!5766 = !DILocation(line: 116, column: 22, scope: !5755)
!5767 = !DILocation(line: 118, column: 2, scope: !5755)
!5768 = !DILocation(line: 119, column: 2, scope: !5755)
!5769 = !DILocation(line: 120, column: 2, scope: !5755)
!5770 = !DILocation(line: 121, column: 25, scope: !5755)
!5771 = !DILocation(line: 121, column: 2, scope: !5755)
!5772 = !DILocation(line: 122, column: 1, scope: !5755)
!5773 = distinct !DISubprogram(name: "chunk_mem", scope: !5261, file: !5261, line: 24, type: !5774, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5776)
!5774 = !DISubroutineType(types: !5775)
!5775 = !{!102, !3061, !3066}
!5776 = !{!5777, !5778, !5779, !5780}
!5777 = !DILocalVariable(name: "h", arg: 1, scope: !5773, file: !5261, line: 24, type: !3061)
!5778 = !DILocalVariable(name: "c", arg: 2, scope: !5773, file: !5261, line: 24, type: !3066)
!5779 = !DILocalVariable(name: "buf", scope: !5773, file: !5261, line: 26, type: !3055)
!5780 = !DILocalVariable(name: "ret", scope: !5773, file: !5261, line: 27, type: !550)
!5781 = !DILocation(line: 0, scope: !5773)
!5782 = !DILocation(line: 26, column: 22, scope: !5773)
!5783 = !DILocation(line: 27, column: 38, scope: !5773)
!5784 = !DILocation(line: 31, column: 2, scope: !5773)
!5785 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !5261, file: !5261, line: 301, type: !5786, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5788)
!5786 = !DISubroutineType(types: !5787)
!5787 = !{!102, !5264, !156, !156}
!5788 = !{!5789, !5790, !5791, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800}
!5789 = !DILocalVariable(name: "heap", arg: 1, scope: !5785, file: !5261, line: 301, type: !5264)
!5790 = !DILocalVariable(name: "align", arg: 2, scope: !5785, file: !5261, line: 301, type: !156)
!5791 = !DILocalVariable(name: "bytes", arg: 3, scope: !5785, file: !5261, line: 301, type: !156)
!5792 = !DILocalVariable(name: "h", scope: !5785, file: !5261, line: 303, type: !3061)
!5793 = !DILocalVariable(name: "gap", scope: !5785, file: !5261, line: 304, type: !156)
!5794 = !DILocalVariable(name: "rew", scope: !5785, file: !5261, line: 304, type: !156)
!5795 = !DILocalVariable(name: "padded_sz", scope: !5785, file: !5261, line: 335, type: !5406)
!5796 = !DILocalVariable(name: "c0", scope: !5785, file: !5261, line: 336, type: !3066)
!5797 = !DILocalVariable(name: "mem", scope: !5785, file: !5261, line: 341, type: !550)
!5798 = !DILocalVariable(name: "end", scope: !5785, file: !5261, line: 345, type: !3055)
!5799 = !DILocalVariable(name: "c", scope: !5785, file: !5261, line: 348, type: !3066)
!5800 = !DILocalVariable(name: "c_end", scope: !5785, file: !5261, line: 349, type: !3066)
!5801 = !DILocation(line: 0, scope: !5785)
!5802 = !DILocation(line: 303, column: 27, scope: !5785)
!5803 = !DILocation(line: 313, column: 16, scope: !5785)
!5804 = !DILocation(line: 313, column: 14, scope: !5785)
!5805 = !DILocation(line: 314, column: 12, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5785, file: !5261, line: 314, column: 6)
!5807 = !DILocation(line: 314, column: 6, scope: !5785)
!5808 = !DILocation(line: 315, column: 9, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5806, file: !5261, line: 314, column: 20)
!5810 = !DILocation(line: 316, column: 9, scope: !5809)
!5811 = !DILocation(line: 318, column: 13, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5813, file: !5261, line: 318, column: 7)
!5813 = distinct !DILexicalBlock(scope: !5806, file: !5261, line: 317, column: 9)
!5814 = !DILocation(line: 318, column: 7, scope: !5813)
!5815 = !DILocation(line: 319, column: 11, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5812, file: !5261, line: 318, column: 39)
!5817 = !DILocation(line: 319, column: 4, scope: !5816)
!5818 = !DILocation(line: 0, scope: !5806)
!5819 = !DILocation(line: 324, column: 2, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5821, file: !5261, line: 324, column: 2)
!5821 = distinct !DILexicalBlock(scope: !5785, file: !5261, line: 324, column: 2)
!5822 = !DILocation(line: 324, column: 2, scope: !5821)
!5823 = !DILocation(line: 324, column: 2, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5820, file: !5261, line: 324, column: 2)
!5825 = !DILocation(line: 326, column: 12, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5785, file: !5261, line: 326, column: 6)
!5827 = !DILocation(line: 326, column: 17, scope: !5826)
!5828 = !DILocation(line: 326, column: 20, scope: !5826)
!5829 = !DILocation(line: 326, column: 6, scope: !5785)
!5830 = !DILocation(line: 335, column: 50, scope: !5785)
!5831 = !DILocation(line: 335, column: 58, scope: !5785)
!5832 = !DILocation(line: 335, column: 24, scope: !5785)
!5833 = !DILocation(line: 336, column: 17, scope: !5785)
!5834 = !DILocation(line: 338, column: 9, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5785, file: !5261, line: 338, column: 6)
!5836 = !DILocation(line: 338, column: 6, scope: !5785)
!5837 = !DILocation(line: 341, column: 17, scope: !5785)
!5838 = !DILocation(line: 344, column: 20, scope: !5785)
!5839 = !DILocation(line: 344, column: 8, scope: !5785)
!5840 = !DILocation(line: 344, column: 47, scope: !5785)
!5841 = !DILocation(line: 345, column: 39, scope: !5785)
!5842 = !DILocation(line: 348, column: 16, scope: !5785)
!5843 = !DILocation(line: 349, column: 26, scope: !5785)
!5844 = !DILocation(line: 349, column: 24, scope: !5785)
!5845 = !DILocation(line: 353, column: 8, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5785, file: !5261, line: 353, column: 6)
!5847 = !DILocation(line: 353, column: 6, scope: !5785)
!5848 = !DILocation(line: 354, column: 3, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5846, file: !5261, line: 353, column: 14)
!5850 = !DILocation(line: 355, column: 3, scope: !5849)
!5851 = !DILocation(line: 356, column: 2, scope: !5849)
!5852 = !DILocation(line: 359, column: 6, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5785, file: !5261, line: 359, column: 6)
!5854 = !DILocation(line: 359, column: 24, scope: !5853)
!5855 = !DILocation(line: 359, column: 6, scope: !5785)
!5856 = !DILocation(line: 360, column: 3, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5853, file: !5261, line: 359, column: 33)
!5858 = !DILocation(line: 361, column: 3, scope: !5857)
!5859 = !DILocation(line: 362, column: 2, scope: !5857)
!5860 = !DILocation(line: 364, column: 2, scope: !5785)
!5861 = !DILocation(line: 377, column: 1, scope: !5785)
!5862 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !5261, file: !5261, line: 379, type: !5863, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5865)
!5863 = !DISubroutineType(types: !5864)
!5864 = !{!102, !5264, !102, !156, !156}
!5865 = !{!5866, !5867, !5868, !5869, !5870, !5871, !5872, !5873, !5874, !5875, !5881, !5882}
!5866 = !DILocalVariable(name: "heap", arg: 1, scope: !5862, file: !5261, line: 379, type: !5264)
!5867 = !DILocalVariable(name: "ptr", arg: 2, scope: !5862, file: !5261, line: 379, type: !102)
!5868 = !DILocalVariable(name: "align", arg: 3, scope: !5862, file: !5261, line: 380, type: !156)
!5869 = !DILocalVariable(name: "bytes", arg: 4, scope: !5862, file: !5261, line: 380, type: !156)
!5870 = !DILocalVariable(name: "h", scope: !5862, file: !5261, line: 382, type: !3061)
!5871 = !DILocalVariable(name: "c", scope: !5862, file: !5261, line: 399, type: !3066)
!5872 = !DILocalVariable(name: "rc", scope: !5862, file: !5261, line: 400, type: !3066)
!5873 = !DILocalVariable(name: "align_gap", scope: !5862, file: !5261, line: 401, type: !156)
!5874 = !DILocalVariable(name: "chunks_need", scope: !5862, file: !5261, line: 402, type: !5406)
!5875 = !DILocalVariable(name: "split_size", scope: !5876, file: !5261, line: 435, type: !5406)
!5876 = distinct !DILexicalBlock(scope: !5877, file: !5261, line: 433, column: 61)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !5261, line: 432, column: 13)
!5878 = distinct !DILexicalBlock(scope: !5879, file: !5261, line: 409, column: 13)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !5261, line: 406, column: 13)
!5880 = distinct !DILexicalBlock(scope: !5862, file: !5261, line: 404, column: 6)
!5881 = !DILocalVariable(name: "ptr2", scope: !5862, file: !5261, line: 474, type: !102)
!5882 = !DILocalVariable(name: "prev_size", scope: !5883, file: !5261, line: 477, type: !156)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !5261, line: 476, column: 20)
!5884 = distinct !DILexicalBlock(scope: !5862, file: !5261, line: 476, column: 6)
!5885 = !DILocation(line: 0, scope: !5862)
!5886 = !DILocation(line: 382, column: 27, scope: !5862)
!5887 = !DILocation(line: 385, column: 10, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5862, file: !5261, line: 385, column: 6)
!5889 = !DILocation(line: 385, column: 6, scope: !5862)
!5890 = !DILocation(line: 386, column: 10, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5888, file: !5261, line: 385, column: 19)
!5892 = !DILocation(line: 386, column: 3, scope: !5891)
!5893 = !DILocation(line: 388, column: 12, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5862, file: !5261, line: 388, column: 6)
!5895 = !DILocation(line: 388, column: 6, scope: !5862)
!5896 = !DILocation(line: 389, column: 3, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5894, file: !5261, line: 388, column: 18)
!5898 = !DILocation(line: 390, column: 3, scope: !5897)
!5899 = !DILocation(line: 393, column: 2, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5901, file: !5261, line: 393, column: 2)
!5901 = distinct !DILexicalBlock(scope: !5862, file: !5261, line: 393, column: 2)
!5902 = !DILocation(line: 393, column: 2, scope: !5901)
!5903 = !DILocation(line: 393, column: 2, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5900, file: !5261, line: 393, column: 2)
!5905 = !DILocation(line: 395, column: 6, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5862, file: !5261, line: 395, column: 6)
!5907 = !DILocation(line: 395, column: 6, scope: !5862)
!5908 = !DILocation(line: 399, column: 16, scope: !5862)
!5909 = !DILocation(line: 400, column: 17, scope: !5862)
!5910 = !DILocation(line: 401, column: 49, scope: !5862)
!5911 = !DILocation(line: 401, column: 36, scope: !5862)
!5912 = !DILocation(line: 402, column: 52, scope: !5862)
!5913 = !DILocation(line: 402, column: 26, scope: !5862)
!5914 = !DILocation(line: 404, column: 6, scope: !5880)
!5915 = !DILocation(line: 404, column: 12, scope: !5880)
!5916 = !DILocation(line: 406, column: 13, scope: !5879)
!5917 = !DILocation(line: 406, column: 30, scope: !5879)
!5918 = !DILocation(line: 406, column: 13, scope: !5880)
!5919 = !DILocation(line: 409, column: 30, scope: !5878)
!5920 = !DILocation(line: 409, column: 13, scope: !5879)
!5921 = !DILocation(line: 420, column: 24, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5878, file: !5261, line: 409, column: 45)
!5923 = !DILocation(line: 420, column: 3, scope: !5922)
!5924 = !DILocation(line: 421, column: 3, scope: !5922)
!5925 = !DILocation(line: 422, column: 3, scope: !5922)
!5926 = !DILocation(line: 431, column: 3, scope: !5922)
!5927 = !DILocation(line: 432, column: 14, scope: !5877)
!5928 = !DILocation(line: 432, column: 32, scope: !5877)
!5929 = !DILocation(line: 433, column: 26, scope: !5877)
!5930 = !DILocation(line: 433, column: 24, scope: !5877)
!5931 = !DILocation(line: 433, column: 44, scope: !5877)
!5932 = !DILocation(line: 432, column: 13, scope: !5878)
!5933 = !DILocation(line: 435, column: 38, scope: !5876)
!5934 = !DILocation(line: 0, scope: !5876)
!5935 = !DILocation(line: 445, column: 3, scope: !5876)
!5936 = !DILocation(line: 447, column: 20, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5876, file: !5261, line: 447, column: 7)
!5938 = !DILocation(line: 447, column: 18, scope: !5937)
!5939 = !DILocation(line: 447, column: 7, scope: !5876)
!5940 = !DILocation(line: 448, column: 27, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5937, file: !5261, line: 447, column: 39)
!5942 = !DILocation(line: 448, column: 4, scope: !5941)
!5943 = !DILocation(line: 449, column: 4, scope: !5941)
!5944 = !DILocation(line: 450, column: 3, scope: !5941)
!5945 = !DILocation(line: 452, column: 3, scope: !5876)
!5946 = !DILocation(line: 453, column: 3, scope: !5876)
!5947 = !DILocation(line: 474, column: 15, scope: !5862)
!5948 = !DILocation(line: 476, column: 11, scope: !5884)
!5949 = !DILocation(line: 476, column: 6, scope: !5862)
!5950 = !DILocation(line: 477, column: 42, scope: !5883)
!5951 = !DILocation(line: 477, column: 22, scope: !5883)
!5952 = !DILocation(line: 477, column: 60, scope: !5883)
!5953 = !DILocation(line: 0, scope: !5883)
!5954 = !DILocation(line: 479, column: 21, scope: !5883)
!5955 = !DILocation(line: 479, column: 3, scope: !5883)
!5956 = !DILocation(line: 480, column: 3, scope: !5883)
!5957 = !DILocation(line: 481, column: 2, scope: !5883)
!5958 = !DILocation(line: 483, column: 1, scope: !5862)
!5959 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !3048, file: !3048, line: 245, type: !5960, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5962)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!156, !3061, !5406}
!5962 = !{!5963, !5964}
!5963 = !DILocalVariable(name: "h", arg: 1, scope: !5959, file: !3048, line: 245, type: !3061)
!5964 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !5959, file: !3048, line: 245, type: !5406)
!5965 = !DILocation(line: 0, scope: !5959)
!5966 = !DILocation(line: 247, column: 20, scope: !5959)
!5967 = !DILocation(line: 247, column: 33, scope: !5959)
!5968 = !DILocation(line: 247, column: 2, scope: !5959)
!5969 = distinct !DISubprogram(name: "sys_heap_init", scope: !5261, file: !5261, line: 485, type: !5970, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3044, retainedNodes: !5972)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{null, !5264, !102, !156}
!5972 = !{!5973, !5974, !5975, !5976, !5977, !5978, !5979, !5980, !5981, !5982}
!5973 = !DILocalVariable(name: "heap", arg: 1, scope: !5969, file: !5261, line: 485, type: !5264)
!5974 = !DILocalVariable(name: "mem", arg: 2, scope: !5969, file: !5261, line: 485, type: !102)
!5975 = !DILocalVariable(name: "bytes", arg: 3, scope: !5969, file: !5261, line: 485, type: !156)
!5976 = !DILocalVariable(name: "addr", scope: !5969, file: !5261, line: 502, type: !22)
!5977 = !DILocalVariable(name: "end", scope: !5969, file: !5261, line: 503, type: !22)
!5978 = !DILocalVariable(name: "heap_sz", scope: !5969, file: !5261, line: 504, type: !5406)
!5979 = !DILocalVariable(name: "h", scope: !5969, file: !5261, line: 509, type: !3061)
!5980 = !DILocalVariable(name: "nb_buckets", scope: !5969, file: !5261, line: 520, type: !103)
!5981 = !DILocalVariable(name: "chunk0_size", scope: !5969, file: !5261, line: 521, type: !5406)
!5982 = !DILocalVariable(name: "i", scope: !5983, file: !5261, line: 526, type: !103)
!5983 = distinct !DILexicalBlock(scope: !5969, file: !5261, line: 526, column: 2)
!5984 = !DILocation(line: 0, scope: !5969)
!5985 = !DILocation(line: 491, column: 3, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5987, file: !5261, line: 491, column: 3)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !5261, line: 491, column: 3)
!5988 = distinct !DILexicalBlock(scope: !5989, file: !5261, line: 489, column: 46)
!5989 = distinct !DILexicalBlock(scope: !5969, file: !5261, line: 489, column: 6)
!5990 = !DILocation(line: 491, column: 3, scope: !5987)
!5991 = !DILocation(line: 491, column: 3, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5986, file: !5261, line: 491, column: 3)
!5993 = !DILocation(line: 498, column: 2, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5995, file: !5261, line: 498, column: 2)
!5995 = distinct !DILexicalBlock(scope: !5969, file: !5261, line: 498, column: 2)
!5996 = !DILocation(line: 498, column: 2, scope: !5995)
!5997 = !DILocation(line: 498, column: 2, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5994, file: !5261, line: 498, column: 2)
!5999 = !DILocation(line: 499, column: 8, scope: !5969)
!6000 = !DILocation(line: 502, column: 19, scope: !5969)
!6001 = !DILocation(line: 503, column: 18, scope: !5969)
!6002 = !DILocation(line: 504, column: 27, scope: !5969)
!6003 = !DILocation(line: 504, column: 35, scope: !5969)
!6004 = !DILocation(line: 507, column: 2, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6006, file: !5261, line: 507, column: 2)
!6006 = distinct !DILexicalBlock(scope: !5969, file: !5261, line: 507, column: 2)
!6007 = !DILocation(line: 507, column: 2, scope: !6006)
!6008 = !DILocation(line: 507, column: 2, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !6005, file: !5261, line: 507, column: 2)
!6010 = !DILocation(line: 509, column: 21, scope: !5969)
!6011 = !DILocation(line: 510, column: 8, scope: !5969)
!6012 = !DILocation(line: 510, column: 13, scope: !5969)
!6013 = !DILocation(line: 511, column: 5, scope: !5969)
!6014 = !DILocation(line: 511, column: 15, scope: !5969)
!6015 = !DILocation(line: 512, column: 5, scope: !5969)
!6016 = !DILocation(line: 512, column: 19, scope: !5969)
!6017 = !DILocation(line: 520, column: 19, scope: !5969)
!6018 = !DILocation(line: 522, column: 21, scope: !5969)
!6019 = !DILocation(line: 521, column: 56, scope: !5969)
!6020 = !DILocation(line: 521, column: 26, scope: !5969)
!6021 = !DILocation(line: 524, column: 2, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6023, file: !5261, line: 524, column: 2)
!6023 = distinct !DILexicalBlock(scope: !5969, file: !5261, line: 524, column: 2)
!6024 = !DILocation(line: 524, column: 2, scope: !6023)
!6025 = !DILocation(line: 0, scope: !5983)
!6026 = !DILocation(line: 526, column: 20, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5983, file: !5261, line: 526, column: 2)
!6028 = !DILocation(line: 526, column: 2, scope: !5983)
!6029 = !DILocation(line: 524, column: 2, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6022, file: !5261, line: 524, column: 2)
!6031 = !DILocation(line: 531, column: 2, scope: !5969)
!6032 = !DILocation(line: 532, column: 2, scope: !5969)
!6033 = !DILocation(line: 533, column: 2, scope: !5969)
!6034 = !DILocation(line: 536, column: 41, scope: !5969)
!6035 = !DILocation(line: 536, column: 2, scope: !5969)
!6036 = !DILocation(line: 537, column: 2, scope: !5969)
!6037 = !DILocation(line: 540, column: 2, scope: !5969)
!6038 = !DILocation(line: 541, column: 2, scope: !5969)
!6039 = !DILocation(line: 542, column: 2, scope: !5969)
!6040 = !DILocation(line: 544, column: 2, scope: !5969)
!6041 = !DILocation(line: 545, column: 1, scope: !5969)
!6042 = !DILocation(line: 527, column: 17, scope: !6043)
!6043 = distinct !DILexicalBlock(scope: !6027, file: !5261, line: 526, column: 39)
!6044 = !DILocation(line: 527, column: 22, scope: !6043)
!6045 = !DILocation(line: 526, column: 35, scope: !6027)
!6046 = distinct !{!6046, !6028, !6047}
!6047 = !DILocation(line: 528, column: 2, scope: !5983)
!6048 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !3081, file: !3081, line: 1338, type: !6049, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6057)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!103, !4416, !102, !108, !6051, !111}
!6051 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4034, line: 99, baseType: !6052)
!6052 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4034, line: 40, baseType: !6053)
!6053 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3081, baseType: !6054)
!6054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6055)
!6055 = !{!6056}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6054, file: !3081, baseType: !102, size: 32)
!6057 = !{!6058, !6059, !6060, !6061, !6062, !6063, !6067, !6068, !6069, !6071, !6076, !6119, !6122, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6134, !6135, !6136, !6140, !6143, !6145, !6148, !6149, !6150, !6155, !6161, !6164, !6168, !6174, !6178, !6181, !6183, !6186}
!6058 = !DILocalVariable(name: "out", arg: 1, scope: !6048, file: !3081, line: 1338, type: !4416)
!6059 = !DILocalVariable(name: "ctx", arg: 2, scope: !6048, file: !3081, line: 1338, type: !102)
!6060 = !DILocalVariable(name: "fp", arg: 3, scope: !6048, file: !3081, line: 1338, type: !108)
!6061 = !DILocalVariable(name: "ap", arg: 4, scope: !6048, file: !3081, line: 1339, type: !6051)
!6062 = !DILocalVariable(name: "flags", arg: 5, scope: !6048, file: !3081, line: 1339, type: !111)
!6063 = !DILocalVariable(name: "buf", scope: !6048, file: !3081, line: 1341, type: !6064)
!6064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 176, elements: !6065)
!6065 = !{!6066}
!6066 = !DISubrange(count: 22)
!6067 = !DILocalVariable(name: "count", scope: !6048, file: !3081, line: 1342, type: !156)
!6068 = !DILocalVariable(name: "sint", scope: !6048, file: !3081, line: 1343, type: !3100)
!6069 = !DILocalVariable(name: "tagged_ap", scope: !6048, file: !3081, line: 1345, type: !6070)
!6070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !122)
!6071 = !DILocalVariable(name: "rc", scope: !6072, file: !3081, line: 1377, type: !103)
!6072 = distinct !DILexicalBlock(scope: !6073, file: !3081, line: 1377, column: 4)
!6073 = distinct !DILexicalBlock(scope: !6074, file: !3081, line: 1376, column: 19)
!6074 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1376, column: 7)
!6075 = distinct !DILexicalBlock(scope: !6048, file: !3081, line: 1375, column: 19)
!6076 = !DILocalVariable(name: "state", scope: !6075, file: !3081, line: 1395, type: !6077)
!6077 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6048, file: !3081, line: 1392, size: 192, elements: !6078)
!6078 = !{!6079, !6087}
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !6077, file: !3081, line: 1393, baseType: !6080, size: 64)
!6080 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !3081, line: 166, size: 64, elements: !6081)
!6081 = !{!6082, !6083, !6084, !6085, !6086}
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !6080, file: !3081, line: 168, baseType: !3100, size: 64)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !6080, file: !3081, line: 171, baseType: !3103, size: 64)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !6080, file: !3081, line: 174, baseType: !742, size: 64)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !6080, file: !3081, line: 177, baseType: !740, size: 64)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6080, file: !3081, line: 180, baseType: !102, size: 32)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !6077, file: !3081, line: 1394, baseType: !6088, size: 96, offset: 64)
!6088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !3081, line: 189, size: 96, elements: !6089)
!6089 = !{!6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6105, !6106, !6107, !6108, !6109, !6114}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !6088, file: !3081, line: 191, baseType: !122, size: 1, flags: DIFlagBitField, extraData: i64 0)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !6088, file: !3081, line: 194, baseType: !122, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !6088, file: !3081, line: 197, baseType: !122, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !6088, file: !3081, line: 200, baseType: !122, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !6088, file: !3081, line: 203, baseType: !122, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !6088, file: !3081, line: 206, baseType: !122, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !6088, file: !3081, line: 209, baseType: !122, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !6088, file: !3081, line: 212, baseType: !122, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !6088, file: !3081, line: 219, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !6088, file: !3081, line: 222, baseType: !122, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !6088, file: !3081, line: 229, baseType: !122, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !6088, file: !3081, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !6088, file: !3081, line: 238, baseType: !122, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !6088, file: !3081, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !6088, file: !3081, line: 244, baseType: !122, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !6088, file: !3081, line: 247, baseType: !122, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !6088, file: !3081, line: 252, baseType: !122, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !6088, file: !3081, line: 257, baseType: !122, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !6088, file: !3081, line: 260, baseType: !167, size: 8, offset: 24)
!6109 = !DIDerivedType(tag: DW_TAG_member, scope: !6088, file: !3081, line: 262, baseType: !6110, size: 32, offset: 32)
!6110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6088, file: !3081, line: 262, size: 32, elements: !6111)
!6111 = !{!6112, !6113}
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !6110, file: !3081, line: 267, baseType: !103, size: 32)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !6110, file: !3081, line: 289, baseType: !103, size: 32)
!6114 = !DIDerivedType(tag: DW_TAG_member, scope: !6088, file: !3081, line: 292, baseType: !6115, size: 32, offset: 64)
!6115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6088, file: !3081, line: 292, size: 32, elements: !6116)
!6116 = !{!6117, !6118}
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !6115, file: !3081, line: 297, baseType: !103, size: 32)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !6115, file: !3081, line: 306, baseType: !103, size: 32)
!6119 = !DILocalVariable(name: "conv", scope: !6075, file: !3081, line: 1400, type: !6120)
!6120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6121)
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 32)
!6122 = !DILocalVariable(name: "value", scope: !6075, file: !3081, line: 1401, type: !6123)
!6123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6124)
!6124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6080, size: 32)
!6125 = !DILocalVariable(name: "sp", scope: !6075, file: !3081, line: 1402, type: !108)
!6126 = !DILocalVariable(name: "width", scope: !6075, file: !3081, line: 1403, type: !103)
!6127 = !DILocalVariable(name: "precision", scope: !6075, file: !3081, line: 1404, type: !103)
!6128 = !DILocalVariable(name: "bps", scope: !6075, file: !3081, line: 1405, type: !108)
!6129 = !DILocalVariable(name: "bpe", scope: !6075, file: !3081, line: 1406, type: !108)
!6130 = !DILocalVariable(name: "sign", scope: !6075, file: !3081, line: 1407, type: !110)
!6131 = !DILocalVariable(name: "arg", scope: !6132, file: !3081, line: 1432, type: !103)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !3081, line: 1431, column: 24)
!6133 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1431, column: 7)
!6134 = !DILocalVariable(name: "specifier_cat", scope: !6075, file: !3081, line: 1468, type: !3080)
!6135 = !DILocalVariable(name: "length_mod", scope: !6075, file: !3081, line: 1470, type: !3088)
!6136 = !DILocalVariable(name: "rc", scope: !6137, file: !3081, line: 1575, type: !103)
!6137 = distinct !DILexicalBlock(scope: !6138, file: !3081, line: 1575, column: 4)
!6138 = distinct !DILexicalBlock(scope: !6139, file: !3081, line: 1574, column: 43)
!6139 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1574, column: 7)
!6140 = !DILocalVariable(name: "rc", scope: !6141, file: !3081, line: 1584, type: !103)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !3081, line: 1584, column: 4)
!6142 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1582, column: 28)
!6143 = !DILocalVariable(name: "len", scope: !6144, file: !3081, line: 1589, type: !156)
!6144 = distinct !DILexicalBlock(scope: !6142, file: !3081, line: 1586, column: 13)
!6145 = !DILocalVariable(name: "len", scope: !6146, file: !3081, line: 1641, type: !156)
!6146 = distinct !DILexicalBlock(scope: !6147, file: !3081, line: 1640, column: 24)
!6147 = distinct !DILexicalBlock(scope: !6142, file: !3081, line: 1640, column: 8)
!6148 = !DILocalVariable(name: "nj_len", scope: !6075, file: !3081, line: 1722, type: !156)
!6149 = !DILocalVariable(name: "pad_len", scope: !6075, file: !3081, line: 1723, type: !103)
!6150 = !DILocalVariable(name: "pad", scope: !6151, file: !3081, line: 1751, type: !110)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !3081, line: 1750, column: 26)
!6152 = distinct !DILexicalBlock(scope: !6153, file: !3081, line: 1750, column: 8)
!6153 = distinct !DILexicalBlock(scope: !6154, file: !3081, line: 1747, column: 18)
!6154 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1747, column: 7)
!6155 = !DILocalVariable(name: "rc", scope: !6156, file: !3081, line: 1758, type: !103)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !3081, line: 1758, column: 7)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !3081, line: 1757, column: 21)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !3081, line: 1757, column: 10)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !3081, line: 1756, column: 26)
!6160 = distinct !DILexicalBlock(scope: !6151, file: !3081, line: 1756, column: 9)
!6161 = !DILocalVariable(name: "rc", scope: !6162, file: !3081, line: 1765, type: !103)
!6162 = distinct !DILexicalBlock(scope: !6163, file: !3081, line: 1765, column: 6)
!6163 = distinct !DILexicalBlock(scope: !6151, file: !3081, line: 1764, column: 25)
!6164 = !DILocalVariable(name: "rc", scope: !6165, file: !3081, line: 1774, type: !103)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !3081, line: 1774, column: 4)
!6166 = distinct !DILexicalBlock(scope: !6167, file: !3081, line: 1773, column: 18)
!6167 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1773, column: 7)
!6168 = !DILocalVariable(name: "rc", scope: !6169, file: !3081, line: 1819, type: !103)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !3081, line: 1819, column: 5)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !3081, line: 1818, column: 44)
!6171 = distinct !DILexicalBlock(scope: !6172, file: !3081, line: 1818, column: 8)
!6172 = distinct !DILexicalBlock(scope: !6173, file: !3081, line: 1817, column: 10)
!6173 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1777, column: 7)
!6174 = !DILocalVariable(name: "rc", scope: !6175, file: !3081, line: 1823, type: !103)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !3081, line: 1823, column: 5)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !3081, line: 1822, column: 26)
!6177 = distinct !DILexicalBlock(scope: !6172, file: !3081, line: 1822, column: 8)
!6178 = !DILocalVariable(name: "rc", scope: !6179, file: !3081, line: 1828, type: !103)
!6179 = distinct !DILexicalBlock(scope: !6180, file: !3081, line: 1828, column: 5)
!6180 = distinct !DILexicalBlock(scope: !6172, file: !3081, line: 1827, column: 26)
!6181 = !DILocalVariable(name: "rc", scope: !6182, file: !3081, line: 1831, type: !103)
!6182 = distinct !DILexicalBlock(scope: !6172, file: !3081, line: 1831, column: 4)
!6183 = !DILocalVariable(name: "rc", scope: !6184, file: !3081, line: 1836, type: !103)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !3081, line: 1836, column: 4)
!6185 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1835, column: 21)
!6186 = !DILabel(scope: !6142, name: "prec_int_pad0", file: !3081, line: 1634)
!6187 = !DILocation(line: 0, scope: !6048)
!6188 = !DILocation(line: 1341, column: 2, scope: !6048)
!6189 = !DILocation(line: 1341, column: 7, scope: !6048)
!6190 = !DILocation(line: 1375, column: 2, scope: !6048)
!6191 = !DILocation(line: 1342, column: 9, scope: !6048)
!6192 = !DILocation(line: 1375, column: 9, scope: !6048)
!6193 = !DILocation(line: 1377, column: 4, scope: !6072)
!6194 = !DILocation(line: 0, scope: !6072)
!6195 = !DILocation(line: 1377, column: 4, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6072, file: !3081, line: 1377, column: 4)
!6197 = distinct !{!6197, !6190, !6198}
!6198 = !DILocation(line: 1839, column: 2, scope: !6048)
!6199 = !DILocation(line: 1392, column: 3, scope: !6075)
!6200 = !DILocation(line: 1395, column: 5, scope: !6075)
!6201 = !DILocation(line: 0, scope: !6075)
!6202 = !DILocation(line: 1409, column: 8, scope: !6075)
!6203 = !DILocation(line: 1414, column: 13, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1414, column: 7)
!6205 = !DILocation(line: 1414, column: 7, scope: !6075)
!6206 = !DILocation(line: 1415, column: 12, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6204, file: !3081, line: 1414, column: 25)
!6208 = !DILocation(line: 1417, column: 14, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6207, file: !3081, line: 1417, column: 8)
!6210 = !DILocation(line: 1417, column: 8, scope: !6207)
!6211 = !DILocation(line: 1418, column: 21, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6209, file: !3081, line: 1417, column: 19)
!6213 = !DILocation(line: 1419, column: 13, scope: !6212)
!6214 = !DILocation(line: 1420, column: 4, scope: !6212)
!6215 = !DILocation(line: 1421, column: 20, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6204, file: !3081, line: 1421, column: 14)
!6217 = !DILocation(line: 1421, column: 14, scope: !6204)
!6218 = !DILocation(line: 1431, column: 13, scope: !6133)
!6219 = !DILocation(line: 1431, column: 7, scope: !6075)
!6220 = !DILocation(line: 1432, column: 14, scope: !6132)
!6221 = !DILocation(line: 0, scope: !6132)
!6222 = !DILocation(line: 1434, column: 12, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6132, file: !3081, line: 1434, column: 8)
!6224 = !DILocation(line: 1434, column: 8, scope: !6132)
!6225 = !DILocation(line: 1435, column: 24, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6223, file: !3081, line: 1434, column: 17)
!6227 = !DILocation(line: 1436, column: 4, scope: !6226)
!6228 = !DILocation(line: 1439, column: 20, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6133, file: !3081, line: 1439, column: 14)
!6230 = !DILocation(line: 1439, column: 14, scope: !6133)
!6231 = !DILocation(line: 1469, column: 37, scope: !6075)
!6232 = !DILocation(line: 1448, column: 20, scope: !6075)
!6233 = !DILocation(line: 1449, column: 22, scope: !6075)
!6234 = !DILocation(line: 1471, column: 34, scope: !6075)
!6235 = !DILocation(line: 1478, column: 7, scope: !6075)
!6236 = !DILocation(line: 1479, column: 4, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !3081, line: 1478, column: 40)
!6238 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1478, column: 7)
!6239 = !DILocation(line: 1484, column: 19, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6237, file: !3081, line: 1479, column: 24)
!6241 = !DILocation(line: 1484, column: 17, scope: !6240)
!6242 = !DILocation(line: 1485, column: 5, scope: !6240)
!6243 = !DILocation(line: 1492, column: 20, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !3081, line: 1491, column: 12)
!6245 = distinct !DILexicalBlock(scope: !6240, file: !3081, line: 1487, column: 9)
!6246 = !DILocation(line: 1492, column: 18, scope: !6244)
!6247 = !DILocation(line: 1494, column: 5, scope: !6240)
!6248 = !DILocation(line: 1497, column: 23, scope: !6240)
!6249 = !DILocation(line: 1496, column: 17, scope: !6240)
!6250 = !DILocation(line: 1498, column: 5, scope: !6240)
!6251 = !DILocation(line: 1501, column: 23, scope: !6240)
!6252 = !DILocation(line: 1500, column: 17, scope: !6240)
!6253 = !DILocation(line: 1502, column: 5, scope: !6240)
!6254 = !DILocation(line: 1513, column: 23, scope: !6240)
!6255 = !DILocation(line: 1513, column: 6, scope: !6240)
!6256 = !DILocation(line: 1512, column: 17, scope: !6240)
!6257 = !DILocation(line: 1514, column: 5, scope: !6240)
!6258 = !DILocation(line: 0, scope: !6240)
!6259 = !DILocation(line: 1516, column: 8, scope: !6237)
!6260 = !DILocation(line: 1517, column: 19, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6262, file: !3081, line: 1516, column: 33)
!6262 = distinct !DILexicalBlock(scope: !6237, file: !3081, line: 1516, column: 8)
!6263 = !DILocation(line: 1517, column: 17, scope: !6261)
!6264 = !DILocation(line: 1518, column: 4, scope: !6261)
!6265 = !DILocation(line: 1519, column: 19, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6267, file: !3081, line: 1518, column: 39)
!6267 = distinct !DILexicalBlock(scope: !6262, file: !3081, line: 1518, column: 15)
!6268 = !DILocation(line: 1519, column: 17, scope: !6266)
!6269 = !DILocation(line: 1520, column: 4, scope: !6266)
!6270 = !DILocation(line: 1522, column: 4, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6272, file: !3081, line: 1521, column: 47)
!6272 = distinct !DILexicalBlock(scope: !6238, file: !3081, line: 1521, column: 14)
!6273 = !DILocation(line: 1527, column: 19, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6271, file: !3081, line: 1522, column: 24)
!6275 = !DILocation(line: 1527, column: 17, scope: !6274)
!6276 = !DILocation(line: 1528, column: 5, scope: !6274)
!6277 = !DILocation(line: 0, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6274, file: !3081, line: 1530, column: 9)
!6279 = !DILocation(line: 1540, column: 23, scope: !6274)
!6280 = !DILocation(line: 1539, column: 17, scope: !6274)
!6281 = !DILocation(line: 1542, column: 5, scope: !6274)
!6282 = !DILocation(line: 1545, column: 23, scope: !6274)
!6283 = !DILocation(line: 1544, column: 17, scope: !6274)
!6284 = !DILocation(line: 1547, column: 5, scope: !6274)
!6285 = !DILocation(line: 1551, column: 23, scope: !6274)
!6286 = !DILocation(line: 1551, column: 6, scope: !6274)
!6287 = !DILocation(line: 1550, column: 17, scope: !6274)
!6288 = !DILocation(line: 1552, column: 5, scope: !6274)
!6289 = !DILocation(line: 0, scope: !6274)
!6290 = !DILocation(line: 1554, column: 8, scope: !6271)
!6291 = !DILocation(line: 1555, column: 19, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !3081, line: 1554, column: 33)
!6293 = distinct !DILexicalBlock(scope: !6271, file: !3081, line: 1554, column: 8)
!6294 = !DILocation(line: 1555, column: 17, scope: !6292)
!6295 = !DILocation(line: 1556, column: 4, scope: !6292)
!6296 = !DILocation(line: 1557, column: 19, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6298, file: !3081, line: 1556, column: 39)
!6298 = distinct !DILexicalBlock(scope: !6293, file: !3081, line: 1556, column: 15)
!6299 = !DILocation(line: 1557, column: 17, scope: !6297)
!6300 = !DILocation(line: 1558, column: 4, scope: !6297)
!6301 = !DILocation(line: 0, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6303, file: !3081, line: 1560, column: 8)
!6303 = distinct !DILexicalBlock(scope: !6304, file: !3081, line: 1559, column: 45)
!6304 = distinct !DILexicalBlock(scope: !6272, file: !3081, line: 1559, column: 14)
!6305 = !DILocation(line: 1566, column: 17, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !3081, line: 1565, column: 46)
!6307 = distinct !DILexicalBlock(scope: !6304, file: !3081, line: 1565, column: 14)
!6308 = !DILocation(line: 1566, column: 15, scope: !6306)
!6309 = !DILocation(line: 1567, column: 3, scope: !6306)
!6310 = !DILocation(line: 1574, column: 21, scope: !6139)
!6311 = !DILocation(line: 1575, column: 4, scope: !6137)
!6312 = !DILocation(line: 0, scope: !6137)
!6313 = !DILocation(line: 1575, column: 4, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6137, file: !3081, line: 1575, column: 4)
!6315 = !DILocation(line: 1582, column: 17, scope: !6075)
!6316 = !DILocation(line: 1582, column: 3, scope: !6075)
!6317 = !DILocation(line: 1584, column: 4, scope: !6141)
!6318 = !DILocation(line: 0, scope: !6141)
!6319 = !DILocation(line: 1584, column: 4, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6141, file: !3081, line: 1584, column: 4)
!6321 = !DILocation(line: 1587, column: 31, scope: !6144)
!6322 = !DILocation(line: 1591, column: 18, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6144, file: !3081, line: 1591, column: 8)
!6324 = !DILocation(line: 1591, column: 8, scope: !6144)
!6325 = !DILocation(line: 1592, column: 11, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6323, file: !3081, line: 1591, column: 24)
!6327 = !DILocation(line: 0, scope: !6144)
!6328 = !DILocation(line: 1593, column: 4, scope: !6326)
!6329 = !DILocation(line: 1594, column: 11, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6323, file: !3081, line: 1593, column: 11)
!6331 = !DILocation(line: 1604, column: 51, scope: !6142)
!6332 = !DILocation(line: 1604, column: 13, scope: !6142)
!6333 = !DILocation(line: 1604, column: 11, scope: !6142)
!6334 = !DILocation(line: 1606, column: 4, scope: !6142)
!6335 = !DILocation(line: 1609, column: 14, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6142, file: !3081, line: 1609, column: 8)
!6337 = !DILocation(line: 1609, column: 8, scope: !6142)
!6338 = !DILocation(line: 1619, column: 18, scope: !6142)
!6339 = !DILocation(line: 1620, column: 13, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6142, file: !3081, line: 1620, column: 8)
!6341 = !DILocation(line: 1620, column: 8, scope: !6142)
!6342 = !DILocation(line: 1622, column: 36, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6340, file: !3081, line: 1620, column: 18)
!6344 = !DILocation(line: 1622, column: 17, scope: !6343)
!6345 = !DILocation(line: 1623, column: 4, scope: !6343)
!6346 = !DILocation(line: 1632, column: 29, scope: !6142)
!6347 = !DILocation(line: 1632, column: 10, scope: !6142)
!6348 = !DILocation(line: 1632, column: 4, scope: !6142)
!6349 = !DILocation(line: 1407, column: 8, scope: !6075)
!6350 = !DILocation(line: 0, scope: !6142)
!6351 = !DILocation(line: 1634, column: 3, scope: !6142)
!6352 = !DILocation(line: 1640, column: 18, scope: !6147)
!6353 = !DILocation(line: 1640, column: 8, scope: !6142)
!6354 = !DILocation(line: 1729, column: 13, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1729, column: 7)
!6356 = !DILocation(line: 1641, column: 22, scope: !6146)
!6357 = !DILocation(line: 0, scope: !6146)
!6358 = !DILocation(line: 1646, column: 21, scope: !6146)
!6359 = !DILocation(line: 1649, column: 13, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6146, file: !3081, line: 1649, column: 9)
!6361 = !DILocation(line: 1649, column: 9, scope: !6146)
!6362 = !DILocation(line: 1650, column: 35, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6360, file: !3081, line: 1649, column: 34)
!6364 = !DILocation(line: 1650, column: 23, scope: !6363)
!6365 = !DILocation(line: 1651, column: 5, scope: !6363)
!6366 = !DILocation(line: 1660, column: 15, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6142, file: !3081, line: 1660, column: 8)
!6368 = !DILocation(line: 1660, column: 19, scope: !6367)
!6369 = !DILocation(line: 1660, column: 8, scope: !6142)
!6370 = !DILocation(line: 1661, column: 23, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6367, file: !3081, line: 1660, column: 28)
!6372 = !DILocation(line: 1661, column: 11, scope: !6371)
!6373 = !DILocation(line: 1665, column: 22, scope: !6371)
!6374 = !DILocation(line: 1666, column: 21, scope: !6371)
!6375 = !DILocation(line: 1668, column: 5, scope: !6371)
!6376 = !DILocation(line: 1677, column: 30, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6378, file: !3081, line: 1676, column: 49)
!6378 = distinct !DILexicalBlock(scope: !6142, file: !3081, line: 1676, column: 8)
!6379 = !DILocation(line: 1677, column: 5, scope: !6377)
!6380 = !DILocation(line: 1680, column: 4, scope: !6142)
!6381 = !DILocation(line: 0, scope: !6323)
!6382 = !DILocation(line: 1597, column: 14, scope: !6144)
!6383 = !DILocation(line: 1699, column: 11, scope: !6384)
!6384 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1699, column: 7)
!6385 = !DILocation(line: 1699, column: 7, scope: !6075)
!6386 = !DILocation(line: 1725, column: 7, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1725, column: 7)
!6388 = !DILocation(line: 1725, column: 12, scope: !6387)
!6389 = !DILocation(line: 1747, column: 13, scope: !6154)
!6390 = !DILocation(line: 1747, column: 7, scope: !6075)
!6391 = !DILocation(line: 1722, column: 24, scope: !6075)
!6392 = !DILocation(line: 1725, column: 7, scope: !6075)
!6393 = !DILocation(line: 1729, column: 7, scope: !6075)
!6394 = !DILocation(line: 1736, column: 13, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6075, file: !3081, line: 1736, column: 7)
!6396 = !DILocation(line: 1735, column: 19, scope: !6075)
!6397 = !DILocation(line: 1736, column: 7, scope: !6075)
!6398 = !DILocation(line: 1748, column: 10, scope: !6153)
!6399 = !DILocation(line: 1750, column: 15, scope: !6152)
!6400 = !DILocation(line: 1750, column: 8, scope: !6153)
!6401 = !DILocation(line: 0, scope: !6151)
!6402 = !DILocation(line: 1756, column: 15, scope: !6160)
!6403 = !DILocation(line: 1756, column: 9, scope: !6151)
!6404 = !DILocation(line: 1758, column: 7, scope: !6156)
!6405 = !DILocation(line: 0, scope: !6156)
!6406 = !DILocation(line: 1758, column: 7, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6156, file: !3081, line: 1758, column: 7)
!6408 = !DILocation(line: 1764, column: 5, scope: !6151)
!6409 = !DILocation(line: 0, scope: !6153)
!6410 = !DILocation(line: 1764, column: 20, scope: !6151)
!6411 = !DILocation(line: 1764, column: 17, scope: !6151)
!6412 = !DILocation(line: 1765, column: 6, scope: !6162)
!6413 = !DILocation(line: 0, scope: !6162)
!6414 = !DILocation(line: 1765, column: 6, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6162, file: !3081, line: 1765, column: 6)
!6416 = distinct !{!6416, !6408, !6417}
!6417 = !DILocation(line: 1766, column: 5, scope: !6151)
!6418 = !DILocation(line: 1773, column: 12, scope: !6167)
!6419 = !DILocation(line: 1773, column: 7, scope: !6075)
!6420 = !DILocation(line: 1773, column: 7, scope: !6167)
!6421 = !DILocation(line: 1774, column: 4, scope: !6165)
!6422 = !DILocation(line: 0, scope: !6165)
!6423 = !DILocation(line: 1774, column: 4, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6165, file: !3081, line: 1774, column: 4)
!6425 = !DILocation(line: 1818, column: 8, scope: !6171)
!6426 = !DILocation(line: 1818, column: 27, scope: !6171)
!6427 = !DILocation(line: 1818, column: 25, scope: !6171)
!6428 = !DILocation(line: 1818, column: 8, scope: !6172)
!6429 = !DILocation(line: 1819, column: 5, scope: !6169)
!6430 = !DILocation(line: 0, scope: !6169)
!6431 = !DILocation(line: 1819, column: 5, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6169, file: !3081, line: 1819, column: 5)
!6433 = !DILocation(line: 1822, column: 14, scope: !6177)
!6434 = !DILocation(line: 1822, column: 8, scope: !6172)
!6435 = !DILocation(line: 1823, column: 5, scope: !6175)
!6436 = !DILocation(line: 0, scope: !6175)
!6437 = !DILocation(line: 1823, column: 5, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6175, file: !3081, line: 1823, column: 5)
!6439 = !DILocation(line: 1826, column: 20, scope: !6172)
!6440 = !DILocation(line: 1827, column: 4, scope: !6172)
!6441 = !DILocation(line: 0, scope: !6172)
!6442 = !DILocation(line: 1827, column: 21, scope: !6172)
!6443 = !DILocation(line: 1827, column: 18, scope: !6172)
!6444 = !DILocation(line: 1828, column: 5, scope: !6179)
!6445 = !DILocation(line: 0, scope: !6179)
!6446 = !DILocation(line: 1828, column: 5, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6179, file: !3081, line: 1828, column: 5)
!6448 = distinct !{!6448, !6440, !6449}
!6449 = !DILocation(line: 1829, column: 4, scope: !6172)
!6450 = !DILocation(line: 1831, column: 4, scope: !6182)
!6451 = !DILocation(line: 0, scope: !6182)
!6452 = !DILocation(line: 1831, column: 4, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6182, file: !3081, line: 1831, column: 4)
!6454 = !DILocation(line: 1835, column: 16, scope: !6075)
!6455 = !DILocation(line: 1835, column: 3, scope: !6075)
!6456 = !DILocation(line: 1836, column: 4, scope: !6184)
!6457 = !DILocation(line: 0, scope: !6184)
!6458 = !DILocation(line: 1836, column: 4, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6184, file: !3081, line: 1836, column: 4)
!6460 = !DILocation(line: 1837, column: 4, scope: !6185)
!6461 = distinct !{!6461, !6455, !6462}
!6462 = !DILocation(line: 1838, column: 3, scope: !6075)
!6463 = !DILocation(line: 1844, column: 1, scope: !6048)
!6464 = distinct !DISubprogram(name: "extract_conversion", scope: !3081, file: !3081, line: 642, type: !6465, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6467)
!6465 = !DISubroutineType(types: !6466)
!6466 = !{!108, !6121, !108}
!6467 = !{!6468, !6469}
!6468 = !DILocalVariable(name: "conv", arg: 1, scope: !6464, file: !3081, line: 642, type: !6121)
!6469 = !DILocalVariable(name: "sp", arg: 2, scope: !6464, file: !3081, line: 643, type: !108)
!6470 = !DILocation(line: 0, scope: !6464)
!6471 = !DILocation(line: 645, column: 10, scope: !6464)
!6472 = !DILocation(line: 653, column: 2, scope: !6464)
!6473 = !DILocation(line: 654, column: 6, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6464, file: !3081, line: 654, column: 6)
!6475 = !DILocation(line: 654, column: 10, scope: !6474)
!6476 = !DILocation(line: 654, column: 6, scope: !6464)
!6477 = !DILocation(line: 655, column: 24, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6474, file: !3081, line: 654, column: 18)
!6479 = !DILocation(line: 655, column: 19, scope: !6478)
!6480 = !DILocation(line: 656, column: 3, scope: !6478)
!6481 = !DILocation(line: 659, column: 7, scope: !6464)
!6482 = !DILocation(line: 660, column: 7, scope: !6464)
!6483 = !DILocation(line: 661, column: 7, scope: !6464)
!6484 = !DILocation(line: 662, column: 7, scope: !6464)
!6485 = !DILocation(line: 663, column: 7, scope: !6464)
!6486 = !DILocation(line: 665, column: 2, scope: !6464)
!6487 = !DILocation(line: 666, column: 1, scope: !6464)
!6488 = distinct !DISubprogram(name: "outs", scope: !3081, file: !3081, line: 1319, type: !6489, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6491)
!6489 = !DISubroutineType(types: !6490)
!6490 = !{!103, !4416, !102, !108, !108}
!6491 = !{!6492, !6493, !6494, !6495, !6496, !6497}
!6492 = !DILocalVariable(name: "out", arg: 1, scope: !6488, file: !3081, line: 1319, type: !4416)
!6493 = !DILocalVariable(name: "ctx", arg: 2, scope: !6488, file: !3081, line: 1320, type: !102)
!6494 = !DILocalVariable(name: "sp", arg: 3, scope: !6488, file: !3081, line: 1321, type: !108)
!6495 = !DILocalVariable(name: "ep", arg: 4, scope: !6488, file: !3081, line: 1322, type: !108)
!6496 = !DILocalVariable(name: "count", scope: !6488, file: !3081, line: 1324, type: !156)
!6497 = !DILocalVariable(name: "rc", scope: !6498, file: !3081, line: 1327, type: !103)
!6498 = distinct !DILexicalBlock(scope: !6488, file: !3081, line: 1326, column: 45)
!6499 = !DILocation(line: 0, scope: !6488)
!6500 = !DILocation(line: 1326, column: 2, scope: !6488)
!6501 = !DILocation(line: 1324, column: 9, scope: !6488)
!6502 = !DILocation(line: 1326, column: 13, scope: !6488)
!6503 = !DILocation(line: 1326, column: 19, scope: !6488)
!6504 = !DILocation(line: 1327, column: 21, scope: !6498)
!6505 = !DILocation(line: 1326, column: 36, scope: !6488)
!6506 = !DILocation(line: 1326, column: 39, scope: !6488)
!6507 = !DILocation(line: 1327, column: 24, scope: !6498)
!6508 = !DILocation(line: 1327, column: 16, scope: !6498)
!6509 = !DILocation(line: 1327, column: 12, scope: !6498)
!6510 = !DILocation(line: 0, scope: !6498)
!6511 = !DILocation(line: 1329, column: 10, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6498, file: !3081, line: 1329, column: 7)
!6513 = !DILocation(line: 1329, column: 7, scope: !6498)
!6514 = distinct !{!6514, !6500, !6515}
!6515 = !DILocation(line: 1333, column: 2, scope: !6488)
!6516 = !DILocation(line: 1336, column: 1, scope: !6488)
!6517 = distinct !DISubprogram(name: "encode_uint", scope: !3081, file: !3081, line: 788, type: !6518, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6520)
!6518 = !DISubroutineType(types: !6519)
!6519 = !{!160, !3103, !6121, !160, !108}
!6520 = !{!6521, !6522, !6523, !6524, !6525, !6526, !6528, !6529}
!6521 = !DILocalVariable(name: "value", arg: 1, scope: !6517, file: !3081, line: 788, type: !3103)
!6522 = !DILocalVariable(name: "conv", arg: 2, scope: !6517, file: !3081, line: 789, type: !6121)
!6523 = !DILocalVariable(name: "bps", arg: 3, scope: !6517, file: !3081, line: 790, type: !160)
!6524 = !DILocalVariable(name: "bpe", arg: 4, scope: !6517, file: !3081, line: 791, type: !108)
!6525 = !DILocalVariable(name: "upcase", scope: !6517, file: !3081, line: 793, type: !122)
!6526 = !DILocalVariable(name: "radix", scope: !6517, file: !3081, line: 794, type: !6527)
!6527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!6528 = !DILocalVariable(name: "bp", scope: !6517, file: !3081, line: 795, type: !160)
!6529 = !DILocalVariable(name: "lsv", scope: !6530, file: !3081, line: 798, type: !32)
!6530 = distinct !DILexicalBlock(scope: !6517, file: !3081, line: 797, column: 5)
!6531 = !DILocation(line: 0, scope: !6517)
!6532 = !DILocation(line: 793, column: 35, scope: !6517)
!6533 = !DILocation(line: 793, column: 24, scope: !6517)
!6534 = !DILocation(line: 793, column: 16, scope: !6517)
!6535 = !DILocation(line: 794, column: 29, scope: !6517)
!6536 = !DILocation(line: 795, column: 24, scope: !6517)
!6537 = !DILocation(line: 795, column: 17, scope: !6517)
!6538 = !DILocation(line: 797, column: 2, scope: !6517)
!6539 = !DILocation(line: 802, column: 9, scope: !6530)
!6540 = !DILocation(line: 798, column: 22, scope: !6530)
!6541 = !DILocation(line: 0, scope: !6530)
!6542 = !DILocation(line: 800, column: 16, scope: !6530)
!6543 = !DILocation(line: 800, column: 11, scope: !6530)
!6544 = !DILocation(line: 800, column: 4, scope: !6530)
!6545 = !DILocation(line: 800, column: 9, scope: !6530)
!6546 = !DILocation(line: 803, column: 18, scope: !6517)
!6547 = !DILocation(line: 803, column: 24, scope: !6517)
!6548 = !DILocation(line: 803, column: 2, scope: !6530)
!6549 = distinct !{!6549, !6538, !6550}
!6550 = !DILocation(line: 803, column: 37, scope: !6517)
!6551 = !DILocation(line: 808, column: 12, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6517, file: !3081, line: 808, column: 6)
!6553 = !DILocation(line: 808, column: 6, scope: !6517)
!6554 = !DILocation(line: 809, column: 7, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6552, file: !3081, line: 808, column: 23)
!6556 = !DILocation(line: 813, column: 3, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6558, file: !3081, line: 811, column: 27)
!6558 = distinct !DILexicalBlock(scope: !6559, file: !3081, line: 811, column: 14)
!6559 = distinct !DILexicalBlock(scope: !6555, file: !3081, line: 809, column: 7)
!6560 = !DILocation(line: 0, scope: !6559)
!6561 = !DILocation(line: 818, column: 2, scope: !6517)
!6562 = distinct !DISubprogram(name: "store_count", scope: !3081, file: !3081, line: 1280, type: !6563, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6567)
!6563 = !DISubroutineType(types: !6564)
!6564 = !{null, !6565, !102, !103}
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6566, size: 32)
!6566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6088)
!6567 = !{!6568, !6569, !6570}
!6568 = !DILocalVariable(name: "conv", arg: 1, scope: !6562, file: !3081, line: 1280, type: !6565)
!6569 = !DILocalVariable(name: "dp", arg: 2, scope: !6562, file: !3081, line: 1281, type: !102)
!6570 = !DILocalVariable(name: "count", arg: 3, scope: !6562, file: !3081, line: 1282, type: !103)
!6571 = !DILocation(line: 0, scope: !6562)
!6572 = !DILocation(line: 1284, column: 38, scope: !6562)
!6573 = !DILocation(line: 1284, column: 2, scope: !6562)
!6574 = !DILocation(line: 1286, column: 4, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6562, file: !3081, line: 1284, column: 50)
!6576 = !DILocation(line: 1286, column: 14, scope: !6575)
!6577 = !DILocation(line: 1287, column: 3, scope: !6575)
!6578 = !DILocation(line: 1289, column: 24, scope: !6575)
!6579 = !DILocation(line: 1289, column: 22, scope: !6575)
!6580 = !DILocation(line: 1290, column: 3, scope: !6575)
!6581 = !DILocation(line: 1292, column: 18, scope: !6575)
!6582 = !DILocation(line: 1292, column: 4, scope: !6575)
!6583 = !DILocation(line: 1292, column: 16, scope: !6575)
!6584 = !DILocation(line: 1293, column: 3, scope: !6575)
!6585 = !DILocation(line: 1295, column: 4, scope: !6575)
!6586 = !DILocation(line: 1295, column: 15, scope: !6575)
!6587 = !DILocation(line: 1296, column: 3, scope: !6575)
!6588 = !DILocation(line: 1298, column: 22, scope: !6575)
!6589 = !DILocation(line: 1298, column: 4, scope: !6575)
!6590 = !DILocation(line: 1298, column: 20, scope: !6575)
!6591 = !DILocation(line: 1299, column: 3, scope: !6575)
!6592 = !DILocation(line: 1301, column: 21, scope: !6575)
!6593 = !DILocation(line: 1301, column: 4, scope: !6575)
!6594 = !DILocation(line: 1301, column: 19, scope: !6575)
!6595 = !DILocation(line: 1302, column: 3, scope: !6575)
!6596 = !DILocation(line: 1304, column: 4, scope: !6575)
!6597 = !DILocation(line: 1304, column: 17, scope: !6575)
!6598 = !DILocation(line: 1305, column: 3, scope: !6575)
!6599 = !DILocation(line: 1307, column: 4, scope: !6575)
!6600 = !DILocation(line: 1307, column: 20, scope: !6575)
!6601 = !DILocation(line: 1308, column: 3, scope: !6575)
!6602 = !DILocation(line: 1316, column: 1, scope: !6562)
!6603 = distinct !DISubprogram(name: "isupper", scope: !6604, file: !6604, line: 16, type: !764, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6605)
!6604 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6605 = !{!6606}
!6606 = !DILocalVariable(name: "a", arg: 1, scope: !6603, file: !6604, line: 16, type: !103)
!6607 = !DILocation(line: 0, scope: !6603)
!6608 = !DILocation(line: 18, column: 29, scope: !6603)
!6609 = !DILocation(line: 18, column: 45, scope: !6603)
!6610 = !DILocation(line: 18, column: 2, scope: !6603)
!6611 = distinct !DISubprogram(name: "conversion_radix", scope: !3081, file: !3081, line: 761, type: !6612, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6614)
!6612 = !DISubroutineType(types: !6613)
!6613 = !{!156, !110}
!6614 = !{!6615}
!6615 = !DILocalVariable(name: "specifier", arg: 1, scope: !6611, file: !3081, line: 761, type: !110)
!6616 = !DILocation(line: 0, scope: !6611)
!6617 = !DILocation(line: 763, column: 2, scope: !6611)
!6618 = !DILocation(line: 770, column: 3, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6611, file: !3081, line: 763, column: 21)
!6620 = !DILocation(line: 774, column: 3, scope: !6619)
!6621 = !DILocation(line: 0, scope: !6619)
!6622 = !DILocation(line: 776, column: 1, scope: !6611)
!6623 = distinct !DISubprogram(name: "extract_flags", scope: !3081, file: !3081, line: 339, type: !6465, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6624)
!6624 = !{!6625, !6626, !6627}
!6625 = !DILocalVariable(name: "conv", arg: 1, scope: !6623, file: !3081, line: 339, type: !6121)
!6626 = !DILocalVariable(name: "sp", arg: 2, scope: !6623, file: !3081, line: 340, type: !108)
!6627 = !DILocalVariable(name: "loop", scope: !6623, file: !3081, line: 342, type: !122)
!6628 = !DILocation(line: 0, scope: !6623)
!6629 = !DILocation(line: 344, column: 2, scope: !6623)
!6630 = !DILocation(line: 345, column: 11, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6623, file: !3081, line: 344, column: 5)
!6632 = !DILocation(line: 345, column: 3, scope: !6631)
!6633 = !DILocation(line: 351, column: 4, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6631, file: !3081, line: 345, column: 16)
!6635 = !DILocation(line: 354, column: 4, scope: !6634)
!6636 = !DILocation(line: 357, column: 4, scope: !6634)
!6637 = !DILocation(line: 360, column: 4, scope: !6634)
!6638 = !DILocation(line: 0, scope: !6634)
!6639 = !DILocation(line: 370, column: 12, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6623, file: !3081, line: 370, column: 6)
!6641 = !DILocation(line: 370, column: 22, scope: !6640)
!6642 = !DILocation(line: 371, column: 19, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6640, file: !3081, line: 370, column: 42)
!6644 = !DILocation(line: 372, column: 2, scope: !6643)
!6645 = !DILocation(line: 376, column: 2, scope: !6623)
!6646 = distinct !DISubprogram(name: "extract_width", scope: !3081, file: !3081, line: 388, type: !6465, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6647)
!6647 = !{!6648, !6649, !6650, !6651}
!6648 = !DILocalVariable(name: "conv", arg: 1, scope: !6646, file: !3081, line: 388, type: !6121)
!6649 = !DILocalVariable(name: "sp", arg: 2, scope: !6646, file: !3081, line: 389, type: !108)
!6650 = !DILocalVariable(name: "wp", scope: !6646, file: !3081, line: 398, type: !108)
!6651 = !DILocalVariable(name: "width", scope: !6646, file: !3081, line: 399, type: !156)
!6652 = !DILocation(line: 0, scope: !6646)
!6653 = !DILocation(line: 391, column: 8, scope: !6646)
!6654 = !DILocation(line: 391, column: 22, scope: !6646)
!6655 = !DILocation(line: 393, column: 6, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6646, file: !3081, line: 393, column: 6)
!6657 = !DILocation(line: 393, column: 10, scope: !6656)
!6658 = !DILocation(line: 393, column: 6, scope: !6646)
!6659 = !DILocation(line: 394, column: 20, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6656, file: !3081, line: 393, column: 18)
!6661 = !DILocation(line: 395, column: 10, scope: !6660)
!6662 = !DILocation(line: 395, column: 3, scope: !6660)
!6663 = !DILocation(line: 399, column: 17, scope: !6646)
!6664 = !DILocation(line: 401, column: 6, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6646, file: !3081, line: 401, column: 6)
!6666 = !DILocation(line: 401, column: 9, scope: !6665)
!6667 = !DILocation(line: 401, column: 6, scope: !6646)
!6668 = !DILocation(line: 402, column: 23, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6665, file: !3081, line: 401, column: 16)
!6670 = !DILocation(line: 403, column: 9, scope: !6669)
!6671 = !DILocation(line: 403, column: 21, scope: !6669)
!6672 = !DILocation(line: 405, column: 11, scope: !6669)
!6673 = !DILocation(line: 404, column: 21, scope: !6669)
!6674 = !DILocation(line: 406, column: 2, scope: !6669)
!6675 = !DILocation(line: 409, column: 1, scope: !6646)
!6676 = distinct !DISubprogram(name: "extract_prec", scope: !3081, file: !3081, line: 420, type: !6465, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6677)
!6677 = !{!6678, !6679, !6680}
!6678 = !DILocalVariable(name: "conv", arg: 1, scope: !6676, file: !3081, line: 420, type: !6121)
!6679 = !DILocalVariable(name: "sp", arg: 2, scope: !6676, file: !3081, line: 421, type: !108)
!6680 = !DILocalVariable(name: "prec", scope: !6676, file: !3081, line: 435, type: !156)
!6681 = !DILocation(line: 0, scope: !6676)
!6682 = !DILocation(line: 423, column: 24, scope: !6676)
!6683 = !DILocation(line: 423, column: 28, scope: !6676)
!6684 = !DILocation(line: 423, column: 8, scope: !6676)
!6685 = !DILocation(line: 423, column: 21, scope: !6676)
!6686 = !DILocation(line: 425, column: 6, scope: !6676)
!6687 = !DILocation(line: 428, column: 2, scope: !6676)
!6688 = !DILocation(line: 430, column: 6, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6676, file: !3081, line: 430, column: 6)
!6690 = !DILocation(line: 430, column: 10, scope: !6689)
!6691 = !DILocation(line: 430, column: 6, scope: !6676)
!6692 = !DILocation(line: 431, column: 19, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6689, file: !3081, line: 430, column: 18)
!6694 = !DILocation(line: 432, column: 10, scope: !6693)
!6695 = !DILocation(line: 432, column: 3, scope: !6693)
!6696 = !DILocation(line: 435, column: 16, scope: !6676)
!6697 = !DILocation(line: 437, column: 8, scope: !6676)
!6698 = !DILocation(line: 437, column: 19, scope: !6676)
!6699 = !DILocation(line: 439, column: 10, scope: !6676)
!6700 = !DILocation(line: 438, column: 20, scope: !6676)
!6701 = !DILocation(line: 441, column: 9, scope: !6676)
!6702 = !DILocation(line: 442, column: 1, scope: !6676)
!6703 = distinct !DISubprogram(name: "extract_length", scope: !3081, file: !3081, line: 453, type: !6465, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6704)
!6704 = !{!6705, !6706}
!6705 = !DILocalVariable(name: "conv", arg: 1, scope: !6703, file: !3081, line: 453, type: !6121)
!6706 = !DILocalVariable(name: "sp", arg: 2, scope: !6703, file: !3081, line: 454, type: !108)
!6707 = !DILocation(line: 0, scope: !6703)
!6708 = !DILocation(line: 456, column: 10, scope: !6703)
!6709 = !DILocation(line: 456, column: 2, scope: !6703)
!6710 = !DILocation(line: 458, column: 8, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !3081, line: 458, column: 7)
!6712 = distinct !DILexicalBlock(scope: !6703, file: !3081, line: 456, column: 15)
!6713 = !DILocation(line: 458, column: 7, scope: !6711)
!6714 = !DILocation(line: 458, column: 13, scope: !6711)
!6715 = !DILocation(line: 0, scope: !6711)
!6716 = !DILocation(line: 458, column: 7, scope: !6712)
!6717 = !DILocation(line: 459, column: 21, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6711, file: !3081, line: 458, column: 21)
!6719 = !DILocation(line: 460, column: 4, scope: !6718)
!6720 = !DILocation(line: 461, column: 3, scope: !6718)
!6721 = !DILocation(line: 462, column: 21, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6711, file: !3081, line: 461, column: 10)
!6723 = !DILocation(line: 466, column: 8, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6712, file: !3081, line: 466, column: 7)
!6725 = !DILocation(line: 466, column: 7, scope: !6724)
!6726 = !DILocation(line: 466, column: 13, scope: !6724)
!6727 = !DILocation(line: 0, scope: !6724)
!6728 = !DILocation(line: 466, column: 7, scope: !6712)
!6729 = !DILocation(line: 467, column: 21, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6724, file: !3081, line: 466, column: 21)
!6731 = !DILocation(line: 468, column: 4, scope: !6730)
!6732 = !DILocation(line: 469, column: 3, scope: !6730)
!6733 = !DILocation(line: 470, column: 21, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6724, file: !3081, line: 469, column: 10)
!6735 = !DILocation(line: 474, column: 9, scope: !6712)
!6736 = !DILocation(line: 474, column: 20, scope: !6712)
!6737 = !DILocation(line: 475, column: 3, scope: !6712)
!6738 = !DILocation(line: 476, column: 3, scope: !6712)
!6739 = !DILocation(line: 478, column: 9, scope: !6712)
!6740 = !DILocation(line: 478, column: 20, scope: !6712)
!6741 = !DILocation(line: 479, column: 3, scope: !6712)
!6742 = !DILocation(line: 480, column: 3, scope: !6712)
!6743 = !DILocation(line: 482, column: 9, scope: !6712)
!6744 = !DILocation(line: 482, column: 20, scope: !6712)
!6745 = !DILocation(line: 483, column: 3, scope: !6712)
!6746 = !DILocation(line: 484, column: 3, scope: !6712)
!6747 = !DILocation(line: 486, column: 9, scope: !6712)
!6748 = !DILocation(line: 486, column: 20, scope: !6712)
!6749 = !DILocation(line: 487, column: 3, scope: !6712)
!6750 = !DILocation(line: 492, column: 21, scope: !6712)
!6751 = !DILocation(line: 493, column: 3, scope: !6712)
!6752 = !DILocation(line: 495, column: 9, scope: !6712)
!6753 = !DILocation(line: 495, column: 20, scope: !6712)
!6754 = !DILocation(line: 496, column: 3, scope: !6712)
!6755 = !DILocation(line: 498, column: 2, scope: !6703)
!6756 = distinct !DISubprogram(name: "extract_specifier", scope: !3081, file: !3081, line: 513, type: !6465, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6757)
!6757 = !{!6758, !6759, !6760, !6761}
!6758 = !DILocalVariable(name: "conv", arg: 1, scope: !6756, file: !3081, line: 513, type: !6121)
!6759 = !DILocalVariable(name: "sp", arg: 2, scope: !6756, file: !3081, line: 514, type: !108)
!6760 = !DILocalVariable(name: "unsupported", scope: !6756, file: !3081, line: 516, type: !122)
!6761 = !DILabel(scope: !6762, name: "int_conv", file: !3081, line: 526)
!6762 = distinct !DILexicalBlock(scope: !6756, file: !3081, line: 520, column: 27)
!6763 = !DILocation(line: 0, scope: !6756)
!6764 = !DILocation(line: 518, column: 20, scope: !6756)
!6765 = !DILocation(line: 518, column: 8, scope: !6756)
!6766 = !DILocation(line: 518, column: 18, scope: !6756)
!6767 = !DILocation(line: 520, column: 2, scope: !6756)
!6768 = !DILocation(line: 525, column: 3, scope: !6762)
!6769 = !DILocation(line: 0, scope: !6762)
!6770 = !DILocation(line: 526, column: 1, scope: !6762)
!6771 = !DILocation(line: 528, column: 24, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6762, file: !3081, line: 528, column: 7)
!6773 = !DILocation(line: 528, column: 7, scope: !6762)
!6774 = !DILocation(line: 535, column: 23, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6762, file: !3081, line: 535, column: 7)
!6776 = !DILocation(line: 535, column: 7, scope: !6762)
!6777 = !DILocation(line: 536, column: 36, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6775, file: !3081, line: 535, column: 31)
!6779 = !DILocation(line: 537, column: 3, scope: !6778)
!6780 = !DILocation(line: 570, column: 9, scope: !6762)
!6781 = !DILocation(line: 570, column: 23, scope: !6762)
!6782 = !DILocation(line: 575, column: 4, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !3081, line: 573, column: 48)
!6784 = distinct !DILexicalBlock(scope: !6762, file: !3081, line: 573, column: 7)
!6785 = !DILocation(line: 603, column: 9, scope: !6762)
!6786 = !DILocation(line: 603, column: 23, scope: !6762)
!6787 = !DILocation(line: 605, column: 24, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6762, file: !3081, line: 605, column: 7)
!6789 = !DILocation(line: 605, column: 7, scope: !6762)
!6790 = !DILocation(line: 612, column: 9, scope: !6762)
!6791 = !DILocation(line: 612, column: 23, scope: !6762)
!6792 = !DILocation(line: 619, column: 24, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6762, file: !3081, line: 619, column: 7)
!6794 = !DILocation(line: 619, column: 7, scope: !6762)
!6795 = !DILocation(line: 625, column: 9, scope: !6762)
!6796 = !DILocation(line: 625, column: 17, scope: !6762)
!6797 = !DILocation(line: 626, column: 3, scope: !6762)
!6798 = !DILocation(line: 629, column: 20, scope: !6756)
!6799 = !DILocation(line: 629, column: 8, scope: !6756)
!6800 = !DILocation(line: 518, column: 23, scope: !6756)
!6801 = !DILocation(line: 631, column: 2, scope: !6756)
!6802 = distinct !DISubprogram(name: "extract_decimal", scope: !3081, file: !3081, line: 318, type: !6803, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6805)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{!156, !743}
!6805 = !{!6806, !6807, !6808}
!6806 = !DILocalVariable(name: "str", arg: 1, scope: !6802, file: !3081, line: 318, type: !743)
!6807 = !DILocalVariable(name: "sp", scope: !6802, file: !3081, line: 320, type: !108)
!6808 = !DILocalVariable(name: "val", scope: !6802, file: !3081, line: 321, type: !156)
!6809 = !DILocation(line: 0, scope: !6802)
!6810 = !DILocation(line: 320, column: 19, scope: !6802)
!6811 = !DILocation(line: 323, column: 37, scope: !6802)
!6812 = !DILocation(line: 323, column: 17, scope: !6802)
!6813 = !DILocation(line: 323, column: 9, scope: !6802)
!6814 = !DILocation(line: 323, column: 2, scope: !6802)
!6815 = !DILocation(line: 324, column: 13, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6802, file: !3081, line: 323, column: 43)
!6817 = !DILocation(line: 324, column: 24, scope: !6816)
!6818 = !DILocation(line: 324, column: 19, scope: !6816)
!6819 = !DILocation(line: 324, column: 27, scope: !6816)
!6820 = distinct !{!6820, !6814, !6821}
!6821 = !DILocation(line: 325, column: 2, scope: !6802)
!6822 = !DILocation(line: 326, column: 7, scope: !6802)
!6823 = !DILocation(line: 327, column: 2, scope: !6802)
!6824 = distinct !DISubprogram(name: "isdigit", scope: !6604, file: !6604, line: 43, type: !764, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3077, retainedNodes: !6825)
!6825 = !{!6826}
!6826 = !DILocalVariable(name: "a", arg: 1, scope: !6824, file: !6604, line: 43, type: !103)
!6827 = !DILocation(line: 0, scope: !6824)
!6828 = !DILocation(line: 45, column: 29, scope: !6824)
!6829 = !DILocation(line: 45, column: 45, scope: !6824)
!6830 = !DILocation(line: 45, column: 2, scope: !6824)
!6831 = distinct !DISubprogram(name: "assert_post_action", scope: !6832, file: !6832, line: 26, type: !6833, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !6835)
!6832 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6833 = !DISubroutineType(types: !6834)
!6834 = !{null, !108, !32}
!6835 = !{!6836, !6837}
!6836 = !DILocalVariable(name: "file", arg: 1, scope: !6831, file: !6832, line: 26, type: !108)
!6837 = !DILocalVariable(name: "line", arg: 2, scope: !6831, file: !6832, line: 26, type: !32)
!6838 = !DILocation(line: 0, scope: !6831)
!6839 = !DILocation(line: 43, column: 2, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6831, file: !6832, line: 43, column: 2)
!6841 = !{i64 2152226092, i64 2152226108, i64 2152226134, i64 2152226162, i64 2152226182}
!6842 = !DILocation(line: 44, column: 1, scope: !6831)
!6843 = distinct !DISubprogram(name: "assert_print", scope: !6832, file: !6832, line: 46, type: !5026, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3111, retainedNodes: !6844)
!6844 = !{!6845, !6846}
!6845 = !DILocalVariable(name: "fmt", arg: 1, scope: !6843, file: !6832, line: 46, type: !108)
!6846 = !DILocalVariable(name: "ap", scope: !6843, file: !6832, line: 48, type: !6847)
!6847 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4034, line: 99, baseType: !6848)
!6848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4034, line: 40, baseType: !6849)
!6849 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6832, baseType: !6850)
!6850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6851)
!6851 = !{!6852}
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6850, file: !6832, line: 48, baseType: !102, size: 32)
!6853 = !DILocation(line: 0, scope: !6843)
!6854 = !DILocation(line: 48, column: 2, scope: !6843)
!6855 = !DILocation(line: 48, column: 10, scope: !6843)
!6856 = !DILocation(line: 50, column: 2, scope: !6843)
!6857 = !DILocation(line: 52, column: 2, scope: !6843)
!6858 = !DILocation(line: 54, column: 2, scope: !6843)
!6859 = !DILocation(line: 55, column: 1, scope: !6843)
!6860 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6861, file: !6861, line: 9, type: !323, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !2512)
!6861 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!6862 = !DILocation(line: 11, column: 1, scope: !6860)
!6863 = !{i64 2147564261, i64 2147564304, i64 2147564344}
!6864 = !DILocation(line: 12, column: 1, scope: !6860)
!6865 = !{i64 2147568488, i64 2147568531, i64 2147568571}
!6866 = !DILocation(line: 13, column: 1, scope: !6860)
!6867 = !{i64 2147568697, i64 2147568740, i64 2147568780}
!6868 = !DILocation(line: 14, column: 1, scope: !6860)
!6869 = !{i64 2147568866, i64 2147568909, i64 2147568949}
!6870 = !DILocation(line: 15, column: 1, scope: !6860)
!6871 = !{i64 2147569029, i64 2147569072, i64 2147569112}
!6872 = !DILocation(line: 16, column: 1, scope: !6860)
!6873 = !{i64 2147569213, i64 2147569256, i64 2147569296}
!6874 = !DILocation(line: 17, column: 1, scope: !6860)
!6875 = !{i64 2147569392, i64 2147569435, i64 2147569475}
!6876 = !DILocation(line: 18, column: 1, scope: !6860)
!6877 = !{i64 2147569634, i64 2147569677, i64 2147569717}
!6878 = !DILocation(line: 19, column: 1, scope: !6860)
!6879 = !{i64 2147569869, i64 2147569912, i64 2147569952}
!6880 = !DILocation(line: 20, column: 1, scope: !6860)
!6881 = !{i64 2147570055, i64 2147570098, i64 2147570138}
!6882 = !DILocation(line: 21, column: 1, scope: !6860)
!6883 = !{i64 2147570271, i64 2147570314, i64 2147570354}
!6884 = !DILocation(line: 22, column: 1, scope: !6860)
!6885 = !{i64 2147570474, i64 2147570517, i64 2147570557}
!6886 = !DILocation(line: 23, column: 1, scope: !6860)
!6887 = !{i64 2147570677, i64 2147570720, i64 2147570760}
!6888 = !DILocation(line: 24, column: 1, scope: !6860)
!6889 = !{i64 2147570852, i64 2147570895, i64 2147570935}
!6890 = !DILocation(line: 25, column: 1, scope: !6860)
!6891 = !{i64 2147571063, i64 2147571106, i64 2147571146}
!6892 = !DILocation(line: 26, column: 1, scope: !6860)
!6893 = !{i64 2147571267, i64 2147571310, i64 2147571350}
!6894 = !DILocation(line: 27, column: 1, scope: !6860)
!6895 = !{i64 2147571460, i64 2147571503, i64 2147571543}
!6896 = !DILocation(line: 28, column: 1, scope: !6860)
!6897 = !{i64 2147571662, i64 2147571705, i64 2147571745}
!6898 = !DILocation(line: 29, column: 1, scope: !6860)
!6899 = !{i64 2147571861, i64 2147571904, i64 2147571944}
!6900 = !DILocation(line: 30, column: 1, scope: !6860)
!6901 = !{i64 2147572088, i64 2147572131, i64 2147572171}
!6902 = !DILocation(line: 31, column: 1, scope: !6860)
!6903 = !{i64 2147572290, i64 2147572333, i64 2147572373}
!6904 = !DILocation(line: 32, column: 1, scope: !6860)
!6905 = !{i64 2147572505, i64 2147572548, i64 2147572588}
!6906 = !DILocation(line: 33, column: 1, scope: !6860)
!6907 = !{i64 2147572677, i64 2147572720, i64 2147572760}
!6908 = !DILocation(line: 34, column: 1, scope: !6860)
!6909 = !{i64 2147572879, i64 2147572922, i64 2147572962}
!6910 = !DILocation(line: 35, column: 1, scope: !6860)
!6911 = !{i64 2147573105, i64 2147573148, i64 2147573188}
!6912 = !DILocation(line: 36, column: 1, scope: !6860)
!6913 = !{i64 2147573304, i64 2147573347, i64 2147573387}
!6914 = !DILocation(line: 37, column: 1, scope: !6860)
!6915 = !{i64 2147573479, i64 2147573522, i64 2147573562}
!6916 = !DILocation(line: 38, column: 1, scope: !6860)
!6917 = !{i64 2147573732, i64 2147573775, i64 2147573815}
!6918 = !DILocation(line: 39, column: 1, scope: !6860)
!6919 = !{i64 2147573970, i64 2147574013, i64 2147574053}
!6920 = !DILocation(line: 40, column: 1, scope: !6860)
!6921 = !{i64 2147574205, i64 2147574248, i64 2147574288}
!6922 = !DILocation(line: 41, column: 1, scope: !6860)
!6923 = !{i64 2147574437, i64 2147574480, i64 2147574520}
!6924 = !DILocation(line: 42, column: 1, scope: !6860)
!6925 = !{i64 2147574663, i64 2147574706, i64 2147574746}
!6926 = !DILocation(line: 43, column: 1, scope: !6860)
!6927 = !{i64 2147574922, i64 2147574965, i64 2147575005}
!6928 = !DILocation(line: 44, column: 1, scope: !6860)
!6929 = !{i64 2147575148, i64 2147575191, i64 2147575231}
!6930 = !DILocation(line: 45, column: 1, scope: !6860)
!6931 = !{i64 2147575389, i64 2147575432, i64 2147575472}
!6932 = !DILocation(line: 46, column: 1, scope: !6860)
!6933 = !{i64 2147575633, i64 2147575676, i64 2147575716}
!6934 = !DILocation(line: 47, column: 1, scope: !6860)
!6935 = !{i64 2147575874, i64 2147575917, i64 2147575957}
!6936 = !DILocation(line: 48, column: 1, scope: !6860)
!6937 = !{i64 2147576109, i64 2147576152, i64 2147576192}
!6938 = !DILocation(line: 49, column: 1, scope: !6860)
!6939 = !{i64 2147576335, i64 2147576378, i64 2147576418}
!6940 = !DILocation(line: 50, column: 1, scope: !6860)
!6941 = !{i64 2147576561, i64 2147576604, i64 2147576644}
!6942 = !DILocation(line: 51, column: 1, scope: !6860)
!6943 = !{i64 2147576805, i64 2147576848, i64 2147576888}
!6944 = !DILocation(line: 52, column: 1, scope: !6860)
!6945 = !{i64 2147577043, i64 2147577086, i64 2147577126}
!6946 = !DILocation(line: 53, column: 1, scope: !6860)
!6947 = !{i64 2147581378, i64 2147581421, i64 2147581461}
!6948 = !DILocation(line: 54, column: 1, scope: !6860)
!6949 = !{i64 2147581616, i64 2147581659, i64 2147581699}
!6950 = !DILocation(line: 55, column: 1, scope: !6860)
!6951 = !{i64 2147581860, i64 2147581903, i64 2147581943}
!6952 = !DILocation(line: 56, column: 1, scope: !6860)
!6953 = !{i64 2147582110, i64 2147582153, i64 2147582193}
!6954 = !DILocation(line: 57, column: 1, scope: !6860)
!6955 = !{i64 2147582357, i64 2147582400, i64 2147582440}
!6956 = !DILocation(line: 58, column: 1, scope: !6860)
!6957 = !{i64 2147582592, i64 2147582635, i64 2147582675}
!6958 = !DILocation(line: 59, column: 1, scope: !6860)
!6959 = !{i64 2147582827, i64 2147582870, i64 2147582910}
!6960 = !DILocation(line: 60, column: 1, scope: !6860)
!6961 = !{i64 2147583062, i64 2147583105, i64 2147583145}
!6962 = !DILocation(line: 61, column: 1, scope: !6860)
!6963 = !{i64 2147583300, i64 2147583343, i64 2147583383}
!6964 = !DILocation(line: 62, column: 1, scope: !6860)
!6965 = !{i64 2147583541, i64 2147583584, i64 2147583624}
!6966 = !DILocation(line: 63, column: 1, scope: !6860)
!6967 = !{i64 2147583800, i64 2147583843, i64 2147583883}
!6968 = !DILocation(line: 64, column: 1, scope: !6860)
!6969 = !{i64 2147584080, i64 2147584123, i64 2147584163}
!6970 = !DILocation(line: 65, column: 1, scope: !6860)
!6971 = !{i64 2147584309, i64 2147584352, i64 2147584392}
!6972 = !DILocation(line: 66, column: 1, scope: !6860)
!6973 = !{i64 2147584517, i64 2147584560, i64 2147584600}
!6974 = !DILocation(line: 67, column: 1, scope: !6860)
!6975 = !{i64 2147584728, i64 2147584771, i64 2147584811}
!6976 = !DILocation(line: 68, column: 1, scope: !6860)
!6977 = !{i64 2147584963, i64 2147585006, i64 2147585046}
!6978 = !DILocation(line: 69, column: 1, scope: !6860)
!6979 = !{i64 2147585192, i64 2147585235, i64 2147585275}
!6980 = !DILocation(line: 70, column: 1, scope: !6860)
!6981 = !{i64 2147585409, i64 2147585452, i64 2147585492}
!6982 = !DILocation(line: 71, column: 1, scope: !6860)
!6983 = !{i64 2147585638, i64 2147585681, i64 2147585721}
!6984 = !DILocation(line: 72, column: 1, scope: !6860)
!6985 = !{i64 2147585876, i64 2147585919, i64 2147585959}
!6986 = !DILocation(line: 73, column: 1, scope: !6860)
!6987 = !{i64 2147586108, i64 2147586151, i64 2147586191}
!6988 = !DILocation(line: 74, column: 1, scope: !6860)
!6989 = !{i64 2147586334, i64 2147586377, i64 2147586417}
!6990 = !DILocation(line: 75, column: 1, scope: !6860)
!6991 = !{i64 2147586551, i64 2147586594, i64 2147586634}
!6992 = !DILocation(line: 76, column: 1, scope: !6860)
!6993 = !{i64 2147586783, i64 2147586826, i64 2147586866}
!6994 = !DILocation(line: 77, column: 1, scope: !6860)
!6995 = !{i64 2147587009, i64 2147587052, i64 2147587092}
!6996 = !DILocation(line: 78, column: 1, scope: !6860)
!6997 = !{i64 2147587223, i64 2147587266, i64 2147587306}
!6998 = !DILocation(line: 79, column: 1, scope: !6860)
!6999 = !{i64 2147587443, i64 2147587486, i64 2147587526}
!7000 = !DILocation(line: 80, column: 1, scope: !6860)
!7001 = !{i64 2147587675, i64 2147587718, i64 2147587758}
!7002 = !DILocation(line: 81, column: 1, scope: !6860)
!7003 = !{i64 2147587883, i64 2147587926, i64 2147587966}
!7004 = !DILocation(line: 82, column: 1, scope: !6860)
!7005 = !{i64 2147588088, i64 2147588131, i64 2147588171}
!7006 = !DILocation(line: 83, column: 1, scope: !6860)
!7007 = !{i64 2147588305, i64 2147588348, i64 2147588388}
!7008 = !DILocation(line: 84, column: 1, scope: !6860)
!7009 = !{i64 2147588519, i64 2147588562, i64 2147588602}
!7010 = !DILocation(line: 85, column: 1, scope: !6860)
!7011 = !{i64 2147588745, i64 2147588788, i64 2147588828}
!7012 = !DILocation(line: 86, column: 1, scope: !6860)
!7013 = !{i64 2147588965, i64 2147589008, i64 2147589048}
!7014 = !DILocation(line: 87, column: 1, scope: !6860)
!7015 = !{i64 2147589170, i64 2147589213, i64 2147589253}
!7016 = !DILocation(line: 88, column: 1, scope: !6860)
!7017 = !{i64 2147593463, i64 2147593506, i64 2147593546}
!7018 = !DILocation(line: 89, column: 1, scope: !6860)
!7019 = !{i64 2147593698, i64 2147593741, i64 2147593781}
!7020 = !DILocation(line: 90, column: 1, scope: !6860)
!7021 = !{i64 2147593948, i64 2147593991, i64 2147594031}
!7022 = !DILocation(line: 91, column: 1, scope: !6860)
!7023 = !{i64 2147594198, i64 2147594241, i64 2147594281}
!7024 = !DILocation(line: 92, column: 1, scope: !6860)
!7025 = !{i64 2147594436, i64 2147594479, i64 2147594519}
!7026 = !DILocation(line: 93, column: 1, scope: !6860)
!7027 = !{i64 2147594647, i64 2147594690, i64 2147594730}
!7028 = !DILocation(line: 94, column: 1, scope: !6860)
!7029 = !{i64 2147594864, i64 2147594907, i64 2147594947}
!7030 = !DILocation(line: 95, column: 1, scope: !6860)
!7031 = !{i64 2147595060, i64 2147595103, i64 2147595143}
!7032 = !DILocation(line: 96, column: 1, scope: !6860)
!7033 = !{i64 2147595262, i64 2147595305, i64 2147595345}
!7034 = !DILocation(line: 97, column: 1, scope: !6860)
!7035 = !{i64 2147595455, i64 2147595498, i64 2147595538}
!7036 = !DILocation(line: 98, column: 1, scope: !6860)
!7037 = !{i64 2147595663, i64 2147595706, i64 2147595746}
!7038 = !DILocation(line: 99, column: 1, scope: !6860)
!7039 = !{i64 2147595859, i64 2147595902, i64 2147595942}
!7040 = !DILocation(line: 100, column: 1, scope: !6860)
!7041 = !{i64 2147596064, i64 2147596107, i64 2147596147}
!7042 = !DILocation(line: 101, column: 1, scope: !6860)
!7043 = !{i64 2147596275, i64 2147596318, i64 2147596358}
!7044 = !DILocation(line: 102, column: 1, scope: !6860)
!7045 = !{i64 2147596474, i64 2147596517, i64 2147596557}
!7046 = !DILocation(line: 103, column: 1, scope: !6860)
!7047 = !{i64 2147596649, i64 2147596692, i64 2147596732}
!7048 = !DILocation(line: 104, column: 1, scope: !6860)
!7049 = !{i64 2147596833, i64 2147596876, i64 2147596916}
!7050 = !DILocation(line: 105, column: 1, scope: !6860)
!7051 = !{i64 2147597035, i64 2147597078, i64 2147597118}
!7052 = !DILocation(line: 106, column: 1, scope: !6860)
!7053 = !{i64 2147597237, i64 2147597280, i64 2147597320}
!7054 = !DILocation(line: 107, column: 1, scope: !6860)
!7055 = !{i64 2147597442, i64 2147597485, i64 2147597525}
!7056 = !DILocation(line: 108, column: 1, scope: !6860)
!7057 = !{i64 2147597635, i64 2147597678, i64 2147597718}
!7058 = !DILocation(line: 109, column: 1, scope: !6860)
!7059 = !{i64 2147597801, i64 2147597844, i64 2147597884}
!7060 = !DILocation(line: 110, column: 1, scope: !6860)
!7061 = !{i64 2147597985, i64 2147598028, i64 2147598068}
!7062 = !DILocation(line: 111, column: 1, scope: !6860)
!7063 = !{i64 2147598175, i64 2147598218, i64 2147598258}
!7064 = !DILocation(line: 112, column: 1, scope: !6860)
!7065 = !{i64 2147598359, i64 2147598402, i64 2147598442}
!7066 = !DILocation(line: 113, column: 1, scope: !6860)
!7067 = !{i64 2147598573, i64 2147598616, i64 2147598656}
!7068 = !DILocation(line: 114, column: 1, scope: !6860)
!7069 = !{i64 2147598784, i64 2147598827, i64 2147598867}
!7070 = !DILocation(line: 115, column: 1, scope: !6860)
!7071 = !{i64 2147599007, i64 2147599050, i64 2147599090}
!7072 = !DILocation(line: 116, column: 1, scope: !6860)
!7073 = !{i64 2147599191, i64 2147599234, i64 2147599274}
!7074 = !DILocation(line: 117, column: 1, scope: !6860)
!7075 = !{i64 2147599405, i64 2147599448, i64 2147599488}
!7076 = !DILocation(line: 118, column: 1, scope: !6860)
!7077 = !{i64 2147599571, i64 2147599614, i64 2147599654}
!7078 = !DILocation(line: 119, column: 1, scope: !6860)
!7079 = !{i64 2147599752, i64 2147599795, i64 2147599835}
!7080 = !DILocation(line: 120, column: 1, scope: !6860)
!7081 = !{i64 2147599945, i64 2147599988, i64 2147600028}
!7082 = !DILocation(line: 121, column: 1, scope: !6860)
!7083 = !{i64 2147600171, i64 2147600214, i64 2147600254}
!7084 = !DILocation(line: 122, column: 1, scope: !6860)
!7085 = !{i64 2147600385, i64 2147600428, i64 2147600468}
!7086 = !DILocation(line: 123, column: 1, scope: !6860)
!7087 = !{i64 2147600611, i64 2147600654, i64 2147600694}
!7088 = !DILocation(line: 124, column: 1, scope: !6860)
!7089 = !{i64 2147600828, i64 2147600871, i64 2147600911}
!7090 = !DILocation(line: 125, column: 1, scope: !6860)
!7091 = !{i64 2147601105, i64 2147601148, i64 2147601188}
!7092 = !DILocation(line: 126, column: 1, scope: !6860)
!7093 = !{i64 2147601331, i64 2147601374, i64 2147601414}
!7094 = !DILocation(line: 127, column: 1, scope: !6860)
!7095 = !{i64 2147601527, i64 2147601570, i64 2147601610}
!7096 = !DILocation(line: 128, column: 1, scope: !6860)
!7097 = !{i64 2147601792, i64 2147601835, i64 2147601875}
!7098 = !DILocation(line: 129, column: 1, scope: !6860)
!7099 = !{i64 2147602006, i64 2147602049, i64 2147602089}
!7100 = !DILocation(line: 130, column: 1, scope: !6860)
!7101 = !{i64 2147602181, i64 2147602224, i64 2147602264}
!7102 = !DILocation(line: 131, column: 1, scope: !6860)
!7103 = !{i64 2147602435, i64 2147602478, i64 2147602518}
!7104 = !DILocation(line: 132, column: 1, scope: !6860)
!7105 = !{i64 2147606695, i64 2147606738, i64 2147606778}
!7106 = !DILocation(line: 133, column: 1, scope: !6860)
!7107 = !{i64 2147606937, i64 2147606980, i64 2147607020}
!7108 = !DILocation(line: 134, column: 1, scope: !6860)
!7109 = !{i64 2147607100, i64 2147607143, i64 2147607183}
!7110 = !DILocation(line: 135, column: 1, scope: !6860)
!7111 = !{i64 2147607287, i64 2147607330, i64 2147607370}
!7112 = !DILocation(line: 136, column: 1, scope: !6860)
!7113 = !{i64 2147607495, i64 2147607538, i64 2147607578}
!7114 = !DILocation(line: 137, column: 1, scope: !6860)
!7115 = !{i64 2147607691, i64 2147607734, i64 2147607774}
!7116 = !DILocation(line: 138, column: 1, scope: !6860)
!7117 = !{i64 2147607884, i64 2147607927, i64 2147607967}
!7118 = !DILocation(line: 139, column: 1, scope: !6860)
!7119 = !{i64 2147608066, i64 2147608109, i64 2147608149}
!7120 = !DILocation(line: 140, column: 1, scope: !6860)
!7121 = !{i64 2147608280, i64 2147608323, i64 2147608363}
!7122 = !DILocation(line: 141, column: 1, scope: !6860)
!7123 = !{i64 2147608491, i64 2147608534, i64 2147608574}
!7124 = !DILocation(line: 142, column: 1, scope: !6860)
!7125 = !{i64 2147608711, i64 2147608754, i64 2147608794}
!7126 = !DILocation(line: 143, column: 1, scope: !6860)
!7127 = !{i64 2147608918, i64 2147608961, i64 2147609001}
!7128 = !DILocation(line: 144, column: 1, scope: !6860)
!7129 = !{i64 2147609191, i64 2147609234, i64 2147609274}
!7130 = !DILocation(line: 145, column: 1, scope: !6860)
!7131 = !{i64 2147609439, i64 2147609482, i64 2147609522}
!7132 = !DILocation(line: 146, column: 1, scope: !6860)
!7133 = !{i64 2147609638, i64 2147609681, i64 2147609721}
!7134 = !DILocation(line: 147, column: 1, scope: !6860)
!7135 = !{i64 2147609873, i64 2147609916, i64 2147609956}
!7136 = !DILocation(line: 148, column: 1, scope: !6860)
!7137 = !{i64 2147610123, i64 2147610166, i64 2147610206}
!7138 = !DILocation(line: 149, column: 1, scope: !6860)
!7139 = !{i64 2147610325, i64 2147610368, i64 2147610408}
!7140 = !DILocation(line: 150, column: 1, scope: !6860)
!7141 = !{i64 2147610548, i64 2147610591, i64 2147610631}
!7142 = !DILocation(line: 151, column: 1, scope: !6860)
!7143 = !{i64 2147610762, i64 2147610805, i64 2147610845}
!7144 = !DILocation(line: 152, column: 1, scope: !6860)
!7145 = !{i64 2147611006, i64 2147611049, i64 2147611089}
!7146 = !DILocation(line: 153, column: 1, scope: !6860)
!7147 = !{i64 2147611235, i64 2147611278, i64 2147611318}
!7148 = !DILocation(line: 154, column: 1, scope: !6860)
!7149 = !{i64 2147611464, i64 2147611507, i64 2147611547}
!7150 = !DILocation(line: 155, column: 1, scope: !6860)
!7151 = !{i64 2147611672, i64 2147611715, i64 2147611755}
!7152 = !DILocation(line: 156, column: 1, scope: !6860)
!7153 = !{i64 2147611910, i64 2147611953, i64 2147611993}
!7154 = !DILocation(line: 157, column: 1, scope: !6860)
!7155 = !{i64 2147612136, i64 2147612179, i64 2147612219}
!7156 = !DILocation(line: 158, column: 1, scope: !6860)
!7157 = !{i64 2147612395, i64 2147612438, i64 2147612478}
!7158 = !DILocation(line: 159, column: 1, scope: !6860)
!7159 = !{i64 2147612615, i64 2147612658, i64 2147612698}
!7160 = !DILocation(line: 160, column: 1, scope: !6860)
!7161 = !{i64 2147612847, i64 2147612890, i64 2147612930}
!7162 = !DILocation(line: 161, column: 1, scope: !6860)
!7163 = !{i64 2147613088, i64 2147613131, i64 2147613171}
!7164 = !DILocation(line: 162, column: 1, scope: !6860)
!7165 = !{i64 2147613329, i64 2147613372, i64 2147613412}
!7166 = !DILocation(line: 163, column: 1, scope: !6860)
!7167 = !{i64 2147613552, i64 2147613595, i64 2147613635}
!7168 = !DILocation(line: 164, column: 1, scope: !6860)
!7169 = !{i64 2147613769, i64 2147613812, i64 2147613852}
!7170 = !DILocation(line: 165, column: 1, scope: !6860)
!7171 = !{i64 2147614010, i64 2147614053, i64 2147614093}
!7172 = !DILocation(line: 166, column: 1, scope: !6860)
!7173 = !{i64 2147614197, i64 2147614240, i64 2147614280}
!7174 = !DILocation(line: 167, column: 1, scope: !6860)
!7175 = !{i64 2147614360, i64 2147614403, i64 2147614443}
!7176 = !DILocation(line: 168, column: 1, scope: !6860)
!7177 = !{i64 2147614565, i64 2147614608, i64 2147614648}
!7178 = !DILocation(line: 169, column: 1, scope: !6860)
!7179 = !{i64 2147614758, i64 2147614801, i64 2147614841}
!7180 = !DILocation(line: 170, column: 1, scope: !6860)
!7181 = !{i64 2147615017, i64 2147615060, i64 2147615100}
!7182 = !DILocation(line: 171, column: 1, scope: !6860)
!7183 = !{i64 2147619301, i64 2147619344, i64 2147619384}
!7184 = !DILocation(line: 172, column: 1, scope: !6860)
!7185 = !{i64 2147619530, i64 2147619573, i64 2147619613}
!7186 = !DILocation(line: 173, column: 1, scope: !6860)
!7187 = !{i64 2147619744, i64 2147619787, i64 2147619827}
!7188 = !DILocation(line: 174, column: 1, scope: !6860)
!7189 = !{i64 2147619946, i64 2147619989, i64 2147620029}
!7190 = !DILocation(line: 175, column: 1, scope: !6860)
!7191 = !{i64 2147620142, i64 2147620185, i64 2147620225}
!7192 = !DILocation(line: 176, column: 1, scope: !6860)
!7193 = !{i64 2147620354, i64 2147620397, i64 2147620437}
!7194 = !DILocation(line: 177, column: 1, scope: !6860)
!7195 = !{i64 2147620575, i64 2147620618, i64 2147620658}
!7196 = !DILocation(line: 178, column: 1, scope: !6860)
!7197 = !{i64 2147620789, i64 2147620832, i64 2147620872}
!7198 = !DILocation(line: 179, column: 1, scope: !6860)
!7199 = !{i64 2147620979, i64 2147621022, i64 2147621062}
!7200 = !DILocation(line: 180, column: 1, scope: !6860)
!7201 = !{i64 2147621178, i64 2147621221, i64 2147621261}
!7202 = !DILocation(line: 181, column: 1, scope: !6860)
!7203 = !{i64 2147621383, i64 2147621426, i64 2147621466}
!7204 = !DILocation(line: 182, column: 1, scope: !6860)
!7205 = !{i64 2147621603, i64 2147621646, i64 2147621686}
!7206 = !DILocation(line: 183, column: 1, scope: !6860)
!7207 = !{i64 2147621804, i64 2147621847, i64 2147621887}
!7208 = !DILocation(line: 184, column: 1, scope: !6860)
!7209 = !{i64 2147622003, i64 2147622046, i64 2147622086}
!7210 = !DILocation(line: 185, column: 1, scope: !6860)
!7211 = !{i64 2147622208, i64 2147622251, i64 2147622291}
!7212 = !DILocation(line: 186, column: 1, scope: !6860)
!7213 = !{i64 2147622377, i64 2147622420, i64 2147622460}
!7214 = !DILocation(line: 187, column: 1, scope: !6860)
!7215 = !{i64 2147622561, i64 2147622604, i64 2147622644}
!7216 = !DILocation(line: 188, column: 1, scope: !6860)
!7217 = !{i64 2147622745, i64 2147622788, i64 2147622828}
!7218 = !DILocation(line: 189, column: 1, scope: !6860)
!7219 = !{i64 2147622929, i64 2147622972, i64 2147623012}
!7220 = !DILocation(line: 190, column: 1, scope: !6860)
!7221 = !{i64 2147623167, i64 2147623210, i64 2147623250}
!7222 = !DILocation(line: 191, column: 1, scope: !6860)
!7223 = !{i64 2147623397, i64 2147623440, i64 2147623480}
!7224 = !DILocation(line: 192, column: 1, scope: !6860)
!7225 = !{i64 2147623626, i64 2147623669, i64 2147623709}
!7226 = !DILocation(line: 193, column: 1, scope: !6860)
!7227 = !{i64 2147623813, i64 2147623856, i64 2147623896}
!7228 = !DILocation(line: 194, column: 1, scope: !6860)
!7229 = !{i64 2147624009, i64 2147624052, i64 2147624092}
!7230 = !DILocation(line: 195, column: 1, scope: !6860)
!7231 = !{i64 2147624217, i64 2147624260, i64 2147624300}
!7232 = !DILocation(line: 196, column: 1, scope: !6860)
!7233 = !{i64 2147624429, i64 2147624472, i64 2147624512}
!7234 = !DILocation(line: 197, column: 1, scope: !6860)
!7235 = !{i64 2147624628, i64 2147624671, i64 2147624711}
!7236 = !DILocation(line: 198, column: 1, scope: !6860)
!7237 = !{i64 2147624866, i64 2147624909, i64 2147624949}
!7238 = !DILocation(line: 199, column: 1, scope: !6860)
!7239 = !{i64 2147625062, i64 2147625105, i64 2147625145}
!7240 = !DILocation(line: 200, column: 1, scope: !6860)
!7241 = !{i64 2147625264, i64 2147625307, i64 2147625347}
!7242 = !DILocation(line: 201, column: 1, scope: !6860)
!7243 = !{i64 2147625457, i64 2147625500, i64 2147625540}
!7244 = !DILocation(line: 202, column: 1, scope: !6860)
!7245 = !{i64 2147625691, i64 2147625734, i64 2147625774}
!7246 = !DILocation(line: 203, column: 1, scope: !6860)
!7247 = !{i64 2147625854, i64 2147625897, i64 2147625937}
!7248 = !DILocation(line: 204, column: 1, scope: !6860)
!7249 = !{i64 2147626093, i64 2147626136, i64 2147626176}
!7250 = !DILocation(line: 205, column: 1, scope: !6860)
!7251 = !{i64 2147626332, i64 2147626375, i64 2147626415}
!7252 = !DILocation(line: 206, column: 1, scope: !6860)
!7253 = !{i64 2147626568, i64 2147626611, i64 2147626651}
!7254 = !DILocation(line: 207, column: 1, scope: !6860)
!7255 = !{i64 2147626798, i64 2147626841, i64 2147626881}
!7256 = !DILocation(line: 208, column: 1, scope: !6860)
!7257 = !{i64 2147626985, i64 2147627028, i64 2147627068}
!7258 = !DILocation(line: 209, column: 1, scope: !6860)
!7259 = !{i64 2147627184, i64 2147627227, i64 2147627267}
!7260 = !DILocation(line: 210, column: 1, scope: !6860)
!7261 = !{i64 2147627455, i64 2147627498, i64 2147627538}
!7262 = !DILocation(line: 211, column: 1, scope: !6860)
!7263 = !{i64 2147627630, i64 2147627673, i64 2147627713}
!7264 = !DILocation(line: 212, column: 1, scope: !6860)
!7265 = !{i64 2147627864, i64 2147627907, i64 2147627947}
!7266 = !DILocation(line: 213, column: 1, scope: !6860)
!7267 = !{i64 2147628072, i64 2147628115, i64 2147628155}
!7268 = !DILocation(line: 214, column: 1, scope: !6860)
!7269 = !{i64 2147628290, i64 2147628333, i64 2147628373}
!7270 = !DILocation(line: 215, column: 1, scope: !6860)
!7271 = !{i64 2147632541, i64 2147632584, i64 2147632624}
!7272 = !DILocation(line: 216, column: 1, scope: !6860)
!7273 = !{i64 2147632773, i64 2147632816, i64 2147632856}
!7274 = !DILocation(line: 217, column: 1, scope: !6860)
!7275 = !{i64 2147632993, i64 2147633036, i64 2147633076}
!7276 = !DILocation(line: 218, column: 1, scope: !6860)
!7277 = !{i64 2147633189, i64 2147633232, i64 2147633272}
!7278 = !DILocation(line: 219, column: 1, scope: !6860)
!7279 = !{i64 2147633395, i64 2147633438, i64 2147633478}
!7280 = !DILocation(line: 220, column: 1, scope: !6860)
!7281 = !{i64 2147633600, i64 2147633643, i64 2147633683}
!7282 = !DILocation(line: 221, column: 1, scope: !6860)
!7283 = !{i64 2147633826, i64 2147633869, i64 2147633909}
!7284 = !DILocation(line: 222, column: 1, scope: !6860)
!7285 = !{i64 2147634034, i64 2147634077, i64 2147634117}
!7286 = !DILocation(line: 223, column: 1, scope: !6860)
!7287 = !{i64 2147634230, i64 2147634273, i64 2147634313}
!7288 = !DILocation(line: 224, column: 1, scope: !6860)
!7289 = !{i64 2147634462, i64 2147634505, i64 2147634545}
!7290 = !DILocation(line: 225, column: 1, scope: !6860)
!7291 = !{i64 2147634646, i64 2147634689, i64 2147634729}
!7292 = !DILocation(line: 226, column: 1, scope: !6860)
!7293 = !{i64 2147634855, i64 2147634898, i64 2147634938}
!7294 = !DILocation(line: 227, column: 1, scope: !6860)
!7295 = !{i64 2147635063, i64 2147635106, i64 2147635146}
!7296 = !DILocation(line: 228, column: 1, scope: !6860)
!7297 = !{i64 2147635259, i64 2147635302, i64 2147635342}
!7298 = !DILocation(line: 229, column: 1, scope: !6860)
!7299 = !{i64 2147635443, i64 2147635486, i64 2147635526}
!7300 = !DILocation(line: 230, column: 1, scope: !6860)
!7301 = !{i64 2147635669, i64 2147635712, i64 2147635752}
!7302 = !DILocation(line: 231, column: 1, scope: !6860)
!7303 = !{i64 2147635895, i64 2147635938, i64 2147635978}
!7304 = !DILocation(line: 232, column: 1, scope: !6860)
!7305 = !{i64 2147636121, i64 2147636164, i64 2147636204}
!7306 = !DILocation(line: 233, column: 1, scope: !6860)
!7307 = !{i64 2147636347, i64 2147636390, i64 2147636430}
!7308 = !DILocation(line: 234, column: 1, scope: !6860)
!7309 = !{i64 2147636573, i64 2147636616, i64 2147636656}
!7310 = !DILocation(line: 235, column: 1, scope: !6860)
!7311 = !{i64 2147636805, i64 2147636848, i64 2147636888}
!7312 = !DILocation(line: 236, column: 1, scope: !6860)
!7313 = !{i64 2147637043, i64 2147637086, i64 2147637126}
!7314 = !DILocation(line: 237, column: 1, scope: !6860)
!7315 = !{i64 2147637275, i64 2147637318, i64 2147637358}
!7316 = !DILocation(line: 238, column: 1, scope: !6860)
!7317 = !{i64 2147637477, i64 2147637520, i64 2147637560}
!7318 = !DILocation(line: 239, column: 1, scope: !6860)
!7319 = !{i64 2147637727, i64 2147637770, i64 2147637810}
!7320 = !DILocation(line: 240, column: 1, scope: !6860)
!7321 = !{i64 2147637965, i64 2147638008, i64 2147638048}
!7322 = !DILocation(line: 241, column: 1, scope: !6860)
!7323 = !{i64 2147638173, i64 2147638216, i64 2147638256}
!7324 = !DILocation(line: 242, column: 1, scope: !6860)
!7325 = !{i64 2147638369, i64 2147638412, i64 2147638452}
!7326 = !DILocation(line: 243, column: 1, scope: !6860)
!7327 = !{i64 2147638553, i64 2147638596, i64 2147638636}
!7328 = !DILocation(line: 244, column: 1, scope: !6860)
!7329 = !{i64 2147638770, i64 2147638813, i64 2147638853}
!7330 = !DILocation(line: 245, column: 1, scope: !6860)
!7331 = !{i64 2147638975, i64 2147639018, i64 2147639058}
!7332 = !DILocation(line: 246, column: 1, scope: !6860)
!7333 = !{i64 2147639210, i64 2147639253, i64 2147639293}
!7334 = !DILocation(line: 247, column: 1, scope: !6860)
!7335 = !{i64 2147639433, i64 2147639476, i64 2147639516}
!7336 = !DILocation(line: 248, column: 1, scope: !6860)
!7337 = !{i64 2147639656, i64 2147639699, i64 2147639739}
!7338 = !DILocation(line: 249, column: 1, scope: !6860)
!7339 = !{i64 2147639894, i64 2147639937, i64 2147639977}
!7340 = !DILocation(line: 250, column: 1, scope: !6860)
!7341 = !{i64 2147640132, i64 2147640175, i64 2147640215}
!7342 = !DILocation(line: 251, column: 1, scope: !6860)
!7343 = !{i64 2147640349, i64 2147640392, i64 2147640432}
!7344 = !DILocation(line: 252, column: 1, scope: !6860)
!7345 = !{i64 2147640554, i64 2147640597, i64 2147640637}
!7346 = !DILocation(line: 253, column: 1, scope: !6860)
!7347 = !{i64 2147640747, i64 2147640790, i64 2147640830}
!7348 = !DILocation(line: 254, column: 1, scope: !6860)
!7349 = !{i64 2147641000, i64 2147641043, i64 2147641083}
!7350 = !DILocation(line: 255, column: 1, scope: !6860)
!7351 = !{i64 2147645269, i64 2147645312, i64 2147645352}
!7352 = !DILocation(line: 256, column: 1, scope: !6860)
!7353 = !{i64 2147645465, i64 2147645508, i64 2147645548}
!7354 = !DILocation(line: 257, column: 1, scope: !6860)
!7355 = !{i64 2147645679, i64 2147645722, i64 2147645762}
!7356 = !DILocation(line: 258, column: 1, scope: !6860)
!7357 = !{i64 2147645887, i64 2147645930, i64 2147645970}
!7358 = !DILocation(line: 259, column: 1, scope: !6860)
!7359 = !{i64 2147646077, i64 2147646120, i64 2147646160}
!7360 = !DILocation(line: 260, column: 1, scope: !6860)
!7361 = !{i64 2147646291, i64 2147646334, i64 2147646374}
!7362 = !DILocation(line: 261, column: 1, scope: !6860)
!7363 = !{i64 2147646553, i64 2147646596, i64 2147646636}
!7364 = !DILocation(line: 262, column: 1, scope: !6860)
!7365 = !{i64 2147646764, i64 2147646807, i64 2147646847}
!7366 = !DILocation(line: 263, column: 1, scope: !6860)
!7367 = !{i64 2147647008, i64 2147647051, i64 2147647091}
!7368 = !DILocation(line: 264, column: 1, scope: !6860)
!7369 = !{i64 2147647219, i64 2147647262, i64 2147647302}
!7370 = !DILocation(line: 265, column: 1, scope: !6860)
!7371 = !{i64 2147647448, i64 2147647491, i64 2147647531}
!7372 = !DILocation(line: 266, column: 1, scope: !6860)
!7373 = !{i64 2147647713, i64 2147647756, i64 2147647796}
!7374 = !DILocation(line: 267, column: 1, scope: !6860)
!7375 = !{i64 2147647918, i64 2147647961, i64 2147648001}
!7376 = !DILocation(line: 268, column: 1, scope: !6860)
!7377 = !{i64 2147648114, i64 2147648157, i64 2147648197}
!7378 = !DILocation(line: 269, column: 1, scope: !6860)
!7379 = !{i64 2147648337, i64 2147648380, i64 2147648420}
!7380 = !DILocation(line: 270, column: 1, scope: !6860)
!7381 = !{i64 2147648500, i64 2147648543, i64 2147648583}
!7382 = !DILocation(line: 271, column: 1, scope: !6860)
!7383 = !{i64 2147648705, i64 2147648748, i64 2147648788}
!7384 = !DILocation(line: 272, column: 1, scope: !6860)
!7385 = !{i64 2147648925, i64 2147648968, i64 2147649008}
!7386 = !DILocation(line: 273, column: 1, scope: !6860)
!7387 = !{i64 2147649139, i64 2147649182, i64 2147649222}
!7388 = !DILocation(line: 274, column: 1, scope: !6860)
!7389 = !{i64 2147649383, i64 2147649426, i64 2147649466}
!7390 = !DILocation(line: 275, column: 1, scope: !6860)
!7391 = !{i64 2147649615, i64 2147649658, i64 2147649698}
!7392 = !DILocation(line: 276, column: 1, scope: !6860)
!7393 = !{i64 2147649829, i64 2147649872, i64 2147649912}
!7394 = !DILocation(line: 277, column: 1, scope: !6860)
!7395 = !{i64 2147650040, i64 2147650083, i64 2147650123}
!7396 = !DILocation(line: 278, column: 1, scope: !6860)
!7397 = !{i64 2147650233, i64 2147650276, i64 2147650316}
!7398 = !DILocation(line: 279, column: 1, scope: !6860)
!7399 = !{i64 2147650432, i64 2147650475, i64 2147650515}
!7400 = !DILocation(line: 280, column: 1, scope: !6860)
!7401 = !{i64 2147650604, i64 2147650647, i64 2147650687}
!7402 = !DILocation(line: 281, column: 1, scope: !6860)
!7403 = !{i64 2147650776, i64 2147650819, i64 2147650859}
!7404 = !DILocation(line: 282, column: 1, scope: !6860)
!7405 = !{i64 2147650966, i64 2147651009, i64 2147651049}
!7406 = !DILocation(line: 283, column: 1, scope: !6860)
!7407 = !{i64 2147651159, i64 2147651202, i64 2147651242}
!7408 = !DILocation(line: 284, column: 1, scope: !6860)
!7409 = !{i64 2147651355, i64 2147651398, i64 2147651438}
!7410 = !DILocation(line: 285, column: 1, scope: !6860)
!7411 = !{i64 2147651518, i64 2147651561, i64 2147651601}
!7412 = !DILocation(line: 286, column: 1, scope: !6860)
!7413 = !{i64 2147651720, i64 2147651763, i64 2147651803}
!7414 = !DILocation(line: 287, column: 1, scope: !6860)
!7415 = !{i64 2147651925, i64 2147651968, i64 2147652008}
!7416 = !DILocation(line: 288, column: 1, scope: !6860)
!7417 = !{i64 2147652133, i64 2147652176, i64 2147652216}
!7418 = !DILocation(line: 289, column: 1, scope: !6860)
!7419 = !{i64 2147652326, i64 2147652369, i64 2147652409}
!7420 = !DILocation(line: 290, column: 1, scope: !6860)
!7421 = !{i64 2147652513, i64 2147652556, i64 2147652596}
!7422 = !DILocation(line: 291, column: 1, scope: !6860)
!7423 = !{i64 2147652740, i64 2147652783, i64 2147652823}
!7424 = !DILocation(line: 292, column: 1, scope: !6860)
!7425 = !{i64 2147652906, i64 2147652949, i64 2147652989}
!7426 = !DILocation(line: 293, column: 1, scope: !6860)
!7427 = !{i64 2147653144, i64 2147653187, i64 2147653227}
!7428 = !DILocation(line: 294, column: 1, scope: !6860)
!7429 = !{i64 2147653349, i64 2147653392, i64 2147653432}
!7430 = !DILocation(line: 295, column: 1, scope: !6860)
!7431 = !{i64 2147653599, i64 2147653642, i64 2147653682}
!7432 = !DILocation(line: 296, column: 1, scope: !6860)
!7433 = !{i64 2147653807, i64 2147653850, i64 2147653890}
!7434 = !DILocation(line: 297, column: 1, scope: !6860)
!7435 = !{i64 2147654003, i64 2147654046, i64 2147654086}
!7436 = !DILocation(line: 298, column: 1, scope: !6860)
!7437 = !{i64 2147654220, i64 2147654263, i64 2147654303}
!7438 = !DILocation(line: 299, column: 1, scope: !6860)
!7439 = !{i64 2147658573, i64 2147658616, i64 2147658656}
!7440 = !DILocation(line: 300, column: 1, scope: !6860)
!7441 = !{i64 2147658805, i64 2147658848, i64 2147658888}
!7442 = !DILocation(line: 301, column: 1, scope: !6860)
!7443 = !{i64 2147659022, i64 2147659065, i64 2147659105}
!7444 = !DILocation(line: 302, column: 1, scope: !6860)
!7445 = !{i64 2147659229, i64 2147659272, i64 2147659312}
!7446 = !DILocation(line: 303, column: 1, scope: !6860)
!7447 = !{i64 2147659430, i64 2147659473, i64 2147659513}
!7448 = !DILocation(line: 304, column: 1, scope: !6860)
!7449 = !{i64 2147659662, i64 2147659705, i64 2147659745}
!7450 = !DILocation(line: 305, column: 1, scope: !6860)
!7451 = !{i64 2147659870, i64 2147659913, i64 2147659953}
!7452 = !DILocation(line: 306, column: 1, scope: !6860)
!7453 = !{i64 2147660060, i64 2147660103, i64 2147660143}
!7454 = !DILocation(line: 307, column: 1, scope: !6860)
!7455 = !{i64 2147660286, i64 2147660329, i64 2147660369}
!7456 = !DILocation(line: 308, column: 1, scope: !6860)
!7457 = !{i64 2147660475, i64 2147660518, i64 2147660558}
!7458 = !DILocation(line: 309, column: 1, scope: !6860)
!7459 = !{i64 2147660746, i64 2147660789, i64 2147660829}
!7460 = !DILocation(line: 310, column: 1, scope: !6860)
!7461 = !{i64 2147660966, i64 2147661009, i64 2147661049}
!7462 = !DILocation(line: 311, column: 1, scope: !6860)
!7463 = !{i64 2147661219, i64 2147661262, i64 2147661302}
!7464 = !DILocation(line: 312, column: 1, scope: !6860)
!7465 = !{i64 2147661427, i64 2147661470, i64 2147661510}
!7466 = !DILocation(line: 313, column: 1, scope: !6860)
!7467 = !{i64 2147661659, i64 2147661702, i64 2147661742}
!7468 = !DILocation(line: 314, column: 1, scope: !6860)
!7469 = !{i64 2147661870, i64 2147661913, i64 2147661953}
!7470 = !DILocation(line: 315, column: 1, scope: !6860)
!7471 = !{i64 2147662060, i64 2147662103, i64 2147662143}
!7472 = !DILocation(line: 316, column: 1, scope: !6860)
!7473 = !{i64 2147662274, i64 2147662317, i64 2147662357}
!7474 = !DILocation(line: 317, column: 1, scope: !6860)
!7475 = !{i64 2147662473, i64 2147662516, i64 2147662556}
!7476 = !DILocation(line: 318, column: 1, scope: !6860)
!7477 = !{i64 2147662660, i64 2147662703, i64 2147662743}
!7478 = !DILocation(line: 319, column: 1, scope: !6860)
!7479 = !{i64 2147662868, i64 2147662911, i64 2147662951}
!7480 = !DILocation(line: 320, column: 1, scope: !6860)
!7481 = !{i64 2147663097, i64 2147663140, i64 2147663180}
!7482 = !DILocation(line: 321, column: 1, scope: !6860)
!7483 = !{i64 2147663299, i64 2147663342, i64 2147663382}
!7484 = !DILocation(line: 322, column: 1, scope: !6860)
!7485 = !{i64 2147663498, i64 2147663541, i64 2147663581}
!7486 = !DILocation(line: 323, column: 1, scope: !6860)
!7487 = !{i64 2147663715, i64 2147663758, i64 2147663798}
!7488 = !DILocation(line: 325, column: 1, scope: !6860)
!7489 = distinct !DISubprogram(name: "stm32l1_init", scope: !798, file: !798, line: 31, type: !805, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7490)
!7490 = !{!7491, !7492}
!7491 = !DILocalVariable(name: "arg", arg: 1, scope: !7489, file: !798, line: 31, type: !807)
!7492 = !DILocalVariable(name: "key", scope: !7489, file: !798, line: 33, type: !111)
!7493 = !DILocation(line: 0, scope: !7489)
!7494 = !DILocation(line: 55, column: 2, scope: !7495, inlinedAt: !7502)
!7495 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7499)
!7496 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7497 = !DISubroutineType(types: !7498)
!7498 = !{!32}
!7499 = !{!7500, !7501}
!7500 = !DILocalVariable(name: "key", scope: !7495, file: !7496, line: 44, type: !32)
!7501 = !DILocalVariable(name: "tmp", scope: !7495, file: !7496, line: 53, type: !32)
!7502 = distinct !DILocation(line: 37, column: 8, scope: !7489)
!7503 = !{i64 1527805}
!7504 = !DILocation(line: 0, scope: !7495, inlinedAt: !7502)
!7505 = !DILocalVariable(name: "key", arg: 1, scope: !7506, file: !7496, line: 84, type: !32)
!7506 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7509)
!7507 = !DISubroutineType(types: !7508)
!7508 = !{null, !32}
!7509 = !{!7505}
!7510 = !DILocation(line: 0, scope: !7506, inlinedAt: !7511)
!7511 = distinct !DILocation(line: 44, column: 2, scope: !7489)
!7512 = !DILocation(line: 95, column: 2, scope: !7506, inlinedAt: !7511)
!7513 = !{i64 1528622}
!7514 = !DILocation(line: 48, column: 18, scope: !7489)
!7515 = !DILocation(line: 54, column: 2, scope: !7489)
!7516 = !DILocation(line: 55, column: 2, scope: !7489)
!7517 = !DILocation(line: 57, column: 2, scope: !7489)
!7518 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !7519, file: !7519, line: 531, type: !7520, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7522)
!7519 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7520 = !DISubroutineType(types: !7521)
!7521 = !{null, !111}
!7522 = !{!7523, !7524}
!7523 = !DILocalVariable(name: "Periphs", arg: 1, scope: !7518, file: !7519, line: 531, type: !111)
!7524 = !DILocalVariable(name: "tmpreg", scope: !7518, file: !7519, line: 533, type: !777)
!7525 = !DILocation(line: 0, scope: !7518)
!7526 = !DILocation(line: 533, column: 3, scope: !7518)
!7527 = !DILocation(line: 533, column: 17, scope: !7518)
!7528 = !DILocation(line: 534, column: 3, scope: !7518)
!7529 = !DILocation(line: 536, column: 12, scope: !7518)
!7530 = !DILocation(line: 536, column: 10, scope: !7518)
!7531 = !DILocation(line: 537, column: 9, scope: !7518)
!7532 = !DILocation(line: 538, column: 1, scope: !7518)
!7533 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !7534, file: !7534, line: 272, type: !7520, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !768, retainedNodes: !7535)
!7534 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7535 = !{!7536}
!7536 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !7533, file: !7534, line: 272, type: !111)
!7537 = !DILocation(line: 0, scope: !7533)
!7538 = !DILocation(line: 274, column: 3, scope: !7533)
!7539 = !DILocation(line: 275, column: 1, scope: !7533)
!7540 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !834, file: !834, line: 26, type: !840, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !831, retainedNodes: !7541)
!7541 = !{!7542}
!7542 = !DILocalVariable(name: "dev", arg: 1, scope: !7540, file: !834, line: 26, type: !842)
!7543 = !DILocation(line: 0, scope: !7540)
!7544 = !DILocation(line: 68, column: 2, scope: !7540)
!7545 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !7546, file: !7546, line: 14, type: !5026, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !7547)
!7546 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7547 = !{!7548, !7549}
!7548 = !DILocalVariable(name: "fmt", arg: 1, scope: !7545, file: !7546, line: 14, type: !108)
!7549 = !DILocalVariable(name: "ap", scope: !7545, file: !7546, line: 16, type: !7550)
!7550 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4034, line: 99, baseType: !7551)
!7551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4034, line: 40, baseType: !7552)
!7552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !7546, baseType: !7553)
!7553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !7554)
!7554 = !{!7555}
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !7553, file: !7546, line: 16, baseType: !102, size: 32)
!7556 = !DILocation(line: 0, scope: !7545)
!7557 = !DILocation(line: 16, column: 2, scope: !7545)
!7558 = !DILocation(line: 16, column: 10, scope: !7545)
!7559 = !DILocation(line: 18, column: 2, scope: !7545)
!7560 = !DILocation(line: 19, column: 2, scope: !7545)
!7561 = !DILocation(line: 20, column: 2, scope: !7545)
!7562 = !DILocation(line: 21, column: 1, scope: !7545)
!7563 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !7546, file: !7546, line: 23, type: !7564, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !7566)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{null, !108, !7550}
!7566 = !{!7567, !7568}
!7567 = !DILocalVariable(name: "fmt", arg: 1, scope: !7563, file: !7546, line: 23, type: !108)
!7568 = !DILocalVariable(name: "ap", arg: 2, scope: !7563, file: !7546, line: 23, type: !7550)
!7569 = !DILocation(line: 0, scope: !7563)
!7570 = !DILocation(line: 25, column: 2, scope: !7563)
!7571 = !DILocation(line: 26, column: 1, scope: !7563)
!7572 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !7546, file: !7546, line: 52, type: !7573, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !7575)
!7573 = !DISubroutineType(types: !7574)
!7574 = !{null, !103, !13, !156}
!7575 = !{!7576, !7577, !7578, !7579}
!7576 = !DILocalVariable(name: "level", arg: 1, scope: !7572, file: !7546, line: 52, type: !103)
!7577 = !DILocalVariable(name: "data", arg: 2, scope: !7572, file: !7546, line: 52, type: !13)
!7578 = !DILocalVariable(name: "size", arg: 3, scope: !7572, file: !7546, line: 52, type: !156)
!7579 = !DILocalVariable(name: "data_buffer", scope: !7572, file: !7546, line: 54, type: !108)
!7580 = !DILocation(line: 0, scope: !7572)
!7581 = !DILocation(line: 55, column: 14, scope: !7572)
!7582 = !DILocation(line: 55, column: 2, scope: !7572)
!7583 = !DILocation(line: 56, column: 3, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7572, file: !7546, line: 55, column: 20)
!7585 = !DILocation(line: 57, column: 3, scope: !7584)
!7586 = !DILocation(line: 59, column: 7, scope: !7584)
!7587 = distinct !{!7587, !7582, !7588}
!7588 = !DILocation(line: 65, column: 2, scope: !7572)
!7589 = !DILocation(line: 66, column: 1, scope: !7572)
!7590 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7591, file: !7591, line: 175, type: !7592, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !7594)
!7591 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!110, !103}
!7594 = !{!7595}
!7595 = !DILocalVariable(name: "level", arg: 1, scope: !7590, file: !7591, line: 175, type: !103)
!7596 = !DILocation(line: 0, scope: !7590)
!7597 = !DILocation(line: 177, column: 2, scope: !7590)
!7598 = !DILocation(line: 189, column: 1, scope: !7590)
!7599 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !7546, file: !7546, line: 28, type: !7600, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !7602)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{null, !108, !156}
!7602 = !{!7603, !7604, !7605, !7607, !7609}
!7603 = !DILocalVariable(name: "data", arg: 1, scope: !7599, file: !7546, line: 28, type: !108)
!7604 = !DILocalVariable(name: "length", arg: 2, scope: !7599, file: !7546, line: 28, type: !156)
!7605 = !DILocalVariable(name: "i", scope: !7606, file: !7546, line: 30, type: !156)
!7606 = distinct !DILexicalBlock(scope: !7599, file: !7546, line: 30, column: 2)
!7607 = !DILocalVariable(name: "i", scope: !7608, file: !7546, line: 40, type: !156)
!7608 = distinct !DILexicalBlock(scope: !7599, file: !7546, line: 40, column: 2)
!7609 = !DILocalVariable(name: "c", scope: !7610, file: !7546, line: 42, type: !167)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !7546, line: 41, column: 19)
!7611 = distinct !DILexicalBlock(scope: !7612, file: !7546, line: 41, column: 7)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !7546, line: 40, column: 54)
!7613 = distinct !DILexicalBlock(scope: !7608, file: !7546, line: 40, column: 2)
!7614 = !DILocation(line: 0, scope: !7599)
!7615 = !DILocation(line: 0, scope: !7606)
!7616 = !DILocation(line: 30, column: 2, scope: !7606)
!7617 = !DILocation(line: 38, column: 2, scope: !7599)
!7618 = !DILocation(line: 0, scope: !7608)
!7619 = !DILocation(line: 40, column: 2, scope: !7608)
!7620 = !DILocation(line: 31, column: 9, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7622, file: !7546, line: 31, column: 7)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !7546, line: 30, column: 54)
!7623 = distinct !DILexicalBlock(scope: !7606, file: !7546, line: 30, column: 2)
!7624 = !DILocation(line: 31, column: 7, scope: !7622)
!7625 = !DILocation(line: 32, column: 35, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7621, file: !7546, line: 31, column: 19)
!7627 = !DILocation(line: 32, column: 20, scope: !7626)
!7628 = !DILocation(line: 32, column: 4, scope: !7626)
!7629 = !DILocation(line: 33, column: 3, scope: !7626)
!7630 = !DILocation(line: 34, column: 4, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7621, file: !7546, line: 33, column: 10)
!7632 = !DILocation(line: 30, column: 50, scope: !7623)
!7633 = !DILocation(line: 30, column: 24, scope: !7623)
!7634 = distinct !{!7634, !7616, !7635}
!7635 = !DILocation(line: 36, column: 2, scope: !7606)
!7636 = !DILocation(line: 49, column: 2, scope: !7599)
!7637 = !DILocation(line: 50, column: 1, scope: !7599)
!7638 = !DILocation(line: 41, column: 9, scope: !7611)
!7639 = !DILocation(line: 41, column: 7, scope: !7612)
!7640 = !DILocation(line: 42, column: 22, scope: !7610)
!7641 = !DILocation(line: 0, scope: !7610)
!7642 = !DILocation(line: 44, column: 25, scope: !7610)
!7643 = !DILocation(line: 44, column: 17, scope: !7610)
!7644 = !DILocation(line: 44, column: 33, scope: !7610)
!7645 = !DILocation(line: 44, column: 4, scope: !7610)
!7646 = !DILocation(line: 45, column: 3, scope: !7610)
!7647 = !DILocation(line: 46, column: 4, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7611, file: !7546, line: 45, column: 10)
!7649 = !DILocation(line: 40, column: 50, scope: !7613)
!7650 = !DILocation(line: 40, column: 24, scope: !7613)
!7651 = distinct !{!7651, !7619, !7652}
!7652 = !DILocation(line: 48, column: 2, scope: !7608)
!7653 = distinct !DISubprogram(name: "isprint", scope: !6604, file: !6604, line: 37, type: !764, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3115, retainedNodes: !7654)
!7654 = !{!7655}
!7655 = !DILocalVariable(name: "c", arg: 1, scope: !7653, file: !6604, line: 37, type: !103)
!7656 = !DILocation(line: 0, scope: !7653)
!7657 = !DILocation(line: 39, column: 38, scope: !7653)
!7658 = !DILocation(line: 39, column: 2, scope: !7653)
!7659 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !7660, file: !7660, line: 57, type: !7661, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7707)
!7660 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7661 = !DISubroutineType(types: !7662)
!7662 = !{null, !32, !7663}
!7663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7664, size: 32)
!7664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7665)
!7665 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3238, line: 141, baseType: !7666)
!7666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3238, line: 97, size: 256, elements: !7667)
!7667 = !{!7668}
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !7666, file: !3238, line: 107, baseType: !7669, size: 256)
!7669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3238, line: 98, size: 256, elements: !7670)
!7670 = !{!7671, !7676, !7681, !7686, !7691, !7696, !7701, !7706}
!7671 = !DIDerivedType(tag: DW_TAG_member, scope: !7669, file: !3238, line: 99, baseType: !7672, size: 32)
!7672 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7669, file: !3238, line: 99, size: 32, elements: !7673)
!7673 = !{!7674, !7675}
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !7672, file: !3238, line: 99, baseType: !111, size: 32)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !7672, file: !3238, line: 99, baseType: !111, size: 32)
!7676 = !DIDerivedType(tag: DW_TAG_member, scope: !7669, file: !3238, line: 100, baseType: !7677, size: 32, offset: 32)
!7677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7669, file: !3238, line: 100, size: 32, elements: !7678)
!7678 = !{!7679, !7680}
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !7677, file: !3238, line: 100, baseType: !111, size: 32)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !7677, file: !3238, line: 100, baseType: !111, size: 32)
!7681 = !DIDerivedType(tag: DW_TAG_member, scope: !7669, file: !3238, line: 101, baseType: !7682, size: 32, offset: 64)
!7682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7669, file: !3238, line: 101, size: 32, elements: !7683)
!7683 = !{!7684, !7685}
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !7682, file: !3238, line: 101, baseType: !111, size: 32)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !7682, file: !3238, line: 101, baseType: !111, size: 32)
!7686 = !DIDerivedType(tag: DW_TAG_member, scope: !7669, file: !3238, line: 102, baseType: !7687, size: 32, offset: 96)
!7687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7669, file: !3238, line: 102, size: 32, elements: !7688)
!7688 = !{!7689, !7690}
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !7687, file: !3238, line: 102, baseType: !111, size: 32)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !7687, file: !3238, line: 102, baseType: !111, size: 32)
!7691 = !DIDerivedType(tag: DW_TAG_member, scope: !7669, file: !3238, line: 103, baseType: !7692, size: 32, offset: 128)
!7692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7669, file: !3238, line: 103, size: 32, elements: !7693)
!7693 = !{!7694, !7695}
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !7692, file: !3238, line: 103, baseType: !111, size: 32)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !7692, file: !3238, line: 103, baseType: !111, size: 32)
!7696 = !DIDerivedType(tag: DW_TAG_member, scope: !7669, file: !3238, line: 104, baseType: !7697, size: 32, offset: 160)
!7697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7669, file: !3238, line: 104, size: 32, elements: !7698)
!7698 = !{!7699, !7700}
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !7697, file: !3238, line: 104, baseType: !111, size: 32)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !7697, file: !3238, line: 104, baseType: !111, size: 32)
!7701 = !DIDerivedType(tag: DW_TAG_member, scope: !7669, file: !3238, line: 105, baseType: !7702, size: 32, offset: 192)
!7702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7669, file: !3238, line: 105, size: 32, elements: !7703)
!7703 = !{!7704, !7705}
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !7702, file: !3238, line: 105, baseType: !111, size: 32)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !7702, file: !3238, line: 105, baseType: !111, size: 32)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !7669, file: !3238, line: 106, baseType: !111, size: 32, offset: 224)
!7707 = !{!7708, !7709}
!7708 = !DILocalVariable(name: "reason", arg: 1, scope: !7659, file: !7660, line: 57, type: !32)
!7709 = !DILocalVariable(name: "esf", arg: 2, scope: !7659, file: !7660, line: 57, type: !7663)
!7710 = !DILocation(line: 0, scope: !7659)
!7711 = !DILocation(line: 60, column: 10, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7659, file: !7660, line: 60, column: 6)
!7713 = !DILocation(line: 60, column: 6, scope: !7659)
!7714 = !DILocation(line: 61, column: 3, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7712, file: !7660, line: 60, column: 19)
!7716 = !DILocation(line: 62, column: 2, scope: !7715)
!7717 = !DILocation(line: 63, column: 2, scope: !7659)
!7718 = !DILocation(line: 64, column: 1, scope: !7659)
!7719 = distinct !DISubprogram(name: "esf_dump", scope: !7660, file: !7660, line: 20, type: !7720, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7722)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{null, !7663}
!7722 = !{!7723}
!7723 = !DILocalVariable(name: "esf", arg: 1, scope: !7719, file: !7660, line: 20, type: !7663)
!7724 = !DILocation(line: 0, scope: !7719)
!7725 = !DILocation(line: 22, column: 2, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !7660, line: 22, column: 2)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !7660, line: 22, column: 2)
!7728 = distinct !DILexicalBlock(scope: !7729, file: !7660, line: 22, column: 2)
!7729 = distinct !DILexicalBlock(scope: !7719, file: !7660, line: 22, column: 2)
!7730 = !DILocation(line: 24, column: 2, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7732, file: !7660, line: 24, column: 2)
!7732 = distinct !DILexicalBlock(scope: !7733, file: !7660, line: 24, column: 2)
!7733 = distinct !DILexicalBlock(scope: !7734, file: !7660, line: 24, column: 2)
!7734 = distinct !DILexicalBlock(scope: !7719, file: !7660, line: 24, column: 2)
!7735 = !DILocation(line: 26, column: 2, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7737, file: !7660, line: 26, column: 2)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !7660, line: 26, column: 2)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !7660, line: 26, column: 2)
!7739 = distinct !DILexicalBlock(scope: !7719, file: !7660, line: 26, column: 2)
!7740 = !DILocation(line: 53, column: 2, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !7660, line: 53, column: 2)
!7742 = distinct !DILexicalBlock(scope: !7743, file: !7660, line: 53, column: 2)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !7660, line: 53, column: 2)
!7744 = distinct !DILexicalBlock(scope: !7719, file: !7660, line: 53, column: 2)
!7745 = !DILocation(line: 55, column: 1, scope: !7719)
!7746 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !7660, file: !7660, line: 82, type: !7747, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7762)
!7747 = !DISubroutineType(types: !7748)
!7748 = !{null, !7663, !7749}
!7749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7750, size: 32)
!7750 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !248, line: 37, baseType: !7751)
!7751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !7752)
!7752 = !{!7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7761}
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7751, file: !248, line: 26, baseType: !111, size: 32)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7751, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7751, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7751, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7751, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7751, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7751, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7751, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7751, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!7762 = !{!7763, !7764, !7765}
!7763 = !DILocalVariable(name: "esf", arg: 1, scope: !7746, file: !7660, line: 82, type: !7663)
!7764 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !7746, file: !7660, line: 82, type: !7749)
!7765 = !DILocalVariable(name: "reason", scope: !7746, file: !7660, line: 88, type: !32)
!7766 = !DILocation(line: 0, scope: !7746)
!7767 = !DILocation(line: 88, column: 35, scope: !7746)
!7768 = !DILocation(line: 108, column: 2, scope: !7746)
!7769 = !DILocation(line: 131, column: 1, scope: !7746)
!7770 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !7660, file: !7660, line: 133, type: !7771, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3118, retainedNodes: !7773)
!7771 = !DISubroutineType(types: !7772)
!7772 = !{null, !102}
!7773 = !{!7774, !7775, !7776}
!7774 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !7770, file: !7660, line: 133, type: !102)
!7775 = !DILocalVariable(name: "ssf_contents", scope: !7770, file: !7660, line: 135, type: !1411)
!7776 = !DILocalVariable(name: "oops_esf", scope: !7770, file: !7660, line: 136, type: !7665)
!7777 = !DILocation(line: 0, scope: !7770)
!7778 = !DILocation(line: 136, column: 2, scope: !7770)
!7779 = !DILocation(line: 136, column: 15, scope: !7770)
!7780 = !DILocation(line: 139, column: 22, scope: !7770)
!7781 = !DILocation(line: 139, column: 17, scope: !7770)
!7782 = !DILocation(line: 139, column: 20, scope: !7770)
!7783 = !DILocation(line: 141, column: 2, scope: !7770)
!7784 = !DILocation(line: 142, column: 2, scope: !7770)
!7785 = distinct !DISubprogram(name: "arch_irq_enable", scope: !7786, file: !7786, line: 40, type: !7507, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !7787)
!7786 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7787 = !{!7788}
!7788 = !DILocalVariable(name: "irq", arg: 1, scope: !7785, file: !7786, line: 40, type: !32)
!7789 = !DILocation(line: 0, scope: !7785)
!7790 = !DILocation(line: 42, column: 2, scope: !7785)
!7791 = !DILocation(line: 43, column: 1, scope: !7785)
!7792 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !1005, file: !1005, line: 1508, type: !7793, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !7795)
!7793 = !DISubroutineType(types: !7794)
!7794 = !{null, !1338}
!7795 = !{!7796}
!7796 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7792, file: !1005, line: 1508, type: !1338)
!7797 = !DILocation(line: 0, scope: !7792)
!7798 = !DILocation(line: 1510, column: 23, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7792, file: !1005, line: 1510, column: 7)
!7800 = !DILocation(line: 1510, column: 7, scope: !7792)
!7801 = !DILocation(line: 1512, column: 5, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7799, file: !1005, line: 1511, column: 3)
!7803 = !{i64 2149972868}
!7804 = !DILocation(line: 1513, column: 81, scope: !7802)
!7805 = !DILocation(line: 1513, column: 60, scope: !7802)
!7806 = !DILocation(line: 1513, column: 34, scope: !7802)
!7807 = !DILocation(line: 1513, column: 5, scope: !7802)
!7808 = !DILocation(line: 1513, column: 43, scope: !7802)
!7809 = !DILocation(line: 1514, column: 5, scope: !7802)
!7810 = !{i64 2149972982}
!7811 = !DILocation(line: 1515, column: 3, scope: !7802)
!7812 = !DILocation(line: 1516, column: 1, scope: !7792)
!7813 = distinct !DISubprogram(name: "arch_irq_disable", scope: !7786, file: !7786, line: 45, type: !7507, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !7814)
!7814 = !{!7815}
!7815 = !DILocalVariable(name: "irq", arg: 1, scope: !7813, file: !7786, line: 45, type: !32)
!7816 = !DILocation(line: 0, scope: !7813)
!7817 = !DILocation(line: 47, column: 2, scope: !7813)
!7818 = !DILocation(line: 48, column: 1, scope: !7813)
!7819 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !1005, file: !1005, line: 1546, type: !7793, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !7820)
!7820 = !{!7821}
!7821 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7819, file: !1005, line: 1546, type: !1338)
!7822 = !DILocation(line: 0, scope: !7819)
!7823 = !DILocation(line: 1548, column: 23, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7819, file: !1005, line: 1548, column: 7)
!7825 = !DILocation(line: 1548, column: 7, scope: !7819)
!7826 = !DILocation(line: 1550, column: 81, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7824, file: !1005, line: 1549, column: 3)
!7828 = !DILocation(line: 1550, column: 60, scope: !7827)
!7829 = !DILocation(line: 1550, column: 34, scope: !7827)
!7830 = !DILocation(line: 1550, column: 5, scope: !7827)
!7831 = !DILocation(line: 1550, column: 43, scope: !7827)
!7832 = !DILocation(line: 271, column: 3, scope: !7833, inlinedAt: !7835)
!7833 = distinct !DISubprogram(name: "__DSB", scope: !7834, file: !7834, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !2512)
!7834 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7835 = distinct !DILocation(line: 1551, column: 5, scope: !7827)
!7836 = !{i64 2430370}
!7837 = !DILocation(line: 260, column: 3, scope: !7838, inlinedAt: !7839)
!7838 = distinct !DISubprogram(name: "__ISB", scope: !7834, file: !7834, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !2512)
!7839 = distinct !DILocation(line: 1552, column: 5, scope: !7827)
!7840 = !{i64 2430087}
!7841 = !DILocation(line: 1553, column: 3, scope: !7827)
!7842 = !DILocation(line: 1554, column: 1, scope: !7819)
!7843 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !7786, file: !7786, line: 50, type: !7844, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !7846)
!7844 = !DISubroutineType(types: !7845)
!7845 = !{!103, !32}
!7846 = !{!7847}
!7847 = !DILocalVariable(name: "irq", arg: 1, scope: !7843, file: !7786, line: 50, type: !32)
!7848 = !DILocation(line: 0, scope: !7843)
!7849 = !DILocation(line: 52, column: 20, scope: !7843)
!7850 = !DILocation(line: 52, column: 9, scope: !7843)
!7851 = !DILocation(line: 52, column: 41, scope: !7843)
!7852 = !DILocation(line: 52, column: 39, scope: !7843)
!7853 = !DILocation(line: 52, column: 2, scope: !7843)
!7854 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !7786, file: !7786, line: 64, type: !7855, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !7857)
!7855 = !DISubroutineType(types: !7856)
!7856 = !{null, !32, !32, !111}
!7857 = !{!7858, !7859, !7860}
!7858 = !DILocalVariable(name: "irq", arg: 1, scope: !7854, file: !7786, line: 64, type: !32)
!7859 = !DILocalVariable(name: "prio", arg: 2, scope: !7854, file: !7786, line: 64, type: !32)
!7860 = !DILocalVariable(name: "flags", arg: 3, scope: !7854, file: !7786, line: 64, type: !111)
!7861 = !DILocation(line: 0, scope: !7854)
!7862 = !DILocation(line: 83, column: 8, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !7786, line: 82, column: 9)
!7864 = distinct !DILexicalBlock(scope: !7854, file: !7786, line: 76, column: 6)
!7865 = !DILocation(line: 91, column: 2, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !7786, line: 91, column: 2)
!7867 = distinct !DILexicalBlock(scope: !7854, file: !7786, line: 91, column: 2)
!7868 = !DILocation(line: 91, column: 2, scope: !7867)
!7869 = !DILocation(line: 91, column: 2, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7866, file: !7786, line: 91, column: 2)
!7871 = !DILocation(line: 95, column: 2, scope: !7854)
!7872 = !DILocation(line: 96, column: 1, scope: !7854)
!7873 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1005, file: !1005, line: 1638, type: !7874, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !7876)
!7874 = !DISubroutineType(types: !7875)
!7875 = !{null, !1338, !111}
!7876 = !{!7877, !7878}
!7877 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7873, file: !1005, line: 1638, type: !1338)
!7878 = !DILocalVariable(name: "priority", arg: 2, scope: !7873, file: !1005, line: 1638, type: !111)
!7879 = !DILocation(line: 0, scope: !7873)
!7880 = !DILocation(line: 0, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7873, file: !1005, line: 1640, column: 7)
!7882 = !DILocation(line: 1640, column: 7, scope: !7873)
!7883 = !DILocation(line: 1648, column: 1, scope: !7873)
!7884 = distinct !DISubprogram(name: "z_irq_spurious", scope: !7786, file: !7786, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !7885)
!7885 = !{!7886}
!7886 = !DILocalVariable(name: "unused", arg: 1, scope: !7884, file: !7786, line: 155, type: !13)
!7887 = !DILocation(line: 0, scope: !7884)
!7888 = !DILocation(line: 159, column: 2, scope: !7884)
!7889 = !DILocation(line: 160, column: 1, scope: !7884)
!7890 = distinct !DISubprogram(name: "z_arm_nmi", scope: !7891, file: !7891, line: 87, type: !323, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3175, retainedNodes: !2512)
!7891 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7892 = !DILocation(line: 89, column: 2, scope: !7890)
!7893 = !DILocation(line: 90, column: 2, scope: !7890)
!7894 = !DILocation(line: 91, column: 1, scope: !7890)
!7895 = !DISubprogram(name: "z_SysNmiOnReset", scope: !7891, file: !7891, line: 23, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!7896 = !DISubprogram(name: "z_arm_int_exit", scope: !7897, file: !7897, line: 153, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!7897 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7898 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !7899, file: !7899, line: 256, type: !323, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !2512)
!7899 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7900 = !DILocation(line: 258, column: 2, scope: !7898)
!7901 = !DILocation(line: 262, column: 2, scope: !7898)
!7902 = !DILocation(line: 263, column: 2, scope: !7898)
!7903 = !DILocation(line: 267, column: 2, scope: !7898)
!7904 = !DILocation(line: 268, column: 2, scope: !7898)
!7905 = distinct !DISubprogram(name: "relocate_vector_table", scope: !7899, file: !7899, line: 53, type: !323, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !2512)
!7906 = !DILocation(line: 55, column: 12, scope: !7905)
!7907 = !DILocation(line: 271, column: 3, scope: !7908, inlinedAt: !7909)
!7908 = distinct !DISubprogram(name: "__DSB", scope: !7834, file: !7834, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !2512)
!7909 = distinct !DILocation(line: 56, column: 2, scope: !7905)
!7910 = !{i64 2429041}
!7911 = !DILocation(line: 260, column: 3, scope: !7912, inlinedAt: !7913)
!7912 = distinct !DISubprogram(name: "__ISB", scope: !7834, file: !7834, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3177, retainedNodes: !2512)
!7913 = distinct !DILocation(line: 57, column: 2, scope: !7905)
!7914 = !{i64 2428758}
!7915 = !DILocation(line: 58, column: 1, scope: !7905)
!7916 = distinct !DISubprogram(name: "arch_swap", scope: !7917, file: !7917, line: 33, type: !7844, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !7918)
!7917 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7918 = !{!7919}
!7919 = !DILocalVariable(name: "key", arg: 1, scope: !7916, file: !7917, line: 33, type: !32)
!7920 = !DILocation(line: 0, scope: !7916)
!7921 = !DILocation(line: 36, column: 2, scope: !7916)
!7922 = !DILocation(line: 36, column: 17, scope: !7916)
!7923 = !DILocation(line: 36, column: 25, scope: !7916)
!7924 = !DILocation(line: 37, column: 37, scope: !7916)
!7925 = !DILocation(line: 37, column: 17, scope: !7916)
!7926 = !DILocation(line: 37, column: 35, scope: !7916)
!7927 = !DILocation(line: 41, column: 12, scope: !7916)
!7928 = !DILocalVariable(name: "key", arg: 1, scope: !7929, file: !7496, line: 84, type: !32)
!7929 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3205, retainedNodes: !7930)
!7930 = !{!7928}
!7931 = !DILocation(line: 0, scope: !7929, inlinedAt: !7932)
!7932 = distinct !DILocation(line: 44, column: 2, scope: !7916)
!7933 = !DILocation(line: 95, column: 2, scope: !7929, inlinedAt: !7932)
!7934 = !{i64 1652041}
!7935 = !DILocation(line: 53, column: 9, scope: !7916)
!7936 = !DILocation(line: 53, column: 24, scope: !7916)
!7937 = !DILocation(line: 53, column: 2, scope: !7916)
!7938 = distinct !DISubprogram(name: "arch_new_thread", scope: !7939, file: !7939, line: 56, type: !7940, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3233, retainedNodes: !8049)
!7939 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7940 = !DISubroutineType(types: !7941)
!7941 = !{null, !7942, !8044, !160, !310, !102, !102, !102}
!7942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7943, size: 32)
!7943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !7944)
!7944 = !{!7945, !8003, !8015, !8016, !8017, !8018, !8024, !8039}
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7943, file: !199, line: 247, baseType: !7946, size: 384)
!7946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !7947)
!7947 = !{!7948, !7972, !7979, !7980, !7981, !7990, !7991, !7992}
!7948 = !DIDerivedType(tag: DW_TAG_member, scope: !7946, file: !199, line: 60, baseType: !7949, size: 64)
!7949 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7946, file: !199, line: 60, size: 64, elements: !7950)
!7950 = !{!7951, !7966}
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7949, file: !199, line: 61, baseType: !7952, size: 64)
!7952 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !7953)
!7953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !7954)
!7954 = !{!7955, !7961}
!7955 = !DIDerivedType(tag: DW_TAG_member, scope: !7953, file: !136, line: 38, baseType: !7956, size: 32)
!7956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7953, file: !136, line: 38, size: 32, elements: !7957)
!7957 = !{!7958, !7960}
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7956, file: !136, line: 39, baseType: !7959, size: 32)
!7959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7953, size: 32)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7956, file: !136, line: 40, baseType: !7959, size: 32)
!7961 = !DIDerivedType(tag: DW_TAG_member, scope: !7953, file: !136, line: 42, baseType: !7962, size: 32, offset: 32)
!7962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7953, file: !136, line: 42, size: 32, elements: !7963)
!7963 = !{!7964, !7965}
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7962, file: !136, line: 43, baseType: !7959, size: 32)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7962, file: !136, line: 44, baseType: !7959, size: 32)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7949, file: !199, line: 62, baseType: !7967, size: 64)
!7967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !7968)
!7968 = !{!7969}
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7967, file: !211, line: 50, baseType: !7970, size: 64)
!7970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7971, size: 64, elements: !216)
!7971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7967, size: 32)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7946, file: !199, line: 68, baseType: !7973, size: 32, offset: 64)
!7973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7974, size: 32)
!7974 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !7975)
!7975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !7976)
!7976 = !{!7977}
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7975, file: !131, line: 232, baseType: !7978, size: 64)
!7978 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !7953)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7946, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7946, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!7981 = !DIDerivedType(tag: DW_TAG_member, scope: !7946, file: !199, line: 90, baseType: !7982, size: 16, offset: 112)
!7982 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7946, file: !199, line: 90, size: 16, elements: !7983)
!7983 = !{!7984, !7989}
!7984 = !DIDerivedType(tag: DW_TAG_member, scope: !7982, file: !199, line: 91, baseType: !7985, size: 16)
!7985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7982, file: !199, line: 91, size: 16, elements: !7986)
!7986 = !{!7987, !7988}
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7985, file: !199, line: 96, baseType: !229, size: 8)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7985, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7982, file: !199, line: 100, baseType: !181, size: 16)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7946, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7946, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7946, file: !199, line: 131, baseType: !7993, size: 192, offset: 192)
!7993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !7994)
!7994 = !{!7995, !7996, !8002}
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7993, file: !131, line: 245, baseType: !7952, size: 64)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7993, file: !131, line: 246, baseType: !7997, size: 32, offset: 64)
!7997 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !7998)
!7998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7999, size: 32)
!7999 = !DISubroutineType(types: !8000)
!8000 = !{null, !8001}
!8001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7993, size: 32)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7993, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7943, file: !199, line: 250, baseType: !8004, size: 288, offset: 384)
!8004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8005)
!8005 = !{!8006, !8007, !8008, !8009, !8010, !8011, !8012, !8013, !8014}
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8004, file: !248, line: 26, baseType: !111, size: 32)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8004, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8004, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8004, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8004, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8004, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8004, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8004, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8004, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7943, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7943, file: !199, line: 256, baseType: !7974, size: 64, offset: 704)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7943, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7943, file: !199, line: 300, baseType: !8019, size: 96, offset: 800)
!8019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !8020)
!8020 = !{!8021, !8022, !8023}
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8019, file: !199, line: 153, baseType: !22, size: 32)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8019, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8019, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7943, file: !199, line: 325, baseType: !8025, size: 32, offset: 896)
!8025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8026, size: 32)
!8026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !8027)
!8027 = !{!8028, !8034, !8035}
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8026, file: !127, line: 5074, baseType: !8029, size: 96)
!8029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !8030)
!8030 = !{!8031, !8032, !8033}
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8029, file: !274, line: 57, baseType: !277, size: 32)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8029, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8029, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8026, file: !127, line: 5075, baseType: !7974, size: 64, offset: 96)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8026, file: !127, line: 5076, baseType: !8036, size: 32, offset: 160)
!8036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !8037)
!8037 = !{!8038}
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8036, file: !152, line: 52, baseType: !22, size: 32)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7943, file: !199, line: 343, baseType: !8040, size: 64, offset: 928)
!8040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !8041)
!8041 = !{!8042, !8043}
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8040, file: !248, line: 63, baseType: !111, size: 32)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8040, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!8044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8045, size: 32)
!8045 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !8046)
!8046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !8047)
!8047 = !{!8048}
!8048 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8046, file: !305, line: 48, baseType: !110, size: 8)
!8049 = !{!8050, !8051, !8052, !8053, !8054, !8055, !8056, !8057}
!8050 = !DILocalVariable(name: "thread", arg: 1, scope: !7938, file: !7939, line: 56, type: !7942)
!8051 = !DILocalVariable(name: "stack", arg: 2, scope: !7938, file: !7939, line: 56, type: !8044)
!8052 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !7938, file: !7939, line: 57, type: !160)
!8053 = !DILocalVariable(name: "entry", arg: 4, scope: !7938, file: !7939, line: 57, type: !310)
!8054 = !DILocalVariable(name: "p1", arg: 5, scope: !7938, file: !7939, line: 58, type: !102)
!8055 = !DILocalVariable(name: "p2", arg: 6, scope: !7938, file: !7939, line: 58, type: !102)
!8056 = !DILocalVariable(name: "p3", arg: 7, scope: !7938, file: !7939, line: 58, type: !102)
!8057 = !DILocalVariable(name: "iframe", scope: !7938, file: !7939, line: 60, type: !3236)
!8058 = !DILocation(line: 0, scope: !7938)
!8059 = !DILocation(line: 85, column: 11, scope: !7938)
!8060 = !DILocation(line: 93, column: 10, scope: !7938)
!8061 = !DILocation(line: 98, column: 13, scope: !7938)
!8062 = !DILocation(line: 100, column: 15, scope: !7938)
!8063 = !DILocation(line: 100, column: 10, scope: !7938)
!8064 = !DILocation(line: 100, column: 13, scope: !7938)
!8065 = !DILocation(line: 101, column: 15, scope: !7938)
!8066 = !DILocation(line: 101, column: 10, scope: !7938)
!8067 = !DILocation(line: 101, column: 13, scope: !7938)
!8068 = !DILocation(line: 102, column: 15, scope: !7938)
!8069 = !DILocation(line: 102, column: 10, scope: !7938)
!8070 = !DILocation(line: 102, column: 13, scope: !7938)
!8071 = !DILocation(line: 103, column: 15, scope: !7938)
!8072 = !DILocation(line: 103, column: 10, scope: !7938)
!8073 = !DILocation(line: 103, column: 13, scope: !7938)
!8074 = !DILocation(line: 106, column: 10, scope: !7938)
!8075 = !DILocation(line: 106, column: 15, scope: !7938)
!8076 = !DILocation(line: 122, column: 29, scope: !7938)
!8077 = !DILocation(line: 122, column: 23, scope: !7938)
!8078 = !DILocation(line: 122, column: 27, scope: !7938)
!8079 = !DILocation(line: 123, column: 15, scope: !7938)
!8080 = !DILocation(line: 123, column: 23, scope: !7938)
!8081 = !DILocation(line: 143, column: 1, scope: !7938)
!8082 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !7939, file: !7939, line: 385, type: !8083, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3233, retainedNodes: !8086)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!111, !8085, !8085}
!8085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !111)
!8086 = !{!8087, !8088, !8089, !8092}
!8087 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8082, file: !7939, line: 385, type: !8085)
!8088 = !DILocalVariable(name: "psp", arg: 2, scope: !8082, file: !7939, line: 385, type: !8085)
!8089 = !DILocalVariable(name: "thread", scope: !8082, file: !7939, line: 388, type: !8090)
!8090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8091, size: 32)
!8091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7943)
!8092 = !DILocalVariable(name: "guard_len", scope: !8082, file: !7939, line: 405, type: !111)
!8093 = !DILocation(line: 0, scope: !8082)
!8094 = !DILocation(line: 388, column: 34, scope: !8082)
!8095 = !DILocation(line: 390, column: 13, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8082, file: !7939, line: 390, column: 6)
!8097 = !DILocation(line: 390, column: 6, scope: !8082)
!8098 = !DILocation(line: 438, column: 6, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8082, file: !7939, line: 438, column: 6)
!8100 = !DILocation(line: 438, column: 6, scope: !8082)
!8101 = !DILocation(line: 442, column: 3, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8099, file: !7939, line: 440, column: 22)
!8103 = !DILocation(line: 455, column: 1, scope: !8082)
!8104 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !7939, file: !7939, line: 530, type: !8105, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3233, retainedNodes: !8107)
!8105 = !DISubroutineType(types: !8106)
!8106 = !{null, !7942, !160, !310}
!8107 = !{!8108, !8109, !8110}
!8108 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8104, file: !7939, line: 530, type: !7942)
!8109 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8104, file: !7939, line: 530, type: !160)
!8110 = !DILocalVariable(name: "_main", arg: 3, scope: !8104, file: !7939, line: 531, type: !310)
!8111 = !DILocation(line: 0, scope: !8104)
!8112 = !DILocation(line: 535, column: 11, scope: !8104)
!8113 = !DILocation(line: 560, column: 2, scope: !8104)
!8114 = !DILocation(line: 576, column: 2, scope: !8104)
!8115 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8116 = !DILocation(line: 603, column: 2, scope: !8104)
!8117 = distinct !DISubprogram(name: "z_arm_fault", scope: !8118, file: !8118, line: 1036, type: !8119, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8134)
!8118 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8119 = !DISubroutineType(types: !8120)
!8120 = !{null, !111, !111, !111, !8121}
!8121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8122, size: 32)
!8122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !248, line: 37, baseType: !8123)
!8123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8124)
!8124 = !{!8125, !8126, !8127, !8128, !8129, !8130, !8131, !8132, !8133}
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8123, file: !248, line: 26, baseType: !111, size: 32)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8123, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8123, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8123, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8129 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8123, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8123, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8123, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8123, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8123, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8134 = !{!8135, !8136, !8137, !8138, !8139, !8140, !8141, !8142, !8143, !8144}
!8135 = !DILocalVariable(name: "msp", arg: 1, scope: !8117, file: !8118, line: 1036, type: !111)
!8136 = !DILocalVariable(name: "psp", arg: 2, scope: !8117, file: !8118, line: 1036, type: !111)
!8137 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8117, file: !8118, line: 1036, type: !111)
!8138 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8117, file: !8118, line: 1037, type: !8121)
!8139 = !DILocalVariable(name: "reason", scope: !8117, file: !8118, line: 1039, type: !111)
!8140 = !DILocalVariable(name: "fault", scope: !8117, file: !8118, line: 1040, type: !103)
!8141 = !DILocalVariable(name: "recoverable", scope: !8117, file: !8118, line: 1041, type: !122)
!8142 = !DILocalVariable(name: "nested_exc", scope: !8117, file: !8118, line: 1041, type: !122)
!8143 = !DILocalVariable(name: "esf", scope: !8117, file: !8118, line: 1042, type: !3304)
!8144 = !DILocalVariable(name: "esf_copy", scope: !8117, file: !8118, line: 1047, type: !3305)
!8145 = !DILocation(line: 0, scope: !8117)
!8146 = !DILocation(line: 1040, column: 19, scope: !8117)
!8147 = !DILocation(line: 1041, column: 2, scope: !8117)
!8148 = !DILocation(line: 1047, column: 2, scope: !8117)
!8149 = !DILocation(line: 1047, column: 15, scope: !8117)
!8150 = !DILocalVariable(name: "key", arg: 1, scope: !8151, file: !7496, line: 84, type: !32)
!8151 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8152)
!8152 = !{!8150}
!8153 = !DILocation(line: 0, scope: !8151, inlinedAt: !8154)
!8154 = distinct !DILocation(line: 1050, column: 2, scope: !8117)
!8155 = !DILocation(line: 95, column: 2, scope: !8151, inlinedAt: !8154)
!8156 = !{i64 1685285}
!8157 = !DILocation(line: 1055, column: 9, scope: !8117)
!8158 = !DILocation(line: 1056, column: 2, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8160, file: !8118, line: 1056, column: 2)
!8160 = distinct !DILexicalBlock(scope: !8117, file: !8118, line: 1056, column: 2)
!8161 = !DILocation(line: 1056, column: 2, scope: !8160)
!8162 = !DILocation(line: 1056, column: 2, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8159, file: !8118, line: 1056, column: 2)
!8164 = !DILocation(line: 1040, column: 24, scope: !8117)
!8165 = !DILocation(line: 1063, column: 11, scope: !8117)
!8166 = !DILocation(line: 1064, column: 6, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8117, file: !8118, line: 1064, column: 6)
!8168 = !{i8 0, i8 2}
!8169 = !DILocation(line: 1064, column: 6, scope: !8117)
!8170 = !DILocation(line: 1070, column: 20, scope: !8117)
!8171 = !DILocation(line: 1070, column: 2, scope: !8117)
!8172 = !DILocation(line: 1089, column: 6, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8117, file: !8118, line: 1089, column: 6)
!8174 = !DILocation(line: 0, scope: !8173)
!8175 = !DILocation(line: 1089, column: 6, scope: !8117)
!8176 = !DILocation(line: 1090, column: 28, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !8118, line: 1090, column: 7)
!8178 = distinct !DILexicalBlock(scope: !8173, file: !8118, line: 1089, column: 18)
!8179 = !DILocation(line: 1090, column: 44, scope: !8177)
!8180 = !DILocation(line: 1090, column: 7, scope: !8178)
!8181 = !DILocation(line: 1091, column: 24, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8177, file: !8118, line: 1090, column: 50)
!8183 = !DILocation(line: 1092, column: 3, scope: !8182)
!8184 = !DILocation(line: 1094, column: 23, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8173, file: !8118, line: 1093, column: 9)
!8186 = !DILocation(line: 1097, column: 2, scope: !8117)
!8187 = !DILocation(line: 1098, column: 1, scope: !8117)
!8188 = distinct !DISubprogram(name: "get_esf", scope: !8118, file: !8118, line: 894, type: !8189, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8192)
!8189 = !DISubroutineType(types: !8190)
!8190 = !{!3304, !111, !111, !111, !8191}
!8191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!8192 = !{!8193, !8194, !8195, !8196, !8197, !8198}
!8193 = !DILocalVariable(name: "msp", arg: 1, scope: !8188, file: !8118, line: 894, type: !111)
!8194 = !DILocalVariable(name: "psp", arg: 2, scope: !8188, file: !8118, line: 894, type: !111)
!8195 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8188, file: !8118, line: 894, type: !111)
!8196 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8188, file: !8118, line: 895, type: !8191)
!8197 = !DILocalVariable(name: "alternative_state_exc", scope: !8188, file: !8118, line: 897, type: !122)
!8198 = !DILocalVariable(name: "ptr_esf", scope: !8188, file: !8118, line: 898, type: !3304)
!8199 = !DILocation(line: 0, scope: !8188)
!8200 = !DILocation(line: 900, column: 14, scope: !8188)
!8201 = !DILocation(line: 902, column: 49, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8188, file: !8118, line: 902, column: 6)
!8203 = !DILocation(line: 902, column: 6, scope: !8188)
!8204 = !DILocation(line: 983, column: 44, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8188, file: !8118, line: 983, column: 6)
!8206 = !DILocation(line: 985, column: 3, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !8118, line: 985, column: 3)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !8118, line: 985, column: 3)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !8118, line: 985, column: 3)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !8118, line: 985, column: 3)
!8211 = distinct !DILexicalBlock(scope: !8205, file: !8118, line: 984, column: 47)
!8212 = !DILocation(line: 986, column: 3, scope: !8211)
!8213 = !DILocation(line: 983, column: 18, scope: !8205)
!8214 = !DILocation(line: 991, column: 7, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8216, file: !8118, line: 990, column: 30)
!8216 = distinct !DILexicalBlock(scope: !8188, file: !8118, line: 990, column: 6)
!8217 = !DILocation(line: 998, column: 16, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !8118, line: 995, column: 10)
!8219 = distinct !DILexicalBlock(scope: !8215, file: !8118, line: 991, column: 7)
!8220 = !DILocation(line: 1002, column: 2, scope: !8188)
!8221 = !DILocation(line: 1003, column: 1, scope: !8188)
!8222 = distinct !DISubprogram(name: "fault_handle", scope: !8118, file: !8118, line: 786, type: !8223, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8225)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!111, !3304, !103, !8191}
!8225 = !{!8226, !8227, !8228, !8229}
!8226 = !DILocalVariable(name: "esf", arg: 1, scope: !8222, file: !8118, line: 786, type: !3304)
!8227 = !DILocalVariable(name: "fault", arg: 2, scope: !8222, file: !8118, line: 786, type: !103)
!8228 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8222, file: !8118, line: 786, type: !8191)
!8229 = !DILocalVariable(name: "reason", scope: !8222, file: !8118, line: 788, type: !111)
!8230 = !DILocation(line: 0, scope: !8222)
!8231 = !DILocation(line: 790, column: 15, scope: !8222)
!8232 = !DILocation(line: 792, column: 2, scope: !8222)
!8233 = !DILocation(line: 794, column: 12, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8222, file: !8118, line: 792, column: 17)
!8235 = !DILocation(line: 795, column: 3, scope: !8234)
!8236 = !DILocation(line: 800, column: 12, scope: !8234)
!8237 = !DILocation(line: 801, column: 3, scope: !8234)
!8238 = !DILocation(line: 803, column: 12, scope: !8234)
!8239 = !DILocation(line: 804, column: 3, scope: !8234)
!8240 = !DILocation(line: 806, column: 12, scope: !8234)
!8241 = !DILocation(line: 807, column: 3, scope: !8234)
!8242 = !DILocation(line: 814, column: 3, scope: !8234)
!8243 = !DILocation(line: 815, column: 3, scope: !8234)
!8244 = !DILocation(line: 820, column: 3, scope: !8234)
!8245 = !DILocation(line: 821, column: 3, scope: !8234)
!8246 = !DILocation(line: 829, column: 2, scope: !8222)
!8247 = distinct !DISubprogram(name: "hard_fault", scope: !8118, file: !8118, line: 709, type: !8248, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8250)
!8248 = !DISubroutineType(types: !8249)
!8249 = !{!111, !3304, !8191}
!8250 = !{!8251, !8252, !8253}
!8251 = !DILocalVariable(name: "esf", arg: 1, scope: !8247, file: !8118, line: 709, type: !3304)
!8252 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8247, file: !8118, line: 709, type: !8191)
!8253 = !DILocalVariable(name: "reason", scope: !8247, file: !8118, line: 711, type: !111)
!8254 = !DILocation(line: 0, scope: !8247)
!8255 = !DILocation(line: 713, column: 2, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8257, file: !8118, line: 713, column: 2)
!8257 = distinct !DILexicalBlock(scope: !8258, file: !8118, line: 713, column: 2)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !8118, line: 713, column: 2)
!8259 = distinct !DILexicalBlock(scope: !8247, file: !8118, line: 713, column: 2)
!8260 = !DILocation(line: 732, column: 15, scope: !8247)
!8261 = !DILocation(line: 734, column: 12, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8247, file: !8118, line: 734, column: 6)
!8263 = !DILocation(line: 734, column: 17, scope: !8262)
!8264 = !DILocation(line: 734, column: 41, scope: !8262)
!8265 = !DILocation(line: 734, column: 6, scope: !8247)
!8266 = !DILocation(line: 735, column: 3, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !8118, line: 735, column: 3)
!8268 = distinct !DILexicalBlock(scope: !8269, file: !8118, line: 735, column: 3)
!8269 = distinct !DILexicalBlock(scope: !8270, file: !8118, line: 735, column: 3)
!8270 = distinct !DILexicalBlock(scope: !8271, file: !8118, line: 735, column: 3)
!8271 = distinct !DILexicalBlock(scope: !8262, file: !8118, line: 734, column: 47)
!8272 = !DILocation(line: 736, column: 2, scope: !8271)
!8273 = !DILocation(line: 736, column: 19, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8262, file: !8118, line: 736, column: 13)
!8275 = !DILocation(line: 736, column: 49, scope: !8274)
!8276 = !DILocation(line: 736, column: 13, scope: !8262)
!8277 = !DILocation(line: 737, column: 3, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !8118, line: 737, column: 3)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !8118, line: 737, column: 3)
!8280 = distinct !DILexicalBlock(scope: !8281, file: !8118, line: 737, column: 3)
!8281 = distinct !DILexicalBlock(scope: !8282, file: !8118, line: 737, column: 3)
!8282 = distinct !DILexicalBlock(scope: !8274, file: !8118, line: 736, column: 55)
!8283 = !DILocation(line: 738, column: 2, scope: !8282)
!8284 = !DILocation(line: 738, column: 19, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8274, file: !8118, line: 738, column: 13)
!8286 = !DILocation(line: 738, column: 24, scope: !8285)
!8287 = !DILocation(line: 738, column: 47, scope: !8285)
!8288 = !DILocation(line: 738, column: 13, scope: !8274)
!8289 = !DILocation(line: 739, column: 3, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8291, file: !8118, line: 739, column: 3)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !8118, line: 739, column: 3)
!8292 = distinct !DILexicalBlock(scope: !8293, file: !8118, line: 739, column: 3)
!8293 = distinct !DILexicalBlock(scope: !8294, file: !8118, line: 739, column: 3)
!8294 = distinct !DILexicalBlock(scope: !8285, file: !8118, line: 738, column: 53)
!8295 = !DILocation(line: 740, column: 7, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8294, file: !8118, line: 740, column: 7)
!8297 = !DILocation(line: 740, column: 7, scope: !8294)
!8298 = !DILocation(line: 741, column: 4, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8300, file: !8118, line: 741, column: 4)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !8118, line: 741, column: 4)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !8118, line: 741, column: 4)
!8302 = distinct !DILexicalBlock(scope: !8303, file: !8118, line: 741, column: 4)
!8303 = distinct !DILexicalBlock(scope: !8296, file: !8118, line: 740, column: 38)
!8304 = !DILocation(line: 742, column: 24, scope: !8303)
!8305 = !DILocation(line: 743, column: 3, scope: !8303)
!8306 = !DILocation(line: 743, column: 20, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8296, file: !8118, line: 743, column: 14)
!8308 = !DILocation(line: 743, column: 25, scope: !8307)
!8309 = !DILocation(line: 743, column: 52, scope: !8307)
!8310 = !DILocation(line: 743, column: 14, scope: !8296)
!8311 = !DILocation(line: 744, column: 13, scope: !8312)
!8312 = distinct !DILexicalBlock(scope: !8307, file: !8118, line: 743, column: 58)
!8313 = !DILocation(line: 745, column: 3, scope: !8312)
!8314 = !DILocation(line: 745, column: 20, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8307, file: !8118, line: 745, column: 14)
!8316 = !DILocation(line: 745, column: 25, scope: !8315)
!8317 = !DILocation(line: 745, column: 52, scope: !8315)
!8318 = !DILocation(line: 745, column: 14, scope: !8307)
!8319 = !DILocation(line: 746, column: 13, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8315, file: !8118, line: 745, column: 58)
!8321 = !DILocation(line: 747, column: 3, scope: !8320)
!8322 = !DILocation(line: 747, column: 20, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8315, file: !8118, line: 747, column: 14)
!8324 = !DILocation(line: 747, column: 52, scope: !8323)
!8325 = !DILocation(line: 747, column: 14, scope: !8315)
!8326 = !DILocation(line: 748, column: 13, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8323, file: !8118, line: 747, column: 58)
!8328 = !DILocation(line: 754, column: 4, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !8118, line: 754, column: 4)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !8118, line: 754, column: 4)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !8118, line: 754, column: 4)
!8332 = distinct !DILexicalBlock(scope: !8323, file: !8118, line: 753, column: 10)
!8333 = !DILocation(line: 758, column: 3, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !8118, line: 758, column: 3)
!8335 = distinct !DILexicalBlock(scope: !8336, file: !8118, line: 758, column: 3)
!8336 = distinct !DILexicalBlock(scope: !8337, file: !8118, line: 758, column: 3)
!8337 = distinct !DILexicalBlock(scope: !8285, file: !8118, line: 757, column: 9)
!8338 = !DILocation(line: 766, column: 2, scope: !8247)
!8339 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8118, file: !8118, line: 229, type: !8223, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8340)
!8340 = !{!8341, !8342, !8343, !8344, !8345, !8346, !8349}
!8341 = !DILocalVariable(name: "esf", arg: 1, scope: !8339, file: !8118, line: 229, type: !3304)
!8342 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8339, file: !8118, line: 229, type: !103)
!8343 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8339, file: !8118, line: 230, type: !8191)
!8344 = !DILocalVariable(name: "reason", scope: !8339, file: !8118, line: 232, type: !111)
!8345 = !DILocalVariable(name: "mmfar", scope: !8339, file: !8118, line: 233, type: !111)
!8346 = !DILocalVariable(name: "temp", scope: !8347, file: !8118, line: 254, type: !111)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !8118, line: 244, column: 48)
!8348 = distinct !DILexicalBlock(scope: !8339, file: !8118, line: 244, column: 6)
!8349 = !DILocalVariable(name: "min_stack_ptr", scope: !8350, file: !8118, line: 309, type: !111)
!8350 = distinct !DILexicalBlock(scope: !8351, file: !8118, line: 308, column: 43)
!8351 = distinct !DILexicalBlock(scope: !8352, file: !8118, line: 308, column: 7)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !8118, line: 289, column: 40)
!8353 = distinct !DILexicalBlock(scope: !8339, file: !8118, line: 288, column: 6)
!8354 = !DILocation(line: 0, scope: !8339)
!8355 = !DILocation(line: 235, column: 2, scope: !8356)
!8356 = distinct !DILexicalBlock(scope: !8357, file: !8118, line: 235, column: 2)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !8118, line: 235, column: 2)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !8118, line: 235, column: 2)
!8359 = distinct !DILexicalBlock(scope: !8339, file: !8118, line: 235, column: 2)
!8360 = !DILocation(line: 237, column: 12, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8339, file: !8118, line: 237, column: 6)
!8362 = !DILocation(line: 237, column: 17, scope: !8361)
!8363 = !DILocation(line: 237, column: 41, scope: !8361)
!8364 = !DILocation(line: 237, column: 6, scope: !8339)
!8365 = !DILocation(line: 238, column: 3, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !8118, line: 238, column: 3)
!8367 = distinct !DILexicalBlock(scope: !8368, file: !8118, line: 238, column: 3)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !8118, line: 238, column: 3)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !8118, line: 238, column: 3)
!8370 = distinct !DILexicalBlock(scope: !8361, file: !8118, line: 237, column: 47)
!8371 = !DILocation(line: 240, column: 2, scope: !8370)
!8372 = !DILocation(line: 241, column: 12, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8339, file: !8118, line: 241, column: 6)
!8374 = !DILocation(line: 241, column: 17, scope: !8373)
!8375 = !DILocation(line: 241, column: 43, scope: !8373)
!8376 = !DILocation(line: 241, column: 6, scope: !8339)
!8377 = !DILocation(line: 242, column: 3, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !8118, line: 242, column: 3)
!8379 = distinct !DILexicalBlock(scope: !8380, file: !8118, line: 242, column: 3)
!8380 = distinct !DILexicalBlock(scope: !8381, file: !8118, line: 242, column: 3)
!8381 = distinct !DILexicalBlock(scope: !8382, file: !8118, line: 242, column: 3)
!8382 = distinct !DILexicalBlock(scope: !8373, file: !8118, line: 241, column: 49)
!8383 = !DILocation(line: 243, column: 2, scope: !8382)
!8384 = !DILocation(line: 244, column: 12, scope: !8348)
!8385 = !DILocation(line: 244, column: 17, scope: !8348)
!8386 = !DILocation(line: 244, column: 42, scope: !8348)
!8387 = !DILocation(line: 244, column: 6, scope: !8339)
!8388 = !DILocation(line: 245, column: 3, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !8118, line: 245, column: 3)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !8118, line: 245, column: 3)
!8391 = distinct !DILexicalBlock(scope: !8392, file: !8118, line: 245, column: 3)
!8392 = distinct !DILexicalBlock(scope: !8347, file: !8118, line: 245, column: 3)
!8393 = !DILocation(line: 254, column: 24, scope: !8347)
!8394 = !DILocation(line: 0, scope: !8347)
!8395 = !DILocation(line: 256, column: 13, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8347, file: !8118, line: 256, column: 7)
!8397 = !DILocation(line: 256, column: 18, scope: !8396)
!8398 = !DILocation(line: 256, column: 44, scope: !8396)
!8399 = !DILocation(line: 256, column: 7, scope: !8347)
!8400 = !DILocation(line: 258, column: 4, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !8118, line: 258, column: 4)
!8402 = distinct !DILexicalBlock(scope: !8403, file: !8118, line: 258, column: 4)
!8403 = distinct !DILexicalBlock(scope: !8404, file: !8118, line: 258, column: 4)
!8404 = distinct !DILexicalBlock(scope: !8405, file: !8118, line: 258, column: 4)
!8405 = distinct !DILexicalBlock(scope: !8396, file: !8118, line: 256, column: 50)
!8406 = !DILocation(line: 259, column: 24, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8405, file: !8118, line: 259, column: 8)
!8408 = !DILocation(line: 259, column: 8, scope: !8405)
!8409 = !DILocation(line: 261, column: 15, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8407, file: !8118, line: 259, column: 30)
!8411 = !DILocation(line: 262, column: 4, scope: !8410)
!8412 = !DILocation(line: 265, column: 12, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8339, file: !8118, line: 265, column: 6)
!8414 = !DILocation(line: 265, column: 17, scope: !8413)
!8415 = !DILocation(line: 265, column: 42, scope: !8413)
!8416 = !DILocation(line: 265, column: 6, scope: !8339)
!8417 = !DILocation(line: 266, column: 3, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !8118, line: 266, column: 3)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !8118, line: 266, column: 3)
!8420 = distinct !DILexicalBlock(scope: !8421, file: !8118, line: 266, column: 3)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !8118, line: 266, column: 3)
!8422 = distinct !DILexicalBlock(scope: !8413, file: !8118, line: 265, column: 48)
!8423 = !DILocation(line: 267, column: 2, scope: !8422)
!8424 = !DILocation(line: 288, column: 12, scope: !8353)
!8425 = !DILocation(line: 288, column: 17, scope: !8353)
!8426 = !DILocation(line: 288, column: 41, scope: !8353)
!8427 = !DILocation(line: 289, column: 9, scope: !8353)
!8428 = !DILocation(line: 289, column: 14, scope: !8353)
!8429 = !DILocation(line: 288, column: 6, scope: !8339)
!8430 = !DILocation(line: 308, column: 12, scope: !8351)
!8431 = !DILocation(line: 308, column: 17, scope: !8351)
!8432 = !DILocation(line: 308, column: 7, scope: !8352)
!8433 = !DILocation(line: 310, column: 6, scope: !8350)
!8434 = !DILocation(line: 309, column: 29, scope: !8350)
!8435 = !DILocation(line: 0, scope: !8350)
!8436 = !DILocation(line: 312, column: 8, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8350, file: !8118, line: 312, column: 8)
!8438 = !DILocation(line: 312, column: 8, scope: !8350)
!8439 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8440, file: !7834, line: 1099, type: !111)
!8440 = distinct !DISubprogram(name: "__set_PSP", scope: !7834, file: !7834, line: 1099, type: !7520, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8441)
!8441 = !{!8439}
!8442 = !DILocation(line: 0, scope: !8440, inlinedAt: !8443)
!8443 = distinct !DILocation(line: 338, column: 5, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8437, file: !8118, line: 312, column: 23)
!8445 = !DILocation(line: 1101, column: 3, scope: !8440, inlinedAt: !8443)
!8446 = !{i64 2480010}
!8447 = !DILocation(line: 341, column: 4, scope: !8444)
!8448 = !DILocation(line: 342, column: 5, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !8118, line: 342, column: 5)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !8118, line: 342, column: 5)
!8451 = distinct !DILexicalBlock(scope: !8437, file: !8118, line: 341, column: 11)
!8452 = !DILocation(line: 342, column: 5, scope: !8450)
!8453 = !DILocation(line: 342, column: 5, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8449, file: !8118, line: 342, column: 5)
!8455 = !DILocation(line: 366, column: 12, scope: !8339)
!8456 = !DILocation(line: 369, column: 15, scope: !8339)
!8457 = !DILocation(line: 371, column: 2, scope: !8339)
!8458 = distinct !DISubprogram(name: "bus_fault", scope: !8118, file: !8118, line: 383, type: !8459, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8461)
!8459 = !DISubroutineType(types: !8460)
!8460 = !{!103, !3304, !103, !8191}
!8461 = !{!8462, !8463, !8464, !8465, !8466}
!8462 = !DILocalVariable(name: "esf", arg: 1, scope: !8458, file: !8118, line: 383, type: !3304)
!8463 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8458, file: !8118, line: 383, type: !103)
!8464 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8458, file: !8118, line: 383, type: !8191)
!8465 = !DILocalVariable(name: "reason", scope: !8458, file: !8118, line: 385, type: !111)
!8466 = !DILocalVariable(name: "bfar", scope: !8467, file: !8118, line: 405, type: !111)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !8118, line: 395, column: 42)
!8468 = distinct !DILexicalBlock(scope: !8458, file: !8118, line: 395, column: 6)
!8469 = !DILocation(line: 0, scope: !8458)
!8470 = !DILocation(line: 387, column: 2, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !8118, line: 387, column: 2)
!8472 = distinct !DILexicalBlock(scope: !8473, file: !8118, line: 387, column: 2)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !8118, line: 387, column: 2)
!8474 = distinct !DILexicalBlock(scope: !8458, file: !8118, line: 387, column: 2)
!8475 = !DILocation(line: 389, column: 11, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8458, file: !8118, line: 389, column: 6)
!8477 = !DILocation(line: 389, column: 16, scope: !8476)
!8478 = !DILocation(line: 389, column: 6, scope: !8458)
!8479 = !DILocation(line: 390, column: 3, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !8118, line: 390, column: 3)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !8118, line: 390, column: 3)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !8118, line: 390, column: 3)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !8118, line: 390, column: 3)
!8484 = distinct !DILexicalBlock(scope: !8476, file: !8118, line: 389, column: 39)
!8485 = !DILocation(line: 391, column: 2, scope: !8484)
!8486 = !DILocation(line: 392, column: 11, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8458, file: !8118, line: 392, column: 6)
!8488 = !DILocation(line: 392, column: 16, scope: !8487)
!8489 = !DILocation(line: 392, column: 6, scope: !8458)
!8490 = !DILocation(line: 393, column: 3, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8492, file: !8118, line: 393, column: 3)
!8492 = distinct !DILexicalBlock(scope: !8493, file: !8118, line: 393, column: 3)
!8493 = distinct !DILexicalBlock(scope: !8494, file: !8118, line: 393, column: 3)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !8118, line: 393, column: 3)
!8495 = distinct !DILexicalBlock(scope: !8487, file: !8118, line: 392, column: 41)
!8496 = !DILocation(line: 394, column: 2, scope: !8495)
!8497 = !DILocation(line: 395, column: 11, scope: !8468)
!8498 = !DILocation(line: 395, column: 16, scope: !8468)
!8499 = !DILocation(line: 395, column: 6, scope: !8458)
!8500 = !DILocation(line: 396, column: 3, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8502, file: !8118, line: 396, column: 3)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !8118, line: 396, column: 3)
!8503 = distinct !DILexicalBlock(scope: !8504, file: !8118, line: 396, column: 3)
!8504 = distinct !DILexicalBlock(scope: !8467, file: !8118, line: 396, column: 3)
!8505 = !DILocation(line: 405, column: 3, scope: !8467)
!8506 = !DILocation(line: 0, scope: !8467)
!8507 = !DILocation(line: 407, column: 13, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8467, file: !8118, line: 407, column: 7)
!8509 = !DILocation(line: 407, column: 18, scope: !8508)
!8510 = !DILocation(line: 407, column: 44, scope: !8508)
!8511 = !DILocation(line: 407, column: 7, scope: !8467)
!8512 = !DILocation(line: 408, column: 4, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8514, file: !8118, line: 408, column: 4)
!8514 = distinct !DILexicalBlock(scope: !8515, file: !8118, line: 408, column: 4)
!8515 = distinct !DILexicalBlock(scope: !8516, file: !8118, line: 408, column: 4)
!8516 = distinct !DILexicalBlock(scope: !8517, file: !8118, line: 408, column: 4)
!8517 = distinct !DILexicalBlock(scope: !8508, file: !8118, line: 407, column: 50)
!8518 = !DILocation(line: 409, column: 24, scope: !8519)
!8519 = distinct !DILexicalBlock(scope: !8517, file: !8118, line: 409, column: 8)
!8520 = !DILocation(line: 409, column: 8, scope: !8517)
!8521 = !DILocation(line: 411, column: 15, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8519, file: !8118, line: 409, column: 30)
!8523 = !DILocation(line: 412, column: 4, scope: !8522)
!8524 = !DILocation(line: 415, column: 11, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8458, file: !8118, line: 415, column: 6)
!8526 = !DILocation(line: 415, column: 16, scope: !8525)
!8527 = !DILocation(line: 415, column: 6, scope: !8458)
!8528 = !DILocation(line: 416, column: 3, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8530, file: !8118, line: 416, column: 3)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !8118, line: 416, column: 3)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !8118, line: 416, column: 3)
!8532 = distinct !DILexicalBlock(scope: !8533, file: !8118, line: 416, column: 3)
!8533 = distinct !DILexicalBlock(scope: !8525, file: !8118, line: 415, column: 44)
!8534 = !DILocation(line: 417, column: 2, scope: !8533)
!8535 = !DILocation(line: 418, column: 12, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8458, file: !8118, line: 418, column: 6)
!8537 = !DILocation(line: 418, column: 17, scope: !8536)
!8538 = !DILocation(line: 418, column: 41, scope: !8536)
!8539 = !DILocation(line: 418, column: 6, scope: !8458)
!8540 = !DILocation(line: 419, column: 3, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !8118, line: 419, column: 3)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !8118, line: 419, column: 3)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !8118, line: 419, column: 3)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !8118, line: 419, column: 3)
!8545 = distinct !DILexicalBlock(scope: !8536, file: !8118, line: 418, column: 47)
!8546 = !DILocation(line: 421, column: 2, scope: !8545)
!8547 = !DILocation(line: 524, column: 12, scope: !8458)
!8548 = !DILocation(line: 526, column: 15, scope: !8458)
!8549 = !DILocation(line: 528, column: 2, scope: !8458)
!8550 = distinct !DISubprogram(name: "usage_fault", scope: !8118, file: !8118, line: 539, type: !8551, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8555)
!8551 = !DISubroutineType(types: !8552)
!8552 = !{!111, !8553}
!8553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8554, size: 32)
!8554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3305)
!8555 = !{!8556, !8557}
!8556 = !DILocalVariable(name: "esf", arg: 1, scope: !8550, file: !8118, line: 539, type: !8553)
!8557 = !DILocalVariable(name: "reason", scope: !8550, file: !8118, line: 541, type: !111)
!8558 = !DILocation(line: 0, scope: !8550)
!8559 = !DILocation(line: 543, column: 2, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !8118, line: 543, column: 2)
!8561 = distinct !DILexicalBlock(scope: !8562, file: !8118, line: 543, column: 2)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !8118, line: 543, column: 2)
!8563 = distinct !DILexicalBlock(scope: !8550, file: !8118, line: 543, column: 2)
!8564 = !DILocation(line: 546, column: 12, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8550, file: !8118, line: 546, column: 6)
!8566 = !DILocation(line: 546, column: 17, scope: !8565)
!8567 = !DILocation(line: 546, column: 43, scope: !8565)
!8568 = !DILocation(line: 546, column: 6, scope: !8550)
!8569 = !DILocation(line: 547, column: 3, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !8118, line: 547, column: 3)
!8571 = distinct !DILexicalBlock(scope: !8572, file: !8118, line: 547, column: 3)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !8118, line: 547, column: 3)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !8118, line: 547, column: 3)
!8574 = distinct !DILexicalBlock(scope: !8565, file: !8118, line: 546, column: 49)
!8575 = !DILocation(line: 548, column: 2, scope: !8574)
!8576 = !DILocation(line: 549, column: 12, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8550, file: !8118, line: 549, column: 6)
!8578 = !DILocation(line: 549, column: 17, scope: !8577)
!8579 = !DILocation(line: 549, column: 43, scope: !8577)
!8580 = !DILocation(line: 549, column: 6, scope: !8550)
!8581 = !DILocation(line: 550, column: 3, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8583, file: !8118, line: 550, column: 3)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !8118, line: 550, column: 3)
!8584 = distinct !DILexicalBlock(scope: !8585, file: !8118, line: 550, column: 3)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !8118, line: 550, column: 3)
!8586 = distinct !DILexicalBlock(scope: !8577, file: !8118, line: 549, column: 49)
!8587 = !DILocation(line: 551, column: 2, scope: !8586)
!8588 = !DILocation(line: 567, column: 12, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8550, file: !8118, line: 567, column: 6)
!8590 = !DILocation(line: 567, column: 17, scope: !8589)
!8591 = !DILocation(line: 567, column: 38, scope: !8589)
!8592 = !DILocation(line: 567, column: 6, scope: !8550)
!8593 = !DILocation(line: 568, column: 3, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8595, file: !8118, line: 568, column: 3)
!8595 = distinct !DILexicalBlock(scope: !8596, file: !8118, line: 568, column: 3)
!8596 = distinct !DILexicalBlock(scope: !8597, file: !8118, line: 568, column: 3)
!8597 = distinct !DILexicalBlock(scope: !8598, file: !8118, line: 568, column: 3)
!8598 = distinct !DILexicalBlock(scope: !8589, file: !8118, line: 567, column: 44)
!8599 = !DILocation(line: 569, column: 2, scope: !8598)
!8600 = !DILocation(line: 570, column: 12, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8550, file: !8118, line: 570, column: 6)
!8602 = !DILocation(line: 570, column: 17, scope: !8601)
!8603 = !DILocation(line: 570, column: 39, scope: !8601)
!8604 = !DILocation(line: 570, column: 6, scope: !8550)
!8605 = !DILocation(line: 571, column: 3, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8607, file: !8118, line: 571, column: 3)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !8118, line: 571, column: 3)
!8608 = distinct !DILexicalBlock(scope: !8609, file: !8118, line: 571, column: 3)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !8118, line: 571, column: 3)
!8610 = distinct !DILexicalBlock(scope: !8601, file: !8118, line: 570, column: 45)
!8611 = !DILocation(line: 572, column: 2, scope: !8610)
!8612 = !DILocation(line: 573, column: 12, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8550, file: !8118, line: 573, column: 6)
!8614 = !DILocation(line: 573, column: 17, scope: !8613)
!8615 = !DILocation(line: 573, column: 42, scope: !8613)
!8616 = !DILocation(line: 573, column: 6, scope: !8550)
!8617 = !DILocation(line: 574, column: 3, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !8118, line: 574, column: 3)
!8619 = distinct !DILexicalBlock(scope: !8620, file: !8118, line: 574, column: 3)
!8620 = distinct !DILexicalBlock(scope: !8621, file: !8118, line: 574, column: 3)
!8621 = distinct !DILexicalBlock(scope: !8622, file: !8118, line: 574, column: 3)
!8622 = distinct !DILexicalBlock(scope: !8613, file: !8118, line: 573, column: 48)
!8623 = !DILocation(line: 575, column: 2, scope: !8622)
!8624 = !DILocation(line: 576, column: 12, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8550, file: !8118, line: 576, column: 6)
!8626 = !DILocation(line: 576, column: 17, scope: !8625)
!8627 = !DILocation(line: 576, column: 44, scope: !8625)
!8628 = !DILocation(line: 576, column: 6, scope: !8550)
!8629 = !DILocation(line: 577, column: 3, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8631, file: !8118, line: 577, column: 3)
!8631 = distinct !DILexicalBlock(scope: !8632, file: !8118, line: 577, column: 3)
!8632 = distinct !DILexicalBlock(scope: !8633, file: !8118, line: 577, column: 3)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !8118, line: 577, column: 3)
!8634 = distinct !DILexicalBlock(scope: !8625, file: !8118, line: 576, column: 50)
!8635 = !DILocation(line: 578, column: 2, scope: !8634)
!8636 = !DILocation(line: 581, column: 12, scope: !8550)
!8637 = !DILocation(line: 583, column: 2, scope: !8550)
!8638 = distinct !DISubprogram(name: "debug_monitor", scope: !8118, file: !8118, line: 632, type: !8639, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8641)
!8639 = !DISubroutineType(types: !8640)
!8640 = !{null, !3304, !8191}
!8641 = !{!8642, !8643}
!8642 = !DILocalVariable(name: "esf", arg: 1, scope: !8638, file: !8118, line: 632, type: !3304)
!8643 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8638, file: !8118, line: 632, type: !8191)
!8644 = !DILocation(line: 0, scope: !8638)
!8645 = !DILocation(line: 634, column: 15, scope: !8638)
!8646 = !DILocation(line: 636, column: 2, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !8118, line: 636, column: 2)
!8648 = distinct !DILexicalBlock(scope: !8649, file: !8118, line: 636, column: 2)
!8649 = distinct !DILexicalBlock(scope: !8650, file: !8118, line: 636, column: 2)
!8650 = distinct !DILexicalBlock(scope: !8638, file: !8118, line: 636, column: 2)
!8651 = !DILocation(line: 652, column: 1, scope: !8638)
!8652 = distinct !DISubprogram(name: "reserved_exception", scope: !8118, file: !8118, line: 776, type: !8653, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8655)
!8653 = !DISubroutineType(types: !8654)
!8654 = !{null, !8553, !103}
!8655 = !{!8656, !8657}
!8656 = !DILocalVariable(name: "esf", arg: 1, scope: !8652, file: !8118, line: 776, type: !8553)
!8657 = !DILocalVariable(name: "fault", arg: 2, scope: !8652, file: !8118, line: 776, type: !103)
!8658 = !DILocation(line: 0, scope: !8652)
!8659 = !DILocation(line: 780, column: 2, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8661, file: !8118, line: 780, column: 2)
!8661 = distinct !DILexicalBlock(scope: !8662, file: !8118, line: 780, column: 2)
!8662 = distinct !DILexicalBlock(scope: !8663, file: !8118, line: 780, column: 2)
!8663 = distinct !DILexicalBlock(scope: !8652, file: !8118, line: 780, column: 2)
!8664 = !DILocation(line: 783, column: 1, scope: !8652)
!8665 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8118, file: !8118, line: 658, type: !8666, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !8668)
!8666 = !DISubroutineType(types: !8667)
!8667 = !{!122, !3304}
!8668 = !{!8669, !8670, !8671}
!8669 = !DILocalVariable(name: "esf", arg: 1, scope: !8665, file: !8118, line: 658, type: !3304)
!8670 = !DILocalVariable(name: "ret_addr", scope: !8665, file: !8118, line: 660, type: !3076)
!8671 = !DILocalVariable(name: "fault_insn", scope: !8665, file: !8118, line: 686, type: !181)
!8672 = !DILocation(line: 0, scope: !8665)
!8673 = !DILocation(line: 660, column: 46, scope: !8665)
!8674 = !DILocation(line: 660, column: 23, scope: !8665)
!8675 = !DILocation(line: 682, column: 11, scope: !8665)
!8676 = !DILocation(line: 271, column: 3, scope: !8677, inlinedAt: !8678)
!8677 = distinct !DISubprogram(name: "__DSB", scope: !7834, file: !7834, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !2512)
!8678 = distinct !DILocation(line: 683, column: 2, scope: !8665)
!8679 = !{i64 2456145}
!8680 = !DILocation(line: 260, column: 3, scope: !8681, inlinedAt: !8682)
!8681 = distinct !DISubprogram(name: "__ISB", scope: !7834, file: !7834, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !2512)
!8682 = distinct !DILocation(line: 684, column: 2, scope: !8665)
!8683 = !{i64 2455862}
!8684 = !DILocation(line: 686, column: 35, scope: !8665)
!8685 = !DILocation(line: 686, column: 24, scope: !8665)
!8686 = !DILocation(line: 688, column: 11, scope: !8665)
!8687 = !DILocation(line: 271, column: 3, scope: !8677, inlinedAt: !8688)
!8688 = distinct !DILocation(line: 689, column: 2, scope: !8665)
!8689 = !DILocation(line: 260, column: 3, scope: !8681, inlinedAt: !8690)
!8690 = distinct !DILocation(line: 690, column: 2, scope: !8665)
!8691 = !DILocation(line: 693, column: 45, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8665, file: !8118, line: 693, column: 6)
!8693 = !DILocation(line: 699, column: 1, scope: !8665)
!8694 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8118, file: !8118, line: 1107, type: !323, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3276, retainedNodes: !2512)
!8695 = !DILocation(line: 1111, column: 11, scope: !8694)
!8696 = !DILocation(line: 1136, column: 1, scope: !8694)
!8697 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !8698, file: !8698, line: 26, type: !323, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3347, retainedNodes: !8699)
!8698 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8699 = !{!8700}
!8700 = !DILocalVariable(name: "irq", scope: !8697, file: !8698, line: 28, type: !103)
!8701 = !DILocation(line: 0, scope: !8697)
!8702 = !DILocation(line: 30, column: 2, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8697, file: !8698, line: 30, column: 2)
!8704 = !DILocation(line: 31, column: 3, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !8698, line: 30, column: 39)
!8706 = distinct !DILexicalBlock(scope: !8703, file: !8698, line: 30, column: 2)
!8707 = !DILocation(line: 30, column: 35, scope: !8706)
!8708 = !DILocation(line: 30, column: 13, scope: !8706)
!8709 = distinct !{!8709, !8702, !8710}
!8710 = !DILocation(line: 32, column: 2, scope: !8703)
!8711 = !DILocation(line: 33, column: 1, scope: !8697)
!8712 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1005, file: !1005, line: 1638, type: !7874, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3347, retainedNodes: !8713)
!8713 = !{!8714, !8715}
!8714 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8712, file: !1005, line: 1638, type: !1338)
!8715 = !DILocalVariable(name: "priority", arg: 2, scope: !8712, file: !1005, line: 1638, type: !111)
!8716 = !DILocation(line: 0, scope: !8712)
!8717 = !DILocation(line: 1640, column: 7, scope: !8712)
!8718 = !DILocation(line: 0, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8712, file: !1005, line: 1640, column: 7)
!8720 = !DILocation(line: 1648, column: 1, scope: !8712)
!8721 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !8722, file: !8722, line: 27, type: !8723, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3392, retainedNodes: !8828)
!8722 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8723 = !DISubroutineType(types: !8724)
!8724 = !{null, !8725}
!8725 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !8726)
!8726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8727, size: 32)
!8727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !8728)
!8728 = !{!8729, !8787, !8799, !8800, !8801, !8802, !8808, !8823}
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8727, file: !199, line: 247, baseType: !8730, size: 384)
!8730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !8731)
!8731 = !{!8732, !8756, !8763, !8764, !8765, !8774, !8775, !8776}
!8732 = !DIDerivedType(tag: DW_TAG_member, scope: !8730, file: !199, line: 60, baseType: !8733, size: 64)
!8733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8730, file: !199, line: 60, size: 64, elements: !8734)
!8734 = !{!8735, !8750}
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8733, file: !199, line: 61, baseType: !8736, size: 64)
!8736 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !8737)
!8737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !8738)
!8738 = !{!8739, !8745}
!8739 = !DIDerivedType(tag: DW_TAG_member, scope: !8737, file: !136, line: 38, baseType: !8740, size: 32)
!8740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8737, file: !136, line: 38, size: 32, elements: !8741)
!8741 = !{!8742, !8744}
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8740, file: !136, line: 39, baseType: !8743, size: 32)
!8743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8737, size: 32)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8740, file: !136, line: 40, baseType: !8743, size: 32)
!8745 = !DIDerivedType(tag: DW_TAG_member, scope: !8737, file: !136, line: 42, baseType: !8746, size: 32, offset: 32)
!8746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8737, file: !136, line: 42, size: 32, elements: !8747)
!8747 = !{!8748, !8749}
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8746, file: !136, line: 43, baseType: !8743, size: 32)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8746, file: !136, line: 44, baseType: !8743, size: 32)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8733, file: !199, line: 62, baseType: !8751, size: 64)
!8751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !8752)
!8752 = !{!8753}
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8751, file: !211, line: 50, baseType: !8754, size: 64)
!8754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8755, size: 64, elements: !216)
!8755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8751, size: 32)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8730, file: !199, line: 68, baseType: !8757, size: 32, offset: 64)
!8757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8758, size: 32)
!8758 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !8759)
!8759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !8760)
!8760 = !{!8761}
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8759, file: !131, line: 232, baseType: !8762, size: 64)
!8762 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !8737)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8730, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8730, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!8765 = !DIDerivedType(tag: DW_TAG_member, scope: !8730, file: !199, line: 90, baseType: !8766, size: 16, offset: 112)
!8766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8730, file: !199, line: 90, size: 16, elements: !8767)
!8767 = !{!8768, !8773}
!8768 = !DIDerivedType(tag: DW_TAG_member, scope: !8766, file: !199, line: 91, baseType: !8769, size: 16)
!8769 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8766, file: !199, line: 91, size: 16, elements: !8770)
!8770 = !{!8771, !8772}
!8771 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8769, file: !199, line: 96, baseType: !229, size: 8)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8769, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8766, file: !199, line: 100, baseType: !181, size: 16)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8730, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8730, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8730, file: !199, line: 131, baseType: !8777, size: 192, offset: 192)
!8777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !8778)
!8778 = !{!8779, !8780, !8786}
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8777, file: !131, line: 245, baseType: !8736, size: 64)
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8777, file: !131, line: 246, baseType: !8781, size: 32, offset: 64)
!8781 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !8782)
!8782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8783, size: 32)
!8783 = !DISubroutineType(types: !8784)
!8784 = !{null, !8785}
!8785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8777, size: 32)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8777, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8727, file: !199, line: 250, baseType: !8788, size: 288, offset: 384)
!8788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !8789)
!8789 = !{!8790, !8791, !8792, !8793, !8794, !8795, !8796, !8797, !8798}
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8788, file: !248, line: 26, baseType: !111, size: 32)
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8788, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8788, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!8793 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8788, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!8794 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8788, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!8795 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8788, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!8796 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8788, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8788, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!8798 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8788, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8727, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!8800 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8727, file: !199, line: 256, baseType: !8758, size: 64, offset: 704)
!8801 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8727, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!8802 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8727, file: !199, line: 300, baseType: !8803, size: 96, offset: 800)
!8803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !8804)
!8804 = !{!8805, !8806, !8807}
!8805 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8803, file: !199, line: 153, baseType: !22, size: 32)
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8803, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8803, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8727, file: !199, line: 325, baseType: !8809, size: 32, offset: 896)
!8809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8810, size: 32)
!8810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !8811)
!8811 = !{!8812, !8818, !8819}
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8810, file: !127, line: 5074, baseType: !8813, size: 96)
!8813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !8814)
!8814 = !{!8815, !8816, !8817}
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8813, file: !274, line: 57, baseType: !277, size: 32)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8813, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8813, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8810, file: !127, line: 5075, baseType: !8758, size: 64, offset: 96)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8810, file: !127, line: 5076, baseType: !8820, size: 32, offset: 160)
!8820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !8821)
!8821 = !{!8822}
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8820, file: !152, line: 52, baseType: !22, size: 32)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8727, file: !199, line: 343, baseType: !8824, size: 64, offset: 928)
!8824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !8825)
!8825 = !{!8826, !8827}
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8824, file: !248, line: 63, baseType: !111, size: 32)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8824, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!8828 = !{!8829}
!8829 = !DILocalVariable(name: "thread", arg: 1, scope: !8721, file: !8722, line: 27, type: !8725)
!8830 = !DILocation(line: 0, scope: !8721)
!8831 = !DILocation(line: 29, column: 6, scope: !8832)
!8832 = distinct !DILexicalBlock(scope: !8721, file: !8722, line: 29, column: 6)
!8833 = !DILocation(line: 29, column: 15, scope: !8832)
!8834 = !DILocation(line: 29, column: 6, scope: !8721)
!8835 = !DILocation(line: 1031, column: 3, scope: !8836, inlinedAt: !8841)
!8836 = distinct !DISubprogram(name: "__get_IPSR", scope: !7834, file: !7834, line: 1027, type: !8837, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3392, retainedNodes: !8839)
!8837 = !DISubroutineType(types: !8838)
!8838 = !{!111}
!8839 = !{!8840}
!8840 = !DILocalVariable(name: "result", scope: !8836, file: !7834, line: 1029, type: !111)
!8841 = distinct !DILocation(line: 48, column: 10, scope: !8842, inlinedAt: !8846)
!8842 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8843, file: !8843, line: 46, type: !8844, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3392, retainedNodes: !2512)
!8843 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8844 = !DISubroutineType(types: !8845)
!8845 = !{!122}
!8846 = distinct !DILocation(line: 30, column: 7, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !8722, line: 30, column: 7)
!8848 = distinct !DILexicalBlock(scope: !8832, file: !8722, line: 29, column: 26)
!8849 = !{i64 2444993}
!8850 = !DILocation(line: 0, scope: !8836, inlinedAt: !8841)
!8851 = !DILocation(line: 48, column: 9, scope: !8842, inlinedAt: !8846)
!8852 = !DILocation(line: 30, column: 7, scope: !8848)
!8853 = !DILocation(line: 42, column: 14, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8847, file: !8722, line: 30, column: 25)
!8855 = !DILocation(line: 48, column: 15, scope: !8854)
!8856 = !DILocation(line: 49, column: 3, scope: !8854)
!8857 = !DILocation(line: 52, column: 2, scope: !8721)
!8858 = !DILocation(line: 53, column: 1, scope: !8721)
!8859 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !867, file: !867, line: 127, type: !323, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !860, retainedNodes: !2512)
!8860 = !DILocation(line: 134, column: 2, scope: !8859)
!8861 = !DILocation(line: 156, column: 1, scope: !8859)
!8862 = !DILocation(line: 0, scope: !866)
!8863 = !DILocation(line: 289, column: 36, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !866, file: !867, line: 285, column: 2)
!8865 = !DILocation(line: 289, column: 42, scope: !8864)
!8866 = !DILocation(line: 300, column: 36, scope: !866)
!8867 = !DILocation(line: 301, column: 35, scope: !866)
!8868 = !DILocation(line: 302, column: 37, scope: !866)
!8869 = !DILocation(line: 311, column: 2, scope: !866)
!8870 = !DILocation(line: 316, column: 1, scope: !866)
!8871 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !1033, file: !1033, line: 180, type: !323, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !2512)
!8872 = !DILocation(line: 188, column: 12, scope: !8871)
!8873 = !DILocation(line: 271, column: 3, scope: !8874, inlinedAt: !8875)
!8874 = distinct !DISubprogram(name: "__DSB", scope: !7834, file: !7834, line: 269, type: !323, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !2512)
!8875 = distinct !DILocation(line: 192, column: 2, scope: !8871)
!8876 = !{i64 2603820}
!8877 = !DILocation(line: 260, column: 3, scope: !8878, inlinedAt: !8879)
!8878 = distinct !DISubprogram(name: "__ISB", scope: !7834, file: !7834, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !2512)
!8879 = distinct !DILocation(line: 193, column: 2, scope: !8871)
!8880 = !{i64 2603537}
!8881 = !DILocation(line: 194, column: 1, scope: !8871)
!8882 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !1033, file: !1033, line: 199, type: !323, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !2512)
!8883 = !DILocation(line: 282, column: 3, scope: !8884, inlinedAt: !8885)
!8884 = distinct !DISubprogram(name: "__DMB", scope: !7834, file: !7834, line: 280, type: !323, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !2512)
!8885 = distinct !DILocation(line: 202, column: 2, scope: !8882)
!8886 = !{i64 2604096}
!8887 = !DILocation(line: 205, column: 12, scope: !8882)
!8888 = !DILocation(line: 206, column: 1, scope: !8882)
!8889 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !1033, file: !1033, line: 275, type: !8890, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8903)
!8890 = !DISubroutineType(types: !8891)
!8891 = !{null, !8892, !2294, !8085, !8085}
!8892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8893, size: 32)
!8893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8894)
!8894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !979, line: 52, size: 96, elements: !8895)
!8895 = !{!8896, !8897, !8898}
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8894, file: !979, line: 53, baseType: !22, size: 32)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8894, file: !979, line: 54, baseType: !156, size: 32, offset: 32)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !8894, file: !979, line: 55, baseType: !8899, size: 32, offset: 64)
!8899 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !985, line: 151, baseType: !8900)
!8900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !985, line: 149, size: 32, elements: !8901)
!8901 = !{!8902}
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !8900, file: !985, line: 150, baseType: !111, size: 32)
!8903 = !{!8904, !8905, !8906, !8907}
!8904 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8889, file: !1033, line: 276, type: !8892)
!8905 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8889, file: !1033, line: 276, type: !2294)
!8906 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !8889, file: !1033, line: 277, type: !8085)
!8907 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8889, file: !1033, line: 277, type: !8085)
!8908 = !DILocation(line: 0, scope: !8889)
!8909 = !DILocation(line: 279, column: 6, scope: !8910)
!8910 = distinct !DILexicalBlock(scope: !8889, file: !1033, line: 279, column: 6)
!8911 = !DILocation(line: 280, column: 57, scope: !8910)
!8912 = !DILocation(line: 279, column: 6, scope: !8889)
!8913 = !DILocation(line: 282, column: 3, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !1033, line: 282, column: 3)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !1033, line: 282, column: 3)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !1033, line: 282, column: 3)
!8917 = distinct !DILexicalBlock(scope: !8910, file: !1033, line: 280, column: 69)
!8918 = !DILocation(line: 285, column: 1, scope: !8889)
!8919 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !8920, file: !8920, line: 220, type: !8921, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8923)
!8920 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8921 = !DISubroutineType(types: !8922)
!8922 = !{!103, !8892, !2294, !8085, !8085}
!8923 = !{!8924, !8925, !8926, !8927, !8928}
!8924 = !DILocalVariable(name: "static_regions", arg: 1, scope: !8919, file: !8920, line: 221, type: !8892)
!8925 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8919, file: !8920, line: 221, type: !2294)
!8926 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !8919, file: !8920, line: 222, type: !8085)
!8927 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !8919, file: !8920, line: 223, type: !8085)
!8928 = !DILocalVariable(name: "mpu_reg_index", scope: !8919, file: !8920, line: 225, type: !103)
!8929 = !DILocation(line: 0, scope: !8919)
!8930 = !DILocation(line: 225, column: 22, scope: !8919)
!8931 = !DILocation(line: 233, column: 18, scope: !8919)
!8932 = !DILocation(line: 236, column: 23, scope: !8919)
!8933 = !DILocation(line: 236, column: 21, scope: !8919)
!8934 = !DILocation(line: 238, column: 2, scope: !8919)
!8935 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !1033, file: !1033, line: 105, type: !8936, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8938)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!103, !8892, !166, !166, !122}
!8938 = !{!8939, !8940, !8941, !8942, !8943, !8944}
!8939 = !DILocalVariable(name: "regions", arg: 1, scope: !8935, file: !1033, line: 106, type: !8892)
!8940 = !DILocalVariable(name: "regions_num", arg: 2, scope: !8935, file: !1033, line: 106, type: !166)
!8941 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !8935, file: !1033, line: 106, type: !166)
!8942 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !8935, file: !1033, line: 107, type: !122)
!8943 = !DILocalVariable(name: "i", scope: !8935, file: !1033, line: 109, type: !103)
!8944 = !DILocalVariable(name: "reg_index", scope: !8935, file: !1033, line: 110, type: !103)
!8945 = !DILocation(line: 0, scope: !8935)
!8946 = !DILocation(line: 110, column: 18, scope: !8935)
!8947 = !DILocation(line: 112, column: 16, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8949, file: !1033, line: 112, column: 2)
!8949 = distinct !DILexicalBlock(scope: !8935, file: !1033, line: 112, column: 2)
!8950 = !DILocation(line: 112, column: 2, scope: !8949)
!8951 = !DILocation(line: 113, column: 7, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8953, file: !1033, line: 113, column: 7)
!8953 = distinct !DILexicalBlock(scope: !8948, file: !1033, line: 112, column: 36)
!8954 = !DILocation(line: 113, column: 18, scope: !8952)
!8955 = !DILocation(line: 113, column: 23, scope: !8952)
!8956 = !DILocation(line: 113, column: 7, scope: !8953)
!8957 = !DILocation(line: 118, column: 23, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8953, file: !1033, line: 118, column: 7)
!8959 = !DILocation(line: 119, column: 7, scope: !8958)
!8960 = !DILocation(line: 118, column: 7, scope: !8953)
!8961 = !DILocation(line: 120, column: 4, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !1033, line: 120, column: 4)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !1033, line: 120, column: 4)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !1033, line: 120, column: 4)
!8965 = distinct !DILexicalBlock(scope: !8966, file: !1033, line: 120, column: 4)
!8966 = distinct !DILexicalBlock(scope: !8958, file: !1033, line: 119, column: 45)
!8967 = !DILocation(line: 121, column: 4, scope: !8966)
!8968 = !DILocation(line: 124, column: 36, scope: !8953)
!8969 = !DILocation(line: 124, column: 15, scope: !8953)
!8970 = !DILocation(line: 126, column: 17, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8953, file: !1033, line: 126, column: 7)
!8972 = !DILocation(line: 126, column: 7, scope: !8953)
!8973 = !DILocation(line: 131, column: 12, scope: !8953)
!8974 = !DILocation(line: 132, column: 2, scope: !8953)
!8975 = !DILocation(line: 112, column: 32, scope: !8948)
!8976 = distinct !{!8976, !8950, !8977}
!8977 = !DILocation(line: 132, column: 2, scope: !8949)
!8978 = !DILocation(line: 135, column: 1, scope: !8935)
!8979 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !8920, file: !8920, line: 63, type: !8980, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8982)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{!103, !8892}
!8982 = !{!8983, !8984}
!8983 = !DILocalVariable(name: "part", arg: 1, scope: !8979, file: !8920, line: 63, type: !8892)
!8984 = !DILocalVariable(name: "partition_is_valid", scope: !8979, file: !8920, line: 70, type: !103)
!8985 = !DILocation(line: 0, scope: !8979)
!8986 = !DILocation(line: 71, column: 11, scope: !8979)
!8987 = !DILocation(line: 71, column: 37, scope: !8979)
!8988 = !DILocation(line: 72, column: 3, scope: !8979)
!8989 = !DILocation(line: 71, column: 30, scope: !8979)
!8990 = !DILocation(line: 75, column: 11, scope: !8979)
!8991 = !DILocation(line: 75, column: 17, scope: !8979)
!8992 = !DILocation(line: 75, column: 38, scope: !8979)
!8993 = !DILocation(line: 77, column: 2, scope: !8979)
!8994 = distinct !DISubprogram(name: "mpu_configure_region", scope: !1033, file: !1033, line: 79, type: !8995, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !8997)
!8995 = !DISubroutineType(types: !8996)
!8996 = !{!103, !2294, !8892}
!8997 = !{!8998, !8999, !9000}
!8998 = !DILocalVariable(name: "index", arg: 1, scope: !8994, file: !1033, line: 79, type: !2294)
!8999 = !DILocalVariable(name: "new_region", arg: 2, scope: !8994, file: !1033, line: 80, type: !8892)
!9000 = !DILocalVariable(name: "region_conf", scope: !8994, file: !1033, line: 82, type: !1022)
!9001 = !DILocation(line: 0, scope: !8994)
!9002 = !DILocation(line: 82, column: 2, scope: !8994)
!9003 = !DILocation(line: 82, column: 24, scope: !8994)
!9004 = !DILocation(line: 87, column: 33, scope: !8994)
!9005 = !DILocation(line: 87, column: 14, scope: !8994)
!9006 = !DILocation(line: 87, column: 19, scope: !8994)
!9007 = !DILocation(line: 91, column: 55, scope: !8994)
!9008 = !DILocation(line: 92, column: 16, scope: !8994)
!9009 = !DILocation(line: 92, column: 53, scope: !8994)
!9010 = !DILocation(line: 91, column: 2, scope: !8994)
!9011 = !DILocation(line: 95, column: 9, scope: !8994)
!9012 = !DILocation(line: 97, column: 1, scope: !8994)
!9013 = !DILocation(line: 95, column: 2, scope: !8994)
!9014 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !8920, file: !8920, line: 113, type: !9015, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9020)
!9015 = !DISubroutineType(types: !9016)
!9016 = !{null, !9017, !9018, !111, !111}
!9017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 32)
!9018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9019, size: 32)
!9019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8899)
!9020 = !{!9021, !9022, !9023, !9024}
!9021 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9014, file: !8920, line: 114, type: !9017)
!9022 = !DILocalVariable(name: "attr", arg: 2, scope: !9014, file: !8920, line: 115, type: !9018)
!9023 = !DILocalVariable(name: "base", arg: 3, scope: !9014, file: !8920, line: 115, type: !111)
!9024 = !DILocalVariable(name: "size", arg: 4, scope: !9014, file: !8920, line: 115, type: !111)
!9025 = !DILocation(line: 0, scope: !9014)
!9026 = !DILocation(line: 127, column: 23, scope: !9014)
!9027 = !DILocation(line: 127, column: 35, scope: !9014)
!9028 = !DILocation(line: 127, column: 33, scope: !9014)
!9029 = !DILocation(line: 127, column: 10, scope: !9014)
!9030 = !DILocation(line: 127, column: 15, scope: !9014)
!9031 = !DILocation(line: 129, column: 1, scope: !9014)
!9032 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !1033, file: !1033, line: 57, type: !9033, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9035)
!9033 = !DISubroutineType(types: !9034)
!9034 = !{!103, !2294, !1020}
!9035 = !{!9036, !9037}
!9036 = !DILocalVariable(name: "index", arg: 1, scope: !9032, file: !1033, line: 57, type: !2294)
!9037 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9032, file: !1033, line: 58, type: !1020)
!9038 = !DILocation(line: 0, scope: !9032)
!9039 = !DILocation(line: 61, column: 6, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9032, file: !1033, line: 61, column: 6)
!9041 = !DILocation(line: 61, column: 12, scope: !9040)
!9042 = !DILocation(line: 61, column: 6, scope: !9032)
!9043 = !DILocation(line: 64, column: 3, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !1033, line: 64, column: 3)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !1033, line: 64, column: 3)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !1033, line: 64, column: 3)
!9047 = distinct !DILexicalBlock(scope: !9048, file: !1033, line: 64, column: 3)
!9048 = distinct !DILexicalBlock(scope: !9040, file: !1033, line: 61, column: 40)
!9049 = !DILocation(line: 65, column: 3, scope: !9048)
!9050 = !DILocation(line: 71, column: 2, scope: !9032)
!9051 = !DILocation(line: 73, column: 2, scope: !9032)
!9052 = !DILocation(line: 74, column: 1, scope: !9032)
!9053 = distinct !DISubprogram(name: "region_init", scope: !8920, file: !8920, line: 29, type: !9054, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9056)
!9054 = !DISubroutineType(types: !9055)
!9055 = !{null, !8085, !1020}
!9056 = !{!9057, !9058}
!9057 = !DILocalVariable(name: "index", arg: 1, scope: !9053, file: !8920, line: 29, type: !8085)
!9058 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9053, file: !8920, line: 30, type: !1020)
!9059 = !DILocation(line: 0, scope: !9053)
!9060 = !DILocation(line: 33, column: 2, scope: !9053)
!9061 = !DILocation(line: 47, column: 28, scope: !9053)
!9062 = !DILocation(line: 47, column: 33, scope: !9053)
!9063 = !DILocation(line: 48, column: 26, scope: !9053)
!9064 = !DILocation(line: 47, column: 12, scope: !9053)
!9065 = !DILocation(line: 49, column: 32, scope: !9053)
!9066 = !DILocation(line: 49, column: 37, scope: !9053)
!9067 = !DILocation(line: 49, column: 12, scope: !9053)
!9068 = !DILocation(line: 53, column: 1, scope: !9053)
!9069 = distinct !DISubprogram(name: "set_region_number", scope: !9070, file: !9070, line: 32, type: !7520, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9071)
!9070 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9071 = !{!9072}
!9072 = !DILocalVariable(name: "index", arg: 1, scope: !9069, file: !9070, line: 32, type: !111)
!9073 = !DILocation(line: 0, scope: !9069)
!9074 = !DILocation(line: 34, column: 11, scope: !9069)
!9075 = !DILocation(line: 35, column: 1, scope: !9069)
!9076 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !8920, file: !8920, line: 88, type: !9077, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9079)
!9077 = !DISubroutineType(types: !9078)
!9078 = !{!111, !111}
!9079 = !{!9080}
!9080 = !DILocalVariable(name: "size", arg: 1, scope: !9076, file: !8920, line: 88, type: !111)
!9081 = !DILocation(line: 0, scope: !9076)
!9082 = !DILocation(line: 91, column: 11, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9076, file: !8920, line: 91, column: 6)
!9084 = !DILocation(line: 91, column: 6, scope: !9076)
!9085 = !DILocation(line: 100, column: 11, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9076, file: !8920, line: 100, column: 6)
!9087 = !DILocation(line: 100, column: 6, scope: !9076)
!9088 = !DILocation(line: 104, column: 35, scope: !9076)
!9089 = !DILocation(line: 104, column: 16, scope: !9076)
!9090 = !DILocation(line: 104, column: 50, scope: !9076)
!9091 = !DILocation(line: 104, column: 72, scope: !9076)
!9092 = !DILocation(line: 104, column: 2, scope: !9076)
!9093 = !DILocation(line: 106, column: 1, scope: !9076)
!9094 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !1033, file: !1033, line: 307, type: !9095, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9097)
!9095 = !DISubroutineType(types: !9096)
!9096 = !{null, !8892, !166}
!9097 = !{!9098, !9099}
!9098 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9094, file: !1033, line: 308, type: !8892)
!9099 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9094, file: !1033, line: 308, type: !166)
!9100 = !DILocation(line: 0, scope: !9094)
!9101 = !DILocation(line: 310, column: 6, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9094, file: !1033, line: 310, column: 6)
!9103 = !DILocation(line: 311, column: 3, scope: !9102)
!9104 = !DILocation(line: 310, column: 6, scope: !9094)
!9105 = !DILocation(line: 313, column: 3, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9107, file: !1033, line: 313, column: 3)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !1033, line: 313, column: 3)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !1033, line: 313, column: 3)
!9109 = distinct !DILexicalBlock(scope: !9102, file: !1033, line: 311, column: 15)
!9110 = !DILocation(line: 316, column: 1, scope: !9094)
!9111 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !8920, file: !8920, line: 249, type: !9112, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9114)
!9112 = !DISubroutineType(types: !9113)
!9113 = !{!103, !8892, !166}
!9114 = !{!9115, !9116, !9117, !9118}
!9115 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9111, file: !8920, line: 250, type: !8892)
!9116 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9111, file: !8920, line: 250, type: !166)
!9117 = !DILocalVariable(name: "mpu_reg_index", scope: !9111, file: !8920, line: 252, type: !103)
!9118 = !DILocalVariable(name: "i", scope: !9119, file: !8920, line: 264, type: !103)
!9119 = distinct !DILexicalBlock(scope: !9120, file: !8920, line: 264, column: 3)
!9120 = distinct !DILexicalBlock(scope: !9121, file: !8920, line: 261, column: 32)
!9121 = distinct !DILexicalBlock(scope: !9111, file: !8920, line: 261, column: 6)
!9122 = !DILocation(line: 0, scope: !9111)
!9123 = !DILocation(line: 252, column: 22, scope: !9111)
!9124 = !DILocation(line: 258, column: 18, scope: !9111)
!9125 = !DILocation(line: 261, column: 20, scope: !9121)
!9126 = !DILocation(line: 261, column: 6, scope: !9111)
!9127 = !DILocation(line: 0, scope: !9119)
!9128 = !DILocation(line: 265, column: 4, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9130, file: !8920, line: 264, column: 59)
!9130 = distinct !DILexicalBlock(scope: !9119, file: !8920, line: 264, column: 3)
!9131 = !DILocation(line: 264, column: 55, scope: !9130)
!9132 = !DILocation(line: 264, column: 33, scope: !9130)
!9133 = !DILocation(line: 264, column: 3, scope: !9119)
!9134 = distinct !{!9134, !9133, !9135}
!9135 = !DILocation(line: 266, column: 3, scope: !9119)
!9136 = !DILocation(line: 269, column: 2, scope: !9111)
!9137 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9138, file: !9138, line: 218, type: !7520, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9139)
!9138 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9139 = !{!9140}
!9140 = !DILocalVariable(name: "rnr", arg: 1, scope: !9137, file: !9138, line: 218, type: !111)
!9141 = !DILocation(line: 0, scope: !9137)
!9142 = !DILocation(line: 220, column: 12, scope: !9137)
!9143 = !DILocation(line: 221, column: 13, scope: !9137)
!9144 = !DILocation(line: 222, column: 1, scope: !9137)
!9145 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !1033, file: !1033, line: 326, type: !9146, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1000, retainedNodes: !9148)
!9146 = !DISubroutineType(types: !9147)
!9147 = !{!103}
!9148 = !{!9149}
!9149 = !DILocalVariable(name: "r_index", scope: !9145, file: !1033, line: 328, type: !111)
!9150 = !DILocation(line: 330, column: 17, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9145, file: !1033, line: 330, column: 6)
!9152 = !DILocation(line: 330, column: 29, scope: !9151)
!9153 = !DILocation(line: 330, column: 6, scope: !9145)
!9154 = !DILocation(line: 337, column: 3, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !1033, line: 337, column: 3)
!9156 = distinct !DILexicalBlock(scope: !9157, file: !1033, line: 337, column: 3)
!9157 = distinct !DILexicalBlock(scope: !9158, file: !1033, line: 337, column: 3)
!9158 = distinct !DILexicalBlock(scope: !9151, file: !1033, line: 330, column: 50)
!9159 = !DILocation(line: 347, column: 2, scope: !9145)
!9160 = !DILocation(line: 0, scope: !9145)
!9161 = !DILocation(line: 364, column: 29, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9163, file: !1033, line: 364, column: 2)
!9163 = distinct !DILexicalBlock(scope: !9145, file: !1033, line: 364, column: 2)
!9164 = !DILocation(line: 364, column: 2, scope: !9163)
!9165 = !DILocation(line: 365, column: 25, scope: !9166)
!9166 = distinct !DILexicalBlock(scope: !9162, file: !1033, line: 364, column: 66)
!9167 = !DILocation(line: 365, column: 3, scope: !9166)
!9168 = !DILocation(line: 364, column: 62, scope: !9162)
!9169 = distinct !{!9169, !9164, !9170}
!9170 = !DILocation(line: 366, column: 2, scope: !9163)
!9171 = !DILocation(line: 369, column: 23, scope: !9145)
!9172 = !DILocation(line: 369, column: 21, scope: !9145)
!9173 = !DILocation(line: 372, column: 2, scope: !9145)
!9174 = !DILocation(line: 433, column: 2, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !1033, line: 433, column: 2)
!9176 = distinct !DILexicalBlock(scope: !9145, file: !1033, line: 433, column: 2)
!9177 = !DILocation(line: 433, column: 2, scope: !9176)
!9178 = !DILocation(line: 433, column: 2, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9175, file: !1033, line: 433, column: 2)
!9180 = !DILocation(line: 444, column: 1, scope: !9145)
!9181 = distinct !DISubprogram(name: "strcpy", scope: !9182, file: !9182, line: 20, type: !9183, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9187)
!9182 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9183 = !DISubroutineType(types: !9184)
!9184 = !{!160, !9185, !9186}
!9185 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !160)
!9186 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !108)
!9187 = !{!9188, !9189, !9190}
!9188 = !DILocalVariable(name: "d", arg: 1, scope: !9181, file: !9182, line: 20, type: !9185)
!9189 = !DILocalVariable(name: "s", arg: 2, scope: !9181, file: !9182, line: 20, type: !9186)
!9190 = !DILocalVariable(name: "dest", scope: !9181, file: !9182, line: 22, type: !160)
!9191 = !DILocation(line: 0, scope: !9181)
!9192 = !DILocation(line: 24, column: 9, scope: !9181)
!9193 = !DILocation(line: 24, column: 12, scope: !9181)
!9194 = !DILocation(line: 24, column: 2, scope: !9181)
!9195 = !DILocation(line: 25, column: 6, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9181, file: !9182, line: 24, column: 21)
!9197 = !DILocation(line: 26, column: 4, scope: !9196)
!9198 = !DILocation(line: 27, column: 4, scope: !9196)
!9199 = distinct !{!9199, !9194, !9200}
!9200 = !DILocation(line: 28, column: 2, scope: !9181)
!9201 = !DILocation(line: 30, column: 5, scope: !9181)
!9202 = !DILocation(line: 32, column: 2, scope: !9181)
!9203 = distinct !DISubprogram(name: "strncpy", scope: !9182, file: !9182, line: 42, type: !9204, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9206)
!9204 = !DISubroutineType(types: !9205)
!9205 = !{!160, !9185, !9186, !156}
!9206 = !{!9207, !9208, !9209, !9210}
!9207 = !DILocalVariable(name: "d", arg: 1, scope: !9203, file: !9182, line: 42, type: !9185)
!9208 = !DILocalVariable(name: "s", arg: 2, scope: !9203, file: !9182, line: 42, type: !9186)
!9209 = !DILocalVariable(name: "n", arg: 3, scope: !9203, file: !9182, line: 42, type: !156)
!9210 = !DILocalVariable(name: "dest", scope: !9203, file: !9182, line: 44, type: !160)
!9211 = !DILocation(line: 0, scope: !9203)
!9212 = !DILocation(line: 46, column: 12, scope: !9203)
!9213 = !DILocation(line: 46, column: 17, scope: !9203)
!9214 = !DILocation(line: 46, column: 20, scope: !9203)
!9215 = !DILocation(line: 46, column: 23, scope: !9203)
!9216 = !DILocation(line: 46, column: 2, scope: !9203)
!9217 = !DILocation(line: 47, column: 6, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9203, file: !9182, line: 46, column: 32)
!9219 = !DILocation(line: 48, column: 4, scope: !9218)
!9220 = !DILocation(line: 49, column: 4, scope: !9218)
!9221 = !DILocation(line: 50, column: 4, scope: !9218)
!9222 = distinct !{!9222, !9216, !9223}
!9223 = !DILocation(line: 51, column: 2, scope: !9203)
!9224 = !DILocation(line: 54, column: 6, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9203, file: !9182, line: 53, column: 16)
!9226 = !DILocation(line: 55, column: 4, scope: !9225)
!9227 = !DILocation(line: 56, column: 4, scope: !9225)
!9228 = !DILocation(line: 53, column: 11, scope: !9203)
!9229 = !DILocation(line: 53, column: 2, scope: !9203)
!9230 = distinct !{!9230, !9229, !9231}
!9231 = !DILocation(line: 57, column: 2, scope: !9203)
!9232 = !DILocation(line: 59, column: 2, scope: !9203)
!9233 = distinct !DISubprogram(name: "strchr", scope: !9182, file: !9182, line: 69, type: !9234, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9236)
!9234 = !DISubroutineType(types: !9235)
!9235 = !{!160, !108, !103}
!9236 = !{!9237, !9238, !9239}
!9237 = !DILocalVariable(name: "s", arg: 1, scope: !9233, file: !9182, line: 69, type: !108)
!9238 = !DILocalVariable(name: "c", arg: 2, scope: !9233, file: !9182, line: 69, type: !103)
!9239 = !DILocalVariable(name: "tmp", scope: !9233, file: !9182, line: 71, type: !110)
!9240 = !DILocation(line: 0, scope: !9233)
!9241 = !DILocation(line: 73, column: 2, scope: !9233)
!9242 = !DILocation(line: 73, column: 10, scope: !9233)
!9243 = !DILocation(line: 73, column: 13, scope: !9233)
!9244 = !DILocation(line: 73, column: 21, scope: !9233)
!9245 = !DILocation(line: 74, column: 4, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9233, file: !9182, line: 73, column: 38)
!9247 = distinct !{!9247, !9241, !9248}
!9248 = !DILocation(line: 75, column: 2, scope: !9233)
!9249 = !DILocation(line: 77, column: 9, scope: !9233)
!9250 = !DILocation(line: 77, column: 2, scope: !9233)
!9251 = distinct !DISubprogram(name: "strrchr", scope: !9182, file: !9182, line: 87, type: !9234, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9252)
!9252 = !{!9253, !9254, !9255}
!9253 = !DILocalVariable(name: "s", arg: 1, scope: !9251, file: !9182, line: 87, type: !108)
!9254 = !DILocalVariable(name: "c", arg: 2, scope: !9251, file: !9182, line: 87, type: !103)
!9255 = !DILocalVariable(name: "match", scope: !9251, file: !9182, line: 89, type: !160)
!9256 = !DILocation(line: 0, scope: !9251)
!9257 = !DILocation(line: 91, column: 2, scope: !9251)
!9258 = !DILocation(line: 92, column: 7, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9260, file: !9182, line: 92, column: 7)
!9260 = distinct !DILexicalBlock(scope: !9251, file: !9182, line: 91, column: 5)
!9261 = !DILocation(line: 92, column: 10, scope: !9259)
!9262 = !DILocation(line: 92, column: 7, scope: !9260)
!9263 = !DILocation(line: 95, column: 13, scope: !9251)
!9264 = !DILocation(line: 95, column: 2, scope: !9260)
!9265 = distinct !{!9265, !9257, !9266}
!9266 = !DILocation(line: 95, column: 15, scope: !9251)
!9267 = !DILocation(line: 97, column: 2, scope: !9251)
!9268 = distinct !DISubprogram(name: "strlen", scope: !9182, file: !9182, line: 107, type: !9269, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9271)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{!156, !108}
!9271 = !{!9272, !9273}
!9272 = !DILocalVariable(name: "s", arg: 1, scope: !9268, file: !9182, line: 107, type: !108)
!9273 = !DILocalVariable(name: "n", scope: !9268, file: !9182, line: 109, type: !156)
!9274 = !DILocation(line: 0, scope: !9268)
!9275 = !DILocation(line: 111, column: 9, scope: !9268)
!9276 = !DILocation(line: 111, column: 12, scope: !9268)
!9277 = !DILocation(line: 111, column: 2, scope: !9268)
!9278 = !DILocation(line: 112, column: 4, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9268, file: !9182, line: 111, column: 21)
!9280 = !DILocation(line: 113, column: 4, scope: !9279)
!9281 = distinct !{!9281, !9277, !9282}
!9282 = !DILocation(line: 114, column: 2, scope: !9268)
!9283 = !DILocation(line: 116, column: 2, scope: !9268)
!9284 = distinct !DISubprogram(name: "strnlen", scope: !9182, file: !9182, line: 126, type: !9285, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9287)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{!156, !108, !156}
!9287 = !{!9288, !9289, !9290}
!9288 = !DILocalVariable(name: "s", arg: 1, scope: !9284, file: !9182, line: 126, type: !108)
!9289 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9284, file: !9182, line: 126, type: !156)
!9290 = !DILocalVariable(name: "n", scope: !9284, file: !9182, line: 128, type: !156)
!9291 = !DILocation(line: 0, scope: !9284)
!9292 = !DILocation(line: 130, column: 9, scope: !9284)
!9293 = !DILocation(line: 130, column: 12, scope: !9284)
!9294 = !DILocation(line: 130, column: 20, scope: !9284)
!9295 = !DILocation(line: 130, column: 2, scope: !9284)
!9296 = !DILocation(line: 131, column: 4, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9284, file: !9182, line: 130, column: 35)
!9298 = !DILocation(line: 132, column: 4, scope: !9297)
!9299 = distinct !{!9299, !9295, !9300}
!9300 = !DILocation(line: 133, column: 2, scope: !9284)
!9301 = !DILocation(line: 135, column: 2, scope: !9284)
!9302 = distinct !DISubprogram(name: "strcmp", scope: !9182, file: !9182, line: 145, type: !9303, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9305)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{!103, !108, !108}
!9305 = !{!9306, !9307}
!9306 = !DILocalVariable(name: "s1", arg: 1, scope: !9302, file: !9182, line: 145, type: !108)
!9307 = !DILocalVariable(name: "s2", arg: 2, scope: !9302, file: !9182, line: 145, type: !108)
!9308 = !DILocation(line: 0, scope: !9302)
!9309 = !DILocation(line: 147, column: 10, scope: !9302)
!9310 = !DILocation(line: 147, column: 17, scope: !9302)
!9311 = !DILocation(line: 147, column: 14, scope: !9302)
!9312 = !DILocation(line: 147, column: 22, scope: !9302)
!9313 = !DILocation(line: 148, column: 5, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9302, file: !9182, line: 147, column: 40)
!9315 = !DILocation(line: 149, column: 5, scope: !9314)
!9316 = distinct !{!9316, !9317, !9318}
!9317 = !DILocation(line: 147, column: 2, scope: !9302)
!9318 = !DILocation(line: 150, column: 2, scope: !9302)
!9319 = !DILocation(line: 152, column: 9, scope: !9302)
!9320 = !DILocation(line: 152, column: 15, scope: !9302)
!9321 = !DILocation(line: 152, column: 13, scope: !9302)
!9322 = !DILocation(line: 152, column: 2, scope: !9302)
!9323 = distinct !DISubprogram(name: "strncmp", scope: !9182, file: !9182, line: 162, type: !9324, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9326)
!9324 = !DISubroutineType(types: !9325)
!9325 = !{!103, !108, !108, !156}
!9326 = !{!9327, !9328, !9329}
!9327 = !DILocalVariable(name: "s1", arg: 1, scope: !9323, file: !9182, line: 162, type: !108)
!9328 = !DILocalVariable(name: "s2", arg: 2, scope: !9323, file: !9182, line: 162, type: !108)
!9329 = !DILocalVariable(name: "n", arg: 3, scope: !9323, file: !9182, line: 162, type: !156)
!9330 = !DILocation(line: 0, scope: !9323)
!9331 = !DILocation(line: 164, column: 17, scope: !9323)
!9332 = !DILocation(line: 164, column: 21, scope: !9323)
!9333 = !DILocation(line: 164, column: 28, scope: !9323)
!9334 = !DILocation(line: 164, column: 25, scope: !9323)
!9335 = !DILocation(line: 164, column: 33, scope: !9323)
!9336 = !DILocation(line: 165, column: 5, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9323, file: !9182, line: 164, column: 51)
!9338 = !DILocation(line: 166, column: 5, scope: !9337)
!9339 = !DILocation(line: 167, column: 4, scope: !9337)
!9340 = distinct !{!9340, !9341, !9342}
!9341 = !DILocation(line: 164, column: 2, scope: !9323)
!9342 = !DILocation(line: 168, column: 2, scope: !9323)
!9343 = !DILocation(line: 170, column: 25, scope: !9323)
!9344 = !DILocation(line: 170, column: 31, scope: !9323)
!9345 = !DILocation(line: 170, column: 29, scope: !9323)
!9346 = !DILocation(line: 170, column: 9, scope: !9323)
!9347 = !DILocation(line: 170, column: 2, scope: !9323)
!9348 = distinct !DISubprogram(name: "strtok_r", scope: !9182, file: !9182, line: 180, type: !9349, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9351)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!160, !160, !108, !748}
!9351 = !{!9352, !9353, !9354, !9355, !9356}
!9352 = !DILocalVariable(name: "str", arg: 1, scope: !9348, file: !9182, line: 180, type: !160)
!9353 = !DILocalVariable(name: "sep", arg: 2, scope: !9348, file: !9182, line: 180, type: !108)
!9354 = !DILocalVariable(name: "state", arg: 3, scope: !9348, file: !9182, line: 180, type: !748)
!9355 = !DILocalVariable(name: "start", scope: !9348, file: !9182, line: 182, type: !160)
!9356 = !DILocalVariable(name: "end", scope: !9348, file: !9182, line: 182, type: !160)
!9357 = !DILocation(line: 0, scope: !9348)
!9358 = !DILocation(line: 184, column: 10, scope: !9348)
!9359 = !DILocation(line: 184, column: 22, scope: !9348)
!9360 = !DILocation(line: 187, column: 9, scope: !9348)
!9361 = !DILocation(line: 187, column: 16, scope: !9348)
!9362 = !DILocation(line: 187, column: 19, scope: !9348)
!9363 = !DILocation(line: 187, column: 2, scope: !9348)
!9364 = !DILocation(line: 188, column: 8, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9348, file: !9182, line: 187, column: 40)
!9366 = distinct !{!9366, !9363, !9367}
!9367 = !DILocation(line: 189, column: 2, scope: !9348)
!9368 = !DILocation(line: 198, column: 9, scope: !9348)
!9369 = !DILocation(line: 198, column: 18, scope: !9348)
!9370 = !DILocation(line: 198, column: 17, scope: !9348)
!9371 = !DILocation(line: 198, column: 2, scope: !9348)
!9372 = !DILocation(line: 199, column: 6, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9348, file: !9182, line: 198, column: 37)
!9374 = !DILocation(line: 198, column: 14, scope: !9348)
!9375 = distinct !{!9375, !9371, !9376}
!9376 = !DILocation(line: 200, column: 2, scope: !9348)
!9377 = !DILocation(line: 203, column: 8, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9379, file: !9182, line: 202, column: 20)
!9379 = distinct !DILexicalBlock(scope: !9348, file: !9182, line: 202, column: 6)
!9380 = !DILocation(line: 204, column: 16, scope: !9378)
!9381 = !DILocation(line: 205, column: 2, scope: !9378)
!9382 = !DILocation(line: 210, column: 1, scope: !9348)
!9383 = distinct !DISubprogram(name: "strcat", scope: !9182, file: !9182, line: 212, type: !9183, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9384)
!9384 = !{!9385, !9386}
!9385 = !DILocalVariable(name: "dest", arg: 1, scope: !9383, file: !9182, line: 212, type: !9185)
!9386 = !DILocalVariable(name: "src", arg: 2, scope: !9383, file: !9182, line: 212, type: !9186)
!9387 = !DILocation(line: 0, scope: !9383)
!9388 = !DILocation(line: 214, column: 16, scope: !9383)
!9389 = !DILocation(line: 214, column: 14, scope: !9383)
!9390 = !DILocation(line: 214, column: 2, scope: !9383)
!9391 = !DILocation(line: 215, column: 2, scope: !9383)
!9392 = distinct !DISubprogram(name: "strncat", scope: !9182, file: !9182, line: 218, type: !9204, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9393)
!9393 = !{!9394, !9395, !9396, !9397, !9398}
!9394 = !DILocalVariable(name: "dest", arg: 1, scope: !9392, file: !9182, line: 218, type: !9185)
!9395 = !DILocalVariable(name: "src", arg: 2, scope: !9392, file: !9182, line: 218, type: !9186)
!9396 = !DILocalVariable(name: "n", arg: 3, scope: !9392, file: !9182, line: 219, type: !156)
!9397 = !DILocalVariable(name: "orig_dest", scope: !9392, file: !9182, line: 221, type: !160)
!9398 = !DILocalVariable(name: "len", scope: !9392, file: !9182, line: 222, type: !156)
!9399 = !DILocation(line: 0, scope: !9392)
!9400 = !DILocation(line: 222, column: 15, scope: !9392)
!9401 = !DILocation(line: 224, column: 7, scope: !9392)
!9402 = !DILocation(line: 225, column: 14, scope: !9392)
!9403 = !DILocation(line: 225, column: 19, scope: !9392)
!9404 = !DILocation(line: 225, column: 11, scope: !9392)
!9405 = !DILocation(line: 225, column: 23, scope: !9392)
!9406 = !DILocation(line: 225, column: 28, scope: !9392)
!9407 = !DILocation(line: 225, column: 2, scope: !9392)
!9408 = !DILocation(line: 226, column: 17, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9392, file: !9182, line: 225, column: 38)
!9410 = !DILocation(line: 226, column: 8, scope: !9409)
!9411 = !DILocation(line: 226, column: 11, scope: !9409)
!9412 = distinct !{!9412, !9407, !9413}
!9413 = !DILocation(line: 227, column: 2, scope: !9392)
!9414 = !DILocation(line: 228, column: 8, scope: !9392)
!9415 = !DILocation(line: 230, column: 2, scope: !9392)
!9416 = distinct !DISubprogram(name: "memcmp", scope: !9182, file: !9182, line: 239, type: !9417, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9419)
!9417 = !DISubroutineType(types: !9418)
!9418 = !{!103, !13, !13, !156}
!9419 = !{!9420, !9421, !9422, !9423, !9424}
!9420 = !DILocalVariable(name: "m1", arg: 1, scope: !9416, file: !9182, line: 239, type: !13)
!9421 = !DILocalVariable(name: "m2", arg: 2, scope: !9416, file: !9182, line: 239, type: !13)
!9422 = !DILocalVariable(name: "n", arg: 3, scope: !9416, file: !9182, line: 239, type: !156)
!9423 = !DILocalVariable(name: "c1", scope: !9416, file: !9182, line: 241, type: !108)
!9424 = !DILocalVariable(name: "c2", scope: !9416, file: !9182, line: 242, type: !108)
!9425 = !DILocation(line: 0, scope: !9416)
!9426 = !DILocation(line: 244, column: 7, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9416, file: !9182, line: 244, column: 6)
!9428 = !DILocation(line: 244, column: 6, scope: !9416)
!9429 = !DILocation(line: 248, column: 10, scope: !9416)
!9430 = !DILocation(line: 248, column: 14, scope: !9416)
!9431 = !DILocation(line: 248, column: 19, scope: !9416)
!9432 = !DILocation(line: 248, column: 2, scope: !9416)
!9433 = !DILocation(line: 248, column: 23, scope: !9416)
!9434 = !DILocation(line: 248, column: 30, scope: !9416)
!9435 = !DILocation(line: 248, column: 27, scope: !9416)
!9436 = !DILocation(line: 249, column: 5, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9416, file: !9182, line: 248, column: 36)
!9438 = !DILocation(line: 250, column: 5, scope: !9437)
!9439 = distinct !{!9439, !9432, !9440}
!9440 = !DILocation(line: 251, column: 2, scope: !9416)
!9441 = !DILocation(line: 253, column: 9, scope: !9416)
!9442 = !DILocation(line: 253, column: 15, scope: !9416)
!9443 = !DILocation(line: 253, column: 13, scope: !9416)
!9444 = !DILocation(line: 253, column: 2, scope: !9416)
!9445 = !DILocation(line: 254, column: 1, scope: !9416)
!9446 = distinct !DISubprogram(name: "memmove", scope: !9182, file: !9182, line: 263, type: !9447, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9449)
!9447 = !DISubroutineType(types: !9448)
!9448 = !{!102, !102, !13, !156}
!9449 = !{!9450, !9451, !9452, !9453, !9454}
!9450 = !DILocalVariable(name: "d", arg: 1, scope: !9446, file: !9182, line: 263, type: !102)
!9451 = !DILocalVariable(name: "s", arg: 2, scope: !9446, file: !9182, line: 263, type: !13)
!9452 = !DILocalVariable(name: "n", arg: 3, scope: !9446, file: !9182, line: 263, type: !156)
!9453 = !DILocalVariable(name: "dest", scope: !9446, file: !9182, line: 265, type: !160)
!9454 = !DILocalVariable(name: "src", scope: !9446, file: !9182, line: 266, type: !108)
!9455 = !DILocation(line: 0, scope: !9446)
!9456 = !DILocation(line: 268, column: 21, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9446, file: !9182, line: 268, column: 6)
!9458 = !DILocation(line: 268, column: 28, scope: !9457)
!9459 = !DILocation(line: 268, column: 6, scope: !9446)
!9460 = !DILocation(line: 280, column: 12, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9457, file: !9182, line: 278, column: 9)
!9462 = !DILocation(line: 280, column: 3, scope: !9461)
!9463 = !DILocation(line: 275, column: 5, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9465, file: !9182, line: 274, column: 17)
!9465 = distinct !DILexicalBlock(scope: !9457, file: !9182, line: 268, column: 33)
!9466 = !DILocation(line: 276, column: 14, scope: !9464)
!9467 = !DILocation(line: 276, column: 4, scope: !9464)
!9468 = !DILocation(line: 276, column: 12, scope: !9464)
!9469 = !DILocation(line: 274, column: 12, scope: !9465)
!9470 = !DILocation(line: 274, column: 3, scope: !9465)
!9471 = distinct !{!9471, !9470, !9472}
!9472 = !DILocation(line: 277, column: 3, scope: !9465)
!9473 = !DILocation(line: 281, column: 12, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9461, file: !9182, line: 280, column: 17)
!9475 = !DILocation(line: 281, column: 10, scope: !9474)
!9476 = !DILocation(line: 282, column: 8, scope: !9474)
!9477 = !DILocation(line: 283, column: 7, scope: !9474)
!9478 = !DILocation(line: 284, column: 5, scope: !9474)
!9479 = distinct !{!9479, !9462, !9480}
!9480 = !DILocation(line: 285, column: 3, scope: !9461)
!9481 = !DILocation(line: 288, column: 2, scope: !9446)
!9482 = distinct !DISubprogram(name: "memcpy", scope: !9182, file: !9182, line: 298, type: !9483, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9487)
!9483 = !DISubroutineType(types: !9484)
!9484 = !{!102, !9485, !9486, !156}
!9485 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!9486 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9487 = !{!9488, !9489, !9490, !9491, !9492}
!9488 = !DILocalVariable(name: "d", arg: 1, scope: !9482, file: !9182, line: 298, type: !9485)
!9489 = !DILocalVariable(name: "s", arg: 2, scope: !9482, file: !9182, line: 298, type: !9486)
!9490 = !DILocalVariable(name: "n", arg: 3, scope: !9482, file: !9182, line: 298, type: !156)
!9491 = !DILocalVariable(name: "d_byte", scope: !9482, file: !9182, line: 302, type: !1516)
!9492 = !DILocalVariable(name: "s_byte", scope: !9482, file: !9182, line: 303, type: !3423)
!9493 = !DILocation(line: 0, scope: !9482)
!9494 = !DILocation(line: 337, column: 11, scope: !9482)
!9495 = !DILocation(line: 337, column: 2, scope: !9482)
!9496 = !DILocation(line: 338, column: 25, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9482, file: !9182, line: 337, column: 16)
!9498 = !DILocation(line: 338, column: 17, scope: !9497)
!9499 = !DILocation(line: 338, column: 11, scope: !9497)
!9500 = !DILocation(line: 338, column: 15, scope: !9497)
!9501 = !DILocation(line: 339, column: 4, scope: !9497)
!9502 = distinct !{!9502, !9495, !9503}
!9503 = !DILocation(line: 340, column: 2, scope: !9482)
!9504 = !DILocation(line: 342, column: 2, scope: !9482)
!9505 = distinct !DISubprogram(name: "memset", scope: !9182, file: !9182, line: 352, type: !9506, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9508)
!9506 = !DISubroutineType(types: !9507)
!9507 = !{!102, !102, !103, !156}
!9508 = !{!9509, !9510, !9511, !9512, !9513}
!9509 = !DILocalVariable(name: "buf", arg: 1, scope: !9505, file: !9182, line: 352, type: !102)
!9510 = !DILocalVariable(name: "c", arg: 2, scope: !9505, file: !9182, line: 352, type: !103)
!9511 = !DILocalVariable(name: "n", arg: 3, scope: !9505, file: !9182, line: 352, type: !156)
!9512 = !DILocalVariable(name: "d_byte", scope: !9505, file: !9182, line: 356, type: !1516)
!9513 = !DILocalVariable(name: "c_byte", scope: !9505, file: !9182, line: 357, type: !167)
!9514 = !DILocation(line: 0, scope: !9505)
!9515 = !DILocation(line: 357, column: 25, scope: !9505)
!9516 = !DILocation(line: 389, column: 11, scope: !9505)
!9517 = !DILocation(line: 389, column: 2, scope: !9505)
!9518 = !DILocation(line: 390, column: 11, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9505, file: !9182, line: 389, column: 16)
!9520 = !DILocation(line: 390, column: 15, scope: !9519)
!9521 = !DILocation(line: 391, column: 4, scope: !9519)
!9522 = distinct !{!9522, !9517, !9523}
!9523 = !DILocation(line: 392, column: 2, scope: !9505)
!9524 = !DILocation(line: 394, column: 2, scope: !9505)
!9525 = distinct !DISubprogram(name: "memchr", scope: !9182, file: !9182, line: 404, type: !9526, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3420, retainedNodes: !9528)
!9526 = !DISubroutineType(types: !9527)
!9527 = !{!102, !13, !103, !156}
!9528 = !{!9529, !9530, !9531, !9532}
!9529 = !DILocalVariable(name: "s", arg: 1, scope: !9525, file: !9182, line: 404, type: !13)
!9530 = !DILocalVariable(name: "c", arg: 2, scope: !9525, file: !9182, line: 404, type: !103)
!9531 = !DILocalVariable(name: "n", arg: 3, scope: !9525, file: !9182, line: 404, type: !156)
!9532 = !DILocalVariable(name: "p", scope: !9533, file: !9182, line: 407, type: !3423)
!9533 = distinct !DILexicalBlock(scope: !9534, file: !9182, line: 406, column: 14)
!9534 = distinct !DILexicalBlock(scope: !9525, file: !9182, line: 406, column: 6)
!9535 = !DILocation(line: 0, scope: !9525)
!9536 = !DILocation(line: 406, column: 8, scope: !9534)
!9537 = !DILocation(line: 406, column: 6, scope: !9525)
!9538 = !DILocation(line: 409, column: 3, scope: !9533)
!9539 = !DILocation(line: 0, scope: !9533)
!9540 = !DILocation(line: 410, column: 8, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9542, file: !9182, line: 410, column: 8)
!9542 = distinct !DILexicalBlock(scope: !9533, file: !9182, line: 409, column: 6)
!9543 = !DILocation(line: 410, column: 13, scope: !9541)
!9544 = !DILocation(line: 410, column: 8, scope: !9542)
!9545 = distinct !{!9545, !9538, !9546}
!9546 = !DILocation(line: 414, column: 20, scope: !9533)
!9547 = !DILocation(line: 417, column: 2, scope: !9525)
!9548 = !DILocation(line: 418, column: 1, scope: !9525)
!9549 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !1043, file: !1043, line: 23, type: !4950, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9550)
!9550 = !{!9551}
!9551 = !DILocalVariable(name: "hook", arg: 1, scope: !9549, file: !1043, line: 23, type: !763)
!9552 = !DILocation(line: 0, scope: !9549)
!9553 = !DILocation(line: 25, column: 15, scope: !9549)
!9554 = !DILocation(line: 26, column: 1, scope: !9549)
!9555 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !1043, file: !1043, line: 14, type: !764, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9556)
!9556 = !{!9557}
!9557 = !DILocalVariable(name: "c", arg: 1, scope: !9555, file: !1043, line: 14, type: !103)
!9558 = !DILocation(line: 0, scope: !9555)
!9559 = !DILocation(line: 18, column: 2, scope: !9555)
!9560 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !1043, file: !1043, line: 28, type: !9561, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9563)
!9561 = !DISubroutineType(types: !9562)
!9562 = !{!103, !103, !1039}
!9563 = !{!9564, !9565}
!9564 = !DILocalVariable(name: "c", arg: 1, scope: !9560, file: !1043, line: 28, type: !103)
!9565 = !DILocalVariable(name: "stream", arg: 2, scope: !9560, file: !1043, line: 28, type: !1039)
!9566 = !DILocation(line: 0, scope: !9560)
!9567 = !DILocation(line: 30, column: 27, scope: !9560)
!9568 = !DILocation(line: 30, column: 50, scope: !9560)
!9569 = !DILocation(line: 30, column: 9, scope: !9560)
!9570 = !DILocation(line: 30, column: 2, scope: !9560)
!9571 = distinct !DISubprogram(name: "fputc", scope: !1043, file: !1043, line: 41, type: !9561, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9572)
!9572 = !{!9573, !9574}
!9573 = !DILocalVariable(name: "c", arg: 1, scope: !9571, file: !1043, line: 41, type: !103)
!9574 = !DILocalVariable(name: "stream", arg: 2, scope: !9571, file: !1043, line: 41, type: !1039)
!9575 = !DILocation(line: 0, scope: !9571)
!9576 = !DILocation(line: 43, column: 9, scope: !9571)
!9577 = !DILocation(line: 43, column: 2, scope: !9571)
!9578 = distinct !DISubprogram(name: "zephyr_fputc", scope: !9579, file: !9579, line: 72, type: !9561, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9580)
!9579 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!9580 = !{!9581, !9582}
!9581 = !DILocalVariable(name: "c", arg: 1, scope: !9578, file: !9579, line: 72, type: !103)
!9582 = !DILocalVariable(name: "stream", arg: 2, scope: !9578, file: !9579, line: 72, type: !1039)
!9583 = !DILocation(line: 0, scope: !9578)
!9584 = !DILocation(line: 81, column: 2, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9578, file: !9579, line: 81, column: 2)
!9586 = !{i64 2152286297}
!9587 = !DILocation(line: 82, column: 9, scope: !9578)
!9588 = !DILocation(line: 82, column: 2, scope: !9578)
!9589 = distinct !DISubprogram(name: "fputs", scope: !1043, file: !1043, line: 46, type: !9590, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9593)
!9590 = !DISubroutineType(types: !9591)
!9591 = !{!103, !9186, !9592}
!9592 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1039)
!9593 = !{!9594, !9595, !9596, !9597}
!9594 = !DILocalVariable(name: "s", arg: 1, scope: !9589, file: !1043, line: 46, type: !9186)
!9595 = !DILocalVariable(name: "stream", arg: 2, scope: !9589, file: !1043, line: 46, type: !9592)
!9596 = !DILocalVariable(name: "len", scope: !9589, file: !1043, line: 48, type: !103)
!9597 = !DILocalVariable(name: "ret", scope: !9589, file: !1043, line: 49, type: !103)
!9598 = !DILocation(line: 0, scope: !9589)
!9599 = !DILocation(line: 48, column: 12, scope: !9589)
!9600 = !DILocation(line: 51, column: 8, scope: !9589)
!9601 = !DILocation(line: 53, column: 13, scope: !9589)
!9602 = !DILocation(line: 53, column: 9, scope: !9589)
!9603 = !DILocation(line: 53, column: 2, scope: !9589)
!9604 = distinct !DISubprogram(name: "fwrite", scope: !1043, file: !1043, line: 99, type: !9605, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9607)
!9605 = !DISubroutineType(types: !9606)
!9606 = !{!156, !9486, !156, !156, !9592}
!9607 = !{!9608, !9609, !9610, !9611}
!9608 = !DILocalVariable(name: "ptr", arg: 1, scope: !9604, file: !1043, line: 99, type: !9486)
!9609 = !DILocalVariable(name: "size", arg: 2, scope: !9604, file: !1043, line: 99, type: !156)
!9610 = !DILocalVariable(name: "nitems", arg: 3, scope: !9604, file: !1043, line: 99, type: !156)
!9611 = !DILocalVariable(name: "stream", arg: 4, scope: !9604, file: !1043, line: 100, type: !9592)
!9612 = !DILocation(line: 0, scope: !9604)
!9613 = !DILocation(line: 102, column: 9, scope: !9604)
!9614 = !DILocation(line: 102, column: 2, scope: !9604)
!9615 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !9579, file: !9579, line: 96, type: !9605, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9616)
!9616 = !{!9617, !9618, !9619, !9620}
!9617 = !DILocalVariable(name: "ptr", arg: 1, scope: !9615, file: !9579, line: 96, type: !9486)
!9618 = !DILocalVariable(name: "size", arg: 2, scope: !9615, file: !9579, line: 96, type: !156)
!9619 = !DILocalVariable(name: "nitems", arg: 3, scope: !9615, file: !9579, line: 96, type: !156)
!9620 = !DILocalVariable(name: "stream", arg: 4, scope: !9615, file: !9579, line: 96, type: !9592)
!9621 = !DILocation(line: 0, scope: !9615)
!9622 = !DILocation(line: 107, column: 2, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9615, file: !9579, line: 107, column: 2)
!9624 = !{i64 2152286401}
!9625 = !DILocation(line: 108, column: 9, scope: !9615)
!9626 = !DILocation(line: 108, column: 2, scope: !9615)
!9627 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !1043, file: !1043, line: 56, type: !9605, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9628)
!9628 = !{!9629, !9630, !9631, !9632, !9633, !9634, !9635, !9636}
!9629 = !DILocalVariable(name: "ptr", arg: 1, scope: !9627, file: !1043, line: 56, type: !9486)
!9630 = !DILocalVariable(name: "size", arg: 2, scope: !9627, file: !1043, line: 56, type: !156)
!9631 = !DILocalVariable(name: "nitems", arg: 3, scope: !9627, file: !1043, line: 57, type: !156)
!9632 = !DILocalVariable(name: "stream", arg: 4, scope: !9627, file: !1043, line: 57, type: !9592)
!9633 = !DILocalVariable(name: "i", scope: !9627, file: !1043, line: 59, type: !156)
!9634 = !DILocalVariable(name: "j", scope: !9627, file: !1043, line: 60, type: !156)
!9635 = !DILocalVariable(name: "p", scope: !9627, file: !1043, line: 61, type: !3423)
!9636 = !DILabel(scope: !9627, name: "done", file: !1043, line: 82)
!9637 = !DILocation(line: 0, scope: !9627)
!9638 = !DILocation(line: 63, column: 14, scope: !9639)
!9639 = distinct !DILexicalBlock(scope: !9627, file: !1043, line: 63, column: 6)
!9640 = !DILocation(line: 63, column: 24, scope: !9639)
!9641 = !DILocation(line: 72, column: 3, scope: !9642)
!9642 = distinct !DILexicalBlock(scope: !9627, file: !1043, line: 70, column: 5)
!9643 = !DILocation(line: 0, scope: !9642)
!9644 = !DILocation(line: 73, column: 8, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9646, file: !1043, line: 73, column: 8)
!9646 = distinct !DILexicalBlock(scope: !9642, file: !1043, line: 72, column: 6)
!9647 = !DILocation(line: 73, column: 29, scope: !9645)
!9648 = !DILocation(line: 73, column: 27, scope: !9645)
!9649 = !DILocation(line: 73, column: 21, scope: !9645)
!9650 = !DILocation(line: 73, column: 33, scope: !9645)
!9651 = !DILocation(line: 73, column: 8, scope: !9646)
!9652 = !DILocation(line: 76, column: 5, scope: !9646)
!9653 = !DILocation(line: 77, column: 14, scope: !9642)
!9654 = !DILocation(line: 77, column: 3, scope: !9646)
!9655 = distinct !{!9655, !9641, !9656}
!9656 = !DILocation(line: 77, column: 17, scope: !9642)
!9657 = !DILocation(line: 79, column: 4, scope: !9642)
!9658 = !DILocation(line: 80, column: 13, scope: !9627)
!9659 = !DILocation(line: 80, column: 2, scope: !9642)
!9660 = distinct !{!9660, !9661, !9662}
!9661 = !DILocation(line: 70, column: 2, scope: !9627)
!9662 = !DILocation(line: 80, column: 16, scope: !9627)
!9663 = !DILocation(line: 82, column: 1, scope: !9627)
!9664 = !DILocation(line: 83, column: 17, scope: !9627)
!9665 = !DILocation(line: 83, column: 2, scope: !9627)
!9666 = !DILocation(line: 84, column: 1, scope: !9627)
!9667 = distinct !DISubprogram(name: "puts", scope: !1043, file: !1043, line: 106, type: !9668, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9670)
!9668 = !DISubroutineType(types: !9669)
!9669 = !{!103, !108}
!9670 = !{!9671}
!9671 = !DILocalVariable(name: "s", arg: 1, scope: !9667, file: !1043, line: 106, type: !108)
!9672 = !DILocation(line: 0, scope: !9667)
!9673 = !DILocation(line: 108, column: 6, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9667, file: !1043, line: 108, column: 6)
!9675 = !DILocation(line: 108, column: 23, scope: !9674)
!9676 = !DILocation(line: 108, column: 6, scope: !9667)
!9677 = !DILocation(line: 112, column: 9, scope: !9667)
!9678 = !DILocation(line: 112, column: 29, scope: !9667)
!9679 = !DILocation(line: 112, column: 2, scope: !9667)
!9680 = !DILocation(line: 113, column: 1, scope: !9667)
!9681 = distinct !DISubprogram(name: "rf_init", scope: !1168, file: !1168, line: 10, type: !1174, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9682)
!9682 = !{!9683, !9684, !9692, !9693}
!9683 = !DILocalVariable(name: "dev", arg: 1, scope: !9681, file: !1168, line: 10, type: !1094)
!9684 = !DILocalVariable(name: "rf1", scope: !9681, file: !1168, line: 12, type: !9685)
!9685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9686)
!9686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !1075, line: 271, size: 64, elements: !9687)
!9687 = !{!9688, !9689, !9690}
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !9686, file: !1075, line: 273, baseType: !1094, size: 32)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !9686, file: !1075, line: 275, baseType: !1109, size: 8, offset: 32)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !9686, file: !1075, line: 277, baseType: !9691, size: 16, offset: 48)
!9691 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !1075, line: 249, baseType: !181)
!9692 = !DILocalVariable(name: "rf2", scope: !9681, file: !1168, line: 14, type: !9685)
!9693 = !DILocalVariable(name: "rf3", scope: !9681, file: !1168, line: 16, type: !9685)
!9694 = !DILocation(line: 0, scope: !9681)
!9695 = !DILocation(line: 12, column: 2, scope: !9681)
!9696 = !DILocation(line: 12, column: 28, scope: !9681)
!9697 = !DILocation(line: 14, column: 2, scope: !9681)
!9698 = !DILocation(line: 14, column: 28, scope: !9681)
!9699 = !DILocation(line: 16, column: 2, scope: !9681)
!9700 = !DILocation(line: 16, column: 28, scope: !9681)
!9701 = !DILocation(line: 22, column: 27, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9681, file: !1168, line: 22, column: 6)
!9703 = !DILocation(line: 22, column: 7, scope: !9702)
!9704 = !DILocation(line: 22, column: 33, scope: !9702)
!9705 = !DILocation(line: 23, column: 7, scope: !9702)
!9706 = !DILocation(line: 23, column: 33, scope: !9702)
!9707 = !DILocation(line: 24, column: 7, scope: !9702)
!9708 = !DILocation(line: 22, column: 6, scope: !9681)
!9709 = !DILocation(line: 28, column: 8, scope: !9681)
!9710 = !DILocation(line: 29, column: 8, scope: !9681)
!9711 = !DILocation(line: 30, column: 8, scope: !9681)
!9712 = !DILocation(line: 32, column: 2, scope: !9681)
!9713 = !DILocation(line: 33, column: 1, scope: !9681)
!9714 = distinct !DISubprogram(name: "device_is_ready", scope: !9715, file: !9715, line: 47, type: !9716, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9718)
!9715 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!9716 = !DISubroutineType(types: !9717)
!9717 = !{!122, !1094}
!9718 = !{!9719}
!9719 = !DILocalVariable(name: "dev", arg: 1, scope: !9714, file: !9715, line: 47, type: !1094)
!9720 = !DILocation(line: 0, scope: !9714)
!9721 = !DILocation(line: 55, column: 2, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9714, file: !9715, line: 55, column: 2)
!9723 = !{i64 2148930215}
!9724 = !DILocation(line: 56, column: 9, scope: !9714)
!9725 = !DILocation(line: 56, column: 2, scope: !9714)
!9726 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !1075, file: !1075, line: 731, type: !9727, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9730)
!9727 = !DISubroutineType(types: !9728)
!9728 = !{!103, !9729, !1110}
!9729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9685, size: 32)
!9730 = !{!9731, !9732}
!9731 = !DILocalVariable(name: "spec", arg: 1, scope: !9726, file: !1075, line: 731, type: !9729)
!9732 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !9726, file: !1075, line: 732, type: !1110)
!9733 = !DILocation(line: 0, scope: !9726)
!9734 = !DILocation(line: 734, column: 34, scope: !9726)
!9735 = !DILocation(line: 735, column: 13, scope: !9726)
!9736 = !DILocation(line: 736, column: 13, scope: !9726)
!9737 = !DILocation(line: 736, column: 7, scope: !9726)
!9738 = !DILocation(line: 736, column: 22, scope: !9726)
!9739 = !DILocation(line: 734, column: 9, scope: !9726)
!9740 = !DILocation(line: 734, column: 2, scope: !9726)
!9741 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !9742, file: !9742, line: 49, type: !1092, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9743)
!9742 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!9743 = !{!9744, !9745, !9746}
!9744 = !DILocalVariable(name: "port", arg: 1, scope: !9741, file: !9742, line: 49, type: !1094)
!9745 = !DILocalVariable(name: "pin", arg: 2, scope: !9741, file: !9742, line: 49, type: !1109)
!9746 = !DILocalVariable(name: "flags", arg: 3, scope: !9741, file: !9742, line: 49, type: !1110)
!9747 = !DILocation(line: 0, scope: !9741)
!9748 = !DILocation(line: 59, column: 2, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9741, file: !9742, line: 59, column: 2)
!9750 = !{i64 2148980309}
!9751 = !DILocation(line: 60, column: 9, scope: !9741)
!9752 = !DILocation(line: 60, column: 2, scope: !9741)
!9753 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !1075, file: !1075, line: 667, type: !1092, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9754)
!9754 = !{!9755, !9756, !9757, !9758, !9759, !9761}
!9755 = !DILocalVariable(name: "port", arg: 1, scope: !9753, file: !1075, line: 667, type: !1094)
!9756 = !DILocalVariable(name: "pin", arg: 2, scope: !9753, file: !1075, line: 668, type: !1109)
!9757 = !DILocalVariable(name: "flags", arg: 3, scope: !9753, file: !1075, line: 669, type: !1110)
!9758 = !DILocalVariable(name: "api", scope: !9753, file: !1075, line: 671, type: !1086)
!9759 = !DILocalVariable(name: "cfg", scope: !9753, file: !1075, line: 673, type: !9760)
!9760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!9761 = !DILocalVariable(name: "data", scope: !9753, file: !1075, line: 675, type: !1166)
!9762 = !DILocation(line: 0, scope: !9753)
!9763 = !DILocation(line: 672, column: 41, scope: !9753)
!9764 = !DILocation(line: 674, column: 44, scope: !9753)
!9765 = !DILocation(line: 676, column: 36, scope: !9753)
!9766 = !DILocation(line: 678, column: 2, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9768, file: !1075, line: 678, column: 2)
!9768 = distinct !DILexicalBlock(scope: !9753, file: !1075, line: 678, column: 2)
!9769 = !DILocation(line: 678, column: 2, scope: !9768)
!9770 = !DILocation(line: 678, column: 2, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9767, file: !1075, line: 678, column: 2)
!9772 = !DILocation(line: 681, column: 2, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !1075, line: 681, column: 2)
!9774 = distinct !DILexicalBlock(scope: !9753, file: !1075, line: 681, column: 2)
!9775 = !DILocation(line: 681, column: 2, scope: !9774)
!9776 = !DILocation(line: 681, column: 2, scope: !9777)
!9777 = distinct !DILexicalBlock(scope: !9773, file: !1075, line: 681, column: 2)
!9778 = !DILocation(line: 685, column: 2, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !1075, line: 685, column: 2)
!9780 = distinct !DILexicalBlock(scope: !9753, file: !1075, line: 685, column: 2)
!9781 = !DILocation(line: 685, column: 2, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9779, file: !1075, line: 685, column: 2)
!9783 = !DILocation(line: 689, column: 2, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9785, file: !1075, line: 689, column: 2)
!9785 = distinct !DILexicalBlock(scope: !9753, file: !1075, line: 689, column: 2)
!9786 = !DILocation(line: 689, column: 2, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9784, file: !1075, line: 689, column: 2)
!9788 = !DILocation(line: 692, column: 2, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9790, file: !1075, line: 692, column: 2)
!9790 = distinct !DILexicalBlock(scope: !9753, file: !1075, line: 692, column: 2)
!9791 = !DILocation(line: 692, column: 2, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9789, file: !1075, line: 692, column: 2)
!9793 = !DILocation(line: 696, column: 2, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9795, file: !1075, line: 696, column: 2)
!9795 = distinct !DILexicalBlock(scope: !9753, file: !1075, line: 696, column: 2)
!9796 = !DILocation(line: 696, column: 2, scope: !9795)
!9797 = !DILocation(line: 696, column: 2, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9794, file: !1075, line: 696, column: 2)
!9799 = !DILocation(line: 701, column: 6, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9753, file: !1075, line: 700, column: 6)
!9801 = !DILocation(line: 708, column: 2, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9803, file: !1075, line: 708, column: 2)
!9803 = distinct !DILexicalBlock(scope: !9753, file: !1075, line: 708, column: 2)
!9804 = !DILocation(line: 708, column: 2, scope: !9803)
!9805 = !DILocation(line: 708, column: 2, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9802, file: !1075, line: 708, column: 2)
!9807 = !DILocation(line: 711, column: 13, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9753, file: !1075, line: 711, column: 6)
!9809 = !DILocation(line: 711, column: 32, scope: !9808)
!9810 = !DILocation(line: 711, column: 6, scope: !9753)
!9811 = !DILocation(line: 712, column: 9, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9808, file: !1075, line: 711, column: 38)
!9813 = !DILocation(line: 712, column: 16, scope: !9812)
!9814 = !DILocation(line: 713, column: 2, scope: !9812)
!9815 = !DILocation(line: 714, column: 19, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9808, file: !1075, line: 713, column: 9)
!9817 = !DILocation(line: 714, column: 9, scope: !9816)
!9818 = !DILocation(line: 714, column: 16, scope: !9816)
!9819 = !DILocation(line: 706, column: 8, scope: !9753)
!9820 = !DILocation(line: 717, column: 14, scope: !9753)
!9821 = !DILocation(line: 717, column: 9, scope: !9753)
!9822 = !DILocation(line: 717, column: 2, scope: !9753)
!9823 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !810, file: !810, line: 730, type: !9716, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !9824)
!9824 = !{!9825}
!9825 = !DILocalVariable(name: "dev", arg: 1, scope: !9823, file: !810, line: 730, type: !1094)
!9826 = !DILocation(line: 0, scope: !9823)
!9827 = !DILocation(line: 732, column: 9, scope: !9823)
!9828 = !DILocation(line: 732, column: 2, scope: !9823)
!9829 = distinct !DISubprogram(name: "_zbus_timeout_remainder", scope: !1183, file: !1183, line: 12, type: !9830, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !9836)
!9830 = !DISubroutineType(types: !9831)
!9831 = !{!9832, !112}
!9832 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !9833)
!9833 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !9834)
!9834 = !{!9835}
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !9833, file: !105, line: 66, baseType: !104, size: 64)
!9836 = !{!9837, !9838}
!9837 = !DILocalVariable(name: "end_ticks", arg: 1, scope: !9829, file: !1183, line: 12, type: !112)
!9838 = !DILocalVariable(name: "now_ticks", scope: !9829, file: !1183, line: 14, type: !106)
!9839 = !DILocation(line: 0, scope: !9829)
!9840 = !DILocation(line: 14, column: 22, scope: !9829)
!9841 = !DILocation(line: 16, column: 9, scope: !9829)
!9842 = !DILocation(line: 17, column: 1, scope: !9829)
!9843 = distinct !DISubprogram(name: "zbus_chan_pub", scope: !1183, file: !1183, line: 103, type: !9844, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !9993)
!9844 = !DISubroutineType(types: !9845)
!9845 = !{!103, !9846, !13, !9832}
!9846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9847, size: 32)
!9847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9848)
!9848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_channel", file: !119, line: 29, size: 224, elements: !9849)
!9849 = !{!9850, !9851, !9852, !9853, !9854, !9855, !9965}
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9848, file: !119, line: 32, baseType: !178, size: 32)
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "message_size", scope: !9848, file: !119, line: 35, baseType: !180, size: 16, offset: 32)
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !9848, file: !119, line: 40, baseType: !184, size: 32, offset: 64)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !9848, file: !119, line: 45, baseType: !184, size: 32, offset: 96)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "validator", scope: !9848, file: !119, line: 51, baseType: !187, size: 32, offset: 128)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9848, file: !119, line: 56, baseType: !9856, size: 32, offset: 160)
!9856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9857, size: 32)
!9857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !9858)
!9858 = !{!9859, !9878, !9963, !9964}
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9857, file: !127, line: 2722, baseType: !9860, size: 64)
!9860 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !9861)
!9861 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !9862)
!9862 = !{!9863}
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9861, file: !131, line: 232, baseType: !9864, size: 64)
!9864 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !9865)
!9865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !9866)
!9866 = !{!9867, !9873}
!9867 = !DIDerivedType(tag: DW_TAG_member, scope: !9865, file: !136, line: 38, baseType: !9868, size: 32)
!9868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9865, file: !136, line: 38, size: 32, elements: !9869)
!9869 = !{!9870, !9872}
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9868, file: !136, line: 39, baseType: !9871, size: 32)
!9871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9865, size: 32)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9868, file: !136, line: 40, baseType: !9871, size: 32)
!9873 = !DIDerivedType(tag: DW_TAG_member, scope: !9865, file: !136, line: 42, baseType: !9874, size: 32, offset: 32)
!9874 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9865, file: !136, line: 42, size: 32, elements: !9875)
!9875 = !{!9876, !9877}
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9874, file: !136, line: 43, baseType: !9871, size: 32)
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9874, file: !136, line: 44, baseType: !9871, size: 32)
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9857, file: !127, line: 2724, baseType: !9879, size: 32, offset: 64)
!9879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9880, size: 32)
!9880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !9881)
!9881 = !{!9882, !9922, !9934, !9935, !9936, !9937, !9943, !9958}
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9880, file: !199, line: 247, baseType: !9883, size: 384)
!9883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !9884)
!9884 = !{!9885, !9896, !9898, !9899, !9900, !9909, !9910, !9911}
!9885 = !DIDerivedType(tag: DW_TAG_member, scope: !9883, file: !199, line: 60, baseType: !9886, size: 64)
!9886 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9883, file: !199, line: 60, size: 64, elements: !9887)
!9887 = !{!9888, !9890}
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9886, file: !199, line: 61, baseType: !9889, size: 64)
!9889 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !9865)
!9890 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9886, file: !199, line: 62, baseType: !9891, size: 64)
!9891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !9892)
!9892 = !{!9893}
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9891, file: !211, line: 50, baseType: !9894, size: 64)
!9894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9895, size: 64, elements: !216)
!9895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9891, size: 32)
!9896 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9883, file: !199, line: 68, baseType: !9897, size: 32, offset: 64)
!9897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9860, size: 32)
!9898 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9883, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9883, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!9900 = !DIDerivedType(tag: DW_TAG_member, scope: !9883, file: !199, line: 90, baseType: !9901, size: 16, offset: 112)
!9901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9883, file: !199, line: 90, size: 16, elements: !9902)
!9902 = !{!9903, !9908}
!9903 = !DIDerivedType(tag: DW_TAG_member, scope: !9901, file: !199, line: 91, baseType: !9904, size: 16)
!9904 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9901, file: !199, line: 91, size: 16, elements: !9905)
!9905 = !{!9906, !9907}
!9906 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9904, file: !199, line: 96, baseType: !229, size: 8)
!9907 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9904, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!9908 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9901, file: !199, line: 100, baseType: !181, size: 16)
!9909 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9883, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!9910 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9883, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!9911 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9883, file: !199, line: 131, baseType: !9912, size: 192, offset: 192)
!9912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !9913)
!9913 = !{!9914, !9915, !9921}
!9914 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9912, file: !131, line: 245, baseType: !9889, size: 64)
!9915 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9912, file: !131, line: 246, baseType: !9916, size: 32, offset: 64)
!9916 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !9917)
!9917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9918, size: 32)
!9918 = !DISubroutineType(types: !9919)
!9919 = !{null, !9920}
!9920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9912, size: 32)
!9921 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9912, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9880, file: !199, line: 250, baseType: !9923, size: 288, offset: 384)
!9923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !9924)
!9924 = !{!9925, !9926, !9927, !9928, !9929, !9930, !9931, !9932, !9933}
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9923, file: !248, line: 26, baseType: !111, size: 32)
!9926 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9923, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!9927 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9923, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!9928 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9923, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9923, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9923, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!9931 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9923, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!9932 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9923, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!9933 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9923, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!9934 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9880, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!9935 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9880, file: !199, line: 256, baseType: !9860, size: 64, offset: 704)
!9936 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9880, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!9937 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9880, file: !199, line: 300, baseType: !9938, size: 96, offset: 800)
!9938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !9939)
!9939 = !{!9940, !9941, !9942}
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9938, file: !199, line: 153, baseType: !22, size: 32)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9938, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9938, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9880, file: !199, line: 325, baseType: !9944, size: 32, offset: 896)
!9944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9945, size: 32)
!9945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !9946)
!9946 = !{!9947, !9953, !9954}
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9945, file: !127, line: 5074, baseType: !9948, size: 96)
!9948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !9949)
!9949 = !{!9950, !9951, !9952}
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9948, file: !274, line: 57, baseType: !277, size: 32)
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9948, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!9952 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9948, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!9953 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9945, file: !127, line: 5075, baseType: !9860, size: 64, offset: 96)
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9945, file: !127, line: 5076, baseType: !9955, size: 32, offset: 160)
!9955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !9956)
!9956 = !{!9957}
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9955, file: !152, line: 52, baseType: !22, size: 32)
!9958 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9880, file: !199, line: 343, baseType: !9959, size: 64, offset: 928)
!9959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !9960)
!9960 = !{!9961, !9962}
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9959, file: !248, line: 63, baseType: !111, size: 32)
!9962 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9959, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!9963 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !9857, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!9964 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !9857, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!9965 = !DIDerivedType(tag: DW_TAG_member, name: "observers", scope: !9848, file: !119, line: 67, baseType: !9966, size: 32, offset: 192)
!9966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9967, size: 32)
!9967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9968)
!9968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9969, size: 32)
!9969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9970)
!9970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "zbus_observer", file: !119, line: 85, size: 96, elements: !9971)
!9971 = !{!9972, !9973, !9988}
!9972 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !9970, file: !119, line: 91, baseType: !122, size: 8)
!9973 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !9970, file: !119, line: 93, baseType: !9974, size: 32, offset: 32)
!9974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9975)
!9975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9976, size: 32)
!9976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !9977)
!9977 = !{!9978, !9979, !9980, !9981, !9982, !9983, !9984, !9985, !9986, !9987}
!9978 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9976, file: !127, line: 4206, baseType: !9860, size: 64)
!9979 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9976, file: !127, line: 4208, baseType: !9955, size: 32, offset: 64)
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !9976, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!9981 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !9976, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!9982 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !9976, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!9983 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !9976, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!9984 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !9976, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!9985 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !9976, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!9986 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !9976, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!9987 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9976, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!9988 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !9970, file: !119, line: 96, baseType: !9989, size: 32, offset: 64)
!9989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9990)
!9990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9991, size: 32)
!9991 = !DISubroutineType(types: !9992)
!9992 = !{null, !9846}
!9993 = !{!9994, !9995, !9996, !9997, !9998}
!9994 = !DILocalVariable(name: "chan", arg: 1, scope: !9843, file: !1183, line: 103, type: !9846)
!9995 = !DILocalVariable(name: "msg", arg: 2, scope: !9843, file: !1183, line: 103, type: !13)
!9996 = !DILocalVariable(name: "timeout", arg: 3, scope: !9843, file: !1183, line: 103, type: !9832)
!9997 = !DILocalVariable(name: "err", scope: !9843, file: !1183, line: 105, type: !103)
!9998 = !DILocalVariable(name: "end_ticks", scope: !9843, file: !1183, line: 106, type: !112)
!9999 = !DILocation(line: 0, scope: !9843)
!10000 = !DILocation(line: 106, column: 23, scope: !9843)
!10001 = !DILocation(line: 108, column: 2, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !10003, file: !1183, line: 108, column: 2)
!10003 = distinct !DILexicalBlock(scope: !9843, file: !1183, line: 108, column: 2)
!10004 = !DILocation(line: 108, column: 2, scope: !10003)
!10005 = !DILocation(line: 108, column: 2, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10002, file: !1183, line: 108, column: 2)
!10007 = !DILocation(line: 109, column: 2, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10009, file: !1183, line: 109, column: 2)
!10009 = distinct !DILexicalBlock(scope: !9843, file: !1183, line: 109, column: 2)
!10010 = !DILocation(line: 109, column: 2, scope: !10009)
!10011 = !DILocation(line: 109, column: 2, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10008, file: !1183, line: 109, column: 2)
!10013 = !DILocation(line: 110, column: 2, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10015, file: !1183, line: 110, column: 2)
!10015 = distinct !DILexicalBlock(scope: !9843, file: !1183, line: 110, column: 2)
!10016 = !DILocation(line: 110, column: 2, scope: !10015)
!10017 = !DILocation(line: 110, column: 2, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10014, file: !1183, line: 110, column: 2)
!10019 = !DILocation(line: 112, column: 12, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9843, file: !1183, line: 112, column: 6)
!10021 = !DILocation(line: 112, column: 22, scope: !10020)
!10022 = !DILocation(line: 112, column: 30, scope: !10020)
!10023 = !DILocation(line: 112, column: 61, scope: !10020)
!10024 = !DILocation(line: 112, column: 55, scope: !10020)
!10025 = !DILocation(line: 112, column: 34, scope: !10020)
!10026 = !DILocation(line: 112, column: 6, scope: !9843)
!10027 = !DILocation(line: 116, column: 27, scope: !9843)
!10028 = !DILocation(line: 116, column: 8, scope: !9843)
!10029 = !DILocation(line: 117, column: 6, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !9843, file: !1183, line: 117, column: 6)
!10031 = !DILocation(line: 117, column: 6, scope: !9843)
!10032 = !DILocation(line: 121, column: 15, scope: !9843)
!10033 = !DILocation(line: 121, column: 35, scope: !9843)
!10034 = !DILocation(line: 121, column: 29, scope: !9843)
!10035 = !DILocation(line: 121, column: 2, scope: !9843)
!10036 = !DILocation(line: 123, column: 8, scope: !9843)
!10037 = !DILocation(line: 125, column: 23, scope: !9843)
!10038 = !DILocation(line: 125, column: 2, scope: !9843)
!10039 = !DILocation(line: 127, column: 2, scope: !9843)
!10040 = !DILocation(line: 128, column: 1, scope: !9843)
!10041 = distinct !DISubprogram(name: "k_mutex_lock", scope: !5243, file: !5243, line: 927, type: !10042, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10044)
!10042 = !DISubroutineType(types: !10043)
!10043 = !{!103, !9856, !9832}
!10044 = !{!10045, !10046}
!10045 = !DILocalVariable(name: "mutex", arg: 1, scope: !10041, file: !5243, line: 927, type: !9856)
!10046 = !DILocalVariable(name: "timeout", arg: 2, scope: !10041, file: !5243, line: 927, type: !9832)
!10047 = !DILocation(line: 0, scope: !10041)
!10048 = !DILocation(line: 936, column: 2, scope: !10049)
!10049 = distinct !DILexicalBlock(scope: !10041, file: !5243, line: 936, column: 2)
!10050 = !{i64 2152227858}
!10051 = !DILocation(line: 937, column: 9, scope: !10041)
!10052 = !DILocation(line: 937, column: 2, scope: !10041)
!10053 = distinct !DISubprogram(name: "_zbus_notify_observers", scope: !1183, file: !1183, line: 66, type: !10054, scopeLine: 67, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10056)
!10054 = !DISubroutineType(types: !10055)
!10055 = !{!103, !9846, !112}
!10056 = !{!10057, !10058, !10059, !10060, !10061, !10063}
!10057 = !DILocalVariable(name: "chan", arg: 1, scope: !10053, file: !1183, line: 66, type: !9846)
!10058 = !DILocalVariable(name: "end_ticks", arg: 2, scope: !10053, file: !1183, line: 66, type: !112)
!10059 = !DILocalVariable(name: "last_error", scope: !10053, file: !1183, line: 68, type: !103)
!10060 = !DILocalVariable(name: "err", scope: !10053, file: !1183, line: 68, type: !103)
!10061 = !DILocalVariable(name: "obs", scope: !10062, file: !1183, line: 70, type: !9966)
!10062 = distinct !DILexicalBlock(scope: !10053, file: !1183, line: 70, column: 2)
!10063 = !DILocalVariable(name: "obs", scope: !10064, file: !1183, line: 81, type: !9966)
!10064 = distinct !DILexicalBlock(scope: !10053, file: !1183, line: 81, column: 2)
!10065 = !DILocation(line: 0, scope: !10053)
!10066 = !DILocation(line: 70, column: 54, scope: !10062)
!10067 = !DILocation(line: 0, scope: !10062)
!10068 = !DILocation(line: 70, column: 65, scope: !10069)
!10069 = distinct !DILexicalBlock(scope: !10062, file: !1183, line: 70, column: 2)
!10070 = !DILocation(line: 70, column: 70, scope: !10069)
!10071 = !DILocation(line: 70, column: 2, scope: !10062)
!10072 = !DILocation(line: 81, column: 54, scope: !10064)
!10073 = !DILocation(line: 81, column: 65, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10064, file: !1183, line: 81, column: 2)
!10075 = !DILocation(line: 0, scope: !10064)
!10076 = !DILocation(line: 81, column: 70, scope: !10074)
!10077 = !DILocation(line: 81, column: 2, scope: !10064)
!10078 = !DILocation(line: 71, column: 15, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10080, file: !1183, line: 71, column: 7)
!10080 = distinct !DILexicalBlock(scope: !10069, file: !1183, line: 70, column: 86)
!10081 = !DILocation(line: 71, column: 23, scope: !10079)
!10082 = !DILocation(line: 71, column: 35, scope: !10079)
!10083 = !DILocation(line: 71, column: 44, scope: !10079)
!10084 = !DILocation(line: 71, column: 7, scope: !10080)
!10085 = !DILocation(line: 72, column: 4, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10079, file: !1183, line: 71, column: 54)
!10087 = !DILocation(line: 73, column: 3, scope: !10086)
!10088 = !DILocation(line: 70, column: 79, scope: !10069)
!10089 = distinct !{!10089, !10071, !10090}
!10090 = !DILocation(line: 74, column: 2, scope: !10062)
!10091 = !DILocation(line: 100, column: 2, scope: !10053)
!10092 = !DILocation(line: 82, column: 15, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10094, file: !1183, line: 82, column: 7)
!10094 = distinct !DILexicalBlock(scope: !10074, file: !1183, line: 81, column: 86)
!10095 = !DILocation(line: 82, column: 23, scope: !10093)
!10096 = !DILocation(line: 82, column: 35, scope: !10093)
!10097 = !DILocation(line: 82, column: 41, scope: !10093)
!10098 = !DILocation(line: 82, column: 7, scope: !10094)
!10099 = !DILocation(line: 83, column: 43, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10093, file: !1183, line: 82, column: 51)
!10101 = !DILocation(line: 83, column: 10, scope: !10100)
!10102 = !DILocation(line: 84, column: 4, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10104, file: !1183, line: 84, column: 4)
!10104 = distinct !DILexicalBlock(scope: !10100, file: !1183, line: 84, column: 4)
!10105 = !DILocation(line: 84, column: 4, scope: !10104)
!10106 = !DILocation(line: 84, column: 4, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10103, file: !1183, line: 84, column: 4)
!10108 = !DILocation(line: 81, column: 79, scope: !10074)
!10109 = distinct !{!10109, !10077, !10110}
!10110 = !DILocation(line: 92, column: 2, scope: !10064)
!10111 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !5243, file: !5243, line: 944, type: !10112, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10114)
!10112 = !DISubroutineType(types: !10113)
!10113 = !{!103, !9856}
!10114 = !{!10115}
!10115 = !DILocalVariable(name: "mutex", arg: 1, scope: !10111, file: !5243, line: 944, type: !9856)
!10116 = !DILocation(line: 0, scope: !10111)
!10117 = !DILocation(line: 952, column: 2, scope: !10118)
!10118 = distinct !DILexicalBlock(scope: !10111, file: !5243, line: 952, column: 2)
!10119 = !{i64 2152227926}
!10120 = !DILocation(line: 953, column: 9, scope: !10111)
!10121 = !DILocation(line: 953, column: 2, scope: !10111)
!10122 = distinct !DISubprogram(name: "k_msgq_put", scope: !5243, file: !5243, line: 1129, type: !10123, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10125)
!10123 = !DISubroutineType(types: !10124)
!10124 = !{!103, !9975, !13, !9832}
!10125 = !{!10126, !10127, !10128}
!10126 = !DILocalVariable(name: "msgq", arg: 1, scope: !10122, file: !5243, line: 1129, type: !9975)
!10127 = !DILocalVariable(name: "data", arg: 2, scope: !10122, file: !5243, line: 1129, type: !13)
!10128 = !DILocalVariable(name: "timeout", arg: 3, scope: !10122, file: !5243, line: 1129, type: !9832)
!10129 = !DILocation(line: 0, scope: !10122)
!10130 = !DILocation(line: 1139, column: 2, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10122, file: !5243, line: 1139, column: 2)
!10132 = !{i64 2152228674}
!10133 = !DILocation(line: 1140, column: 9, scope: !10122)
!10134 = !DILocation(line: 1140, column: 2, scope: !10122)
!10135 = distinct !DISubprogram(name: "zbus_chan_read", scope: !1183, file: !1183, line: 130, type: !10136, scopeLine: 131, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10138)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{!103, !9846, !102, !9832}
!10138 = !{!10139, !10140, !10141, !10142}
!10139 = !DILocalVariable(name: "chan", arg: 1, scope: !10135, file: !1183, line: 130, type: !9846)
!10140 = !DILocalVariable(name: "msg", arg: 2, scope: !10135, file: !1183, line: 130, type: !102)
!10141 = !DILocalVariable(name: "timeout", arg: 3, scope: !10135, file: !1183, line: 130, type: !9832)
!10142 = !DILocalVariable(name: "err", scope: !10135, file: !1183, line: 132, type: !103)
!10143 = !DILocation(line: 0, scope: !10135)
!10144 = !DILocation(line: 134, column: 2, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10146, file: !1183, line: 134, column: 2)
!10146 = distinct !DILexicalBlock(scope: !10135, file: !1183, line: 134, column: 2)
!10147 = !DILocation(line: 134, column: 2, scope: !10146)
!10148 = !DILocation(line: 134, column: 2, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10145, file: !1183, line: 134, column: 2)
!10150 = !DILocation(line: 135, column: 2, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10152, file: !1183, line: 135, column: 2)
!10152 = distinct !DILexicalBlock(scope: !10135, file: !1183, line: 135, column: 2)
!10153 = !DILocation(line: 135, column: 2, scope: !10152)
!10154 = !DILocation(line: 135, column: 2, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10151, file: !1183, line: 135, column: 2)
!10156 = !DILocation(line: 136, column: 2, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10158, file: !1183, line: 136, column: 2)
!10158 = distinct !DILexicalBlock(scope: !10135, file: !1183, line: 136, column: 2)
!10159 = !DILocation(line: 136, column: 2, scope: !10158)
!10160 = !DILocation(line: 136, column: 2, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10157, file: !1183, line: 136, column: 2)
!10162 = !DILocation(line: 138, column: 27, scope: !10135)
!10163 = !DILocation(line: 138, column: 8, scope: !10135)
!10164 = !DILocation(line: 139, column: 6, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10135, file: !1183, line: 139, column: 6)
!10166 = !DILocation(line: 139, column: 6, scope: !10135)
!10167 = !DILocation(line: 143, column: 20, scope: !10135)
!10168 = !DILocation(line: 143, column: 35, scope: !10135)
!10169 = !DILocation(line: 143, column: 29, scope: !10135)
!10170 = !DILocation(line: 143, column: 2, scope: !10135)
!10171 = !DILocation(line: 145, column: 30, scope: !10135)
!10172 = !DILocation(line: 145, column: 9, scope: !10135)
!10173 = !DILocation(line: 145, column: 2, scope: !10135)
!10174 = !DILocation(line: 146, column: 1, scope: !10135)
!10175 = distinct !DISubprogram(name: "zbus_chan_notify", scope: !1183, file: !1183, line: 148, type: !10176, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10178)
!10176 = !DISubroutineType(types: !10177)
!10177 = !{!103, !9846, !9832}
!10178 = !{!10179, !10180, !10181, !10182}
!10179 = !DILocalVariable(name: "chan", arg: 1, scope: !10175, file: !1183, line: 148, type: !9846)
!10180 = !DILocalVariable(name: "timeout", arg: 2, scope: !10175, file: !1183, line: 148, type: !9832)
!10181 = !DILocalVariable(name: "err", scope: !10175, file: !1183, line: 150, type: !103)
!10182 = !DILocalVariable(name: "end_ticks", scope: !10175, file: !1183, line: 151, type: !112)
!10183 = !DILocation(line: 0, scope: !10175)
!10184 = !DILocation(line: 151, column: 23, scope: !10175)
!10185 = !DILocation(line: 153, column: 2, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10187, file: !1183, line: 153, column: 2)
!10187 = distinct !DILexicalBlock(scope: !10175, file: !1183, line: 153, column: 2)
!10188 = !DILocation(line: 153, column: 2, scope: !10187)
!10189 = !DILocation(line: 153, column: 2, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10186, file: !1183, line: 153, column: 2)
!10191 = !DILocation(line: 154, column: 2, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10193, file: !1183, line: 154, column: 2)
!10193 = distinct !DILexicalBlock(scope: !10175, file: !1183, line: 154, column: 2)
!10194 = !DILocation(line: 154, column: 2, scope: !10193)
!10195 = !DILocation(line: 154, column: 2, scope: !10196)
!10196 = distinct !DILexicalBlock(scope: !10192, file: !1183, line: 154, column: 2)
!10197 = !DILocation(line: 156, column: 27, scope: !10175)
!10198 = !DILocation(line: 156, column: 8, scope: !10175)
!10199 = !DILocation(line: 157, column: 6, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10175, file: !1183, line: 157, column: 6)
!10201 = !DILocation(line: 157, column: 6, scope: !10175)
!10202 = !DILocation(line: 161, column: 8, scope: !10175)
!10203 = !DILocation(line: 163, column: 23, scope: !10175)
!10204 = !DILocation(line: 163, column: 2, scope: !10175)
!10205 = !DILocation(line: 165, column: 2, scope: !10175)
!10206 = !DILocation(line: 166, column: 1, scope: !10175)
!10207 = distinct !DISubprogram(name: "zbus_chan_claim", scope: !1183, file: !1183, line: 168, type: !10176, scopeLine: 169, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10208)
!10208 = !{!10209, !10210, !10211}
!10209 = !DILocalVariable(name: "chan", arg: 1, scope: !10207, file: !1183, line: 168, type: !9846)
!10210 = !DILocalVariable(name: "timeout", arg: 2, scope: !10207, file: !1183, line: 168, type: !9832)
!10211 = !DILocalVariable(name: "err", scope: !10207, file: !1183, line: 173, type: !103)
!10212 = !DILocation(line: 0, scope: !10207)
!10213 = !DILocation(line: 170, column: 2, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10215, file: !1183, line: 170, column: 2)
!10215 = distinct !DILexicalBlock(scope: !10207, file: !1183, line: 170, column: 2)
!10216 = !DILocation(line: 170, column: 2, scope: !10215)
!10217 = !DILocation(line: 170, column: 2, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10214, file: !1183, line: 170, column: 2)
!10219 = !DILocation(line: 171, column: 2, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !1183, line: 171, column: 2)
!10221 = distinct !DILexicalBlock(scope: !10207, file: !1183, line: 171, column: 2)
!10222 = !DILocation(line: 171, column: 2, scope: !10221)
!10223 = !DILocation(line: 171, column: 2, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10220, file: !1183, line: 171, column: 2)
!10225 = !DILocation(line: 173, column: 31, scope: !10207)
!10226 = !DILocation(line: 173, column: 12, scope: !10207)
!10227 = !DILocation(line: 180, column: 1, scope: !10207)
!10228 = distinct !DISubprogram(name: "zbus_chan_finish", scope: !1183, file: !1183, line: 182, type: !10229, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10231)
!10229 = !DISubroutineType(types: !10230)
!10230 = !{!103, !9846}
!10231 = !{!10232, !10233}
!10232 = !DILocalVariable(name: "chan", arg: 1, scope: !10228, file: !1183, line: 182, type: !9846)
!10233 = !DILocalVariable(name: "err", scope: !10228, file: !1183, line: 187, type: !103)
!10234 = !DILocation(line: 0, scope: !10228)
!10235 = !DILocation(line: 184, column: 2, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10237, file: !1183, line: 184, column: 2)
!10237 = distinct !DILexicalBlock(scope: !10228, file: !1183, line: 184, column: 2)
!10238 = !DILocation(line: 184, column: 2, scope: !10237)
!10239 = !DILocation(line: 184, column: 2, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10236, file: !1183, line: 184, column: 2)
!10241 = !DILocation(line: 185, column: 2, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10243, file: !1183, line: 185, column: 2)
!10243 = distinct !DILexicalBlock(scope: !10228, file: !1183, line: 185, column: 2)
!10244 = !DILocation(line: 185, column: 2, scope: !10243)
!10245 = !DILocation(line: 185, column: 2, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10242, file: !1183, line: 185, column: 2)
!10247 = !DILocation(line: 187, column: 33, scope: !10228)
!10248 = !DILocation(line: 187, column: 12, scope: !10228)
!10249 = !DILocation(line: 189, column: 2, scope: !10228)
!10250 = distinct !DISubprogram(name: "zbus_sub_wait", scope: !1183, file: !1183, line: 192, type: !10251, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10254)
!10251 = !DISubroutineType(types: !10252)
!10252 = !{!103, !9968, !10253, !9832}
!10253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9846, size: 32)
!10254 = !{!10255, !10256, !10257}
!10255 = !DILocalVariable(name: "sub", arg: 1, scope: !10250, file: !1183, line: 192, type: !9968)
!10256 = !DILocalVariable(name: "chan", arg: 2, scope: !10250, file: !1183, line: 192, type: !10253)
!10257 = !DILocalVariable(name: "timeout", arg: 3, scope: !10250, file: !1183, line: 193, type: !9832)
!10258 = !DILocation(line: 0, scope: !10250)
!10259 = !DILocation(line: 195, column: 2, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10261, file: !1183, line: 195, column: 2)
!10261 = distinct !DILexicalBlock(scope: !10250, file: !1183, line: 195, column: 2)
!10262 = !DILocation(line: 195, column: 2, scope: !10261)
!10263 = !DILocation(line: 195, column: 2, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10260, file: !1183, line: 195, column: 2)
!10265 = !DILocation(line: 196, column: 2, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10267, file: !1183, line: 196, column: 2)
!10267 = distinct !DILexicalBlock(scope: !10250, file: !1183, line: 196, column: 2)
!10268 = !DILocation(line: 196, column: 2, scope: !10267)
!10269 = !DILocation(line: 196, column: 2, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10266, file: !1183, line: 196, column: 2)
!10271 = !DILocation(line: 197, column: 2, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10273, file: !1183, line: 197, column: 2)
!10273 = distinct !DILexicalBlock(scope: !10250, file: !1183, line: 197, column: 2)
!10274 = !DILocation(line: 197, column: 2, scope: !10273)
!10275 = !DILocation(line: 197, column: 2, scope: !10276)
!10276 = distinct !DILexicalBlock(scope: !10272, file: !1183, line: 197, column: 2)
!10277 = !DILocation(line: 199, column: 11, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10250, file: !1183, line: 199, column: 6)
!10279 = !DILocation(line: 199, column: 17, scope: !10278)
!10280 = !DILocation(line: 199, column: 6, scope: !10250)
!10281 = !DILocation(line: 203, column: 32, scope: !10250)
!10282 = !DILocation(line: 203, column: 9, scope: !10250)
!10283 = !DILocation(line: 203, column: 2, scope: !10250)
!10284 = !DILocation(line: 204, column: 1, scope: !10250)
!10285 = distinct !DISubprogram(name: "k_msgq_get", scope: !5243, file: !5243, line: 1147, type: !10286, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1179, retainedNodes: !10288)
!10286 = !DISubroutineType(types: !10287)
!10287 = !{!103, !9975, !102, !9832}
!10288 = !{!10289, !10290, !10291}
!10289 = !DILocalVariable(name: "msgq", arg: 1, scope: !10285, file: !5243, line: 1147, type: !9975)
!10290 = !DILocalVariable(name: "data", arg: 2, scope: !10285, file: !5243, line: 1147, type: !102)
!10291 = !DILocalVariable(name: "timeout", arg: 3, scope: !10285, file: !5243, line: 1147, type: !9832)
!10292 = !DILocation(line: 0, scope: !10285)
!10293 = !DILocation(line: 1157, column: 2, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10285, file: !5243, line: 1157, column: 2)
!10295 = !{i64 2152228742}
!10296 = !DILocation(line: 1158, column: 9, scope: !10285)
!10297 = !DILocation(line: 1158, column: 2, scope: !10285)
!10298 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !1263, file: !1263, line: 368, type: !1314, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10299)
!10299 = !{!10300}
!10300 = !DILocalVariable(name: "dev", arg: 1, scope: !10298, file: !1263, line: 368, type: !1292)
!10301 = !DILocation(line: 0, scope: !10298)
!10302 = !DILocation(line: 370, column: 2, scope: !10298)
!10303 = !DILocation(line: 371, column: 1, scope: !10298)
!10304 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !1263, file: !1263, line: 243, type: !10305, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10307)
!10305 = !DISubroutineType(types: !10306)
!10306 = !{null, !103, !103, !1292}
!10307 = !{!10308, !10309, !10310, !10311, !10313}
!10308 = !DILocalVariable(name: "min", arg: 1, scope: !10304, file: !1263, line: 243, type: !103)
!10309 = !DILocalVariable(name: "max", arg: 2, scope: !10304, file: !1263, line: 243, type: !103)
!10310 = !DILocalVariable(name: "dev", arg: 3, scope: !10304, file: !1263, line: 243, type: !1292)
!10311 = !DILocalVariable(name: "data", scope: !10304, file: !1263, line: 245, type: !10312)
!10312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1296, size: 32)
!10313 = !DILocalVariable(name: "line", scope: !10304, file: !1263, line: 246, type: !103)
!10314 = !DILocation(line: 0, scope: !10304)
!10315 = !DILocation(line: 245, column: 38, scope: !10304)
!10316 = !DILocation(line: 249, column: 24, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !1263, line: 249, column: 2)
!10318 = distinct !DILexicalBlock(scope: !10304, file: !1263, line: 249, column: 2)
!10319 = !DILocation(line: 249, column: 2, scope: !10318)
!10320 = !DILocation(line: 251, column: 7, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10322, file: !1263, line: 251, column: 7)
!10322 = distinct !DILexicalBlock(scope: !10317, file: !1263, line: 249, column: 39)
!10323 = !DILocation(line: 251, column: 7, scope: !10322)
!10324 = !DILocation(line: 253, column: 4, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10321, file: !1263, line: 251, column: 36)
!10326 = !DILocation(line: 256, column: 24, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10325, file: !1263, line: 256, column: 8)
!10328 = !DILocation(line: 256, column: 9, scope: !10327)
!10329 = !DILocation(line: 256, column: 8, scope: !10325)
!10330 = !DILocation(line: 260, column: 43, scope: !10325)
!10331 = !DILocation(line: 260, column: 4, scope: !10325)
!10332 = !DILocation(line: 261, column: 3, scope: !10325)
!10333 = !DILocation(line: 249, column: 35, scope: !10317)
!10334 = distinct !{!10334, !10319, !10335}
!10335 = !DILocation(line: 262, column: 2, scope: !10318)
!10336 = !DILocation(line: 263, column: 1, scope: !10304)
!10337 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !1263, file: !1263, line: 158, type: !764, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10338)
!10338 = !{!10339}
!10339 = !DILocalVariable(name: "line", arg: 1, scope: !10337, file: !1263, line: 158, type: !103)
!10340 = !DILocation(line: 0, scope: !10337)
!10341 = !DILocation(line: 170, column: 38, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10343, file: !1263, line: 160, column: 17)
!10343 = distinct !DILexicalBlock(scope: !10337, file: !1263, line: 160, column: 6)
!10344 = !DILocation(line: 170, column: 10, scope: !10342)
!10345 = !DILocation(line: 176, column: 1, scope: !10337)
!10346 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !1263, file: !1263, line: 183, type: !10347, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10349)
!10347 = !DISubroutineType(types: !10348)
!10348 = !{null, !103}
!10349 = !{!10350}
!10350 = !DILocalVariable(name: "line", arg: 1, scope: !10346, file: !1263, line: 183, type: !103)
!10351 = !DILocation(line: 0, scope: !10346)
!10352 = !DILocation(line: 195, column: 28, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10354, file: !1263, line: 185, column: 17)
!10354 = distinct !DILexicalBlock(scope: !10346, file: !1263, line: 185, column: 6)
!10355 = !DILocation(line: 195, column: 3, scope: !10353)
!10356 = !DILocation(line: 200, column: 1, scope: !10346)
!10357 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10358, file: !10358, line: 971, type: !7520, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10359)
!10358 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10359 = !{!10360}
!10360 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10357, file: !10358, line: 971, type: !111)
!10361 = !DILocation(line: 0, scope: !10357)
!10362 = !DILocation(line: 973, column: 3, scope: !10357)
!10363 = !DILocation(line: 974, column: 1, scope: !10357)
!10364 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10358, file: !10358, line: 891, type: !9077, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10365)
!10365 = !{!10366}
!10366 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10364, file: !10358, line: 891, type: !111)
!10367 = !DILocation(line: 0, scope: !10364)
!10368 = !DILocation(line: 893, column: 11, scope: !10364)
!10369 = !DILocation(line: 893, column: 40, scope: !10364)
!10370 = !DILocation(line: 893, column: 3, scope: !10364)
!10371 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !1263, file: !1263, line: 304, type: !1314, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10372)
!10372 = !{!10373}
!10373 = !DILocalVariable(name: "dev", arg: 1, scope: !10371, file: !1263, line: 304, type: !1292)
!10374 = !DILocation(line: 0, scope: !10371)
!10375 = !DILocation(line: 306, column: 2, scope: !10371)
!10376 = !DILocation(line: 307, column: 1, scope: !10371)
!10377 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !1263, file: !1263, line: 299, type: !1314, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10378)
!10378 = !{!10379}
!10379 = !DILocalVariable(name: "dev", arg: 1, scope: !10377, file: !1263, line: 299, type: !1292)
!10380 = !DILocation(line: 0, scope: !10377)
!10381 = !DILocation(line: 301, column: 2, scope: !10377)
!10382 = !DILocation(line: 302, column: 1, scope: !10377)
!10383 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !1263, file: !1263, line: 294, type: !1314, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10384)
!10384 = !{!10385}
!10385 = !DILocalVariable(name: "dev", arg: 1, scope: !10383, file: !1263, line: 294, type: !1292)
!10386 = !DILocation(line: 0, scope: !10383)
!10387 = !DILocation(line: 296, column: 2, scope: !10383)
!10388 = !DILocation(line: 297, column: 1, scope: !10383)
!10389 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !1263, file: !1263, line: 289, type: !1314, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10390)
!10390 = !{!10391}
!10391 = !DILocalVariable(name: "dev", arg: 1, scope: !10389, file: !1263, line: 289, type: !1292)
!10392 = !DILocation(line: 0, scope: !10389)
!10393 = !DILocation(line: 291, column: 2, scope: !10389)
!10394 = !DILocation(line: 292, column: 1, scope: !10389)
!10395 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !1263, file: !1263, line: 373, type: !1314, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10396)
!10396 = !{!10397}
!10397 = !DILocalVariable(name: "dev", arg: 1, scope: !10395, file: !1263, line: 373, type: !1292)
!10398 = !DILocation(line: 0, scope: !10395)
!10399 = !DILocation(line: 375, column: 2, scope: !10395)
!10400 = !DILocation(line: 376, column: 1, scope: !10395)
!10401 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !1263, file: !1263, line: 284, type: !1314, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10402)
!10402 = !{!10403}
!10403 = !DILocalVariable(name: "dev", arg: 1, scope: !10401, file: !1263, line: 284, type: !1292)
!10404 = !DILocation(line: 0, scope: !10401)
!10405 = !DILocation(line: 286, column: 2, scope: !10401)
!10406 = !DILocation(line: 287, column: 1, scope: !10401)
!10407 = distinct !DISubprogram(name: "stm32_exti_init", scope: !1263, file: !1263, line: 416, type: !1290, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10408)
!10408 = !{!10409}
!10409 = !DILocalVariable(name: "dev", arg: 1, scope: !10407, file: !1263, line: 416, type: !1292)
!10410 = !DILocation(line: 0, scope: !10407)
!10411 = !DILocation(line: 418, column: 2, scope: !10407)
!10412 = !DILocation(line: 420, column: 2, scope: !10407)
!10413 = !DILocation(line: 0, scope: !1313)
!10414 = !DILocation(line: 493, column: 2, scope: !10415)
!10415 = distinct !DILexicalBlock(scope: !1313, file: !1263, line: 493, column: 2)
!10416 = !DILocation(line: 497, column: 2, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !1313, file: !1263, line: 497, column: 2)
!10418 = !DILocation(line: 507, column: 2, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !1313, file: !1263, line: 507, column: 2)
!10420 = !DILocation(line: 512, column: 2, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !1313, file: !1263, line: 512, column: 2)
!10422 = !DILocation(line: 516, column: 2, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !1313, file: !1263, line: 516, column: 2)
!10424 = !DILocation(line: 523, column: 2, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !1313, file: !1263, line: 523, column: 2)
!10426 = !DILocation(line: 527, column: 2, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !1313, file: !1263, line: 527, column: 2)
!10428 = !DILocation(line: 607, column: 1, scope: !1313)
!10429 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !1263, file: !1263, line: 112, type: !10347, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10430)
!10430 = !{!10431, !10432}
!10431 = !DILocalVariable(name: "line", arg: 1, scope: !10429, file: !1263, line: 112, type: !103)
!10432 = !DILocalVariable(name: "irqnum", scope: !10429, file: !1263, line: 114, type: !103)
!10433 = !DILocation(line: 0, scope: !10429)
!10434 = !DILocation(line: 121, column: 11, scope: !10429)
!10435 = !DILocation(line: 130, column: 26, scope: !10429)
!10436 = !DILocation(line: 130, column: 2, scope: !10429)
!10437 = !DILocation(line: 134, column: 2, scope: !10429)
!10438 = !DILocation(line: 135, column: 1, scope: !10429)
!10439 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10358, file: !10358, line: 274, type: !7520, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10440)
!10440 = !{!10441}
!10441 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10439, file: !10358, line: 274, type: !111)
!10442 = !DILocation(line: 0, scope: !10439)
!10443 = !DILocation(line: 276, column: 3, scope: !10439)
!10444 = !DILocation(line: 277, column: 1, scope: !10439)
!10445 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !1263, file: !1263, line: 137, type: !10347, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10446)
!10446 = !{!10447}
!10447 = !DILocalVariable(name: "line", arg: 1, scope: !10445, file: !1263, line: 137, type: !103)
!10448 = !DILocation(line: 0, scope: !10445)
!10449 = !DILocation(line: 141, column: 11, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10445, file: !1263, line: 141, column: 6)
!10451 = !DILocation(line: 141, column: 6, scope: !10445)
!10452 = !DILocation(line: 145, column: 28, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10450, file: !1263, line: 141, column: 17)
!10454 = !DILocation(line: 145, column: 3, scope: !10453)
!10455 = !DILocation(line: 147, column: 2, scope: !10453)
!10456 = !DILocation(line: 151, column: 1, scope: !10445)
!10457 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10358, file: !10358, line: 322, type: !7520, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10458)
!10458 = !{!10459}
!10459 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10457, file: !10358, line: 322, type: !111)
!10460 = !DILocation(line: 0, scope: !10457)
!10461 = !DILocation(line: 324, column: 3, scope: !10457)
!10462 = !DILocation(line: 325, column: 1, scope: !10457)
!10463 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !1263, file: !1263, line: 202, type: !10464, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10466)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{null, !103, !103}
!10466 = !{!10467, !10468}
!10467 = !DILocalVariable(name: "line", arg: 1, scope: !10463, file: !1263, line: 202, type: !103)
!10468 = !DILocalVariable(name: "trigger", arg: 2, scope: !10463, file: !1263, line: 202, type: !103)
!10469 = !DILocation(line: 0, scope: !10463)
!10470 = !DILocation(line: 211, column: 2, scope: !10463)
!10471 = !DILocation(line: 213, column: 36, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10463, file: !1263, line: 211, column: 19)
!10473 = !DILocation(line: 213, column: 3, scope: !10472)
!10474 = !DILocation(line: 214, column: 3, scope: !10472)
!10475 = !DILocation(line: 215, column: 3, scope: !10472)
!10476 = !DILocation(line: 217, column: 35, scope: !10472)
!10477 = !DILocation(line: 217, column: 3, scope: !10472)
!10478 = !DILocation(line: 218, column: 3, scope: !10472)
!10479 = !DILocation(line: 219, column: 3, scope: !10472)
!10480 = !DILocation(line: 221, column: 36, scope: !10472)
!10481 = !DILocation(line: 221, column: 3, scope: !10472)
!10482 = !DILocation(line: 222, column: 3, scope: !10472)
!10483 = !DILocation(line: 223, column: 3, scope: !10472)
!10484 = !DILocation(line: 225, column: 35, scope: !10472)
!10485 = !DILocation(line: 225, column: 3, scope: !10472)
!10486 = !DILocation(line: 226, column: 3, scope: !10472)
!10487 = !DILocation(line: 227, column: 3, scope: !10472)
!10488 = !DILocation(line: 232, column: 1, scope: !10463)
!10489 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10358, file: !10358, line: 618, type: !7520, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10490)
!10490 = !{!10491}
!10491 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10489, file: !10358, line: 618, type: !111)
!10492 = !DILocation(line: 0, scope: !10489)
!10493 = !DILocation(line: 620, column: 3, scope: !10489)
!10494 = !DILocation(line: 622, column: 1, scope: !10489)
!10495 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10358, file: !10358, line: 754, type: !7520, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10496)
!10496 = !{!10497}
!10497 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10495, file: !10358, line: 754, type: !111)
!10498 = !DILocation(line: 0, scope: !10495)
!10499 = !DILocation(line: 756, column: 3, scope: !10495)
!10500 = !DILocation(line: 757, column: 1, scope: !10495)
!10501 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10358, file: !10358, line: 572, type: !7520, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10502)
!10502 = !{!10503}
!10503 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10501, file: !10358, line: 572, type: !111)
!10504 = !DILocation(line: 0, scope: !10501)
!10505 = !DILocation(line: 574, column: 3, scope: !10501)
!10506 = !DILocation(line: 576, column: 1, scope: !10501)
!10507 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10358, file: !10358, line: 710, type: !7520, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10508)
!10508 = !{!10509}
!10509 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10507, file: !10358, line: 710, type: !111)
!10510 = !DILocation(line: 0, scope: !10507)
!10511 = !DILocation(line: 712, column: 3, scope: !10507)
!10512 = !DILocation(line: 713, column: 1, scope: !10507)
!10513 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !1263, file: !1263, line: 433, type: !10514, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10516)
!10514 = !DISubroutineType(types: !10515)
!10515 = !{!103, !103, !1303, !102}
!10516 = !{!10517, !10518, !10519, !10520, !10522}
!10517 = !DILocalVariable(name: "line", arg: 1, scope: !10513, file: !1263, line: 433, type: !103)
!10518 = !DILocalVariable(name: "cb", arg: 2, scope: !10513, file: !1263, line: 433, type: !1303)
!10519 = !DILocalVariable(name: "arg", arg: 3, scope: !10513, file: !1263, line: 433, type: !102)
!10520 = !DILocalVariable(name: "dev", scope: !10513, file: !1263, line: 435, type: !10521)
!10521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1292)
!10522 = !DILocalVariable(name: "data", scope: !10513, file: !1263, line: 436, type: !10312)
!10523 = !DILocation(line: 0, scope: !10513)
!10524 = !DILocation(line: 438, column: 21, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10513, file: !1263, line: 438, column: 6)
!10526 = !DILocation(line: 438, column: 6, scope: !10525)
!10527 = !DILocation(line: 438, column: 6, scope: !10513)
!10528 = !DILocation(line: 442, column: 20, scope: !10513)
!10529 = !DILocation(line: 443, column: 17, scope: !10513)
!10530 = !DILocation(line: 443, column: 22, scope: !10513)
!10531 = !DILocation(line: 445, column: 2, scope: !10513)
!10532 = !DILocation(line: 446, column: 1, scope: !10513)
!10533 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !1263, file: !1263, line: 448, type: !10347, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1191, retainedNodes: !10534)
!10534 = !{!10535, !10536, !10537}
!10535 = !DILocalVariable(name: "line", arg: 1, scope: !10533, file: !1263, line: 448, type: !103)
!10536 = !DILocalVariable(name: "dev", scope: !10533, file: !1263, line: 450, type: !10521)
!10537 = !DILocalVariable(name: "data", scope: !10533, file: !1263, line: 451, type: !10312)
!10538 = !DILocation(line: 0, scope: !10533)
!10539 = !DILocation(line: 453, column: 17, scope: !10533)
!10540 = !DILocation(line: 453, column: 20, scope: !10533)
!10541 = !DILocation(line: 454, column: 17, scope: !10533)
!10542 = !DILocation(line: 454, column: 22, scope: !10533)
!10543 = !DILocation(line: 455, column: 1, scope: !10533)
!10544 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1415, file: !1415, line: 183, type: !1453, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10545)
!10545 = !{!10546, !10547, !10548, !10549, !10550}
!10546 = !DILocalVariable(name: "dev", arg: 1, scope: !10544, file: !1415, line: 183, type: !1444)
!10547 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10544, file: !1415, line: 184, type: !1455)
!10548 = !DILocalVariable(name: "pclken", scope: !10544, file: !1415, line: 186, type: !1405)
!10549 = !DILocalVariable(name: "reg", scope: !10544, file: !1415, line: 187, type: !3485)
!10550 = !DILocalVariable(name: "reg_val", scope: !10544, file: !1415, line: 188, type: !111)
!10551 = !DILocation(line: 0, scope: !10544)
!10552 = !DILocation(line: 192, column: 6, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10544, file: !1415, line: 192, column: 6)
!10554 = !DILocation(line: 192, column: 6, scope: !10544)
!10555 = !DILocation(line: 197, column: 52, scope: !10544)
!10556 = !DILocation(line: 197, column: 8, scope: !10544)
!10557 = !DILocation(line: 198, column: 12, scope: !10544)
!10558 = !DILocation(line: 199, column: 21, scope: !10544)
!10559 = !DILocation(line: 199, column: 10, scope: !10544)
!10560 = !DILocation(line: 200, column: 7, scope: !10544)
!10561 = !DILocation(line: 202, column: 2, scope: !10544)
!10562 = !DILocation(line: 203, column: 1, scope: !10544)
!10563 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1415, file: !1415, line: 205, type: !1453, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10564)
!10564 = !{!10565, !10566, !10567, !10568, !10569}
!10565 = !DILocalVariable(name: "dev", arg: 1, scope: !10563, file: !1415, line: 205, type: !1444)
!10566 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10563, file: !1415, line: 206, type: !1455)
!10567 = !DILocalVariable(name: "pclken", scope: !10563, file: !1415, line: 208, type: !1405)
!10568 = !DILocalVariable(name: "reg", scope: !10563, file: !1415, line: 209, type: !3485)
!10569 = !DILocalVariable(name: "reg_val", scope: !10563, file: !1415, line: 210, type: !111)
!10570 = !DILocation(line: 0, scope: !10563)
!10571 = !DILocation(line: 214, column: 6, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10563, file: !1415, line: 214, column: 6)
!10573 = !DILocation(line: 214, column: 6, scope: !10563)
!10574 = !DILocation(line: 219, column: 52, scope: !10563)
!10575 = !DILocation(line: 219, column: 8, scope: !10563)
!10576 = !DILocation(line: 220, column: 12, scope: !10563)
!10577 = !DILocation(line: 221, column: 22, scope: !10563)
!10578 = !DILocation(line: 221, column: 13, scope: !10563)
!10579 = !DILocation(line: 221, column: 10, scope: !10563)
!10580 = !DILocation(line: 222, column: 7, scope: !10563)
!10581 = !DILocation(line: 224, column: 2, scope: !10563)
!10582 = !DILocation(line: 225, column: 1, scope: !10563)
!10583 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1415, file: !1415, line: 262, type: !1469, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10584)
!10584 = !{!10585, !10586, !10587, !10588, !10589, !10590, !10591}
!10585 = !DILocalVariable(name: "clock", arg: 1, scope: !10583, file: !1415, line: 262, type: !1444)
!10586 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10583, file: !1415, line: 263, type: !1455)
!10587 = !DILocalVariable(name: "rate", arg: 3, scope: !10583, file: !1415, line: 264, type: !1411)
!10588 = !DILocalVariable(name: "pclken", scope: !10583, file: !1415, line: 266, type: !1405)
!10589 = !DILocalVariable(name: "ahb_clock", scope: !10583, file: !1415, line: 273, type: !111)
!10590 = !DILocalVariable(name: "apb1_clock", scope: !10583, file: !1415, line: 274, type: !111)
!10591 = !DILocalVariable(name: "apb2_clock", scope: !10583, file: !1415, line: 276, type: !111)
!10592 = !DILocation(line: 0, scope: !10583)
!10593 = !DILocation(line: 273, column: 23, scope: !10583)
!10594 = !DILocation(line: 299, column: 18, scope: !10583)
!10595 = !DILocation(line: 299, column: 2, scope: !10583)
!10596 = !DILocation(line: 374, column: 3, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10583, file: !1415, line: 299, column: 23)
!10598 = !DILocation(line: 379, column: 3, scope: !10597)
!10599 = !DILocation(line: 389, column: 3, scope: !10597)
!10600 = !DILocation(line: 0, scope: !10597)
!10601 = !DILocation(line: 396, column: 1, scope: !10583)
!10602 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1415, file: !1415, line: 227, type: !1485, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10603)
!10603 = !{!10604, !10605, !10606, !10607, !10608, !10609, !10610, !10611}
!10604 = !DILocalVariable(name: "dev", arg: 1, scope: !10602, file: !1415, line: 227, type: !1444)
!10605 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10602, file: !1415, line: 228, type: !1455)
!10606 = !DILocalVariable(name: "data", arg: 3, scope: !10602, file: !1415, line: 229, type: !102)
!10607 = !DILocalVariable(name: "pclken", scope: !10602, file: !1415, line: 233, type: !1405)
!10608 = !DILocalVariable(name: "reg", scope: !10602, file: !1415, line: 234, type: !3485)
!10609 = !DILocalVariable(name: "reg_val", scope: !10602, file: !1415, line: 235, type: !111)
!10610 = !DILocalVariable(name: "dt_val", scope: !10602, file: !1415, line: 235, type: !111)
!10611 = !DILocalVariable(name: "err", scope: !10602, file: !1415, line: 236, type: !103)
!10612 = !DILocation(line: 0, scope: !10602)
!10613 = !DILocation(line: 241, column: 30, scope: !10602)
!10614 = !DILocation(line: 241, column: 8, scope: !10602)
!10615 = !DILocation(line: 242, column: 10, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10602, file: !1415, line: 242, column: 6)
!10617 = !DILocation(line: 242, column: 6, scope: !10602)
!10618 = !DILocation(line: 247, column: 11, scope: !10602)
!10619 = !DILocation(line: 248, column: 6, scope: !10602)
!10620 = !DILocation(line: 247, column: 44, scope: !10602)
!10621 = !DILocation(line: 250, column: 6, scope: !10602)
!10622 = !DILocation(line: 249, column: 52, scope: !10602)
!10623 = !DILocation(line: 249, column: 8, scope: !10602)
!10624 = !DILocation(line: 251, column: 12, scope: !10602)
!10625 = !DILocation(line: 252, column: 10, scope: !10602)
!10626 = !DILocation(line: 253, column: 7, scope: !10602)
!10627 = !DILocation(line: 255, column: 2, scope: !10602)
!10628 = !DILocation(line: 260, column: 1, scope: !10602)
!10629 = distinct !DISubprogram(name: "enabled_clock", scope: !1415, file: !1415, line: 100, type: !10630, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10632)
!10630 = !DISubroutineType(types: !10631)
!10631 = !{!103, !111}
!10632 = !{!10633, !10634}
!10633 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10629, file: !1415, line: 100, type: !111)
!10634 = !DILocalVariable(name: "r", scope: !10629, file: !1415, line: 102, type: !103)
!10635 = !DILocation(line: 0, scope: !10629)
!10636 = !DILocation(line: 104, column: 2, scope: !10629)
!10637 = !DILocation(line: 180, column: 2, scope: !10629)
!10638 = !DILocation(line: 181, column: 1, scope: !10629)
!10639 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1415, file: !1415, line: 641, type: !1442, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10640)
!10640 = !{!10641, !10642, !10643}
!10641 = !DILocalVariable(name: "dev", arg: 1, scope: !10639, file: !1415, line: 641, type: !1444)
!10642 = !DILocalVariable(name: "old_flash_freq", scope: !10639, file: !1415, line: 664, type: !111)
!10643 = !DILocalVariable(name: "new_flash_freq", scope: !10639, file: !1415, line: 665, type: !111)
!10644 = !DILocation(line: 0, scope: !10639)
!10645 = !DILocation(line: 646, column: 2, scope: !10639)
!10646 = !DILocation(line: 667, column: 19, scope: !10639)
!10647 = !DILocation(line: 674, column: 21, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10639, file: !1415, line: 674, column: 6)
!10649 = !DILocation(line: 674, column: 6, scope: !10639)
!10650 = !DILocation(line: 675, column: 3, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10648, file: !1415, line: 674, column: 59)
!10652 = !DILocation(line: 676, column: 2, scope: !10651)
!10653 = !DILocation(line: 680, column: 2, scope: !10639)
!10654 = !DILocation(line: 683, column: 2, scope: !10639)
!10655 = !DILocation(line: 690, column: 3, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10657, file: !1415, line: 689, column: 9)
!10657 = distinct !DILexicalBlock(scope: !10639, file: !1415, line: 685, column: 6)
!10658 = !DILocation(line: 695, column: 2, scope: !10639)
!10659 = !DILocation(line: 696, column: 2, scope: !10639)
!10660 = !DILocation(line: 696, column: 9, scope: !10639)
!10661 = !DILocation(line: 696, column: 34, scope: !10639)
!10662 = distinct !{!10662, !10659, !10663}
!10663 = !DILocation(line: 697, column: 2, scope: !10639)
!10664 = !DILocation(line: 720, column: 21, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10639, file: !1415, line: 720, column: 6)
!10666 = !DILocation(line: 720, column: 6, scope: !10639)
!10667 = !DILocation(line: 721, column: 3, scope: !10668)
!10668 = distinct !DILexicalBlock(scope: !10665, file: !1415, line: 720, column: 60)
!10669 = !DILocation(line: 722, column: 2, scope: !10668)
!10670 = !DILocation(line: 725, column: 18, scope: !10639)
!10671 = !DILocation(line: 728, column: 2, scope: !10639)
!10672 = !DILocation(line: 730, column: 2, scope: !10639)
!10673 = !DILocation(line: 745, column: 2, scope: !10639)
!10674 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10675, file: !10675, line: 995, type: !8837, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10675 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10676 = !DILocation(line: 997, column: 21, scope: !10674)
!10677 = !DILocation(line: 997, column: 3, scope: !10674)
!10678 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1415, file: !1415, line: 507, type: !323, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10679 = !DILocation(line: 534, column: 7, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !1415, line: 534, column: 7)
!10681 = distinct !DILexicalBlock(scope: !10682, file: !1415, line: 532, column: 37)
!10682 = distinct !DILexicalBlock(scope: !10678, file: !1415, line: 532, column: 6)
!10683 = !DILocation(line: 534, column: 28, scope: !10680)
!10684 = !DILocation(line: 534, column: 7, scope: !10681)
!10685 = !DILocation(line: 536, column: 4, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10680, file: !1415, line: 534, column: 34)
!10687 = !DILocation(line: 537, column: 4, scope: !10686)
!10688 = !DILocation(line: 537, column: 11, scope: !10686)
!10689 = !DILocation(line: 537, column: 32, scope: !10686)
!10690 = distinct !{!10690, !10687, !10691}
!10691 = !DILocation(line: 539, column: 4, scope: !10686)
!10692 = !DILocation(line: 583, column: 3, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10694, file: !1415, line: 577, column: 37)
!10694 = distinct !DILexicalBlock(scope: !10678, file: !1415, line: 577, column: 6)
!10695 = !DILocation(line: 584, column: 3, scope: !10693)
!10696 = !DILocation(line: 584, column: 10, scope: !10693)
!10697 = !DILocation(line: 584, column: 31, scope: !10693)
!10698 = distinct !{!10698, !10695, !10699}
!10699 = !DILocation(line: 585, column: 3, scope: !10693)
!10700 = !DILocation(line: 627, column: 1, scope: !10678)
!10701 = distinct !DISubprogram(name: "set_up_plls", scope: !1415, file: !1415, line: 448, type: !323, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10702 = !DILocation(line: 460, column: 6, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10701, file: !1415, line: 460, column: 6)
!10704 = !DILocation(line: 460, column: 31, scope: !10703)
!10705 = !DILocation(line: 460, column: 6, scope: !10701)
!10706 = !DILocation(line: 461, column: 3, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10703, file: !1415, line: 460, column: 67)
!10708 = !DILocation(line: 462, column: 3, scope: !10707)
!10709 = !DILocation(line: 463, column: 2, scope: !10707)
!10710 = !DILocation(line: 464, column: 2, scope: !10701)
!10711 = !DILocation(line: 496, column: 2, scope: !10701)
!10712 = !DILocation(line: 499, column: 2, scope: !10701)
!10713 = !DILocation(line: 500, column: 2, scope: !10701)
!10714 = !DILocation(line: 500, column: 9, scope: !10701)
!10715 = !DILocation(line: 500, column: 30, scope: !10701)
!10716 = distinct !{!10716, !10713, !10717}
!10717 = !DILocation(line: 502, column: 2, scope: !10701)
!10718 = !DILocation(line: 505, column: 1, scope: !10701)
!10719 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10675, file: !10675, line: 944, type: !7520, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10720)
!10720 = !{!10721}
!10721 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10719, file: !10675, line: 944, type: !111)
!10722 = !DILocation(line: 0, scope: !10719)
!10723 = !DILocation(line: 946, column: 3, scope: !10719)
!10724 = !DILocation(line: 947, column: 1, scope: !10719)
!10725 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10675, file: !10675, line: 910, type: !7520, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10726)
!10726 = !{!10727}
!10727 = !DILocalVariable(name: "Source", arg: 1, scope: !10725, file: !10675, line: 910, type: !111)
!10728 = !DILocation(line: 0, scope: !10725)
!10729 = !DILocation(line: 912, column: 3, scope: !10725)
!10730 = !DILocation(line: 913, column: 1, scope: !10725)
!10731 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10675, file: !10675, line: 924, type: !8837, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10732 = !DILocation(line: 926, column: 21, scope: !10731)
!10733 = !DILocation(line: 926, column: 3, scope: !10731)
!10734 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10675, file: !10675, line: 960, type: !7520, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10735)
!10735 = !{!10736}
!10736 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10734, file: !10675, line: 960, type: !111)
!10737 = !DILocation(line: 0, scope: !10734)
!10738 = !DILocation(line: 962, column: 3, scope: !10734)
!10739 = !DILocation(line: 963, column: 1, scope: !10734)
!10740 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10675, file: !10675, line: 976, type: !7520, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !10741)
!10741 = !{!10742}
!10742 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10740, file: !10675, line: 976, type: !111)
!10743 = !DILocation(line: 0, scope: !10740)
!10744 = !DILocation(line: 978, column: 3, scope: !10740)
!10745 = !DILocation(line: 979, column: 1, scope: !10740)
!10746 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1415, file: !1415, line: 409, type: !323, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10747 = !DILocation(line: 412, column: 6, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10746, file: !1415, line: 412, column: 6)
!10749 = !DILocation(line: 412, column: 27, scope: !10748)
!10750 = !DILocation(line: 412, column: 6, scope: !10746)
!10751 = !DILocation(line: 414, column: 3, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10748, file: !1415, line: 412, column: 33)
!10753 = !DILocation(line: 415, column: 3, scope: !10752)
!10754 = !DILocation(line: 415, column: 10, scope: !10752)
!10755 = !DILocation(line: 415, column: 31, scope: !10752)
!10756 = distinct !{!10756, !10753, !10757}
!10757 = !DILocation(line: 417, column: 3, scope: !10752)
!10758 = !DILocation(line: 421, column: 2, scope: !10746)
!10759 = !DILocation(line: 422, column: 2, scope: !10746)
!10760 = !DILocation(line: 422, column: 9, scope: !10746)
!10761 = !DILocation(line: 422, column: 34, scope: !10746)
!10762 = distinct !{!10762, !10759, !10763}
!10763 = !DILocation(line: 423, column: 2, scope: !10746)
!10764 = !DILocation(line: 424, column: 1, scope: !10746)
!10765 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10675, file: !10675, line: 1180, type: !323, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10766 = !DILocation(line: 1182, column: 3, scope: !10765)
!10767 = !DILocation(line: 1183, column: 1, scope: !10765)
!10768 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10675, file: !10675, line: 1169, type: !323, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10769 = !DILocation(line: 1171, column: 3, scope: !10768)
!10770 = !DILocation(line: 1172, column: 1, scope: !10768)
!10771 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10675, file: !10675, line: 1190, type: !8837, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10772 = !DILocation(line: 1192, column: 12, scope: !10771)
!10773 = !DILocation(line: 1192, column: 11, scope: !10771)
!10774 = !DILocation(line: 1192, column: 3, scope: !10771)
!10775 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10675, file: !10675, line: 612, type: !8837, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10776 = !DILocation(line: 614, column: 12, scope: !10775)
!10777 = !DILocation(line: 614, column: 11, scope: !10775)
!10778 = !DILocation(line: 614, column: 3, scope: !10775)
!10779 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10675, file: !10675, line: 592, type: !323, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10780 = !DILocation(line: 594, column: 3, scope: !10779)
!10781 = !DILocation(line: 595, column: 1, scope: !10779)
!10782 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10675, file: !10675, line: 760, type: !323, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10783 = !DILocation(line: 762, column: 3, scope: !10782)
!10784 = !DILocation(line: 763, column: 1, scope: !10782)
!10785 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10675, file: !10675, line: 780, type: !8837, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1371, retainedNodes: !2512)
!10786 = !DILocation(line: 782, column: 12, scope: !10785)
!10787 = !DILocation(line: 782, column: 11, scope: !10785)
!10788 = !DILocation(line: 782, column: 3, scope: !10785)
!10789 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10790, file: !10790, line: 48, type: !8837, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3425, retainedNodes: !2512)
!10790 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10791 = !DILocation(line: 51, column: 3, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10793, file: !10790, line: 50, column: 37)
!10793 = distinct !DILexicalBlock(scope: !10789, file: !10790, line: 50, column: 6)
!10794 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10790, file: !10790, line: 64, type: !323, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3425, retainedNodes: !2512)
!10795 = !DILocation(line: 66, column: 2, scope: !10794)
!10796 = !DILocation(line: 69, column: 1, scope: !10794)
!10797 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10675, file: !10675, line: 1219, type: !10798, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3425, retainedNodes: !10800)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{null, !111, !111, !111}
!10800 = !{!10801, !10802, !10803}
!10801 = !DILocalVariable(name: "Source", arg: 1, scope: !10797, file: !10675, line: 1219, type: !111)
!10802 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !10797, file: !10675, line: 1219, type: !111)
!10803 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !10797, file: !10675, line: 1219, type: !111)
!10804 = !DILocation(line: 0, scope: !10797)
!10805 = !DILocation(line: 1221, column: 3, scope: !10797)
!10806 = !DILocation(line: 1222, column: 1, scope: !10797)
!10807 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !10790, file: !10790, line: 75, type: !8837, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3425, retainedNodes: !2512)
!10808 = !DILocation(line: 77, column: 9, scope: !10807)
!10809 = !DILocation(line: 77, column: 2, scope: !10807)
!10810 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10790, file: !10790, line: 87, type: !323, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3425, retainedNodes: !2512)
!10811 = !DILocation(line: 93, column: 2, scope: !10810)
!10812 = !DILocation(line: 95, column: 1, scope: !10810)
!10813 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !7519, file: !7519, line: 895, type: !7520, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3425, retainedNodes: !10814)
!10814 = !{!10815, !10816}
!10815 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10813, file: !7519, line: 895, type: !111)
!10816 = !DILocalVariable(name: "tmpreg", scope: !10813, file: !7519, line: 897, type: !777)
!10817 = !DILocation(line: 0, scope: !10813)
!10818 = !DILocation(line: 897, column: 3, scope: !10813)
!10819 = !DILocation(line: 897, column: 17, scope: !10813)
!10820 = !DILocation(line: 898, column: 3, scope: !10813)
!10821 = !DILocation(line: 900, column: 12, scope: !10813)
!10822 = !DILocation(line: 900, column: 10, scope: !10813)
!10823 = !DILocation(line: 901, column: 9, scope: !10813)
!10824 = !DILocation(line: 902, column: 1, scope: !10813)
!10825 = distinct !DISubprogram(name: "uart_console_init", scope: !1546, file: !1546, line: 588, type: !1523, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1489, retainedNodes: !10826)
!10826 = !{!10827}
!10827 = !DILocalVariable(name: "arg", arg: 1, scope: !10825, file: !1546, line: 588, type: !1501)
!10828 = !DILocation(line: 0, scope: !10825)
!10829 = !DILocation(line: 593, column: 7, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10825, file: !1546, line: 593, column: 6)
!10831 = !DILocation(line: 593, column: 6, scope: !10825)
!10832 = !DILocation(line: 597, column: 2, scope: !10825)
!10833 = !DILocation(line: 599, column: 2, scope: !10825)
!10834 = !DILocation(line: 600, column: 1, scope: !10825)
!10835 = distinct !DISubprogram(name: "device_is_ready", scope: !9715, file: !9715, line: 47, type: !10836, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1489, retainedNodes: !10838)
!10836 = !DISubroutineType(types: !10837)
!10837 = !{!122, !1501}
!10838 = !{!10839}
!10839 = !DILocalVariable(name: "dev", arg: 1, scope: !10835, file: !9715, line: 47, type: !1501)
!10840 = !DILocation(line: 0, scope: !10835)
!10841 = !DILocation(line: 55, column: 2, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10835, file: !9715, line: 55, column: 2)
!10843 = !{i64 2152424376}
!10844 = !DILocation(line: 56, column: 9, scope: !10835)
!10845 = !DILocation(line: 56, column: 2, scope: !10835)
!10846 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1546, file: !1546, line: 573, type: !323, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1489, retainedNodes: !2512)
!10847 = !DILocation(line: 576, column: 2, scope: !10846)
!10848 = !DILocation(line: 579, column: 2, scope: !10846)
!10849 = !DILocation(line: 581, column: 1, scope: !10846)
!10850 = distinct !DISubprogram(name: "console_out", scope: !1546, file: !1546, line: 77, type: !764, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1489, retainedNodes: !10851)
!10851 = !{!10852}
!10852 = !DILocalVariable(name: "c", arg: 1, scope: !10850, file: !1546, line: 77, type: !103)
!10853 = !DILocation(line: 0, scope: !10850)
!10854 = !DILocation(line: 89, column: 11, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10850, file: !1546, line: 89, column: 6)
!10856 = !DILocation(line: 89, column: 6, scope: !10850)
!10857 = !DILocation(line: 90, column: 3, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10855, file: !1546, line: 89, column: 17)
!10859 = !DILocation(line: 91, column: 2, scope: !10858)
!10860 = !DILocation(line: 92, column: 34, scope: !10850)
!10861 = !DILocation(line: 92, column: 2, scope: !10850)
!10862 = !DILocation(line: 94, column: 2, scope: !10850)
!10863 = distinct !DISubprogram(name: "uart_poll_out", scope: !10864, file: !10864, line: 95, type: !1519, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1489, retainedNodes: !10865)
!10864 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/dyn_channel")
!10865 = !{!10866, !10867}
!10866 = !DILocalVariable(name: "dev", arg: 1, scope: !10863, file: !10864, line: 95, type: !1501)
!10867 = !DILocalVariable(name: "out_char", arg: 2, scope: !10863, file: !10864, line: 95, type: !167)
!10868 = !DILocation(line: 0, scope: !10863)
!10869 = !DILocation(line: 105, column: 2, scope: !10870)
!10870 = distinct !DILexicalBlock(scope: !10863, file: !10864, line: 105, column: 2)
!10871 = !{i64 2152507767}
!10872 = !DILocation(line: 106, column: 2, scope: !10863)
!10873 = !DILocation(line: 107, column: 1, scope: !10863)
!10874 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1495, file: !1495, line: 574, type: !1519, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1489, retainedNodes: !10875)
!10875 = !{!10876, !10877, !10878}
!10876 = !DILocalVariable(name: "dev", arg: 1, scope: !10874, file: !1495, line: 574, type: !1501)
!10877 = !DILocalVariable(name: "out_char", arg: 2, scope: !10874, file: !1495, line: 575, type: !167)
!10878 = !DILocalVariable(name: "api", scope: !10874, file: !1495, line: 577, type: !1492)
!10879 = !DILocation(line: 0, scope: !10874)
!10880 = !DILocation(line: 578, column: 40, scope: !10874)
!10881 = !DILocation(line: 580, column: 7, scope: !10874)
!10882 = !DILocation(line: 580, column: 2, scope: !10874)
!10883 = !DILocation(line: 581, column: 1, scope: !10874)
!10884 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !810, file: !810, line: 730, type: !10836, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1489, retainedNodes: !10885)
!10885 = !{!10886}
!10886 = !DILocalVariable(name: "dev", arg: 1, scope: !10884, file: !810, line: 730, type: !1501)
!10887 = !DILocation(line: 0, scope: !10884)
!10888 = !DILocation(line: 732, column: 9, scope: !10884)
!10889 = !DILocation(line: 732, column: 2, scope: !10884)
!10890 = distinct !DISubprogram(name: "uart_register_input", scope: !1546, file: !1546, line: 560, type: !10891, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1489, retainedNodes: !10938)
!10891 = !DISubroutineType(types: !10892)
!10892 = !{null, !10893, !10893, !10935}
!10893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10894, size: 32)
!10894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !127, line: 2208, size: 160, elements: !10895)
!10895 = !{!10896}
!10896 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10894, file: !127, line: 2209, baseType: !10897, size: 160)
!10897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !127, line: 1709, size: 160, elements: !10898)
!10898 = !{!10899, !10912, !10916}
!10899 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10897, file: !127, line: 1710, baseType: !10900, size: 64)
!10900 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10901, line: 46, baseType: !10902)
!10901 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10901, line: 41, size: 64, elements: !10903)
!10903 = !{!10904, !10911}
!10904 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10902, file: !10901, line: 42, baseType: !10905, size: 32)
!10905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10906, size: 32)
!10906 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10901, line: 39, baseType: !10907)
!10907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10901, line: 35, size: 32, elements: !10908)
!10908 = !{!10909}
!10909 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10907, file: !10901, line: 36, baseType: !10910, size: 32)
!10910 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10901, line: 32, baseType: !111)
!10911 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10902, file: !10901, line: 43, baseType: !10905, size: 32, offset: 32)
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10897, file: !127, line: 1711, baseType: !10913, size: 32, offset: 64)
!10913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !10914)
!10914 = !{!10915}
!10915 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !10913, file: !152, line: 52, baseType: !22, size: 32)
!10916 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10897, file: !127, line: 1712, baseType: !10917, size: 64, offset: 96)
!10917 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !10918)
!10918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !10919)
!10919 = !{!10920}
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10918, file: !131, line: 232, baseType: !10921, size: 64)
!10921 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !10922)
!10922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !10923)
!10923 = !{!10924, !10930}
!10924 = !DIDerivedType(tag: DW_TAG_member, scope: !10922, file: !136, line: 38, baseType: !10925, size: 32)
!10925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10922, file: !136, line: 38, size: 32, elements: !10926)
!10926 = !{!10927, !10929}
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10925, file: !136, line: 39, baseType: !10928, size: 32)
!10928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10922, size: 32)
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10925, file: !136, line: 40, baseType: !10928, size: 32)
!10930 = !DIDerivedType(tag: DW_TAG_member, scope: !10922, file: !136, line: 42, baseType: !10931, size: 32, offset: 32)
!10931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10922, file: !136, line: 42, size: 32, elements: !10932)
!10932 = !{!10933, !10934}
!10933 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10931, file: !136, line: 43, baseType: !10928, size: 32)
!10934 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10931, file: !136, line: 44, baseType: !10928, size: 32)
!10935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10936, size: 32)
!10936 = !DISubroutineType(types: !10937)
!10937 = !{!166, !160, !166}
!10938 = !{!10939, !10940, !10941}
!10939 = !DILocalVariable(name: "avail", arg: 1, scope: !10890, file: !1546, line: 560, type: !10893)
!10940 = !DILocalVariable(name: "lines", arg: 2, scope: !10890, file: !1546, line: 560, type: !10893)
!10941 = !DILocalVariable(name: "completion", arg: 3, scope: !10890, file: !1546, line: 561, type: !10935)
!10942 = !DILocation(line: 0, scope: !10890)
!10943 = !DILocation(line: 566, column: 1, scope: !10890)
!10944 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1705, file: !1705, line: 523, type: !1571, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10945)
!10945 = !{!10946, !10947, !10948, !10949, !10950}
!10946 = !DILocalVariable(name: "dev", arg: 1, scope: !10944, file: !1705, line: 523, type: !1573)
!10947 = !DILocalVariable(name: "pin", arg: 2, scope: !10944, file: !1705, line: 524, type: !1109)
!10948 = !DILocalVariable(name: "flags", arg: 3, scope: !10944, file: !1705, line: 524, type: !1110)
!10949 = !DILocalVariable(name: "err", scope: !10944, file: !1705, line: 526, type: !103)
!10950 = !DILocalVariable(name: "pincfg", scope: !10944, file: !1705, line: 527, type: !103)
!10951 = !DILocation(line: 0, scope: !10944)
!10952 = !DILocation(line: 527, column: 2, scope: !10944)
!10953 = !DILocation(line: 532, column: 8, scope: !10944)
!10954 = !DILocation(line: 533, column: 10, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10944, file: !1705, line: 533, column: 6)
!10956 = !DILocation(line: 533, column: 6, scope: !10944)
!10957 = !DILocation(line: 543, column: 13, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10944, file: !1705, line: 543, column: 6)
!10959 = !DILocation(line: 543, column: 28, scope: !10958)
!10960 = !DILocation(line: 543, column: 6, scope: !10944)
!10961 = !DILocation(line: 544, column: 14, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10963, file: !1705, line: 544, column: 7)
!10963 = distinct !DILexicalBlock(scope: !10958, file: !1705, line: 543, column: 34)
!10964 = !DILocation(line: 544, column: 39, scope: !10962)
!10965 = !DILocation(line: 544, column: 7, scope: !10963)
!10966 = !DILocation(line: 545, column: 38, scope: !10967)
!10967 = distinct !DILexicalBlock(scope: !10962, file: !1705, line: 544, column: 45)
!10968 = !DILocation(line: 545, column: 4, scope: !10967)
!10969 = !DILocation(line: 546, column: 3, scope: !10967)
!10970 = !DILocation(line: 546, column: 21, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10962, file: !1705, line: 546, column: 14)
!10972 = !DILocation(line: 546, column: 45, scope: !10971)
!10973 = !DILocation(line: 546, column: 14, scope: !10962)
!10974 = !DILocation(line: 547, column: 40, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10971, file: !1705, line: 546, column: 51)
!10976 = !DILocation(line: 547, column: 4, scope: !10975)
!10977 = !DILocation(line: 548, column: 3, scope: !10975)
!10978 = !DILocation(line: 551, column: 32, scope: !10944)
!10979 = !DILocation(line: 551, column: 37, scope: !10944)
!10980 = !DILocation(line: 551, column: 2, scope: !10944)
!10981 = !DILocation(line: 554, column: 6, scope: !10944)
!10982 = !DILocation(line: 562, column: 1, scope: !10944)
!10983 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1705, file: !1705, line: 410, type: !10984, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10986)
!10984 = !DISubroutineType(types: !10985)
!10985 = !{!103, !1573, !1411}
!10986 = !{!10987, !10988, !10989, !10991}
!10987 = !DILocalVariable(name: "dev", arg: 1, scope: !10983, file: !1705, line: 410, type: !1573)
!10988 = !DILocalVariable(name: "value", arg: 2, scope: !10983, file: !1705, line: 410, type: !1411)
!10989 = !DILocalVariable(name: "cfg", scope: !10983, file: !1705, line: 412, type: !10990)
!10990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!10991 = !DILocalVariable(name: "gpio", scope: !10983, file: !1705, line: 413, type: !1640)
!10992 = !DILocation(line: 0, scope: !10983)
!10993 = !DILocation(line: 412, column: 45, scope: !10983)
!10994 = !DILocation(line: 413, column: 44, scope: !10983)
!10995 = !DILocation(line: 415, column: 11, scope: !10983)
!10996 = !DILocation(line: 415, column: 9, scope: !10983)
!10997 = !DILocation(line: 417, column: 2, scope: !10983)
!10998 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1705, file: !1705, line: 420, type: !1594, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !10999)
!10999 = !{!11000, !11001, !11002, !11003, !11004, !11005}
!11000 = !DILocalVariable(name: "dev", arg: 1, scope: !10998, file: !1705, line: 420, type: !1573)
!11001 = !DILocalVariable(name: "mask", arg: 2, scope: !10998, file: !1705, line: 421, type: !1121)
!11002 = !DILocalVariable(name: "value", arg: 3, scope: !10998, file: !1705, line: 422, type: !1116)
!11003 = !DILocalVariable(name: "cfg", scope: !10998, file: !1705, line: 424, type: !10990)
!11004 = !DILocalVariable(name: "gpio", scope: !10998, file: !1705, line: 425, type: !1640)
!11005 = !DILocalVariable(name: "port_value", scope: !10998, file: !1705, line: 426, type: !111)
!11006 = !DILocation(line: 0, scope: !10998)
!11007 = !DILocation(line: 424, column: 45, scope: !10998)
!11008 = !DILocation(line: 425, column: 44, scope: !10998)
!11009 = !DILocation(line: 430, column: 15, scope: !10998)
!11010 = !DILocation(line: 431, column: 46, scope: !10998)
!11011 = !DILocation(line: 431, column: 44, scope: !10998)
!11012 = !DILocation(line: 431, column: 61, scope: !10998)
!11013 = !DILocation(line: 431, column: 53, scope: !10998)
!11014 = !DILocation(line: 431, column: 2, scope: !10998)
!11015 = !DILocation(line: 435, column: 2, scope: !10998)
!11016 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1705, file: !1705, line: 438, type: !1598, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11017)
!11017 = !{!11018, !11019, !11020, !11021}
!11018 = !DILocalVariable(name: "dev", arg: 1, scope: !11016, file: !1705, line: 438, type: !1573)
!11019 = !DILocalVariable(name: "pins", arg: 2, scope: !11016, file: !1705, line: 439, type: !1121)
!11020 = !DILocalVariable(name: "cfg", scope: !11016, file: !1705, line: 441, type: !10990)
!11021 = !DILocalVariable(name: "gpio", scope: !11016, file: !1705, line: 442, type: !1640)
!11022 = !DILocation(line: 0, scope: !11016)
!11023 = !DILocation(line: 441, column: 45, scope: !11016)
!11024 = !DILocation(line: 442, column: 44, scope: !11016)
!11025 = !DILocation(line: 448, column: 2, scope: !11016)
!11026 = !DILocation(line: 450, column: 2, scope: !11016)
!11027 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1705, file: !1705, line: 453, type: !1598, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11028)
!11028 = !{!11029, !11030, !11031, !11032}
!11029 = !DILocalVariable(name: "dev", arg: 1, scope: !11027, file: !1705, line: 453, type: !1573)
!11030 = !DILocalVariable(name: "pins", arg: 2, scope: !11027, file: !1705, line: 454, type: !1121)
!11031 = !DILocalVariable(name: "cfg", scope: !11027, file: !1705, line: 456, type: !10990)
!11032 = !DILocalVariable(name: "gpio", scope: !11027, file: !1705, line: 457, type: !1640)
!11033 = !DILocation(line: 0, scope: !11027)
!11034 = !DILocation(line: 456, column: 45, scope: !11027)
!11035 = !DILocation(line: 457, column: 44, scope: !11027)
!11036 = !DILocation(line: 467, column: 2, scope: !11027)
!11037 = !DILocation(line: 470, column: 2, scope: !11027)
!11038 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1705, file: !1705, line: 473, type: !1598, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11039)
!11039 = !{!11040, !11041, !11042, !11043}
!11040 = !DILocalVariable(name: "dev", arg: 1, scope: !11038, file: !1705, line: 473, type: !1573)
!11041 = !DILocalVariable(name: "pins", arg: 2, scope: !11038, file: !1705, line: 474, type: !1121)
!11042 = !DILocalVariable(name: "cfg", scope: !11038, file: !1705, line: 476, type: !10990)
!11043 = !DILocalVariable(name: "gpio", scope: !11038, file: !1705, line: 477, type: !1640)
!11044 = !DILocation(line: 0, scope: !11038)
!11045 = !DILocation(line: 476, column: 45, scope: !11038)
!11046 = !DILocation(line: 477, column: 44, scope: !11038)
!11047 = !DILocation(line: 484, column: 2, scope: !11038)
!11048 = !DILocation(line: 487, column: 2, scope: !11038)
!11049 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1705, file: !1705, line: 594, type: !1604, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11050)
!11050 = !{!11051, !11052, !11053, !11054, !11055, !11056, !11058, !11059, !11060}
!11051 = !DILocalVariable(name: "dev", arg: 1, scope: !11049, file: !1705, line: 594, type: !1573)
!11052 = !DILocalVariable(name: "pin", arg: 2, scope: !11049, file: !1705, line: 595, type: !1109)
!11053 = !DILocalVariable(name: "mode", arg: 3, scope: !11049, file: !1705, line: 596, type: !1074)
!11054 = !DILocalVariable(name: "trig", arg: 4, scope: !11049, file: !1705, line: 597, type: !1080)
!11055 = !DILocalVariable(name: "cfg", scope: !11049, file: !1705, line: 599, type: !10990)
!11056 = !DILocalVariable(name: "data", scope: !11049, file: !1705, line: 600, type: !11057)
!11057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!11058 = !DILocalVariable(name: "edge", scope: !11049, file: !1705, line: 601, type: !103)
!11059 = !DILocalVariable(name: "err", scope: !11049, file: !1705, line: 602, type: !103)
!11060 = !DILabel(scope: !11049, name: "exit", file: !1705, line: 643)
!11061 = !DILocation(line: 0, scope: !11049)
!11062 = !DILocation(line: 599, column: 45, scope: !11049)
!11063 = !DILocation(line: 604, column: 6, scope: !11049)
!11064 = !DILocation(line: 605, column: 34, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !1705, line: 605, column: 7)
!11066 = distinct !DILexicalBlock(scope: !11067, file: !1705, line: 604, column: 38)
!11067 = distinct !DILexicalBlock(scope: !11049, file: !1705, line: 604, column: 6)
!11068 = !DILocation(line: 605, column: 7, scope: !11065)
!11069 = !DILocation(line: 605, column: 47, scope: !11065)
!11070 = !DILocation(line: 605, column: 39, scope: !11065)
!11071 = !DILocation(line: 605, column: 7, scope: !11066)
!11072 = !DILocation(line: 606, column: 4, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11065, file: !1705, line: 605, column: 53)
!11074 = !DILocation(line: 607, column: 4, scope: !11073)
!11075 = !DILocation(line: 608, column: 4, scope: !11073)
!11076 = !DILocation(line: 609, column: 3, scope: !11073)
!11077 = !DILocation(line: 600, column: 38, scope: !11049)
!11078 = !DILocation(line: 620, column: 30, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11049, file: !1705, line: 620, column: 6)
!11080 = !DILocation(line: 620, column: 6, scope: !11079)
!11081 = !DILocation(line: 620, column: 57, scope: !11079)
!11082 = !DILocation(line: 620, column: 6, scope: !11049)
!11083 = !DILocation(line: 625, column: 29, scope: !11049)
!11084 = !DILocation(line: 625, column: 2, scope: !11049)
!11085 = !DILocation(line: 627, column: 2, scope: !11049)
!11086 = !DILocation(line: 630, column: 3, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11049, file: !1705, line: 627, column: 16)
!11088 = !DILocation(line: 633, column: 3, scope: !11087)
!11089 = !DILocation(line: 636, column: 3, scope: !11087)
!11090 = !DILocation(line: 639, column: 2, scope: !11049)
!11091 = !DILocation(line: 641, column: 2, scope: !11049)
!11092 = !DILocation(line: 643, column: 1, scope: !11049)
!11093 = !DILocation(line: 644, column: 2, scope: !11049)
!11094 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1705, file: !1705, line: 647, type: !1608, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11095)
!11095 = !{!11096, !11097, !11098, !11099}
!11096 = !DILocalVariable(name: "dev", arg: 1, scope: !11094, file: !1705, line: 647, type: !1573)
!11097 = !DILocalVariable(name: "callback", arg: 2, scope: !11094, file: !1705, line: 648, type: !1610)
!11098 = !DILocalVariable(name: "set", arg: 3, scope: !11094, file: !1705, line: 649, type: !122)
!11099 = !DILocalVariable(name: "data", scope: !11094, file: !1705, line: 651, type: !11057)
!11100 = !DILocation(line: 0, scope: !11094)
!11101 = !DILocation(line: 651, column: 38, scope: !11094)
!11102 = !DILocation(line: 653, column: 37, scope: !11094)
!11103 = !DILocation(line: 653, column: 9, scope: !11094)
!11104 = !DILocation(line: 653, column: 2, scope: !11094)
!11105 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11106, file: !11106, line: 38, type: !11107, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11110)
!11106 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11107 = !DISubroutineType(types: !11108)
!11108 = !{!103, !11109, !1610, !122}
!11109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 32)
!11110 = !{!11111, !11112, !11113}
!11111 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11105, file: !11106, line: 38, type: !11109)
!11112 = !DILocalVariable(name: "callback", arg: 2, scope: !11105, file: !11106, line: 39, type: !1610)
!11113 = !DILocalVariable(name: "set", arg: 3, scope: !11105, file: !11106, line: 40, type: !122)
!11114 = !DILocation(line: 0, scope: !11105)
!11115 = !DILocation(line: 42, column: 2, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !11106, line: 42, column: 2)
!11117 = distinct !DILexicalBlock(scope: !11105, file: !11106, line: 42, column: 2)
!11118 = !DILocation(line: 42, column: 2, scope: !11117)
!11119 = !DILocation(line: 42, column: 2, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11116, file: !11106, line: 42, column: 2)
!11121 = !DILocation(line: 43, column: 2, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !11106, line: 43, column: 2)
!11123 = distinct !DILexicalBlock(scope: !11105, file: !11106, line: 43, column: 2)
!11124 = !DILocation(line: 43, column: 2, scope: !11123)
!11125 = !DILocation(line: 43, column: 2, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11122, file: !11106, line: 43, column: 2)
!11127 = !DILocation(line: 45, column: 7, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11105, file: !11106, line: 45, column: 6)
!11129 = !DILocation(line: 45, column: 6, scope: !11105)
!11130 = !DILocation(line: 46, column: 56, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !11106, line: 46, column: 7)
!11132 = distinct !DILexicalBlock(scope: !11128, file: !11106, line: 45, column: 38)
!11133 = !DILocation(line: 46, column: 8, scope: !11131)
!11134 = !DILocation(line: 46, column: 7, scope: !11132)
!11135 = !DILocation(line: 51, column: 13, scope: !11128)
!11136 = !DILocation(line: 56, column: 43, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11138, file: !11106, line: 55, column: 11)
!11138 = distinct !DILexicalBlock(scope: !11105, file: !11106, line: 55, column: 6)
!11139 = !DILocation(line: 56, column: 3, scope: !11137)
!11140 = !DILocation(line: 57, column: 2, scope: !11137)
!11141 = !DILocation(line: 60, column: 1, scope: !11105)
!11142 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1141, file: !1141, line: 261, type: !11143, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11145)
!11143 = !DISubroutineType(types: !11144)
!11144 = !{!122, !11109}
!11145 = !{!11146}
!11146 = !DILocalVariable(name: "list", arg: 1, scope: !11142, file: !1141, line: 261, type: !11109)
!11147 = !DILocation(line: 0, scope: !11142)
!11148 = !DILocation(line: 261, column: 1, scope: !11142)
!11149 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1141, file: !1141, line: 417, type: !11150, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11152)
!11150 = !DISubroutineType(types: !11151)
!11151 = !{!122, !11109, !1775}
!11152 = !{!11153, !11154, !11155, !11156}
!11153 = !DILocalVariable(name: "list", arg: 1, scope: !11149, file: !1141, line: 417, type: !11109)
!11154 = !DILocalVariable(name: "node", arg: 2, scope: !11149, file: !1141, line: 417, type: !1775)
!11155 = !DILocalVariable(name: "prev", scope: !11149, file: !1141, line: 417, type: !1775)
!11156 = !DILocalVariable(name: "test", scope: !11149, file: !1141, line: 417, type: !1775)
!11157 = !DILocation(line: 0, scope: !11149)
!11158 = !DILocation(line: 417, column: 1, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11149, file: !1141, line: 417, column: 1)
!11160 = !DILocation(line: 417, column: 1, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11159, file: !1141, line: 417, column: 1)
!11162 = !DILocation(line: 417, column: 1, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !1141, line: 417, column: 1)
!11164 = distinct !DILexicalBlock(scope: !11161, file: !1141, line: 417, column: 1)
!11165 = !DILocation(line: 417, column: 1, scope: !11164)
!11166 = distinct !{!11166, !11158, !11158}
!11167 = !DILocation(line: 417, column: 1, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11163, file: !1141, line: 417, column: 1)
!11169 = !DILocation(line: 417, column: 1, scope: !11149)
!11170 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1141, file: !1141, line: 298, type: !11171, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11173)
!11171 = !DISubroutineType(types: !11172)
!11172 = !{null, !11109, !1775}
!11173 = !{!11174, !11175}
!11174 = !DILocalVariable(name: "list", arg: 1, scope: !11170, file: !1141, line: 298, type: !11109)
!11175 = !DILocalVariable(name: "node", arg: 2, scope: !11170, file: !1141, line: 298, type: !1775)
!11176 = !DILocation(line: 0, scope: !11170)
!11177 = !DILocation(line: 298, column: 1, scope: !11170)
!11178 = !DILocation(line: 298, column: 1, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11170, file: !1141, line: 298, column: 1)
!11180 = !DILocation(line: 298, column: 1, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11179, file: !1141, line: 298, column: 1)
!11182 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1141, file: !1141, line: 231, type: !11183, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11185)
!11183 = !DISubroutineType(types: !11184)
!11184 = !{!1775, !11109}
!11185 = !{!11186}
!11186 = !DILocalVariable(name: "list", arg: 1, scope: !11182, file: !1141, line: 231, type: !11109)
!11187 = !DILocation(line: 0, scope: !11182)
!11188 = !DILocation(line: 233, column: 15, scope: !11182)
!11189 = !DILocation(line: 233, column: 2, scope: !11182)
!11190 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1141, file: !1141, line: 209, type: !11191, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11193)
!11191 = !DISubroutineType(types: !11192)
!11192 = !{null, !1775, !1775}
!11193 = !{!11194, !11195}
!11194 = !DILocalVariable(name: "parent", arg: 1, scope: !11190, file: !1141, line: 209, type: !1775)
!11195 = !DILocalVariable(name: "child", arg: 2, scope: !11190, file: !1141, line: 209, type: !1775)
!11196 = !DILocation(line: 0, scope: !11190)
!11197 = !DILocation(line: 211, column: 10, scope: !11190)
!11198 = !DILocation(line: 211, column: 15, scope: !11190)
!11199 = !DILocation(line: 212, column: 1, scope: !11190)
!11200 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1141, file: !1141, line: 214, type: !11171, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11201)
!11201 = !{!11202, !11203}
!11202 = !DILocalVariable(name: "list", arg: 1, scope: !11200, file: !1141, line: 214, type: !11109)
!11203 = !DILocalVariable(name: "node", arg: 2, scope: !11200, file: !1141, line: 214, type: !1775)
!11204 = !DILocation(line: 0, scope: !11200)
!11205 = !DILocation(line: 216, column: 8, scope: !11200)
!11206 = !DILocation(line: 216, column: 13, scope: !11200)
!11207 = !DILocation(line: 217, column: 1, scope: !11200)
!11208 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1141, file: !1141, line: 243, type: !11183, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11209)
!11209 = !{!11210}
!11210 = !DILocalVariable(name: "list", arg: 1, scope: !11208, file: !1141, line: 243, type: !11109)
!11211 = !DILocation(line: 0, scope: !11208)
!11212 = !DILocation(line: 245, column: 15, scope: !11208)
!11213 = !DILocation(line: 245, column: 2, scope: !11208)
!11214 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1141, file: !1141, line: 219, type: !11171, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11215)
!11215 = !{!11216, !11217}
!11216 = !DILocalVariable(name: "list", arg: 1, scope: !11214, file: !1141, line: 219, type: !11109)
!11217 = !DILocalVariable(name: "node", arg: 2, scope: !11214, file: !1141, line: 219, type: !1775)
!11218 = !DILocation(line: 0, scope: !11214)
!11219 = !DILocation(line: 221, column: 8, scope: !11214)
!11220 = !DILocation(line: 221, column: 13, scope: !11214)
!11221 = !DILocation(line: 222, column: 1, scope: !11214)
!11222 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1141, file: !1141, line: 401, type: !11223, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11225)
!11223 = !DISubroutineType(types: !11224)
!11224 = !{null, !11109, !1775, !1775}
!11225 = !{!11226, !11227, !11228}
!11226 = !DILocalVariable(name: "list", arg: 1, scope: !11222, file: !1141, line: 401, type: !11109)
!11227 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11222, file: !1141, line: 401, type: !1775)
!11228 = !DILocalVariable(name: "node", arg: 3, scope: !11222, file: !1141, line: 401, type: !1775)
!11229 = !DILocation(line: 0, scope: !11222)
!11230 = !DILocation(line: 401, column: 1, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11222, file: !1141, line: 401, column: 1)
!11232 = !DILocation(line: 0, scope: !11231)
!11233 = !DILocation(line: 401, column: 1, scope: !11222)
!11234 = !DILocation(line: 401, column: 1, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11231, file: !1141, line: 401, column: 1)
!11236 = !DILocation(line: 401, column: 1, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11235, file: !1141, line: 401, column: 1)
!11238 = !DILocation(line: 401, column: 1, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11237, file: !1141, line: 401, column: 1)
!11240 = !DILocation(line: 401, column: 1, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11231, file: !1141, line: 401, column: 1)
!11242 = !DILocation(line: 401, column: 1, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11241, file: !1141, line: 401, column: 1)
!11244 = !DILocation(line: 401, column: 1, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11243, file: !1141, line: 401, column: 1)
!11246 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1141, file: !1141, line: 285, type: !11247, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11249)
!11247 = !DISubroutineType(types: !11248)
!11248 = !{!1775, !1775}
!11249 = !{!11250}
!11250 = !DILocalVariable(name: "node", arg: 1, scope: !11246, file: !1141, line: 285, type: !1775)
!11251 = !DILocation(line: 0, scope: !11246)
!11252 = !DILocation(line: 285, column: 1, scope: !11246)
!11253 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1141, file: !1141, line: 274, type: !11247, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11254)
!11254 = !{!11255}
!11255 = !DILocalVariable(name: "node", arg: 1, scope: !11253, file: !1141, line: 274, type: !1775)
!11256 = !DILocation(line: 0, scope: !11253)
!11257 = !DILocation(line: 274, column: 1, scope: !11253)
!11258 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1141, file: !1141, line: 204, type: !11247, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11259)
!11259 = !{!11260}
!11260 = !DILocalVariable(name: "node", arg: 1, scope: !11258, file: !1141, line: 204, type: !1775)
!11261 = !DILocation(line: 0, scope: !11258)
!11262 = !DILocation(line: 206, column: 15, scope: !11258)
!11263 = !DILocation(line: 206, column: 2, scope: !11258)
!11264 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1705, file: !1705, line: 342, type: !764, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11265)
!11265 = !{!11266, !11267, !11268}
!11266 = !DILocalVariable(name: "pin", arg: 1, scope: !11264, file: !1705, line: 342, type: !103)
!11267 = !DILocalVariable(name: "line", scope: !11264, file: !1705, line: 344, type: !111)
!11268 = !DILocalVariable(name: "port", scope: !11264, file: !1705, line: 345, type: !103)
!11269 = !DILocation(line: 0, scope: !11264)
!11270 = !DILocation(line: 344, column: 18, scope: !11264)
!11271 = !{i32 983040, i32 0}
!11272 = !DILocation(line: 356, column: 9, scope: !11264)
!11273 = !DILocation(line: 370, column: 2, scope: !11264)
!11274 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1705, file: !1705, line: 37, type: !1306, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11275)
!11275 = !{!11276, !11277, !11278}
!11276 = !DILocalVariable(name: "line", arg: 1, scope: !11274, file: !1705, line: 37, type: !103)
!11277 = !DILocalVariable(name: "arg", arg: 2, scope: !11274, file: !1705, line: 37, type: !102)
!11278 = !DILocalVariable(name: "data", scope: !11274, file: !1705, line: 39, type: !11057)
!11279 = !DILocation(line: 0, scope: !11274)
!11280 = !DILocation(line: 41, column: 29, scope: !11274)
!11281 = !DILocation(line: 41, column: 39, scope: !11274)
!11282 = !DILocation(line: 41, column: 44, scope: !11274)
!11283 = !DILocation(line: 41, column: 2, scope: !11274)
!11284 = !DILocation(line: 42, column: 1, scope: !11274)
!11285 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1705, file: !1705, line: 376, type: !11286, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11288)
!11286 = !DISubroutineType(types: !11287)
!11287 = !{!103, !103, !103}
!11288 = !{!11289, !11290, !11291, !11293, !11294}
!11289 = !DILocalVariable(name: "port", arg: 1, scope: !11285, file: !1705, line: 376, type: !103)
!11290 = !DILocalVariable(name: "pin", arg: 2, scope: !11285, file: !1705, line: 376, type: !103)
!11291 = !DILocalVariable(name: "clk", scope: !11285, file: !1705, line: 386, type: !11292)
!11292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!11293 = !DILocalVariable(name: "pclken", scope: !11285, file: !1705, line: 387, type: !1810)
!11294 = !DILocalVariable(name: "ret", scope: !11285, file: !1705, line: 396, type: !103)
!11295 = !DILocation(line: 0, scope: !11285)
!11296 = !DILocation(line: 387, column: 2, scope: !11285)
!11297 = !DILocation(line: 387, column: 22, scope: !11285)
!11298 = !DILocation(line: 399, column: 8, scope: !11285)
!11299 = !DILocation(line: 400, column: 10, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11285, file: !1705, line: 400, column: 6)
!11301 = !DILocation(line: 400, column: 6, scope: !11285)
!11302 = !DILocation(line: 405, column: 2, scope: !11285)
!11303 = !DILocation(line: 407, column: 2, scope: !11285)
!11304 = !DILocation(line: 408, column: 1, scope: !11285)
!11305 = distinct !DISubprogram(name: "clock_control_on", scope: !1380, file: !1380, line: 123, type: !1670, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11306)
!11306 = !{!11307, !11308, !11309}
!11307 = !DILocalVariable(name: "dev", arg: 1, scope: !11305, file: !1380, line: 123, type: !1573)
!11308 = !DILocalVariable(name: "sys", arg: 2, scope: !11305, file: !1380, line: 124, type: !1455)
!11309 = !DILocalVariable(name: "api", scope: !11305, file: !1380, line: 126, type: !1663)
!11310 = !DILocation(line: 0, scope: !11305)
!11311 = !DILocation(line: 127, column: 49, scope: !11305)
!11312 = !DILocation(line: 129, column: 14, scope: !11305)
!11313 = !DILocation(line: 129, column: 9, scope: !11305)
!11314 = !DILocation(line: 129, column: 2, scope: !11305)
!11315 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1705, file: !1705, line: 311, type: !10464, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11316)
!11316 = !{!11317, !11318, !11319}
!11317 = !DILocalVariable(name: "port", arg: 1, scope: !11315, file: !1705, line: 311, type: !103)
!11318 = !DILocalVariable(name: "pin", arg: 2, scope: !11315, file: !1705, line: 311, type: !103)
!11319 = !DILocalVariable(name: "line", scope: !11315, file: !1705, line: 313, type: !111)
!11320 = !DILocation(line: 0, scope: !11315)
!11321 = !DILocation(line: 313, column: 18, scope: !11315)
!11322 = !DILocation(line: 337, column: 2, scope: !11315)
!11323 = !DILocation(line: 340, column: 1, scope: !11315)
!11324 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1705, file: !1705, line: 295, type: !11325, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11327)
!11325 = !DISubroutineType(types: !11326)
!11326 = !{!111, !103}
!11327 = !{!11328}
!11328 = !DILocalVariable(name: "pin", arg: 1, scope: !11324, file: !1705, line: 295, type: !103)
!11329 = !DILocation(line: 0, scope: !11324)
!11330 = !DILocation(line: 307, column: 46, scope: !11324)
!11331 = !DILocation(line: 307, column: 27, scope: !11324)
!11332 = !DILocation(line: 307, column: 32, scope: !11324)
!11333 = !DILocation(line: 307, column: 14, scope: !11324)
!11334 = !DILocation(line: 307, column: 39, scope: !11324)
!11335 = !DILocation(line: 307, column: 2, scope: !11324)
!11336 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !11337, file: !11337, line: 621, type: !11338, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11340)
!11337 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11338 = !DISubroutineType(types: !11339)
!11339 = !{null, !111, !111}
!11340 = !{!11341, !11342}
!11341 = !DILocalVariable(name: "Port", arg: 1, scope: !11336, file: !11337, line: 621, type: !111)
!11342 = !DILocalVariable(name: "Line", arg: 2, scope: !11336, file: !11337, line: 621, type: !111)
!11343 = !DILocation(line: 0, scope: !11336)
!11344 = !DILocation(line: 623, column: 3, scope: !11336)
!11345 = !DILocalVariable(name: "value", arg: 1, scope: !11346, file: !7834, line: 373, type: !111)
!11346 = distinct !DISubprogram(name: "__RBIT", scope: !7834, file: !7834, line: 373, type: !9077, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11347)
!11347 = !{!11345, !11348}
!11348 = !DILocalVariable(name: "result", scope: !11346, file: !7834, line: 375, type: !111)
!11349 = !DILocation(line: 0, scope: !11346, inlinedAt: !11350)
!11350 = distinct !DILocation(line: 623, column: 3, scope: !11336)
!11351 = !DILocation(line: 380, column: 4, scope: !11346, inlinedAt: !11350)
!11352 = !{i64 2452293}
!11353 = !DILocalVariable(name: "value", arg: 1, scope: !11354, file: !7834, line: 403, type: !111)
!11354 = distinct !DISubprogram(name: "__CLZ", scope: !7834, file: !7834, line: 403, type: !11355, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11357)
!11355 = !DISubroutineType(types: !11356)
!11356 = !{!166, !111}
!11357 = !{!11353}
!11358 = !DILocation(line: 0, scope: !11354, inlinedAt: !11359)
!11359 = distinct !DILocation(line: 623, column: 3, scope: !11336)
!11360 = !DILocation(line: 414, column: 7, scope: !11354, inlinedAt: !11359)
!11361 = !DILocation(line: 624, column: 1, scope: !11336)
!11362 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11106, file: !11106, line: 69, type: !11363, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11365)
!11363 = !DISubroutineType(types: !11364)
!11364 = !{null, !11109, !1573, !111}
!11365 = !{!11366, !11367, !11368, !11369, !11370}
!11366 = !DILocalVariable(name: "list", arg: 1, scope: !11362, file: !11106, line: 69, type: !11109)
!11367 = !DILocalVariable(name: "port", arg: 2, scope: !11362, file: !11106, line: 70, type: !1573)
!11368 = !DILocalVariable(name: "pins", arg: 3, scope: !11362, file: !11106, line: 71, type: !111)
!11369 = !DILocalVariable(name: "cb", scope: !11362, file: !11106, line: 73, type: !1610)
!11370 = !DILocalVariable(name: "tmp", scope: !11362, file: !11106, line: 73, type: !1610)
!11371 = !DILocation(line: 0, scope: !11362)
!11372 = !DILocation(line: 75, column: 2, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11362, file: !11106, line: 75, column: 2)
!11374 = !DILocation(line: 0, scope: !11373)
!11375 = !DILocation(line: 76, column: 11, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11377, file: !11106, line: 76, column: 7)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !11106, line: 75, column: 57)
!11378 = distinct !DILexicalBlock(scope: !11373, file: !11106, line: 75, column: 2)
!11379 = !DILocation(line: 76, column: 20, scope: !11376)
!11380 = !DILocation(line: 76, column: 7, scope: !11377)
!11381 = !DILocation(line: 77, column: 4, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11383, file: !11106, line: 77, column: 4)
!11383 = distinct !DILexicalBlock(scope: !11384, file: !11106, line: 77, column: 4)
!11384 = distinct !DILexicalBlock(scope: !11376, file: !11106, line: 76, column: 28)
!11385 = !DILocation(line: 77, column: 4, scope: !11383)
!11386 = !DILocation(line: 77, column: 4, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11382, file: !11106, line: 77, column: 4)
!11388 = !DILocation(line: 78, column: 4, scope: !11384)
!11389 = !DILocation(line: 79, column: 3, scope: !11384)
!11390 = !DILocation(line: 75, column: 2, scope: !11378)
!11391 = !DILocation(line: 81, column: 1, scope: !11362)
!11392 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !11337, file: !11337, line: 721, type: !9077, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11393)
!11393 = !{!11394}
!11394 = !DILocalVariable(name: "Line", arg: 1, scope: !11392, file: !11337, line: 721, type: !111)
!11395 = !DILocation(line: 0, scope: !11392)
!11396 = !DILocation(line: 723, column: 21, scope: !11392)
!11397 = !DILocation(line: 0, scope: !11346, inlinedAt: !11398)
!11398 = distinct !DILocation(line: 723, column: 76, scope: !11392)
!11399 = !DILocation(line: 380, column: 4, scope: !11346, inlinedAt: !11398)
!11400 = !DILocation(line: 0, scope: !11354, inlinedAt: !11401)
!11401 = distinct !DILocation(line: 723, column: 76, scope: !11392)
!11402 = !DILocation(line: 414, column: 7, scope: !11354, inlinedAt: !11401)
!11403 = !DILocation(line: 723, column: 73, scope: !11392)
!11404 = !DILocation(line: 723, column: 3, scope: !11392)
!11405 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11406, file: !11406, line: 913, type: !11407, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11409)
!11406 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11407 = !DISubroutineType(types: !11408)
!11408 = !{null, !1640, !111}
!11409 = !{!11410, !11411}
!11410 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11405, file: !11406, line: 913, type: !1640)
!11411 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11405, file: !11406, line: 913, type: !111)
!11412 = !DILocation(line: 0, scope: !11405)
!11413 = !DILocation(line: 918, column: 3, scope: !11405)
!11414 = !DILocation(line: 920, column: 1, scope: !11405)
!11415 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11406, file: !11406, line: 825, type: !11416, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11418)
!11416 = !DISubroutineType(types: !11417)
!11417 = !{!111, !1640}
!11418 = !{!11419}
!11419 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11415, file: !11406, line: 825, type: !1640)
!11420 = !DILocation(line: 0, scope: !11415)
!11421 = !DILocation(line: 827, column: 21, scope: !11415)
!11422 = !DILocation(line: 827, column: 3, scope: !11415)
!11423 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11406, file: !11406, line: 814, type: !11407, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11424)
!11424 = !{!11425, !11426}
!11425 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11423, file: !11406, line: 814, type: !1640)
!11426 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11423, file: !11406, line: 814, type: !111)
!11427 = !DILocation(line: 0, scope: !11423)
!11428 = !DILocation(line: 816, column: 3, scope: !11423)
!11429 = !DILocation(line: 817, column: 1, scope: !11423)
!11430 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11406, file: !11406, line: 773, type: !11416, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11431)
!11431 = !{!11432}
!11432 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11430, file: !11406, line: 773, type: !1640)
!11433 = !DILocation(line: 0, scope: !11430)
!11434 = !DILocation(line: 775, column: 21, scope: !11430)
!11435 = !DILocation(line: 775, column: 3, scope: !11430)
!11436 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1705, file: !1705, line: 47, type: !11437, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11439)
!11437 = !DISubroutineType(types: !11438)
!11438 = !{!103, !1110, !744}
!11439 = !{!11440, !11441}
!11440 = !DILocalVariable(name: "flags", arg: 1, scope: !11436, file: !1705, line: 47, type: !1110)
!11441 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11436, file: !1705, line: 47, type: !744)
!11442 = !DILocation(line: 0, scope: !11436)
!11443 = !DILocation(line: 50, column: 13, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11436, file: !1705, line: 50, column: 6)
!11445 = !DILocation(line: 50, column: 28, scope: !11444)
!11446 = !DILocation(line: 50, column: 6, scope: !11436)
!11447 = !DILocation(line: 53, column: 11, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11444, file: !1705, line: 50, column: 34)
!11449 = !DILocation(line: 55, column: 14, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11448, file: !1705, line: 55, column: 7)
!11451 = !DILocation(line: 55, column: 35, scope: !11450)
!11452 = !DILocation(line: 55, column: 7, scope: !11448)
!11453 = !DILocation(line: 56, column: 14, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11455, file: !1705, line: 56, column: 8)
!11455 = distinct !DILexicalBlock(scope: !11450, file: !1705, line: 55, column: 41)
!11456 = !DILocation(line: 56, column: 8, scope: !11455)
!11457 = !DILocation(line: 0, scope: !11450)
!11458 = !DILocation(line: 66, column: 14, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11448, file: !1705, line: 66, column: 7)
!11460 = !DILocation(line: 66, column: 30, scope: !11459)
!11461 = !DILocation(line: 66, column: 7, scope: !11448)
!11462 = !DILocation(line: 67, column: 12, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11459, file: !1705, line: 66, column: 36)
!11464 = !DILocation(line: 68, column: 3, scope: !11463)
!11465 = !DILocation(line: 68, column: 21, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11459, file: !1705, line: 68, column: 14)
!11467 = !DILocation(line: 68, column: 39, scope: !11466)
!11468 = !DILocation(line: 68, column: 14, scope: !11459)
!11469 = !DILocation(line: 69, column: 12, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11466, file: !1705, line: 68, column: 45)
!11471 = !DILocation(line: 70, column: 3, scope: !11470)
!11472 = !DILocation(line: 72, column: 21, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11444, file: !1705, line: 72, column: 14)
!11474 = !DILocation(line: 72, column: 35, scope: !11473)
!11475 = !DILocation(line: 72, column: 14, scope: !11444)
!11476 = !DILocation(line: 77, column: 14, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11478, file: !1705, line: 77, column: 7)
!11478 = distinct !DILexicalBlock(scope: !11473, file: !1705, line: 72, column: 41)
!11479 = !DILocation(line: 77, column: 30, scope: !11477)
!11480 = !DILocation(line: 77, column: 7, scope: !11478)
!11481 = !DILocation(line: 0, scope: !11444)
!11482 = !DILocation(line: 90, column: 1, scope: !11436)
!11483 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1705, file: !1705, line: 157, type: !11484, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11486)
!11484 = !DISubroutineType(types: !11485)
!11485 = !{null, !1573, !103, !103, !103}
!11486 = !{!11487, !11488, !11489, !11490, !11491, !11492, !11493, !11494, !11495, !11496, !11497}
!11487 = !DILocalVariable(name: "dev", arg: 1, scope: !11483, file: !1705, line: 157, type: !1573)
!11488 = !DILocalVariable(name: "pin", arg: 2, scope: !11483, file: !1705, line: 157, type: !103)
!11489 = !DILocalVariable(name: "conf", arg: 3, scope: !11483, file: !1705, line: 158, type: !103)
!11490 = !DILocalVariable(name: "func", arg: 4, scope: !11483, file: !1705, line: 158, type: !103)
!11491 = !DILocalVariable(name: "cfg", scope: !11483, file: !1705, line: 160, type: !10990)
!11492 = !DILocalVariable(name: "gpio", scope: !11483, file: !1705, line: 161, type: !1640)
!11493 = !DILocalVariable(name: "pin_ll", scope: !11483, file: !1705, line: 163, type: !103)
!11494 = !DILocalVariable(name: "mode", scope: !11483, file: !1705, line: 227, type: !32)
!11495 = !DILocalVariable(name: "otype", scope: !11483, file: !1705, line: 227, type: !32)
!11496 = !DILocalVariable(name: "ospeed", scope: !11483, file: !1705, line: 227, type: !32)
!11497 = !DILocalVariable(name: "pupd", scope: !11483, file: !1705, line: 227, type: !32)
!11498 = !DILocation(line: 0, scope: !11483)
!11499 = !DILocation(line: 160, column: 45, scope: !11483)
!11500 = !DILocation(line: 161, column: 44, scope: !11483)
!11501 = !DILocation(line: 163, column: 15, scope: !11483)
!11502 = !DILocation(line: 229, column: 14, scope: !11483)
!11503 = !DILocation(line: 246, column: 47, scope: !11483)
!11504 = !DILocation(line: 246, column: 2, scope: !11483)
!11505 = !DILocation(line: 248, column: 43, scope: !11483)
!11506 = !DILocation(line: 248, column: 2, scope: !11483)
!11507 = !DILocation(line: 250, column: 40, scope: !11483)
!11508 = !DILocation(line: 250, column: 2, scope: !11483)
!11509 = !DILocation(line: 252, column: 11, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11483, file: !1705, line: 252, column: 6)
!11511 = !DILocation(line: 252, column: 6, scope: !11483)
!11512 = !DILocation(line: 253, column: 11, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11514, file: !1705, line: 253, column: 7)
!11514 = distinct !DILexicalBlock(scope: !11510, file: !1705, line: 252, column: 36)
!11515 = !DILocation(line: 253, column: 7, scope: !11514)
!11516 = !DILocation(line: 254, column: 4, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11513, file: !1705, line: 253, column: 16)
!11518 = !DILocation(line: 255, column: 3, scope: !11517)
!11519 = !DILocation(line: 256, column: 4, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11513, file: !1705, line: 255, column: 10)
!11521 = !DILocation(line: 260, column: 40, scope: !11483)
!11522 = !DILocation(line: 260, column: 2, scope: !11483)
!11523 = !DILocation(line: 265, column: 1, scope: !11483)
!11524 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1705, file: !1705, line: 137, type: !11325, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11525)
!11525 = !{!11526, !11527}
!11526 = !DILocalVariable(name: "pin", arg: 1, scope: !11524, file: !1705, line: 137, type: !103)
!11527 = !DILocalVariable(name: "pinval", scope: !11524, file: !1705, line: 139, type: !111)
!11528 = !DILocation(line: 0, scope: !11524)
!11529 = !DILocation(line: 149, column: 13, scope: !11524)
!11530 = !DILocation(line: 151, column: 2, scope: !11524)
!11531 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11406, file: !11406, line: 343, type: !11532, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11534)
!11532 = !DISubroutineType(types: !11533)
!11533 = !{null, !1640, !111, !111}
!11534 = !{!11535, !11536, !11537}
!11535 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11531, file: !11406, line: 343, type: !1640)
!11536 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11531, file: !11406, line: 343, type: !111)
!11537 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11531, file: !11406, line: 343, type: !111)
!11538 = !DILocation(line: 0, scope: !11531)
!11539 = !DILocation(line: 345, column: 3, scope: !11531)
!11540 = !DILocation(line: 346, column: 1, scope: !11531)
!11541 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11406, file: !11406, line: 414, type: !11532, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11542)
!11542 = !{!11543, !11544, !11545}
!11543 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11541, file: !11406, line: 414, type: !1640)
!11544 = !DILocalVariable(name: "Pin", arg: 2, scope: !11541, file: !11406, line: 414, type: !111)
!11545 = !DILocalVariable(name: "Speed", arg: 3, scope: !11541, file: !11406, line: 414, type: !111)
!11546 = !DILocation(line: 0, scope: !11541)
!11547 = !DILocation(line: 416, column: 3, scope: !11541)
!11548 = !DILocation(line: 0, scope: !11346, inlinedAt: !11549)
!11549 = distinct !DILocation(line: 416, column: 3, scope: !11541)
!11550 = !DILocation(line: 380, column: 4, scope: !11346, inlinedAt: !11549)
!11551 = !DILocation(line: 0, scope: !11354, inlinedAt: !11552)
!11552 = distinct !DILocation(line: 416, column: 3, scope: !11541)
!11553 = !DILocation(line: 414, column: 7, scope: !11354, inlinedAt: !11552)
!11554 = !DILocation(line: 0, scope: !11346, inlinedAt: !11555)
!11555 = distinct !DILocation(line: 416, column: 3, scope: !11541)
!11556 = !DILocation(line: 0, scope: !11354, inlinedAt: !11557)
!11557 = distinct !DILocation(line: 416, column: 3, scope: !11541)
!11558 = !DILocation(line: 418, column: 1, scope: !11541)
!11559 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11406, file: !11406, line: 485, type: !11532, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11560)
!11560 = !{!11561, !11562, !11563}
!11561 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11559, file: !11406, line: 485, type: !1640)
!11562 = !DILocalVariable(name: "Pin", arg: 2, scope: !11559, file: !11406, line: 485, type: !111)
!11563 = !DILocalVariable(name: "Pull", arg: 3, scope: !11559, file: !11406, line: 485, type: !111)
!11564 = !DILocation(line: 0, scope: !11559)
!11565 = !DILocation(line: 487, column: 3, scope: !11559)
!11566 = !DILocation(line: 0, scope: !11346, inlinedAt: !11567)
!11567 = distinct !DILocation(line: 487, column: 3, scope: !11559)
!11568 = !DILocation(line: 380, column: 4, scope: !11346, inlinedAt: !11567)
!11569 = !DILocation(line: 0, scope: !11354, inlinedAt: !11570)
!11570 = distinct !DILocation(line: 487, column: 3, scope: !11559)
!11571 = !DILocation(line: 414, column: 7, scope: !11354, inlinedAt: !11570)
!11572 = !DILocation(line: 0, scope: !11346, inlinedAt: !11573)
!11573 = distinct !DILocation(line: 487, column: 3, scope: !11559)
!11574 = !DILocation(line: 0, scope: !11354, inlinedAt: !11575)
!11575 = distinct !DILocation(line: 487, column: 3, scope: !11559)
!11576 = !DILocation(line: 488, column: 1, scope: !11559)
!11577 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11406, file: !11406, line: 557, type: !11532, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11578)
!11578 = !{!11579, !11580, !11581}
!11579 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11577, file: !11406, line: 557, type: !1640)
!11580 = !DILocalVariable(name: "Pin", arg: 2, scope: !11577, file: !11406, line: 557, type: !111)
!11581 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11577, file: !11406, line: 557, type: !111)
!11582 = !DILocation(line: 0, scope: !11577)
!11583 = !DILocation(line: 559, column: 3, scope: !11577)
!11584 = !DILocation(line: 0, scope: !11346, inlinedAt: !11585)
!11585 = distinct !DILocation(line: 559, column: 3, scope: !11577)
!11586 = !DILocation(line: 380, column: 4, scope: !11346, inlinedAt: !11585)
!11587 = !DILocation(line: 0, scope: !11354, inlinedAt: !11588)
!11588 = distinct !DILocation(line: 559, column: 3, scope: !11577)
!11589 = !DILocation(line: 414, column: 7, scope: !11354, inlinedAt: !11588)
!11590 = !DILocation(line: 0, scope: !11346, inlinedAt: !11591)
!11591 = distinct !DILocation(line: 559, column: 3, scope: !11577)
!11592 = !DILocation(line: 0, scope: !11354, inlinedAt: !11593)
!11593 = distinct !DILocation(line: 559, column: 3, scope: !11577)
!11594 = !DILocation(line: 561, column: 1, scope: !11577)
!11595 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11406, file: !11406, line: 634, type: !11532, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11596)
!11596 = !{!11597, !11598, !11599}
!11597 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11595, file: !11406, line: 634, type: !1640)
!11598 = !DILocalVariable(name: "Pin", arg: 2, scope: !11595, file: !11406, line: 634, type: !111)
!11599 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11595, file: !11406, line: 634, type: !111)
!11600 = !DILocation(line: 0, scope: !11595)
!11601 = !DILocation(line: 636, column: 3, scope: !11595)
!11602 = !DILocation(line: 0, scope: !11346, inlinedAt: !11603)
!11603 = distinct !DILocation(line: 636, column: 3, scope: !11595)
!11604 = !DILocation(line: 380, column: 4, scope: !11346, inlinedAt: !11603)
!11605 = !DILocation(line: 0, scope: !11354, inlinedAt: !11606)
!11606 = distinct !DILocation(line: 636, column: 3, scope: !11595)
!11607 = !DILocation(line: 414, column: 7, scope: !11354, inlinedAt: !11606)
!11608 = !DILocation(line: 0, scope: !11346, inlinedAt: !11609)
!11609 = distinct !DILocation(line: 636, column: 3, scope: !11595)
!11610 = !DILocation(line: 0, scope: !11354, inlinedAt: !11611)
!11611 = distinct !DILocation(line: 636, column: 3, scope: !11595)
!11612 = !DILocation(line: 638, column: 1, scope: !11595)
!11613 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11406, file: !11406, line: 274, type: !11532, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11614)
!11614 = !{!11615, !11616, !11617}
!11615 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11613, file: !11406, line: 274, type: !1640)
!11616 = !DILocalVariable(name: "Pin", arg: 2, scope: !11613, file: !11406, line: 274, type: !111)
!11617 = !DILocalVariable(name: "Mode", arg: 3, scope: !11613, file: !11406, line: 274, type: !111)
!11618 = !DILocation(line: 0, scope: !11613)
!11619 = !DILocation(line: 276, column: 3, scope: !11613)
!11620 = !DILocation(line: 0, scope: !11346, inlinedAt: !11621)
!11621 = distinct !DILocation(line: 276, column: 3, scope: !11613)
!11622 = !DILocation(line: 380, column: 4, scope: !11346, inlinedAt: !11621)
!11623 = !DILocation(line: 0, scope: !11354, inlinedAt: !11624)
!11624 = distinct !DILocation(line: 276, column: 3, scope: !11613)
!11625 = !DILocation(line: 414, column: 7, scope: !11354, inlinedAt: !11624)
!11626 = !DILocation(line: 0, scope: !11346, inlinedAt: !11627)
!11627 = distinct !DILocation(line: 276, column: 3, scope: !11613)
!11628 = !DILocation(line: 0, scope: !11354, inlinedAt: !11629)
!11629 = distinct !DILocation(line: 276, column: 3, scope: !11613)
!11630 = !DILocation(line: 277, column: 1, scope: !11613)
!11631 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1705, file: !1705, line: 698, type: !1718, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11632)
!11632 = !{!11633, !11634, !11635}
!11633 = !DILocalVariable(name: "dev", arg: 1, scope: !11631, file: !1705, line: 698, type: !1573)
!11634 = !DILocalVariable(name: "data", scope: !11631, file: !1705, line: 700, type: !11057)
!11635 = !DILocalVariable(name: "ret", scope: !11631, file: !1705, line: 701, type: !103)
!11636 = !DILocation(line: 0, scope: !11631)
!11637 = !DILocation(line: 700, column: 38, scope: !11631)
!11638 = !DILocation(line: 703, column: 8, scope: !11631)
!11639 = !DILocation(line: 703, column: 12, scope: !11631)
!11640 = !DILocation(line: 705, column: 7, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11631, file: !1705, line: 705, column: 6)
!11642 = !DILocation(line: 705, column: 6, scope: !11631)
!11643 = !DILocation(line: 722, column: 8, scope: !11631)
!11644 = !DILocation(line: 723, column: 10, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11631, file: !1705, line: 723, column: 6)
!11646 = !DILocation(line: 723, column: 6, scope: !11631)
!11647 = !DILocation(line: 731, column: 1, scope: !11631)
!11648 = distinct !DISubprogram(name: "device_is_ready", scope: !9715, file: !9715, line: 47, type: !11649, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11651)
!11649 = !DISubroutineType(types: !11650)
!11650 = !{!122, !1573}
!11651 = !{!11652}
!11652 = !DILocalVariable(name: "dev", arg: 1, scope: !11648, file: !9715, line: 47, type: !1573)
!11653 = !DILocation(line: 0, scope: !11648)
!11654 = !DILocation(line: 55, column: 2, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11648, file: !9715, line: 55, column: 2)
!11656 = !{i64 2152415583}
!11657 = !DILocation(line: 56, column: 9, scope: !11648)
!11658 = !DILocation(line: 56, column: 2, scope: !11648)
!11659 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1705, file: !1705, line: 270, type: !11660, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11662)
!11660 = !DISubroutineType(types: !11661)
!11661 = !{!103, !1573, !122}
!11662 = !{!11663, !11664, !11665, !11666, !11667}
!11663 = !DILocalVariable(name: "dev", arg: 1, scope: !11659, file: !1705, line: 270, type: !1573)
!11664 = !DILocalVariable(name: "on", arg: 2, scope: !11659, file: !1705, line: 270, type: !122)
!11665 = !DILocalVariable(name: "cfg", scope: !11659, file: !1705, line: 272, type: !10990)
!11666 = !DILocalVariable(name: "ret", scope: !11659, file: !1705, line: 273, type: !103)
!11667 = !DILocalVariable(name: "clk", scope: !11659, file: !1705, line: 278, type: !11292)
!11668 = !DILocation(line: 0, scope: !11659)
!11669 = !DILocation(line: 272, column: 45, scope: !11659)
!11670 = !DILocation(line: 282, column: 38, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11672, file: !1705, line: 280, column: 10)
!11672 = distinct !DILexicalBlock(scope: !11659, file: !1705, line: 280, column: 6)
!11673 = !DILocation(line: 282, column: 6, scope: !11671)
!11674 = !DILocation(line: 281, column: 9, scope: !11671)
!11675 = !DILocation(line: 293, column: 1, scope: !11659)
!11676 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !810, file: !810, line: 730, type: !11649, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11677)
!11677 = !{!11678}
!11678 = !DILocalVariable(name: "dev", arg: 1, scope: !11676, file: !810, line: 730, type: !1573)
!11679 = !DILocation(line: 0, scope: !11676)
!11680 = !DILocation(line: 732, column: 9, scope: !11676)
!11681 = !DILocation(line: 732, column: 2, scope: !11676)
!11682 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1705, file: !1705, line: 496, type: !11683, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11685)
!11683 = !DISubroutineType(types: !11684)
!11684 = !{!103, !1573, !103, !103, !103}
!11685 = !{!11686, !11687, !11688, !11689, !11690, !11691}
!11686 = !DILocalVariable(name: "dev", arg: 1, scope: !11682, file: !1705, line: 496, type: !1573)
!11687 = !DILocalVariable(name: "pin", arg: 2, scope: !11682, file: !1705, line: 496, type: !103)
!11688 = !DILocalVariable(name: "conf", arg: 3, scope: !11682, file: !1705, line: 496, type: !103)
!11689 = !DILocalVariable(name: "func", arg: 4, scope: !11682, file: !1705, line: 496, type: !103)
!11690 = !DILocalVariable(name: "ret", scope: !11682, file: !1705, line: 498, type: !103)
!11691 = !DILocalVariable(name: "gpio_out", scope: !11692, file: !1705, line: 508, type: !111)
!11692 = distinct !DILexicalBlock(scope: !11693, file: !1705, line: 507, column: 27)
!11693 = distinct !DILexicalBlock(scope: !11682, file: !1705, line: 507, column: 6)
!11694 = !DILocation(line: 0, scope: !11682)
!11695 = !DILocation(line: 505, column: 2, scope: !11682)
!11696 = !DILocation(line: 507, column: 11, scope: !11693)
!11697 = !DILocation(line: 507, column: 6, scope: !11682)
!11698 = !DILocation(line: 508, column: 28, scope: !11692)
!11699 = !DILocation(line: 0, scope: !11692)
!11700 = !DILocation(line: 510, column: 16, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11692, file: !1705, line: 510, column: 7)
!11702 = !DILocation(line: 0, scope: !11701)
!11703 = !DILocation(line: 510, column: 7, scope: !11692)
!11704 = !DILocation(line: 511, column: 4, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11701, file: !1705, line: 510, column: 32)
!11706 = !DILocation(line: 512, column: 3, scope: !11705)
!11707 = !DILocation(line: 513, column: 4, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !1705, line: 512, column: 39)
!11709 = distinct !DILexicalBlock(scope: !11701, file: !1705, line: 512, column: 14)
!11710 = !DILocation(line: 514, column: 3, scope: !11708)
!11711 = !DILocation(line: 518, column: 1, scope: !11682)
!11712 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1962, file: !1962, line: 526, type: !1866, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11713)
!11713 = !{!11714, !11715, !11716}
!11714 = !DILocalVariable(name: "dev", arg: 1, scope: !11712, file: !1962, line: 526, type: !1868)
!11715 = !DILocalVariable(name: "c", arg: 2, scope: !11712, file: !1962, line: 526, type: !1516)
!11716 = !DILocalVariable(name: "config", scope: !11712, file: !1962, line: 528, type: !11717)
!11717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!11718 = !DILocation(line: 0, scope: !11712)
!11719 = !DILocation(line: 528, column: 48, scope: !11712)
!11720 = !DILocation(line: 531, column: 40, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11712, file: !1962, line: 531, column: 6)
!11722 = !DILocation(line: 531, column: 6, scope: !11721)
!11723 = !DILocation(line: 531, column: 6, scope: !11712)
!11724 = !DILocation(line: 532, column: 34, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11721, file: !1962, line: 531, column: 48)
!11726 = !DILocation(line: 532, column: 3, scope: !11725)
!11727 = !DILocation(line: 533, column: 2, scope: !11725)
!11728 = !DILocation(line: 539, column: 42, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11712, file: !1962, line: 539, column: 6)
!11730 = !DILocation(line: 539, column: 7, scope: !11729)
!11731 = !DILocation(line: 539, column: 6, scope: !11712)
!11732 = !DILocation(line: 543, column: 52, scope: !11712)
!11733 = !DILocation(line: 543, column: 22, scope: !11712)
!11734 = !DILocation(line: 543, column: 5, scope: !11712)
!11735 = !DILocation(line: 545, column: 2, scope: !11712)
!11736 = !DILocation(line: 546, column: 1, scope: !11712)
!11737 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1962, file: !1962, line: 548, type: !1885, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11738)
!11738 = !{!11739, !11740, !11741, !11742}
!11739 = !DILocalVariable(name: "dev", arg: 1, scope: !11737, file: !1962, line: 548, type: !1868)
!11740 = !DILocalVariable(name: "c", arg: 2, scope: !11737, file: !1962, line: 549, type: !167)
!11741 = !DILocalVariable(name: "config", scope: !11737, file: !1962, line: 551, type: !11717)
!11742 = !DILocalVariable(name: "key", scope: !11737, file: !1962, line: 555, type: !32)
!11743 = !DILocation(line: 0, scope: !11737)
!11744 = !DILocation(line: 551, column: 48, scope: !11737)
!11745 = !DILocation(line: 562, column: 2, scope: !11737)
!11746 = !DILocation(line: 563, column: 41, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !1962, line: 563, column: 7)
!11748 = distinct !DILexicalBlock(scope: !11737, file: !1962, line: 562, column: 12)
!11749 = !DILocation(line: 563, column: 7, scope: !11747)
!11750 = !DILocation(line: 563, column: 7, scope: !11748)
!11751 = !DILocation(line: 55, column: 2, scope: !11752, inlinedAt: !11756)
!11752 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11753)
!11753 = !{!11754, !11755}
!11754 = !DILocalVariable(name: "key", scope: !11752, file: !7496, line: 44, type: !32)
!11755 = !DILocalVariable(name: "tmp", scope: !11752, file: !7496, line: 53, type: !32)
!11756 = distinct !DILocation(line: 564, column: 10, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11747, file: !1962, line: 563, column: 49)
!11758 = !{i64 1701642}
!11759 = !DILocation(line: 0, scope: !11752, inlinedAt: !11756)
!11760 = !DILocation(line: 565, column: 42, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11757, file: !1962, line: 565, column: 8)
!11762 = !DILocation(line: 565, column: 8, scope: !11761)
!11763 = !DILocation(line: 565, column: 8, scope: !11757)
!11764 = !DILocalVariable(name: "key", arg: 1, scope: !11765, file: !7496, line: 84, type: !32)
!11765 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11766)
!11766 = !{!11764}
!11767 = !DILocation(line: 0, scope: !11765, inlinedAt: !11768)
!11768 = distinct !DILocation(line: 568, column: 4, scope: !11757)
!11769 = !DILocation(line: 95, column: 2, scope: !11765, inlinedAt: !11768)
!11770 = !{i64 1702459}
!11771 = !DILocation(line: 569, column: 3, scope: !11757)
!11772 = distinct !{!11772, !11745, !11773}
!11773 = !DILocation(line: 570, column: 2, scope: !11737)
!11774 = !DILocation(line: 592, column: 33, scope: !11737)
!11775 = !DILocation(line: 592, column: 2, scope: !11737)
!11776 = !DILocation(line: 0, scope: !11765, inlinedAt: !11777)
!11777 = distinct !DILocation(line: 593, column: 2, scope: !11737)
!11778 = !DILocation(line: 95, column: 2, scope: !11765, inlinedAt: !11777)
!11779 = !DILocation(line: 594, column: 1, scope: !11737)
!11780 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1962, file: !1962, line: 596, type: !1889, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11781)
!11781 = !{!11782, !11783, !11784}
!11782 = !DILocalVariable(name: "dev", arg: 1, scope: !11780, file: !1962, line: 596, type: !1868)
!11783 = !DILocalVariable(name: "config", scope: !11780, file: !1962, line: 598, type: !11717)
!11784 = !DILocalVariable(name: "err", scope: !11780, file: !1962, line: 599, type: !111)
!11785 = !DILocation(line: 0, scope: !11780)
!11786 = !DILocation(line: 598, column: 48, scope: !11780)
!11787 = !DILocation(line: 606, column: 40, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11780, file: !1962, line: 606, column: 6)
!11789 = !DILocation(line: 606, column: 6, scope: !11788)
!11790 = !DILocation(line: 606, column: 6, scope: !11780)
!11791 = !DILocation(line: 610, column: 39, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11780, file: !1962, line: 610, column: 6)
!11793 = !DILocation(line: 610, column: 6, scope: !11792)
!11794 = !DILocation(line: 610, column: 6, scope: !11780)
!11795 = !DILocation(line: 614, column: 39, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11780, file: !1962, line: 614, column: 6)
!11797 = !DILocation(line: 614, column: 6, scope: !11796)
!11798 = !DILocation(line: 614, column: 6, scope: !11780)
!11799 = !DILocation(line: 619, column: 40, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11780, file: !1962, line: 619, column: 6)
!11801 = !DILocation(line: 619, column: 6, scope: !11800)
!11802 = !DILocation(line: 619, column: 6, scope: !11780)
!11803 = !DILocation(line: 623, column: 10, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11780, file: !1962, line: 623, column: 6)
!11805 = !DILocation(line: 623, column: 6, scope: !11780)
!11806 = !DILocation(line: 624, column: 34, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11804, file: !1962, line: 623, column: 24)
!11808 = !DILocation(line: 624, column: 3, scope: !11807)
!11809 = !DILocation(line: 625, column: 2, scope: !11807)
!11810 = !DILocation(line: 632, column: 10, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11780, file: !1962, line: 632, column: 6)
!11812 = !DILocation(line: 632, column: 6, scope: !11780)
!11813 = !DILocation(line: 633, column: 34, scope: !11814)
!11814 = distinct !DILexicalBlock(scope: !11811, file: !1962, line: 632, column: 32)
!11815 = !DILocation(line: 633, column: 3, scope: !11814)
!11816 = !DILocation(line: 634, column: 2, scope: !11814)
!11817 = !DILocation(line: 636, column: 10, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11780, file: !1962, line: 636, column: 6)
!11819 = !DILocation(line: 636, column: 6, scope: !11780)
!11820 = !DILocation(line: 637, column: 33, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11818, file: !1962, line: 636, column: 31)
!11822 = !DILocation(line: 637, column: 3, scope: !11821)
!11823 = !DILocation(line: 638, column: 2, scope: !11821)
!11824 = !DILocation(line: 640, column: 10, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11780, file: !1962, line: 640, column: 6)
!11826 = !DILocation(line: 640, column: 6, scope: !11780)
!11827 = !DILocation(line: 641, column: 33, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11825, file: !1962, line: 640, column: 32)
!11829 = !DILocation(line: 641, column: 3, scope: !11828)
!11830 = !DILocation(line: 642, column: 2, scope: !11828)
!11831 = !DILocation(line: 646, column: 32, scope: !11780)
!11832 = !DILocation(line: 646, column: 2, scope: !11780)
!11833 = !DILocation(line: 648, column: 2, scope: !11780)
!11834 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1962, file: !1962, line: 419, type: !1893, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11835)
!11835 = !{!11836, !11837, !11838, !11839, !11841, !11842, !11843, !11844}
!11836 = !DILocalVariable(name: "dev", arg: 1, scope: !11834, file: !1962, line: 419, type: !1868)
!11837 = !DILocalVariable(name: "cfg", arg: 2, scope: !11834, file: !1962, line: 420, type: !1895)
!11838 = !DILocalVariable(name: "config", scope: !11834, file: !1962, line: 422, type: !11717)
!11839 = !DILocalVariable(name: "data", scope: !11834, file: !1962, line: 423, type: !11840)
!11840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!11841 = !DILocalVariable(name: "parity", scope: !11834, file: !1962, line: 424, type: !8085)
!11842 = !DILocalVariable(name: "stopbits", scope: !11834, file: !1962, line: 425, type: !8085)
!11843 = !DILocalVariable(name: "databits", scope: !11834, file: !1962, line: 426, type: !8085)
!11844 = !DILocalVariable(name: "flowctrl", scope: !11834, file: !1962, line: 428, type: !8085)
!11845 = !DILocation(line: 0, scope: !11834)
!11846 = !DILocation(line: 422, column: 48, scope: !11834)
!11847 = !DILocation(line: 423, column: 38, scope: !11834)
!11848 = !DILocation(line: 424, column: 56, scope: !11834)
!11849 = !DILocation(line: 424, column: 51, scope: !11834)
!11850 = !DILocation(line: 424, column: 26, scope: !11834)
!11851 = !DILocation(line: 425, column: 60, scope: !11834)
!11852 = !DILocation(line: 425, column: 55, scope: !11834)
!11853 = !DILocation(line: 425, column: 28, scope: !11834)
!11854 = !DILocation(line: 426, column: 60, scope: !11834)
!11855 = !DILocation(line: 426, column: 55, scope: !11834)
!11856 = !DILocation(line: 426, column: 28, scope: !11834)
!11857 = !DILocation(line: 428, column: 58, scope: !11834)
!11858 = !DILocation(line: 428, column: 53, scope: !11834)
!11859 = !DILocation(line: 428, column: 28, scope: !11834)
!11860 = !DILocation(line: 431, column: 44, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11834, file: !1962, line: 431, column: 6)
!11862 = !DILocation(line: 438, column: 22, scope: !11863)
!11863 = distinct !DILexicalBlock(scope: !11834, file: !1962, line: 437, column: 6)
!11864 = !DILocation(line: 437, column: 6, scope: !11834)
!11865 = !DILocation(line: 448, column: 6, scope: !11834)
!11866 = !DILocation(line: 465, column: 47, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11834, file: !1962, line: 465, column: 6)
!11868 = !DILocation(line: 475, column: 21, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11834, file: !1962, line: 475, column: 6)
!11870 = !DILocation(line: 475, column: 6, scope: !11834)
!11871 = !DILocation(line: 476, column: 8, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11873, file: !1962, line: 476, column: 7)
!11873 = distinct !DILexicalBlock(scope: !11869, file: !1962, line: 475, column: 49)
!11874 = !DILocation(line: 477, column: 34, scope: !11872)
!11875 = !DILocation(line: 476, column: 7, scope: !11873)
!11876 = !DILocation(line: 482, column: 27, scope: !11834)
!11877 = !DILocation(line: 482, column: 2, scope: !11834)
!11878 = !DILocation(line: 484, column: 16, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11834, file: !1962, line: 484, column: 6)
!11880 = !DILocation(line: 484, column: 13, scope: !11879)
!11881 = !DILocation(line: 484, column: 6, scope: !11834)
!11882 = !DILocation(line: 485, column: 3, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11879, file: !1962, line: 484, column: 44)
!11884 = !DILocation(line: 486, column: 2, scope: !11883)
!11885 = !DILocation(line: 488, column: 18, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11834, file: !1962, line: 488, column: 6)
!11887 = !DILocation(line: 488, column: 15, scope: !11886)
!11888 = !DILocation(line: 488, column: 6, scope: !11834)
!11889 = !DILocation(line: 489, column: 3, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11886, file: !1962, line: 488, column: 48)
!11891 = !DILocation(line: 490, column: 2, scope: !11890)
!11892 = !DILocation(line: 492, column: 18, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11834, file: !1962, line: 492, column: 6)
!11894 = !DILocation(line: 492, column: 15, scope: !11893)
!11895 = !DILocation(line: 492, column: 6, scope: !11834)
!11896 = !DILocation(line: 493, column: 3, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11893, file: !1962, line: 492, column: 48)
!11898 = !DILocation(line: 494, column: 2, scope: !11897)
!11899 = !DILocation(line: 496, column: 18, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11834, file: !1962, line: 496, column: 6)
!11901 = !DILocation(line: 496, column: 15, scope: !11900)
!11902 = !DILocation(line: 496, column: 6, scope: !11834)
!11903 = !DILocation(line: 497, column: 3, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11900, file: !1962, line: 496, column: 46)
!11905 = !DILocation(line: 498, column: 2, scope: !11904)
!11906 = !DILocation(line: 500, column: 11, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11834, file: !1962, line: 500, column: 6)
!11908 = !DILocation(line: 500, column: 29, scope: !11907)
!11909 = !DILocation(line: 500, column: 20, scope: !11907)
!11910 = !DILocation(line: 500, column: 6, scope: !11834)
!11911 = !DILocation(line: 501, column: 3, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11907, file: !1962, line: 500, column: 40)
!11913 = !DILocation(line: 502, column: 26, scope: !11912)
!11914 = !DILocation(line: 502, column: 19, scope: !11912)
!11915 = !DILocation(line: 503, column: 2, scope: !11912)
!11916 = !DILocation(line: 505, column: 26, scope: !11834)
!11917 = !DILocation(line: 505, column: 2, scope: !11834)
!11918 = !DILocation(line: 506, column: 2, scope: !11834)
!11919 = !DILocation(line: 507, column: 1, scope: !11834)
!11920 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1962, file: !1962, line: 509, type: !1906, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11921)
!11921 = !{!11922, !11923, !11924}
!11922 = !DILocalVariable(name: "dev", arg: 1, scope: !11920, file: !1962, line: 509, type: !1868)
!11923 = !DILocalVariable(name: "cfg", arg: 2, scope: !11920, file: !1962, line: 510, type: !1908)
!11924 = !DILocalVariable(name: "data", scope: !11920, file: !1962, line: 512, type: !11840)
!11925 = !DILocation(line: 0, scope: !11920)
!11926 = !DILocation(line: 512, column: 38, scope: !11920)
!11927 = !DILocation(line: 514, column: 24, scope: !11920)
!11928 = !DILocation(line: 514, column: 7, scope: !11920)
!11929 = !DILocation(line: 514, column: 16, scope: !11920)
!11930 = !DILocation(line: 515, column: 41, scope: !11920)
!11931 = !{i32 0, i32 1537}
!11932 = !DILocation(line: 515, column: 16, scope: !11920)
!11933 = !DILocation(line: 515, column: 7, scope: !11920)
!11934 = !DILocation(line: 515, column: 14, scope: !11920)
!11935 = !DILocation(line: 517, column: 3, scope: !11920)
!11936 = !{i32 0, i32 12289}
!11937 = !DILocation(line: 516, column: 19, scope: !11920)
!11938 = !DILocation(line: 516, column: 7, scope: !11920)
!11939 = !DILocation(line: 516, column: 17, scope: !11920)
!11940 = !DILocation(line: 519, column: 3, scope: !11920)
!11941 = !DILocation(line: 519, column: 33, scope: !11920)
!11942 = !DILocation(line: 518, column: 19, scope: !11920)
!11943 = !DILocation(line: 518, column: 7, scope: !11920)
!11944 = !DILocation(line: 518, column: 17, scope: !11920)
!11945 = !DILocation(line: 521, column: 3, scope: !11920)
!11946 = !{i32 0, i32 769}
!11947 = !DILocation(line: 520, column: 19, scope: !11920)
!11948 = !DILocation(line: 520, column: 7, scope: !11920)
!11949 = !DILocation(line: 520, column: 17, scope: !11920)
!11950 = !DILocation(line: 522, column: 2, scope: !11920)
!11951 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1962, file: !1962, line: 205, type: !11952, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11954)
!11952 = !DISubroutineType(types: !11953)
!11953 = !{!111, !1868}
!11954 = !{!11955, !11956}
!11955 = !DILocalVariable(name: "dev", arg: 1, scope: !11951, file: !1962, line: 205, type: !1868)
!11956 = !DILocalVariable(name: "config", scope: !11951, file: !1962, line: 207, type: !11717)
!11957 = !DILocation(line: 0, scope: !11951)
!11958 = !DILocation(line: 207, column: 48, scope: !11951)
!11959 = !DILocation(line: 209, column: 36, scope: !11951)
!11960 = !DILocation(line: 209, column: 9, scope: !11951)
!11961 = !DILocation(line: 209, column: 2, scope: !11951)
!11962 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1962, file: !1962, line: 270, type: !11963, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11965)
!11963 = !DISubroutineType(types: !11964)
!11964 = !{!1834, !111}
!11965 = !{!11966}
!11966 = !DILocalVariable(name: "parity", arg: 1, scope: !11962, file: !1962, line: 270, type: !111)
!11967 = !DILocation(line: 0, scope: !11962)
!11968 = !DILocation(line: 272, column: 2, scope: !11962)
!11969 = !DILocation(line: 281, column: 1, scope: !11962)
!11970 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1962, file: !1962, line: 220, type: !11952, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11971)
!11971 = !{!11972, !11973}
!11972 = !DILocalVariable(name: "dev", arg: 1, scope: !11970, file: !1962, line: 220, type: !1868)
!11973 = !DILocalVariable(name: "config", scope: !11970, file: !1962, line: 222, type: !11717)
!11974 = !DILocation(line: 0, scope: !11970)
!11975 = !DILocation(line: 222, column: 48, scope: !11970)
!11976 = !DILocation(line: 224, column: 44, scope: !11970)
!11977 = !DILocation(line: 224, column: 9, scope: !11970)
!11978 = !DILocation(line: 224, column: 2, scope: !11970)
!11979 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1962, file: !1962, line: 304, type: !11980, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11982)
!11980 = !DISubroutineType(types: !11981)
!11981 = !{!1848, !111}
!11982 = !{!11983}
!11983 = !DILocalVariable(name: "sb", arg: 1, scope: !11979, file: !1962, line: 304, type: !111)
!11984 = !DILocation(line: 0, scope: !11979)
!11985 = !DILocation(line: 306, column: 2, scope: !11979)
!11986 = !DILocation(line: 0, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11979, file: !1962, line: 306, column: 14)
!11988 = !DILocation(line: 323, column: 1, scope: !11979)
!11989 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1962, file: !1962, line: 235, type: !11952, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !11990)
!11990 = !{!11991, !11992}
!11991 = !DILocalVariable(name: "dev", arg: 1, scope: !11989, file: !1962, line: 235, type: !1868)
!11992 = !DILocalVariable(name: "config", scope: !11989, file: !1962, line: 237, type: !11717)
!11993 = !DILocation(line: 0, scope: !11989)
!11994 = !DILocation(line: 237, column: 48, scope: !11989)
!11995 = !DILocation(line: 239, column: 39, scope: !11989)
!11996 = !DILocation(line: 239, column: 9, scope: !11989)
!11997 = !DILocation(line: 239, column: 2, scope: !11989)
!11998 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1962, file: !1962, line: 355, type: !11999, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12001)
!11999 = !DISubroutineType(types: !12000)
!12000 = !{!1841, !111, !111}
!12001 = !{!12002, !12003}
!12002 = !DILocalVariable(name: "db", arg: 1, scope: !11998, file: !1962, line: 355, type: !111)
!12003 = !DILocalVariable(name: "p", arg: 2, scope: !11998, file: !1962, line: 356, type: !111)
!12004 = !DILocation(line: 0, scope: !11998)
!12005 = !DILocation(line: 358, column: 2, scope: !11998)
!12006 = !DILocation(line: 384, column: 1, scope: !11998)
!12007 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1962, file: !1962, line: 250, type: !11952, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12008)
!12008 = !{!12009, !12010}
!12009 = !DILocalVariable(name: "dev", arg: 1, scope: !12007, file: !1962, line: 250, type: !1868)
!12010 = !DILocalVariable(name: "config", scope: !12007, file: !1962, line: 252, type: !11717)
!12011 = !DILocation(line: 0, scope: !12007)
!12012 = !DILocation(line: 252, column: 48, scope: !12007)
!12013 = !DILocation(line: 254, column: 40, scope: !12007)
!12014 = !DILocation(line: 254, column: 9, scope: !12007)
!12015 = !DILocation(line: 254, column: 2, scope: !12007)
!12016 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1962, file: !1962, line: 409, type: !12017, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12019)
!12017 = !DISubroutineType(types: !12018)
!12018 = !{!1854, !111}
!12019 = !{!12020}
!12020 = !DILocalVariable(name: "fc", arg: 1, scope: !12016, file: !1962, line: 409, type: !111)
!12021 = !DILocation(line: 0, scope: !12016)
!12022 = !DILocation(line: 411, column: 9, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !12016, file: !1962, line: 411, column: 6)
!12024 = !DILocation(line: 416, column: 1, scope: !12016)
!12025 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12026, file: !12026, line: 966, type: !12027, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12029)
!12026 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12027 = !DISubroutineType(types: !12028)
!12028 = !{!111, !1909}
!12029 = !{!12030}
!12030 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12025, file: !12026, line: 966, type: !1909)
!12031 = !DILocation(line: 0, scope: !12025)
!12032 = !DILocation(line: 968, column: 21, scope: !12025)
!12033 = !DILocation(line: 968, column: 3, scope: !12025)
!12034 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12026, file: !12026, line: 600, type: !12027, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12035)
!12035 = !{!12036}
!12036 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12034, file: !12026, line: 600, type: !1909)
!12037 = !DILocation(line: 0, scope: !12034)
!12038 = !DILocation(line: 602, column: 21, scope: !12034)
!12039 = !DILocation(line: 602, column: 3, scope: !12034)
!12040 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12026, file: !12026, line: 819, type: !12027, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12041)
!12041 = !{!12042}
!12042 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12040, file: !12026, line: 819, type: !1909)
!12043 = !DILocation(line: 0, scope: !12040)
!12044 = !DILocation(line: 821, column: 21, scope: !12040)
!12045 = !DILocation(line: 821, column: 3, scope: !12040)
!12046 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12026, file: !12026, line: 546, type: !12027, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12047)
!12047 = !{!12048}
!12048 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12046, file: !12026, line: 546, type: !1909)
!12049 = !DILocation(line: 0, scope: !12046)
!12050 = !DILocation(line: 548, column: 21, scope: !12046)
!12051 = !DILocation(line: 548, column: 3, scope: !12046)
!12052 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1962, file: !1962, line: 257, type: !12053, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12055)
!12053 = !DISubroutineType(types: !12054)
!12054 = !{!111, !1834}
!12055 = !{!12056}
!12056 = !DILocalVariable(name: "parity", arg: 1, scope: !12052, file: !1962, line: 257, type: !1834)
!12057 = !DILocation(line: 0, scope: !12052)
!12058 = !DILocation(line: 259, column: 2, scope: !12052)
!12059 = !DILocation(line: 268, column: 1, scope: !12052)
!12060 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1962, file: !1962, line: 283, type: !12061, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12063)
!12061 = !DISubroutineType(types: !12062)
!12062 = !{!111, !1848}
!12063 = !{!12064}
!12064 = !DILocalVariable(name: "sb", arg: 1, scope: !12060, file: !1962, line: 283, type: !1848)
!12065 = !DILocation(line: 0, scope: !12060)
!12066 = !DILocation(line: 285, column: 2, scope: !12060)
!12067 = !DILocation(line: 0, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12060, file: !1962, line: 285, column: 14)
!12069 = !DILocation(line: 302, column: 1, scope: !12060)
!12070 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1962, file: !1962, line: 325, type: !12071, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12073)
!12071 = !DISubroutineType(types: !12072)
!12072 = !{!111, !1841, !1834}
!12073 = !{!12074, !12075}
!12074 = !DILocalVariable(name: "db", arg: 1, scope: !12070, file: !1962, line: 325, type: !1841)
!12075 = !DILocalVariable(name: "p", arg: 2, scope: !12070, file: !1962, line: 326, type: !1834)
!12076 = !DILocation(line: 0, scope: !12070)
!12077 = !DILocation(line: 328, column: 2, scope: !12070)
!12078 = !DILocation(line: 353, column: 1, scope: !12070)
!12079 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1962, file: !1962, line: 393, type: !12080, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12082)
!12080 = !DISubroutineType(types: !12081)
!12081 = !{!111, !1854}
!12082 = !{!12083}
!12083 = !DILocalVariable(name: "fc", arg: 1, scope: !12079, file: !1962, line: 393, type: !1854)
!12084 = !DILocation(line: 0, scope: !12079)
!12085 = !DILocation(line: 395, column: 9, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12079, file: !1962, line: 395, column: 6)
!12087 = !DILocation(line: 400, column: 1, scope: !12079)
!12088 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12026, file: !12026, line: 423, type: !12089, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12091)
!12089 = !DISubroutineType(types: !12090)
!12090 = !{null, !1909}
!12091 = !{!12092}
!12092 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12088, file: !12026, line: 423, type: !1909)
!12093 = !DILocation(line: 0, scope: !12088)
!12094 = !DILocation(line: 425, column: 3, scope: !12088)
!12095 = !DILocation(line: 426, column: 1, scope: !12088)
!12096 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1962, file: !1962, line: 197, type: !12097, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12099)
!12097 = !DISubroutineType(types: !12098)
!12098 = !{null, !1868, !111}
!12099 = !{!12100, !12101, !12102}
!12100 = !DILocalVariable(name: "dev", arg: 1, scope: !12096, file: !1962, line: 197, type: !1868)
!12101 = !DILocalVariable(name: "parity", arg: 2, scope: !12096, file: !1962, line: 198, type: !111)
!12102 = !DILocalVariable(name: "config", scope: !12096, file: !1962, line: 200, type: !11717)
!12103 = !DILocation(line: 0, scope: !12096)
!12104 = !DILocation(line: 200, column: 48, scope: !12096)
!12105 = !DILocation(line: 202, column: 29, scope: !12096)
!12106 = !DILocation(line: 202, column: 2, scope: !12096)
!12107 = !DILocation(line: 203, column: 1, scope: !12096)
!12108 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1962, file: !1962, line: 212, type: !12097, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12109)
!12109 = !{!12110, !12111, !12112}
!12110 = !DILocalVariable(name: "dev", arg: 1, scope: !12108, file: !1962, line: 212, type: !1868)
!12111 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12108, file: !1962, line: 213, type: !111)
!12112 = !DILocalVariable(name: "config", scope: !12108, file: !1962, line: 215, type: !11717)
!12113 = !DILocation(line: 0, scope: !12108)
!12114 = !DILocation(line: 215, column: 48, scope: !12108)
!12115 = !DILocation(line: 217, column: 37, scope: !12108)
!12116 = !DILocation(line: 217, column: 2, scope: !12108)
!12117 = !DILocation(line: 218, column: 1, scope: !12108)
!12118 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1962, file: !1962, line: 227, type: !12097, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12119)
!12119 = !{!12120, !12121, !12122}
!12120 = !DILocalVariable(name: "dev", arg: 1, scope: !12118, file: !1962, line: 227, type: !1868)
!12121 = !DILocalVariable(name: "databits", arg: 2, scope: !12118, file: !1962, line: 228, type: !111)
!12122 = !DILocalVariable(name: "config", scope: !12118, file: !1962, line: 230, type: !11717)
!12123 = !DILocation(line: 0, scope: !12118)
!12124 = !DILocation(line: 230, column: 48, scope: !12118)
!12125 = !DILocation(line: 232, column: 32, scope: !12118)
!12126 = !DILocation(line: 232, column: 2, scope: !12118)
!12127 = !DILocation(line: 233, column: 1, scope: !12118)
!12128 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1962, file: !1962, line: 242, type: !12097, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12129)
!12129 = !{!12130, !12131, !12132}
!12130 = !DILocalVariable(name: "dev", arg: 1, scope: !12128, file: !1962, line: 242, type: !1868)
!12131 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12128, file: !1962, line: 243, type: !111)
!12132 = !DILocalVariable(name: "config", scope: !12128, file: !1962, line: 245, type: !11717)
!12133 = !DILocation(line: 0, scope: !12128)
!12134 = !DILocation(line: 245, column: 48, scope: !12128)
!12135 = !DILocation(line: 247, column: 33, scope: !12128)
!12136 = !DILocation(line: 247, column: 2, scope: !12128)
!12137 = !DILocation(line: 248, column: 1, scope: !12128)
!12138 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1962, file: !1962, line: 107, type: !12097, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12139)
!12139 = !{!12140, !12141, !12142, !12143, !12144}
!12140 = !DILocalVariable(name: "dev", arg: 1, scope: !12138, file: !1962, line: 107, type: !1868)
!12141 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12138, file: !1962, line: 107, type: !111)
!12142 = !DILocalVariable(name: "config", scope: !12138, file: !1962, line: 109, type: !11717)
!12143 = !DILocalVariable(name: "data", scope: !12138, file: !1962, line: 110, type: !11840)
!12144 = !DILocalVariable(name: "clock_rate", scope: !12138, file: !1962, line: 112, type: !111)
!12145 = !DILocation(line: 0, scope: !12138)
!12146 = !DILocation(line: 109, column: 48, scope: !12138)
!12147 = !DILocation(line: 110, column: 38, scope: !12138)
!12148 = !DILocation(line: 112, column: 2, scope: !12138)
!12149 = !DILocation(line: 123, column: 36, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12151, file: !1962, line: 123, column: 7)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !1962, line: 122, column: 9)
!12152 = distinct !DILexicalBlock(scope: !12138, file: !1962, line: 115, column: 6)
!12153 = !DILocation(line: 124, column: 42, scope: !12150)
!12154 = !DILocation(line: 123, column: 7, scope: !12150)
!12155 = !DILocation(line: 125, column: 22, scope: !12150)
!12156 = !DILocation(line: 123, column: 7, scope: !12151)
!12157 = !DILocation(line: 126, column: 4, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !1962, line: 126, column: 4)
!12159 = distinct !DILexicalBlock(scope: !12160, file: !1962, line: 126, column: 4)
!12160 = distinct !DILexicalBlock(scope: !12161, file: !1962, line: 126, column: 4)
!12161 = distinct !DILexicalBlock(scope: !12162, file: !1962, line: 126, column: 4)
!12162 = distinct !DILexicalBlock(scope: !12150, file: !1962, line: 125, column: 27)
!12163 = !DILocation(line: 127, column: 4, scope: !12162)
!12164 = !DILocation(line: 176, column: 36, scope: !12138)
!12165 = !DILocation(line: 176, column: 3, scope: !12138)
!12166 = !DILocation(line: 179, column: 32, scope: !12138)
!12167 = !DILocation(line: 180, column: 10, scope: !12138)
!12168 = !DILocation(line: 179, column: 3, scope: !12138)
!12169 = !DILocation(line: 189, column: 3, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !1962, line: 189, column: 3)
!12171 = distinct !DILexicalBlock(scope: !12138, file: !1962, line: 189, column: 3)
!12172 = !DILocation(line: 189, column: 3, scope: !12171)
!12173 = !DILocation(line: 189, column: 3, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12170, file: !1962, line: 189, column: 3)
!12175 = !DILocation(line: 195, column: 1, scope: !12138)
!12176 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12026, file: !12026, line: 409, type: !12089, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12177)
!12177 = !{!12178}
!12178 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12176, file: !12026, line: 409, type: !1909)
!12179 = !DILocation(line: 0, scope: !12176)
!12180 = !DILocation(line: 411, column: 3, scope: !12176)
!12181 = !DILocation(line: 412, column: 1, scope: !12176)
!12182 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1380, file: !1380, line: 216, type: !1942, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12183)
!12183 = !{!12184, !12185, !12186, !12187}
!12184 = !DILocalVariable(name: "dev", arg: 1, scope: !12182, file: !1380, line: 216, type: !1868)
!12185 = !DILocalVariable(name: "sys", arg: 2, scope: !12182, file: !1380, line: 217, type: !1455)
!12186 = !DILocalVariable(name: "rate", arg: 3, scope: !12182, file: !1380, line: 218, type: !1411)
!12187 = !DILocalVariable(name: "api", scope: !12182, file: !1380, line: 220, type: !1920)
!12188 = !DILocation(line: 0, scope: !12182)
!12189 = !DILocation(line: 221, column: 49, scope: !12182)
!12190 = !DILocation(line: 223, column: 11, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12182, file: !1380, line: 223, column: 6)
!12192 = !DILocation(line: 223, column: 20, scope: !12191)
!12193 = !DILocation(line: 223, column: 6, scope: !12182)
!12194 = !DILocation(line: 227, column: 9, scope: !12182)
!12195 = !DILocation(line: 227, column: 2, scope: !12182)
!12196 = !DILocation(line: 228, column: 1, scope: !12182)
!12197 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !7591, file: !7591, line: 175, type: !7592, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12198)
!12198 = !{!12199}
!12199 = !DILocalVariable(name: "level", arg: 1, scope: !12197, file: !7591, line: 175, type: !103)
!12200 = !DILocation(line: 0, scope: !12197)
!12201 = !DILocation(line: 177, column: 2, scope: !12197)
!12202 = !DILocation(line: 189, column: 1, scope: !12197)
!12203 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12026, file: !12026, line: 614, type: !12204, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12206)
!12204 = !DISubroutineType(types: !12205)
!12205 = !{null, !1909, !111}
!12206 = !{!12207, !12208}
!12207 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12203, file: !12026, line: 614, type: !1909)
!12208 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12203, file: !12026, line: 614, type: !111)
!12209 = !DILocation(line: 0, scope: !12203)
!12210 = !DILocation(line: 616, column: 3, scope: !12203)
!12211 = !DILocation(line: 617, column: 1, scope: !12203)
!12212 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12026, file: !12026, line: 1019, type: !12213, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12215)
!12213 = !DISubroutineType(types: !12214)
!12214 = !{null, !1909, !111, !111, !111}
!12215 = !{!12216, !12217, !12218, !12219}
!12216 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12212, file: !12026, line: 1019, type: !1909)
!12217 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12212, file: !12026, line: 1019, type: !111)
!12218 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12212, file: !12026, line: 1019, type: !111)
!12219 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12212, file: !12026, line: 1020, type: !111)
!12220 = !DILocation(line: 0, scope: !12212)
!12221 = !DILocation(line: 1028, column: 30, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12223, file: !12026, line: 1027, column: 3)
!12223 = distinct !DILexicalBlock(scope: !12212, file: !12026, line: 1022, column: 7)
!12224 = !DILocation(line: 1028, column: 19, scope: !12222)
!12225 = !DILocation(line: 1028, column: 13, scope: !12222)
!12226 = !DILocation(line: 1028, column: 17, scope: !12222)
!12227 = !DILocation(line: 1030, column: 1, scope: !12212)
!12228 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12026, file: !12026, line: 948, type: !12204, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12229)
!12229 = !{!12230, !12231}
!12230 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12228, file: !12026, line: 948, type: !1909)
!12231 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12228, file: !12026, line: 948, type: !111)
!12232 = !DILocation(line: 0, scope: !12228)
!12233 = !DILocation(line: 950, column: 3, scope: !12228)
!12234 = !DILocation(line: 951, column: 1, scope: !12228)
!12235 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12026, file: !12026, line: 587, type: !12204, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12236)
!12236 = !{!12237, !12238}
!12237 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12235, file: !12026, line: 587, type: !1909)
!12238 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12235, file: !12026, line: 587, type: !111)
!12239 = !DILocation(line: 0, scope: !12235)
!12240 = !DILocation(line: 589, column: 3, scope: !12235)
!12241 = !DILocation(line: 590, column: 1, scope: !12235)
!12242 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12026, file: !12026, line: 804, type: !12204, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12243)
!12243 = !{!12244, !12245}
!12244 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12242, file: !12026, line: 804, type: !1909)
!12245 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12242, file: !12026, line: 804, type: !111)
!12246 = !DILocation(line: 0, scope: !12242)
!12247 = !DILocation(line: 806, column: 3, scope: !12242)
!12248 = !DILocation(line: 807, column: 1, scope: !12242)
!12249 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12026, file: !12026, line: 531, type: !12204, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12250)
!12250 = !{!12251, !12252}
!12251 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12249, file: !12026, line: 531, type: !1909)
!12252 = !DILocalVariable(name: "Parity", arg: 2, scope: !12249, file: !12026, line: 531, type: !111)
!12253 = !DILocation(line: 0, scope: !12249)
!12254 = !DILocation(line: 533, column: 3, scope: !12249)
!12255 = !DILocation(line: 534, column: 1, scope: !12249)
!12256 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12026, file: !12026, line: 1769, type: !12027, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12257)
!12257 = !{!12258}
!12258 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12256, file: !12026, line: 1769, type: !1909)
!12259 = !DILocation(line: 0, scope: !12256)
!12260 = !DILocation(line: 1771, column: 11, scope: !12256)
!12261 = !DILocation(line: 1771, column: 46, scope: !12256)
!12262 = !DILocation(line: 1771, column: 3, scope: !12256)
!12263 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12026, file: !12026, line: 1736, type: !12027, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12264)
!12264 = !{!12265}
!12265 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12263, file: !12026, line: 1736, type: !1909)
!12266 = !DILocation(line: 0, scope: !12263)
!12267 = !DILocation(line: 1738, column: 11, scope: !12263)
!12268 = !DILocation(line: 1738, column: 3, scope: !12263)
!12269 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12026, file: !12026, line: 1747, type: !12027, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12270)
!12270 = !{!12271}
!12271 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12269, file: !12026, line: 1747, type: !1909)
!12272 = !DILocation(line: 0, scope: !12269)
!12273 = !DILocation(line: 1749, column: 11, scope: !12269)
!12274 = !DILocation(line: 1749, column: 45, scope: !12269)
!12275 = !DILocation(line: 1749, column: 3, scope: !12269)
!12276 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12026, file: !12026, line: 1826, type: !12027, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12277)
!12277 = !{!12278}
!12278 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12276, file: !12026, line: 1826, type: !1909)
!12279 = !DILocation(line: 0, scope: !12276)
!12280 = !DILocation(line: 1828, column: 11, scope: !12276)
!12281 = !DILocation(line: 1828, column: 46, scope: !12276)
!12282 = !DILocation(line: 1828, column: 3, scope: !12276)
!12283 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12026, file: !12026, line: 1991, type: !12089, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12284)
!12284 = !{!12285}
!12285 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12283, file: !12026, line: 1991, type: !1909)
!12286 = !DILocation(line: 0, scope: !12283)
!12287 = !DILocation(line: 1993, column: 3, scope: !12283)
!12288 = !DILocation(line: 1994, column: 1, scope: !12283)
!12289 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12026, file: !12026, line: 1933, type: !12089, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12290)
!12290 = !{!12291, !12292}
!12291 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12289, file: !12026, line: 1933, type: !1909)
!12292 = !DILocalVariable(name: "tmpreg", scope: !12289, file: !12026, line: 1935, type: !777)
!12293 = !DILocation(line: 0, scope: !12289)
!12294 = !DILocation(line: 1935, column: 3, scope: !12289)
!12295 = !DILocation(line: 1935, column: 17, scope: !12289)
!12296 = !DILocation(line: 1936, column: 20, scope: !12289)
!12297 = !DILocation(line: 1936, column: 10, scope: !12289)
!12298 = !DILocation(line: 1937, column: 10, scope: !12289)
!12299 = !DILocation(line: 1938, column: 20, scope: !12289)
!12300 = !DILocation(line: 1938, column: 10, scope: !12289)
!12301 = !DILocation(line: 1939, column: 10, scope: !12289)
!12302 = !DILocation(line: 1940, column: 1, scope: !12289)
!12303 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12026, file: !12026, line: 1876, type: !12089, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12304)
!12304 = !{!12305, !12306}
!12305 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12303, file: !12026, line: 1876, type: !1909)
!12306 = !DILocalVariable(name: "tmpreg", scope: !12303, file: !12026, line: 1878, type: !777)
!12307 = !DILocation(line: 0, scope: !12303)
!12308 = !DILocation(line: 1878, column: 3, scope: !12303)
!12309 = !DILocation(line: 1878, column: 17, scope: !12303)
!12310 = !DILocation(line: 1879, column: 20, scope: !12303)
!12311 = !DILocation(line: 1879, column: 10, scope: !12303)
!12312 = !DILocation(line: 1880, column: 10, scope: !12303)
!12313 = !DILocation(line: 1881, column: 20, scope: !12303)
!12314 = !DILocation(line: 1881, column: 10, scope: !12303)
!12315 = !DILocation(line: 1882, column: 10, scope: !12303)
!12316 = !DILocation(line: 1883, column: 1, scope: !12303)
!12317 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12026, file: !12026, line: 1895, type: !12089, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12318)
!12318 = !{!12319, !12320}
!12319 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12317, file: !12026, line: 1895, type: !1909)
!12320 = !DILocalVariable(name: "tmpreg", scope: !12317, file: !12026, line: 1897, type: !777)
!12321 = !DILocation(line: 0, scope: !12317)
!12322 = !DILocation(line: 1897, column: 3, scope: !12317)
!12323 = !DILocation(line: 1897, column: 17, scope: !12317)
!12324 = !DILocation(line: 1898, column: 20, scope: !12317)
!12325 = !DILocation(line: 1898, column: 10, scope: !12317)
!12326 = !DILocation(line: 1899, column: 10, scope: !12317)
!12327 = !DILocation(line: 1900, column: 20, scope: !12317)
!12328 = !DILocation(line: 1900, column: 10, scope: !12317)
!12329 = !DILocation(line: 1901, column: 10, scope: !12317)
!12330 = !DILocation(line: 1902, column: 1, scope: !12317)
!12331 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12026, file: !12026, line: 1914, type: !12089, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12332)
!12332 = !{!12333, !12334}
!12333 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12331, file: !12026, line: 1914, type: !1909)
!12334 = !DILocalVariable(name: "tmpreg", scope: !12331, file: !12026, line: 1916, type: !777)
!12335 = !DILocation(line: 0, scope: !12331)
!12336 = !DILocation(line: 1916, column: 3, scope: !12331)
!12337 = !DILocation(line: 1916, column: 17, scope: !12331)
!12338 = !DILocation(line: 1917, column: 20, scope: !12331)
!12339 = !DILocation(line: 1917, column: 10, scope: !12331)
!12340 = !DILocation(line: 1918, column: 10, scope: !12331)
!12341 = !DILocation(line: 1919, column: 20, scope: !12331)
!12342 = !DILocation(line: 1919, column: 10, scope: !12331)
!12343 = !DILocation(line: 1920, column: 10, scope: !12331)
!12344 = !DILocation(line: 1921, column: 1, scope: !12331)
!12345 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12026, file: !12026, line: 1813, type: !12027, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12346)
!12346 = !{!12347}
!12347 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12345, file: !12026, line: 1813, type: !1909)
!12348 = !DILocation(line: 0, scope: !12345)
!12349 = !DILocation(line: 1815, column: 11, scope: !12345)
!12350 = !DILocation(line: 1815, column: 46, scope: !12345)
!12351 = !DILocation(line: 1815, column: 3, scope: !12345)
!12352 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12026, file: !12026, line: 2425, type: !12353, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12355)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{null, !1909, !166}
!12355 = !{!12356, !12357}
!12356 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12352, file: !12026, line: 2425, type: !1909)
!12357 = !DILocalVariable(name: "Value", arg: 2, scope: !12352, file: !12026, line: 2425, type: !166)
!12358 = !DILocation(line: 0, scope: !12352)
!12359 = !DILocation(line: 2427, column: 16, scope: !12352)
!12360 = !DILocation(line: 2427, column: 11, scope: !12352)
!12361 = !DILocation(line: 2427, column: 14, scope: !12352)
!12362 = !DILocation(line: 2428, column: 1, scope: !12352)
!12363 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12026, file: !12026, line: 1791, type: !12027, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12364)
!12364 = !{!12365}
!12365 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12363, file: !12026, line: 1791, type: !1909)
!12366 = !DILocation(line: 0, scope: !12363)
!12367 = !DILocation(line: 1793, column: 11, scope: !12363)
!12368 = !DILocation(line: 1793, column: 47, scope: !12363)
!12369 = !DILocation(line: 1793, column: 3, scope: !12363)
!12370 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12026, file: !12026, line: 2402, type: !12371, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12373)
!12371 = !DISubroutineType(types: !12372)
!12372 = !{!166, !1909}
!12373 = !{!12374}
!12374 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12370, file: !12026, line: 2402, type: !1909)
!12375 = !DILocation(line: 0, scope: !12370)
!12376 = !DILocation(line: 2404, column: 20, scope: !12370)
!12377 = !DILocation(line: 2404, column: 10, scope: !12370)
!12378 = !DILocation(line: 2404, column: 3, scope: !12370)
!12379 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1962, file: !1962, line: 1583, type: !1889, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12380)
!12380 = !{!12381, !12382, !12383, !12384, !12385, !12386}
!12381 = !DILocalVariable(name: "dev", arg: 1, scope: !12379, file: !1962, line: 1583, type: !1868)
!12382 = !DILocalVariable(name: "config", scope: !12379, file: !1962, line: 1585, type: !11717)
!12383 = !DILocalVariable(name: "data", scope: !12379, file: !1962, line: 1586, type: !11840)
!12384 = !DILocalVariable(name: "ll_parity", scope: !12379, file: !1962, line: 1587, type: !111)
!12385 = !DILocalVariable(name: "ll_datawidth", scope: !12379, file: !1962, line: 1588, type: !111)
!12386 = !DILocalVariable(name: "err", scope: !12379, file: !1962, line: 1589, type: !103)
!12387 = !DILocation(line: 0, scope: !12379)
!12388 = !DILocation(line: 1585, column: 48, scope: !12379)
!12389 = !DILocation(line: 1586, column: 38, scope: !12379)
!12390 = !DILocation(line: 1591, column: 2, scope: !12379)
!12391 = !DILocation(line: 1593, column: 29, scope: !12392)
!12392 = distinct !DILexicalBlock(scope: !12379, file: !1962, line: 1593, column: 6)
!12393 = !DILocation(line: 1593, column: 7, scope: !12392)
!12394 = !DILocation(line: 1593, column: 6, scope: !12379)
!12395 = !DILocation(line: 1594, column: 3, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12397, file: !1962, line: 1594, column: 3)
!12397 = distinct !DILexicalBlock(scope: !12398, file: !1962, line: 1594, column: 3)
!12398 = distinct !DILexicalBlock(scope: !12399, file: !1962, line: 1594, column: 3)
!12399 = distinct !DILexicalBlock(scope: !12400, file: !1962, line: 1594, column: 3)
!12400 = distinct !DILexicalBlock(scope: !12392, file: !1962, line: 1593, column: 37)
!12401 = !DILocation(line: 1595, column: 3, scope: !12400)
!12402 = !DILocation(line: 1599, column: 31, scope: !12379)
!12403 = !DILocation(line: 1599, column: 71, scope: !12379)
!12404 = !DILocation(line: 1599, column: 8, scope: !12379)
!12405 = !DILocation(line: 1600, column: 10, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12379, file: !1962, line: 1600, column: 6)
!12407 = !DILocation(line: 1600, column: 6, scope: !12379)
!12408 = !DILocation(line: 1601, column: 3, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12410, file: !1962, line: 1601, column: 3)
!12410 = distinct !DILexicalBlock(scope: !12411, file: !1962, line: 1601, column: 3)
!12411 = distinct !DILexicalBlock(scope: !12412, file: !1962, line: 1601, column: 3)
!12412 = distinct !DILexicalBlock(scope: !12413, file: !1962, line: 1601, column: 3)
!12413 = distinct !DILexicalBlock(scope: !12406, file: !1962, line: 1600, column: 16)
!12414 = !DILocation(line: 1602, column: 3, scope: !12413)
!12415 = !DILocation(line: 1616, column: 36, scope: !12379)
!12416 = !DILocation(line: 1616, column: 8, scope: !12379)
!12417 = !DILocation(line: 1617, column: 10, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12379, file: !1962, line: 1617, column: 6)
!12419 = !DILocation(line: 1617, column: 6, scope: !12379)
!12420 = !DILocation(line: 1621, column: 27, scope: !12379)
!12421 = !DILocation(line: 1621, column: 2, scope: !12379)
!12422 = !DILocation(line: 1624, column: 40, scope: !12379)
!12423 = !DILocation(line: 1624, column: 2, scope: !12379)
!12424 = !DILocation(line: 1630, column: 14, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12379, file: !1962, line: 1630, column: 6)
!12426 = !DILocation(line: 1630, column: 6, scope: !12379)
!12427 = !DILocation(line: 1640, column: 4, scope: !12428)
!12428 = distinct !DILexicalBlock(scope: !12429, file: !1962, line: 1640, column: 4)
!12429 = distinct !DILexicalBlock(scope: !12430, file: !1962, line: 1640, column: 4)
!12430 = distinct !DILexicalBlock(scope: !12431, file: !1962, line: 1640, column: 4)
!12431 = distinct !DILexicalBlock(scope: !12432, file: !1962, line: 1640, column: 4)
!12432 = distinct !DILexicalBlock(scope: !12433, file: !1962, line: 1639, column: 28)
!12433 = distinct !DILexicalBlock(scope: !12434, file: !1962, line: 1639, column: 7)
!12434 = distinct !DILexicalBlock(scope: !12435, file: !1962, line: 1638, column: 9)
!12435 = distinct !DILexicalBlock(scope: !12425, file: !1962, line: 1634, column: 13)
!12436 = !DILocation(line: 0, scope: !12425)
!12437 = !DILocation(line: 1649, column: 35, scope: !12379)
!12438 = !DILocation(line: 1649, column: 2, scope: !12379)
!12439 = !DILocation(line: 1654, column: 14, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12379, file: !1962, line: 1654, column: 6)
!12441 = !DILocation(line: 1654, column: 6, scope: !12379)
!12442 = !DILocation(line: 1655, column: 3, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12440, file: !1962, line: 1654, column: 31)
!12444 = !DILocation(line: 1656, column: 2, scope: !12443)
!12445 = !DILocation(line: 1659, column: 37, scope: !12379)
!12446 = !DILocation(line: 1659, column: 2, scope: !12379)
!12447 = !DILocation(line: 1662, column: 14, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12379, file: !1962, line: 1662, column: 6)
!12449 = !DILocation(line: 1662, column: 6, scope: !12379)
!12450 = !DILocation(line: 1663, column: 37, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12448, file: !1962, line: 1662, column: 27)
!12452 = !DILocation(line: 1663, column: 3, scope: !12451)
!12453 = !DILocation(line: 1664, column: 2, scope: !12451)
!12454 = !DILocation(line: 1684, column: 26, scope: !12379)
!12455 = !DILocation(line: 1684, column: 2, scope: !12379)
!12456 = !DILocation(line: 1722, column: 2, scope: !12379)
!12457 = !DILocation(line: 1724, column: 1, scope: !12379)
!12458 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1962, file: !1962, line: 651, type: !12459, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12461)
!12459 = !DISubroutineType(types: !12460)
!12460 = !{null, !1868}
!12461 = !{!12462, !12463, !12464}
!12462 = !DILocalVariable(name: "dev", arg: 1, scope: !12458, file: !1962, line: 651, type: !1868)
!12463 = !DILocalVariable(name: "data", scope: !12458, file: !1962, line: 653, type: !11840)
!12464 = !DILocalVariable(name: "clk", scope: !12458, file: !1962, line: 654, type: !12465)
!12465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!12466 = !DILocation(line: 0, scope: !12458)
!12467 = !DILocation(line: 653, column: 38, scope: !12458)
!12468 = !DILocation(line: 656, column: 8, scope: !12458)
!12469 = !DILocation(line: 656, column: 14, scope: !12458)
!12470 = !DILocation(line: 657, column: 1, scope: !12458)
!12471 = distinct !DISubprogram(name: "device_is_ready", scope: !9715, file: !9715, line: 47, type: !12472, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12474)
!12472 = !DISubroutineType(types: !12473)
!12473 = !{!122, !1868}
!12474 = !{!12475}
!12475 = !DILocalVariable(name: "dev", arg: 1, scope: !12471, file: !9715, line: 47, type: !1868)
!12476 = !DILocation(line: 0, scope: !12471)
!12477 = !DILocation(line: 55, column: 2, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12471, file: !9715, line: 55, column: 2)
!12479 = !{i64 2152506746}
!12480 = !DILocation(line: 56, column: 9, scope: !12471)
!12481 = !DILocation(line: 56, column: 2, scope: !12471)
!12482 = distinct !DISubprogram(name: "clock_control_on", scope: !1380, file: !1380, line: 123, type: !1927, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12483)
!12483 = !{!12484, !12485, !12486}
!12484 = !DILocalVariable(name: "dev", arg: 1, scope: !12482, file: !1380, line: 123, type: !1868)
!12485 = !DILocalVariable(name: "sys", arg: 2, scope: !12482, file: !1380, line: 124, type: !1455)
!12486 = !DILocalVariable(name: "api", scope: !12482, file: !1380, line: 126, type: !1920)
!12487 = !DILocation(line: 0, scope: !12482)
!12488 = !DILocation(line: 127, column: 49, scope: !12482)
!12489 = !DILocation(line: 129, column: 14, scope: !12482)
!12490 = !DILocation(line: 129, column: 9, scope: !12482)
!12491 = !DILocation(line: 129, column: 2, scope: !12482)
!12492 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !2007, file: !2007, line: 342, type: !12493, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12495)
!12493 = !DISubroutineType(types: !12494)
!12494 = !{!103, !2004, !166}
!12495 = !{!12496, !12497, !12498, !12499}
!12496 = !DILocalVariable(name: "config", arg: 1, scope: !12492, file: !2007, line: 342, type: !2004)
!12497 = !DILocalVariable(name: "id", arg: 2, scope: !12492, file: !2007, line: 343, type: !166)
!12498 = !DILocalVariable(name: "ret", scope: !12492, file: !2007, line: 345, type: !103)
!12499 = !DILocalVariable(name: "state", scope: !12492, file: !2007, line: 346, type: !2010)
!12500 = !DILocation(line: 0, scope: !12492)
!12501 = !DILocation(line: 346, column: 2, scope: !12492)
!12502 = !DILocation(line: 348, column: 8, scope: !12492)
!12503 = !DILocation(line: 349, column: 10, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12492, file: !2007, line: 349, column: 6)
!12505 = !DILocation(line: 349, column: 6, scope: !12492)
!12506 = !DILocation(line: 353, column: 44, scope: !12492)
!12507 = !DILocation(line: 353, column: 9, scope: !12492)
!12508 = !DILocation(line: 353, column: 2, scope: !12492)
!12509 = !DILocation(line: 354, column: 1, scope: !12492)
!12510 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12026, file: !12026, line: 496, type: !12204, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12511)
!12511 = !{!12512, !12513}
!12512 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12510, file: !12026, line: 496, type: !1909)
!12513 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12510, file: !12026, line: 496, type: !111)
!12514 = !DILocation(line: 0, scope: !12510)
!12515 = !DILocation(line: 498, column: 3, scope: !12510)
!12516 = !DILocation(line: 499, column: 1, scope: !12510)
!12517 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12026, file: !12026, line: 849, type: !12213, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12518)
!12518 = !{!12519, !12520, !12521, !12522}
!12519 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12517, file: !12026, line: 849, type: !1909)
!12520 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12517, file: !12026, line: 849, type: !111)
!12521 = !DILocalVariable(name: "Parity", arg: 3, scope: !12517, file: !12026, line: 849, type: !111)
!12522 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12517, file: !12026, line: 850, type: !111)
!12523 = !DILocation(line: 0, scope: !12517)
!12524 = !DILocation(line: 852, column: 3, scope: !12517)
!12525 = !DILocation(line: 853, column: 3, scope: !12517)
!12526 = !DILocation(line: 854, column: 1, scope: !12517)
!12527 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12026, file: !12026, line: 1336, type: !12089, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12528)
!12528 = !{!12529}
!12529 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12527, file: !12026, line: 1336, type: !1909)
!12530 = !DILocation(line: 0, scope: !12527)
!12531 = !DILocation(line: 1338, column: 3, scope: !12527)
!12532 = !DILocation(line: 1339, column: 1, scope: !12527)
!12533 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !2007, file: !2007, line: 316, type: !12534, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12536)
!12534 = !DISubroutineType(types: !12535)
!12535 = !{!103, !2004, !2010}
!12536 = !{!12537, !12538, !12539}
!12537 = !DILocalVariable(name: "config", arg: 1, scope: !12533, file: !2007, line: 317, type: !2004)
!12538 = !DILocalVariable(name: "state", arg: 2, scope: !12533, file: !2007, line: 318, type: !2010)
!12539 = !DILocalVariable(name: "reg", scope: !12533, file: !2007, line: 320, type: !22)
!12540 = !DILocation(line: 0, scope: !12533)
!12541 = !DILocation(line: 329, column: 39, scope: !12533)
!12542 = !DILocation(line: 329, column: 52, scope: !12533)
!12543 = !DILocation(line: 329, column: 9, scope: !12533)
!12544 = !DILocation(line: 329, column: 2, scope: !12533)
!12545 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !810, file: !810, line: 730, type: !12472, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1824, retainedNodes: !12546)
!12546 = !{!12547}
!12547 = !DILocalVariable(name: "dev", arg: 1, scope: !12545, file: !810, line: 730, type: !1868)
!12548 = !DILocation(line: 0, scope: !12545)
!12549 = !DILocation(line: 732, column: 9, scope: !12545)
!12550 = !DILocation(line: 732, column: 2, scope: !12545)
!12551 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !2142, file: !2142, line: 270, type: !2148, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12552)
!12552 = !{!12553}
!12553 = !DILocalVariable(name: "dev", arg: 1, scope: !12551, file: !2142, line: 270, type: !2150)
!12554 = !DILocation(line: 0, scope: !12551)
!12555 = !DILocation(line: 274, column: 2, scope: !12551)
!12556 = !DILocation(line: 275, column: 12, scope: !12551)
!12557 = !DILocation(line: 276, column: 15, scope: !12551)
!12558 = !DILocation(line: 277, column: 16, scope: !12551)
!12559 = !DILocation(line: 278, column: 15, scope: !12551)
!12560 = !DILocation(line: 279, column: 16, scope: !12551)
!12561 = !DILocation(line: 282, column: 2, scope: !12551)
!12562 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1005, file: !1005, line: 1638, type: !7874, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12563)
!12563 = !{!12564, !12565}
!12564 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12562, file: !1005, line: 1638, type: !1338)
!12565 = !DILocalVariable(name: "priority", arg: 2, scope: !12562, file: !1005, line: 1638, type: !111)
!12566 = !DILocation(line: 0, scope: !12562)
!12567 = !DILocation(line: 1646, column: 46, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !1005, line: 1645, column: 3)
!12569 = distinct !DILexicalBlock(scope: !12562, file: !1005, line: 1640, column: 7)
!12570 = !DILocation(line: 1648, column: 1, scope: !12562)
!12571 = distinct !DISubprogram(name: "sys_clock_isr", scope: !2142, file: !2142, line: 118, type: !7771, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12572)
!12572 = !{!12573, !12574}
!12573 = !DILocalVariable(name: "arg", arg: 1, scope: !12571, file: !2142, line: 118, type: !102)
!12574 = !DILocalVariable(name: "dticks", scope: !12571, file: !2142, line: 121, type: !111)
!12575 = !DILocation(line: 0, scope: !12571)
!12576 = !DILocation(line: 124, column: 2, scope: !12571)
!12577 = !DILocation(line: 129, column: 17, scope: !12571)
!12578 = !DILocation(line: 129, column: 14, scope: !12571)
!12579 = !DILocation(line: 130, column: 15, scope: !12571)
!12580 = !DILocation(line: 145, column: 27, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12582, file: !2142, line: 132, column: 16)
!12582 = distinct !DILexicalBlock(scope: !12571, file: !2142, line: 132, column: 6)
!12583 = !DILocation(line: 145, column: 25, scope: !12581)
!12584 = !DILocation(line: 145, column: 45, scope: !12581)
!12585 = !DILocation(line: 146, column: 30, scope: !12581)
!12586 = !DILocation(line: 146, column: 20, scope: !12581)
!12587 = !DILocation(line: 147, column: 3, scope: !12581)
!12588 = !DILocation(line: 151, column: 2, scope: !12571)
!12589 = !DILocation(line: 152, column: 1, scope: !12571)
!12590 = distinct !DISubprogram(name: "elapsed", scope: !2142, file: !2142, line: 85, type: !8837, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12591)
!12591 = !{!12592, !12593, !12594}
!12592 = !DILocalVariable(name: "val1", scope: !12590, file: !2142, line: 87, type: !111)
!12593 = !DILocalVariable(name: "ctrl", scope: !12590, file: !2142, line: 88, type: !111)
!12594 = !DILocalVariable(name: "val2", scope: !12590, file: !2142, line: 89, type: !111)
!12595 = !DILocation(line: 87, column: 27, scope: !12590)
!12596 = !DILocation(line: 0, scope: !12590)
!12597 = !DILocation(line: 88, column: 27, scope: !12590)
!12598 = !DILocation(line: 89, column: 27, scope: !12590)
!12599 = !DILocation(line: 105, column: 12, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12590, file: !2142, line: 105, column: 6)
!12601 = !DILocation(line: 106, column: 6, scope: !12600)
!12602 = !DILocation(line: 107, column: 16, scope: !12603)
!12603 = distinct !DILexicalBlock(scope: !12600, file: !2142, line: 106, column: 24)
!12604 = !DILocation(line: 111, column: 18, scope: !12603)
!12605 = !DILocation(line: 112, column: 2, scope: !12603)
!12606 = !DILocation(line: 114, column: 20, scope: !12590)
!12607 = !DILocation(line: 114, column: 30, scope: !12590)
!12608 = !DILocation(line: 114, column: 28, scope: !12590)
!12609 = !DILocation(line: 114, column: 2, scope: !12590)
!12610 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !2142, file: !2142, line: 154, type: !12611, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12613)
!12611 = !DISubroutineType(types: !12612)
!12612 = !{null, !320, !122}
!12613 = !{!12614, !12615, !12616, !12617, !12618, !12619, !12620, !12625, !12626}
!12614 = !DILocalVariable(name: "ticks", arg: 1, scope: !12610, file: !2142, line: 154, type: !320)
!12615 = !DILocalVariable(name: "idle", arg: 2, scope: !12610, file: !2142, line: 154, type: !122)
!12616 = !DILocalVariable(name: "delay", scope: !12610, file: !2142, line: 169, type: !111)
!12617 = !DILocalVariable(name: "val1", scope: !12610, file: !2142, line: 170, type: !111)
!12618 = !DILocalVariable(name: "val2", scope: !12610, file: !2142, line: 170, type: !111)
!12619 = !DILocalVariable(name: "last_load_", scope: !12610, file: !2142, line: 171, type: !111)
!12620 = !DILocalVariable(name: "key", scope: !12610, file: !2142, line: 176, type: !12621)
!12621 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !12622)
!12622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !12623)
!12623 = !{!12624}
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12622, file: !152, line: 33, baseType: !103, size: 32)
!12625 = !DILocalVariable(name: "pending", scope: !12610, file: !2142, line: 178, type: !111)
!12626 = !DILocalVariable(name: "unannounced", scope: !12610, file: !2142, line: 185, type: !111)
!12627 = !DILocation(line: 0, scope: !12610)
!12628 = !DILocation(line: 162, column: 49, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12610, file: !2142, line: 162, column: 6)
!12630 = !DILocation(line: 163, column: 17, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12629, file: !2142, line: 162, column: 78)
!12632 = !DILocation(line: 164, column: 13, scope: !12631)
!12633 = !DILocation(line: 165, column: 3, scope: !12631)
!12634 = !DILocation(line: 171, column: 24, scope: !12610)
!12635 = !DILocation(line: 173, column: 10, scope: !12610)
!12636 = !DILocation(line: 174, column: 10, scope: !12610)
!12637 = !DILocalVariable(name: "l", arg: 1, scope: !12638, file: !152, line: 136, type: !12641)
!12638 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !12639, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12642)
!12639 = !DISubroutineType(types: !12640)
!12640 = !{!12621, !12641}
!12641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 32)
!12642 = !{!12637, !12643}
!12643 = !DILocalVariable(name: "k", scope: !12638, file: !152, line: 139, type: !12621)
!12644 = !DILocation(line: 0, scope: !12638, inlinedAt: !12645)
!12645 = distinct !DILocation(line: 176, column: 25, scope: !12610)
!12646 = !DILocation(line: 55, column: 2, scope: !12647, inlinedAt: !12651)
!12647 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12648)
!12648 = !{!12649, !12650}
!12649 = !DILocalVariable(name: "key", scope: !12647, file: !7496, line: 44, type: !32)
!12650 = !DILocalVariable(name: "tmp", scope: !12647, file: !7496, line: 53, type: !32)
!12651 = distinct !DILocation(line: 145, column: 10, scope: !12638, inlinedAt: !12645)
!12652 = !{i64 1621934}
!12653 = !DILocation(line: 0, scope: !12647, inlinedAt: !12651)
!12654 = !DILocation(line: 148, column: 2, scope: !12655, inlinedAt: !12645)
!12655 = distinct !DILexicalBlock(scope: !12656, file: !152, line: 148, column: 2)
!12656 = distinct !DILexicalBlock(scope: !12638, file: !152, line: 148, column: 2)
!12657 = !DILocation(line: 148, column: 2, scope: !12656, inlinedAt: !12645)
!12658 = !DILocation(line: 148, column: 2, scope: !12659, inlinedAt: !12645)
!12659 = distinct !DILexicalBlock(scope: !12655, file: !152, line: 148, column: 2)
!12660 = !DILocation(line: 160, column: 2, scope: !12638, inlinedAt: !12645)
!12661 = !DILocation(line: 178, column: 21, scope: !12610)
!12662 = !DILocation(line: 180, column: 18, scope: !12610)
!12663 = !DILocation(line: 182, column: 14, scope: !12610)
!12664 = !DILocation(line: 183, column: 15, scope: !12610)
!12665 = !DILocation(line: 185, column: 39, scope: !12610)
!12666 = !DILocation(line: 185, column: 37, scope: !12610)
!12667 = !DILocation(line: 187, column: 27, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12610, file: !2142, line: 187, column: 6)
!12669 = !DILocation(line: 187, column: 6, scope: !12610)
!12670 = !DILocation(line: 202, column: 27, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12668, file: !2142, line: 195, column: 9)
!12672 = !DILocation(line: 202, column: 48, scope: !12671)
!12673 = !DILocation(line: 203, column: 9, scope: !12671)
!12674 = !DILocation(line: 204, column: 11, scope: !12671)
!12675 = !DILocation(line: 205, column: 13, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12671, file: !2142, line: 205, column: 7)
!12677 = !DILocation(line: 205, column: 7, scope: !12671)
!12678 = !DILocation(line: 0, scope: !12668)
!12679 = !DILocation(line: 212, column: 18, scope: !12610)
!12680 = !DILocation(line: 214, column: 28, scope: !12610)
!12681 = !DILocation(line: 214, column: 16, scope: !12610)
!12682 = !DILocation(line: 215, column: 15, scope: !12610)
!12683 = !DILocation(line: 227, column: 11, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12610, file: !2142, line: 227, column: 6)
!12685 = !DILocation(line: 227, column: 6, scope: !12610)
!12686 = !DILocation(line: 228, column: 15, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12684, file: !2142, line: 227, column: 19)
!12688 = !DILocation(line: 228, column: 38, scope: !12687)
!12689 = !DILocation(line: 228, column: 24, scope: !12687)
!12690 = !DILocation(line: 229, column: 2, scope: !12687)
!12691 = !DILocation(line: 230, column: 24, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12684, file: !2142, line: 229, column: 9)
!12693 = !DILocation(line: 230, column: 15, scope: !12692)
!12694 = !DILocation(line: 0, scope: !12684)
!12695 = !DILocalVariable(name: "key", arg: 2, scope: !12696, file: !152, line: 190, type: !12621)
!12696 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !12697, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12699)
!12697 = !DISubroutineType(types: !12698)
!12698 = !{null, !12641, !12621}
!12699 = !{!12700, !12695}
!12700 = !DILocalVariable(name: "l", arg: 1, scope: !12696, file: !152, line: 189, type: !12641)
!12701 = !DILocation(line: 0, scope: !12696, inlinedAt: !12702)
!12702 = distinct !DILocation(line: 232, column: 2, scope: !12610)
!12703 = !DILocation(line: 194, column: 2, scope: !12704, inlinedAt: !12702)
!12704 = distinct !DILexicalBlock(scope: !12705, file: !152, line: 194, column: 2)
!12705 = distinct !DILexicalBlock(scope: !12696, file: !152, line: 194, column: 2)
!12706 = !DILocation(line: 194, column: 2, scope: !12705, inlinedAt: !12702)
!12707 = !DILocation(line: 194, column: 2, scope: !12708, inlinedAt: !12702)
!12708 = distinct !DILexicalBlock(scope: !12704, file: !152, line: 194, column: 2)
!12709 = !DILocalVariable(name: "key", arg: 1, scope: !12710, file: !7496, line: 84, type: !32)
!12710 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12711)
!12711 = !{!12709}
!12712 = !DILocation(line: 0, scope: !12710, inlinedAt: !12713)
!12713 = distinct !DILocation(line: 215, column: 2, scope: !12696, inlinedAt: !12702)
!12714 = !DILocation(line: 95, column: 2, scope: !12710, inlinedAt: !12713)
!12715 = !{i64 1622751}
!12716 = !DILocation(line: 234, column: 1, scope: !12610)
!12717 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !2142, file: !2142, line: 236, type: !8837, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12718)
!12718 = !{!12719, !12720}
!12719 = !DILocalVariable(name: "key", scope: !12717, file: !2142, line: 242, type: !12621)
!12720 = !DILocalVariable(name: "cyc", scope: !12717, file: !2142, line: 243, type: !111)
!12721 = !DILocation(line: 0, scope: !12638, inlinedAt: !12722)
!12722 = distinct !DILocation(line: 242, column: 25, scope: !12717)
!12723 = !DILocation(line: 55, column: 2, scope: !12647, inlinedAt: !12724)
!12724 = distinct !DILocation(line: 145, column: 10, scope: !12638, inlinedAt: !12722)
!12725 = !DILocation(line: 0, scope: !12647, inlinedAt: !12724)
!12726 = !DILocation(line: 148, column: 2, scope: !12655, inlinedAt: !12722)
!12727 = !DILocation(line: 148, column: 2, scope: !12656, inlinedAt: !12722)
!12728 = !DILocation(line: 148, column: 2, scope: !12659, inlinedAt: !12722)
!12729 = !DILocation(line: 160, column: 2, scope: !12638, inlinedAt: !12722)
!12730 = !DILocation(line: 0, scope: !12717)
!12731 = !DILocation(line: 243, column: 17, scope: !12717)
!12732 = !DILocation(line: 243, column: 29, scope: !12717)
!12733 = !DILocation(line: 243, column: 43, scope: !12717)
!12734 = !DILocation(line: 0, scope: !12696, inlinedAt: !12735)
!12735 = distinct !DILocation(line: 245, column: 2, scope: !12717)
!12736 = !DILocation(line: 194, column: 2, scope: !12704, inlinedAt: !12735)
!12737 = !DILocation(line: 194, column: 2, scope: !12705, inlinedAt: !12735)
!12738 = !DILocation(line: 194, column: 2, scope: !12708, inlinedAt: !12735)
!12739 = !DILocation(line: 243, column: 27, scope: !12717)
!12740 = !DILocation(line: 243, column: 41, scope: !12717)
!12741 = !DILocation(line: 0, scope: !12710, inlinedAt: !12742)
!12742 = distinct !DILocation(line: 215, column: 2, scope: !12696, inlinedAt: !12735)
!12743 = !DILocation(line: 95, column: 2, scope: !12710, inlinedAt: !12742)
!12744 = !DILocation(line: 246, column: 13, scope: !12717)
!12745 = !DILocation(line: 246, column: 2, scope: !12717)
!12746 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !2142, file: !2142, line: 249, type: !8837, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !12747)
!12747 = !{!12748, !12749}
!12748 = !DILocalVariable(name: "key", scope: !12746, file: !2142, line: 251, type: !12621)
!12749 = !DILocalVariable(name: "ret", scope: !12746, file: !2142, line: 252, type: !111)
!12750 = !DILocation(line: 0, scope: !12638, inlinedAt: !12751)
!12751 = distinct !DILocation(line: 251, column: 25, scope: !12746)
!12752 = !DILocation(line: 55, column: 2, scope: !12647, inlinedAt: !12753)
!12753 = distinct !DILocation(line: 145, column: 10, scope: !12638, inlinedAt: !12751)
!12754 = !DILocation(line: 0, scope: !12647, inlinedAt: !12753)
!12755 = !DILocation(line: 148, column: 2, scope: !12655, inlinedAt: !12751)
!12756 = !DILocation(line: 148, column: 2, scope: !12656, inlinedAt: !12751)
!12757 = !DILocation(line: 148, column: 2, scope: !12659, inlinedAt: !12751)
!12758 = !DILocation(line: 160, column: 2, scope: !12638, inlinedAt: !12751)
!12759 = !DILocation(line: 0, scope: !12746)
!12760 = !DILocation(line: 252, column: 17, scope: !12746)
!12761 = !DILocation(line: 252, column: 29, scope: !12746)
!12762 = !DILocation(line: 0, scope: !12696, inlinedAt: !12763)
!12763 = distinct !DILocation(line: 254, column: 2, scope: !12746)
!12764 = !DILocation(line: 194, column: 2, scope: !12704, inlinedAt: !12763)
!12765 = !DILocation(line: 194, column: 2, scope: !12705, inlinedAt: !12763)
!12766 = !DILocation(line: 194, column: 2, scope: !12708, inlinedAt: !12763)
!12767 = !DILocation(line: 252, column: 27, scope: !12746)
!12768 = !DILocation(line: 0, scope: !12710, inlinedAt: !12769)
!12769 = distinct !DILocation(line: 215, column: 2, scope: !12696, inlinedAt: !12763)
!12770 = !DILocation(line: 95, column: 2, scope: !12710, inlinedAt: !12769)
!12771 = !DILocation(line: 255, column: 2, scope: !12746)
!12772 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !2142, file: !2142, line: 258, type: !323, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !2512)
!12773 = !DILocation(line: 260, column: 6, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12772, file: !2142, line: 260, column: 6)
!12775 = !DILocation(line: 260, column: 16, scope: !12774)
!12776 = !DILocation(line: 260, column: 6, scope: !12772)
!12777 = !DILocation(line: 261, column: 17, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12774, file: !2142, line: 260, column: 34)
!12779 = !DILocation(line: 262, column: 2, scope: !12778)
!12780 = !DILocation(line: 263, column: 1, scope: !12772)
!12781 = distinct !DISubprogram(name: "sys_clock_disable", scope: !2142, file: !2142, line: 265, type: !323, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2064, retainedNodes: !2512)
!12782 = !DILocation(line: 267, column: 16, scope: !12781)
!12783 = !DILocation(line: 268, column: 1, scope: !12781)
!12784 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !12785, file: !12785, line: 9, type: !12786, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3446, retainedNodes: !12809)
!12785 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12786 = !DISubroutineType(types: !12787)
!12787 = !{!103, !12788, !166, !12808}
!12788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12789, size: 32)
!12789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12790)
!12790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !2007, line: 60, size: 64, elements: !12791)
!12791 = !{!12792, !12807}
!12792 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !12790, file: !2007, line: 69, baseType: !12793, size: 32)
!12793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12794, size: 32)
!12794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12795)
!12795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !2007, line: 50, size: 64, elements: !12796)
!12796 = !{!12797, !12805, !12806}
!12797 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !12795, file: !2007, line: 52, baseType: !12798, size: 32)
!12798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12799, size: 32)
!12799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12800)
!12800 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2018, line: 37, baseType: !12801)
!12801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2018, line: 32, size: 64, elements: !12802)
!12802 = !{!12803, !12804}
!12803 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12801, file: !2018, line: 34, baseType: !111, size: 32)
!12804 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12801, file: !2018, line: 36, baseType: !111, size: 32, offset: 32)
!12805 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !12795, file: !2007, line: 54, baseType: !166, size: 8, offset: 32)
!12806 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12795, file: !2007, line: 56, baseType: !166, size: 8, offset: 40)
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !12790, file: !2007, line: 71, baseType: !166, size: 8, offset: 32)
!12808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12793, size: 32)
!12809 = !{!12810, !12811, !12812}
!12810 = !DILocalVariable(name: "config", arg: 1, scope: !12784, file: !12785, line: 9, type: !12788)
!12811 = !DILocalVariable(name: "id", arg: 2, scope: !12784, file: !12785, line: 9, type: !166)
!12812 = !DILocalVariable(name: "state", arg: 3, scope: !12784, file: !12785, line: 10, type: !12808)
!12813 = !DILocation(line: 0, scope: !12784)
!12814 = !DILocation(line: 12, column: 20, scope: !12784)
!12815 = !DILocation(line: 13, column: 27, scope: !12784)
!12816 = !DILocation(line: 13, column: 42, scope: !12784)
!12817 = !DILocation(line: 13, column: 19, scope: !12784)
!12818 = !DILocation(line: 13, column: 16, scope: !12784)
!12819 = !DILocation(line: 13, column: 2, scope: !12784)
!12820 = distinct !{!12820, !12819, !12821}
!12821 = !DILocation(line: 19, column: 2, scope: !12784)
!12822 = !DILocation(line: 14, column: 23, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12824, file: !12785, line: 14, column: 7)
!12824 = distinct !DILexicalBlock(scope: !12784, file: !12785, line: 13, column: 54)
!12825 = !DILocation(line: 14, column: 10, scope: !12823)
!12826 = !DILocation(line: 18, column: 11, scope: !12824)
!12827 = !DILocation(line: 14, column: 7, scope: !12824)
!12828 = !DILocation(line: 22, column: 1, scope: !12784)
!12829 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2260, file: !2260, line: 193, type: !12830, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !12839)
!12830 = !DISubroutineType(types: !12831)
!12831 = !{!103, !12832, !166, !22}
!12832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12833, size: 32)
!12833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12834)
!12834 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !2018, line: 37, baseType: !12835)
!12835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !2018, line: 32, size: 64, elements: !12836)
!12836 = !{!12837, !12838}
!12837 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !12835, file: !2018, line: 34, baseType: !111, size: 32)
!12838 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !12835, file: !2018, line: 36, baseType: !111, size: 32, offset: 32)
!12839 = !{!12840, !12841, !12842, !12843, !12844, !12845, !12846, !12847, !12849}
!12840 = !DILocalVariable(name: "pins", arg: 1, scope: !12829, file: !2260, line: 193, type: !12832)
!12841 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !12829, file: !2260, line: 193, type: !166)
!12842 = !DILocalVariable(name: "reg", arg: 3, scope: !12829, file: !2260, line: 194, type: !22)
!12843 = !DILocalVariable(name: "pin", scope: !12829, file: !2260, line: 196, type: !111)
!12844 = !DILocalVariable(name: "mux", scope: !12829, file: !2260, line: 196, type: !111)
!12845 = !DILocalVariable(name: "pin_cgf", scope: !12829, file: !2260, line: 197, type: !111)
!12846 = !DILocalVariable(name: "ret", scope: !12829, file: !2260, line: 198, type: !103)
!12847 = !DILocalVariable(name: "i", scope: !12848, file: !2260, line: 209, type: !166)
!12848 = distinct !DILexicalBlock(scope: !12829, file: !2260, line: 209, column: 2)
!12849 = !DILocalVariable(name: "gpio_out", scope: !12850, file: !2260, line: 239, type: !111)
!12850 = distinct !DILexicalBlock(scope: !12851, file: !2260, line: 238, column: 55)
!12851 = distinct !DILexicalBlock(scope: !12852, file: !2260, line: 238, column: 14)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !2260, line: 236, column: 14)
!12853 = distinct !DILexicalBlock(scope: !12854, file: !2260, line: 234, column: 7)
!12854 = distinct !DILexicalBlock(scope: !12855, file: !2260, line: 209, column: 41)
!12855 = distinct !DILexicalBlock(scope: !12848, file: !2260, line: 209, column: 2)
!12856 = !DILocation(line: 0, scope: !12829)
!12857 = !DILocation(line: 0, scope: !12848)
!12858 = !DILocation(line: 209, column: 25, scope: !12855)
!12859 = !DILocation(line: 209, column: 2, scope: !12848)
!12860 = distinct !{!12860, !12859, !12861}
!12861 = !DILocation(line: 259, column: 2, scope: !12848)
!12862 = !DILocation(line: 210, column: 17, scope: !12854)
!12863 = !DILocation(line: 234, column: 7, scope: !12853)
!12864 = !DILocation(line: 234, column: 33, scope: !12853)
!12865 = !DILocation(line: 234, column: 7, scope: !12854)
!12866 = !DILocation(line: 235, column: 22, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12853, file: !2260, line: 234, column: 49)
!12868 = !DILocation(line: 235, column: 29, scope: !12867)
!12869 = !DILocation(line: 236, column: 3, scope: !12867)
!12870 = !DILocation(line: 236, column: 14, scope: !12853)
!12871 = !DILocation(line: 239, column: 32, scope: !12850)
!12872 = !DILocation(line: 0, scope: !12850)
!12873 = !DILocation(line: 241, column: 8, scope: !12850)
!12874 = !DILocation(line: 246, column: 3, scope: !12850)
!12875 = !DILocation(line: 252, column: 9, scope: !12854)
!12876 = !DILocation(line: 255, column: 9, scope: !12854)
!12877 = !DILocation(line: 256, column: 11, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12854, file: !2260, line: 256, column: 7)
!12879 = !DILocation(line: 209, column: 37, scope: !12855)
!12880 = !DILocation(line: 256, column: 7, scope: !12854)
!12881 = !DILocation(line: 262, column: 1, scope: !12829)
!12882 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2260, file: !2260, line: 176, type: !12883, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !12885)
!12883 = !DISubroutineType(types: !12884)
!12884 = !{!103, !111, !111, !111}
!12885 = !{!12886, !12887, !12888, !12889}
!12886 = !DILocalVariable(name: "pin", arg: 1, scope: !12882, file: !2260, line: 176, type: !111)
!12887 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !12882, file: !2260, line: 176, type: !111)
!12888 = !DILocalVariable(name: "pin_func", arg: 3, scope: !12882, file: !2260, line: 176, type: !111)
!12889 = !DILocalVariable(name: "port_device", scope: !12882, file: !2260, line: 178, type: !2190)
!12890 = !DILocation(line: 0, scope: !12882)
!12891 = !DILocation(line: 180, column: 22, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12882, file: !2260, line: 180, column: 6)
!12893 = !DILocation(line: 180, column: 6, scope: !12882)
!12894 = !DILocation(line: 180, column: 6, scope: !12892)
!12895 = !DILocation(line: 184, column: 16, scope: !12882)
!12896 = !DILocation(line: 186, column: 19, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12882, file: !2260, line: 186, column: 6)
!12898 = !DILocation(line: 186, column: 28, scope: !12897)
!12899 = !DILocation(line: 186, column: 33, scope: !12897)
!12900 = !DILocation(line: 186, column: 6, scope: !12882)
!12901 = !DILocation(line: 190, column: 43, scope: !12882)
!12902 = !DILocation(line: 190, column: 9, scope: !12882)
!12903 = !DILocation(line: 190, column: 2, scope: !12882)
!12904 = !DILocation(line: 191, column: 1, scope: !12882)
!12905 = distinct !DISubprogram(name: "device_is_ready", scope: !9715, file: !9715, line: 47, type: !12906, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !12908)
!12906 = !DISubroutineType(types: !12907)
!12907 = !{!122, !2190}
!12908 = !{!12909}
!12909 = !DILocalVariable(name: "dev", arg: 1, scope: !12905, file: !9715, line: 47, type: !2190)
!12910 = !DILocation(line: 0, scope: !12905)
!12911 = !DILocation(line: 55, column: 2, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12905, file: !9715, line: 55, column: 2)
!12913 = !{i64 2148855943}
!12914 = !DILocation(line: 56, column: 9, scope: !12905)
!12915 = !DILocation(line: 56, column: 2, scope: !12905)
!12916 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !810, file: !810, line: 730, type: !12906, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2179, retainedNodes: !12917)
!12917 = !{!12918}
!12918 = !DILocalVariable(name: "dev", arg: 1, scope: !12916, file: !810, line: 730, type: !2190)
!12919 = !DILocation(line: 0, scope: !12916)
!12920 = !DILocation(line: 732, column: 9, scope: !12916)
!12921 = !DILocation(line: 732, column: 2, scope: !12916)
!12922 = distinct !DISubprogram(name: "SystemInit", scope: !2290, file: !2290, line: 160, type: !323, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !2512)
!12923 = !DILocation(line: 170, column: 1, scope: !12922)
!12924 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2290, file: !2290, line: 210, type: !323, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2266, retainedNodes: !12925)
!12925 = !{!12926, !12927, !12928, !12929, !12930}
!12926 = !DILocalVariable(name: "tmp", scope: !12924, file: !2290, line: 212, type: !111)
!12927 = !DILocalVariable(name: "pllmul", scope: !12924, file: !2290, line: 212, type: !111)
!12928 = !DILocalVariable(name: "plldiv", scope: !12924, file: !2290, line: 212, type: !111)
!12929 = !DILocalVariable(name: "pllsource", scope: !12924, file: !2290, line: 212, type: !111)
!12930 = !DILocalVariable(name: "msirange", scope: !12924, file: !2290, line: 212, type: !111)
!12931 = !DILocation(line: 0, scope: !12924)
!12932 = !DILocation(line: 215, column: 14, scope: !12924)
!12933 = !DILocation(line: 217, column: 3, scope: !12924)
!12934 = !DILocation(line: 220, column: 24, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12924, file: !2290, line: 218, column: 3)
!12936 = !DILocation(line: 220, column: 52, scope: !12935)
!12937 = !DILocation(line: 221, column: 32, scope: !12935)
!12938 = !DILocation(line: 222, column: 7, scope: !12935)
!12939 = !DILocation(line: 228, column: 7, scope: !12935)
!12940 = !DILocation(line: 231, column: 21, scope: !12935)
!12941 = !DILocation(line: 232, column: 21, scope: !12935)
!12942 = !DILocation(line: 233, column: 36, scope: !12935)
!12943 = !DILocation(line: 233, column: 16, scope: !12935)
!12944 = !DILocation(line: 234, column: 24, scope: !12935)
!12945 = !DILocation(line: 234, column: 31, scope: !12935)
!12946 = !DILocation(line: 236, column: 24, scope: !12935)
!12947 = !DILocation(line: 236, column: 29, scope: !12935)
!12948 = !DILocation(line: 238, column: 21, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12935, file: !2290, line: 238, column: 11)
!12950 = !DILocation(line: 238, column: 11, scope: !12935)
!12951 = !DILocation(line: 241, column: 41, scope: !12952)
!12952 = distinct !DILexicalBlock(scope: !12949, file: !2290, line: 239, column: 7)
!12953 = !DILocation(line: 241, column: 51, scope: !12952)
!12954 = !DILocation(line: 242, column: 7, scope: !12952)
!12955 = !DILocation(line: 246, column: 41, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12949, file: !2290, line: 244, column: 7)
!12957 = !DILocation(line: 246, column: 51, scope: !12956)
!12958 = !DILocation(line: 0, scope: !12935)
!12959 = !DILocation(line: 256, column: 30, scope: !12924)
!12960 = !DILocation(line: 256, column: 52, scope: !12924)
!12961 = !DILocation(line: 256, column: 9, scope: !12924)
!12962 = !DILocation(line: 258, column: 19, scope: !12924)
!12963 = !DILocation(line: 259, column: 1, scope: !12924)
!12964 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !12965, file: !12965, line: 228, type: !12966, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !12969)
!12965 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12966 = !DISubroutineType(types: !12967)
!12967 = !{!12968}
!12968 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3452, line: 45, baseType: !3451)
!12969 = !{!12970, !12971}
!12970 = !DILocalVariable(name: "tickstart", scope: !12964, file: !12965, line: 230, type: !111)
!12971 = !DILocalVariable(name: "status", scope: !12964, file: !12965, line: 231, type: !12968)
!12972 = !DILocation(line: 234, column: 3, scope: !12964)
!12973 = !DILocation(line: 238, column: 3, scope: !12964)
!12974 = !DILocation(line: 241, column: 15, scope: !12964)
!12975 = !DILocation(line: 0, scope: !12964)
!12976 = !DILocation(line: 244, column: 3, scope: !12964)
!12977 = !DILocation(line: 244, column: 10, scope: !12964)
!12978 = !DILocation(line: 244, column: 43, scope: !12964)
!12979 = !DILocation(line: 246, column: 10, scope: !12980)
!12980 = distinct !DILexicalBlock(scope: !12981, file: !12965, line: 246, column: 9)
!12981 = distinct !DILexicalBlock(scope: !12964, file: !12965, line: 245, column: 3)
!12982 = !DILocation(line: 246, column: 24, scope: !12980)
!12983 = !DILocation(line: 246, column: 37, scope: !12980)
!12984 = !DILocation(line: 246, column: 9, scope: !12981)
!12985 = distinct !{!12985, !12976, !12986}
!12986 = !DILocation(line: 250, column: 3, scope: !12964)
!12987 = !DILocation(line: 253, column: 3, scope: !12964)
!12988 = !DILocation(line: 256, column: 3, scope: !12964)
!12989 = !DILocation(line: 256, column: 10, scope: !12964)
!12990 = !DILocation(line: 256, column: 44, scope: !12964)
!12991 = !DILocation(line: 258, column: 10, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12993, file: !12965, line: 258, column: 9)
!12993 = distinct !DILexicalBlock(scope: !12964, file: !12965, line: 257, column: 3)
!12994 = !DILocation(line: 258, column: 24, scope: !12992)
!12995 = !DILocation(line: 258, column: 37, scope: !12992)
!12996 = !DILocation(line: 258, column: 9, scope: !12993)
!12997 = distinct !{!12997, !12988, !12998}
!12998 = !DILocation(line: 262, column: 3, scope: !12964)
!12999 = !DILocation(line: 265, column: 19, scope: !12964)
!13000 = !DILocation(line: 268, column: 25, scope: !12964)
!13001 = !DILocation(line: 268, column: 12, scope: !12964)
!13002 = !DILocation(line: 269, column: 13, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !12964, file: !12965, line: 269, column: 6)
!13004 = !DILocation(line: 269, column: 6, scope: !12964)
!13005 = !DILocation(line: 275, column: 3, scope: !12964)
!13006 = !DILocation(line: 277, column: 3, scope: !12964)
!13007 = !DILocation(line: 280, column: 15, scope: !12964)
!13008 = !DILocation(line: 283, column: 3, scope: !12964)
!13009 = !DILocation(line: 283, column: 10, scope: !12964)
!13010 = !DILocation(line: 283, column: 43, scope: !12964)
!13011 = !DILocation(line: 285, column: 10, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13013, file: !12965, line: 285, column: 9)
!13013 = distinct !DILexicalBlock(scope: !12964, file: !12965, line: 284, column: 3)
!13014 = !DILocation(line: 285, column: 24, scope: !13012)
!13015 = !DILocation(line: 285, column: 37, scope: !13012)
!13016 = !DILocation(line: 285, column: 9, scope: !13013)
!13017 = distinct !{!13017, !13008, !13018}
!13018 = !DILocation(line: 289, column: 3, scope: !12964)
!13019 = !DILocation(line: 292, column: 3, scope: !12964)
!13020 = !DILocation(line: 295, column: 3, scope: !12964)
!13021 = !DILocation(line: 299, column: 3, scope: !12964)
!13022 = !DILocation(line: 305, column: 3, scope: !12964)
!13023 = !DILocation(line: 307, column: 3, scope: !12964)
!13024 = !DILocation(line: 308, column: 1, scope: !12964)
!13025 = !DISubprogram(name: "HAL_GetTick", scope: !13026, file: !13026, line: 945, type: !8837, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!13026 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13027 = !DISubprogram(name: "HAL_InitTick", scope: !13026, file: !13026, line: 932, type: !13028, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!13028 = !DISubroutineType(types: !13029)
!13029 = !{!12968, !111}
!13030 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !12965, file: !12965, line: 324, type: !13031, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !13055)
!13031 = !DISubroutineType(types: !13032)
!13032 = !{!12968, !13033}
!13033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13034, size: 32)
!13034 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13035, line: 283, baseType: !13036)
!13035 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13035, line: 252, size: 416, elements: !13037)
!13037 = !{!13038, !13039, !13040, !13041, !13042, !13043, !13044, !13045, !13046, !13047}
!13038 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13036, file: !13035, line: 254, baseType: !111, size: 32)
!13039 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13036, file: !13035, line: 257, baseType: !111, size: 32, offset: 32)
!13040 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13036, file: !13035, line: 260, baseType: !111, size: 32, offset: 64)
!13041 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13036, file: !13035, line: 263, baseType: !111, size: 32, offset: 96)
!13042 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13036, file: !13035, line: 266, baseType: !111, size: 32, offset: 128)
!13043 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13036, file: !13035, line: 269, baseType: !111, size: 32, offset: 160)
!13044 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !13036, file: !13035, line: 272, baseType: !111, size: 32, offset: 192)
!13045 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !13036, file: !13035, line: 275, baseType: !111, size: 32, offset: 224)
!13046 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !13036, file: !13035, line: 278, baseType: !111, size: 32, offset: 256)
!13047 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13036, file: !13035, line: 281, baseType: !13048, size: 128, offset: 288)
!13048 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13035, line: 247, baseType: !13049)
!13049 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13035, line: 234, size: 128, elements: !13050)
!13050 = !{!13051, !13052, !13053, !13054}
!13051 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13049, file: !13035, line: 236, baseType: !111, size: 32)
!13052 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13049, file: !13035, line: 239, baseType: !111, size: 32, offset: 32)
!13053 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !13049, file: !13035, line: 242, baseType: !111, size: 32, offset: 64)
!13054 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !13049, file: !13035, line: 245, baseType: !111, size: 32, offset: 96)
!13055 = !{!13056, !13057, !13058, !13059, !13060, !13061, !13065}
!13056 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13030, file: !12965, line: 324, type: !13033)
!13057 = !DILocalVariable(name: "tickstart", scope: !13030, file: !12965, line: 326, type: !111)
!13058 = !DILocalVariable(name: "status", scope: !13030, file: !12965, line: 327, type: !12968)
!13059 = !DILocalVariable(name: "sysclk_source", scope: !13030, file: !12965, line: 328, type: !111)
!13060 = !DILocalVariable(name: "pll_config", scope: !13030, file: !12965, line: 328, type: !111)
!13061 = !DILocalVariable(name: "pwrclkchanged", scope: !13062, file: !12965, line: 613, type: !13064)
!13062 = distinct !DILexicalBlock(scope: !13063, file: !12965, line: 612, column: 3)
!13063 = distinct !DILexicalBlock(scope: !13030, file: !12965, line: 611, column: 6)
!13064 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1375, line: 181, baseType: !3462)
!13065 = !DILocalVariable(name: "tmpreg", scope: !13066, file: !12965, line: 622, type: !777)
!13066 = distinct !DILexicalBlock(scope: !13067, file: !12965, line: 622, column: 7)
!13067 = distinct !DILexicalBlock(scope: !13068, file: !12965, line: 621, column: 5)
!13068 = distinct !DILexicalBlock(scope: !13062, file: !12965, line: 620, column: 8)
!13069 = !DILocation(line: 0, scope: !13030)
!13070 = !DILocation(line: 331, column: 24, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13030, file: !12965, line: 331, column: 6)
!13072 = !DILocation(line: 331, column: 6, scope: !13030)
!13073 = !DILocation(line: 338, column: 19, scope: !13030)
!13074 = !DILocation(line: 339, column: 16, scope: !13030)
!13075 = !DILocation(line: 342, column: 27, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13030, file: !12965, line: 342, column: 6)
!13077 = !DILocation(line: 342, column: 43, scope: !13076)
!13078 = !DILocation(line: 342, column: 69, scope: !13076)
!13079 = !DILocation(line: 342, column: 6, scope: !13030)
!13080 = !DILocation(line: 348, column: 23, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !13082, file: !12965, line: 348, column: 8)
!13082 = distinct !DILexicalBlock(scope: !13076, file: !12965, line: 343, column: 3)
!13083 = !DILocation(line: 349, column: 8, scope: !13081)
!13084 = !DILocation(line: 349, column: 27, scope: !13081)
!13085 = !DILocation(line: 349, column: 62, scope: !13081)
!13086 = !DILocation(line: 351, column: 11, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !13088, file: !12965, line: 351, column: 10)
!13088 = distinct !DILexicalBlock(scope: !13081, file: !12965, line: 350, column: 5)
!13089 = !DILocation(line: 351, column: 47, scope: !13087)
!13090 = !DILocation(line: 351, column: 54, scope: !13087)
!13091 = !DILocation(line: 351, column: 77, scope: !13087)
!13092 = !DILocation(line: 351, column: 86, scope: !13087)
!13093 = !DILocation(line: 351, column: 10, scope: !13088)
!13094 = !DILocation(line: 359, column: 7, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !13096, file: !12965, line: 359, column: 7)
!13096 = distinct !DILexicalBlock(scope: !13097, file: !12965, line: 359, column: 7)
!13097 = distinct !DILexicalBlock(scope: !13081, file: !12965, line: 357, column: 5)
!13098 = !DILocation(line: 359, column: 7, scope: !13096)
!13099 = !DILocation(line: 359, column: 7, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13095, file: !12965, line: 359, column: 7)
!13101 = !DILocation(line: 359, column: 7, scope: !13102)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !12965, line: 359, column: 7)
!13103 = distinct !DILexicalBlock(scope: !13095, file: !12965, line: 359, column: 7)
!13104 = !DILocation(line: 359, column: 7, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13106, file: !12965, line: 359, column: 7)
!13106 = distinct !DILexicalBlock(scope: !13103, file: !12965, line: 359, column: 7)
!13107 = !DILocation(line: 359, column: 7, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13106, file: !12965, line: 359, column: 7)
!13109 = !DILocation(line: 0, scope: !13095)
!13110 = !DILocation(line: 362, column: 29, scope: !13111)
!13111 = distinct !DILexicalBlock(scope: !13097, file: !12965, line: 362, column: 10)
!13112 = !DILocation(line: 362, column: 38, scope: !13111)
!13113 = !DILocation(line: 0, scope: !13111)
!13114 = !DILocation(line: 362, column: 10, scope: !13097)
!13115 = !DILocation(line: 368, column: 15, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13111, file: !12965, line: 363, column: 7)
!13117 = !DILocation(line: 368, column: 51, scope: !13116)
!13118 = !DILocation(line: 368, column: 9, scope: !13116)
!13119 = !DILocation(line: 370, column: 15, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !12965, line: 370, column: 14)
!13121 = distinct !DILexicalBlock(scope: !13116, file: !12965, line: 369, column: 9)
!13122 = !DILocation(line: 370, column: 29, scope: !13120)
!13123 = !DILocation(line: 370, column: 43, scope: !13120)
!13124 = !DILocation(line: 370, column: 14, scope: !13121)
!13125 = distinct !{!13125, !13118, !13126}
!13126 = !DILocation(line: 374, column: 9, scope: !13116)
!13127 = !DILocation(line: 382, column: 15, scope: !13128)
!13128 = distinct !DILexicalBlock(scope: !13111, file: !12965, line: 377, column: 7)
!13129 = !DILocation(line: 382, column: 51, scope: !13128)
!13130 = !DILocation(line: 382, column: 9, scope: !13128)
!13131 = !DILocation(line: 384, column: 16, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13133, file: !12965, line: 384, column: 15)
!13133 = distinct !DILexicalBlock(scope: !13128, file: !12965, line: 383, column: 9)
!13134 = !DILocation(line: 384, column: 30, scope: !13132)
!13135 = !DILocation(line: 384, column: 44, scope: !13132)
!13136 = !DILocation(line: 384, column: 15, scope: !13133)
!13137 = distinct !{!13137, !13130, !13138}
!13138 = !DILocation(line: 388, column: 9, scope: !13128)
!13139 = !DILocation(line: 393, column: 27, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13030, file: !12965, line: 393, column: 6)
!13141 = !DILocation(line: 393, column: 43, scope: !13140)
!13142 = !DILocation(line: 393, column: 69, scope: !13140)
!13143 = !DILocation(line: 393, column: 6, scope: !13030)
!13144 = !DILocation(line: 400, column: 23, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13146, file: !12965, line: 400, column: 8)
!13146 = distinct !DILexicalBlock(scope: !13140, file: !12965, line: 394, column: 3)
!13147 = !DILocation(line: 401, column: 8, scope: !13145)
!13148 = !DILocation(line: 401, column: 27, scope: !13145)
!13149 = !DILocation(line: 401, column: 62, scope: !13145)
!13150 = !DILocation(line: 404, column: 11, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13152, file: !12965, line: 404, column: 10)
!13152 = distinct !DILexicalBlock(scope: !13145, file: !12965, line: 402, column: 5)
!13153 = !DILocation(line: 404, column: 47, scope: !13151)
!13154 = !DILocation(line: 404, column: 54, scope: !13151)
!13155 = !DILocation(line: 404, column: 77, scope: !13151)
!13156 = !DILocation(line: 404, column: 86, scope: !13151)
!13157 = !DILocation(line: 404, column: 10, scope: !13152)
!13158 = !DILocation(line: 418, column: 29, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13160, file: !12965, line: 418, column: 10)
!13160 = distinct !DILexicalBlock(scope: !13145, file: !12965, line: 416, column: 5)
!13161 = !DILocation(line: 418, column: 38, scope: !13159)
!13162 = !DILocation(line: 418, column: 10, scope: !13160)
!13163 = !DILocation(line: 421, column: 9, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13159, file: !12965, line: 419, column: 7)
!13165 = !DILocation(line: 424, column: 21, scope: !13164)
!13166 = !DILocation(line: 427, column: 9, scope: !13164)
!13167 = !DILocation(line: 427, column: 15, scope: !13164)
!13168 = !DILocation(line: 427, column: 51, scope: !13164)
!13169 = !DILocation(line: 429, column: 15, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13171, file: !12965, line: 429, column: 14)
!13171 = distinct !DILexicalBlock(scope: !13164, file: !12965, line: 428, column: 9)
!13172 = !DILocation(line: 429, column: 29, scope: !13170)
!13173 = !DILocation(line: 429, column: 43, scope: !13170)
!13174 = !DILocation(line: 429, column: 14, scope: !13171)
!13175 = distinct !{!13175, !13166, !13176}
!13176 = !DILocation(line: 433, column: 9, scope: !13164)
!13177 = !DILocation(line: 441, column: 9, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13159, file: !12965, line: 439, column: 7)
!13179 = !DILocation(line: 444, column: 21, scope: !13178)
!13180 = !DILocation(line: 447, column: 9, scope: !13178)
!13181 = !DILocation(line: 447, column: 15, scope: !13178)
!13182 = !DILocation(line: 447, column: 51, scope: !13178)
!13183 = !DILocation(line: 449, column: 15, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !12965, line: 449, column: 14)
!13185 = distinct !DILexicalBlock(scope: !13178, file: !12965, line: 448, column: 9)
!13186 = !DILocation(line: 449, column: 29, scope: !13184)
!13187 = !DILocation(line: 449, column: 43, scope: !13184)
!13188 = !DILocation(line: 449, column: 14, scope: !13185)
!13189 = distinct !{!13189, !13180, !13190}
!13190 = !DILocation(line: 453, column: 9, scope: !13178)
!13191 = !DILocation(line: 0, scope: !13145)
!13192 = !DILocation(line: 458, column: 27, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13030, file: !12965, line: 458, column: 6)
!13194 = !DILocation(line: 458, column: 43, scope: !13193)
!13195 = !DILocation(line: 458, column: 69, scope: !13193)
!13196 = !DILocation(line: 458, column: 6, scope: !13030)
!13197 = !DILocation(line: 461, column: 22, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13199, file: !12965, line: 461, column: 8)
!13199 = distinct !DILexicalBlock(scope: !13193, file: !12965, line: 459, column: 3)
!13200 = !DILocation(line: 461, column: 8, scope: !13199)
!13201 = !DILocation(line: 463, column: 11, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13203, file: !12965, line: 463, column: 10)
!13203 = distinct !DILexicalBlock(scope: !13198, file: !12965, line: 462, column: 5)
!13204 = !DILocation(line: 463, column: 47, scope: !13202)
!13205 = !DILocation(line: 463, column: 54, scope: !13202)
!13206 = !DILocation(line: 463, column: 77, scope: !13202)
!13207 = !DILocation(line: 463, column: 86, scope: !13202)
!13208 = !DILocation(line: 463, column: 10, scope: !13203)
!13209 = !DILocation(line: 477, column: 31, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13211, file: !12965, line: 477, column: 12)
!13211 = distinct !DILexicalBlock(scope: !13202, file: !12965, line: 469, column: 7)
!13212 = !DILocation(line: 477, column: 47, scope: !13210)
!13213 = !DILocation(line: 477, column: 45, scope: !13210)
!13214 = !DILocation(line: 477, column: 12, scope: !13211)
!13215 = !DILocation(line: 480, column: 14, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13217, file: !12965, line: 480, column: 14)
!13217 = distinct !DILexicalBlock(scope: !13210, file: !12965, line: 478, column: 9)
!13218 = !DILocation(line: 480, column: 80, scope: !13216)
!13219 = !DILocation(line: 480, column: 14, scope: !13217)
!13220 = !DILocation(line: 486, column: 11, scope: !13217)
!13221 = !DILocation(line: 488, column: 11, scope: !13217)
!13222 = !DILocation(line: 489, column: 9, scope: !13217)
!13223 = !DILocation(line: 494, column: 11, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13210, file: !12965, line: 491, column: 9)
!13225 = !DILocation(line: 496, column: 11, scope: !13224)
!13226 = !DILocation(line: 499, column: 65, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13224, file: !12965, line: 499, column: 14)
!13228 = !DILocation(line: 499, column: 14, scope: !13227)
!13229 = !DILocation(line: 499, column: 80, scope: !13227)
!13230 = !DILocation(line: 499, column: 14, scope: !13224)
!13231 = !DILocation(line: 506, column: 67, scope: !13211)
!13232 = !DILocation(line: 506, column: 81, scope: !13211)
!13233 = !DILocation(line: 506, column: 36, scope: !13211)
!13234 = !DILocation(line: 507, column: 52, scope: !13211)
!13235 = !DILocation(line: 507, column: 74, scope: !13211)
!13236 = !DILocation(line: 507, column: 31, scope: !13211)
!13237 = !DILocation(line: 507, column: 28, scope: !13211)
!13238 = !DILocation(line: 506, column: 25, scope: !13211)
!13239 = !DILocation(line: 510, column: 31, scope: !13211)
!13240 = !DILocation(line: 510, column: 18, scope: !13211)
!13241 = !DILocation(line: 511, column: 19, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13211, file: !12965, line: 511, column: 12)
!13243 = !DILocation(line: 511, column: 12, scope: !13211)
!13244 = !DILocation(line: 523, column: 29, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !12965, line: 523, column: 10)
!13246 = distinct !DILexicalBlock(scope: !13198, file: !12965, line: 518, column: 5)
!13247 = !DILocation(line: 523, column: 38, scope: !13245)
!13248 = !DILocation(line: 523, column: 10, scope: !13246)
!13249 = !DILocation(line: 526, column: 9, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13245, file: !12965, line: 524, column: 7)
!13251 = !DILocation(line: 529, column: 21, scope: !13250)
!13252 = !DILocation(line: 532, column: 9, scope: !13250)
!13253 = !DILocation(line: 532, column: 15, scope: !13250)
!13254 = !DILocation(line: 532, column: 51, scope: !13250)
!13255 = !DILocation(line: 534, column: 15, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13257, file: !12965, line: 534, column: 14)
!13257 = distinct !DILexicalBlock(scope: !13250, file: !12965, line: 533, column: 9)
!13258 = !DILocation(line: 534, column: 29, scope: !13256)
!13259 = !DILocation(line: 534, column: 42, scope: !13256)
!13260 = !DILocation(line: 534, column: 14, scope: !13257)
!13261 = distinct !{!13261, !13252, !13262}
!13262 = !DILocation(line: 538, column: 9, scope: !13250)
!13263 = !DILocation(line: 544, column: 9, scope: !13250)
!13264 = !DILocation(line: 546, column: 9, scope: !13250)
!13265 = !DILocation(line: 548, column: 7, scope: !13250)
!13266 = !DILocation(line: 552, column: 9, scope: !13267)
!13267 = distinct !DILexicalBlock(scope: !13245, file: !12965, line: 550, column: 7)
!13268 = !DILocation(line: 555, column: 21, scope: !13267)
!13269 = !DILocation(line: 558, column: 9, scope: !13267)
!13270 = !DILocation(line: 558, column: 15, scope: !13267)
!13271 = !DILocation(line: 558, column: 51, scope: !13267)
!13272 = !DILocation(line: 560, column: 15, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13274, file: !12965, line: 560, column: 14)
!13274 = distinct !DILexicalBlock(scope: !13267, file: !12965, line: 559, column: 9)
!13275 = !DILocation(line: 560, column: 29, scope: !13273)
!13276 = !DILocation(line: 560, column: 42, scope: !13273)
!13277 = !DILocation(line: 560, column: 14, scope: !13274)
!13278 = distinct !{!13278, !13269, !13279}
!13279 = !DILocation(line: 564, column: 9, scope: !13267)
!13280 = !DILocation(line: 569, column: 27, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13030, file: !12965, line: 569, column: 6)
!13282 = !DILocation(line: 569, column: 43, scope: !13281)
!13283 = !DILocation(line: 569, column: 69, scope: !13281)
!13284 = !DILocation(line: 569, column: 6, scope: !13030)
!13285 = !DILocation(line: 575, column: 27, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13287, file: !12965, line: 575, column: 8)
!13287 = distinct !DILexicalBlock(scope: !13281, file: !12965, line: 570, column: 3)
!13288 = !DILocation(line: 575, column: 36, scope: !13286)
!13289 = !DILocation(line: 575, column: 8, scope: !13287)
!13290 = !DILocation(line: 578, column: 7, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13286, file: !12965, line: 576, column: 5)
!13292 = !DILocation(line: 581, column: 19, scope: !13291)
!13293 = !DILocation(line: 584, column: 7, scope: !13291)
!13294 = !DILocation(line: 584, column: 13, scope: !13291)
!13295 = !DILocation(line: 584, column: 49, scope: !13291)
!13296 = !DILocation(line: 586, column: 13, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13298, file: !12965, line: 586, column: 12)
!13298 = distinct !DILexicalBlock(scope: !13291, file: !12965, line: 585, column: 7)
!13299 = !DILocation(line: 586, column: 27, scope: !13297)
!13300 = !DILocation(line: 586, column: 41, scope: !13297)
!13301 = !DILocation(line: 586, column: 12, scope: !13298)
!13302 = distinct !{!13302, !13293, !13303}
!13303 = !DILocation(line: 590, column: 7, scope: !13291)
!13304 = !DILocation(line: 595, column: 7, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13286, file: !12965, line: 593, column: 5)
!13306 = !DILocation(line: 598, column: 19, scope: !13305)
!13307 = !DILocation(line: 601, column: 7, scope: !13305)
!13308 = !DILocation(line: 601, column: 13, scope: !13305)
!13309 = !DILocation(line: 601, column: 49, scope: !13305)
!13310 = !DILocation(line: 603, column: 13, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13312, file: !12965, line: 603, column: 12)
!13312 = distinct !DILexicalBlock(scope: !13305, file: !12965, line: 602, column: 7)
!13313 = !DILocation(line: 603, column: 27, scope: !13311)
!13314 = !DILocation(line: 603, column: 41, scope: !13311)
!13315 = !DILocation(line: 603, column: 12, scope: !13312)
!13316 = distinct !{!13316, !13307, !13317}
!13317 = !DILocation(line: 607, column: 7, scope: !13305)
!13318 = !DILocation(line: 611, column: 27, scope: !13063)
!13319 = !DILocation(line: 611, column: 43, scope: !13063)
!13320 = !DILocation(line: 611, column: 69, scope: !13063)
!13321 = !DILocation(line: 611, column: 6, scope: !13030)
!13322 = !DILocation(line: 0, scope: !13062)
!13323 = !DILocation(line: 620, column: 8, scope: !13068)
!13324 = !DILocation(line: 620, column: 8, scope: !13062)
!13325 = !DILocation(line: 622, column: 7, scope: !13066)
!13326 = !DILocation(line: 622, column: 7, scope: !13067)
!13327 = !DILocation(line: 624, column: 5, scope: !13067)
!13328 = !DILocation(line: 626, column: 8, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13062, file: !12965, line: 626, column: 8)
!13330 = !DILocation(line: 626, column: 8, scope: !13062)
!13331 = !DILocation(line: 629, column: 7, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13329, file: !12965, line: 627, column: 5)
!13333 = !DILocation(line: 632, column: 19, scope: !13332)
!13334 = !DILocation(line: 634, column: 7, scope: !13332)
!13335 = !DILocation(line: 634, column: 13, scope: !13332)
!13336 = !DILocation(line: 636, column: 13, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13338, file: !12965, line: 636, column: 12)
!13338 = distinct !DILexicalBlock(scope: !13332, file: !12965, line: 635, column: 7)
!13339 = !DILocation(line: 636, column: 27, scope: !13337)
!13340 = !DILocation(line: 636, column: 40, scope: !13337)
!13341 = !DILocation(line: 636, column: 12, scope: !13338)
!13342 = distinct !{!13342, !13334, !13343}
!13343 = !DILocation(line: 640, column: 7, scope: !13332)
!13344 = !DILocation(line: 644, column: 5, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13346, file: !12965, line: 644, column: 5)
!13346 = distinct !DILexicalBlock(scope: !13062, file: !12965, line: 644, column: 5)
!13347 = !DILocation(line: 644, column: 5, scope: !13346)
!13348 = !DILocation(line: 644, column: 5, scope: !13349)
!13349 = distinct !DILexicalBlock(scope: !13345, file: !12965, line: 644, column: 5)
!13350 = !DILocation(line: 644, column: 5, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13352, file: !12965, line: 644, column: 5)
!13352 = distinct !DILexicalBlock(scope: !13345, file: !12965, line: 644, column: 5)
!13353 = !DILocation(line: 644, column: 5, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !12965, line: 644, column: 5)
!13355 = distinct !DILexicalBlock(scope: !13352, file: !12965, line: 644, column: 5)
!13356 = !DILocation(line: 644, column: 5, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13355, file: !12965, line: 644, column: 5)
!13358 = !DILocation(line: 0, scope: !13345)
!13359 = !DILocation(line: 646, column: 27, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13062, file: !12965, line: 646, column: 8)
!13361 = !DILocation(line: 646, column: 36, scope: !13360)
!13362 = !DILocation(line: 0, scope: !13360)
!13363 = !DILocation(line: 646, column: 8, scope: !13062)
!13364 = !DILocation(line: 652, column: 13, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13360, file: !12965, line: 647, column: 5)
!13366 = !DILocation(line: 652, column: 49, scope: !13365)
!13367 = !DILocation(line: 652, column: 7, scope: !13365)
!13368 = !DILocation(line: 654, column: 13, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13370, file: !12965, line: 654, column: 12)
!13370 = distinct !DILexicalBlock(scope: !13365, file: !12965, line: 653, column: 7)
!13371 = !DILocation(line: 654, column: 27, scope: !13369)
!13372 = !DILocation(line: 654, column: 41, scope: !13369)
!13373 = !DILocation(line: 654, column: 12, scope: !13370)
!13374 = distinct !{!13374, !13367, !13375}
!13375 = !DILocation(line: 658, column: 7, scope: !13365)
!13376 = !DILocation(line: 666, column: 13, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13360, file: !12965, line: 661, column: 5)
!13378 = !DILocation(line: 666, column: 49, scope: !13377)
!13379 = !DILocation(line: 666, column: 7, scope: !13377)
!13380 = !DILocation(line: 668, column: 13, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13382, file: !12965, line: 668, column: 12)
!13382 = distinct !DILexicalBlock(scope: !13377, file: !12965, line: 667, column: 7)
!13383 = !DILocation(line: 668, column: 27, scope: !13381)
!13384 = !DILocation(line: 668, column: 41, scope: !13381)
!13385 = !DILocation(line: 668, column: 12, scope: !13382)
!13386 = distinct !{!13386, !13379, !13387}
!13387 = !DILocation(line: 672, column: 7, scope: !13377)
!13388 = !DILocation(line: 676, column: 8, scope: !13062)
!13389 = !DILocation(line: 678, column: 7, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13391, file: !12965, line: 677, column: 5)
!13391 = distinct !DILexicalBlock(scope: !13062, file: !12965, line: 676, column: 8)
!13392 = !DILocation(line: 679, column: 5, scope: !13390)
!13393 = !DILocation(line: 685, column: 31, scope: !13394)
!13394 = distinct !DILexicalBlock(scope: !13030, file: !12965, line: 685, column: 7)
!13395 = !DILocation(line: 685, column: 41, scope: !13394)
!13396 = !DILocation(line: 685, column: 7, scope: !13030)
!13397 = !DILocation(line: 688, column: 22, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13399, file: !12965, line: 688, column: 8)
!13399 = distinct !DILexicalBlock(scope: !13394, file: !12965, line: 686, column: 3)
!13400 = !DILocation(line: 688, column: 8, scope: !13399)
!13401 = !DILocation(line: 690, column: 44, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13403, file: !12965, line: 690, column: 10)
!13403 = distinct !DILexicalBlock(scope: !13398, file: !12965, line: 689, column: 5)
!13404 = !DILocation(line: 0, scope: !13402)
!13405 = !DILocation(line: 690, column: 10, scope: !13403)
!13406 = !DILocation(line: 704, column: 15, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13402, file: !12965, line: 691, column: 7)
!13408 = !DILocation(line: 704, column: 51, scope: !13407)
!13409 = !DILocation(line: 704, column: 9, scope: !13407)
!13410 = !DILocation(line: 706, column: 15, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13412, file: !12965, line: 706, column: 14)
!13412 = distinct !DILexicalBlock(scope: !13407, file: !12965, line: 705, column: 9)
!13413 = !DILocation(line: 706, column: 29, scope: !13411)
!13414 = !DILocation(line: 706, column: 43, scope: !13411)
!13415 = !DILocation(line: 706, column: 14, scope: !13412)
!13416 = distinct !{!13416, !13409, !13417}
!13417 = !DILocation(line: 710, column: 9, scope: !13407)
!13418 = !DILocation(line: 713, column: 9, scope: !13407)
!13419 = !DILocation(line: 717, column: 9, scope: !13407)
!13420 = !DILocation(line: 720, column: 21, scope: !13407)
!13421 = !DILocation(line: 723, column: 9, scope: !13407)
!13422 = !DILocation(line: 723, column: 15, scope: !13407)
!13423 = !DILocation(line: 723, column: 51, scope: !13407)
!13424 = !DILocation(line: 725, column: 15, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13426, file: !12965, line: 725, column: 14)
!13426 = distinct !DILexicalBlock(scope: !13407, file: !12965, line: 724, column: 9)
!13427 = !DILocation(line: 725, column: 29, scope: !13425)
!13428 = !DILocation(line: 725, column: 43, scope: !13425)
!13429 = !DILocation(line: 725, column: 14, scope: !13426)
!13430 = distinct !{!13430, !13421, !13431}
!13431 = !DILocation(line: 729, column: 9, scope: !13407)
!13432 = !DILocation(line: 740, column: 15, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13402, file: !12965, line: 732, column: 7)
!13434 = !DILocation(line: 740, column: 51, scope: !13433)
!13435 = !DILocation(line: 740, column: 9, scope: !13433)
!13436 = !DILocation(line: 742, column: 15, scope: !13437)
!13437 = distinct !DILexicalBlock(scope: !13438, file: !12965, line: 742, column: 14)
!13438 = distinct !DILexicalBlock(scope: !13433, file: !12965, line: 741, column: 9)
!13439 = !DILocation(line: 742, column: 29, scope: !13437)
!13440 = !DILocation(line: 742, column: 43, scope: !13437)
!13441 = !DILocation(line: 742, column: 14, scope: !13438)
!13442 = distinct !{!13442, !13435, !13443}
!13443 = !DILocation(line: 746, column: 9, scope: !13433)
!13444 = !DILocation(line: 752, column: 44, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13446, file: !12965, line: 752, column: 10)
!13446 = distinct !DILexicalBlock(scope: !13398, file: !12965, line: 750, column: 5)
!13447 = !DILocation(line: 752, column: 10, scope: !13446)
!13448 = !DILocation(line: 759, column: 27, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13445, file: !12965, line: 757, column: 7)
!13450 = !DILocation(line: 760, column: 13, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13449, file: !12965, line: 760, column: 12)
!13452 = !DILocation(line: 760, column: 77, scope: !13451)
!13453 = !DILocation(line: 760, column: 51, scope: !13451)
!13454 = !DILocation(line: 760, column: 88, scope: !13451)
!13455 = !DILocation(line: 761, column: 13, scope: !13451)
!13456 = !DILocation(line: 761, column: 77, scope: !13451)
!13457 = !DILocation(line: 761, column: 51, scope: !13451)
!13458 = !DILocation(line: 761, column: 85, scope: !13451)
!13459 = !DILocation(line: 762, column: 13, scope: !13451)
!13460 = !DILocation(line: 762, column: 77, scope: !13451)
!13461 = !DILocation(line: 762, column: 51, scope: !13451)
!13462 = !DILocation(line: 760, column: 12, scope: !13449)
!13463 = !DILocation(line: 770, column: 3, scope: !13030)
!13464 = !DILocation(line: 771, column: 1, scope: !13030)
!13465 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !12965, file: !12965, line: 1343, type: !13028, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !13466)
!13466 = !{!13467, !13468, !13469, !13470}
!13467 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !13465, file: !12965, line: 1343, type: !111)
!13468 = !DILocalVariable(name: "vos", scope: !13465, file: !12965, line: 1345, type: !111)
!13469 = !DILocalVariable(name: "latency", scope: !13465, file: !12965, line: 1346, type: !111)
!13470 = !DILocalVariable(name: "tmpreg", scope: !13471, file: !12965, line: 1357, type: !777)
!13471 = distinct !DILexicalBlock(scope: !13472, file: !12965, line: 1357, column: 7)
!13472 = distinct !DILexicalBlock(scope: !13473, file: !12965, line: 1356, column: 5)
!13473 = distinct !DILexicalBlock(scope: !13474, file: !12965, line: 1351, column: 8)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !12965, line: 1350, column: 3)
!13475 = distinct !DILexicalBlock(scope: !13465, file: !12965, line: 1349, column: 7)
!13476 = !DILocation(line: 0, scope: !13465)
!13477 = !DILocation(line: 1349, column: 7, scope: !13475)
!13478 = !DILocation(line: 1349, column: 42, scope: !13475)
!13479 = !DILocation(line: 1349, column: 7, scope: !13465)
!13480 = !DILocation(line: 1351, column: 8, scope: !13473)
!13481 = !DILocation(line: 1351, column: 8, scope: !13474)
!13482 = !DILocation(line: 1353, column: 13, scope: !13483)
!13483 = distinct !DILexicalBlock(scope: !13473, file: !12965, line: 1352, column: 5)
!13484 = !DILocation(line: 1354, column: 5, scope: !13483)
!13485 = !DILocation(line: 1357, column: 7, scope: !13471)
!13486 = !DILocation(line: 1357, column: 7, scope: !13472)
!13487 = !DILocation(line: 1358, column: 13, scope: !13472)
!13488 = !DILocation(line: 1359, column: 7, scope: !13472)
!13489 = !DILocation(line: 0, scope: !13473)
!13490 = !DILocation(line: 1363, column: 13, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13474, file: !12965, line: 1363, column: 8)
!13492 = !DILocation(line: 1363, column: 46, scope: !13491)
!13493 = !DILocation(line: 1369, column: 3, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13465, file: !12965, line: 1369, column: 3)
!13495 = !DILocation(line: 1369, column: 3, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13497, file: !12965, line: 1369, column: 3)
!13497 = distinct !DILexicalBlock(scope: !13494, file: !12965, line: 1369, column: 3)
!13498 = !DILocation(line: 1373, column: 6, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13465, file: !12965, line: 1373, column: 6)
!13500 = !DILocation(line: 1379, column: 1, scope: !13465)
!13501 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !12965, file: !12965, line: 799, type: !13502, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !13513)
!13502 = !DISubroutineType(types: !13503)
!13503 = !{!12968, !13504, !111}
!13504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13505, size: 32)
!13505 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !13035, line: 304, baseType: !13506)
!13506 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13035, line: 288, size: 160, elements: !13507)
!13507 = !{!13508, !13509, !13510, !13511, !13512}
!13508 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !13506, file: !13035, line: 290, baseType: !111, size: 32)
!13509 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !13506, file: !13035, line: 293, baseType: !111, size: 32, offset: 32)
!13510 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13506, file: !13035, line: 296, baseType: !111, size: 32, offset: 64)
!13511 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13506, file: !13035, line: 299, baseType: !111, size: 32, offset: 96)
!13512 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13506, file: !13035, line: 302, baseType: !111, size: 32, offset: 128)
!13513 = !{!13514, !13515, !13516, !13517}
!13514 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13501, file: !12965, line: 799, type: !13504)
!13515 = !DILocalVariable(name: "FLatency", arg: 2, scope: !13501, file: !12965, line: 799, type: !111)
!13516 = !DILocalVariable(name: "tickstart", scope: !13501, file: !12965, line: 801, type: !111)
!13517 = !DILocalVariable(name: "status", scope: !13501, file: !12965, line: 802, type: !12968)
!13518 = !DILocation(line: 0, scope: !13501)
!13519 = !DILocation(line: 805, column: 24, scope: !13520)
!13520 = distinct !DILexicalBlock(scope: !13501, file: !12965, line: 805, column: 6)
!13521 = !DILocation(line: 805, column: 6, scope: !13501)
!13522 = !DILocation(line: 817, column: 17, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13501, file: !12965, line: 817, column: 6)
!13524 = !DILocation(line: 817, column: 15, scope: !13523)
!13525 = !DILocation(line: 817, column: 6, scope: !13501)
!13526 = !DILocation(line: 820, column: 5, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13528, file: !12965, line: 820, column: 5)
!13528 = distinct !DILexicalBlock(scope: !13529, file: !12965, line: 820, column: 5)
!13529 = distinct !DILexicalBlock(scope: !13523, file: !12965, line: 818, column: 3)
!13530 = !DILocation(line: 820, column: 5, scope: !13528)
!13531 = !DILocation(line: 820, column: 5, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13527, file: !12965, line: 820, column: 5)
!13533 = !DILocation(line: 824, column: 8, scope: !13534)
!13534 = distinct !DILexicalBlock(scope: !13529, file: !12965, line: 824, column: 8)
!13535 = !DILocation(line: 824, column: 34, scope: !13534)
!13536 = !DILocation(line: 824, column: 8, scope: !13529)
!13537 = !DILocation(line: 831, column: 27, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13501, file: !12965, line: 831, column: 6)
!13539 = !DILocation(line: 831, column: 38, scope: !13538)
!13540 = !DILocation(line: 831, column: 60, scope: !13538)
!13541 = !DILocation(line: 831, column: 6, scope: !13501)
!13542 = !DILocation(line: 834, column: 5, scope: !13543)
!13543 = distinct !DILexicalBlock(scope: !13538, file: !12965, line: 832, column: 3)
!13544 = !DILocation(line: 838, column: 27, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13501, file: !12965, line: 838, column: 6)
!13546 = !DILocation(line: 835, column: 3, scope: !13543)
!13547 = !DILocation(line: 838, column: 38, scope: !13545)
!13548 = !DILocation(line: 838, column: 62, scope: !13545)
!13549 = !DILocation(line: 838, column: 6, scope: !13501)
!13550 = !DILocation(line: 843, column: 27, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13552, file: !12965, line: 843, column: 8)
!13552 = distinct !DILexicalBlock(scope: !13545, file: !12965, line: 839, column: 3)
!13553 = !DILocation(line: 843, column: 8, scope: !13552)
!13554 = !DILocation(line: 846, column: 10, scope: !13555)
!13555 = distinct !DILexicalBlock(scope: !13556, file: !12965, line: 846, column: 10)
!13556 = distinct !DILexicalBlock(scope: !13551, file: !12965, line: 844, column: 5)
!13557 = !DILocation(line: 846, column: 46, scope: !13555)
!13558 = !DILocation(line: 846, column: 10, scope: !13556)
!13559 = !DILocation(line: 855, column: 10, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13561, file: !12965, line: 855, column: 10)
!13561 = distinct !DILexicalBlock(scope: !13562, file: !12965, line: 853, column: 5)
!13562 = distinct !DILexicalBlock(scope: !13551, file: !12965, line: 852, column: 13)
!13563 = !DILocation(line: 855, column: 46, scope: !13560)
!13564 = !DILocation(line: 855, column: 10, scope: !13561)
!13565 = !DILocation(line: 864, column: 10, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !12965, line: 864, column: 10)
!13567 = distinct !DILexicalBlock(scope: !13568, file: !12965, line: 862, column: 5)
!13568 = distinct !DILexicalBlock(scope: !13562, file: !12965, line: 861, column: 13)
!13569 = !DILocation(line: 864, column: 46, scope: !13566)
!13570 = !DILocation(line: 864, column: 10, scope: !13567)
!13571 = !DILocation(line: 873, column: 10, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13573, file: !12965, line: 873, column: 10)
!13573 = distinct !DILexicalBlock(scope: !13568, file: !12965, line: 871, column: 5)
!13574 = !DILocation(line: 873, column: 46, scope: !13572)
!13575 = !DILocation(line: 873, column: 10, scope: !13573)
!13576 = !DILocation(line: 878, column: 5, scope: !13552)
!13577 = !DILocation(line: 881, column: 17, scope: !13552)
!13578 = !DILocation(line: 883, column: 27, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13552, file: !12965, line: 883, column: 8)
!13580 = !DILocation(line: 883, column: 8, scope: !13552)
!13581 = !DILocation(line: 885, column: 14, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13579, file: !12965, line: 884, column: 5)
!13583 = !DILocation(line: 885, column: 44, scope: !13582)
!13584 = !DILocation(line: 885, column: 7, scope: !13582)
!13585 = !DILocation(line: 887, column: 13, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13587, file: !12965, line: 887, column: 12)
!13587 = distinct !DILexicalBlock(scope: !13582, file: !12965, line: 886, column: 7)
!13588 = !DILocation(line: 887, column: 27, scope: !13586)
!13589 = !DILocation(line: 887, column: 41, scope: !13586)
!13590 = !DILocation(line: 887, column: 12, scope: !13587)
!13591 = distinct !{!13591, !13584, !13592}
!13592 = !DILocation(line: 891, column: 7, scope: !13582)
!13593 = !DILocation(line: 895, column: 14, scope: !13594)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !12965, line: 894, column: 5)
!13595 = distinct !DILexicalBlock(scope: !13579, file: !12965, line: 893, column: 13)
!13596 = !DILocation(line: 895, column: 44, scope: !13594)
!13597 = !DILocation(line: 895, column: 7, scope: !13594)
!13598 = !DILocation(line: 897, column: 13, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13600, file: !12965, line: 897, column: 12)
!13600 = distinct !DILexicalBlock(scope: !13594, file: !12965, line: 896, column: 7)
!13601 = !DILocation(line: 897, column: 27, scope: !13599)
!13602 = !DILocation(line: 897, column: 41, scope: !13599)
!13603 = !DILocation(line: 897, column: 12, scope: !13600)
!13604 = distinct !{!13604, !13597, !13605}
!13605 = !DILocation(line: 901, column: 7, scope: !13594)
!13606 = !DILocation(line: 905, column: 14, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13608, file: !12965, line: 904, column: 5)
!13608 = distinct !DILexicalBlock(scope: !13595, file: !12965, line: 903, column: 13)
!13609 = !DILocation(line: 905, column: 44, scope: !13607)
!13610 = !DILocation(line: 905, column: 7, scope: !13607)
!13611 = !DILocation(line: 907, column: 13, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13613, file: !12965, line: 907, column: 12)
!13613 = distinct !DILexicalBlock(scope: !13607, file: !12965, line: 906, column: 7)
!13614 = !DILocation(line: 907, column: 27, scope: !13612)
!13615 = !DILocation(line: 907, column: 41, scope: !13612)
!13616 = !DILocation(line: 907, column: 12, scope: !13613)
!13617 = distinct !{!13617, !13610, !13618}
!13618 = !DILocation(line: 911, column: 7, scope: !13607)
!13619 = !DILocation(line: 915, column: 13, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13608, file: !12965, line: 914, column: 5)
!13621 = !DILocation(line: 915, column: 43, scope: !13620)
!13622 = !DILocation(line: 915, column: 7, scope: !13620)
!13623 = !DILocation(line: 917, column: 13, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13625, file: !12965, line: 917, column: 12)
!13625 = distinct !DILexicalBlock(scope: !13620, file: !12965, line: 916, column: 7)
!13626 = !DILocation(line: 917, column: 27, scope: !13624)
!13627 = !DILocation(line: 917, column: 41, scope: !13624)
!13628 = !DILocation(line: 917, column: 12, scope: !13625)
!13629 = distinct !{!13629, !13622, !13630}
!13630 = !DILocation(line: 921, column: 7, scope: !13620)
!13631 = !DILocation(line: 925, column: 17, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13501, file: !12965, line: 925, column: 6)
!13633 = !DILocation(line: 925, column: 15, scope: !13632)
!13634 = !DILocation(line: 925, column: 6, scope: !13501)
!13635 = !DILocation(line: 928, column: 5, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13637, file: !12965, line: 928, column: 5)
!13637 = distinct !DILexicalBlock(scope: !13632, file: !12965, line: 926, column: 3)
!13638 = !DILocation(line: 932, column: 8, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13637, file: !12965, line: 932, column: 8)
!13640 = !DILocation(line: 932, column: 34, scope: !13639)
!13641 = !DILocation(line: 932, column: 8, scope: !13637)
!13642 = !DILocation(line: 939, column: 27, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13501, file: !12965, line: 939, column: 6)
!13644 = !DILocation(line: 939, column: 38, scope: !13643)
!13645 = !DILocation(line: 939, column: 61, scope: !13643)
!13646 = !DILocation(line: 939, column: 6, scope: !13501)
!13647 = !DILocation(line: 942, column: 5, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13643, file: !12965, line: 940, column: 3)
!13649 = !DILocation(line: 946, column: 27, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13501, file: !12965, line: 946, column: 6)
!13651 = !DILocation(line: 943, column: 3, scope: !13648)
!13652 = !DILocation(line: 946, column: 38, scope: !13650)
!13653 = !DILocation(line: 946, column: 61, scope: !13650)
!13654 = !DILocation(line: 946, column: 6, scope: !13501)
!13655 = !DILocation(line: 949, column: 5, scope: !13656)
!13656 = distinct !DILexicalBlock(scope: !13650, file: !12965, line: 947, column: 3)
!13657 = !DILocation(line: 950, column: 3, scope: !13656)
!13658 = !DILocation(line: 953, column: 21, scope: !13501)
!13659 = !DILocation(line: 953, column: 70, scope: !13501)
!13660 = !DILocation(line: 953, column: 91, scope: !13501)
!13661 = !DILocation(line: 953, column: 50, scope: !13501)
!13662 = !DILocation(line: 953, column: 47, scope: !13501)
!13663 = !DILocation(line: 953, column: 19, scope: !13501)
!13664 = !DILocation(line: 956, column: 25, scope: !13501)
!13665 = !DILocation(line: 956, column: 12, scope: !13501)
!13666 = !DILocation(line: 958, column: 3, scope: !13501)
!13667 = !DILocation(line: 959, column: 1, scope: !13501)
!13668 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !12965, file: !12965, line: 1083, type: !8837, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !13669)
!13669 = !{!13670, !13671, !13672, !13673, !13674, !13675}
!13670 = !DILocalVariable(name: "tmpreg", scope: !13668, file: !12965, line: 1085, type: !111)
!13671 = !DILocalVariable(name: "pllm", scope: !13668, file: !12965, line: 1085, type: !111)
!13672 = !DILocalVariable(name: "plld", scope: !13668, file: !12965, line: 1085, type: !111)
!13673 = !DILocalVariable(name: "pllvco", scope: !13668, file: !12965, line: 1085, type: !111)
!13674 = !DILocalVariable(name: "msiclkrange", scope: !13668, file: !12965, line: 1085, type: !111)
!13675 = !DILocalVariable(name: "sysclockfreq", scope: !13668, file: !12965, line: 1085, type: !111)
!13676 = !DILocation(line: 1087, column: 17, scope: !13668)
!13677 = !DILocation(line: 0, scope: !13668)
!13678 = !DILocation(line: 1090, column: 3, scope: !13668)
!13679 = !DILocation(line: 1100, column: 7, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13681, file: !12965, line: 1098, column: 5)
!13681 = distinct !DILexicalBlock(scope: !13668, file: !12965, line: 1091, column: 3)
!13682 = !DILocation(line: 1104, column: 63, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13681, file: !12965, line: 1103, column: 5)
!13684 = !DILocation(line: 1104, column: 14, scope: !13683)
!13685 = !DILocation(line: 1105, column: 52, scope: !13683)
!13686 = !DILocation(line: 1105, column: 76, scope: !13683)
!13687 = !DILocation(line: 1106, column: 11, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13683, file: !12965, line: 1106, column: 11)
!13689 = !DILocation(line: 1106, column: 41, scope: !13688)
!13690 = !DILocation(line: 1106, column: 11, scope: !13683)
!13691 = !DILocation(line: 0, scope: !13688)
!13692 = !DILocation(line: 1117, column: 7, scope: !13683)
!13693 = !DILocation(line: 1122, column: 27, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13681, file: !12965, line: 1121, column: 5)
!13695 = !DILocation(line: 1122, column: 56, scope: !13694)
!13696 = !DILocation(line: 1123, column: 30, scope: !13694)
!13697 = !DILocation(line: 1124, column: 7, scope: !13694)
!13698 = !DILocation(line: 0, scope: !13681)
!13699 = !DILocation(line: 1127, column: 3, scope: !13668)
!13700 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !12965, file: !12965, line: 1005, type: !10798, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !13701)
!13701 = !{!13702, !13703, !13704, !13705, !13715}
!13702 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13700, file: !12965, line: 1005, type: !111)
!13703 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13700, file: !12965, line: 1005, type: !111)
!13704 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13700, file: !12965, line: 1005, type: !111)
!13705 = !DILocalVariable(name: "gpio", scope: !13700, file: !12965, line: 1007, type: !13706)
!13706 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13707, line: 64, baseType: !13708)
!13707 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13707, line: 48, size: 160, elements: !13709)
!13709 = !{!13710, !13711, !13712, !13713, !13714}
!13710 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13708, file: !13707, line: 50, baseType: !111, size: 32)
!13711 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13708, file: !13707, line: 53, baseType: !111, size: 32, offset: 32)
!13712 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13708, file: !13707, line: 56, baseType: !111, size: 32, offset: 64)
!13713 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13708, file: !13707, line: 59, baseType: !111, size: 32, offset: 96)
!13714 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13708, file: !13707, line: 62, baseType: !111, size: 32, offset: 128)
!13715 = !DILocalVariable(name: "tmpreg", scope: !13716, file: !12965, line: 1022, type: !777)
!13716 = distinct !DILexicalBlock(scope: !13700, file: !12965, line: 1022, column: 3)
!13717 = !DILocation(line: 0, scope: !13700)
!13718 = !DILocation(line: 1007, column: 3, scope: !13700)
!13719 = !DILocation(line: 1007, column: 20, scope: !13700)
!13720 = !DILocation(line: 1015, column: 8, scope: !13700)
!13721 = !DILocation(line: 1015, column: 18, scope: !13700)
!13722 = !DILocation(line: 1016, column: 8, scope: !13700)
!13723 = !DILocation(line: 1016, column: 18, scope: !13700)
!13724 = !DILocation(line: 1017, column: 8, scope: !13700)
!13725 = !DILocation(line: 1017, column: 18, scope: !13700)
!13726 = !DILocation(line: 1018, column: 8, scope: !13700)
!13727 = !DILocation(line: 1018, column: 18, scope: !13700)
!13728 = !DILocation(line: 1019, column: 8, scope: !13700)
!13729 = !DILocation(line: 1019, column: 18, scope: !13700)
!13730 = !DILocation(line: 1022, column: 3, scope: !13716)
!13731 = !DILocation(line: 1022, column: 3, scope: !13700)
!13732 = !DILocation(line: 1024, column: 3, scope: !13700)
!13733 = !DILocation(line: 1027, column: 3, scope: !13700)
!13734 = !DILocation(line: 1028, column: 1, scope: !13700)
!13735 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13707, file: !13707, line: 293, type: !13736, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!13736 = !DISubroutineType(types: !13737)
!13737 = !{null, !3505, !13738}
!13738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13706, size: 32)
!13739 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !12965, file: !12965, line: 1039, type: !323, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !2512)
!13740 = !DILocation(line: 1041, column: 38, scope: !13739)
!13741 = !DILocation(line: 1042, column: 1, scope: !13739)
!13742 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !12965, file: !12965, line: 1048, type: !323, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !2512)
!13743 = !DILocation(line: 1050, column: 38, scope: !13742)
!13744 = !DILocation(line: 1051, column: 1, scope: !13742)
!13745 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !12965, file: !12965, line: 1139, type: !8837, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !2512)
!13746 = !DILocation(line: 1141, column: 10, scope: !13745)
!13747 = !DILocation(line: 1141, column: 3, scope: !13745)
!13748 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !12965, file: !12965, line: 1150, type: !8837, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !2512)
!13749 = !DILocation(line: 1153, column: 11, scope: !13748)
!13750 = !DILocation(line: 1153, column: 56, scope: !13748)
!13751 = !DILocation(line: 1153, column: 79, scope: !13748)
!13752 = !DILocation(line: 1153, column: 36, scope: !13748)
!13753 = !DILocation(line: 1153, column: 33, scope: !13748)
!13754 = !DILocation(line: 1153, column: 3, scope: !13748)
!13755 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !12965, file: !12965, line: 1162, type: !8837, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !2512)
!13756 = !DILocation(line: 1165, column: 11, scope: !13755)
!13757 = !DILocation(line: 1165, column: 55, scope: !13755)
!13758 = !DILocation(line: 1165, column: 78, scope: !13755)
!13759 = !DILocation(line: 1165, column: 35, scope: !13755)
!13760 = !DILocation(line: 1165, column: 32, scope: !13755)
!13761 = !DILocation(line: 1165, column: 3, scope: !13755)
!13762 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !12965, file: !12965, line: 1175, type: !13763, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !13765)
!13763 = !DISubroutineType(types: !13764)
!13764 = !{null, !13033}
!13765 = !{!13766}
!13766 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13762, file: !12965, line: 1175, type: !13033)
!13767 = !DILocation(line: 0, scope: !13762)
!13768 = !DILocation(line: 1181, column: 22, scope: !13762)
!13769 = !DILocation(line: 1181, column: 37, scope: !13762)
!13770 = !DILocation(line: 1186, column: 12, scope: !13771)
!13771 = distinct !DILexicalBlock(scope: !13762, file: !12965, line: 1186, column: 6)
!13772 = !DILocation(line: 1186, column: 15, scope: !13771)
!13773 = !DILocation(line: 1186, column: 31, scope: !13771)
!13774 = !DILocation(line: 1186, column: 6, scope: !13762)
!13775 = !DILocation(line: 1188, column: 24, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13771, file: !12965, line: 1187, column: 3)
!13777 = !DILocation(line: 1188, column: 33, scope: !13776)
!13778 = !DILocation(line: 1189, column: 3, scope: !13776)
!13779 = !DILocation(line: 1190, column: 17, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13771, file: !12965, line: 1190, column: 11)
!13781 = !DILocation(line: 1190, column: 20, scope: !13780)
!13782 = !DILocation(line: 1190, column: 35, scope: !13780)
!13783 = !DILocation(line: 0, scope: !13780)
!13784 = !DILocation(line: 1190, column: 11, scope: !13771)
!13785 = !DILocation(line: 1192, column: 33, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13780, file: !12965, line: 1191, column: 3)
!13787 = !DILocation(line: 1193, column: 3, scope: !13786)
!13788 = !DILocation(line: 1196, column: 33, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13780, file: !12965, line: 1195, column: 3)
!13790 = !DILocation(line: 1200, column: 12, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13762, file: !12965, line: 1200, column: 6)
!13792 = !DILocation(line: 1200, column: 15, scope: !13791)
!13793 = !DILocation(line: 1206, column: 24, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13791, file: !12965, line: 1205, column: 3)
!13795 = !DILocation(line: 1206, column: 33, scope: !13794)
!13796 = !DILocation(line: 1209, column: 61, scope: !13762)
!13797 = !DILocation(line: 1209, column: 88, scope: !13762)
!13798 = !DILocation(line: 1209, column: 22, scope: !13762)
!13799 = !DILocation(line: 1209, column: 42, scope: !13762)
!13800 = !DILocation(line: 1212, column: 12, scope: !13801)
!13801 = distinct !DILexicalBlock(scope: !13762, file: !12965, line: 1212, column: 6)
!13802 = !DILocation(line: 1212, column: 6, scope: !13762)
!13803 = !DILocation(line: 1218, column: 24, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13801, file: !12965, line: 1217, column: 3)
!13805 = !DILocation(line: 1218, column: 33, scope: !13804)
!13806 = !DILocation(line: 1221, column: 61, scope: !13762)
!13807 = !DILocation(line: 1221, column: 88, scope: !13762)
!13808 = !DILocation(line: 1221, column: 22, scope: !13762)
!13809 = !DILocation(line: 1221, column: 42, scope: !13762)
!13810 = !DILocation(line: 1222, column: 55, scope: !13762)
!13811 = !DILocation(line: 1222, column: 61, scope: !13762)
!13812 = !DILocation(line: 1222, column: 22, scope: !13762)
!13813 = !DILocation(line: 1222, column: 36, scope: !13762)
!13814 = !DILocation(line: 1225, column: 12, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13762, file: !12965, line: 1225, column: 6)
!13816 = !DILocation(line: 1225, column: 16, scope: !13815)
!13817 = !DILocation(line: 1225, column: 33, scope: !13815)
!13818 = !DILocation(line: 1225, column: 6, scope: !13762)
!13819 = !DILocation(line: 1227, column: 24, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13815, file: !12965, line: 1226, column: 3)
!13821 = !DILocation(line: 1227, column: 33, scope: !13820)
!13822 = !DILocation(line: 1228, column: 3, scope: !13820)
!13823 = !DILocation(line: 1229, column: 17, scope: !13824)
!13824 = distinct !DILexicalBlock(scope: !13815, file: !12965, line: 1229, column: 11)
!13825 = !DILocation(line: 1229, column: 21, scope: !13824)
!13826 = !DILocation(line: 1229, column: 37, scope: !13824)
!13827 = !DILocation(line: 0, scope: !13824)
!13828 = !DILocation(line: 1229, column: 11, scope: !13815)
!13829 = !DILocation(line: 1231, column: 33, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13824, file: !12965, line: 1230, column: 3)
!13831 = !DILocation(line: 1232, column: 3, scope: !13830)
!13832 = !DILocation(line: 1235, column: 33, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13824, file: !12965, line: 1234, column: 3)
!13834 = !DILocation(line: 1239, column: 12, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13762, file: !12965, line: 1239, column: 6)
!13836 = !DILocation(line: 1239, column: 16, scope: !13835)
!13837 = !DILocation(line: 1245, column: 24, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13835, file: !12965, line: 1244, column: 3)
!13839 = !DILocation(line: 1245, column: 33, scope: !13838)
!13840 = !DILocation(line: 1250, column: 12, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13762, file: !12965, line: 1250, column: 6)
!13842 = !DILocation(line: 1250, column: 15, scope: !13841)
!13843 = !DILocation(line: 1250, column: 30, scope: !13841)
!13844 = !DILocation(line: 1250, column: 6, scope: !13762)
!13845 = !DILocation(line: 1256, column: 28, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13841, file: !12965, line: 1255, column: 3)
!13847 = !DILocation(line: 1256, column: 37, scope: !13846)
!13848 = !DILocation(line: 1258, column: 54, scope: !13762)
!13849 = !DILocation(line: 1258, column: 59, scope: !13762)
!13850 = !DILocation(line: 1258, column: 26, scope: !13762)
!13851 = !DILocation(line: 1258, column: 36, scope: !13762)
!13852 = !DILocation(line: 1259, column: 51, scope: !13762)
!13853 = !DILocation(line: 1259, column: 56, scope: !13762)
!13854 = !DILocation(line: 1259, column: 26, scope: !13762)
!13855 = !DILocation(line: 1259, column: 33, scope: !13762)
!13856 = !DILocation(line: 1260, column: 51, scope: !13762)
!13857 = !DILocation(line: 1260, column: 56, scope: !13762)
!13858 = !DILocation(line: 1260, column: 26, scope: !13762)
!13859 = !DILocation(line: 1260, column: 33, scope: !13762)
!13860 = !DILocation(line: 1261, column: 1, scope: !13762)
!13861 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !12965, file: !12965, line: 1271, type: !13862, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !13864)
!13862 = !DISubroutineType(types: !13863)
!13863 = !{null, !13504, !1411}
!13864 = !{!13865, !13866}
!13865 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13861, file: !12965, line: 1271, type: !13504)
!13866 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13861, file: !12965, line: 1271, type: !1411)
!13867 = !DILocation(line: 0, scope: !13861)
!13868 = !DILocation(line: 1278, column: 22, scope: !13861)
!13869 = !DILocation(line: 1278, column: 32, scope: !13861)
!13870 = !DILocation(line: 1281, column: 53, scope: !13861)
!13871 = !DILocation(line: 1281, column: 58, scope: !13861)
!13872 = !DILocation(line: 1281, column: 22, scope: !13861)
!13873 = !DILocation(line: 1281, column: 35, scope: !13861)
!13874 = !DILocation(line: 1284, column: 54, scope: !13861)
!13875 = !DILocation(line: 1284, column: 59, scope: !13861)
!13876 = !DILocation(line: 1284, column: 22, scope: !13861)
!13877 = !DILocation(line: 1284, column: 36, scope: !13861)
!13878 = !DILocation(line: 1287, column: 55, scope: !13861)
!13879 = !DILocation(line: 1287, column: 60, scope: !13861)
!13880 = !DILocation(line: 1287, column: 22, scope: !13861)
!13881 = !DILocation(line: 1287, column: 37, scope: !13861)
!13882 = !DILocation(line: 1290, column: 56, scope: !13861)
!13883 = !DILocation(line: 1290, column: 79, scope: !13861)
!13884 = !DILocation(line: 1290, column: 22, scope: !13861)
!13885 = !DILocation(line: 1290, column: 37, scope: !13861)
!13886 = !DILocation(line: 1293, column: 16, scope: !13861)
!13887 = !DILocation(line: 1293, column: 14, scope: !13861)
!13888 = !DILocation(line: 1294, column: 1, scope: !13861)
!13889 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !12965, file: !12965, line: 1301, type: !323, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !2512)
!13890 = !DILocation(line: 1304, column: 6, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13889, file: !12965, line: 1304, column: 6)
!13892 = !DILocation(line: 1304, column: 6, scope: !13889)
!13893 = !DILocation(line: 1307, column: 5, scope: !13894)
!13894 = distinct !DILexicalBlock(scope: !13891, file: !12965, line: 1305, column: 3)
!13895 = !DILocation(line: 1310, column: 5, scope: !13894)
!13896 = !DILocation(line: 1311, column: 3, scope: !13894)
!13897 = !DILocation(line: 1312, column: 1, scope: !13889)
!13898 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !12965, file: !12965, line: 1318, type: !323, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3448, retainedNodes: !2512)
!13899 = !DILocation(line: 1323, column: 1, scope: !13898)
!13900 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !13901, file: !13901, line: 147, type: !7520, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !13902)
!13901 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13902 = !{!13903}
!13903 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13900, file: !13901, line: 147, type: !111)
!13904 = !DILocation(line: 0, scope: !13900)
!13905 = !DILocation(line: 150, column: 3, scope: !13900)
!13906 = !DILocation(line: 151, column: 1, scope: !13900)
!13907 = distinct !DISubprogram(name: "LL_InitTick", scope: !13908, file: !13908, line: 222, type: !11338, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !13909)
!13908 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13909 = !{!13910, !13911}
!13910 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13907, file: !13908, line: 222, type: !111)
!13911 = !DILocalVariable(name: "Ticks", arg: 2, scope: !13907, file: !13908, line: 222, type: !111)
!13912 = !DILocation(line: 0, scope: !13907)
!13913 = !DILocation(line: 225, column: 46, scope: !13907)
!13914 = !DILocation(line: 225, column: 55, scope: !13907)
!13915 = !DILocation(line: 225, column: 18, scope: !13907)
!13916 = !DILocation(line: 226, column: 18, scope: !13907)
!13917 = !DILocation(line: 227, column: 18, scope: !13907)
!13918 = !DILocation(line: 229, column: 1, scope: !13907)
!13919 = distinct !DISubprogram(name: "LL_mDelay", scope: !13901, file: !13901, line: 163, type: !7520, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !13920)
!13920 = !{!13921, !13922, !13923}
!13921 = !DILocalVariable(name: "Delay", arg: 1, scope: !13919, file: !13901, line: 163, type: !111)
!13922 = !DILocalVariable(name: "tmp", scope: !13919, file: !13901, line: 165, type: !777)
!13923 = !DILocalVariable(name: "tmpDelay", scope: !13919, file: !13901, line: 166, type: !111)
!13924 = !DILocation(line: 0, scope: !13919)
!13925 = !DILocation(line: 165, column: 3, scope: !13919)
!13926 = !DILocation(line: 165, column: 18, scope: !13919)
!13927 = !DILocation(line: 165, column: 33, scope: !13919)
!13928 = !DILocation(line: 169, column: 10, scope: !13919)
!13929 = !DILocation(line: 172, column: 15, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13919, file: !13901, line: 172, column: 6)
!13931 = !DILocation(line: 177, column: 3, scope: !13919)
!13932 = !DILocation(line: 179, column: 18, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13934, file: !13901, line: 179, column: 8)
!13934 = distinct !DILexicalBlock(scope: !13919, file: !13901, line: 178, column: 3)
!13935 = !DILocation(line: 177, column: 19, scope: !13919)
!13936 = !DILocation(line: 184, column: 1, scope: !13919)
!13937 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !13901, file: !13901, line: 227, type: !7520, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !13938)
!13938 = !{!13939}
!13939 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !13937, file: !13901, line: 227, type: !111)
!13940 = !DILocation(line: 0, scope: !13937)
!13941 = !DILocation(line: 230, column: 19, scope: !13937)
!13942 = !DILocation(line: 231, column: 1, scope: !13937)
!13943 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !13901, file: !13901, line: 242, type: !13944, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !13947)
!13944 = !DISubroutineType(types: !13945)
!13945 = !{!13946, !111}
!13946 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1375, line: 194, baseType: !1374)
!13947 = !{!13948, !13949, !13950}
!13948 = !DILocalVariable(name: "Frequency", arg: 1, scope: !13943, file: !13901, line: 242, type: !111)
!13949 = !DILocalVariable(name: "status", scope: !13943, file: !13901, line: 244, type: !13946)
!13950 = !DILocalVariable(name: "latency", scope: !13943, file: !13901, line: 246, type: !111)
!13951 = !DILocation(line: 0, scope: !13943)
!13952 = !DILocation(line: 249, column: 25, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13943, file: !13901, line: 249, column: 7)
!13954 = !DILocation(line: 255, column: 9, scope: !13955)
!13955 = distinct !DILexicalBlock(scope: !13956, file: !13901, line: 255, column: 9)
!13956 = distinct !DILexicalBlock(scope: !13953, file: !13901, line: 254, column: 3)
!13957 = !DILocation(line: 255, column: 41, scope: !13955)
!13958 = !DILocation(line: 255, column: 9, scope: !13956)
!13959 = !DILocation(line: 257, column: 21, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13961, file: !13901, line: 257, column: 11)
!13961 = distinct !DILexicalBlock(scope: !13955, file: !13901, line: 256, column: 5)
!13962 = !DILocation(line: 284, column: 9, scope: !13956)
!13963 = !DILocation(line: 264, column: 14, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13955, file: !13901, line: 264, column: 14)
!13965 = !DILocation(line: 264, column: 46, scope: !13964)
!13966 = !DILocation(line: 264, column: 14, scope: !13955)
!13967 = !DILocation(line: 266, column: 21, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13969, file: !13901, line: 266, column: 11)
!13969 = distinct !DILexicalBlock(scope: !13964, file: !13901, line: 265, column: 5)
!13970 = !DILocation(line: 275, column: 21, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13972, file: !13901, line: 275, column: 11)
!13972 = distinct !DILexicalBlock(scope: !13964, file: !13901, line: 274, column: 5)
!13973 = !DILocation(line: 286, column: 7, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13975, file: !13901, line: 285, column: 5)
!13975 = distinct !DILexicalBlock(scope: !13956, file: !13901, line: 284, column: 9)
!13976 = !DILocation(line: 287, column: 5, scope: !13974)
!13977 = !DILocation(line: 289, column: 5, scope: !13956)
!13978 = !DILocation(line: 293, column: 9, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13956, file: !13901, line: 293, column: 9)
!13980 = !DILocation(line: 293, column: 31, scope: !13979)
!13981 = !DILocation(line: 293, column: 9, scope: !13956)
!13982 = !DILocation(line: 298, column: 3, scope: !13943)
!13983 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !7534, file: !7534, line: 285, type: !8837, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!13984 = !DILocation(line: 287, column: 21, scope: !13983)
!13985 = !DILocation(line: 287, column: 3, scope: !13983)
!13986 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !11337, file: !11337, line: 1897, type: !323, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!13987 = !DILocation(line: 1899, column: 3, scope: !13986)
!13988 = !DILocation(line: 1900, column: 1, scope: !13986)
!13989 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !11337, file: !11337, line: 1843, type: !7520, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !13990)
!13990 = !{!13991}
!13991 = !DILocalVariable(name: "Latency", arg: 1, scope: !13989, file: !11337, line: 1843, type: !111)
!13992 = !DILocation(line: 0, scope: !13989)
!13993 = !DILocation(line: 1845, column: 3, scope: !13989)
!13994 = !DILocation(line: 1846, column: 1, scope: !13989)
!13995 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !11337, file: !11337, line: 1855, type: !8837, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!13996 = !DILocation(line: 1857, column: 21, scope: !13995)
!13997 = !DILocation(line: 1857, column: 3, scope: !13995)
!13998 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !13901, file: !13901, line: 323, type: !13999, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14014)
!13999 = !DISubroutineType(types: !14000)
!14000 = !{!13946, !14001, !14007}
!14001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14002, size: 32)
!14002 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !13908, line: 103, baseType: !14003)
!14003 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13908, line: 90, size: 64, elements: !14004)
!14004 = !{!14005, !14006}
!14005 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !14003, file: !13908, line: 92, baseType: !111, size: 32)
!14006 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !14003, file: !13908, line: 98, baseType: !111, size: 32, offset: 32)
!14007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14008, size: 32)
!14008 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !13908, line: 128, baseType: !14009)
!14009 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13908, line: 108, size: 96, elements: !14010)
!14010 = !{!14011, !14012, !14013}
!14011 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14009, file: !13908, line: 110, baseType: !111, size: 32)
!14012 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14009, file: !13908, line: 116, baseType: !111, size: 32, offset: 32)
!14013 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14009, file: !13908, line: 122, baseType: !111, size: 32, offset: 64)
!14014 = !{!14015, !14016, !14017, !14018}
!14015 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !13998, file: !13901, line: 323, type: !14001)
!14016 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !13998, file: !13901, line: 324, type: !14007)
!14017 = !DILocalVariable(name: "status", scope: !13998, file: !13901, line: 326, type: !13946)
!14018 = !DILocalVariable(name: "pllfreq", scope: !13998, file: !13901, line: 327, type: !111)
!14019 = !DILocation(line: 0, scope: !13998)
!14020 = !DILocation(line: 330, column: 7, scope: !14021)
!14021 = distinct !DILexicalBlock(scope: !13998, file: !13901, line: 330, column: 7)
!14022 = !DILocation(line: 330, column: 26, scope: !14021)
!14023 = !DILocation(line: 330, column: 7, scope: !13998)
!14024 = !DILocation(line: 333, column: 15, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !14021, file: !13901, line: 331, column: 3)
!14026 = !DILocation(line: 336, column: 9, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !14025, file: !13901, line: 336, column: 9)
!14028 = !DILocation(line: 336, column: 30, scope: !14027)
!14029 = !DILocation(line: 336, column: 9, scope: !14025)
!14030 = !DILocation(line: 338, column: 7, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14027, file: !13901, line: 337, column: 5)
!14032 = !DILocation(line: 339, column: 7, scope: !14031)
!14033 = !DILocation(line: 339, column: 14, scope: !14031)
!14034 = !DILocation(line: 339, column: 35, scope: !14031)
!14035 = distinct !{!14035, !14032, !14036}
!14036 = !DILocation(line: 342, column: 7, scope: !14031)
!14037 = !DILocation(line: 346, column: 76, scope: !14025)
!14038 = !DILocation(line: 346, column: 105, scope: !14025)
!14039 = !DILocation(line: 346, column: 5, scope: !14025)
!14040 = !DILocation(line: 349, column: 14, scope: !14025)
!14041 = !DILocation(line: 350, column: 3, scope: !14025)
!14042 = !DILocation(line: 0, scope: !14021)
!14043 = !DILocation(line: 357, column: 3, scope: !13998)
!14044 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !13901, file: !13901, line: 487, type: !14045, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14047)
!14045 = !DISubroutineType(types: !14046)
!14046 = !{!13946}
!14047 = !{!14048}
!14048 = !DILocalVariable(name: "status", scope: !14044, file: !13901, line: 489, type: !13946)
!14049 = !DILocation(line: 0, scope: !14044)
!14050 = !DILocation(line: 492, column: 7, scope: !14051)
!14051 = distinct !DILexicalBlock(scope: !14044, file: !13901, line: 492, column: 7)
!14052 = !DILocation(line: 492, column: 28, scope: !14051)
!14053 = !DILocation(line: 492, column: 7, scope: !14044)
!14054 = !DILocation(line: 498, column: 3, scope: !14044)
!14055 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !13901, file: !13901, line: 457, type: !14056, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14058)
!14056 = !DISubroutineType(types: !14057)
!14057 = !{!111, !111, !14001}
!14058 = !{!14059, !14060, !14061}
!14059 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14055, file: !13901, line: 457, type: !111)
!14060 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14055, file: !13901, line: 457, type: !14001)
!14061 = !DILocalVariable(name: "pllfreq", scope: !14055, file: !13901, line: 459, type: !111)
!14062 = !DILocation(line: 0, scope: !14055)
!14063 = !DILocation(line: 470, column: 68, scope: !14055)
!14064 = !DILocation(line: 470, column: 75, scope: !14055)
!14065 = !DILocation(line: 470, column: 35, scope: !14055)
!14066 = !DILocation(line: 470, column: 34, scope: !14055)
!14067 = !DILocation(line: 470, column: 32, scope: !14055)
!14068 = !DILocation(line: 475, column: 46, scope: !14055)
!14069 = !DILocation(line: 475, column: 53, scope: !14055)
!14070 = !DILocation(line: 475, column: 76, scope: !14055)
!14071 = !DILocation(line: 475, column: 21, scope: !14055)
!14072 = !DILocation(line: 478, column: 3, scope: !14055)
!14073 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10675, file: !10675, line: 612, type: !8837, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!14074 = !DILocation(line: 614, column: 12, scope: !14073)
!14075 = !DILocation(line: 614, column: 11, scope: !14073)
!14076 = !DILocation(line: 614, column: 3, scope: !14073)
!14077 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10675, file: !10675, line: 592, type: !323, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!14078 = !DILocation(line: 594, column: 3, scope: !14077)
!14079 = !DILocation(line: 595, column: 1, scope: !14077)
!14080 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10675, file: !10675, line: 1219, type: !10798, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14081)
!14081 = !{!14082, !14083, !14084}
!14082 = !DILocalVariable(name: "Source", arg: 1, scope: !14080, file: !10675, line: 1219, type: !111)
!14083 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !14080, file: !10675, line: 1219, type: !111)
!14084 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !14080, file: !10675, line: 1219, type: !111)
!14085 = !DILocation(line: 0, scope: !14080)
!14086 = !DILocation(line: 1221, column: 3, scope: !14080)
!14087 = !DILocation(line: 1222, column: 1, scope: !14080)
!14088 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !13901, file: !13901, line: 510, type: !14089, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14091)
!14089 = !DISubroutineType(types: !14090)
!14090 = !{!13946, !111, !14007}
!14091 = !{!14092, !14093, !14094, !14095}
!14092 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14088, file: !13901, line: 510, type: !111)
!14093 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14088, file: !13901, line: 510, type: !14007)
!14094 = !DILocalVariable(name: "status", scope: !14088, file: !13901, line: 512, type: !13946)
!14095 = !DILocalVariable(name: "hclk_frequency", scope: !14088, file: !13901, line: 513, type: !111)
!14096 = !DILocation(line: 0, scope: !14088)
!14097 = !DILocation(line: 520, column: 20, scope: !14088)
!14098 = !DILocation(line: 523, column: 7, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14088, file: !13901, line: 523, column: 7)
!14100 = !DILocation(line: 523, column: 23, scope: !14099)
!14101 = !DILocation(line: 523, column: 7, scope: !14088)
!14102 = !DILocation(line: 526, column: 14, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14099, file: !13901, line: 524, column: 3)
!14104 = !DILocation(line: 530, column: 14, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14088, file: !13901, line: 530, column: 7)
!14106 = !DILocation(line: 530, column: 7, scope: !14088)
!14107 = !DILocation(line: 533, column: 5, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14105, file: !13901, line: 531, column: 3)
!14109 = !DILocation(line: 534, column: 5, scope: !14108)
!14110 = !DILocation(line: 534, column: 12, scope: !14108)
!14111 = !DILocation(line: 534, column: 33, scope: !14108)
!14112 = distinct !{!14112, !14109, !14113}
!14113 = !DILocation(line: 537, column: 5, scope: !14108)
!14114 = !DILocation(line: 540, column: 49, scope: !14108)
!14115 = !DILocation(line: 540, column: 5, scope: !14108)
!14116 = !DILocation(line: 541, column: 5, scope: !14108)
!14117 = !DILocation(line: 542, column: 5, scope: !14108)
!14118 = !DILocation(line: 542, column: 12, scope: !14108)
!14119 = !DILocation(line: 542, column: 37, scope: !14108)
!14120 = distinct !{!14120, !14117, !14121}
!14121 = !DILocation(line: 545, column: 5, scope: !14108)
!14122 = !DILocation(line: 548, column: 50, scope: !14108)
!14123 = !DILocation(line: 548, column: 5, scope: !14108)
!14124 = !DILocation(line: 549, column: 50, scope: !14108)
!14125 = !DILocation(line: 549, column: 5, scope: !14108)
!14126 = !DILocation(line: 550, column: 3, scope: !14108)
!14127 = !DILocation(line: 553, column: 7, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14088, file: !13901, line: 553, column: 7)
!14129 = !DILocation(line: 553, column: 23, scope: !14128)
!14130 = !DILocation(line: 553, column: 7, scope: !14088)
!14131 = !DILocation(line: 556, column: 14, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !14128, file: !13901, line: 554, column: 3)
!14133 = !DILocation(line: 557, column: 3, scope: !14132)
!14134 = !DILocation(line: 560, column: 14, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14088, file: !13901, line: 560, column: 7)
!14136 = !DILocation(line: 560, column: 7, scope: !14088)
!14137 = !DILocation(line: 562, column: 5, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14135, file: !13901, line: 561, column: 3)
!14139 = !DILocation(line: 563, column: 3, scope: !14138)
!14140 = !DILocation(line: 565, column: 3, scope: !14088)
!14141 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10675, file: !10675, line: 1169, type: !323, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!14142 = !DILocation(line: 1171, column: 3, scope: !14141)
!14143 = !DILocation(line: 1172, column: 1, scope: !14141)
!14144 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10675, file: !10675, line: 1190, type: !8837, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!14145 = !DILocation(line: 1192, column: 12, scope: !14144)
!14146 = !DILocation(line: 1192, column: 11, scope: !14144)
!14147 = !DILocation(line: 1192, column: 3, scope: !14144)
!14148 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10675, file: !10675, line: 944, type: !7520, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14149)
!14149 = !{!14150}
!14150 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14148, file: !10675, line: 944, type: !111)
!14151 = !DILocation(line: 0, scope: !14148)
!14152 = !DILocation(line: 946, column: 3, scope: !14148)
!14153 = !DILocation(line: 947, column: 1, scope: !14148)
!14154 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10675, file: !10675, line: 910, type: !7520, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14155)
!14155 = !{!14156}
!14156 = !DILocalVariable(name: "Source", arg: 1, scope: !14154, file: !10675, line: 910, type: !111)
!14157 = !DILocation(line: 0, scope: !14154)
!14158 = !DILocation(line: 912, column: 3, scope: !14154)
!14159 = !DILocation(line: 913, column: 1, scope: !14154)
!14160 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10675, file: !10675, line: 924, type: !8837, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!14161 = !DILocation(line: 926, column: 21, scope: !14160)
!14162 = !DILocation(line: 926, column: 3, scope: !14160)
!14163 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10675, file: !10675, line: 960, type: !7520, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14164)
!14164 = !{!14165}
!14165 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14163, file: !10675, line: 960, type: !111)
!14166 = !DILocation(line: 0, scope: !14163)
!14167 = !DILocation(line: 962, column: 3, scope: !14163)
!14168 = !DILocation(line: 963, column: 1, scope: !14163)
!14169 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10675, file: !10675, line: 976, type: !7520, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14170)
!14170 = !{!14171}
!14171 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14169, file: !10675, line: 976, type: !111)
!14172 = !DILocation(line: 0, scope: !14169)
!14173 = !DILocation(line: 978, column: 3, scope: !14169)
!14174 = !DILocation(line: 979, column: 1, scope: !14169)
!14175 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !13901, file: !13901, line: 385, type: !14176, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !14178)
!14176 = !DISubroutineType(types: !14177)
!14177 = !{!13946, !111, !111, !14001, !14007}
!14178 = !{!14179, !14180, !14181, !14182, !14183, !14184}
!14179 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14175, file: !13901, line: 385, type: !111)
!14180 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14175, file: !13901, line: 385, type: !111)
!14181 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14175, file: !13901, line: 386, type: !14001)
!14182 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14175, file: !13901, line: 386, type: !14007)
!14183 = !DILocalVariable(name: "status", scope: !14175, file: !13901, line: 388, type: !13946)
!14184 = !DILocalVariable(name: "pllfreq", scope: !14175, file: !13901, line: 389, type: !111)
!14185 = !DILocation(line: 0, scope: !14175)
!14186 = !DILocation(line: 396, column: 7, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14175, file: !13901, line: 396, column: 7)
!14188 = !DILocation(line: 396, column: 26, scope: !14187)
!14189 = !DILocation(line: 396, column: 7, scope: !14175)
!14190 = !DILocation(line: 400, column: 15, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14187, file: !13901, line: 397, column: 3)
!14192 = !DILocation(line: 403, column: 9, scope: !14193)
!14193 = distinct !DILexicalBlock(scope: !14191, file: !13901, line: 403, column: 9)
!14194 = !DILocation(line: 403, column: 30, scope: !14193)
!14195 = !DILocation(line: 403, column: 9, scope: !14191)
!14196 = !DILocation(line: 406, column: 21, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14198, file: !13901, line: 406, column: 11)
!14198 = distinct !DILexicalBlock(scope: !14193, file: !13901, line: 404, column: 5)
!14199 = !DILocation(line: 406, column: 11, scope: !14198)
!14200 = !DILocation(line: 408, column: 9, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14197, file: !13901, line: 407, column: 7)
!14202 = !DILocation(line: 409, column: 7, scope: !14201)
!14203 = !DILocation(line: 412, column: 9, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14197, file: !13901, line: 411, column: 7)
!14205 = !DILocation(line: 416, column: 7, scope: !14198)
!14206 = !DILocation(line: 417, column: 7, scope: !14198)
!14207 = !DILocation(line: 417, column: 14, scope: !14198)
!14208 = !DILocation(line: 417, column: 35, scope: !14198)
!14209 = distinct !{!14209, !14206, !14210}
!14210 = !DILocation(line: 420, column: 7, scope: !14198)
!14211 = !DILocation(line: 424, column: 78, scope: !14191)
!14212 = !DILocation(line: 424, column: 107, scope: !14191)
!14213 = !DILocation(line: 424, column: 7, scope: !14191)
!14214 = !DILocation(line: 427, column: 14, scope: !14191)
!14215 = !DILocation(line: 428, column: 3, scope: !14191)
!14216 = !DILocation(line: 0, scope: !14187)
!14217 = !DILocation(line: 435, column: 3, scope: !14175)
!14218 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10675, file: !10675, line: 545, type: !8837, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!14219 = !DILocation(line: 547, column: 12, scope: !14218)
!14220 = !DILocation(line: 547, column: 11, scope: !14218)
!14221 = !DILocation(line: 547, column: 3, scope: !14218)
!14222 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10675, file: !10675, line: 505, type: !323, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!14223 = !DILocation(line: 507, column: 3, scope: !14222)
!14224 = !DILocation(line: 508, column: 1, scope: !14222)
!14225 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10675, file: !10675, line: 515, type: !323, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!14226 = !DILocation(line: 517, column: 3, scope: !14225)
!14227 = !DILocation(line: 518, column: 1, scope: !14225)
!14228 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10675, file: !10675, line: 525, type: !323, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3519, retainedNodes: !2512)
!14229 = !DILocation(line: 527, column: 3, scope: !14228)
!14230 = !DILocation(line: 528, column: 1, scope: !14228)
!14231 = distinct !DISubprogram(name: "z_device_state_init", scope: !14232, file: !14232, line: 23, type: !323, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14233)
!14232 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14233 = !{!14234}
!14234 = !DILocalVariable(name: "dev", scope: !14231, file: !14232, line: 25, type: !14235)
!14235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14236, size: 32)
!14236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14237)
!14237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !810, line: 378, size: 192, elements: !14238)
!14238 = !{!14239, !14240, !14241, !14242, !14248, !14249}
!14239 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14237, file: !810, line: 380, baseType: !108, size: 32)
!14240 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14237, file: !810, line: 382, baseType: !13, size: 32, offset: 32)
!14241 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14237, file: !810, line: 384, baseType: !13, size: 32, offset: 64)
!14242 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14237, file: !810, line: 386, baseType: !14243, size: 32, offset: 96)
!14243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14244, size: 32)
!14244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !810, line: 351, size: 16, elements: !14245)
!14245 = !{!14246, !14247}
!14246 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14244, file: !810, line: 359, baseType: !166, size: 8)
!14247 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14244, file: !810, line: 364, baseType: !122, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14248 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14237, file: !810, line: 388, baseType: !102, size: 32, offset: 128)
!14249 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14237, file: !810, line: 396, baseType: !823, size: 32, offset: 160)
!14250 = !DILocation(line: 0, scope: !14231)
!14251 = !DILocation(line: 31, column: 1, scope: !14231)
!14252 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14232, file: !14232, line: 33, type: !14253, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14255)
!14253 = !DISubroutineType(types: !14254)
!14254 = !{!14235, !108}
!14255 = !{!14256, !14257}
!14256 = !DILocalVariable(name: "name", arg: 1, scope: !14252, file: !14232, line: 33, type: !108)
!14257 = !DILocalVariable(name: "dev", scope: !14252, file: !14232, line: 35, type: !14235)
!14258 = !DILocation(line: 0, scope: !14252)
!14259 = !DILocation(line: 40, column: 12, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14252, file: !14232, line: 40, column: 6)
!14261 = !DILocation(line: 40, column: 21, scope: !14260)
!14262 = !DILocation(line: 40, column: 25, scope: !14260)
!14263 = !DILocation(line: 40, column: 33, scope: !14260)
!14264 = !DILocation(line: 40, column: 6, scope: !14252)
!14265 = !DILocation(line: 55, column: 2, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14252, file: !14232, line: 55, column: 2)
!14267 = !DILocation(line: 50, column: 7, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14269, file: !14232, line: 50, column: 7)
!14269 = distinct !DILexicalBlock(scope: !14270, file: !14232, line: 49, column: 57)
!14270 = distinct !DILexicalBlock(scope: !14271, file: !14232, line: 49, column: 2)
!14271 = distinct !DILexicalBlock(scope: !14252, file: !14232, line: 49, column: 2)
!14272 = !DILocation(line: 50, column: 30, scope: !14268)
!14273 = !DILocation(line: 50, column: 39, scope: !14268)
!14274 = !DILocation(line: 50, column: 44, scope: !14268)
!14275 = !DILocation(line: 50, column: 7, scope: !14269)
!14276 = !DILocation(line: 49, column: 53, scope: !14270)
!14277 = !DILocation(line: 49, column: 33, scope: !14270)
!14278 = !DILocation(line: 49, column: 2, scope: !14271)
!14279 = distinct !{!14279, !14278, !14280}
!14280 = !DILocation(line: 53, column: 2, scope: !14271)
!14281 = !DILocation(line: 56, column: 7, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14283, file: !14232, line: 56, column: 7)
!14283 = distinct !DILexicalBlock(scope: !14284, file: !14232, line: 55, column: 57)
!14284 = distinct !DILexicalBlock(scope: !14266, file: !14232, line: 55, column: 2)
!14285 = !DILocation(line: 56, column: 30, scope: !14282)
!14286 = !DILocation(line: 56, column: 52, scope: !14282)
!14287 = !DILocation(line: 56, column: 34, scope: !14282)
!14288 = !DILocation(line: 56, column: 58, scope: !14282)
!14289 = !DILocation(line: 56, column: 7, scope: !14283)
!14290 = !DILocation(line: 55, column: 53, scope: !14284)
!14291 = !DILocation(line: 55, column: 33, scope: !14284)
!14292 = distinct !{!14292, !14265, !14293}
!14293 = !DILocation(line: 59, column: 2, scope: !14266)
!14294 = !DILocation(line: 62, column: 1, scope: !14252)
!14295 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14232, file: !14232, line: 93, type: !14296, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14298)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{!122, !14235}
!14298 = !{!14299}
!14299 = !DILocalVariable(name: "dev", arg: 1, scope: !14295, file: !14232, line: 93, type: !14235)
!14300 = !DILocation(line: 0, scope: !14295)
!14301 = !DILocation(line: 99, column: 10, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14295, file: !14232, line: 99, column: 6)
!14303 = !DILocation(line: 99, column: 6, scope: !14295)
!14304 = !DILocation(line: 103, column: 14, scope: !14295)
!14305 = !DILocation(line: 103, column: 21, scope: !14295)
!14306 = !DILocation(line: 103, column: 33, scope: !14295)
!14307 = !DILocation(line: 103, column: 49, scope: !14295)
!14308 = !DILocation(line: 103, column: 58, scope: !14295)
!14309 = !DILocation(line: 104, column: 1, scope: !14295)
!14310 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14232, file: !14232, line: 87, type: !14311, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14314)
!14311 = !DISubroutineType(types: !14312)
!14312 = !{!156, !14313}
!14313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14235, size: 32)
!14314 = !{!14315}
!14315 = !DILocalVariable(name: "devices", arg: 1, scope: !14310, file: !14232, line: 87, type: !14313)
!14316 = !DILocation(line: 0, scope: !14310)
!14317 = !DILocation(line: 89, column: 11, scope: !14310)
!14318 = !DILocation(line: 90, column: 2, scope: !14310)
!14319 = distinct !DISubprogram(name: "device_required_foreach", scope: !14232, file: !14232, line: 125, type: !14320, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14326)
!14320 = !DISubroutineType(types: !14321)
!14321 = !{!103, !14235, !14322, !102}
!14322 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !810, line: 471, baseType: !14323)
!14323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14324, size: 32)
!14324 = !DISubroutineType(types: !14325)
!14325 = !{!103, !14235, !102}
!14326 = !{!14327, !14328, !14329, !14330, !14331}
!14327 = !DILocalVariable(name: "dev", arg: 1, scope: !14319, file: !14232, line: 125, type: !14235)
!14328 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14319, file: !14232, line: 126, type: !14322)
!14329 = !DILocalVariable(name: "context", arg: 3, scope: !14319, file: !14232, line: 127, type: !102)
!14330 = !DILocalVariable(name: "handle_count", scope: !14319, file: !14232, line: 129, type: !156)
!14331 = !DILocalVariable(name: "handles", scope: !14319, file: !14232, line: 130, type: !823)
!14332 = !DILocation(line: 0, scope: !14319)
!14333 = !DILocation(line: 129, column: 2, scope: !14319)
!14334 = !DILocation(line: 129, column: 9, scope: !14319)
!14335 = !DILocation(line: 130, column: 35, scope: !14319)
!14336 = !DILocation(line: 132, column: 33, scope: !14319)
!14337 = !DILocation(line: 132, column: 9, scope: !14319)
!14338 = !DILocation(line: 133, column: 1, scope: !14319)
!14339 = !DILocation(line: 132, column: 2, scope: !14319)
!14340 = distinct !DISubprogram(name: "device_required_handles_get", scope: !810, file: !810, line: 493, type: !14341, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14343)
!14341 = !DISubroutineType(types: !14342)
!14342 = !{!823, !14235, !3108}
!14343 = !{!14344, !14345, !14346, !14347}
!14344 = !DILocalVariable(name: "dev", arg: 1, scope: !14340, file: !810, line: 493, type: !14235)
!14345 = !DILocalVariable(name: "count", arg: 2, scope: !14340, file: !810, line: 493, type: !3108)
!14346 = !DILocalVariable(name: "rv", scope: !14340, file: !810, line: 495, type: !823)
!14347 = !DILocalVariable(name: "i", scope: !14348, file: !810, line: 498, type: !156)
!14348 = distinct !DILexicalBlock(scope: !14349, file: !810, line: 497, column: 18)
!14349 = distinct !DILexicalBlock(scope: !14340, file: !810, line: 497, column: 6)
!14350 = !DILocation(line: 0, scope: !14340)
!14351 = !DILocation(line: 495, column: 35, scope: !14340)
!14352 = !DILocation(line: 497, column: 9, scope: !14349)
!14353 = !DILocation(line: 497, column: 6, scope: !14340)
!14354 = !DILocation(line: 0, scope: !14348)
!14355 = !DILocation(line: 500, column: 11, scope: !14348)
!14356 = !DILocation(line: 500, column: 40, scope: !14348)
!14357 = !DILocation(line: 502, column: 4, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14348, file: !810, line: 501, column: 40)
!14359 = distinct !{!14359, !14360, !14361}
!14360 = !DILocation(line: 500, column: 3, scope: !14348)
!14361 = !DILocation(line: 503, column: 3, scope: !14348)
!14362 = !DILocation(line: 504, column: 10, scope: !14348)
!14363 = !DILocation(line: 505, column: 2, scope: !14348)
!14364 = !DILocation(line: 507, column: 2, scope: !14340)
!14365 = distinct !DISubprogram(name: "device_visitor", scope: !14232, file: !14232, line: 106, type: !14366, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14368)
!14366 = !DISubroutineType(types: !14367)
!14367 = !{!103, !823, !156, !14322, !102}
!14368 = !{!14369, !14370, !14371, !14372, !14373, !14375, !14378, !14379}
!14369 = !DILocalVariable(name: "handles", arg: 1, scope: !14365, file: !14232, line: 106, type: !823)
!14370 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14365, file: !14232, line: 107, type: !156)
!14371 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14365, file: !14232, line: 108, type: !14322)
!14372 = !DILocalVariable(name: "context", arg: 4, scope: !14365, file: !14232, line: 109, type: !102)
!14373 = !DILocalVariable(name: "i", scope: !14374, file: !14232, line: 112, type: !156)
!14374 = distinct !DILexicalBlock(scope: !14365, file: !14232, line: 112, column: 2)
!14375 = !DILocalVariable(name: "dh", scope: !14376, file: !14232, line: 113, type: !825)
!14376 = distinct !DILexicalBlock(scope: !14377, file: !14232, line: 112, column: 44)
!14377 = distinct !DILexicalBlock(scope: !14374, file: !14232, line: 112, column: 2)
!14378 = !DILocalVariable(name: "rdev", scope: !14376, file: !14232, line: 114, type: !14235)
!14379 = !DILocalVariable(name: "rc", scope: !14376, file: !14232, line: 115, type: !103)
!14380 = !DILocation(line: 0, scope: !14365)
!14381 = !DILocation(line: 0, scope: !14374)
!14382 = !DILocation(line: 112, column: 23, scope: !14377)
!14383 = !DILocation(line: 112, column: 2, scope: !14374)
!14384 = distinct !{!14384, !14383, !14385}
!14385 = !DILocation(line: 120, column: 2, scope: !14374)
!14386 = !DILocation(line: 113, column: 24, scope: !14376)
!14387 = !DILocation(line: 0, scope: !14376)
!14388 = !DILocation(line: 114, column: 31, scope: !14376)
!14389 = !DILocation(line: 115, column: 12, scope: !14376)
!14390 = !DILocation(line: 117, column: 10, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14376, file: !14232, line: 117, column: 7)
!14392 = !DILocation(line: 112, column: 39, scope: !14377)
!14393 = !DILocation(line: 123, column: 1, scope: !14365)
!14394 = distinct !DISubprogram(name: "device_from_handle", scope: !810, file: !810, line: 439, type: !14395, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14397)
!14395 = !DISubroutineType(types: !14396)
!14396 = !{!14235, !825}
!14397 = !{!14398, !14399, !14400}
!14398 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14394, file: !810, line: 439, type: !825)
!14399 = !DILocalVariable(name: "dev", scope: !14394, file: !810, line: 443, type: !14235)
!14400 = !DILocalVariable(name: "numdev", scope: !14394, file: !810, line: 444, type: !156)
!14401 = !DILocation(line: 0, scope: !14394)
!14402 = !DILocation(line: 446, column: 7, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14394, file: !810, line: 446, column: 6)
!14404 = !DILocation(line: 446, column: 18, scope: !14403)
!14405 = !DILocation(line: 446, column: 23, scope: !14403)
!14406 = !DILocation(line: 450, column: 2, scope: !14394)
!14407 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14232, file: !14232, line: 135, type: !14320, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14408)
!14408 = !{!14409, !14410, !14411, !14412, !14413}
!14409 = !DILocalVariable(name: "dev", arg: 1, scope: !14407, file: !14232, line: 135, type: !14235)
!14410 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14407, file: !14232, line: 136, type: !14322)
!14411 = !DILocalVariable(name: "context", arg: 3, scope: !14407, file: !14232, line: 137, type: !102)
!14412 = !DILocalVariable(name: "handle_count", scope: !14407, file: !14232, line: 139, type: !156)
!14413 = !DILocalVariable(name: "handles", scope: !14407, file: !14232, line: 140, type: !823)
!14414 = !DILocation(line: 0, scope: !14407)
!14415 = !DILocation(line: 139, column: 2, scope: !14407)
!14416 = !DILocation(line: 139, column: 9, scope: !14407)
!14417 = !DILocation(line: 140, column: 35, scope: !14407)
!14418 = !DILocation(line: 142, column: 33, scope: !14407)
!14419 = !DILocation(line: 142, column: 9, scope: !14407)
!14420 = !DILocation(line: 143, column: 1, scope: !14407)
!14421 = !DILocation(line: 142, column: 2, scope: !14407)
!14422 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !810, file: !810, line: 573, type: !14341, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3568, retainedNodes: !14423)
!14423 = !{!14424, !14425, !14426, !14427, !14428}
!14424 = !DILocalVariable(name: "dev", arg: 1, scope: !14422, file: !810, line: 573, type: !14235)
!14425 = !DILocalVariable(name: "count", arg: 2, scope: !14422, file: !810, line: 573, type: !3108)
!14426 = !DILocalVariable(name: "rv", scope: !14422, file: !810, line: 575, type: !823)
!14427 = !DILocalVariable(name: "region", scope: !14422, file: !810, line: 576, type: !156)
!14428 = !DILocalVariable(name: "i", scope: !14422, file: !810, line: 577, type: !156)
!14429 = !DILocation(line: 0, scope: !14422)
!14430 = !DILocation(line: 575, column: 35, scope: !14422)
!14431 = !DILocation(line: 579, column: 9, scope: !14432)
!14432 = distinct !DILexicalBlock(scope: !14422, file: !810, line: 579, column: 6)
!14433 = !DILocation(line: 579, column: 6, scope: !14422)
!14434 = !DILocation(line: 582, column: 8, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14436, file: !810, line: 582, column: 8)
!14436 = distinct !DILexicalBlock(scope: !14437, file: !810, line: 581, column: 23)
!14437 = distinct !DILexicalBlock(scope: !14432, file: !810, line: 579, column: 18)
!14438 = !DILocation(line: 582, column: 12, scope: !14435)
!14439 = !DILocation(line: 585, column: 6, scope: !14436)
!14440 = !DILocation(line: 0, scope: !14437)
!14441 = !DILocation(line: 581, column: 17, scope: !14437)
!14442 = !DILocation(line: 581, column: 3, scope: !14437)
!14443 = !DILocation(line: 588, column: 10, scope: !14437)
!14444 = !DILocation(line: 588, column: 16, scope: !14437)
!14445 = !DILocation(line: 589, column: 4, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14437, file: !810, line: 588, column: 39)
!14447 = !DILocation(line: 588, column: 3, scope: !14437)
!14448 = distinct !{!14448, !14447, !14449}
!14449 = !DILocation(line: 590, column: 3, scope: !14437)
!14450 = !DILocation(line: 591, column: 10, scope: !14437)
!14451 = !DILocation(line: 592, column: 2, scope: !14437)
!14452 = !DILocation(line: 575, column: 25, scope: !14422)
!14453 = !DILocation(line: 594, column: 2, scope: !14422)
!14454 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2304, file: !2304, line: 49, type: !14455, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2301, retainedNodes: !2512)
!14455 = !DISubroutineType(types: !14456)
!14456 = !{!744}
!14457 = !DILocation(line: 51, column: 10, scope: !14454)
!14458 = !DILocation(line: 51, column: 20, scope: !14454)
!14459 = !DILocation(line: 51, column: 2, scope: !14454)
!14460 = distinct !DISubprogram(name: "coredump", scope: !3575, file: !3575, line: 209, type: !14461, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14609)
!14461 = !DISubroutineType(types: !14462)
!14462 = !{null, !32, !14463, !14507}
!14463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14464, size: 32)
!14464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14465)
!14465 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !3238, line: 141, baseType: !14466)
!14466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !3238, line: 97, size: 256, elements: !14467)
!14467 = !{!14468}
!14468 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14466, file: !3238, line: 107, baseType: !14469, size: 256)
!14469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !3238, line: 98, size: 256, elements: !14470)
!14470 = !{!14471, !14476, !14481, !14486, !14491, !14496, !14501, !14506}
!14471 = !DIDerivedType(tag: DW_TAG_member, scope: !14469, file: !3238, line: 99, baseType: !14472, size: 32)
!14472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14469, file: !3238, line: 99, size: 32, elements: !14473)
!14473 = !{!14474, !14475}
!14474 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14472, file: !3238, line: 99, baseType: !111, size: 32)
!14475 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14472, file: !3238, line: 99, baseType: !111, size: 32)
!14476 = !DIDerivedType(tag: DW_TAG_member, scope: !14469, file: !3238, line: 100, baseType: !14477, size: 32, offset: 32)
!14477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14469, file: !3238, line: 100, size: 32, elements: !14478)
!14478 = !{!14479, !14480}
!14479 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14477, file: !3238, line: 100, baseType: !111, size: 32)
!14480 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14477, file: !3238, line: 100, baseType: !111, size: 32)
!14481 = !DIDerivedType(tag: DW_TAG_member, scope: !14469, file: !3238, line: 101, baseType: !14482, size: 32, offset: 64)
!14482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14469, file: !3238, line: 101, size: 32, elements: !14483)
!14483 = !{!14484, !14485}
!14484 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14482, file: !3238, line: 101, baseType: !111, size: 32)
!14485 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14482, file: !3238, line: 101, baseType: !111, size: 32)
!14486 = !DIDerivedType(tag: DW_TAG_member, scope: !14469, file: !3238, line: 102, baseType: !14487, size: 32, offset: 96)
!14487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14469, file: !3238, line: 102, size: 32, elements: !14488)
!14488 = !{!14489, !14490}
!14489 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14487, file: !3238, line: 102, baseType: !111, size: 32)
!14490 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14487, file: !3238, line: 102, baseType: !111, size: 32)
!14491 = !DIDerivedType(tag: DW_TAG_member, scope: !14469, file: !3238, line: 103, baseType: !14492, size: 32, offset: 128)
!14492 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14469, file: !3238, line: 103, size: 32, elements: !14493)
!14493 = !{!14494, !14495}
!14494 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14492, file: !3238, line: 103, baseType: !111, size: 32)
!14495 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14492, file: !3238, line: 103, baseType: !111, size: 32)
!14496 = !DIDerivedType(tag: DW_TAG_member, scope: !14469, file: !3238, line: 104, baseType: !14497, size: 32, offset: 160)
!14497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14469, file: !3238, line: 104, size: 32, elements: !14498)
!14498 = !{!14499, !14500}
!14499 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14497, file: !3238, line: 104, baseType: !111, size: 32)
!14500 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14497, file: !3238, line: 104, baseType: !111, size: 32)
!14501 = !DIDerivedType(tag: DW_TAG_member, scope: !14469, file: !3238, line: 105, baseType: !14502, size: 32, offset: 192)
!14502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14469, file: !3238, line: 105, size: 32, elements: !14503)
!14503 = !{!14504, !14505}
!14504 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14502, file: !3238, line: 105, baseType: !111, size: 32)
!14505 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14502, file: !3238, line: 105, baseType: !111, size: 32)
!14506 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14469, file: !3238, line: 106, baseType: !111, size: 32, offset: 224)
!14507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14508, size: 32)
!14508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !14509)
!14509 = !{!14510, !14568, !14580, !14581, !14582, !14583, !14589, !14604}
!14510 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14508, file: !199, line: 247, baseType: !14511, size: 384)
!14511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !14512)
!14512 = !{!14513, !14537, !14544, !14545, !14546, !14555, !14556, !14557}
!14513 = !DIDerivedType(tag: DW_TAG_member, scope: !14511, file: !199, line: 60, baseType: !14514, size: 64)
!14514 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14511, file: !199, line: 60, size: 64, elements: !14515)
!14515 = !{!14516, !14531}
!14516 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14514, file: !199, line: 61, baseType: !14517, size: 64)
!14517 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !14518)
!14518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !136, line: 37, size: 64, elements: !14519)
!14519 = !{!14520, !14526}
!14520 = !DIDerivedType(tag: DW_TAG_member, scope: !14518, file: !136, line: 38, baseType: !14521, size: 32)
!14521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14518, file: !136, line: 38, size: 32, elements: !14522)
!14522 = !{!14523, !14525}
!14523 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14521, file: !136, line: 39, baseType: !14524, size: 32)
!14524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14518, size: 32)
!14525 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14521, file: !136, line: 40, baseType: !14524, size: 32)
!14526 = !DIDerivedType(tag: DW_TAG_member, scope: !14518, file: !136, line: 42, baseType: !14527, size: 32, offset: 32)
!14527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14518, file: !136, line: 42, size: 32, elements: !14528)
!14528 = !{!14529, !14530}
!14529 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14527, file: !136, line: 43, baseType: !14524, size: 32)
!14530 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14527, file: !136, line: 44, baseType: !14524, size: 32)
!14531 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14514, file: !199, line: 62, baseType: !14532, size: 64)
!14532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !14533)
!14533 = !{!14534}
!14534 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14532, file: !211, line: 50, baseType: !14535, size: 64)
!14535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14536, size: 64, elements: !216)
!14536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14532, size: 32)
!14537 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14511, file: !199, line: 68, baseType: !14538, size: 32, offset: 64)
!14538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14539, size: 32)
!14539 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !14540)
!14540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !14541)
!14541 = !{!14542}
!14542 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14540, file: !131, line: 232, baseType: !14543, size: 64)
!14543 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !14518)
!14544 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14511, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!14545 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14511, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!14546 = !DIDerivedType(tag: DW_TAG_member, scope: !14511, file: !199, line: 90, baseType: !14547, size: 16, offset: 112)
!14547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14511, file: !199, line: 90, size: 16, elements: !14548)
!14548 = !{!14549, !14554}
!14549 = !DIDerivedType(tag: DW_TAG_member, scope: !14547, file: !199, line: 91, baseType: !14550, size: 16)
!14550 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14547, file: !199, line: 91, size: 16, elements: !14551)
!14551 = !{!14552, !14553}
!14552 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14550, file: !199, line: 96, baseType: !229, size: 8)
!14553 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14550, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!14554 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14547, file: !199, line: 100, baseType: !181, size: 16)
!14555 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14511, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!14556 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14511, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!14557 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14511, file: !199, line: 131, baseType: !14558, size: 192, offset: 192)
!14558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !14559)
!14559 = !{!14560, !14561, !14567}
!14560 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14558, file: !131, line: 245, baseType: !14517, size: 64)
!14561 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14558, file: !131, line: 246, baseType: !14562, size: 32, offset: 64)
!14562 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !14563)
!14563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14564, size: 32)
!14564 = !DISubroutineType(types: !14565)
!14565 = !{null, !14566}
!14566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14558, size: 32)
!14567 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14558, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!14568 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14508, file: !199, line: 250, baseType: !14569, size: 288, offset: 384)
!14569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !14570)
!14570 = !{!14571, !14572, !14573, !14574, !14575, !14576, !14577, !14578, !14579}
!14571 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14569, file: !248, line: 26, baseType: !111, size: 32)
!14572 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14569, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!14573 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14569, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!14574 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14569, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!14575 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14569, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!14576 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14569, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!14577 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14569, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!14578 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14569, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!14579 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14569, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!14580 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14508, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!14581 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14508, file: !199, line: 256, baseType: !14539, size: 64, offset: 704)
!14582 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14508, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!14583 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14508, file: !199, line: 300, baseType: !14584, size: 96, offset: 800)
!14584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !14585)
!14585 = !{!14586, !14587, !14588}
!14586 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14584, file: !199, line: 153, baseType: !22, size: 32)
!14587 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14584, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!14588 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14584, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!14589 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14508, file: !199, line: 325, baseType: !14590, size: 32, offset: 896)
!14590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14591, size: 32)
!14591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !14592)
!14592 = !{!14593, !14599, !14600}
!14593 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14591, file: !127, line: 5074, baseType: !14594, size: 96)
!14594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !14595)
!14595 = !{!14596, !14597, !14598}
!14596 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14594, file: !274, line: 57, baseType: !277, size: 32)
!14597 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14594, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!14598 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14594, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!14599 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14591, file: !127, line: 5075, baseType: !14539, size: 64, offset: 96)
!14600 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14591, file: !127, line: 5076, baseType: !14601, size: 32, offset: 160)
!14601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !14602)
!14602 = !{!14603}
!14603 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !14601, file: !152, line: 52, baseType: !22, size: 32)
!14604 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14508, file: !199, line: 343, baseType: !14605, size: 64, offset: 928)
!14605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !14606)
!14606 = !{!14607, !14608}
!14607 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14605, file: !248, line: 63, baseType: !111, size: 32)
!14608 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14605, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!14609 = !{!14610, !14611, !14612}
!14610 = !DILocalVariable(name: "reason", arg: 1, scope: !14460, file: !3575, line: 209, type: !32)
!14611 = !DILocalVariable(name: "esf", arg: 2, scope: !14460, file: !3575, line: 209, type: !14463)
!14612 = !DILocalVariable(name: "thread", arg: 3, scope: !14460, file: !3575, line: 210, type: !14507)
!14613 = !DILocation(line: 0, scope: !14460)
!14614 = !DILocation(line: 212, column: 1, scope: !14460)
!14615 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3575, file: !3575, line: 214, type: !14616, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14618)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{null, !22, !22}
!14618 = !{!14619, !14620}
!14619 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14615, file: !3575, line: 214, type: !22)
!14620 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14615, file: !3575, line: 214, type: !22)
!14621 = !DILocation(line: 0, scope: !14615)
!14622 = !DILocation(line: 216, column: 1, scope: !14615)
!14623 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3575, file: !3575, line: 218, type: !14624, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14626)
!14624 = !DISubroutineType(types: !14625)
!14625 = !{null, !550, !156}
!14626 = !{!14627, !14628}
!14627 = !DILocalVariable(name: "buf", arg: 1, scope: !14623, file: !3575, line: 218, type: !550)
!14628 = !DILocalVariable(name: "buflen", arg: 2, scope: !14623, file: !3575, line: 218, type: !156)
!14629 = !DILocation(line: 0, scope: !14623)
!14630 = !DILocation(line: 220, column: 1, scope: !14623)
!14631 = distinct !DISubprogram(name: "coredump_query", scope: !3575, file: !3575, line: 222, type: !14632, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14634)
!14632 = !DISubroutineType(types: !14633)
!14633 = !{!103, !3574, !102}
!14634 = !{!14635, !14636}
!14635 = !DILocalVariable(name: "query_id", arg: 1, scope: !14631, file: !3575, line: 222, type: !3574)
!14636 = !DILocalVariable(name: "arg", arg: 2, scope: !14631, file: !3575, line: 222, type: !102)
!14637 = !DILocation(line: 0, scope: !14631)
!14638 = !DILocation(line: 224, column: 2, scope: !14631)
!14639 = distinct !DISubprogram(name: "coredump_cmd", scope: !3575, file: !3575, line: 227, type: !14640, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14642)
!14640 = !DISubroutineType(types: !14641)
!14641 = !{!103, !3581, !102}
!14642 = !{!14643, !14644}
!14643 = !DILocalVariable(name: "query_id", arg: 1, scope: !14639, file: !3575, line: 227, type: !3581)
!14644 = !DILocalVariable(name: "arg", arg: 2, scope: !14639, file: !3575, line: 227, type: !102)
!14645 = !DILocation(line: 0, scope: !14639)
!14646 = !DILocation(line: 229, column: 2, scope: !14639)
!14647 = distinct !DISubprogram(name: "arch_system_halt", scope: !14648, file: !14648, line: 23, type: !7507, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14649)
!14648 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14649 = !{!14650}
!14650 = !DILocalVariable(name: "reason", arg: 1, scope: !14647, file: !14648, line: 23, type: !32)
!14651 = !DILocation(line: 0, scope: !14647)
!14652 = !DILocation(line: 55, column: 2, scope: !14653, inlinedAt: !14657)
!14653 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14654)
!14654 = !{!14655, !14656}
!14655 = !DILocalVariable(name: "key", scope: !14653, file: !7496, line: 44, type: !32)
!14656 = !DILocalVariable(name: "tmp", scope: !14653, file: !7496, line: 53, type: !32)
!14657 = distinct !DILocation(line: 31, column: 8, scope: !14647)
!14658 = !{i64 1654202}
!14659 = !DILocation(line: 0, scope: !14653, inlinedAt: !14657)
!14660 = !DILocation(line: 32, column: 2, scope: !14647)
!14661 = !DILocation(line: 32, column: 2, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14663, file: !14648, line: 32, column: 2)
!14663 = distinct !DILexicalBlock(scope: !14647, file: !14648, line: 32, column: 2)
!14664 = distinct !{!14664, !14665, !14666}
!14665 = !DILocation(line: 32, column: 2, scope: !14663)
!14666 = !DILocation(line: 34, column: 2, scope: !14663)
!14667 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14648, file: !14648, line: 39, type: !14668, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14670)
!14668 = !DISubroutineType(types: !14669)
!14669 = !{null, !32, !14463}
!14670 = !{!14671, !14672}
!14671 = !DILocalVariable(name: "reason", arg: 1, scope: !14667, file: !14648, line: 39, type: !32)
!14672 = !DILocalVariable(name: "esf", arg: 2, scope: !14667, file: !14648, line: 40, type: !14463)
!14673 = !DILocation(line: 0, scope: !14667)
!14674 = !DILocation(line: 45, column: 2, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14676, file: !14648, line: 45, column: 2)
!14676 = distinct !DILexicalBlock(scope: !14677, file: !14648, line: 45, column: 2)
!14677 = distinct !DILexicalBlock(scope: !14678, file: !14648, line: 45, column: 2)
!14678 = distinct !DILexicalBlock(scope: !14667, file: !14648, line: 45, column: 2)
!14679 = !DILocation(line: 46, column: 2, scope: !14667)
!14680 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14648, file: !14648, line: 81, type: !7507, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14681)
!14681 = !{!14682}
!14682 = !DILocalVariable(name: "reason", arg: 1, scope: !14680, file: !14648, line: 81, type: !32)
!14683 = !DILocation(line: 0, scope: !14680)
!14684 = !DILocation(line: 83, column: 2, scope: !14680)
!14685 = distinct !DISubprogram(name: "z_fatal_error", scope: !14648, file: !14648, line: 96, type: !14668, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14686)
!14686 = !{!14687, !14688, !14689, !14690}
!14687 = !DILocalVariable(name: "reason", arg: 1, scope: !14685, file: !14648, line: 96, type: !32)
!14688 = !DILocalVariable(name: "esf", arg: 2, scope: !14685, file: !14648, line: 96, type: !14463)
!14689 = !DILocalVariable(name: "key", scope: !14685, file: !14648, line: 102, type: !32)
!14690 = !DILocalVariable(name: "thread", scope: !14685, file: !14648, line: 103, type: !14507)
!14691 = !DILocation(line: 0, scope: !14685)
!14692 = !DILocation(line: 55, column: 2, scope: !14653, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 102, column: 21, scope: !14685)
!14694 = !DILocation(line: 0, scope: !14653, inlinedAt: !14693)
!14695 = !DILocation(line: 104, column: 4, scope: !14685)
!14696 = !DILocation(line: 109, column: 2, scope: !14697)
!14697 = distinct !DILexicalBlock(scope: !14698, file: !14648, line: 109, column: 2)
!14698 = distinct !DILexicalBlock(scope: !14699, file: !14648, line: 109, column: 2)
!14699 = distinct !DILexicalBlock(scope: !14700, file: !14648, line: 109, column: 2)
!14700 = distinct !DILexicalBlock(scope: !14685, file: !14648, line: 109, column: 2)
!14701 = !DILocation(line: 119, column: 11, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14685, file: !14648, line: 119, column: 6)
!14703 = !DILocation(line: 119, column: 20, scope: !14702)
!14704 = !DILocalVariable(name: "esf", arg: 1, scope: !14705, file: !8843, line: 71, type: !14463)
!14705 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !8843, file: !8843, line: 71, type: !14706, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14708)
!14706 = !DISubroutineType(types: !14707)
!14707 = !{!122, !14463}
!14708 = !{!14704}
!14709 = !DILocation(line: 0, scope: !14705, inlinedAt: !14710)
!14710 = distinct !DILocation(line: 119, column: 23, scope: !14702)
!14711 = !DILocation(line: 73, column: 21, scope: !14705, inlinedAt: !14710)
!14712 = !DILocation(line: 73, column: 26, scope: !14705, inlinedAt: !14710)
!14713 = !DILocation(line: 73, column: 9, scope: !14705, inlinedAt: !14710)
!14714 = !DILocation(line: 119, column: 6, scope: !14685)
!14715 = !DILocation(line: 120, column: 3, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14717, file: !14648, line: 120, column: 3)
!14717 = distinct !DILexicalBlock(scope: !14718, file: !14648, line: 120, column: 3)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !14648, line: 120, column: 3)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !14648, line: 120, column: 3)
!14720 = distinct !DILexicalBlock(scope: !14702, file: !14648, line: 119, column: 57)
!14721 = !DILocation(line: 121, column: 2, scope: !14720)
!14722 = !DILocation(line: 124, column: 2, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14724, file: !14648, line: 124, column: 2)
!14724 = distinct !DILexicalBlock(scope: !14725, file: !14648, line: 124, column: 2)
!14725 = distinct !DILexicalBlock(scope: !14726, file: !14648, line: 124, column: 2)
!14726 = distinct !DILexicalBlock(scope: !14685, file: !14648, line: 124, column: 2)
!14727 = !DILocation(line: 131, column: 2, scope: !14685)
!14728 = !DILocation(line: 147, column: 3, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14730, file: !14648, line: 147, column: 3)
!14730 = distinct !DILexicalBlock(scope: !14731, file: !14648, line: 147, column: 3)
!14731 = distinct !DILexicalBlock(scope: !14732, file: !14648, line: 146, column: 32)
!14732 = distinct !DILexicalBlock(scope: !14685, file: !14648, line: 146, column: 6)
!14733 = !DILocation(line: 147, column: 3, scope: !14730)
!14734 = !DILocation(line: 147, column: 3, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14729, file: !14648, line: 147, column: 3)
!14736 = !DILocalVariable(name: "key", arg: 1, scope: !14737, file: !7496, line: 84, type: !32)
!14737 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14738)
!14738 = !{!14736}
!14739 = !DILocation(line: 0, scope: !14737, inlinedAt: !14740)
!14740 = distinct !DILocation(line: 186, column: 2, scope: !14685)
!14741 = !DILocation(line: 95, column: 2, scope: !14737, inlinedAt: !14740)
!14742 = !{i64 1655019}
!14743 = !DILocation(line: 189, column: 3, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14745, file: !14648, line: 188, column: 41)
!14745 = distinct !DILexicalBlock(scope: !14685, file: !14648, line: 188, column: 6)
!14746 = !DILocation(line: 191, column: 1, scope: !14685)
!14747 = distinct !DISubprogram(name: "k_current_get", scope: !127, file: !127, line: 530, type: !14748, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !2512)
!14748 = !DISubroutineType(types: !14749)
!14749 = !{!14750}
!14750 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !14507)
!14751 = !DILocation(line: 535, column: 9, scope: !14747)
!14752 = !DILocation(line: 535, column: 2, scope: !14747)
!14753 = distinct !DISubprogram(name: "reason_to_str", scope: !14648, file: !14648, line: 62, type: !14754, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14756)
!14754 = !DISubroutineType(types: !14755)
!14755 = !{!108, !32}
!14756 = !{!14757}
!14757 = !DILocalVariable(name: "reason", arg: 1, scope: !14753, file: !14648, line: 62, type: !32)
!14758 = !DILocation(line: 0, scope: !14753)
!14759 = !DILocation(line: 64, column: 2, scope: !14753)
!14760 = !DILocation(line: 0, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14753, file: !14648, line: 64, column: 18)
!14762 = !DILocation(line: 78, column: 1, scope: !14753)
!14763 = distinct !DISubprogram(name: "thread_name_get", scope: !14648, file: !14648, line: 51, type: !14764, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14766)
!14764 = !DISubroutineType(types: !14765)
!14765 = !{!108, !14507}
!14766 = !{!14767, !14768}
!14767 = !DILocalVariable(name: "thread", arg: 1, scope: !14763, file: !14648, line: 51, type: !14507)
!14768 = !DILocalVariable(name: "thread_name", scope: !14763, file: !14648, line: 53, type: !108)
!14769 = !DILocation(line: 0, scope: !14763)
!14770 = !DILocation(line: 53, column: 36, scope: !14763)
!14771 = !DILocation(line: 53, column: 28, scope: !14763)
!14772 = !DILocation(line: 53, column: 47, scope: !14763)
!14773 = !DILocation(line: 55, column: 19, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14763, file: !14648, line: 55, column: 6)
!14775 = !DILocation(line: 55, column: 28, scope: !14774)
!14776 = !DILocation(line: 55, column: 32, scope: !14774)
!14777 = !DILocation(line: 55, column: 47, scope: !14774)
!14778 = !DILocation(line: 55, column: 6, scope: !14763)
!14779 = !DILocation(line: 57, column: 2, scope: !14780)
!14780 = distinct !DILexicalBlock(scope: !14774, file: !14648, line: 55, column: 57)
!14781 = !DILocation(line: 59, column: 2, scope: !14763)
!14782 = distinct !DISubprogram(name: "k_thread_abort", scope: !5243, file: !5243, line: 188, type: !14783, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !14785)
!14783 = !DISubroutineType(types: !14784)
!14784 = !{null, !14750}
!14785 = !{!14786}
!14786 = !DILocalVariable(name: "thread", arg: 1, scope: !14782, file: !5243, line: 188, type: !14750)
!14787 = !DILocation(line: 0, scope: !14782)
!14788 = !DILocation(line: 197, column: 2, scope: !14789)
!14789 = distinct !DILexicalBlock(scope: !14782, file: !5243, line: 197, column: 2)
!14790 = !{i64 2152224453}
!14791 = !DILocation(line: 198, column: 2, scope: !14782)
!14792 = !DILocation(line: 199, column: 1, scope: !14782)
!14793 = distinct !DISubprogram(name: "z_current_get", scope: !5243, file: !5243, line: 173, type: !14748, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3571, retainedNodes: !2512)
!14794 = !DILocation(line: 180, column: 2, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14793, file: !5243, line: 180, column: 2)
!14796 = !{i64 2152224385}
!14797 = !DILocation(line: 181, column: 9, scope: !14793)
!14798 = !DILocation(line: 181, column: 2, scope: !14793)
!14799 = distinct !DISubprogram(name: "z_early_memset", scope: !2312, file: !2312, line: 108, type: !14800, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14802)
!14800 = !DISubroutineType(types: !14801)
!14801 = !{null, !102, !103, !156}
!14802 = !{!14803, !14804, !14805}
!14803 = !DILocalVariable(name: "dst", arg: 1, scope: !14799, file: !2312, line: 108, type: !102)
!14804 = !DILocalVariable(name: "c", arg: 2, scope: !14799, file: !2312, line: 108, type: !103)
!14805 = !DILocalVariable(name: "n", arg: 3, scope: !14799, file: !2312, line: 108, type: !156)
!14806 = !DILocation(line: 0, scope: !14799)
!14807 = !DILocation(line: 110, column: 9, scope: !14799)
!14808 = !DILocation(line: 111, column: 1, scope: !14799)
!14809 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2312, file: !2312, line: 121, type: !14810, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14812)
!14810 = !DISubroutineType(types: !14811)
!14811 = !{null, !102, !13, !156}
!14812 = !{!14813, !14814, !14815}
!14813 = !DILocalVariable(name: "dst", arg: 1, scope: !14809, file: !2312, line: 121, type: !102)
!14814 = !DILocalVariable(name: "src", arg: 2, scope: !14809, file: !2312, line: 121, type: !13)
!14815 = !DILocalVariable(name: "n", arg: 3, scope: !14809, file: !2312, line: 121, type: !156)
!14816 = !DILocation(line: 0, scope: !14809)
!14817 = !DILocation(line: 123, column: 9, scope: !14809)
!14818 = !DILocation(line: 124, column: 1, scope: !14809)
!14819 = distinct !DISubprogram(name: "z_bss_zero", scope: !2312, file: !2312, line: 132, type: !323, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2512)
!14820 = !DILocation(line: 143, column: 2, scope: !14819)
!14821 = !DILocation(line: 168, column: 1, scope: !14819)
!14822 = distinct !DISubprogram(name: "z_init_cpu", scope: !2312, file: !2312, line: 372, type: !10347, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14823)
!14823 = !{!14824}
!14824 = !DILocalVariable(name: "id", arg: 1, scope: !14822, file: !2312, line: 372, type: !103)
!14825 = !DILocation(line: 0, scope: !14822)
!14826 = !DILocation(line: 374, column: 2, scope: !14822)
!14827 = !DILocation(line: 375, column: 34, scope: !14822)
!14828 = !DILocation(line: 375, column: 19, scope: !14822)
!14829 = !DILocation(line: 375, column: 31, scope: !14822)
!14830 = !DILocation(line: 376, column: 24, scope: !14822)
!14831 = !DILocation(line: 376, column: 19, scope: !14822)
!14832 = !DILocation(line: 376, column: 22, scope: !14822)
!14833 = !DILocation(line: 378, column: 26, scope: !14822)
!14834 = !DILocation(line: 378, column: 4, scope: !14822)
!14835 = !DILocation(line: 378, column: 50, scope: !14822)
!14836 = !DILocation(line: 377, column: 19, scope: !14822)
!14837 = !DILocation(line: 377, column: 29, scope: !14822)
!14838 = !DILocation(line: 384, column: 1, scope: !14822)
!14839 = distinct !DISubprogram(name: "init_idle_thread", scope: !2312, file: !2312, line: 343, type: !10347, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14840)
!14840 = !{!14841, !14842, !14843, !14846}
!14841 = !DILocalVariable(name: "i", arg: 1, scope: !14839, file: !2312, line: 343, type: !103)
!14842 = !DILocalVariable(name: "thread", scope: !14839, file: !2312, line: 345, type: !2404)
!14843 = !DILocalVariable(name: "stack", scope: !14839, file: !2312, line: 346, type: !14844)
!14844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14845, size: 32)
!14845 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !2521)
!14846 = !DILocalVariable(name: "tname", scope: !14839, file: !2312, line: 358, type: !160)
!14847 = !DILocation(line: 0, scope: !14839)
!14848 = !DILocation(line: 345, column: 29, scope: !14839)
!14849 = !DILocation(line: 346, column: 28, scope: !14839)
!14850 = !DILocation(line: 362, column: 37, scope: !14839)
!14851 = !DILocation(line: 362, column: 36, scope: !14839)
!14852 = !DILocation(line: 361, column: 2, scope: !14839)
!14853 = !DILocation(line: 365, column: 2, scope: !14839)
!14854 = !DILocation(line: 370, column: 1, scope: !14839)
!14855 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !305, file: !305, line: 331, type: !14856, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14858)
!14856 = !DISubroutineType(types: !14857)
!14857 = !{!160, !14844}
!14858 = !{!14859}
!14859 = !DILocalVariable(name: "sym", arg: 1, scope: !14855, file: !305, line: 331, type: !14844)
!14860 = !DILocation(line: 0, scope: !14855)
!14861 = !DILocation(line: 333, column: 21, scope: !14855)
!14862 = !DILocation(line: 333, column: 2, scope: !14855)
!14863 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14864, file: !14864, line: 155, type: !14865, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14867)
!14864 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14865 = !DISubroutineType(types: !14866)
!14866 = !{null, !2404}
!14867 = !{!14868}
!14868 = !DILocalVariable(name: "thread", arg: 1, scope: !14863, file: !14864, line: 155, type: !2404)
!14869 = !DILocation(line: 0, scope: !14863)
!14870 = !DILocation(line: 157, column: 15, scope: !14863)
!14871 = !DILocation(line: 157, column: 28, scope: !14863)
!14872 = !DILocation(line: 158, column: 1, scope: !14863)
!14873 = distinct !DISubprogram(name: "z_cstart", scope: !2312, file: !2312, line: 501, type: !323, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14874)
!14874 = !{!14875}
!14875 = !DILocalVariable(name: "dummy_thread", scope: !14873, file: !2312, line: 518, type: !2405)
!14876 = !DILocation(line: 507, column: 2, scope: !14873)
!14877 = !DILocation(line: 43, column: 14, scope: !14878, inlinedAt: !14882)
!14878 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !14879, file: !14879, line: 40, type: !323, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14880)
!14879 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14880 = !{!14881}
!14881 = !DILocalVariable(name: "msp", scope: !14878, file: !14879, line: 42, type: !111)
!14882 = distinct !DILocation(line: 44, column: 2, scope: !14883, inlinedAt: !14885)
!14883 = distinct !DISubprogram(name: "arch_kernel_init", scope: !14884, file: !14884, line: 42, type: !323, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2512)
!14884 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14885 = distinct !DILocation(line: 510, column: 2, scope: !14873)
!14886 = !DILocation(line: 43, column: 3, scope: !14878, inlinedAt: !14882)
!14887 = !DILocation(line: 43, column: 60, scope: !14878, inlinedAt: !14882)
!14888 = !DILocation(line: 0, scope: !14878, inlinedAt: !14882)
!14889 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !14890, file: !7834, line: 1153, type: !111)
!14890 = distinct !DISubprogram(name: "__set_MSP", scope: !7834, file: !7834, line: 1153, type: !7520, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14891)
!14891 = !{!14889}
!14892 = !DILocation(line: 0, scope: !14890, inlinedAt: !14893)
!14893 = distinct !DILocation(line: 46, column: 2, scope: !14878, inlinedAt: !14882)
!14894 = !DILocation(line: 1155, column: 3, scope: !14890, inlinedAt: !14893)
!14895 = !{i64 2467642}
!14896 = !DILocation(line: 62, column: 11, scope: !14878, inlinedAt: !14882)
!14897 = !DILocation(line: 102, column: 2, scope: !14898, inlinedAt: !14899)
!14898 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !8843, file: !8843, line: 97, type: !323, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2512)
!14899 = distinct !DILocation(line: 45, column: 2, scope: !14883, inlinedAt: !14885)
!14900 = !DILocation(line: 108, column: 2, scope: !14898, inlinedAt: !14899)
!14901 = !DILocation(line: 112, column: 2, scope: !14898, inlinedAt: !14899)
!14902 = !DILocation(line: 113, column: 2, scope: !14898, inlinedAt: !14899)
!14903 = !DILocation(line: 114, column: 2, scope: !14898, inlinedAt: !14899)
!14904 = !DILocation(line: 116, column: 2, scope: !14898, inlinedAt: !14899)
!14905 = !DILocation(line: 123, column: 13, scope: !14898, inlinedAt: !14899)
!14906 = !DILocation(line: 46, column: 2, scope: !14883, inlinedAt: !14885)
!14907 = !DILocation(line: 47, column: 2, scope: !14883, inlinedAt: !14885)
!14908 = !DILocation(line: 174, column: 12, scope: !14909, inlinedAt: !14910)
!14909 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !8843, file: !8843, line: 169, type: !323, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !2512)
!14910 = distinct !DILocation(line: 48, column: 2, scope: !14883, inlinedAt: !14885)
!14911 = !DILocation(line: 179, column: 12, scope: !14909, inlinedAt: !14910)
!14912 = !DILocation(line: 50, column: 2, scope: !14883, inlinedAt: !14885)
!14913 = !DILocation(line: 57, column: 2, scope: !14883, inlinedAt: !14885)
!14914 = !DILocation(line: 518, column: 2, scope: !14873)
!14915 = !DILocation(line: 518, column: 18, scope: !14873)
!14916 = !DILocation(line: 520, column: 2, scope: !14873)
!14917 = !DILocation(line: 523, column: 2, scope: !14873)
!14918 = !DILocation(line: 526, column: 2, scope: !14873)
!14919 = !DILocation(line: 527, column: 2, scope: !14873)
!14920 = !DILocation(line: 543, column: 24, scope: !14873)
!14921 = !DILocation(line: 543, column: 2, scope: !14873)
!14922 = !DILocation(line: 0, scope: !2543)
!14923 = !DILocation(line: 246, column: 15, scope: !2561)
!14924 = !DILocation(line: 246, column: 36, scope: !2560)
!14925 = !DILocation(line: 246, column: 2, scope: !2561)
!14926 = !DILocation(line: 247, column: 37, scope: !2559)
!14927 = !DILocation(line: 0, scope: !2559)
!14928 = !DILocation(line: 248, column: 19, scope: !2559)
!14929 = !DILocation(line: 248, column: 12, scope: !2559)
!14930 = !DILocation(line: 250, column: 11, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !2559, file: !2312, line: 250, column: 7)
!14932 = !DILocation(line: 250, column: 7, scope: !2559)
!14933 = !DILocation(line: 254, column: 11, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !2312, line: 254, column: 8)
!14935 = distinct !DILexicalBlock(scope: !14931, file: !2312, line: 250, column: 20)
!14936 = !DILocation(line: 254, column: 8, scope: !14935)
!14937 = !DILocation(line: 255, column: 9, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14934, file: !2312, line: 254, column: 17)
!14939 = !DILocation(line: 258, column: 9, scope: !14938)
!14940 = !DILocation(line: 261, column: 28, scope: !14938)
!14941 = !DILocation(line: 261, column: 10, scope: !14938)
!14942 = !DILocation(line: 261, column: 17, scope: !14938)
!14943 = !DILocation(line: 261, column: 26, scope: !14938)
!14944 = !DILocation(line: 262, column: 4, scope: !14938)
!14945 = !DILocation(line: 263, column: 9, scope: !14935)
!14946 = !DILocation(line: 263, column: 16, scope: !14935)
!14947 = !DILocation(line: 263, column: 28, scope: !14935)
!14948 = !DILocation(line: 264, column: 3, scope: !14935)
!14949 = !DILocation(line: 246, column: 60, scope: !2560)
!14950 = distinct !{!14950, !14925, !14951}
!14951 = !DILocation(line: 265, column: 2, scope: !2561)
!14952 = !DILocation(line: 266, column: 1, scope: !2543)
!14953 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !1005, file: !1005, line: 1638, type: !7874, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14954)
!14954 = !{!14955, !14956}
!14955 = !DILocalVariable(name: "IRQn", arg: 1, scope: !14953, file: !1005, line: 1638, type: !1338)
!14956 = !DILocalVariable(name: "priority", arg: 2, scope: !14953, file: !1005, line: 1638, type: !111)
!14957 = !DILocation(line: 0, scope: !14953)
!14958 = !DILocation(line: 1646, column: 48, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !14960, file: !1005, line: 1645, column: 3)
!14960 = distinct !DILexicalBlock(scope: !14953, file: !1005, line: 1640, column: 7)
!14961 = !DILocation(line: 1646, column: 32, scope: !14959)
!14962 = !DILocation(line: 1646, column: 40, scope: !14959)
!14963 = !DILocation(line: 1646, column: 5, scope: !14959)
!14964 = !DILocation(line: 1646, column: 46, scope: !14959)
!14965 = !DILocation(line: 1648, column: 1, scope: !14953)
!14966 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !14884, file: !14884, line: 32, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!14967 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !14968, file: !14968, line: 215, type: !14865, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14969)
!14968 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14969 = !{!14970}
!14970 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !14967, file: !14968, line: 215, type: !2404)
!14971 = !DILocation(line: 0, scope: !14967)
!14972 = !DILocation(line: 217, column: 21, scope: !14967)
!14973 = !DILocation(line: 217, column: 34, scope: !14967)
!14974 = !DILocation(line: 221, column: 21, scope: !14967)
!14975 = !DILocation(line: 221, column: 34, scope: !14967)
!14976 = !DILocation(line: 223, column: 27, scope: !14967)
!14977 = !DILocation(line: 223, column: 33, scope: !14967)
!14978 = !DILocation(line: 224, column: 27, scope: !14967)
!14979 = !DILocation(line: 224, column: 32, scope: !14967)
!14980 = !DILocation(line: 230, column: 2, scope: !14967)
!14981 = !DILocation(line: 239, column: 24, scope: !14967)
!14982 = !DILocation(line: 240, column: 1, scope: !14967)
!14983 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2312, file: !2312, line: 399, type: !14984, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14986)
!14984 = !DISubroutineType(types: !14985)
!14985 = !{!160}
!14986 = !{!14987}
!14987 = !DILocalVariable(name: "stack_ptr", scope: !14983, file: !2312, line: 401, type: !160)
!14988 = !DILocation(line: 404, column: 2, scope: !14983)
!14989 = !DILocation(line: 416, column: 24, scope: !14983)
!14990 = !DILocation(line: 418, column: 14, scope: !14983)
!14991 = !DILocation(line: 0, scope: !14983)
!14992 = !DILocation(line: 423, column: 2, scope: !14983)
!14993 = !DILocation(line: 424, column: 2, scope: !14983)
!14994 = !DILocation(line: 426, column: 2, scope: !14983)
!14995 = !DILocation(line: 428, column: 2, scope: !14983)
!14996 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2312, file: !2312, line: 432, type: !14997, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !14999)
!14997 = !DISubroutineType(types: !14998)
!14998 = !{null, !160}
!14999 = !{!15000}
!15000 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !14996, file: !2312, line: 432, type: !160)
!15001 = !DILocation(line: 0, scope: !14996)
!15002 = !DILocation(line: 435, column: 2, scope: !14996)
!15003 = !DILocation(line: 445, column: 2, scope: !14996)
!15004 = distinct !DISubprogram(name: "bg_thread_main", scope: !2312, file: !2312, line: 277, type: !312, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2308, retainedNodes: !15005)
!15005 = !{!15006, !15007, !15008}
!15006 = !DILocalVariable(name: "unused1", arg: 1, scope: !15004, file: !2312, line: 277, type: !102)
!15007 = !DILocalVariable(name: "unused2", arg: 2, scope: !15004, file: !2312, line: 277, type: !102)
!15008 = !DILocalVariable(name: "unused3", arg: 3, scope: !15004, file: !2312, line: 277, type: !102)
!15009 = !DILocation(line: 0, scope: !15004)
!15010 = !DILocation(line: 291, column: 20, scope: !15004)
!15011 = !DILocation(line: 293, column: 2, scope: !15004)
!15012 = !DILocation(line: 297, column: 2, scope: !15004)
!15013 = !DILocation(line: 305, column: 2, scope: !15004)
!15014 = !DILocation(line: 307, column: 2, scope: !15004)
!15015 = !DILocation(line: 330, column: 8, scope: !15004)
!15016 = !DILocation(line: 333, column: 34, scope: !15004)
!15017 = !DILocation(line: 339, column: 1, scope: !15004)
!15018 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2572, file: !2572, line: 45, type: !15019, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15027)
!15019 = !DISubroutineType(types: !15020)
!15020 = !{null, !15021, !102}
!15021 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !127, line: 103, baseType: !15022)
!15022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15023, size: 32)
!15023 = !DISubroutineType(types: !15024)
!15024 = !{null, !15025, !102}
!15025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15026, size: 32)
!15026 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2577)
!15027 = !{!15028, !15029}
!15028 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15018, file: !2572, line: 45, type: !15021)
!15029 = !DILocalVariable(name: "user_data", arg: 2, scope: !15018, file: !2572, line: 45, type: !102)
!15030 = !DILocation(line: 0, scope: !15018)
!15031 = !DILocation(line: 71, column: 1, scope: !15018)
!15032 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2572, file: !2572, line: 73, type: !15019, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15033)
!15033 = !{!15034, !15035}
!15034 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15032, file: !2572, line: 73, type: !15021)
!15035 = !DILocalVariable(name: "user_data", arg: 2, scope: !15032, file: !2572, line: 73, type: !102)
!15036 = !DILocation(line: 0, scope: !15032)
!15037 = !DILocation(line: 95, column: 1, scope: !15032)
!15038 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2572, file: !2572, line: 97, type: !8844, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !2512)
!15039 = !DILocation(line: 1031, column: 3, scope: !15040, inlinedAt: !15043)
!15040 = distinct !DISubprogram(name: "__get_IPSR", scope: !7834, file: !7834, line: 1027, type: !8837, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15041)
!15041 = !{!15042}
!15042 = !DILocalVariable(name: "result", scope: !15040, file: !7834, line: 1029, type: !111)
!15043 = distinct !DILocation(line: 48, column: 10, scope: !15044, inlinedAt: !15045)
!15044 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8843, file: !8843, line: 46, type: !8844, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !2512)
!15045 = distinct !DILocation(line: 99, column: 9, scope: !15038)
!15046 = !{i64 2473293}
!15047 = !DILocation(line: 0, scope: !15040, inlinedAt: !15043)
!15048 = !DILocation(line: 48, column: 9, scope: !15044, inlinedAt: !15045)
!15049 = !DILocation(line: 99, column: 2, scope: !15038)
!15050 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2572, file: !2572, line: 106, type: !323, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !2512)
!15051 = !DILocation(line: 108, column: 2, scope: !15050)
!15052 = !DILocation(line: 108, column: 17, scope: !15050)
!15053 = !DILocation(line: 108, column: 30, scope: !15050)
!15054 = !DILocation(line: 109, column: 1, scope: !15050)
!15055 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2572, file: !2572, line: 116, type: !323, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !2512)
!15056 = !DILocation(line: 118, column: 2, scope: !15055)
!15057 = !DILocation(line: 118, column: 17, scope: !15055)
!15058 = !DILocation(line: 118, column: 30, scope: !15055)
!15059 = !DILocation(line: 119, column: 1, scope: !15055)
!15060 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2572, file: !2572, line: 126, type: !8844, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !2512)
!15061 = !DILocation(line: 128, column: 10, scope: !15060)
!15062 = !DILocation(line: 128, column: 25, scope: !15060)
!15063 = !DILocation(line: 128, column: 38, scope: !15060)
!15064 = !DILocation(line: 128, column: 53, scope: !15060)
!15065 = !DILocation(line: 128, column: 2, scope: !15060)
!15066 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2572, file: !2572, line: 187, type: !15067, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15069)
!15067 = !DISubroutineType(types: !15068)
!15068 = !{!103, !2576, !108}
!15069 = !{!15070, !15071}
!15070 = !DILocalVariable(name: "thread", arg: 1, scope: !15066, file: !2572, line: 187, type: !2576)
!15071 = !DILocalVariable(name: "value", arg: 2, scope: !15066, file: !2572, line: 187, type: !108)
!15072 = !DILocation(line: 0, scope: !15066)
!15073 = !DILocation(line: 206, column: 2, scope: !15066)
!15074 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2572, file: !2572, line: 238, type: !15075, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15077)
!15075 = !DISubroutineType(types: !15076)
!15076 = !{!108, !2576}
!15077 = !{!15078}
!15078 = !DILocalVariable(name: "thread", arg: 1, scope: !15074, file: !2572, line: 238, type: !2576)
!15079 = !DILocation(line: 0, scope: !15074)
!15080 = !DILocation(line: 244, column: 2, scope: !15074)
!15081 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2572, file: !2572, line: 248, type: !15082, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15084)
!15082 = !DISubroutineType(types: !15083)
!15083 = !{!103, !2575, !160, !156}
!15084 = !{!15085, !15086, !15087}
!15085 = !DILocalVariable(name: "thread", arg: 1, scope: !15081, file: !2572, line: 248, type: !2575)
!15086 = !DILocalVariable(name: "buf", arg: 2, scope: !15081, file: !2572, line: 248, type: !160)
!15087 = !DILocalVariable(name: "size", arg: 3, scope: !15081, file: !2572, line: 248, type: !156)
!15088 = !DILocation(line: 0, scope: !15081)
!15089 = !DILocation(line: 257, column: 2, scope: !15081)
!15090 = !DILocation(line: 0, scope: !2571)
!15091 = !DILocation(line: 281, column: 11, scope: !15092)
!15092 = distinct !DILexicalBlock(scope: !2571, file: !2572, line: 281, column: 6)
!15093 = !DILocation(line: 281, column: 20, scope: !15092)
!15094 = !DILocation(line: 275, column: 45, scope: !2571)
!15095 = !DILocation(line: 285, column: 10, scope: !2571)
!15096 = !DILocation(line: 0, scope: !2694)
!15097 = !DILocation(line: 293, column: 39, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !2694, file: !2572, line: 293, column: 2)
!15099 = !DILocation(line: 293, column: 2, scope: !2694)
!15100 = !DILocation(line: 273, column: 14, scope: !2571)
!15101 = !DILocation(line: 309, column: 2, scope: !2571)
!15102 = !DILocation(line: 309, column: 11, scope: !2571)
!15103 = !DILocation(line: 311, column: 2, scope: !2571)
!15104 = !DILocation(line: 293, column: 26, scope: !15098)
!15105 = !DILocation(line: 294, column: 9, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15098, file: !2572, line: 293, column: 54)
!15107 = !DILocation(line: 295, column: 21, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15106, file: !2572, line: 295, column: 7)
!15109 = !DILocation(line: 295, column: 28, scope: !15108)
!15110 = !DILocation(line: 295, column: 7, scope: !15106)
!15111 = !DILocation(line: 299, column: 25, scope: !15106)
!15112 = !DILocation(line: 299, column: 41, scope: !15106)
!15113 = !DILocation(line: 300, column: 7, scope: !15106)
!15114 = !DILocation(line: 300, column: 26, scope: !15106)
!15115 = !DILocation(line: 299, column: 10, scope: !15106)
!15116 = !DILocation(line: 299, column: 7, scope: !15106)
!15117 = !DILocation(line: 302, column: 16, scope: !15106)
!15118 = !DILocation(line: 304, column: 20, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15106, file: !2572, line: 304, column: 7)
!15120 = !DILocation(line: 304, column: 7, scope: !15106)
!15121 = !DILocation(line: 305, column: 26, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !15119, file: !2572, line: 304, column: 26)
!15123 = !DILocation(line: 305, column: 42, scope: !15122)
!15124 = !DILocation(line: 305, column: 11, scope: !15122)
!15125 = !DILocation(line: 305, column: 8, scope: !15122)
!15126 = !DILocation(line: 306, column: 3, scope: !15122)
!15127 = !DILocation(line: 293, column: 50, scope: !15098)
!15128 = !DILocation(line: 312, column: 1, scope: !2571)
!15129 = distinct !DISubprogram(name: "copy_bytes", scope: !2572, file: !2572, line: 261, type: !15130, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15132)
!15130 = !DISubroutineType(types: !15131)
!15131 = !{!156, !160, !156, !108, !156}
!15132 = !{!15133, !15134, !15135, !15136, !15137}
!15133 = !DILocalVariable(name: "dest", arg: 1, scope: !15129, file: !2572, line: 261, type: !160)
!15134 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15129, file: !2572, line: 261, type: !156)
!15135 = !DILocalVariable(name: "src", arg: 3, scope: !15129, file: !2572, line: 261, type: !108)
!15136 = !DILocalVariable(name: "src_size", arg: 4, scope: !15129, file: !2572, line: 261, type: !156)
!15137 = !DILocalVariable(name: "bytes_to_copy", scope: !15129, file: !2572, line: 263, type: !156)
!15138 = !DILocation(line: 0, scope: !15129)
!15139 = !DILocation(line: 265, column: 18, scope: !15129)
!15140 = !DILocation(line: 266, column: 2, scope: !15129)
!15141 = !DILocation(line: 268, column: 2, scope: !15129)
!15142 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2572, file: !2572, line: 383, type: !15143, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15145)
!15143 = !DISubroutineType(types: !15144)
!15144 = !{null, !2576}
!15145 = !{!15146}
!15146 = !DILocalVariable(name: "thread", arg: 1, scope: !15142, file: !2572, line: 383, type: !2576)
!15147 = !DILocation(line: 0, scope: !15142)
!15148 = !DILocation(line: 387, column: 2, scope: !15142)
!15149 = !DILocation(line: 388, column: 1, scope: !15142)
!15150 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2572, file: !2572, line: 528, type: !15151, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15158)
!15151 = !DISubroutineType(types: !15152)
!15152 = !{!160, !2576, !15153, !156, !310, !102, !102, !102, !103, !111, !108}
!15153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15154, size: 32)
!15154 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !303, line: 44, baseType: !15155)
!15155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !305, line: 47, size: 8, elements: !15156)
!15156 = !{!15157}
!15157 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15155, file: !305, line: 48, baseType: !110, size: 8)
!15158 = !{!15159, !15160, !15161, !15162, !15163, !15164, !15165, !15166, !15167, !15168, !15169}
!15159 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15150, file: !2572, line: 528, type: !2576)
!15160 = !DILocalVariable(name: "stack", arg: 2, scope: !15150, file: !2572, line: 529, type: !15153)
!15161 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15150, file: !2572, line: 529, type: !156)
!15162 = !DILocalVariable(name: "entry", arg: 4, scope: !15150, file: !2572, line: 530, type: !310)
!15163 = !DILocalVariable(name: "p1", arg: 5, scope: !15150, file: !2572, line: 531, type: !102)
!15164 = !DILocalVariable(name: "p2", arg: 6, scope: !15150, file: !2572, line: 531, type: !102)
!15165 = !DILocalVariable(name: "p3", arg: 7, scope: !15150, file: !2572, line: 531, type: !102)
!15166 = !DILocalVariable(name: "prio", arg: 8, scope: !15150, file: !2572, line: 532, type: !103)
!15167 = !DILocalVariable(name: "options", arg: 9, scope: !15150, file: !2572, line: 532, type: !111)
!15168 = !DILocalVariable(name: "name", arg: 10, scope: !15150, file: !2572, line: 532, type: !108)
!15169 = !DILocalVariable(name: "stack_ptr", scope: !15150, file: !2572, line: 534, type: !160)
!15170 = !DILocation(line: 0, scope: !15150)
!15171 = !DILocation(line: 536, column: 2, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15173, file: !2572, line: 536, column: 2)
!15173 = distinct !DILexicalBlock(scope: !15174, file: !2572, line: 536, column: 2)
!15174 = distinct !DILexicalBlock(scope: !15150, file: !2572, line: 536, column: 2)
!15175 = !DILocation(line: 536, column: 2, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !15172, file: !2572, line: 536, column: 2)
!15177 = !DILocation(line: 550, column: 28, scope: !15150)
!15178 = !DILocation(line: 550, column: 2, scope: !15150)
!15179 = !DILocation(line: 553, column: 34, scope: !15150)
!15180 = !DILocation(line: 553, column: 2, scope: !15150)
!15181 = !DILocation(line: 554, column: 14, scope: !15150)
!15182 = !DILocation(line: 564, column: 2, scope: !15150)
!15183 = !DILocation(line: 567, column: 14, scope: !15150)
!15184 = !DILocation(line: 567, column: 24, scope: !15150)
!15185 = !DILocation(line: 612, column: 7, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !15150, file: !2572, line: 612, column: 6)
!15187 = !DILocation(line: 612, column: 6, scope: !15150)
!15188 = !DILocation(line: 627, column: 40, scope: !15150)
!15189 = !DILocation(line: 637, column: 2, scope: !15150)
!15190 = !DILocation(line: 613, column: 15, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15186, file: !2572, line: 612, column: 17)
!15192 = !DILocation(line: 613, column: 29, scope: !15191)
!15193 = !DILocation(line: 638, column: 1, scope: !15150)
!15194 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !14864, file: !14864, line: 78, type: !15195, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15197)
!15195 = !DISubroutineType(types: !15196)
!15196 = !{!122, !102}
!15197 = !{!15198}
!15198 = !DILocalVariable(name: "entry_point", arg: 1, scope: !15194, file: !14864, line: 78, type: !102)
!15199 = !DILocation(line: 0, scope: !15194)
!15200 = !DILocation(line: 80, column: 21, scope: !15194)
!15201 = !DILocation(line: 80, column: 2, scope: !15194)
!15202 = distinct !DISubprogram(name: "z_waitq_init", scope: !15203, file: !15203, line: 47, type: !15204, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15206)
!15203 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15204 = !DISubroutineType(types: !15205)
!15205 = !{null, !2607}
!15206 = !{!15207}
!15207 = !DILocalVariable(name: "w", arg: 1, scope: !15202, file: !15203, line: 47, type: !2607)
!15208 = !DILocation(line: 0, scope: !15202)
!15209 = !DILocation(line: 49, column: 21, scope: !15202)
!15210 = !DILocation(line: 49, column: 2, scope: !15202)
!15211 = !DILocation(line: 50, column: 1, scope: !15202)
!15212 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2572, file: !2572, line: 791, type: !15213, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15216)
!15213 = !DISubroutineType(types: !15214)
!15214 = !{null, !15215, !103, !111, !32}
!15215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!15216 = !{!15217, !15218, !15219, !15220}
!15217 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15212, file: !2572, line: 791, type: !15215)
!15218 = !DILocalVariable(name: "priority", arg: 2, scope: !15212, file: !2572, line: 791, type: !103)
!15219 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15212, file: !2572, line: 792, type: !111)
!15220 = !DILocalVariable(name: "options", arg: 4, scope: !15212, file: !2572, line: 792, type: !32)
!15221 = !DILocation(line: 0, scope: !15212)
!15222 = !DILocation(line: 795, column: 15, scope: !15212)
!15223 = !DILocation(line: 795, column: 25, scope: !15212)
!15224 = !DILocation(line: 796, column: 30, scope: !15212)
!15225 = !DILocation(line: 796, column: 15, scope: !15212)
!15226 = !DILocation(line: 796, column: 28, scope: !15212)
!15227 = !DILocation(line: 797, column: 30, scope: !15212)
!15228 = !DILocation(line: 797, column: 15, scope: !15212)
!15229 = !DILocation(line: 797, column: 28, scope: !15212)
!15230 = !DILocation(line: 799, column: 22, scope: !15212)
!15231 = !DILocation(line: 799, column: 15, scope: !15212)
!15232 = !DILocation(line: 799, column: 20, scope: !15212)
!15233 = !DILocation(line: 801, column: 15, scope: !15212)
!15234 = !DILocation(line: 801, column: 28, scope: !15212)
!15235 = !DILocation(line: 814, column: 2, scope: !15212)
!15236 = !DILocation(line: 815, column: 1, scope: !15212)
!15237 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2572, file: !2572, line: 449, type: !15238, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15240)
!15238 = !DISubroutineType(types: !15239)
!15239 = !{!160, !2576, !15153, !156}
!15240 = !{!15241, !15242, !15243, !15244, !15245, !15246, !15247, !15248}
!15241 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15237, file: !2572, line: 449, type: !2576)
!15242 = !DILocalVariable(name: "stack", arg: 2, scope: !15237, file: !2572, line: 450, type: !15153)
!15243 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15237, file: !2572, line: 450, type: !156)
!15244 = !DILocalVariable(name: "stack_obj_size", scope: !15237, file: !2572, line: 452, type: !156)
!15245 = !DILocalVariable(name: "stack_buf_size", scope: !15237, file: !2572, line: 452, type: !156)
!15246 = !DILocalVariable(name: "stack_ptr", scope: !15237, file: !2572, line: 453, type: !160)
!15247 = !DILocalVariable(name: "stack_buf_start", scope: !15237, file: !2572, line: 453, type: !160)
!15248 = !DILocalVariable(name: "delta", scope: !15237, file: !2572, line: 454, type: !156)
!15249 = !DILocation(line: 0, scope: !15237)
!15250 = !DILocation(line: 465, column: 20, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15237, file: !2572, line: 463, column: 2)
!15252 = !DILocation(line: 466, column: 21, scope: !15251)
!15253 = !DILocation(line: 473, column: 28, scope: !15237)
!15254 = !DILocation(line: 514, column: 33, scope: !15237)
!15255 = !DILocation(line: 514, column: 25, scope: !15237)
!15256 = !DILocation(line: 514, column: 31, scope: !15237)
!15257 = !DILocation(line: 515, column: 25, scope: !15237)
!15258 = !DILocation(line: 515, column: 30, scope: !15237)
!15259 = !DILocation(line: 516, column: 25, scope: !15237)
!15260 = !DILocation(line: 516, column: 31, scope: !15237)
!15261 = !DILocation(line: 520, column: 2, scope: !15237)
!15262 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !305, file: !305, line: 331, type: !15263, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15265)
!15263 = !DISubroutineType(types: !15264)
!15264 = !{!160, !15153}
!15265 = !{!15266}
!15266 = !DILocalVariable(name: "sym", arg: 1, scope: !15262, file: !305, line: 331, type: !15153)
!15267 = !DILocation(line: 0, scope: !15262)
!15268 = !DILocation(line: 333, column: 21, scope: !15262)
!15269 = !DILocation(line: 333, column: 2, scope: !15262)
!15270 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15271, file: !15271, line: 40, type: !15272, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15274)
!15271 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15272 = !DISubroutineType(types: !15273)
!15273 = !{null, !15215}
!15274 = !{!15275}
!15275 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15270, file: !15271, line: 40, type: !15215)
!15276 = !DILocation(line: 0, scope: !15270)
!15277 = !DILocation(line: 42, column: 31, scope: !15270)
!15278 = !DILocation(line: 42, column: 2, scope: !15270)
!15279 = !DILocation(line: 43, column: 1, scope: !15270)
!15280 = distinct !DISubprogram(name: "z_init_timeout", scope: !15271, file: !15271, line: 25, type: !2633, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15281)
!15281 = !{!15282}
!15282 = !DILocalVariable(name: "to", arg: 1, scope: !15280, file: !15271, line: 25, type: !2635)
!15283 = !DILocation(line: 0, scope: !15280)
!15284 = !DILocation(line: 27, column: 22, scope: !15280)
!15285 = !DILocation(line: 27, column: 2, scope: !15280)
!15286 = !DILocation(line: 28, column: 1, scope: !15280)
!15287 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !15288, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15290)
!15288 = !DISubroutineType(types: !15289)
!15289 = !{null, !2681}
!15290 = !{!15291}
!15291 = !DILocalVariable(name: "node", arg: 1, scope: !15287, file: !136, line: 211, type: !2681)
!15292 = !DILocation(line: 0, scope: !15287)
!15293 = !DILocation(line: 213, column: 8, scope: !15287)
!15294 = !DILocation(line: 213, column: 13, scope: !15287)
!15295 = !DILocation(line: 214, column: 8, scope: !15287)
!15296 = !DILocation(line: 214, column: 13, scope: !15287)
!15297 = !DILocation(line: 215, column: 1, scope: !15287)
!15298 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !15299, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15302)
!15299 = !DISubroutineType(types: !15300)
!15300 = !{null, !15301}
!15301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 32)
!15302 = !{!15303}
!15303 = !DILocalVariable(name: "list", arg: 1, scope: !15298, file: !136, line: 197, type: !15301)
!15304 = !DILocation(line: 0, scope: !15298)
!15305 = !DILocation(line: 199, column: 8, scope: !15298)
!15306 = !DILocation(line: 199, column: 13, scope: !15298)
!15307 = !DILocation(line: 200, column: 8, scope: !15298)
!15308 = !DILocation(line: 200, column: 13, scope: !15298)
!15309 = !DILocation(line: 201, column: 1, scope: !15298)
!15310 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2572, file: !2572, line: 641, type: !15311, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15317)
!15311 = !DISubroutineType(types: !15312)
!15312 = !{!2575, !2576, !15153, !156, !310, !102, !102, !102, !103, !111, !15313}
!15313 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15314)
!15314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15315)
!15315 = !{!15316}
!15316 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15314, file: !105, line: 66, baseType: !104, size: 64)
!15317 = !{!15318, !15319, !15320, !15321, !15322, !15323, !15324, !15325, !15326, !15327}
!15318 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15310, file: !2572, line: 641, type: !2576)
!15319 = !DILocalVariable(name: "stack", arg: 2, scope: !15310, file: !2572, line: 642, type: !15153)
!15320 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15310, file: !2572, line: 643, type: !156)
!15321 = !DILocalVariable(name: "entry", arg: 4, scope: !15310, file: !2572, line: 643, type: !310)
!15322 = !DILocalVariable(name: "p1", arg: 5, scope: !15310, file: !2572, line: 644, type: !102)
!15323 = !DILocalVariable(name: "p2", arg: 6, scope: !15310, file: !2572, line: 644, type: !102)
!15324 = !DILocalVariable(name: "p3", arg: 7, scope: !15310, file: !2572, line: 644, type: !102)
!15325 = !DILocalVariable(name: "prio", arg: 8, scope: !15310, file: !2572, line: 645, type: !103)
!15326 = !DILocalVariable(name: "options", arg: 9, scope: !15310, file: !2572, line: 645, type: !111)
!15327 = !DILocalVariable(name: "delay", arg: 10, scope: !15310, file: !2572, line: 645, type: !15313)
!15328 = !DILocation(line: 0, scope: !15310)
!15329 = !DILocation(line: 1031, column: 3, scope: !15040, inlinedAt: !15330)
!15330 = distinct !DILocation(line: 48, column: 10, scope: !15044, inlinedAt: !15331)
!15331 = distinct !DILocation(line: 647, column: 2, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15333, file: !2572, line: 647, column: 2)
!15333 = distinct !DILexicalBlock(scope: !15310, file: !2572, line: 647, column: 2)
!15334 = !DILocation(line: 0, scope: !15040, inlinedAt: !15330)
!15335 = !DILocation(line: 48, column: 9, scope: !15044, inlinedAt: !15331)
!15336 = !DILocation(line: 647, column: 2, scope: !15333)
!15337 = !DILocation(line: 647, column: 2, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15332, file: !2572, line: 647, column: 2)
!15339 = !DILocation(line: 649, column: 2, scope: !15310)
!15340 = !DILocation(line: 652, column: 7, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15310, file: !2572, line: 652, column: 6)
!15342 = !DILocation(line: 652, column: 6, scope: !15310)
!15343 = !DILocation(line: 653, column: 3, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15341, file: !2572, line: 652, column: 39)
!15345 = !DILocation(line: 654, column: 2, scope: !15344)
!15346 = !DILocation(line: 656, column: 2, scope: !15310)
!15347 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2572, file: !2572, line: 401, type: !15348, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15350)
!15348 = !DISubroutineType(types: !15349)
!15349 = !{null, !2576, !15313}
!15350 = !{!15351, !15352}
!15351 = !DILocalVariable(name: "thread", arg: 1, scope: !15347, file: !2572, line: 401, type: !2576)
!15352 = !DILocalVariable(name: "delay", arg: 2, scope: !15347, file: !2572, line: 401, type: !15313)
!15353 = !DILocation(line: 0, scope: !15347)
!15354 = !DILocation(line: 404, column: 6, scope: !15355)
!15355 = distinct !DILexicalBlock(scope: !15347, file: !2572, line: 404, column: 6)
!15356 = !DILocation(line: 404, column: 6, scope: !15347)
!15357 = !DILocation(line: 405, column: 3, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15355, file: !2572, line: 404, column: 38)
!15359 = !DILocation(line: 406, column: 2, scope: !15358)
!15360 = !DILocation(line: 407, column: 3, scope: !15361)
!15361 = distinct !DILexicalBlock(scope: !15355, file: !2572, line: 406, column: 9)
!15362 = !DILocation(line: 413, column: 1, scope: !15347)
!15363 = distinct !DISubprogram(name: "k_thread_start", scope: !5243, file: !5243, line: 205, type: !15364, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15366)
!15364 = !DISubroutineType(types: !15365)
!15365 = !{null, !2575}
!15366 = !{!15367}
!15367 = !DILocalVariable(name: "thread", arg: 1, scope: !15363, file: !5243, line: 205, type: !2575)
!15368 = !DILocation(line: 0, scope: !15363)
!15369 = !DILocation(line: 214, column: 2, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15363, file: !5243, line: 214, column: 2)
!15371 = !{i64 2152249677}
!15372 = !DILocation(line: 215, column: 2, scope: !15363)
!15373 = !DILocation(line: 216, column: 1, scope: !15363)
!15374 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15271, file: !15271, line: 47, type: !15348, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15375)
!15375 = !{!15376, !15377}
!15376 = !DILocalVariable(name: "thread", arg: 1, scope: !15374, file: !15271, line: 47, type: !2576)
!15377 = !DILocalVariable(name: "ticks", arg: 2, scope: !15374, file: !15271, line: 47, type: !15313)
!15378 = !DILocation(line: 0, scope: !15374)
!15379 = !DILocation(line: 49, column: 30, scope: !15374)
!15380 = !DILocation(line: 49, column: 2, scope: !15374)
!15381 = !DILocation(line: 50, column: 1, scope: !15374)
!15382 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2572, file: !2572, line: 748, type: !323, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15383)
!15383 = !{!15384, !15401}
!15384 = !DILocalVariable(name: "thread_data", scope: !15385, file: !2572, line: 750, type: !15386)
!15385 = distinct !DILexicalBlock(scope: !15382, file: !2572, line: 750, column: 2)
!15386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15387, size: 32)
!15387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !127, line: 620, size: 384, elements: !15388)
!15388 = !{!15389, !15390, !15391, !15392, !15393, !15394, !15395, !15396, !15397, !15398, !15399, !15400}
!15389 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15387, file: !127, line: 621, baseType: !2576, size: 32)
!15390 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15387, file: !127, line: 622, baseType: !15153, size: 32, offset: 32)
!15391 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15387, file: !127, line: 623, baseType: !32, size: 32, offset: 64)
!15392 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15387, file: !127, line: 624, baseType: !310, size: 32, offset: 96)
!15393 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15387, file: !127, line: 625, baseType: !102, size: 32, offset: 128)
!15394 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15387, file: !127, line: 626, baseType: !102, size: 32, offset: 160)
!15395 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15387, file: !127, line: 627, baseType: !102, size: 32, offset: 192)
!15396 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15387, file: !127, line: 628, baseType: !103, size: 32, offset: 224)
!15397 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15387, file: !127, line: 629, baseType: !111, size: 32, offset: 256)
!15398 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15387, file: !127, line: 630, baseType: !320, size: 32, offset: 288)
!15399 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15387, file: !127, line: 631, baseType: !322, size: 32, offset: 320)
!15400 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15387, file: !127, line: 632, baseType: !108, size: 32, offset: 352)
!15401 = !DILocalVariable(name: "thread_data", scope: !15402, file: !2572, line: 781, type: !15386)
!15402 = distinct !DILexicalBlock(scope: !15382, file: !2572, line: 781, column: 2)
!15403 = !DILocation(line: 0, scope: !15385)
!15404 = !DILocation(line: 750, column: 2, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15406, file: !2572, line: 750, column: 2)
!15406 = distinct !DILexicalBlock(scope: !15407, file: !2572, line: 750, column: 2)
!15407 = distinct !DILexicalBlock(scope: !15385, file: !2572, line: 750, column: 2)
!15408 = !DILocation(line: 750, column: 2, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15410, file: !2572, line: 750, column: 2)
!15410 = distinct !DILexicalBlock(scope: !15405, file: !2572, line: 750, column: 2)
!15411 = !DILocation(line: 750, column: 2, scope: !15406)
!15412 = !DILocation(line: 750, column: 2, scope: !15385)
!15413 = !DILocation(line: 780, column: 2, scope: !15382)
!15414 = !DILocation(line: 0, scope: !15402)
!15415 = !DILocation(line: 781, column: 2, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15417, file: !2572, line: 781, column: 2)
!15417 = distinct !DILexicalBlock(scope: !15418, file: !2572, line: 781, column: 2)
!15418 = distinct !DILexicalBlock(scope: !15402, file: !2572, line: 781, column: 2)
!15419 = !DILocation(line: 752, column: 17, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15407, file: !2572, line: 750, column: 38)
!15421 = !DILocation(line: 753, column: 17, scope: !15420)
!15422 = !DILocation(line: 754, column: 17, scope: !15420)
!15423 = !DILocation(line: 755, column: 17, scope: !15420)
!15424 = !DILocation(line: 756, column: 17, scope: !15420)
!15425 = !DILocation(line: 757, column: 17, scope: !15420)
!15426 = !DILocation(line: 758, column: 17, scope: !15420)
!15427 = !DILocation(line: 759, column: 17, scope: !15420)
!15428 = !DILocation(line: 760, column: 17, scope: !15420)
!15429 = !DILocation(line: 751, column: 3, scope: !15420)
!15430 = !DILocation(line: 763, column: 16, scope: !15420)
!15431 = !DILocation(line: 763, column: 29, scope: !15420)
!15432 = !DILocation(line: 763, column: 39, scope: !15420)
!15433 = !DILocation(line: 750, column: 2, scope: !15407)
!15434 = !DILocation(line: 750, column: 2, scope: !15410)
!15435 = distinct !{!15435, !15412, !15436}
!15436 = !DILocation(line: 764, column: 2, scope: !15385)
!15437 = !DILocation(line: 781, column: 2, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15439, file: !2572, line: 781, column: 2)
!15439 = distinct !DILexicalBlock(scope: !15416, file: !2572, line: 781, column: 2)
!15440 = !DILocation(line: 781, column: 2, scope: !15417)
!15441 = !DILocation(line: 781, column: 2, scope: !15402)
!15442 = !DILocation(line: 787, column: 2, scope: !15382)
!15443 = !DILocation(line: 788, column: 1, scope: !15382)
!15444 = !DILocation(line: 782, column: 20, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15446, file: !2572, line: 782, column: 7)
!15446 = distinct !DILexicalBlock(scope: !15418, file: !2572, line: 781, column: 38)
!15447 = !DILocation(line: 782, column: 31, scope: !15445)
!15448 = !DILocation(line: 782, column: 7, scope: !15446)
!15449 = !DILocation(line: 783, column: 37, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15445, file: !2572, line: 782, column: 51)
!15451 = !DILocation(line: 784, column: 10, scope: !15450)
!15452 = !DILocation(line: 783, column: 4, scope: !15450)
!15453 = !DILocation(line: 785, column: 3, scope: !15450)
!15454 = !DILocation(line: 781, column: 2, scope: !15418)
!15455 = !DILocation(line: 781, column: 2, scope: !15439)
!15456 = distinct !{!15456, !15441, !15457}
!15457 = !DILocation(line: 786, column: 2, scope: !15402)
!15458 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3883, file: !3883, line: 403, type: !3884, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15459)
!15459 = !{!15460}
!15460 = !DILocalVariable(name: "t", arg: 1, scope: !15458, file: !3883, line: 403, type: !112)
!15461 = !DILocation(line: 0, scope: !15458)
!15462 = !DILocalVariable(name: "t", arg: 1, scope: !15463, file: !3883, line: 102, type: !112)
!15463 = distinct !DISubprogram(name: "z_tmcvt", scope: !3883, file: !3883, line: 102, type: !3891, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15464)
!15464 = !{!15462, !15465, !15466, !15467, !15468, !15469, !15470, !15471, !15472, !15473, !15474}
!15465 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15463, file: !3883, line: 102, type: !111)
!15466 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15463, file: !3883, line: 103, type: !111)
!15467 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15463, file: !3883, line: 103, type: !122)
!15468 = !DILocalVariable(name: "result32", arg: 5, scope: !15463, file: !3883, line: 104, type: !122)
!15469 = !DILocalVariable(name: "round_up", arg: 6, scope: !15463, file: !3883, line: 104, type: !122)
!15470 = !DILocalVariable(name: "round_off", arg: 7, scope: !15463, file: !3883, line: 105, type: !122)
!15471 = !DILocalVariable(name: "mul_ratio", scope: !15463, file: !3883, line: 107, type: !122)
!15472 = !DILocalVariable(name: "div_ratio", scope: !15463, file: !3883, line: 109, type: !122)
!15473 = !DILocalVariable(name: "off", scope: !15463, file: !3883, line: 116, type: !112)
!15474 = !DILocalVariable(name: "rdivisor", scope: !15475, file: !3883, line: 119, type: !111)
!15475 = distinct !DILexicalBlock(scope: !15476, file: !3883, line: 118, column: 18)
!15476 = distinct !DILexicalBlock(scope: !15463, file: !3883, line: 118, column: 6)
!15477 = !DILocation(line: 0, scope: !15463, inlinedAt: !15478)
!15478 = distinct !DILocation(line: 406, column: 9, scope: !15458)
!15479 = !DILocation(line: 145, column: 13, scope: !15480, inlinedAt: !15478)
!15480 = distinct !DILexicalBlock(scope: !15481, file: !3883, line: 144, column: 10)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !3883, line: 142, column: 7)
!15482 = distinct !DILexicalBlock(scope: !15483, file: !3883, line: 141, column: 24)
!15483 = distinct !DILexicalBlock(scope: !15484, file: !3883, line: 141, column: 13)
!15484 = distinct !DILexicalBlock(scope: !15463, file: !3883, line: 134, column: 6)
!15485 = !DILocation(line: 406, column: 2, scope: !15458)
!15486 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2572, file: !2572, line: 817, type: !5122, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15487)
!15487 = !{!15488, !15489, !15490, !15491}
!15488 = !DILocalVariable(name: "entry", arg: 1, scope: !15486, file: !2572, line: 817, type: !310)
!15489 = !DILocalVariable(name: "p1", arg: 2, scope: !15486, file: !2572, line: 818, type: !102)
!15490 = !DILocalVariable(name: "p2", arg: 3, scope: !15486, file: !2572, line: 818, type: !102)
!15491 = !DILocalVariable(name: "p3", arg: 4, scope: !15486, file: !2572, line: 818, type: !102)
!15492 = !DILocation(line: 0, scope: !15486)
!15493 = !DILocation(line: 822, column: 2, scope: !15486)
!15494 = !DILocation(line: 822, column: 17, scope: !15486)
!15495 = !DILocation(line: 822, column: 30, scope: !15486)
!15496 = !DILocation(line: 823, column: 2, scope: !15486)
!15497 = !DILocation(line: 845, column: 2, scope: !15486)
!15498 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2572, file: !2572, line: 853, type: !15499, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15502)
!15499 = !DISubroutineType(types: !15500)
!15500 = !{!122, !15501}
!15501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 32)
!15502 = !{!15503, !15504}
!15503 = !DILocalVariable(name: "l", arg: 1, scope: !15498, file: !2572, line: 853, type: !15501)
!15504 = !DILocalVariable(name: "thread_cpu", scope: !15498, file: !2572, line: 855, type: !22)
!15505 = !DILocation(line: 0, scope: !15498)
!15506 = !DILocation(line: 855, column: 28, scope: !15498)
!15507 = !DILocation(line: 857, column: 17, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15498, file: !2572, line: 857, column: 6)
!15509 = !DILocation(line: 857, column: 6, scope: !15498)
!15510 = !DILocation(line: 858, column: 19, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15512, file: !2572, line: 858, column: 7)
!15512 = distinct !DILexicalBlock(scope: !15508, file: !2572, line: 857, column: 24)
!15513 = !DILocation(line: 858, column: 42, scope: !15511)
!15514 = !DILocation(line: 858, column: 28, scope: !15511)
!15515 = !DILocation(line: 858, column: 25, scope: !15511)
!15516 = !DILocation(line: 858, column: 7, scope: !15512)
!15517 = !DILocation(line: 862, column: 2, scope: !15498)
!15518 = !DILocation(line: 863, column: 1, scope: !15498)
!15519 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2572, file: !2572, line: 865, type: !15499, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15520)
!15520 = !{!15521}
!15521 = !DILocalVariable(name: "l", arg: 1, scope: !15519, file: !2572, line: 865, type: !15501)
!15522 = !DILocation(line: 0, scope: !15519)
!15523 = !DILocation(line: 867, column: 9, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15519, file: !2572, line: 867, column: 6)
!15525 = !DILocation(line: 867, column: 38, scope: !15524)
!15526 = !DILocation(line: 867, column: 24, scope: !15524)
!15527 = !DILocation(line: 867, column: 54, scope: !15524)
!15528 = !DILocation(line: 867, column: 43, scope: !15524)
!15529 = !DILocation(line: 867, column: 41, scope: !15524)
!15530 = !DILocation(line: 867, column: 20, scope: !15524)
!15531 = !DILocation(line: 867, column: 6, scope: !15519)
!15532 = !DILocation(line: 870, column: 16, scope: !15519)
!15533 = !DILocation(line: 871, column: 2, scope: !15519)
!15534 = !DILocation(line: 872, column: 1, scope: !15519)
!15535 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2572, file: !2572, line: 874, type: !15536, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15538)
!15536 = !DISubroutineType(types: !15537)
!15537 = !{null, !15501}
!15538 = !{!15539}
!15539 = !DILocalVariable(name: "l", arg: 1, scope: !15535, file: !2572, line: 874, type: !15501)
!15540 = !DILocation(line: 0, scope: !15535)
!15541 = !DILocation(line: 876, column: 32, scope: !15535)
!15542 = !DILocation(line: 876, column: 18, scope: !15535)
!15543 = !DILocation(line: 876, column: 48, scope: !15535)
!15544 = !DILocation(line: 876, column: 37, scope: !15535)
!15545 = !DILocation(line: 876, column: 35, scope: !15535)
!15546 = !DILocation(line: 876, column: 5, scope: !15535)
!15547 = !DILocation(line: 876, column: 16, scope: !15535)
!15548 = !DILocation(line: 877, column: 1, scope: !15535)
!15549 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2572, file: !2572, line: 888, type: !15550, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15552)
!15550 = !DISubroutineType(types: !15551)
!15551 = !{!103, !2576}
!15552 = !{!15553}
!15553 = !DILocalVariable(name: "thread", arg: 1, scope: !15549, file: !2572, line: 888, type: !2576)
!15554 = !DILocation(line: 0, scope: !15549)
!15555 = !DILocation(line: 893, column: 2, scope: !15549)
!15556 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2572, file: !2572, line: 897, type: !15557, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15559)
!15557 = !DISubroutineType(types: !15558)
!15558 = !{!103, !2576, !32}
!15559 = !{!15560, !15561}
!15560 = !DILocalVariable(name: "thread", arg: 1, scope: !15556, file: !2572, line: 897, type: !2576)
!15561 = !DILocalVariable(name: "options", arg: 2, scope: !15556, file: !2572, line: 897, type: !32)
!15562 = !DILocation(line: 0, scope: !15556)
!15563 = !DILocation(line: 902, column: 2, scope: !15556)
!15564 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2572, file: !2572, line: 1072, type: !15565, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15570)
!15565 = !DISubroutineType(types: !15566)
!15566 = !{!103, !2575, !15567}
!15567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15568, size: 32)
!15568 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !199, line: 234, baseType: !15569)
!15569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !199, line: 192, elements: !2512)
!15570 = !{!15571, !15572}
!15571 = !DILocalVariable(name: "thread", arg: 1, scope: !15564, file: !2572, line: 1072, type: !2575)
!15572 = !DILocalVariable(name: "stats", arg: 2, scope: !15564, file: !2572, line: 1073, type: !15567)
!15573 = !DILocation(line: 0, scope: !15564)
!15574 = !DILocation(line: 1075, column: 14, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15564, file: !2572, line: 1075, column: 6)
!15576 = !DILocation(line: 1075, column: 23, scope: !15575)
!15577 = !DILocation(line: 1086, column: 1, scope: !15564)
!15578 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2572, file: !2572, line: 1088, type: !15579, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2678, retainedNodes: !15581)
!15579 = !DISubroutineType(types: !15580)
!15580 = !{!103, !15567}
!15581 = !{!15582}
!15582 = !DILocalVariable(name: "stats", arg: 1, scope: !15578, file: !2572, line: 1088, type: !15567)
!15583 = !DILocation(line: 0, scope: !15578)
!15584 = !DILocation(line: 1094, column: 12, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15578, file: !2572, line: 1094, column: 6)
!15586 = !DILocation(line: 1120, column: 1, scope: !15578)
!15587 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15588, file: !15588, line: 20, type: !323, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3589, retainedNodes: !2512)
!15588 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15589 = !DILocation(line: 30, column: 2, scope: !15587)
!15590 = !DILocation(line: 31, column: 1, scope: !15587)
!15591 = distinct !DISubprogram(name: "idle", scope: !15588, file: !15588, line: 33, type: !312, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3589, retainedNodes: !15592)
!15592 = !{!15593, !15594, !15595}
!15593 = !DILocalVariable(name: "unused1", arg: 1, scope: !15591, file: !15588, line: 33, type: !102)
!15594 = !DILocalVariable(name: "unused2", arg: 2, scope: !15591, file: !15588, line: 33, type: !102)
!15595 = !DILocalVariable(name: "unused3", arg: 3, scope: !15591, file: !15588, line: 33, type: !102)
!15596 = !DILocation(line: 0, scope: !15591)
!15597 = !DILocation(line: 39, column: 2, scope: !15598)
!15598 = distinct !DILexicalBlock(scope: !15599, file: !15588, line: 39, column: 2)
!15599 = distinct !DILexicalBlock(scope: !15591, file: !15588, line: 39, column: 2)
!15600 = !DILocation(line: 39, column: 2, scope: !15599)
!15601 = !DILocation(line: 39, column: 2, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15598, file: !15588, line: 39, column: 2)
!15603 = !DILocation(line: 55, column: 2, scope: !15604, inlinedAt: !15608)
!15604 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3589, retainedNodes: !15605)
!15605 = !{!15606, !15607}
!15606 = !DILocalVariable(name: "key", scope: !15604, file: !7496, line: 44, type: !32)
!15607 = !DILocalVariable(name: "tmp", scope: !15604, file: !7496, line: 53, type: !32)
!15608 = distinct !DILocation(line: 62, column: 10, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15591, file: !15588, line: 41, column: 15)
!15610 = !{i64 1652544}
!15611 = !DILocation(line: 0, scope: !15604, inlinedAt: !15608)
!15612 = !DILocation(line: 86, column: 3, scope: !15609)
!15613 = !DILocation(line: 41, column: 2, scope: !15591)
!15614 = distinct !{!15614, !15613, !15615}
!15615 = !DILocation(line: 105, column: 2, scope: !15591)
!15616 = distinct !DISubprogram(name: "k_cpu_idle", scope: !127, file: !127, line: 5627, type: !323, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3589, retainedNodes: !2512)
!15617 = !DILocation(line: 5629, column: 2, scope: !15616)
!15618 = !DILocation(line: 5630, column: 1, scope: !15616)
!15619 = !DISubprogram(name: "arch_cpu_idle", scope: !303, file: !303, line: 167, type: !323, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!15620 = distinct !DISubprogram(name: "k_msgq_init", scope: !15621, file: !15621, line: 35, type: !15622, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15637)
!15621 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15622 = !DISubroutineType(types: !15623)
!15623 = !{null, !15624, !160, !156, !111}
!15624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15625, size: 32)
!15625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !127, line: 4204, size: 352, elements: !15626)
!15626 = !{!15627, !15628, !15629, !15630, !15631, !15632, !15633, !15634, !15635, !15636}
!15627 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !15625, file: !127, line: 4206, baseType: !3627, size: 64)
!15628 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !15625, file: !127, line: 4208, baseType: !3689, size: 32, offset: 64)
!15629 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15625, file: !127, line: 4210, baseType: !156, size: 32, offset: 96)
!15630 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15625, file: !127, line: 4212, baseType: !111, size: 32, offset: 128)
!15631 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !15625, file: !127, line: 4214, baseType: !160, size: 32, offset: 160)
!15632 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !15625, file: !127, line: 4216, baseType: !160, size: 32, offset: 192)
!15633 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !15625, file: !127, line: 4218, baseType: !160, size: 32, offset: 224)
!15634 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !15625, file: !127, line: 4220, baseType: !160, size: 32, offset: 256)
!15635 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15625, file: !127, line: 4222, baseType: !111, size: 32, offset: 288)
!15636 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !15625, file: !127, line: 4227, baseType: !166, size: 8, offset: 320)
!15637 = !{!15638, !15639, !15640, !15641}
!15638 = !DILocalVariable(name: "msgq", arg: 1, scope: !15620, file: !15621, line: 35, type: !15624)
!15639 = !DILocalVariable(name: "buffer", arg: 2, scope: !15620, file: !15621, line: 35, type: !160)
!15640 = !DILocalVariable(name: "msg_size", arg: 3, scope: !15620, file: !15621, line: 35, type: !156)
!15641 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !15620, file: !15621, line: 36, type: !111)
!15642 = !DILocation(line: 0, scope: !15620)
!15643 = !DILocation(line: 38, column: 8, scope: !15620)
!15644 = !DILocation(line: 38, column: 17, scope: !15620)
!15645 = !DILocation(line: 39, column: 8, scope: !15620)
!15646 = !DILocation(line: 39, column: 17, scope: !15620)
!15647 = !DILocation(line: 40, column: 8, scope: !15620)
!15648 = !DILocation(line: 40, column: 21, scope: !15620)
!15649 = !DILocation(line: 41, column: 40, scope: !15620)
!15650 = !DILocation(line: 41, column: 28, scope: !15620)
!15651 = !DILocation(line: 41, column: 8, scope: !15620)
!15652 = !DILocation(line: 41, column: 19, scope: !15620)
!15653 = !DILocation(line: 42, column: 8, scope: !15620)
!15654 = !DILocation(line: 42, column: 17, scope: !15620)
!15655 = !DILocation(line: 43, column: 8, scope: !15620)
!15656 = !DILocation(line: 43, column: 18, scope: !15620)
!15657 = !DILocation(line: 44, column: 8, scope: !15620)
!15658 = !DILocation(line: 44, column: 18, scope: !15620)
!15659 = !DILocation(line: 45, column: 8, scope: !15620)
!15660 = !DILocation(line: 45, column: 14, scope: !15620)
!15661 = !DILocation(line: 46, column: 22, scope: !15620)
!15662 = !DILocation(line: 46, column: 2, scope: !15620)
!15663 = !DILocation(line: 47, column: 15, scope: !15620)
!15664 = !DILocation(line: 55, column: 1, scope: !15620)
!15665 = distinct !DISubprogram(name: "z_waitq_init", scope: !15203, file: !15203, line: 47, type: !15666, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15668)
!15666 = !DISubroutineType(types: !15667)
!15667 = !{null, !3626}
!15668 = !{!15669}
!15669 = !DILocalVariable(name: "w", arg: 1, scope: !15665, file: !15203, line: 47, type: !3626)
!15670 = !DILocation(line: 0, scope: !15665)
!15671 = !DILocation(line: 49, column: 21, scope: !15665)
!15672 = !DILocation(line: 49, column: 2, scope: !15665)
!15673 = !DILocation(line: 50, column: 1, scope: !15665)
!15674 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !15675, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15678)
!15675 = !DISubroutineType(types: !15676)
!15676 = !{null, !15677}
!15677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 32)
!15678 = !{!15679}
!15679 = !DILocalVariable(name: "list", arg: 1, scope: !15674, file: !136, line: 197, type: !15677)
!15680 = !DILocation(line: 0, scope: !15674)
!15681 = !DILocation(line: 199, column: 8, scope: !15674)
!15682 = !DILocation(line: 199, column: 13, scope: !15674)
!15683 = !DILocation(line: 200, column: 8, scope: !15674)
!15684 = !DILocation(line: 200, column: 13, scope: !15674)
!15685 = !DILocation(line: 201, column: 1, scope: !15674)
!15686 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !15621, file: !15621, line: 57, type: !15687, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15689)
!15687 = !DISubroutineType(types: !15688)
!15688 = !{!103, !15624, !156, !111}
!15689 = !{!15690, !15691, !15692, !15693, !15694, !15695}
!15690 = !DILocalVariable(name: "msgq", arg: 1, scope: !15686, file: !15621, line: 57, type: !15624)
!15691 = !DILocalVariable(name: "msg_size", arg: 2, scope: !15686, file: !15621, line: 57, type: !156)
!15692 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !15686, file: !15621, line: 58, type: !111)
!15693 = !DILocalVariable(name: "buffer", scope: !15686, file: !15621, line: 60, type: !102)
!15694 = !DILocalVariable(name: "ret", scope: !15686, file: !15621, line: 61, type: !103)
!15695 = !DILocalVariable(name: "total_size", scope: !15686, file: !15621, line: 62, type: !156)
!15696 = !DILocation(line: 0, scope: !15686)
!15697 = !DILocation(line: 62, column: 2, scope: !15686)
!15698 = !DILocation(line: 66, column: 6, scope: !15699)
!15699 = distinct !DILexicalBlock(scope: !15686, file: !15621, line: 66, column: 6)
!15700 = !DILocation(line: 66, column: 6, scope: !15686)
!15701 = !DILocation(line: 69, column: 28, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15699, file: !15621, line: 68, column: 9)
!15703 = !DILocation(line: 69, column: 12, scope: !15702)
!15704 = !DILocation(line: 70, column: 14, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15702, file: !15621, line: 70, column: 7)
!15706 = !DILocation(line: 70, column: 7, scope: !15702)
!15707 = !DILocation(line: 71, column: 4, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15705, file: !15621, line: 70, column: 23)
!15709 = !DILocation(line: 72, column: 10, scope: !15708)
!15710 = !DILocation(line: 72, column: 16, scope: !15708)
!15711 = !DILocation(line: 74, column: 3, scope: !15708)
!15712 = !DILocation(line: 0, scope: !15699)
!15713 = !DILocation(line: 82, column: 1, scope: !15686)
!15714 = !DILocation(line: 81, column: 2, scope: !15686)
!15715 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15716, file: !15716, line: 105, type: !15717, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15719)
!15716 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15717 = !DISubroutineType(types: !15718)
!15718 = !{!122, !156, !156, !3108}
!15719 = !{!15720, !15721, !15722}
!15720 = !DILocalVariable(name: "a", arg: 1, scope: !15715, file: !15716, line: 105, type: !156)
!15721 = !DILocalVariable(name: "b", arg: 2, scope: !15715, file: !15716, line: 105, type: !156)
!15722 = !DILocalVariable(name: "result", arg: 3, scope: !15715, file: !15716, line: 105, type: !3108)
!15723 = !DILocation(line: 0, scope: !15715)
!15724 = !DILocation(line: 107, column: 9, scope: !15715)
!15725 = !DILocation(line: 107, column: 2, scope: !15715)
!15726 = distinct !DISubprogram(name: "z_thread_malloc", scope: !15727, file: !15727, line: 102, type: !15728, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15729)
!15727 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15728 = !DISubroutineType(types: !3570)
!15729 = !{!15730}
!15730 = !DILocalVariable(name: "size", arg: 1, scope: !15726, file: !15727, line: 102, type: !156)
!15731 = !DILocation(line: 0, scope: !15726)
!15732 = !DILocation(line: 104, column: 9, scope: !15726)
!15733 = !DILocation(line: 104, column: 2, scope: !15726)
!15734 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !15621, file: !15621, line: 95, type: !15735, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15737)
!15735 = !DISubroutineType(types: !15736)
!15736 = !{!103, !15624}
!15737 = !{!15738}
!15738 = !DILocalVariable(name: "msgq", arg: 1, scope: !15734, file: !15621, line: 95, type: !15624)
!15739 = !DILocation(line: 0, scope: !15734)
!15740 = !DILocation(line: 99, column: 2, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15734, file: !15621, line: 99, column: 2)
!15742 = !DILocation(line: 99, column: 2, scope: !15734)
!15743 = !DILocation(line: 105, column: 13, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15734, file: !15621, line: 105, column: 6)
!15745 = !DILocation(line: 105, column: 19, scope: !15744)
!15746 = !DILocation(line: 105, column: 40, scope: !15744)
!15747 = !DILocation(line: 105, column: 6, scope: !15734)
!15748 = !DILocation(line: 106, column: 16, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15744, file: !15621, line: 105, column: 47)
!15750 = !DILocation(line: 106, column: 3, scope: !15749)
!15751 = !DILocation(line: 107, column: 15, scope: !15749)
!15752 = !DILocation(line: 108, column: 2, scope: !15749)
!15753 = !DILocation(line: 113, column: 1, scope: !15734)
!15754 = distinct !DISubprogram(name: "z_waitq_head", scope: !15203, file: !15203, line: 52, type: !15755, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15757)
!15755 = !DISubroutineType(types: !15756)
!15756 = !{!3609, !3626}
!15757 = !{!15758}
!15758 = !DILocalVariable(name: "w", arg: 1, scope: !15754, file: !15203, line: 52, type: !3626)
!15759 = !DILocation(line: 0, scope: !15754)
!15760 = !DILocation(line: 54, column: 52, scope: !15754)
!15761 = !DILocation(line: 54, column: 28, scope: !15754)
!15762 = !DILocation(line: 54, column: 9, scope: !15754)
!15763 = !DILocation(line: 54, column: 2, scope: !15754)
!15764 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !15765, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15767)
!15765 = !DISubroutineType(types: !15766)
!15766 = !{!3594, !15677}
!15767 = !{!15768}
!15768 = !DILocalVariable(name: "list", arg: 1, scope: !15764, file: !136, line: 294, type: !15677)
!15769 = !DILocation(line: 0, scope: !15764)
!15770 = !DILocation(line: 296, column: 9, scope: !15764)
!15771 = !DILocation(line: 296, column: 49, scope: !15764)
!15772 = !DILocation(line: 296, column: 2, scope: !15764)
!15773 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !15774, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15776)
!15774 = !DISubroutineType(types: !15775)
!15775 = !{!122, !15677}
!15776 = !{!15777}
!15777 = !DILocalVariable(name: "list", arg: 1, scope: !15773, file: !136, line: 266, type: !15677)
!15778 = !DILocation(line: 0, scope: !15773)
!15779 = !DILocation(line: 268, column: 15, scope: !15773)
!15780 = !DILocation(line: 268, column: 20, scope: !15773)
!15781 = !DILocation(line: 268, column: 2, scope: !15773)
!15782 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !15621, file: !15621, line: 116, type: !15783, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15789)
!15783 = !DISubroutineType(types: !15784)
!15784 = !{!103, !15624, !13, !15785}
!15785 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15786)
!15786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15787)
!15787 = !{!15788}
!15788 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15786, file: !105, line: 66, baseType: !104, size: 64)
!15789 = !{!15790, !15791, !15792, !15793, !15794, !15799}
!15790 = !DILocalVariable(name: "msgq", arg: 1, scope: !15782, file: !15621, line: 116, type: !15624)
!15791 = !DILocalVariable(name: "data", arg: 2, scope: !15782, file: !15621, line: 116, type: !13)
!15792 = !DILocalVariable(name: "timeout", arg: 3, scope: !15782, file: !15621, line: 116, type: !15785)
!15793 = !DILocalVariable(name: "pending_thread", scope: !15782, file: !15621, line: 120, type: !3609)
!15794 = !DILocalVariable(name: "key", scope: !15782, file: !15621, line: 121, type: !15795)
!15795 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !15796)
!15796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !15797)
!15797 = !{!15798}
!15798 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15796, file: !152, line: 33, baseType: !103, size: 32)
!15799 = !DILocalVariable(name: "result", scope: !15782, file: !15621, line: 122, type: !103)
!15800 = !DILocation(line: 0, scope: !15782)
!15801 = !DILocation(line: 1031, column: 3, scope: !15802, inlinedAt: !15805)
!15802 = distinct !DISubprogram(name: "__get_IPSR", scope: !7834, file: !7834, line: 1027, type: !8837, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15803)
!15803 = !{!15804}
!15804 = !DILocalVariable(name: "result", scope: !15802, file: !7834, line: 1029, type: !111)
!15805 = distinct !DILocation(line: 48, column: 10, scope: !15806, inlinedAt: !15807)
!15806 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8843, file: !8843, line: 46, type: !8844, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !2512)
!15807 = distinct !DILocation(line: 118, column: 2, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15809, file: !15621, line: 118, column: 2)
!15809 = distinct !DILexicalBlock(scope: !15782, file: !15621, line: 118, column: 2)
!15810 = !{i64 2452616}
!15811 = !DILocation(line: 0, scope: !15802, inlinedAt: !15805)
!15812 = !DILocation(line: 48, column: 9, scope: !15806, inlinedAt: !15807)
!15813 = !DILocation(line: 118, column: 2, scope: !15808)
!15814 = !DILocation(line: 118, column: 2, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15808, file: !15621, line: 118, column: 2)
!15816 = !DILocation(line: 124, column: 27, scope: !15782)
!15817 = !DILocalVariable(name: "l", arg: 1, scope: !15818, file: !152, line: 136, type: !15821)
!15818 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !15819, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15822)
!15819 = !DISubroutineType(types: !15820)
!15820 = !{!15795, !15821}
!15821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 32)
!15822 = !{!15817, !15823}
!15823 = !DILocalVariable(name: "k", scope: !15818, file: !152, line: 139, type: !15795)
!15824 = !DILocation(line: 0, scope: !15818, inlinedAt: !15825)
!15825 = distinct !DILocation(line: 124, column: 8, scope: !15782)
!15826 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !15831)
!15827 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15828)
!15828 = !{!15829, !15830}
!15829 = !DILocalVariable(name: "key", scope: !15827, file: !7496, line: 44, type: !32)
!15830 = !DILocalVariable(name: "tmp", scope: !15827, file: !7496, line: 53, type: !32)
!15831 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !15825)
!15832 = !{i64 1658681}
!15833 = !DILocation(line: 0, scope: !15827, inlinedAt: !15831)
!15834 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !15825)
!15835 = distinct !DILexicalBlock(scope: !15836, file: !152, line: 148, column: 2)
!15836 = distinct !DILexicalBlock(scope: !15818, file: !152, line: 148, column: 2)
!15837 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !15825)
!15838 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !15825)
!15839 = distinct !DILexicalBlock(scope: !15835, file: !152, line: 148, column: 2)
!15840 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !15825)
!15841 = !DILocation(line: 128, column: 12, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15782, file: !15621, line: 128, column: 6)
!15843 = !DILocation(line: 128, column: 30, scope: !15842)
!15844 = !DILocation(line: 128, column: 22, scope: !15842)
!15845 = !DILocation(line: 128, column: 6, scope: !15782)
!15846 = !DILocation(line: 130, column: 49, scope: !15847)
!15847 = distinct !DILexicalBlock(scope: !15842, file: !15621, line: 128, column: 40)
!15848 = !DILocation(line: 130, column: 20, scope: !15847)
!15849 = !DILocation(line: 131, column: 22, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15847, file: !15621, line: 131, column: 7)
!15851 = !DILocation(line: 131, column: 7, scope: !15847)
!15852 = !DILocation(line: 135, column: 38, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15850, file: !15621, line: 131, column: 31)
!15854 = !DILocation(line: 136, column: 17, scope: !15853)
!15855 = !DILocation(line: 135, column: 10, scope: !15853)
!15856 = !DILocalVariable(name: "thread", arg: 1, scope: !15857, file: !14884, line: 65, type: !3609)
!15857 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14884, file: !14884, line: 65, type: !15858, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15860)
!15858 = !DISubroutineType(types: !15859)
!15859 = !{null, !3609, !32}
!15860 = !{!15856, !15861}
!15861 = !DILocalVariable(name: "value", arg: 2, scope: !15857, file: !14884, line: 65, type: !32)
!15862 = !DILocation(line: 0, scope: !15857, inlinedAt: !15863)
!15863 = distinct !DILocation(line: 138, column: 4, scope: !15853)
!15864 = !DILocation(line: 67, column: 15, scope: !15857, inlinedAt: !15863)
!15865 = !DILocation(line: 67, column: 33, scope: !15857, inlinedAt: !15863)
!15866 = !DILocation(line: 139, column: 4, scope: !15853)
!15867 = !DILocation(line: 140, column: 4, scope: !15853)
!15868 = !DILocation(line: 141, column: 4, scope: !15853)
!15869 = !DILocation(line: 144, column: 23, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15850, file: !15621, line: 142, column: 10)
!15871 = !DILocation(line: 144, column: 46, scope: !15870)
!15872 = !DILocation(line: 144, column: 10, scope: !15870)
!15873 = !DILocation(line: 145, column: 29, scope: !15870)
!15874 = !DILocation(line: 145, column: 20, scope: !15870)
!15875 = !DILocation(line: 146, column: 33, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15870, file: !15621, line: 146, column: 8)
!15877 = !DILocation(line: 146, column: 24, scope: !15876)
!15878 = !DILocation(line: 146, column: 8, scope: !15870)
!15879 = !DILocation(line: 147, column: 29, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15876, file: !15621, line: 146, column: 45)
!15881 = !DILocation(line: 147, column: 21, scope: !15880)
!15882 = !DILocation(line: 148, column: 4, scope: !15880)
!15883 = !DILocation(line: 149, column: 19, scope: !15870)
!15884 = !DILocation(line: 155, column: 2, scope: !15847)
!15885 = !DILocation(line: 155, column: 13, scope: !15842)
!15886 = !DILocation(line: 162, column: 3, scope: !15887)
!15887 = distinct !DILexicalBlock(scope: !15888, file: !15621, line: 158, column: 9)
!15888 = distinct !DILexicalBlock(scope: !15842, file: !15621, line: 155, column: 13)
!15889 = !DILocation(line: 162, column: 18, scope: !15887)
!15890 = !DILocation(line: 162, column: 28, scope: !15887)
!15891 = !DILocation(line: 164, column: 49, scope: !15887)
!15892 = !DILocation(line: 164, column: 12, scope: !15887)
!15893 = !DILocation(line: 166, column: 3, scope: !15887)
!15894 = !DILocation(line: 0, scope: !15842)
!15895 = !DILocalVariable(name: "key", arg: 2, scope: !15896, file: !152, line: 190, type: !15795)
!15896 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !15897, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15899)
!15897 = !DISubroutineType(types: !15898)
!15898 = !{null, !15821, !15795}
!15899 = !{!15900, !15895}
!15900 = !DILocalVariable(name: "l", arg: 1, scope: !15896, file: !152, line: 189, type: !15821)
!15901 = !DILocation(line: 0, scope: !15896, inlinedAt: !15902)
!15902 = distinct !DILocation(line: 171, column: 2, scope: !15782)
!15903 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !15902)
!15904 = distinct !DILexicalBlock(scope: !15905, file: !152, line: 194, column: 2)
!15905 = distinct !DILexicalBlock(scope: !15896, file: !152, line: 194, column: 2)
!15906 = !DILocation(line: 194, column: 2, scope: !15905, inlinedAt: !15902)
!15907 = !DILocation(line: 194, column: 2, scope: !15908, inlinedAt: !15902)
!15908 = distinct !DILexicalBlock(scope: !15904, file: !152, line: 194, column: 2)
!15909 = !DILocalVariable(name: "key", arg: 1, scope: !15910, file: !7496, line: 84, type: !32)
!15910 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15911)
!15911 = !{!15909}
!15912 = !DILocation(line: 0, scope: !15910, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 215, column: 2, scope: !15896, inlinedAt: !15902)
!15914 = !DILocation(line: 95, column: 2, scope: !15910, inlinedAt: !15913)
!15915 = !{i64 1659498}
!15916 = !DILocation(line: 173, column: 2, scope: !15782)
!15917 = !DILocation(line: 174, column: 1, scope: !15782)
!15918 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !15621, file: !15621, line: 188, type: !15919, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15927)
!15919 = !DISubroutineType(types: !15920)
!15920 = !{null, !15624, !15921}
!15921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15922, size: 32)
!15922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !127, line: 4259, size: 96, elements: !15923)
!15923 = !{!15924, !15925, !15926}
!15924 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !15922, file: !127, line: 4261, baseType: !156, size: 32)
!15925 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !15922, file: !127, line: 4263, baseType: !111, size: 32, offset: 32)
!15926 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !15922, file: !127, line: 4265, baseType: !111, size: 32, offset: 64)
!15927 = !{!15928, !15929}
!15928 = !DILocalVariable(name: "msgq", arg: 1, scope: !15918, file: !15621, line: 188, type: !15624)
!15929 = !DILocalVariable(name: "attrs", arg: 2, scope: !15918, file: !15621, line: 188, type: !15921)
!15930 = !DILocation(line: 0, scope: !15918)
!15931 = !DILocation(line: 190, column: 26, scope: !15918)
!15932 = !DILocation(line: 190, column: 9, scope: !15918)
!15933 = !DILocation(line: 190, column: 18, scope: !15918)
!15934 = !DILocation(line: 191, column: 26, scope: !15918)
!15935 = !DILocation(line: 191, column: 9, scope: !15918)
!15936 = !DILocation(line: 191, column: 18, scope: !15918)
!15937 = !DILocation(line: 192, column: 27, scope: !15918)
!15938 = !DILocation(line: 192, column: 9, scope: !15918)
!15939 = !DILocation(line: 192, column: 19, scope: !15918)
!15940 = !DILocation(line: 193, column: 1, scope: !15918)
!15941 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !15621, file: !15621, line: 206, type: !15942, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !15944)
!15942 = !DISubroutineType(types: !15943)
!15943 = !{!103, !15624, !102, !15785}
!15944 = !{!15945, !15946, !15947, !15948, !15949, !15950}
!15945 = !DILocalVariable(name: "msgq", arg: 1, scope: !15941, file: !15621, line: 206, type: !15624)
!15946 = !DILocalVariable(name: "data", arg: 2, scope: !15941, file: !15621, line: 206, type: !102)
!15947 = !DILocalVariable(name: "timeout", arg: 3, scope: !15941, file: !15621, line: 206, type: !15785)
!15948 = !DILocalVariable(name: "key", scope: !15941, file: !15621, line: 210, type: !15795)
!15949 = !DILocalVariable(name: "pending_thread", scope: !15941, file: !15621, line: 211, type: !3609)
!15950 = !DILocalVariable(name: "result", scope: !15941, file: !15621, line: 212, type: !103)
!15951 = !DILocation(line: 0, scope: !15941)
!15952 = !DILocation(line: 1031, column: 3, scope: !15802, inlinedAt: !15953)
!15953 = distinct !DILocation(line: 48, column: 10, scope: !15806, inlinedAt: !15954)
!15954 = distinct !DILocation(line: 208, column: 2, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15956, file: !15621, line: 208, column: 2)
!15956 = distinct !DILexicalBlock(scope: !15941, file: !15621, line: 208, column: 2)
!15957 = !DILocation(line: 0, scope: !15802, inlinedAt: !15953)
!15958 = !DILocation(line: 48, column: 9, scope: !15806, inlinedAt: !15954)
!15959 = !DILocation(line: 208, column: 2, scope: !15955)
!15960 = !DILocation(line: 208, column: 2, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15955, file: !15621, line: 208, column: 2)
!15962 = !DILocation(line: 214, column: 27, scope: !15941)
!15963 = !DILocation(line: 0, scope: !15818, inlinedAt: !15964)
!15964 = distinct !DILocation(line: 214, column: 8, scope: !15941)
!15965 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !15966)
!15966 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !15964)
!15967 = !DILocation(line: 0, scope: !15827, inlinedAt: !15966)
!15968 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !15964)
!15969 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !15964)
!15970 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !15964)
!15971 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !15964)
!15972 = !DILocation(line: 218, column: 12, scope: !15973)
!15973 = distinct !DILexicalBlock(scope: !15941, file: !15621, line: 218, column: 6)
!15974 = !DILocation(line: 218, column: 22, scope: !15973)
!15975 = !DILocation(line: 218, column: 6, scope: !15941)
!15976 = !DILocation(line: 220, column: 28, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15973, file: !15621, line: 218, column: 28)
!15978 = !DILocation(line: 220, column: 44, scope: !15977)
!15979 = !DILocation(line: 220, column: 9, scope: !15977)
!15980 = !DILocation(line: 221, column: 27, scope: !15977)
!15981 = !DILocation(line: 221, column: 18, scope: !15977)
!15982 = !DILocation(line: 222, column: 31, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15977, file: !15621, line: 222, column: 7)
!15984 = !DILocation(line: 222, column: 22, scope: !15983)
!15985 = !DILocation(line: 222, column: 7, scope: !15977)
!15986 = !DILocation(line: 223, column: 27, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15983, file: !15621, line: 222, column: 43)
!15988 = !DILocation(line: 223, column: 19, scope: !15987)
!15989 = !DILocation(line: 224, column: 3, scope: !15987)
!15990 = !DILocation(line: 225, column: 18, scope: !15977)
!15991 = !DILocation(line: 228, column: 49, scope: !15977)
!15992 = !DILocation(line: 228, column: 20, scope: !15977)
!15993 = !DILocation(line: 229, column: 22, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15977, file: !15621, line: 229, column: 7)
!15995 = !DILocation(line: 229, column: 7, scope: !15977)
!15996 = !DILocation(line: 233, column: 23, scope: !15997)
!15997 = distinct !DILexicalBlock(scope: !15994, file: !15621, line: 229, column: 31)
!15998 = !DILocation(line: 233, column: 55, scope: !15997)
!15999 = !DILocation(line: 234, column: 17, scope: !15997)
!16000 = !DILocation(line: 233, column: 10, scope: !15997)
!16001 = !DILocation(line: 235, column: 29, scope: !15997)
!16002 = !DILocation(line: 235, column: 20, scope: !15997)
!16003 = !DILocation(line: 236, column: 33, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15997, file: !15621, line: 236, column: 8)
!16005 = !DILocation(line: 236, column: 24, scope: !16004)
!16006 = !DILocation(line: 236, column: 8, scope: !15997)
!16007 = !DILocation(line: 237, column: 29, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16004, file: !15621, line: 236, column: 45)
!16009 = !DILocation(line: 237, column: 21, scope: !16008)
!16010 = !DILocation(line: 238, column: 4, scope: !16008)
!16011 = !DILocation(line: 239, column: 19, scope: !15997)
!16012 = !DILocation(line: 0, scope: !15857, inlinedAt: !16013)
!16013 = distinct !DILocation(line: 242, column: 4, scope: !15997)
!16014 = !DILocation(line: 67, column: 15, scope: !15857, inlinedAt: !16013)
!16015 = !DILocation(line: 67, column: 33, scope: !15857, inlinedAt: !16013)
!16016 = !DILocation(line: 243, column: 4, scope: !15997)
!16017 = !DILocation(line: 244, column: 4, scope: !15997)
!16018 = !DILocation(line: 248, column: 4, scope: !15997)
!16019 = !DILocation(line: 251, column: 13, scope: !15973)
!16020 = !DILocation(line: 258, column: 3, scope: !16021)
!16021 = distinct !DILexicalBlock(scope: !16022, file: !15621, line: 254, column: 9)
!16022 = distinct !DILexicalBlock(scope: !15973, file: !15621, line: 251, column: 13)
!16023 = !DILocation(line: 258, column: 18, scope: !16021)
!16024 = !DILocation(line: 258, column: 28, scope: !16021)
!16025 = !DILocation(line: 260, column: 49, scope: !16021)
!16026 = !DILocation(line: 260, column: 12, scope: !16021)
!16027 = !DILocation(line: 262, column: 3, scope: !16021)
!16028 = !DILocation(line: 0, scope: !15973)
!16029 = !DILocation(line: 0, scope: !15896, inlinedAt: !16030)
!16030 = distinct !DILocation(line: 267, column: 2, scope: !15941)
!16031 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16030)
!16032 = !DILocation(line: 194, column: 2, scope: !15905, inlinedAt: !16030)
!16033 = !DILocation(line: 194, column: 2, scope: !15908, inlinedAt: !16030)
!16034 = !DILocation(line: 0, scope: !15910, inlinedAt: !16035)
!16035 = distinct !DILocation(line: 215, column: 2, scope: !15896, inlinedAt: !16030)
!16036 = !DILocation(line: 95, column: 2, scope: !15910, inlinedAt: !16035)
!16037 = !DILocation(line: 269, column: 2, scope: !15941)
!16038 = !DILocation(line: 270, column: 1, scope: !15941)
!16039 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !15621, file: !15621, line: 284, type: !16040, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !16042)
!16040 = !DISubroutineType(types: !16041)
!16041 = !{!103, !15624, !102}
!16042 = !{!16043, !16044, !16045, !16046}
!16043 = !DILocalVariable(name: "msgq", arg: 1, scope: !16039, file: !15621, line: 284, type: !15624)
!16044 = !DILocalVariable(name: "data", arg: 2, scope: !16039, file: !15621, line: 284, type: !102)
!16045 = !DILocalVariable(name: "key", scope: !16039, file: !15621, line: 286, type: !15795)
!16046 = !DILocalVariable(name: "result", scope: !16039, file: !15621, line: 287, type: !103)
!16047 = !DILocation(line: 0, scope: !16039)
!16048 = !DILocation(line: 289, column: 27, scope: !16039)
!16049 = !DILocation(line: 0, scope: !15818, inlinedAt: !16050)
!16050 = distinct !DILocation(line: 289, column: 8, scope: !16039)
!16051 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16050)
!16053 = !DILocation(line: 0, scope: !15827, inlinedAt: !16052)
!16054 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16050)
!16055 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16050)
!16056 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16050)
!16057 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16050)
!16058 = !DILocation(line: 291, column: 12, scope: !16059)
!16059 = distinct !DILexicalBlock(scope: !16039, file: !15621, line: 291, column: 6)
!16060 = !DILocation(line: 291, column: 22, scope: !16059)
!16061 = !DILocation(line: 291, column: 6, scope: !16039)
!16062 = !DILocation(line: 293, column: 28, scope: !16063)
!16063 = distinct !DILexicalBlock(scope: !16059, file: !15621, line: 291, column: 28)
!16064 = !DILocation(line: 293, column: 44, scope: !16063)
!16065 = !DILocation(line: 293, column: 9, scope: !16063)
!16066 = !DILocation(line: 295, column: 2, scope: !16063)
!16067 = !DILocation(line: 0, scope: !16059)
!16068 = !DILocation(line: 0, scope: !15896, inlinedAt: !16069)
!16069 = distinct !DILocation(line: 302, column: 2, scope: !16039)
!16070 = !DILocation(line: 194, column: 2, scope: !15904, inlinedAt: !16069)
!16071 = !DILocation(line: 194, column: 2, scope: !15905, inlinedAt: !16069)
!16072 = !DILocation(line: 194, column: 2, scope: !15908, inlinedAt: !16069)
!16073 = !DILocation(line: 0, scope: !15910, inlinedAt: !16074)
!16074 = distinct !DILocation(line: 215, column: 2, scope: !15896, inlinedAt: !16069)
!16075 = !DILocation(line: 95, column: 2, scope: !15910, inlinedAt: !16074)
!16076 = !DILocation(line: 304, column: 2, scope: !16039)
!16077 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !15621, file: !15621, line: 318, type: !16078, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3591, retainedNodes: !16080)
!16078 = !DISubroutineType(types: !16079)
!16079 = !{null, !15624}
!16080 = !{!16081, !16082, !16083}
!16081 = !DILocalVariable(name: "msgq", arg: 1, scope: !16077, file: !15621, line: 318, type: !15624)
!16082 = !DILocalVariable(name: "key", scope: !16077, file: !15621, line: 320, type: !15795)
!16083 = !DILocalVariable(name: "pending_thread", scope: !16077, file: !15621, line: 321, type: !3609)
!16084 = !DILocation(line: 0, scope: !16077)
!16085 = !DILocation(line: 323, column: 27, scope: !16077)
!16086 = !DILocation(line: 0, scope: !15818, inlinedAt: !16087)
!16087 = distinct !DILocation(line: 323, column: 8, scope: !16077)
!16088 = !DILocation(line: 55, column: 2, scope: !15827, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 145, column: 10, scope: !15818, inlinedAt: !16087)
!16090 = !DILocation(line: 0, scope: !15827, inlinedAt: !16089)
!16091 = !DILocation(line: 148, column: 2, scope: !15835, inlinedAt: !16087)
!16092 = !DILocation(line: 148, column: 2, scope: !15836, inlinedAt: !16087)
!16093 = !DILocation(line: 148, column: 2, scope: !15839, inlinedAt: !16087)
!16094 = !DILocation(line: 160, column: 2, scope: !15818, inlinedAt: !16087)
!16095 = !DILocation(line: 328, column: 27, scope: !16077)
!16096 = !DILocation(line: 328, column: 65, scope: !16077)
!16097 = !DILocation(line: 328, column: 2, scope: !16077)
!16098 = !DILocation(line: 0, scope: !15857, inlinedAt: !16099)
!16099 = distinct !DILocation(line: 329, column: 3, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16077, file: !15621, line: 328, column: 74)
!16101 = !DILocation(line: 67, column: 15, scope: !15857, inlinedAt: !16099)
!16102 = !DILocation(line: 67, column: 33, scope: !15857, inlinedAt: !16099)
!16103 = !DILocation(line: 330, column: 3, scope: !16100)
!16104 = distinct !{!16104, !16097, !16105}
!16105 = !DILocation(line: 331, column: 2, scope: !16077)
!16106 = !DILocation(line: 333, column: 8, scope: !16077)
!16107 = !DILocation(line: 333, column: 18, scope: !16077)
!16108 = !DILocation(line: 334, column: 25, scope: !16077)
!16109 = !DILocation(line: 334, column: 8, scope: !16077)
!16110 = !DILocation(line: 334, column: 17, scope: !16077)
!16111 = !DILocation(line: 336, column: 2, scope: !16077)
!16112 = !DILocation(line: 337, column: 1, scope: !16077)
!16113 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2805, file: !2805, line: 49, type: !16114, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16123)
!16114 = !DISubroutineType(types: !16115)
!16115 = !{!103, !16116}
!16116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16117, size: 32)
!16117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !127, line: 2720, size: 160, elements: !16118)
!16118 = !{!16119, !16120, !16121, !16122}
!16119 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16117, file: !127, line: 2722, baseType: !2734, size: 64)
!16120 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16117, file: !127, line: 2724, baseType: !2716, size: 32, offset: 64)
!16121 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16117, file: !127, line: 2727, baseType: !111, size: 32, offset: 96)
!16122 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16117, file: !127, line: 2730, baseType: !103, size: 32, offset: 128)
!16123 = !{!16124}
!16124 = !DILocalVariable(name: "mutex", arg: 1, scope: !16113, file: !2805, line: 49, type: !16116)
!16125 = !DILocation(line: 0, scope: !16113)
!16126 = !DILocation(line: 51, column: 9, scope: !16113)
!16127 = !DILocation(line: 51, column: 15, scope: !16113)
!16128 = !DILocation(line: 52, column: 9, scope: !16113)
!16129 = !DILocation(line: 52, column: 20, scope: !16113)
!16130 = !DILocation(line: 54, column: 23, scope: !16113)
!16131 = !DILocation(line: 54, column: 2, scope: !16113)
!16132 = !DILocation(line: 60, column: 2, scope: !16113)
!16133 = distinct !DISubprogram(name: "z_waitq_init", scope: !15203, file: !15203, line: 47, type: !16134, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16136)
!16134 = !DISubroutineType(types: !16135)
!16135 = !{null, !2733}
!16136 = !{!16137}
!16137 = !DILocalVariable(name: "w", arg: 1, scope: !16133, file: !15203, line: 47, type: !2733)
!16138 = !DILocation(line: 0, scope: !16133)
!16139 = !DILocation(line: 49, column: 21, scope: !16133)
!16140 = !DILocation(line: 49, column: 2, scope: !16133)
!16141 = !DILocation(line: 50, column: 1, scope: !16133)
!16142 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !16143, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16146)
!16143 = !DISubroutineType(types: !16144)
!16144 = !{null, !16145}
!16145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 32)
!16146 = !{!16147}
!16147 = !DILocalVariable(name: "list", arg: 1, scope: !16142, file: !136, line: 197, type: !16145)
!16148 = !DILocation(line: 0, scope: !16142)
!16149 = !DILocation(line: 199, column: 8, scope: !16142)
!16150 = !DILocation(line: 199, column: 13, scope: !16142)
!16151 = !DILocation(line: 200, column: 8, scope: !16142)
!16152 = !DILocation(line: 200, column: 13, scope: !16142)
!16153 = !DILocation(line: 201, column: 1, scope: !16142)
!16154 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2805, file: !2805, line: 95, type: !16155, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16161)
!16155 = !DISubroutineType(types: !16156)
!16156 = !{!103, !16116, !16157}
!16157 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16158)
!16158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16159)
!16159 = !{!16160}
!16160 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16158, file: !105, line: 66, baseType: !104, size: 64)
!16161 = !{!16162, !16163, !16164, !16165, !16170, !16171, !16172}
!16162 = !DILocalVariable(name: "mutex", arg: 1, scope: !16154, file: !2805, line: 95, type: !16116)
!16163 = !DILocalVariable(name: "timeout", arg: 2, scope: !16154, file: !2805, line: 95, type: !16157)
!16164 = !DILocalVariable(name: "new_prio", scope: !16154, file: !2805, line: 97, type: !103)
!16165 = !DILocalVariable(name: "key", scope: !16154, file: !2805, line: 98, type: !16166)
!16166 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !16167)
!16167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !16168)
!16168 = !{!16169}
!16169 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16167, file: !152, line: 33, baseType: !103, size: 32)
!16170 = !DILocalVariable(name: "resched", scope: !16154, file: !2805, line: 99, type: !122)
!16171 = !DILocalVariable(name: "got_mutex", scope: !16154, file: !2805, line: 146, type: !103)
!16172 = !DILocalVariable(name: "waiter", scope: !16173, file: !2805, line: 169, type: !2716)
!16173 = distinct !DILexicalBlock(scope: !16174, file: !2805, line: 168, column: 36)
!16174 = distinct !DILexicalBlock(scope: !16154, file: !2805, line: 168, column: 6)
!16175 = !DILocation(line: 0, scope: !16154)
!16176 = !DILocation(line: 1031, column: 3, scope: !16177, inlinedAt: !16180)
!16177 = distinct !DISubprogram(name: "__get_IPSR", scope: !7834, file: !7834, line: 1027, type: !8837, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16178)
!16178 = !{!16179}
!16179 = !DILocalVariable(name: "result", scope: !16177, file: !7834, line: 1029, type: !111)
!16180 = distinct !DILocation(line: 48, column: 10, scope: !16181, inlinedAt: !16182)
!16181 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8843, file: !8843, line: 46, type: !8844, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !2512)
!16182 = distinct !DILocation(line: 101, column: 2, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !16184, file: !2805, line: 101, column: 2)
!16184 = distinct !DILexicalBlock(scope: !16154, file: !2805, line: 101, column: 2)
!16185 = !{i64 2450887}
!16186 = !DILocation(line: 0, scope: !16177, inlinedAt: !16180)
!16187 = !DILocation(line: 48, column: 9, scope: !16181, inlinedAt: !16182)
!16188 = !DILocation(line: 101, column: 2, scope: !16184)
!16189 = !DILocation(line: 101, column: 2, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16183, file: !2805, line: 101, column: 2)
!16191 = !DILocalVariable(name: "l", arg: 1, scope: !16192, file: !152, line: 136, type: !16195)
!16192 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !16193, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16196)
!16193 = !DISubroutineType(types: !16194)
!16194 = !{!16166, !16195}
!16195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!16196 = !{!16191, !16197}
!16197 = !DILocalVariable(name: "k", scope: !16192, file: !152, line: 139, type: !16166)
!16198 = !DILocation(line: 0, scope: !16192, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 105, column: 8, scope: !16154)
!16200 = !DILocation(line: 55, column: 2, scope: !16201, inlinedAt: !16205)
!16201 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16202)
!16202 = !{!16203, !16204}
!16203 = !DILocalVariable(name: "key", scope: !16201, file: !7496, line: 44, type: !32)
!16204 = !DILocalVariable(name: "tmp", scope: !16201, file: !7496, line: 53, type: !32)
!16205 = distinct !DILocation(line: 145, column: 10, scope: !16192, inlinedAt: !16199)
!16206 = !{i64 1656952}
!16207 = !DILocation(line: 0, scope: !16201, inlinedAt: !16205)
!16208 = !DILocation(line: 148, column: 2, scope: !16209, inlinedAt: !16199)
!16209 = distinct !DILexicalBlock(scope: !16210, file: !152, line: 148, column: 2)
!16210 = distinct !DILexicalBlock(scope: !16192, file: !152, line: 148, column: 2)
!16211 = !DILocation(line: 148, column: 2, scope: !16210, inlinedAt: !16199)
!16212 = !DILocation(line: 148, column: 2, scope: !16213, inlinedAt: !16199)
!16213 = distinct !DILexicalBlock(scope: !16209, file: !152, line: 148, column: 2)
!16214 = !DILocation(line: 160, column: 2, scope: !16192, inlinedAt: !16199)
!16215 = !DILocation(line: 107, column: 6, scope: !16216)
!16216 = distinct !DILexicalBlock(scope: !16154, file: !2805, line: 107, column: 6)
!16217 = !DILocation(line: 107, column: 6, scope: !16154)
!16218 = !{!"branch_weights", i32 2000, i32 1}
!16219 = !DILocation(line: 110, column: 6, scope: !16220)
!16220 = distinct !DILexicalBlock(scope: !16216, file: !2805, line: 107, column: 71)
!16221 = !DILocation(line: 110, column: 21, scope: !16220)
!16222 = !DILocation(line: 109, column: 28, scope: !16220)
!16223 = !DILocation(line: 111, column: 13, scope: !16220)
!16224 = !DILocation(line: 114, column: 18, scope: !16220)
!16225 = !DILocation(line: 109, column: 10, scope: !16220)
!16226 = !DILocation(line: 109, column: 26, scope: !16220)
!16227 = !DILocation(line: 113, column: 20, scope: !16220)
!16228 = !DILocation(line: 114, column: 10, scope: !16220)
!16229 = !DILocation(line: 114, column: 16, scope: !16220)
!16230 = !DILocalVariable(name: "key", arg: 2, scope: !16231, file: !152, line: 190, type: !16166)
!16231 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !16232, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16234)
!16232 = !DISubroutineType(types: !16233)
!16233 = !{null, !16195, !16166}
!16234 = !{!16235, !16230}
!16235 = !DILocalVariable(name: "l", arg: 1, scope: !16231, file: !152, line: 189, type: !16195)
!16236 = !DILocation(line: 0, scope: !16231, inlinedAt: !16237)
!16237 = distinct !DILocation(line: 120, column: 3, scope: !16220)
!16238 = !DILocation(line: 194, column: 2, scope: !16239, inlinedAt: !16237)
!16239 = distinct !DILexicalBlock(scope: !16240, file: !152, line: 194, column: 2)
!16240 = distinct !DILexicalBlock(scope: !16231, file: !152, line: 194, column: 2)
!16241 = !DILocation(line: 194, column: 2, scope: !16240, inlinedAt: !16237)
!16242 = !DILocation(line: 194, column: 2, scope: !16243, inlinedAt: !16237)
!16243 = distinct !DILexicalBlock(scope: !16239, file: !152, line: 194, column: 2)
!16244 = !DILocalVariable(name: "key", arg: 1, scope: !16245, file: !7496, line: 84, type: !32)
!16245 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16246)
!16246 = !{!16244}
!16247 = !DILocation(line: 0, scope: !16245, inlinedAt: !16248)
!16248 = distinct !DILocation(line: 215, column: 2, scope: !16231, inlinedAt: !16237)
!16249 = !DILocation(line: 95, column: 2, scope: !16245, inlinedAt: !16248)
!16250 = !{i64 1657769}
!16251 = !DILocation(line: 124, column: 3, scope: !16220)
!16252 = !DILocation(line: 127, column: 6, scope: !16253)
!16253 = distinct !DILexicalBlock(scope: !16154, file: !2805, line: 127, column: 6)
!16254 = !DILocation(line: 127, column: 6, scope: !16154)
!16255 = !{!"branch_weights", i32 1, i32 2000}
!16256 = !DILocation(line: 0, scope: !16231, inlinedAt: !16257)
!16257 = distinct !DILocation(line: 128, column: 3, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16253, file: !2805, line: 127, column: 50)
!16259 = !DILocation(line: 194, column: 2, scope: !16239, inlinedAt: !16257)
!16260 = !DILocation(line: 194, column: 2, scope: !16240, inlinedAt: !16257)
!16261 = !DILocation(line: 194, column: 2, scope: !16243, inlinedAt: !16257)
!16262 = !DILocation(line: 0, scope: !16245, inlinedAt: !16263)
!16263 = distinct !DILocation(line: 215, column: 2, scope: !16231, inlinedAt: !16257)
!16264 = !DILocation(line: 95, column: 2, scope: !16245, inlinedAt: !16263)
!16265 = !DILocation(line: 132, column: 3, scope: !16258)
!16266 = !DILocation(line: 137, column: 53, scope: !16154)
!16267 = !DILocation(line: 137, column: 38, scope: !16154)
!16268 = !DILocation(line: 138, column: 29, scope: !16154)
!16269 = !DILocation(line: 138, column: 10, scope: !16154)
!16270 = !DILocation(line: 137, column: 13, scope: !16154)
!16271 = !DILocation(line: 142, column: 6, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16154, file: !2805, line: 142, column: 6)
!16273 = !DILocation(line: 142, column: 6, scope: !16154)
!16274 = !DILocation(line: 143, column: 13, scope: !16275)
!16275 = distinct !DILexicalBlock(scope: !16272, file: !2805, line: 142, column: 59)
!16276 = !DILocation(line: 144, column: 2, scope: !16275)
!16277 = !DILocation(line: 146, column: 50, scope: !16154)
!16278 = !DILocation(line: 146, column: 18, scope: !16154)
!16279 = !DILocation(line: 153, column: 16, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16154, file: !2805, line: 153, column: 6)
!16281 = !DILocation(line: 153, column: 6, scope: !16154)
!16282 = !DILocation(line: 0, scope: !16192, inlinedAt: !16283)
!16283 = distinct !DILocation(line: 162, column: 8, scope: !16154)
!16284 = !DILocation(line: 55, column: 2, scope: !16201, inlinedAt: !16285)
!16285 = distinct !DILocation(line: 145, column: 10, scope: !16192, inlinedAt: !16283)
!16286 = !DILocation(line: 0, scope: !16201, inlinedAt: !16285)
!16287 = !DILocation(line: 148, column: 2, scope: !16209, inlinedAt: !16283)
!16288 = !DILocation(line: 148, column: 2, scope: !16210, inlinedAt: !16283)
!16289 = !DILocation(line: 148, column: 2, scope: !16213, inlinedAt: !16283)
!16290 = !DILocation(line: 160, column: 2, scope: !16192, inlinedAt: !16283)
!16291 = !DILocation(line: 168, column: 6, scope: !16174)
!16292 = !DILocation(line: 168, column: 6, scope: !16154)
!16293 = !DILocation(line: 169, column: 29, scope: !16173)
!16294 = !DILocation(line: 0, scope: !16173)
!16295 = !DILocation(line: 171, column: 22, scope: !16173)
!16296 = !DILocation(line: 171, column: 14, scope: !16173)
!16297 = !DILocation(line: 172, column: 42, scope: !16173)
!16298 = !DILocation(line: 172, column: 29, scope: !16173)
!16299 = !DILocation(line: 172, column: 55, scope: !16173)
!16300 = !DILocation(line: 172, column: 4, scope: !16173)
!16301 = !DILocation(line: 173, column: 11, scope: !16173)
!16302 = !DILocation(line: 177, column: 13, scope: !16173)
!16303 = !DILocation(line: 177, column: 48, scope: !16173)
!16304 = !DILocation(line: 180, column: 6, scope: !16154)
!16305 = !DILocation(line: 181, column: 3, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16307, file: !2805, line: 180, column: 15)
!16307 = distinct !DILexicalBlock(scope: !16154, file: !2805, line: 180, column: 6)
!16308 = !DILocation(line: 182, column: 2, scope: !16306)
!16309 = !DILocation(line: 0, scope: !16231, inlinedAt: !16310)
!16310 = distinct !DILocation(line: 183, column: 3, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16307, file: !2805, line: 182, column: 9)
!16312 = !DILocation(line: 194, column: 2, scope: !16239, inlinedAt: !16310)
!16313 = !DILocation(line: 194, column: 2, scope: !16240, inlinedAt: !16310)
!16314 = !DILocation(line: 194, column: 2, scope: !16243, inlinedAt: !16310)
!16315 = !DILocation(line: 0, scope: !16245, inlinedAt: !16316)
!16316 = distinct !DILocation(line: 215, column: 2, scope: !16231, inlinedAt: !16310)
!16317 = !DILocation(line: 95, column: 2, scope: !16245, inlinedAt: !16316)
!16318 = !DILocation(line: 189, column: 1, scope: !16154)
!16319 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2805, file: !2805, line: 72, type: !16320, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16322)
!16320 = !DISubroutineType(types: !16321)
!16321 = !{!320, !320, !320}
!16322 = !{!16323, !16324, !16325}
!16323 = !DILocalVariable(name: "target", arg: 1, scope: !16319, file: !2805, line: 72, type: !320)
!16324 = !DILocalVariable(name: "limit", arg: 2, scope: !16319, file: !2805, line: 72, type: !320)
!16325 = !DILocalVariable(name: "new_prio", scope: !16319, file: !2805, line: 74, type: !103)
!16326 = !DILocation(line: 0, scope: !16319)
!16327 = !DILocation(line: 74, column: 17, scope: !16319)
!16328 = !DILocation(line: 76, column: 13, scope: !16319)
!16329 = !DILocation(line: 78, column: 2, scope: !16319)
!16330 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14864, file: !14864, line: 211, type: !16331, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16333)
!16331 = !DISubroutineType(types: !16332)
!16332 = !{!122, !103, !103}
!16333 = !{!16334, !16335}
!16334 = !DILocalVariable(name: "prio", arg: 1, scope: !16330, file: !14864, line: 211, type: !103)
!16335 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16330, file: !14864, line: 211, type: !103)
!16336 = !DILocation(line: 0, scope: !16330)
!16337 = !DILocation(line: 213, column: 9, scope: !16330)
!16338 = !DILocation(line: 213, column: 2, scope: !16330)
!16339 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2805, file: !2805, line: 81, type: !16340, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16342)
!16340 = !DISubroutineType(types: !16341)
!16341 = !{!122, !16116, !320}
!16342 = !{!16343, !16344}
!16343 = !DILocalVariable(name: "mutex", arg: 1, scope: !16339, file: !2805, line: 81, type: !16116)
!16344 = !DILocalVariable(name: "new_prio", arg: 2, scope: !16339, file: !2805, line: 81, type: !320)
!16345 = !DILocation(line: 0, scope: !16339)
!16346 = !DILocation(line: 83, column: 13, scope: !16347)
!16347 = distinct !DILexicalBlock(scope: !16339, file: !2805, line: 83, column: 6)
!16348 = !DILocation(line: 83, column: 25, scope: !16347)
!16349 = !DILocation(line: 83, column: 6, scope: !16347)
!16350 = !DILocation(line: 83, column: 30, scope: !16347)
!16351 = !DILocation(line: 83, column: 6, scope: !16339)
!16352 = !DILocation(line: 90, column: 10, scope: !16353)
!16353 = distinct !DILexicalBlock(scope: !16347, file: !2805, line: 83, column: 43)
!16354 = !DILocation(line: 90, column: 3, scope: !16353)
!16355 = !DILocation(line: 93, column: 1, scope: !16339)
!16356 = distinct !DISubprogram(name: "z_waitq_head", scope: !15203, file: !15203, line: 52, type: !16357, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16359)
!16357 = !DISubroutineType(types: !16358)
!16358 = !{!2716, !2733}
!16359 = !{!16360}
!16360 = !DILocalVariable(name: "w", arg: 1, scope: !16356, file: !15203, line: 52, type: !2733)
!16361 = !DILocation(line: 0, scope: !16356)
!16362 = !DILocation(line: 54, column: 52, scope: !16356)
!16363 = !DILocation(line: 54, column: 28, scope: !16356)
!16364 = !DILocation(line: 54, column: 9, scope: !16356)
!16365 = !DILocation(line: 54, column: 2, scope: !16356)
!16366 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !16367, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16369)
!16367 = !DISubroutineType(types: !16368)
!16368 = !{!2701, !16145}
!16369 = !{!16370}
!16370 = !DILocalVariable(name: "list", arg: 1, scope: !16366, file: !136, line: 294, type: !16145)
!16371 = !DILocation(line: 0, scope: !16366)
!16372 = !DILocation(line: 296, column: 9, scope: !16366)
!16373 = !DILocation(line: 296, column: 49, scope: !16366)
!16374 = !DILocation(line: 296, column: 2, scope: !16366)
!16375 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !16376, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16378)
!16376 = !DISubroutineType(types: !16377)
!16377 = !{!122, !16145}
!16378 = !{!16379}
!16379 = !DILocalVariable(name: "list", arg: 1, scope: !16375, file: !136, line: 266, type: !16145)
!16380 = !DILocation(line: 0, scope: !16375)
!16381 = !DILocation(line: 268, column: 15, scope: !16375)
!16382 = !DILocation(line: 268, column: 20, scope: !16375)
!16383 = !DILocation(line: 268, column: 2, scope: !16375)
!16384 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14864, file: !14864, line: 206, type: !16331, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16385)
!16385 = !{!16386, !16387}
!16386 = !DILocalVariable(name: "prio1", arg: 1, scope: !16384, file: !14864, line: 206, type: !103)
!16387 = !DILocalVariable(name: "prio2", arg: 2, scope: !16384, file: !14864, line: 206, type: !103)
!16388 = !DILocation(line: 0, scope: !16384)
!16389 = !DILocation(line: 208, column: 15, scope: !16384)
!16390 = !DILocation(line: 208, column: 2, scope: !16384)
!16391 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !14864, file: !14864, line: 186, type: !764, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16392)
!16392 = !{!16393}
!16393 = !DILocalVariable(name: "prio", arg: 1, scope: !16391, file: !14864, line: 186, type: !103)
!16394 = !DILocation(line: 0, scope: !16391)
!16395 = !DILocation(line: 188, column: 9, scope: !16391)
!16396 = !DILocation(line: 188, column: 2, scope: !16391)
!16397 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !14864, file: !14864, line: 181, type: !16398, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16400)
!16398 = !DISubroutineType(types: !16399)
!16399 = !{!122, !103}
!16400 = !{!16401}
!16401 = !DILocalVariable(name: "prio", arg: 1, scope: !16397, file: !14864, line: 181, type: !103)
!16402 = !DILocation(line: 0, scope: !16397)
!16403 = !DILocation(line: 183, column: 14, scope: !16397)
!16404 = !DILocation(line: 183, column: 2, scope: !16397)
!16405 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2805, file: !2805, line: 201, type: !16114, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16406)
!16406 = !{!16407, !16408, !16409, !16410}
!16407 = !DILocalVariable(name: "mutex", arg: 1, scope: !16405, file: !2805, line: 201, type: !16116)
!16408 = !DILocalVariable(name: "new_owner", scope: !16405, file: !2805, line: 203, type: !2716)
!16409 = !DILocalVariable(name: "key", scope: !16405, file: !2805, line: 242, type: !16166)
!16410 = !DILabel(scope: !16405, name: "k_mutex_unlock_return", file: !2805, line: 270)
!16411 = !DILocation(line: 0, scope: !16405)
!16412 = !DILocation(line: 1031, column: 3, scope: !16177, inlinedAt: !16413)
!16413 = distinct !DILocation(line: 48, column: 10, scope: !16181, inlinedAt: !16414)
!16414 = distinct !DILocation(line: 205, column: 2, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16416, file: !2805, line: 205, column: 2)
!16416 = distinct !DILexicalBlock(scope: !16405, file: !2805, line: 205, column: 2)
!16417 = !DILocation(line: 0, scope: !16177, inlinedAt: !16413)
!16418 = !DILocation(line: 48, column: 9, scope: !16181, inlinedAt: !16414)
!16419 = !DILocation(line: 205, column: 2, scope: !16416)
!16420 = !DILocation(line: 205, column: 2, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16415, file: !2805, line: 205, column: 2)
!16422 = !DILocation(line: 209, column: 2, scope: !16423)
!16423 = distinct !DILexicalBlock(scope: !16405, file: !2805, line: 209, column: 2)
!16424 = !DILocation(line: 209, column: 2, scope: !16405)
!16425 = !DILocation(line: 217, column: 2, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16405, file: !2805, line: 217, column: 2)
!16427 = !DILocation(line: 217, column: 2, scope: !16405)
!16428 = !DILocation(line: 229, column: 2, scope: !16429)
!16429 = distinct !DILexicalBlock(scope: !16430, file: !2805, line: 229, column: 2)
!16430 = distinct !DILexicalBlock(scope: !16405, file: !2805, line: 229, column: 2)
!16431 = !DILocation(line: 229, column: 2, scope: !16430)
!16432 = !DILocation(line: 229, column: 2, scope: !16433)
!16433 = distinct !DILexicalBlock(scope: !16429, file: !2805, line: 229, column: 2)
!16434 = !DILocation(line: 238, column: 20, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16436, file: !2805, line: 237, column: 30)
!16436 = distinct !DILexicalBlock(scope: !16405, file: !2805, line: 237, column: 6)
!16437 = !DILocation(line: 239, column: 3, scope: !16435)
!16438 = !DILocation(line: 0, scope: !16192, inlinedAt: !16439)
!16439 = distinct !DILocation(line: 242, column: 25, scope: !16405)
!16440 = !DILocation(line: 55, column: 2, scope: !16201, inlinedAt: !16441)
!16441 = distinct !DILocation(line: 145, column: 10, scope: !16192, inlinedAt: !16439)
!16442 = !DILocation(line: 0, scope: !16201, inlinedAt: !16441)
!16443 = !DILocation(line: 148, column: 2, scope: !16209, inlinedAt: !16439)
!16444 = !DILocation(line: 148, column: 2, scope: !16210, inlinedAt: !16439)
!16445 = !DILocation(line: 148, column: 2, scope: !16213, inlinedAt: !16439)
!16446 = !DILocation(line: 160, column: 2, scope: !16192, inlinedAt: !16439)
!16447 = !DILocation(line: 244, column: 34, scope: !16405)
!16448 = !DILocation(line: 244, column: 2, scope: !16405)
!16449 = !DILocation(line: 247, column: 44, scope: !16405)
!16450 = !DILocation(line: 247, column: 14, scope: !16405)
!16451 = !DILocation(line: 249, column: 15, scope: !16405)
!16452 = !DILocation(line: 254, column: 16, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16405, file: !2805, line: 254, column: 6)
!16454 = !DILocation(line: 254, column: 6, scope: !16405)
!16455 = !DILocation(line: 260, column: 44, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16453, file: !2805, line: 254, column: 25)
!16457 = !DILocation(line: 260, column: 28, scope: !16456)
!16458 = !DILocation(line: 260, column: 26, scope: !16456)
!16459 = !DILocalVariable(name: "thread", arg: 1, scope: !16460, file: !14884, line: 65, type: !2716)
!16460 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14884, file: !14884, line: 65, type: !16461, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2698, retainedNodes: !16463)
!16461 = !DISubroutineType(types: !16462)
!16462 = !{null, !2716, !32}
!16463 = !{!16459, !16464}
!16464 = !DILocalVariable(name: "value", arg: 2, scope: !16460, file: !14884, line: 65, type: !32)
!16465 = !DILocation(line: 0, scope: !16460, inlinedAt: !16466)
!16466 = distinct !DILocation(line: 261, column: 3, scope: !16456)
!16467 = !DILocation(line: 67, column: 15, scope: !16460, inlinedAt: !16466)
!16468 = !DILocation(line: 67, column: 33, scope: !16460, inlinedAt: !16466)
!16469 = !DILocation(line: 262, column: 3, scope: !16456)
!16470 = !DILocation(line: 263, column: 3, scope: !16456)
!16471 = !DILocation(line: 264, column: 2, scope: !16456)
!16472 = !DILocation(line: 265, column: 21, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16453, file: !2805, line: 264, column: 9)
!16474 = !DILocation(line: 0, scope: !16231, inlinedAt: !16475)
!16475 = distinct !DILocation(line: 266, column: 3, scope: !16473)
!16476 = !DILocation(line: 194, column: 2, scope: !16239, inlinedAt: !16475)
!16477 = !DILocation(line: 194, column: 2, scope: !16240, inlinedAt: !16475)
!16478 = !DILocation(line: 194, column: 2, scope: !16243, inlinedAt: !16475)
!16479 = !DILocation(line: 0, scope: !16245, inlinedAt: !16480)
!16480 = distinct !DILocation(line: 215, column: 2, scope: !16231, inlinedAt: !16475)
!16481 = !DILocation(line: 95, column: 2, scope: !16245, inlinedAt: !16480)
!16482 = !DILocation(line: 274, column: 1, scope: !16405)
!16483 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2918, file: !2918, line: 93, type: !16484, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16486)
!16484 = !DISubroutineType(types: !16485)
!16485 = !{!320, !2811, !2811}
!16486 = !{!16487, !16488, !16489, !16490}
!16487 = !DILocalVariable(name: "thread_1", arg: 1, scope: !16483, file: !2918, line: 93, type: !2811)
!16488 = !DILocalVariable(name: "thread_2", arg: 2, scope: !16483, file: !2918, line: 94, type: !2811)
!16489 = !DILocalVariable(name: "b1", scope: !16483, file: !2918, line: 97, type: !320)
!16490 = !DILocalVariable(name: "b2", scope: !16483, file: !2918, line: 98, type: !320)
!16491 = !DILocation(line: 0, scope: !16483)
!16492 = !DILocation(line: 97, column: 30, scope: !16483)
!16493 = !DILocation(line: 98, column: 30, scope: !16483)
!16494 = !DILocation(line: 100, column: 9, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16483, file: !2918, line: 100, column: 6)
!16496 = !DILocation(line: 100, column: 6, scope: !16483)
!16497 = !DILocation(line: 125, column: 1, scope: !16483)
!16498 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2918, file: !2918, line: 428, type: !16499, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16501)
!16499 = !DISubroutineType(types: !16500)
!16500 = !{null, !2811}
!16501 = !{!16502}
!16502 = !DILocalVariable(name: "curr", arg: 1, scope: !16498, file: !2918, line: 428, type: !2811)
!16503 = !DILocation(line: 0, scope: !16498)
!16504 = !DILocation(line: 434, column: 6, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16498, file: !2918, line: 434, column: 6)
!16506 = !DILocation(line: 434, column: 23, scope: !16505)
!16507 = !DILocation(line: 434, column: 6, scope: !16498)
!16508 = !DILocation(line: 435, column: 50, scope: !16509)
!16509 = distinct !DILexicalBlock(scope: !16505, file: !2918, line: 434, column: 29)
!16510 = !DILocation(line: 435, column: 48, scope: !16509)
!16511 = !DILocation(line: 435, column: 29, scope: !16509)
!16512 = !DILocation(line: 436, column: 24, scope: !16509)
!16513 = !DILocation(line: 436, column: 3, scope: !16509)
!16514 = !DILocation(line: 437, column: 2, scope: !16509)
!16515 = !DILocation(line: 438, column: 1, scope: !16498)
!16516 = distinct !DISubprogram(name: "slice_time", scope: !2918, file: !2918, line: 407, type: !16517, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16519)
!16517 = !DISubroutineType(types: !16518)
!16518 = !{!103, !2811}
!16519 = !{!16520, !16521}
!16520 = !DILocalVariable(name: "curr", arg: 1, scope: !16516, file: !2918, line: 407, type: !2811)
!16521 = !DILocalVariable(name: "ret", scope: !16516, file: !2918, line: 409, type: !103)
!16522 = !DILocation(line: 0, scope: !16516)
!16523 = !DILocation(line: 409, column: 12, scope: !16516)
!16524 = !DILocation(line: 416, column: 2, scope: !16516)
!16525 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2918, file: !2918, line: 440, type: !16526, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16528)
!16526 = !DISubroutineType(types: !16527)
!16527 = !{null, !320, !103}
!16528 = !{!16529, !16530, !16531, !16537}
!16529 = !DILocalVariable(name: "slice", arg: 1, scope: !16525, file: !2918, line: 440, type: !320)
!16530 = !DILocalVariable(name: "prio", arg: 2, scope: !16525, file: !2918, line: 440, type: !103)
!16531 = !DILocalVariable(name: "__i", scope: !16532, file: !2918, line: 442, type: !16533)
!16532 = distinct !DILexicalBlock(scope: !16525, file: !2918, line: 442, column: 2)
!16533 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !16534)
!16534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !16535)
!16535 = !{!16536}
!16536 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16534, file: !152, line: 33, baseType: !103, size: 32)
!16537 = !DILocalVariable(name: "__key", scope: !16532, file: !2918, line: 442, type: !16533)
!16538 = !DILocation(line: 0, scope: !16525)
!16539 = !DILocation(line: 0, scope: !16532)
!16540 = !DILocalVariable(name: "l", arg: 1, scope: !16541, file: !152, line: 136, type: !16544)
!16541 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !16542, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16545)
!16542 = !DISubroutineType(types: !16543)
!16543 = !{!16533, !16544}
!16544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 32)
!16545 = !{!16540, !16546}
!16546 = !DILocalVariable(name: "k", scope: !16541, file: !152, line: 139, type: !16533)
!16547 = !DILocation(line: 0, scope: !16541, inlinedAt: !16548)
!16548 = distinct !DILocation(line: 442, column: 2, scope: !16532)
!16549 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !16554)
!16550 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16551)
!16551 = !{!16552, !16553}
!16552 = !DILocalVariable(name: "key", scope: !16550, file: !7496, line: 44, type: !32)
!16553 = !DILocalVariable(name: "tmp", scope: !16550, file: !7496, line: 53, type: !32)
!16554 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !16548)
!16555 = !{i64 1696515}
!16556 = !DILocation(line: 0, scope: !16550, inlinedAt: !16554)
!16557 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !16548)
!16558 = distinct !DILexicalBlock(scope: !16559, file: !152, line: 148, column: 2)
!16559 = distinct !DILexicalBlock(scope: !16541, file: !152, line: 148, column: 2)
!16560 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !16548)
!16561 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !16548)
!16562 = distinct !DILexicalBlock(scope: !16558, file: !152, line: 148, column: 2)
!16563 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !16548)
!16564 = !DILocation(line: 443, column: 29, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16566, file: !2918, line: 442, column: 26)
!16566 = distinct !DILexicalBlock(scope: !16532, file: !2918, line: 442, column: 2)
!16567 = !DILocation(line: 444, column: 17, scope: !16565)
!16568 = !DILocation(line: 445, column: 51, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16565, file: !2918, line: 445, column: 7)
!16570 = !DILocation(line: 445, column: 7, scope: !16565)
!16571 = !DILocation(line: 0, scope: !16565)
!16572 = !DILocation(line: 451, column: 18, scope: !16565)
!16573 = !DILocation(line: 452, column: 3, scope: !16565)
!16574 = !DILocalVariable(name: "key", arg: 2, scope: !16575, file: !152, line: 190, type: !16533)
!16575 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !16576, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16578)
!16576 = !DISubroutineType(types: !16577)
!16577 = !{null, !16544, !16533}
!16578 = !{!16579, !16574}
!16579 = !DILocalVariable(name: "l", arg: 1, scope: !16575, file: !152, line: 189, type: !16544)
!16580 = !DILocation(line: 0, scope: !16575, inlinedAt: !16581)
!16581 = distinct !DILocation(line: 442, column: 2, scope: !16566)
!16582 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !16581)
!16583 = distinct !DILexicalBlock(scope: !16584, file: !152, line: 194, column: 2)
!16584 = distinct !DILexicalBlock(scope: !16575, file: !152, line: 194, column: 2)
!16585 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !16581)
!16586 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !16581)
!16587 = distinct !DILexicalBlock(scope: !16583, file: !152, line: 194, column: 2)
!16588 = !DILocalVariable(name: "key", arg: 1, scope: !16589, file: !7496, line: 84, type: !32)
!16589 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16590)
!16590 = !{!16588}
!16591 = !DILocation(line: 0, scope: !16589, inlinedAt: !16592)
!16592 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !16581)
!16593 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !16592)
!16594 = !{i64 1697332}
!16595 = !DILocation(line: 454, column: 1, scope: !16525)
!16596 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3883, file: !3883, line: 389, type: !9077, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16597)
!16597 = !{!16598}
!16598 = !DILocalVariable(name: "t", arg: 1, scope: !16596, file: !3883, line: 389, type: !111)
!16599 = !DILocation(line: 0, scope: !16596)
!16600 = !DILocalVariable(name: "t", arg: 1, scope: !16601, file: !3883, line: 102, type: !112)
!16601 = distinct !DISubprogram(name: "z_tmcvt", scope: !3883, file: !3883, line: 102, type: !3891, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16602)
!16602 = !{!16600, !16603, !16604, !16605, !16606, !16607, !16608, !16609, !16610, !16611, !16612}
!16603 = !DILocalVariable(name: "from_hz", arg: 2, scope: !16601, file: !3883, line: 102, type: !111)
!16604 = !DILocalVariable(name: "to_hz", arg: 3, scope: !16601, file: !3883, line: 103, type: !111)
!16605 = !DILocalVariable(name: "const_hz", arg: 4, scope: !16601, file: !3883, line: 103, type: !122)
!16606 = !DILocalVariable(name: "result32", arg: 5, scope: !16601, file: !3883, line: 104, type: !122)
!16607 = !DILocalVariable(name: "round_up", arg: 6, scope: !16601, file: !3883, line: 104, type: !122)
!16608 = !DILocalVariable(name: "round_off", arg: 7, scope: !16601, file: !3883, line: 105, type: !122)
!16609 = !DILocalVariable(name: "mul_ratio", scope: !16601, file: !3883, line: 107, type: !122)
!16610 = !DILocalVariable(name: "div_ratio", scope: !16601, file: !3883, line: 109, type: !122)
!16611 = !DILocalVariable(name: "off", scope: !16601, file: !3883, line: 116, type: !112)
!16612 = !DILocalVariable(name: "rdivisor", scope: !16613, file: !3883, line: 119, type: !111)
!16613 = distinct !DILexicalBlock(scope: !16614, file: !3883, line: 118, column: 18)
!16614 = distinct !DILexicalBlock(scope: !16601, file: !3883, line: 118, column: 6)
!16615 = !DILocation(line: 0, scope: !16601, inlinedAt: !16616)
!16616 = distinct !DILocation(line: 392, column: 9, scope: !16596)
!16617 = !DILocation(line: 143, column: 25, scope: !16618, inlinedAt: !16616)
!16618 = distinct !DILexicalBlock(scope: !16619, file: !3883, line: 142, column: 17)
!16619 = distinct !DILexicalBlock(scope: !16620, file: !3883, line: 142, column: 7)
!16620 = distinct !DILexicalBlock(scope: !16621, file: !3883, line: 141, column: 24)
!16621 = distinct !DILexicalBlock(scope: !16622, file: !3883, line: 141, column: 13)
!16622 = distinct !DILexicalBlock(scope: !16601, file: !3883, line: 134, column: 6)
!16623 = !DILocation(line: 392, column: 2, scope: !16596)
!16624 = distinct !DISubprogram(name: "z_time_slice", scope: !2918, file: !2918, line: 502, type: !10347, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16625)
!16625 = !{!16626, !16627}
!16626 = !DILocalVariable(name: "ticks", arg: 1, scope: !16624, file: !2918, line: 502, type: !103)
!16627 = !DILocalVariable(name: "key", scope: !16624, file: !2918, line: 511, type: !16533)
!16628 = !DILocation(line: 0, scope: !16624)
!16629 = !DILocation(line: 0, scope: !16541, inlinedAt: !16630)
!16630 = distinct !DILocation(line: 511, column: 25, scope: !16624)
!16631 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !16632)
!16632 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !16630)
!16633 = !DILocation(line: 0, scope: !16550, inlinedAt: !16632)
!16634 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !16630)
!16635 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !16630)
!16636 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !16630)
!16637 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !16630)
!16638 = !DILocation(line: 514, column: 6, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16624, file: !2918, line: 514, column: 6)
!16640 = !DILocation(line: 514, column: 25, scope: !16639)
!16641 = !DILocation(line: 514, column: 22, scope: !16639)
!16642 = !DILocation(line: 514, column: 6, scope: !16624)
!16643 = !DILocation(line: 515, column: 3, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16639, file: !2918, line: 514, column: 35)
!16645 = !DILocation(line: 0, scope: !16575, inlinedAt: !16646)
!16646 = distinct !DILocation(line: 516, column: 3, scope: !16644)
!16647 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !16646)
!16648 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !16646)
!16649 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !16646)
!16650 = !DILocation(line: 0, scope: !16589, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !16646)
!16652 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !16651)
!16653 = !DILocation(line: 517, column: 3, scope: !16644)
!16654 = !DILocation(line: 519, column: 18, scope: !16624)
!16655 = !DILocation(line: 522, column: 6, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16624, file: !2918, line: 522, column: 6)
!16657 = !DILocation(line: 522, column: 27, scope: !16656)
!16658 = !DILocation(line: 522, column: 30, scope: !16656)
!16659 = !DILocation(line: 522, column: 6, scope: !16624)
!16660 = !DILocation(line: 523, column: 30, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16662, file: !2918, line: 523, column: 7)
!16662 = distinct !DILexicalBlock(scope: !16656, file: !2918, line: 522, column: 51)
!16663 = !DILocation(line: 523, column: 13, scope: !16661)
!16664 = !DILocation(line: 523, column: 7, scope: !16662)
!16665 = !DILocation(line: 530, column: 10, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16661, file: !2918, line: 523, column: 43)
!16667 = !DILocation(line: 531, column: 3, scope: !16666)
!16668 = !DILocation(line: 532, column: 30, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !16661, file: !2918, line: 531, column: 10)
!16670 = !DILocation(line: 535, column: 29, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16656, file: !2918, line: 534, column: 9)
!16672 = !DILocation(line: 0, scope: !16575, inlinedAt: !16673)
!16673 = distinct !DILocation(line: 537, column: 2, scope: !16624)
!16674 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !16673)
!16675 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !16673)
!16676 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !16673)
!16677 = !DILocation(line: 0, scope: !16589, inlinedAt: !16678)
!16678 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !16673)
!16679 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !16678)
!16680 = !DILocation(line: 538, column: 1, scope: !16624)
!16681 = distinct !DISubprogram(name: "sliceable", scope: !2918, file: !2918, line: 468, type: !16682, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16684)
!16682 = !DISubroutineType(types: !16683)
!16683 = !{!122, !2811}
!16684 = !{!16685, !16686}
!16685 = !DILocalVariable(name: "thread", arg: 1, scope: !16681, file: !2918, line: 468, type: !2811)
!16686 = !DILocalVariable(name: "ret", scope: !16681, file: !2918, line: 470, type: !122)
!16687 = !DILocation(line: 0, scope: !16681)
!16688 = !DILocation(line: 470, column: 13, scope: !16681)
!16689 = !DILocation(line: 471, column: 3, scope: !16681)
!16690 = !DILocation(line: 471, column: 7, scope: !16681)
!16691 = !DILocation(line: 472, column: 3, scope: !16681)
!16692 = !DILocation(line: 472, column: 37, scope: !16681)
!16693 = !DILocation(line: 472, column: 24, scope: !16681)
!16694 = !DILocation(line: 472, column: 43, scope: !16681)
!16695 = !DILocation(line: 472, column: 7, scope: !16681)
!16696 = !DILocation(line: 473, column: 3, scope: !16681)
!16697 = !DILocation(line: 473, column: 7, scope: !16681)
!16698 = !DILocation(line: 473, column: 6, scope: !16681)
!16699 = !DILocation(line: 479, column: 2, scope: !16681)
!16700 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2918, file: !2918, line: 482, type: !16701, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16703)
!16701 = !DISubroutineType(types: !16702)
!16702 = !{!16533, !16533}
!16703 = !{!16704, !16705}
!16704 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !16700, file: !2918, line: 482, type: !16533)
!16705 = !DILocalVariable(name: "curr", scope: !16700, file: !2918, line: 484, type: !2811)
!16706 = !DILocation(line: 0, scope: !16700)
!16707 = !DILocation(line: 484, column: 26, scope: !16700)
!16708 = !DILocation(line: 493, column: 7, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16700, file: !2918, line: 493, column: 6)
!16710 = !DILocation(line: 493, column: 6, scope: !16700)
!16711 = !DILocation(line: 494, column: 3, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16709, file: !2918, line: 493, column: 49)
!16713 = !DILocation(line: 495, column: 2, scope: !16712)
!16714 = !DILocation(line: 496, column: 2, scope: !16700)
!16715 = !DILocation(line: 499, column: 1, scope: !16700)
!16716 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !14864, file: !14864, line: 106, type: !16682, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16717)
!16717 = !{!16718, !16719}
!16718 = !DILocalVariable(name: "thread", arg: 1, scope: !16716, file: !14864, line: 106, type: !2811)
!16719 = !DILocalVariable(name: "state", scope: !16716, file: !14864, line: 108, type: !166)
!16720 = !DILocation(line: 0, scope: !16716)
!16721 = !DILocation(line: 108, column: 31, scope: !16716)
!16722 = !DILocation(line: 110, column: 16, scope: !16716)
!16723 = !DILocation(line: 111, column: 41, scope: !16716)
!16724 = !DILocation(line: 110, column: 2, scope: !16716)
!16725 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2918, file: !2918, line: 393, type: !16499, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16726)
!16726 = !{!16727}
!16727 = !DILocalVariable(name: "thread", arg: 1, scope: !16725, file: !2918, line: 393, type: !2811)
!16728 = !DILocation(line: 0, scope: !16725)
!16729 = !DILocation(line: 395, column: 6, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16725, file: !2918, line: 395, column: 6)
!16731 = !DILocation(line: 395, column: 6, scope: !16725)
!16732 = !DILocalVariable(name: "thread", arg: 1, scope: !16733, file: !2918, line: 264, type: !2811)
!16733 = distinct !DISubprogram(name: "dequeue_thread", scope: !2918, file: !2918, line: 264, type: !16499, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16734)
!16734 = !{!16732}
!16735 = !DILocation(line: 0, scope: !16733, inlinedAt: !16736)
!16736 = distinct !DILocation(line: 396, column: 3, scope: !16737)
!16737 = distinct !DILexicalBlock(scope: !16730, file: !2918, line: 395, column: 34)
!16738 = !DILocation(line: 266, column: 15, scope: !16733, inlinedAt: !16736)
!16739 = !DILocation(line: 266, column: 28, scope: !16733, inlinedAt: !16736)
!16740 = !DILocalVariable(name: "thread", arg: 1, scope: !16741, file: !2918, line: 232, type: !2811)
!16741 = distinct !DISubprogram(name: "runq_remove", scope: !2918, file: !2918, line: 232, type: !16499, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16742)
!16742 = !{!16740}
!16743 = !DILocation(line: 0, scope: !16741, inlinedAt: !16744)
!16744 = distinct !DILocation(line: 268, column: 3, scope: !16745, inlinedAt: !16736)
!16745 = distinct !DILexicalBlock(scope: !16746, file: !2918, line: 267, column: 35)
!16746 = distinct !DILexicalBlock(scope: !16733, file: !2918, line: 267, column: 6)
!16747 = !DILocation(line: 234, column: 2, scope: !16741, inlinedAt: !16744)
!16748 = !DILocation(line: 397, column: 2, scope: !16737)
!16749 = !DILocalVariable(name: "thread", arg: 1, scope: !16750, file: !2918, line: 250, type: !2811)
!16750 = distinct !DISubprogram(name: "queue_thread", scope: !2918, file: !2918, line: 250, type: !16499, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16751)
!16751 = !{!16749}
!16752 = !DILocation(line: 0, scope: !16750, inlinedAt: !16753)
!16753 = distinct !DILocation(line: 398, column: 2, scope: !16725)
!16754 = !DILocation(line: 252, column: 15, scope: !16750, inlinedAt: !16753)
!16755 = !DILocation(line: 252, column: 28, scope: !16750, inlinedAt: !16753)
!16756 = !DILocalVariable(name: "thread", arg: 1, scope: !16757, file: !2918, line: 227, type: !2811)
!16757 = distinct !DISubprogram(name: "runq_add", scope: !2918, file: !2918, line: 227, type: !16499, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16758)
!16758 = !{!16756}
!16759 = !DILocation(line: 0, scope: !16757, inlinedAt: !16760)
!16760 = distinct !DILocation(line: 254, column: 3, scope: !16761, inlinedAt: !16753)
!16761 = distinct !DILexicalBlock(scope: !16762, file: !2918, line: 253, column: 35)
!16762 = distinct !DILexicalBlock(scope: !16750, file: !2918, line: 253, column: 6)
!16763 = !DILocalVariable(name: "pq", arg: 1, scope: !16764, file: !2918, line: 181, type: !16767)
!16764 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2918, file: !2918, line: 181, type: !16765, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16768)
!16765 = !DISubroutineType(types: !16766)
!16766 = !{null, !16767, !2811}
!16767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 32)
!16768 = !{!16763, !16769, !16770}
!16769 = !DILocalVariable(name: "thread", arg: 2, scope: !16764, file: !2918, line: 182, type: !2811)
!16770 = !DILocalVariable(name: "t", scope: !16764, file: !2918, line: 184, type: !2811)
!16771 = !DILocation(line: 0, scope: !16764, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 229, column: 2, scope: !16757, inlinedAt: !16760)
!16773 = !DILocation(line: 186, column: 2, scope: !16774, inlinedAt: !16772)
!16774 = distinct !DILexicalBlock(scope: !16775, file: !2918, line: 186, column: 2)
!16775 = distinct !DILexicalBlock(scope: !16764, file: !2918, line: 186, column: 2)
!16776 = !DILocation(line: 186, column: 2, scope: !16775, inlinedAt: !16772)
!16777 = !DILocation(line: 186, column: 2, scope: !16778, inlinedAt: !16772)
!16778 = distinct !DILexicalBlock(scope: !16774, file: !2918, line: 186, column: 2)
!16779 = !DILocation(line: 188, column: 2, scope: !16780, inlinedAt: !16772)
!16780 = distinct !DILexicalBlock(scope: !16764, file: !2918, line: 188, column: 2)
!16781 = !DILocation(line: 188, column: 2, scope: !16782, inlinedAt: !16772)
!16782 = distinct !DILexicalBlock(scope: !16780, file: !2918, line: 188, column: 2)
!16783 = !DILocation(line: 0, scope: !16780, inlinedAt: !16772)
!16784 = !DILocation(line: 189, column: 7, scope: !16785, inlinedAt: !16772)
!16785 = distinct !DILexicalBlock(scope: !16786, file: !2918, line: 189, column: 7)
!16786 = distinct !DILexicalBlock(scope: !16782, file: !2918, line: 188, column: 56)
!16787 = !DILocation(line: 189, column: 35, scope: !16785, inlinedAt: !16772)
!16788 = !DILocation(line: 189, column: 7, scope: !16786, inlinedAt: !16772)
!16789 = !DILocation(line: 191, column: 21, scope: !16790, inlinedAt: !16772)
!16790 = distinct !DILexicalBlock(scope: !16785, file: !2918, line: 189, column: 40)
!16791 = !DILocation(line: 190, column: 4, scope: !16790, inlinedAt: !16772)
!16792 = !DILocation(line: 192, column: 4, scope: !16790, inlinedAt: !16772)
!16793 = distinct !{!16793, !16779, !16794}
!16794 = !DILocation(line: 194, column: 2, scope: !16780, inlinedAt: !16772)
!16795 = !DILocation(line: 196, column: 37, scope: !16764, inlinedAt: !16772)
!16796 = !DILocation(line: 196, column: 2, scope: !16764, inlinedAt: !16772)
!16797 = !DILocation(line: 197, column: 1, scope: !16764, inlinedAt: !16772)
!16798 = !DILocation(line: 399, column: 25, scope: !16725)
!16799 = !DILocation(line: 399, column: 22, scope: !16725)
!16800 = !DILocation(line: 399, column: 2, scope: !16725)
!16801 = !DILocation(line: 400, column: 1, scope: !16725)
!16802 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !14864, file: !14864, line: 136, type: !16682, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16803)
!16803 = !{!16804}
!16804 = !DILocalVariable(name: "thread", arg: 1, scope: !16802, file: !14864, line: 136, type: !2811)
!16805 = !DILocation(line: 0, scope: !16802)
!16806 = !DILocation(line: 138, column: 9, scope: !16802)
!16807 = !DILocation(line: 138, column: 2, scope: !16802)
!16808 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2918, file: !2918, line: 1137, type: !16765, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16809)
!16809 = !{!16810, !16811}
!16810 = !DILocalVariable(name: "pq", arg: 1, scope: !16808, file: !2918, line: 1137, type: !16767)
!16811 = !DILocalVariable(name: "thread", arg: 2, scope: !16808, file: !2918, line: 1137, type: !2811)
!16812 = !DILocation(line: 0, scope: !16808)
!16813 = !DILocation(line: 1139, column: 2, scope: !16814)
!16814 = distinct !DILexicalBlock(scope: !16815, file: !2918, line: 1139, column: 2)
!16815 = distinct !DILexicalBlock(scope: !16808, file: !2918, line: 1139, column: 2)
!16816 = !DILocation(line: 1139, column: 2, scope: !16815)
!16817 = !DILocation(line: 1139, column: 2, scope: !16818)
!16818 = distinct !DILexicalBlock(scope: !16814, file: !2918, line: 1139, column: 2)
!16819 = !DILocation(line: 1141, column: 33, scope: !16808)
!16820 = !DILocation(line: 1141, column: 2, scope: !16808)
!16821 = !DILocation(line: 1142, column: 1, scope: !16808)
!16822 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !14864, file: !14864, line: 83, type: !16682, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16823)
!16823 = !{!16824}
!16824 = !DILocalVariable(name: "thread", arg: 1, scope: !16822, file: !14864, line: 83, type: !2811)
!16825 = !DILocation(line: 0, scope: !16822)
!16826 = !DILocation(line: 89, column: 16, scope: !16822)
!16827 = !DILocation(line: 89, column: 2, scope: !16822)
!16828 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !16829, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16831)
!16829 = !DISubroutineType(types: !16830)
!16830 = !{!2914, !16767}
!16831 = !{!16832}
!16832 = !DILocalVariable(name: "list", arg: 1, scope: !16828, file: !136, line: 294, type: !16767)
!16833 = !DILocation(line: 0, scope: !16828)
!16834 = !DILocation(line: 296, column: 9, scope: !16828)
!16835 = !DILocation(line: 296, column: 49, scope: !16828)
!16836 = !DILocation(line: 296, column: 2, scope: !16828)
!16837 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !136, file: !136, line: 443, type: !16838, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16840)
!16838 = !DISubroutineType(types: !16839)
!16839 = !{null, !2914, !2914}
!16840 = !{!16841, !16842, !16843}
!16841 = !DILocalVariable(name: "successor", arg: 1, scope: !16837, file: !136, line: 443, type: !2914)
!16842 = !DILocalVariable(name: "node", arg: 2, scope: !16837, file: !136, line: 443, type: !2914)
!16843 = !DILocalVariable(name: "prev", scope: !16837, file: !136, line: 445, type: !16844)
!16844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2914)
!16845 = !DILocation(line: 0, scope: !16837)
!16846 = !DILocation(line: 445, column: 39, scope: !16837)
!16847 = !DILocation(line: 447, column: 8, scope: !16837)
!16848 = !DILocation(line: 447, column: 13, scope: !16837)
!16849 = !DILocation(line: 448, column: 8, scope: !16837)
!16850 = !DILocation(line: 448, column: 13, scope: !16837)
!16851 = !DILocation(line: 449, column: 8, scope: !16837)
!16852 = !DILocation(line: 449, column: 13, scope: !16837)
!16853 = !DILocation(line: 450, column: 18, scope: !16837)
!16854 = !DILocation(line: 451, column: 1, scope: !16837)
!16855 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !136, file: !136, line: 341, type: !16856, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16858)
!16856 = !DISubroutineType(types: !16857)
!16857 = !{!2914, !16767, !2914}
!16858 = !{!16859, !16860}
!16859 = !DILocalVariable(name: "list", arg: 1, scope: !16855, file: !136, line: 341, type: !16767)
!16860 = !DILocalVariable(name: "node", arg: 2, scope: !16855, file: !136, line: 342, type: !2914)
!16861 = !DILocation(line: 0, scope: !16855)
!16862 = !DILocation(line: 344, column: 15, scope: !16855)
!16863 = !DILocation(line: 344, column: 9, scope: !16855)
!16864 = !DILocation(line: 344, column: 26, scope: !16855)
!16865 = !DILocation(line: 344, column: 2, scope: !16855)
!16866 = distinct !DISubprogram(name: "sys_dlist_append", scope: !136, file: !136, line: 404, type: !16867, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16869)
!16867 = !DISubroutineType(types: !16868)
!16868 = !{null, !16767, !2914}
!16869 = !{!16870, !16871, !16872}
!16870 = !DILocalVariable(name: "list", arg: 1, scope: !16866, file: !136, line: 404, type: !16767)
!16871 = !DILocalVariable(name: "node", arg: 2, scope: !16866, file: !136, line: 404, type: !2914)
!16872 = !DILocalVariable(name: "tail", scope: !16866, file: !136, line: 406, type: !16844)
!16873 = !DILocation(line: 0, scope: !16866)
!16874 = !DILocation(line: 406, column: 34, scope: !16866)
!16875 = !DILocation(line: 408, column: 8, scope: !16866)
!16876 = !DILocation(line: 408, column: 13, scope: !16866)
!16877 = !DILocation(line: 409, column: 8, scope: !16866)
!16878 = !DILocation(line: 409, column: 13, scope: !16866)
!16879 = !DILocation(line: 411, column: 8, scope: !16866)
!16880 = !DILocation(line: 411, column: 13, scope: !16866)
!16881 = !DILocation(line: 412, column: 13, scope: !16866)
!16882 = !DILocation(line: 413, column: 1, scope: !16866)
!16883 = distinct !DISubprogram(name: "update_cache", scope: !2918, file: !2918, line: 559, type: !10347, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16884)
!16884 = !{!16885, !16886}
!16885 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16883, file: !2918, line: 559, type: !103)
!16886 = !DILocalVariable(name: "thread", scope: !16883, file: !2918, line: 562, type: !2811)
!16887 = !DILocation(line: 0, scope: !16883)
!16888 = !DILocation(line: 239, column: 9, scope: !16889, inlinedAt: !16892)
!16889 = distinct !DISubprogram(name: "runq_best", scope: !2918, file: !2918, line: 237, type: !16890, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!16890 = !DISubroutineType(types: !16891)
!16891 = !{!2811}
!16892 = distinct !DILocation(line: 314, column: 28, scope: !16893, inlinedAt: !16896)
!16893 = distinct !DISubprogram(name: "next_up", scope: !2918, file: !2918, line: 312, type: !16890, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16894)
!16894 = !{!16895}
!16895 = !DILocalVariable(name: "thread", scope: !16893, file: !2918, line: 314, type: !2811)
!16896 = distinct !DILocation(line: 562, column: 28, scope: !16883)
!16897 = !DILocation(line: 0, scope: !16893, inlinedAt: !16896)
!16898 = !DILocation(line: 340, column: 17, scope: !16893, inlinedAt: !16896)
!16899 = !DILocation(line: 340, column: 9, scope: !16893, inlinedAt: !16896)
!16900 = !DILocalVariable(name: "thread", arg: 1, scope: !16901, file: !2918, line: 127, type: !2811)
!16901 = distinct !DISubprogram(name: "should_preempt", scope: !2918, file: !2918, line: 127, type: !16902, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16904)
!16902 = !DISubroutineType(types: !16903)
!16903 = !{!122, !2811, !103}
!16904 = !{!16900, !16905}
!16905 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16901, file: !2918, line: 128, type: !103)
!16906 = !DILocation(line: 0, scope: !16901, inlinedAt: !16907)
!16907 = distinct !DILocation(line: 564, column: 6, scope: !16908)
!16908 = distinct !DILexicalBlock(scope: !16883, file: !2918, line: 564, column: 6)
!16909 = !DILocation(line: 133, column: 17, scope: !16910, inlinedAt: !16907)
!16910 = distinct !DILexicalBlock(scope: !16901, file: !2918, line: 133, column: 6)
!16911 = !DILocation(line: 0, scope: !16908)
!16912 = !DILocation(line: 133, column: 6, scope: !16901, inlinedAt: !16907)
!16913 = !DILocation(line: 137, column: 2, scope: !16914, inlinedAt: !16907)
!16914 = distinct !DILexicalBlock(scope: !16915, file: !2918, line: 137, column: 2)
!16915 = distinct !DILexicalBlock(scope: !16901, file: !2918, line: 137, column: 2)
!16916 = !DILocation(line: 137, column: 2, scope: !16915, inlinedAt: !16907)
!16917 = !DILocation(line: 137, column: 2, scope: !16918, inlinedAt: !16907)
!16918 = distinct !DILexicalBlock(scope: !16914, file: !2918, line: 137, column: 2)
!16919 = !DILocation(line: 140, column: 6, scope: !16920, inlinedAt: !16907)
!16920 = distinct !DILexicalBlock(scope: !16901, file: !2918, line: 140, column: 6)
!16921 = !DILocation(line: 140, column: 6, scope: !16901, inlinedAt: !16907)
!16922 = !DILocation(line: 150, column: 9, scope: !16923, inlinedAt: !16907)
!16923 = distinct !DILexicalBlock(scope: !16901, file: !2918, line: 149, column: 6)
!16924 = !DILocation(line: 149, column: 6, scope: !16901, inlinedAt: !16907)
!16925 = !DILocation(line: 157, column: 6, scope: !16926, inlinedAt: !16907)
!16926 = distinct !DILexicalBlock(scope: !16901, file: !2918, line: 157, column: 6)
!16927 = !DILocation(line: 564, column: 6, scope: !16883)
!16928 = !DILocation(line: 566, column: 14, scope: !16929)
!16929 = distinct !DILexicalBlock(scope: !16930, file: !2918, line: 566, column: 7)
!16930 = distinct !DILexicalBlock(scope: !16908, file: !2918, line: 564, column: 42)
!16931 = !DILocation(line: 566, column: 7, scope: !16930)
!16932 = !DILocation(line: 567, column: 4, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16929, file: !2918, line: 566, column: 27)
!16934 = !DILocation(line: 568, column: 3, scope: !16933)
!16935 = !DILocation(line: 585, column: 1, scope: !16883)
!16936 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2918, file: !2918, line: 1144, type: !16937, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16939)
!16937 = !DISubroutineType(types: !16938)
!16938 = !{!2811, !16767}
!16939 = !{!16940, !16941, !16942}
!16940 = !DILocalVariable(name: "pq", arg: 1, scope: !16936, file: !2918, line: 1144, type: !16767)
!16941 = !DILocalVariable(name: "thread", scope: !16936, file: !2918, line: 1146, type: !2811)
!16942 = !DILocalVariable(name: "n", scope: !16936, file: !2918, line: 1147, type: !2914)
!16943 = !DILocation(line: 0, scope: !16936)
!16944 = !DILocation(line: 1147, column: 19, scope: !16936)
!16945 = !DILocation(line: 1152, column: 2, scope: !16936)
!16946 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !14864, file: !14864, line: 115, type: !16682, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16947)
!16947 = !{!16948}
!16948 = !DILocalVariable(name: "thread", arg: 1, scope: !16946, file: !14864, line: 115, type: !2811)
!16949 = !DILocation(line: 0, scope: !16946)
!16950 = !DILocation(line: 117, column: 46, scope: !16946)
!16951 = !DILocation(line: 117, column: 10, scope: !16946)
!16952 = !DILocation(line: 117, column: 9, scope: !16946)
!16953 = !DILocation(line: 117, column: 2, scope: !16946)
!16954 = distinct !DISubprogram(name: "is_preempt", scope: !2918, file: !2918, line: 62, type: !16517, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16955)
!16955 = !{!16956}
!16956 = !DILocalVariable(name: "thread", arg: 1, scope: !16954, file: !2918, line: 62, type: !2811)
!16957 = !DILocation(line: 0, scope: !16954)
!16958 = !DILocation(line: 65, column: 22, scope: !16954)
!16959 = !DILocation(line: 65, column: 30, scope: !16954)
!16960 = !DILocation(line: 65, column: 2, scope: !16954)
!16961 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15271, file: !15271, line: 35, type: !16962, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16966)
!16962 = !DISubroutineType(types: !16963)
!16963 = !{!122, !16964}
!16964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16965, size: 32)
!16965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2862)
!16966 = !{!16967}
!16967 = !DILocalVariable(name: "to", arg: 1, scope: !16961, file: !15271, line: 35, type: !16964)
!16968 = !DILocation(line: 0, scope: !16961)
!16969 = !DILocation(line: 37, column: 35, scope: !16961)
!16970 = !DILocation(line: 37, column: 10, scope: !16961)
!16971 = !DILocation(line: 37, column: 9, scope: !16961)
!16972 = !DILocation(line: 37, column: 2, scope: !16961)
!16973 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !136, file: !136, line: 225, type: !16974, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16978)
!16974 = !DISubroutineType(types: !16975)
!16975 = !{!122, !16976}
!16976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16977, size: 32)
!16977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2821)
!16978 = !{!16979}
!16979 = !DILocalVariable(name: "node", arg: 1, scope: !16973, file: !136, line: 225, type: !16976)
!16980 = !DILocation(line: 0, scope: !16973)
!16981 = !DILocation(line: 227, column: 15, scope: !16973)
!16982 = !DILocation(line: 227, column: 20, scope: !16973)
!16983 = !DILocation(line: 227, column: 2, scope: !16973)
!16984 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !136, file: !136, line: 325, type: !16856, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16985)
!16985 = !{!16986, !16987}
!16986 = !DILocalVariable(name: "list", arg: 1, scope: !16984, file: !136, line: 325, type: !16767)
!16987 = !DILocalVariable(name: "node", arg: 2, scope: !16984, file: !136, line: 326, type: !2914)
!16988 = !DILocation(line: 0, scope: !16984)
!16989 = !DILocation(line: 328, column: 24, scope: !16984)
!16990 = !DILocation(line: 328, column: 15, scope: !16984)
!16991 = !DILocation(line: 328, column: 9, scope: !16984)
!16992 = !DILocation(line: 328, column: 45, scope: !16984)
!16993 = !DILocation(line: 328, column: 2, scope: !16984)
!16994 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !16995, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !16997)
!16995 = !DISubroutineType(types: !16996)
!16996 = !{!122, !16767}
!16997 = !{!16998}
!16998 = !DILocalVariable(name: "list", arg: 1, scope: !16994, file: !136, line: 266, type: !16767)
!16999 = !DILocation(line: 0, scope: !16994)
!17000 = !DILocation(line: 268, column: 15, scope: !16994)
!17001 = !DILocation(line: 268, column: 20, scope: !16994)
!17002 = !DILocation(line: 268, column: 2, scope: !16994)
!17003 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !136, file: !136, line: 496, type: !17004, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17006)
!17004 = !DISubroutineType(types: !17005)
!17005 = !{null, !2914}
!17006 = !{!17007, !17008, !17009}
!17007 = !DILocalVariable(name: "node", arg: 1, scope: !17003, file: !136, line: 496, type: !2914)
!17008 = !DILocalVariable(name: "prev", scope: !17003, file: !136, line: 498, type: !16844)
!17009 = !DILocalVariable(name: "next", scope: !17003, file: !136, line: 499, type: !16844)
!17010 = !DILocation(line: 0, scope: !17003)
!17011 = !DILocation(line: 498, column: 34, scope: !17003)
!17012 = !DILocation(line: 499, column: 34, scope: !17003)
!17013 = !DILocation(line: 501, column: 8, scope: !17003)
!17014 = !DILocation(line: 501, column: 13, scope: !17003)
!17015 = !DILocation(line: 502, column: 8, scope: !17003)
!17016 = !DILocation(line: 502, column: 13, scope: !17003)
!17017 = !DILocation(line: 503, column: 2, scope: !17003)
!17018 = !DILocation(line: 504, column: 1, scope: !17003)
!17019 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !17004, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17020)
!17020 = !{!17021}
!17021 = !DILocalVariable(name: "node", arg: 1, scope: !17019, file: !136, line: 211, type: !2914)
!17022 = !DILocation(line: 0, scope: !17019)
!17023 = !DILocation(line: 213, column: 8, scope: !17019)
!17024 = !DILocation(line: 213, column: 13, scope: !17019)
!17025 = !DILocation(line: 214, column: 8, scope: !17019)
!17026 = !DILocation(line: 214, column: 13, scope: !17019)
!17027 = !DILocation(line: 215, column: 1, scope: !17019)
!17028 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !14864, file: !14864, line: 131, type: !17029, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17031)
!17029 = !DISubroutineType(types: !17030)
!17030 = !{!122, !2811, !111}
!17031 = !{!17032, !17033}
!17032 = !DILocalVariable(name: "thread", arg: 1, scope: !17028, file: !14864, line: 131, type: !2811)
!17033 = !DILocalVariable(name: "state", arg: 2, scope: !17028, file: !14864, line: 131, type: !111)
!17034 = !DILocation(line: 0, scope: !17028)
!17035 = !DILocation(line: 133, column: 23, scope: !17028)
!17036 = !DILocation(line: 133, column: 10, scope: !17028)
!17037 = !DILocation(line: 133, column: 36, scope: !17028)
!17038 = !DILocation(line: 133, column: 45, scope: !17028)
!17039 = !DILocation(line: 133, column: 2, scope: !17028)
!17040 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !14864, file: !14864, line: 211, type: !16331, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17041)
!17041 = !{!17042, !17043}
!17042 = !DILocalVariable(name: "prio", arg: 1, scope: !17040, file: !14864, line: 211, type: !103)
!17043 = !DILocalVariable(name: "test_prio", arg: 2, scope: !17040, file: !14864, line: 211, type: !103)
!17044 = !DILocation(line: 0, scope: !17040)
!17045 = !DILocation(line: 213, column: 9, scope: !17040)
!17046 = !DILocation(line: 213, column: 2, scope: !17040)
!17047 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !14864, file: !14864, line: 206, type: !16331, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17048)
!17048 = !{!17049, !17050}
!17049 = !DILocalVariable(name: "prio1", arg: 1, scope: !17047, file: !14864, line: 206, type: !103)
!17050 = !DILocalVariable(name: "prio2", arg: 2, scope: !17047, file: !14864, line: 206, type: !103)
!17051 = !DILocation(line: 0, scope: !17047)
!17052 = !DILocation(line: 208, column: 15, scope: !17047)
!17053 = !DILocation(line: 208, column: 2, scope: !17047)
!17054 = distinct !DISubprogram(name: "z_ready_thread", scope: !2918, file: !2918, line: 635, type: !16499, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17055)
!17055 = !{!17056, !17057, !17059}
!17056 = !DILocalVariable(name: "thread", arg: 1, scope: !17054, file: !2918, line: 635, type: !2811)
!17057 = !DILocalVariable(name: "__i", scope: !17058, file: !2918, line: 637, type: !16533)
!17058 = distinct !DILexicalBlock(scope: !17054, file: !2918, line: 637, column: 2)
!17059 = !DILocalVariable(name: "__key", scope: !17058, file: !2918, line: 637, type: !16533)
!17060 = !DILocation(line: 0, scope: !17054)
!17061 = !DILocation(line: 0, scope: !17058)
!17062 = !DILocation(line: 0, scope: !16541, inlinedAt: !17063)
!17063 = distinct !DILocation(line: 637, column: 2, scope: !17058)
!17064 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17065)
!17065 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17063)
!17066 = !DILocation(line: 0, scope: !16550, inlinedAt: !17065)
!17067 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17063)
!17068 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17063)
!17069 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17063)
!17070 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17063)
!17071 = !DILocation(line: 639, column: 4, scope: !17072)
!17072 = distinct !DILexicalBlock(scope: !17073, file: !2918, line: 638, column: 41)
!17073 = distinct !DILexicalBlock(scope: !17074, file: !2918, line: 638, column: 7)
!17074 = distinct !DILexicalBlock(scope: !17075, file: !2918, line: 637, column: 26)
!17075 = distinct !DILexicalBlock(scope: !17058, file: !2918, line: 637, column: 2)
!17076 = !DILocation(line: 0, scope: !16575, inlinedAt: !17077)
!17077 = distinct !DILocation(line: 637, column: 2, scope: !17075)
!17078 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17077)
!17079 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17077)
!17080 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17077)
!17081 = !DILocation(line: 0, scope: !16589, inlinedAt: !17082)
!17082 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17077)
!17083 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17082)
!17084 = !DILocation(line: 642, column: 1, scope: !17054)
!17085 = distinct !DISubprogram(name: "ready_thread", scope: !2918, file: !2918, line: 617, type: !16499, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17086)
!17086 = !{!17087}
!17087 = !DILocalVariable(name: "thread", arg: 1, scope: !17085, file: !2918, line: 617, type: !2811)
!17088 = !DILocation(line: 0, scope: !17085)
!17089 = !DILocation(line: 626, column: 7, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !17085, file: !2918, line: 626, column: 6)
!17091 = !DILocation(line: 626, column: 34, scope: !17090)
!17092 = !DILocation(line: 626, column: 37, scope: !17090)
!17093 = !DILocation(line: 626, column: 6, scope: !17085)
!17094 = !DILocation(line: 0, scope: !16750, inlinedAt: !17095)
!17095 = distinct !DILocation(line: 629, column: 3, scope: !17096)
!17096 = distinct !DILexicalBlock(scope: !17090, file: !2918, line: 626, column: 64)
!17097 = !DILocation(line: 252, column: 15, scope: !16750, inlinedAt: !17095)
!17098 = !DILocation(line: 252, column: 28, scope: !16750, inlinedAt: !17095)
!17099 = !DILocation(line: 0, scope: !16757, inlinedAt: !17100)
!17100 = distinct !DILocation(line: 254, column: 3, scope: !16761, inlinedAt: !17095)
!17101 = !DILocation(line: 0, scope: !16764, inlinedAt: !17102)
!17102 = distinct !DILocation(line: 229, column: 2, scope: !16757, inlinedAt: !17100)
!17103 = !DILocation(line: 186, column: 2, scope: !16774, inlinedAt: !17102)
!17104 = !DILocation(line: 186, column: 2, scope: !16775, inlinedAt: !17102)
!17105 = !DILocation(line: 186, column: 2, scope: !16778, inlinedAt: !17102)
!17106 = !DILocation(line: 188, column: 2, scope: !16780, inlinedAt: !17102)
!17107 = !DILocation(line: 188, column: 2, scope: !16782, inlinedAt: !17102)
!17108 = !DILocation(line: 0, scope: !16780, inlinedAt: !17102)
!17109 = !DILocation(line: 189, column: 7, scope: !16785, inlinedAt: !17102)
!17110 = !DILocation(line: 189, column: 35, scope: !16785, inlinedAt: !17102)
!17111 = !DILocation(line: 189, column: 7, scope: !16786, inlinedAt: !17102)
!17112 = !DILocation(line: 191, column: 21, scope: !16790, inlinedAt: !17102)
!17113 = !DILocation(line: 190, column: 4, scope: !16790, inlinedAt: !17102)
!17114 = !DILocation(line: 192, column: 4, scope: !16790, inlinedAt: !17102)
!17115 = distinct !{!17115, !17106, !17116}
!17116 = !DILocation(line: 194, column: 2, scope: !16780, inlinedAt: !17102)
!17117 = !DILocation(line: 196, column: 37, scope: !16764, inlinedAt: !17102)
!17118 = !DILocation(line: 196, column: 2, scope: !16764, inlinedAt: !17102)
!17119 = !DILocation(line: 197, column: 1, scope: !16764, inlinedAt: !17102)
!17120 = !DILocation(line: 630, column: 3, scope: !17096)
!17121 = !DILocation(line: 632, column: 2, scope: !17096)
!17122 = !DILocation(line: 633, column: 1, scope: !17085)
!17123 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !14864, file: !14864, line: 120, type: !16682, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17124)
!17124 = !{!17125}
!17125 = !DILocalVariable(name: "thread", arg: 1, scope: !17123, file: !14864, line: 120, type: !2811)
!17126 = !DILocation(line: 0, scope: !17123)
!17127 = !DILocation(line: 122, column: 12, scope: !17123)
!17128 = !DILocation(line: 122, column: 62, scope: !17123)
!17129 = !DILocation(line: 123, column: 4, scope: !17123)
!17130 = !DILocation(line: 122, column: 2, scope: !17123)
!17131 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2918, file: !2918, line: 644, type: !16499, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17132)
!17132 = !{!17133, !17134, !17136}
!17133 = !DILocalVariable(name: "thread", arg: 1, scope: !17131, file: !2918, line: 644, type: !2811)
!17134 = !DILocalVariable(name: "__i", scope: !17135, file: !2918, line: 646, type: !16533)
!17135 = distinct !DILexicalBlock(scope: !17131, file: !2918, line: 646, column: 2)
!17136 = !DILocalVariable(name: "__key", scope: !17135, file: !2918, line: 646, type: !16533)
!17137 = !DILocation(line: 0, scope: !17131)
!17138 = !DILocation(line: 0, scope: !17135)
!17139 = !DILocation(line: 0, scope: !16541, inlinedAt: !17140)
!17140 = distinct !DILocation(line: 646, column: 2, scope: !17135)
!17141 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17142)
!17142 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17140)
!17143 = !DILocation(line: 0, scope: !16550, inlinedAt: !17142)
!17144 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17140)
!17145 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17140)
!17146 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17140)
!17147 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17140)
!17148 = !DILocation(line: 647, column: 3, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17150, file: !2918, line: 646, column: 26)
!17150 = distinct !DILexicalBlock(scope: !17135, file: !2918, line: 646, column: 2)
!17151 = !DILocation(line: 0, scope: !16575, inlinedAt: !17152)
!17152 = distinct !DILocation(line: 646, column: 2, scope: !17150)
!17153 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17152)
!17154 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17152)
!17155 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17152)
!17156 = !DILocation(line: 0, scope: !16589, inlinedAt: !17157)
!17157 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17152)
!17158 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17157)
!17159 = !DILocation(line: 649, column: 1, scope: !17131)
!17160 = distinct !DISubprogram(name: "z_sched_start", scope: !2918, file: !2918, line: 651, type: !16499, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17161)
!17161 = !{!17162, !17163}
!17162 = !DILocalVariable(name: "thread", arg: 1, scope: !17160, file: !2918, line: 651, type: !2811)
!17163 = !DILocalVariable(name: "key", scope: !17160, file: !2918, line: 653, type: !16533)
!17164 = !DILocation(line: 0, scope: !17160)
!17165 = !DILocation(line: 0, scope: !16541, inlinedAt: !17166)
!17166 = distinct !DILocation(line: 653, column: 25, scope: !17160)
!17167 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17168)
!17168 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17166)
!17169 = !DILocation(line: 0, scope: !16550, inlinedAt: !17168)
!17170 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17166)
!17171 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17166)
!17172 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17166)
!17173 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17166)
!17174 = !DILocation(line: 655, column: 6, scope: !17175)
!17175 = distinct !DILexicalBlock(scope: !17160, file: !2918, line: 655, column: 6)
!17176 = !DILocation(line: 655, column: 6, scope: !17160)
!17177 = !DILocation(line: 0, scope: !16575, inlinedAt: !17178)
!17178 = distinct !DILocation(line: 656, column: 3, scope: !17179)
!17179 = distinct !DILexicalBlock(scope: !17175, file: !2918, line: 655, column: 36)
!17180 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17178)
!17181 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17178)
!17182 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17178)
!17183 = !DILocation(line: 0, scope: !16589, inlinedAt: !17184)
!17184 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17178)
!17185 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17184)
!17186 = !DILocation(line: 657, column: 3, scope: !17179)
!17187 = !DILocation(line: 660, column: 2, scope: !17160)
!17188 = !DILocation(line: 661, column: 2, scope: !17160)
!17189 = !DILocation(line: 662, column: 2, scope: !17160)
!17190 = !DILocation(line: 663, column: 1, scope: !17160)
!17191 = distinct !DISubprogram(name: "z_has_thread_started", scope: !14864, file: !14864, line: 126, type: !16682, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17192)
!17192 = !{!17193}
!17193 = !DILocalVariable(name: "thread", arg: 1, scope: !17191, file: !14864, line: 126, type: !2811)
!17194 = !DILocation(line: 0, scope: !17191)
!17195 = !DILocation(line: 128, column: 23, scope: !17191)
!17196 = !DILocation(line: 128, column: 36, scope: !17191)
!17197 = !DILocation(line: 128, column: 56, scope: !17191)
!17198 = !DILocation(line: 128, column: 2, scope: !17191)
!17199 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !14864, file: !14864, line: 155, type: !16499, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17200)
!17200 = !{!17201}
!17201 = !DILocalVariable(name: "thread", arg: 1, scope: !17199, file: !14864, line: 155, type: !2811)
!17202 = !DILocation(line: 0, scope: !17199)
!17203 = !DILocation(line: 157, column: 15, scope: !17199)
!17204 = !DILocation(line: 157, column: 28, scope: !17199)
!17205 = !DILocation(line: 158, column: 1, scope: !17199)
!17206 = distinct !DISubprogram(name: "z_reschedule", scope: !2918, file: !2918, line: 967, type: !16576, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17207)
!17207 = !{!17208, !17209}
!17208 = !DILocalVariable(name: "lock", arg: 1, scope: !17206, file: !2918, line: 967, type: !16544)
!17209 = !DILocalVariable(name: "key", arg: 2, scope: !17206, file: !2918, line: 967, type: !16533)
!17210 = !DILocation(line: 0, scope: !17206)
!17211 = !DILocation(line: 969, column: 6, scope: !17212)
!17212 = distinct !DILexicalBlock(scope: !17206, file: !2918, line: 969, column: 6)
!17213 = !DILocation(line: 969, column: 23, scope: !17212)
!17214 = !DILocation(line: 969, column: 26, scope: !17212)
!17215 = !DILocation(line: 969, column: 6, scope: !17206)
!17216 = !DILocalVariable(name: "key", arg: 2, scope: !17217, file: !14968, line: 193, type: !16533)
!17217 = distinct !DISubprogram(name: "z_swap", scope: !14968, file: !14968, line: 193, type: !17218, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17220)
!17218 = !DISubroutineType(types: !17219)
!17219 = !{!103, !16544, !16533}
!17220 = !{!17221, !17216}
!17221 = !DILocalVariable(name: "lock", arg: 1, scope: !17217, file: !14968, line: 193, type: !16544)
!17222 = !DILocation(line: 0, scope: !17217, inlinedAt: !17223)
!17223 = distinct !DILocation(line: 970, column: 3, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17212, file: !2918, line: 969, column: 39)
!17225 = !DILocalVariable(name: "l", arg: 1, scope: !17226, file: !152, line: 221, type: !16544)
!17226 = distinct !DISubprogram(name: "k_spin_release", scope: !152, file: !152, line: 221, type: !17227, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17229)
!17227 = !DISubroutineType(types: !17228)
!17228 = !{null, !16544}
!17229 = !{!17225}
!17230 = !DILocation(line: 0, scope: !17226, inlinedAt: !17231)
!17231 = distinct !DILocation(line: 195, column: 2, scope: !17217, inlinedAt: !17223)
!17232 = !DILocation(line: 225, column: 2, scope: !17233, inlinedAt: !17231)
!17233 = distinct !DILexicalBlock(scope: !17234, file: !152, line: 225, column: 2)
!17234 = distinct !DILexicalBlock(scope: !17226, file: !152, line: 225, column: 2)
!17235 = !DILocation(line: 225, column: 2, scope: !17234, inlinedAt: !17231)
!17236 = !DILocation(line: 225, column: 2, scope: !17237, inlinedAt: !17231)
!17237 = distinct !DILexicalBlock(scope: !17233, file: !152, line: 225, column: 2)
!17238 = !DILocation(line: 196, column: 9, scope: !17217, inlinedAt: !17223)
!17239 = !DILocation(line: 971, column: 2, scope: !17224)
!17240 = !DILocation(line: 0, scope: !16575, inlinedAt: !17241)
!17241 = distinct !DILocation(line: 972, column: 3, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17212, file: !2918, line: 971, column: 9)
!17243 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17241)
!17244 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17241)
!17245 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17241)
!17246 = !DILocation(line: 0, scope: !16589, inlinedAt: !17247)
!17247 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17241)
!17248 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17247)
!17249 = !DILocation(line: 975, column: 1, scope: !17206)
!17250 = distinct !DISubprogram(name: "resched", scope: !2918, file: !2918, line: 940, type: !17251, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17253)
!17251 = !DISubroutineType(types: !17252)
!17252 = !{!122, !111}
!17253 = !{!17254}
!17254 = !DILocalVariable(name: "key", arg: 1, scope: !17250, file: !2918, line: 940, type: !111)
!17255 = !DILocation(line: 0, scope: !17250)
!17256 = !DILocalVariable(name: "key", arg: 1, scope: !17257, file: !7496, line: 112, type: !32)
!17257 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !7496, file: !7496, line: 112, type: !17258, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17260)
!17258 = !DISubroutineType(types: !17259)
!17259 = !{!122, !32}
!17260 = !{!17256}
!17261 = !DILocation(line: 0, scope: !17257, inlinedAt: !17262)
!17262 = distinct !DILocation(line: 946, column: 9, scope: !17250)
!17263 = !DILocation(line: 115, column: 13, scope: !17257, inlinedAt: !17262)
!17264 = !DILocation(line: 946, column: 32, scope: !17250)
!17265 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !17269)
!17266 = distinct !DISubprogram(name: "__get_IPSR", scope: !7834, file: !7834, line: 1027, type: !8837, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17267)
!17267 = !{!17268}
!17268 = !DILocalVariable(name: "result", scope: !17266, file: !7834, line: 1029, type: !111)
!17269 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !17271)
!17270 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8843, file: !8843, line: 46, type: !8844, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!17271 = distinct !DILocation(line: 946, column: 36, scope: !17250)
!17272 = !{i64 2490450}
!17273 = !DILocation(line: 0, scope: !17266, inlinedAt: !17269)
!17274 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !17271)
!17275 = !DILocation(line: 946, column: 2, scope: !17250)
!17276 = distinct !DISubprogram(name: "need_swap", scope: !2918, file: !2918, line: 953, type: !8844, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17277)
!17277 = !{!17278}
!17278 = !DILocalVariable(name: "new_thread", scope: !17276, file: !2918, line: 959, type: !2811)
!17279 = !DILocation(line: 962, column: 31, scope: !17276)
!17280 = !DILocation(line: 0, scope: !17276)
!17281 = !DILocation(line: 963, column: 23, scope: !17276)
!17282 = !DILocation(line: 963, column: 20, scope: !17276)
!17283 = !DILocation(line: 963, column: 2, scope: !17276)
!17284 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !14968, file: !14968, line: 181, type: !7844, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17285)
!17285 = !{!17286, !17287}
!17286 = !DILocalVariable(name: "key", arg: 1, scope: !17284, file: !14968, line: 181, type: !32)
!17287 = !DILocalVariable(name: "ret", scope: !17284, file: !14968, line: 183, type: !103)
!17288 = !DILocation(line: 0, scope: !17284)
!17289 = !DILocation(line: 185, column: 8, scope: !17284)
!17290 = !DILocation(line: 186, column: 2, scope: !17284)
!17291 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2918, file: !2918, line: 665, type: !16499, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17292)
!17292 = !{!17293, !17294, !17296}
!17293 = !DILocalVariable(name: "thread", arg: 1, scope: !17291, file: !2918, line: 665, type: !2811)
!17294 = !DILocalVariable(name: "__i", scope: !17295, file: !2918, line: 671, type: !16533)
!17295 = distinct !DILexicalBlock(scope: !17291, file: !2918, line: 671, column: 2)
!17296 = !DILocalVariable(name: "__key", scope: !17295, file: !2918, line: 671, type: !16533)
!17297 = !DILocation(line: 0, scope: !17291)
!17298 = !DILocation(line: 669, column: 8, scope: !17291)
!17299 = !DILocation(line: 0, scope: !17295)
!17300 = !DILocation(line: 0, scope: !16541, inlinedAt: !17301)
!17301 = distinct !DILocation(line: 671, column: 2, scope: !17295)
!17302 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17303)
!17303 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17301)
!17304 = !DILocation(line: 0, scope: !16550, inlinedAt: !17303)
!17305 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17301)
!17306 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17301)
!17307 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17301)
!17308 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17301)
!17309 = !DILocation(line: 672, column: 7, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17311, file: !2918, line: 672, column: 7)
!17311 = distinct !DILexicalBlock(scope: !17312, file: !2918, line: 671, column: 26)
!17312 = distinct !DILexicalBlock(scope: !17295, file: !2918, line: 671, column: 2)
!17313 = !DILocation(line: 672, column: 7, scope: !17311)
!17314 = !DILocation(line: 0, scope: !16733, inlinedAt: !17315)
!17315 = distinct !DILocation(line: 673, column: 4, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17310, file: !2918, line: 672, column: 35)
!17317 = !DILocation(line: 266, column: 15, scope: !16733, inlinedAt: !17315)
!17318 = !DILocation(line: 266, column: 28, scope: !16733, inlinedAt: !17315)
!17319 = !DILocation(line: 0, scope: !16741, inlinedAt: !17320)
!17320 = distinct !DILocation(line: 268, column: 3, scope: !16745, inlinedAt: !17315)
!17321 = !DILocation(line: 234, column: 2, scope: !16741, inlinedAt: !17320)
!17322 = !DILocation(line: 674, column: 3, scope: !17316)
!17323 = !DILocation(line: 675, column: 3, scope: !17311)
!17324 = !DILocation(line: 676, column: 26, scope: !17311)
!17325 = !DILocation(line: 676, column: 23, scope: !17311)
!17326 = !DILocation(line: 676, column: 3, scope: !17311)
!17327 = !DILocation(line: 0, scope: !16575, inlinedAt: !17328)
!17328 = distinct !DILocation(line: 671, column: 2, scope: !17312)
!17329 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17328)
!17330 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17328)
!17331 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17328)
!17332 = !DILocation(line: 0, scope: !16589, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17328)
!17334 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17333)
!17335 = !DILocation(line: 679, column: 16, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17291, file: !2918, line: 679, column: 6)
!17337 = !DILocation(line: 679, column: 13, scope: !17336)
!17338 = !DILocation(line: 679, column: 6, scope: !17291)
!17339 = !DILocation(line: 680, column: 3, scope: !17340)
!17340 = distinct !DILexicalBlock(scope: !17336, file: !2918, line: 679, column: 26)
!17341 = !DILocation(line: 681, column: 2, scope: !17340)
!17342 = !DILocation(line: 684, column: 1, scope: !17291)
!17343 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15271, file: !15271, line: 52, type: !16517, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17344)
!17344 = !{!17345}
!17345 = !DILocalVariable(name: "thread", arg: 1, scope: !17343, file: !15271, line: 52, type: !2811)
!17346 = !DILocation(line: 0, scope: !17343)
!17347 = !DILocation(line: 54, column: 39, scope: !17343)
!17348 = !DILocation(line: 54, column: 9, scope: !17343)
!17349 = !DILocation(line: 54, column: 2, scope: !17343)
!17350 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !14864, file: !14864, line: 141, type: !16499, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17351)
!17351 = !{!17352}
!17352 = !DILocalVariable(name: "thread", arg: 1, scope: !17350, file: !14864, line: 141, type: !2811)
!17353 = !DILocation(line: 0, scope: !17350)
!17354 = !DILocation(line: 143, column: 15, scope: !17350)
!17355 = !DILocation(line: 143, column: 28, scope: !17350)
!17356 = !DILocation(line: 146, column: 1, scope: !17350)
!17357 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !14864, file: !14864, line: 73, type: !323, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!17358 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17359)
!17359 = distinct !DILocation(line: 75, column: 30, scope: !17357)
!17360 = !DILocation(line: 0, scope: !16550, inlinedAt: !17359)
!17361 = !DILocation(line: 75, column: 9, scope: !17357)
!17362 = !DILocation(line: 76, column: 1, scope: !17357)
!17363 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2918, file: !2918, line: 977, type: !7520, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17364)
!17364 = !{!17365}
!17365 = !DILocalVariable(name: "key", arg: 1, scope: !17363, file: !2918, line: 977, type: !111)
!17366 = !DILocation(line: 0, scope: !17363)
!17367 = !DILocation(line: 979, column: 6, scope: !17368)
!17368 = distinct !DILexicalBlock(scope: !17363, file: !2918, line: 979, column: 6)
!17369 = !DILocation(line: 979, column: 6, scope: !17363)
!17370 = !DILocation(line: 980, column: 3, scope: !17371)
!17371 = distinct !DILexicalBlock(scope: !17368, file: !2918, line: 979, column: 20)
!17372 = !DILocation(line: 981, column: 2, scope: !17371)
!17373 = !DILocation(line: 0, scope: !16589, inlinedAt: !17374)
!17374 = distinct !DILocation(line: 982, column: 3, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17368, file: !2918, line: 981, column: 9)
!17376 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17374)
!17377 = !DILocation(line: 985, column: 1, scope: !17363)
!17378 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2918, file: !2918, line: 695, type: !16499, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17379)
!17379 = !{!17380, !17381}
!17380 = !DILocalVariable(name: "thread", arg: 1, scope: !17378, file: !2918, line: 695, type: !2811)
!17381 = !DILocalVariable(name: "key", scope: !17378, file: !2918, line: 699, type: !16533)
!17382 = !DILocation(line: 0, scope: !17378)
!17383 = !DILocation(line: 0, scope: !16541, inlinedAt: !17384)
!17384 = distinct !DILocation(line: 699, column: 25, scope: !17378)
!17385 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17386)
!17386 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17384)
!17387 = !DILocation(line: 0, scope: !16550, inlinedAt: !17386)
!17388 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17384)
!17389 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17384)
!17390 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17384)
!17391 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17384)
!17392 = !DILocation(line: 702, column: 7, scope: !17393)
!17393 = distinct !DILexicalBlock(scope: !17378, file: !2918, line: 702, column: 6)
!17394 = !DILocation(line: 702, column: 6, scope: !17378)
!17395 = !DILocation(line: 0, scope: !16575, inlinedAt: !17396)
!17396 = distinct !DILocation(line: 703, column: 3, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17393, file: !2918, line: 702, column: 38)
!17398 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17396)
!17399 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17396)
!17400 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17396)
!17401 = !DILocation(line: 0, scope: !16589, inlinedAt: !17402)
!17402 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17396)
!17403 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17402)
!17404 = !DILocation(line: 704, column: 3, scope: !17397)
!17405 = !DILocation(line: 707, column: 2, scope: !17378)
!17406 = !DILocation(line: 708, column: 2, scope: !17378)
!17407 = !DILocation(line: 710, column: 2, scope: !17378)
!17408 = !DILocation(line: 713, column: 1, scope: !17378)
!17409 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !14864, file: !14864, line: 96, type: !16682, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17410)
!17410 = !{!17411}
!17411 = !DILocalVariable(name: "thread", arg: 1, scope: !17409, file: !14864, line: 96, type: !2811)
!17412 = !DILocation(line: 0, scope: !17409)
!17413 = !DILocation(line: 98, column: 23, scope: !17409)
!17414 = !DILocation(line: 98, column: 36, scope: !17409)
!17415 = !DILocation(line: 98, column: 57, scope: !17409)
!17416 = !DILocation(line: 98, column: 2, scope: !17409)
!17417 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !14864, file: !14864, line: 148, type: !16499, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17418)
!17418 = !{!17419}
!17419 = !DILocalVariable(name: "thread", arg: 1, scope: !17417, file: !14864, line: 148, type: !2811)
!17420 = !DILocation(line: 0, scope: !17417)
!17421 = !DILocation(line: 150, column: 15, scope: !17417)
!17422 = !DILocation(line: 150, column: 28, scope: !17417)
!17423 = !DILocation(line: 153, column: 1, scope: !17417)
!17424 = distinct !DISubprogram(name: "z_pend_thread", scope: !2918, file: !2918, line: 770, type: !17425, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17431)
!17425 = !DISubroutineType(types: !17426)
!17426 = !{null, !2811, !2842, !17427}
!17427 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !17428)
!17428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !17429)
!17429 = !{!17430}
!17430 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17428, file: !105, line: 66, baseType: !104, size: 64)
!17431 = !{!17432, !17433, !17434, !17435, !17437}
!17432 = !DILocalVariable(name: "thread", arg: 1, scope: !17424, file: !2918, line: 770, type: !2811)
!17433 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17424, file: !2918, line: 770, type: !2842)
!17434 = !DILocalVariable(name: "timeout", arg: 3, scope: !17424, file: !2918, line: 771, type: !17427)
!17435 = !DILocalVariable(name: "__i", scope: !17436, file: !2918, line: 774, type: !16533)
!17436 = distinct !DILexicalBlock(scope: !17424, file: !2918, line: 774, column: 2)
!17437 = !DILocalVariable(name: "__key", scope: !17436, file: !2918, line: 774, type: !16533)
!17438 = !DILocation(line: 0, scope: !17424)
!17439 = !DILocation(line: 773, column: 2, scope: !17440)
!17440 = distinct !DILexicalBlock(scope: !17441, file: !2918, line: 773, column: 2)
!17441 = distinct !DILexicalBlock(scope: !17424, file: !2918, line: 773, column: 2)
!17442 = !DILocation(line: 773, column: 2, scope: !17441)
!17443 = !DILocation(line: 773, column: 2, scope: !17444)
!17444 = distinct !DILexicalBlock(scope: !17440, file: !2918, line: 773, column: 2)
!17445 = !DILocation(line: 0, scope: !17436)
!17446 = !DILocation(line: 0, scope: !16541, inlinedAt: !17447)
!17447 = distinct !DILocation(line: 774, column: 2, scope: !17436)
!17448 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17449)
!17449 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17447)
!17450 = !DILocation(line: 0, scope: !16550, inlinedAt: !17449)
!17451 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17447)
!17452 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17447)
!17453 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17447)
!17454 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17447)
!17455 = !DILocation(line: 775, column: 3, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17457, file: !2918, line: 774, column: 26)
!17457 = distinct !DILexicalBlock(scope: !17436, file: !2918, line: 774, column: 2)
!17458 = !DILocation(line: 0, scope: !16575, inlinedAt: !17459)
!17459 = distinct !DILocation(line: 774, column: 2, scope: !17457)
!17460 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17459)
!17461 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17459)
!17462 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17459)
!17463 = !DILocation(line: 0, scope: !16589, inlinedAt: !17464)
!17464 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17459)
!17465 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17464)
!17466 = !DILocation(line: 777, column: 1, scope: !17424)
!17467 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2918, file: !2918, line: 79, type: !16682, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17468)
!17468 = !{!17469}
!17469 = !DILocalVariable(name: "thread", arg: 1, scope: !17467, file: !2918, line: 79, type: !2811)
!17470 = !DILocation(line: 0, scope: !17467)
!17471 = !DILocation(line: 81, column: 23, scope: !17467)
!17472 = !DILocation(line: 81, column: 36, scope: !17467)
!17473 = !DILocation(line: 81, column: 53, scope: !17467)
!17474 = !DILocation(line: 81, column: 2, scope: !17467)
!17475 = distinct !DISubprogram(name: "pend_locked", scope: !2918, file: !2918, line: 760, type: !17425, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17476)
!17476 = !{!17477, !17478, !17479}
!17477 = !DILocalVariable(name: "thread", arg: 1, scope: !17475, file: !2918, line: 760, type: !2811)
!17478 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17475, file: !2918, line: 760, type: !2842)
!17479 = !DILocalVariable(name: "timeout", arg: 3, scope: !17475, file: !2918, line: 761, type: !17427)
!17480 = !DILocation(line: 0, scope: !17475)
!17481 = !DILocation(line: 766, column: 2, scope: !17475)
!17482 = !DILocation(line: 767, column: 2, scope: !17475)
!17483 = !DILocation(line: 768, column: 1, scope: !17475)
!17484 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2918, file: !2918, line: 740, type: !17485, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17487)
!17485 = !DISubroutineType(types: !17486)
!17486 = !{null, !2811, !2842}
!17487 = !{!17488, !17489}
!17488 = !DILocalVariable(name: "thread", arg: 1, scope: !17484, file: !2918, line: 740, type: !2811)
!17489 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17484, file: !2918, line: 740, type: !2842)
!17490 = !DILocation(line: 0, scope: !17484)
!17491 = !DILocation(line: 742, column: 2, scope: !17484)
!17492 = !DILocation(line: 743, column: 2, scope: !17484)
!17493 = !DILocation(line: 747, column: 13, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17484, file: !2918, line: 747, column: 6)
!17495 = !DILocation(line: 747, column: 6, scope: !17484)
!17496 = !DILocation(line: 748, column: 16, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17494, file: !2918, line: 747, column: 22)
!17498 = !DILocation(line: 748, column: 26, scope: !17497)
!17499 = !DILocation(line: 749, column: 28, scope: !17497)
!17500 = !DILocation(line: 0, scope: !16764, inlinedAt: !17501)
!17501 = distinct !DILocation(line: 749, column: 3, scope: !17497)
!17502 = !DILocation(line: 186, column: 2, scope: !16774, inlinedAt: !17501)
!17503 = !DILocation(line: 186, column: 2, scope: !16775, inlinedAt: !17501)
!17504 = !DILocation(line: 186, column: 2, scope: !16778, inlinedAt: !17501)
!17505 = !DILocation(line: 188, column: 2, scope: !16780, inlinedAt: !17501)
!17506 = !DILocation(line: 188, column: 2, scope: !16782, inlinedAt: !17501)
!17507 = !DILocation(line: 0, scope: !16780, inlinedAt: !17501)
!17508 = !DILocation(line: 189, column: 7, scope: !16785, inlinedAt: !17501)
!17509 = !DILocation(line: 189, column: 35, scope: !16785, inlinedAt: !17501)
!17510 = !DILocation(line: 189, column: 7, scope: !16786, inlinedAt: !17501)
!17511 = !DILocation(line: 191, column: 21, scope: !16790, inlinedAt: !17501)
!17512 = !DILocation(line: 190, column: 4, scope: !16790, inlinedAt: !17501)
!17513 = !DILocation(line: 192, column: 4, scope: !16790, inlinedAt: !17501)
!17514 = distinct !{!17514, !17505, !17515}
!17515 = !DILocation(line: 194, column: 2, scope: !16780, inlinedAt: !17501)
!17516 = !DILocation(line: 196, column: 37, scope: !16764, inlinedAt: !17501)
!17517 = !DILocation(line: 196, column: 2, scope: !16764, inlinedAt: !17501)
!17518 = !DILocation(line: 197, column: 1, scope: !16764, inlinedAt: !17501)
!17519 = !DILocation(line: 751, column: 1, scope: !17484)
!17520 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2918, file: !2918, line: 753, type: !17521, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17523)
!17521 = !DISubroutineType(types: !17522)
!17522 = !{null, !2811, !17427}
!17523 = !{!17524, !17525}
!17524 = !DILocalVariable(name: "thread", arg: 1, scope: !17520, file: !2918, line: 753, type: !2811)
!17525 = !DILocalVariable(name: "timeout", arg: 2, scope: !17520, file: !2918, line: 753, type: !17427)
!17526 = !DILocation(line: 0, scope: !17520)
!17527 = !DILocation(line: 755, column: 7, scope: !17528)
!17528 = distinct !DILexicalBlock(scope: !17520, file: !2918, line: 755, column: 6)
!17529 = !DILocation(line: 755, column: 6, scope: !17520)
!17530 = !DILocation(line: 756, column: 3, scope: !17531)
!17531 = distinct !DILexicalBlock(scope: !17528, file: !2918, line: 755, column: 41)
!17532 = !DILocation(line: 757, column: 2, scope: !17531)
!17533 = !DILocation(line: 758, column: 1, scope: !17520)
!17534 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15271, file: !15271, line: 47, type: !17521, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17535)
!17535 = !{!17536, !17537}
!17536 = !DILocalVariable(name: "thread", arg: 1, scope: !17534, file: !15271, line: 47, type: !2811)
!17537 = !DILocalVariable(name: "ticks", arg: 2, scope: !17534, file: !15271, line: 47, type: !17427)
!17538 = !DILocation(line: 0, scope: !17534)
!17539 = !DILocation(line: 49, column: 30, scope: !17534)
!17540 = !DILocation(line: 49, column: 2, scope: !17534)
!17541 = !DILocation(line: 50, column: 1, scope: !17534)
!17542 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2918, file: !2918, line: 795, type: !2868, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17543)
!17543 = !{!17544, !17545, !17546, !17548, !17549}
!17544 = !DILocalVariable(name: "timeout", arg: 1, scope: !17542, file: !2918, line: 795, type: !2870)
!17545 = !DILocalVariable(name: "thread", scope: !17542, file: !2918, line: 797, type: !2811)
!17546 = !DILocalVariable(name: "__i", scope: !17547, file: !2918, line: 800, type: !16533)
!17547 = distinct !DILexicalBlock(scope: !17542, file: !2918, line: 800, column: 2)
!17548 = !DILocalVariable(name: "__key", scope: !17547, file: !2918, line: 800, type: !16533)
!17549 = !DILocalVariable(name: "killed", scope: !17550, file: !2918, line: 801, type: !122)
!17550 = distinct !DILexicalBlock(scope: !17551, file: !2918, line: 800, column: 26)
!17551 = distinct !DILexicalBlock(scope: !17547, file: !2918, line: 800, column: 2)
!17552 = !DILocation(line: 0, scope: !17542)
!17553 = !DILocation(line: 797, column: 28, scope: !17542)
!17554 = !DILocation(line: 0, scope: !17547)
!17555 = !DILocation(line: 0, scope: !16541, inlinedAt: !17556)
!17556 = distinct !DILocation(line: 800, column: 2, scope: !17547)
!17557 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17558)
!17558 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17556)
!17559 = !DILocation(line: 0, scope: !16550, inlinedAt: !17558)
!17560 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17556)
!17561 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17556)
!17562 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17556)
!17563 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17556)
!17564 = !DILocation(line: 801, column: 27, scope: !17550)
!17565 = !DILocation(line: 801, column: 32, scope: !17550)
!17566 = !DILocation(line: 801, column: 61, scope: !17550)
!17567 = !DILocation(line: 0, scope: !17550)
!17568 = !DILocation(line: 804, column: 7, scope: !17550)
!17569 = !DILocation(line: 805, column: 21, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17571, file: !2918, line: 805, column: 8)
!17571 = distinct !DILexicalBlock(scope: !17572, file: !2918, line: 804, column: 16)
!17572 = distinct !DILexicalBlock(scope: !17550, file: !2918, line: 804, column: 7)
!17573 = !DILocation(line: 805, column: 31, scope: !17570)
!17574 = !DILocation(line: 805, column: 8, scope: !17571)
!17575 = !DILocation(line: 806, column: 5, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17570, file: !2918, line: 805, column: 40)
!17577 = !DILocation(line: 807, column: 4, scope: !17576)
!17578 = !DILocation(line: 808, column: 4, scope: !17571)
!17579 = !DILocation(line: 809, column: 4, scope: !17571)
!17580 = !DILocation(line: 810, column: 4, scope: !17571)
!17581 = !DILocation(line: 811, column: 3, scope: !17571)
!17582 = !DILocation(line: 0, scope: !16575, inlinedAt: !17583)
!17583 = distinct !DILocation(line: 800, column: 2, scope: !17551)
!17584 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17583)
!17585 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17583)
!17586 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17583)
!17587 = !DILocation(line: 0, scope: !16589, inlinedAt: !17588)
!17588 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17583)
!17589 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17588)
!17590 = !DILocation(line: 813, column: 1, scope: !17542)
!17591 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2918, file: !2918, line: 779, type: !16499, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17592)
!17592 = !{!17593}
!17593 = !DILocalVariable(name: "thread", arg: 1, scope: !17591, file: !2918, line: 779, type: !2811)
!17594 = !DILocation(line: 0, scope: !17591)
!17595 = !DILocation(line: 781, column: 21, scope: !17591)
!17596 = !DILocation(line: 781, column: 2, scope: !17591)
!17597 = !DILocation(line: 782, column: 2, scope: !17591)
!17598 = !DILocation(line: 783, column: 15, scope: !17591)
!17599 = !DILocation(line: 783, column: 25, scope: !17591)
!17600 = !DILocation(line: 784, column: 1, scope: !17591)
!17601 = distinct !DISubprogram(name: "pended_on_thread", scope: !2918, file: !2918, line: 724, type: !17602, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17604)
!17602 = !DISubroutineType(types: !17603)
!17603 = !{!2842, !2811}
!17604 = !{!17605}
!17605 = !DILocalVariable(name: "thread", arg: 1, scope: !17601, file: !2918, line: 724, type: !2811)
!17606 = !DILocation(line: 0, scope: !17601)
!17607 = !DILocation(line: 726, column: 2, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17609, file: !2918, line: 726, column: 2)
!17609 = distinct !DILexicalBlock(scope: !17601, file: !2918, line: 726, column: 2)
!17610 = !DILocation(line: 726, column: 2, scope: !17609)
!17611 = !DILocation(line: 726, column: 2, scope: !17612)
!17612 = distinct !DILexicalBlock(scope: !17608, file: !2918, line: 726, column: 2)
!17613 = !DILocation(line: 728, column: 2, scope: !17601)
!17614 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !14864, file: !14864, line: 165, type: !16499, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17615)
!17615 = !{!17616}
!17616 = !DILocalVariable(name: "thread", arg: 1, scope: !17614, file: !14864, line: 165, type: !2811)
!17617 = !DILocation(line: 0, scope: !17614)
!17618 = !DILocation(line: 167, column: 15, scope: !17614)
!17619 = !DILocation(line: 167, column: 28, scope: !17614)
!17620 = !DILocation(line: 168, column: 1, scope: !17614)
!17621 = distinct !DISubprogram(name: "unready_thread", scope: !2918, file: !2918, line: 731, type: !16499, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17622)
!17622 = !{!17623}
!17623 = !DILocalVariable(name: "thread", arg: 1, scope: !17621, file: !2918, line: 731, type: !2811)
!17624 = !DILocation(line: 0, scope: !17621)
!17625 = !DILocation(line: 733, column: 6, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !17621, file: !2918, line: 733, column: 6)
!17627 = !DILocation(line: 733, column: 6, scope: !17621)
!17628 = !DILocation(line: 0, scope: !16733, inlinedAt: !17629)
!17629 = distinct !DILocation(line: 734, column: 3, scope: !17630)
!17630 = distinct !DILexicalBlock(scope: !17626, file: !2918, line: 733, column: 34)
!17631 = !DILocation(line: 266, column: 15, scope: !16733, inlinedAt: !17629)
!17632 = !DILocation(line: 266, column: 28, scope: !16733, inlinedAt: !17629)
!17633 = !DILocation(line: 0, scope: !16741, inlinedAt: !17634)
!17634 = distinct !DILocation(line: 268, column: 3, scope: !16745, inlinedAt: !17629)
!17635 = !DILocation(line: 234, column: 2, scope: !16741, inlinedAt: !17634)
!17636 = !DILocation(line: 735, column: 2, scope: !17630)
!17637 = !DILocation(line: 736, column: 25, scope: !17621)
!17638 = !DILocation(line: 736, column: 22, scope: !17621)
!17639 = !DILocation(line: 736, column: 2, scope: !17621)
!17640 = !DILocation(line: 737, column: 1, scope: !17621)
!17641 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !14864, file: !14864, line: 160, type: !16499, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17642)
!17642 = !{!17643}
!17643 = !DILocalVariable(name: "thread", arg: 1, scope: !17641, file: !14864, line: 160, type: !2811)
!17644 = !DILocation(line: 0, scope: !17641)
!17645 = !DILocation(line: 162, column: 15, scope: !17641)
!17646 = !DILocation(line: 162, column: 28, scope: !17641)
!17647 = !DILocation(line: 163, column: 1, scope: !17641)
!17648 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2918, file: !2918, line: 786, type: !16499, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17649)
!17649 = !{!17650, !17651, !17653}
!17650 = !DILocalVariable(name: "thread", arg: 1, scope: !17648, file: !2918, line: 786, type: !2811)
!17651 = !DILocalVariable(name: "__i", scope: !17652, file: !2918, line: 788, type: !16533)
!17652 = distinct !DILexicalBlock(scope: !17648, file: !2918, line: 788, column: 2)
!17653 = !DILocalVariable(name: "__key", scope: !17652, file: !2918, line: 788, type: !16533)
!17654 = !DILocation(line: 0, scope: !17648)
!17655 = !DILocation(line: 0, scope: !17652)
!17656 = !DILocation(line: 0, scope: !16541, inlinedAt: !17657)
!17657 = distinct !DILocation(line: 788, column: 2, scope: !17652)
!17658 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17659)
!17659 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17657)
!17660 = !DILocation(line: 0, scope: !16550, inlinedAt: !17659)
!17661 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17657)
!17662 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17657)
!17663 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17657)
!17664 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17657)
!17665 = !DILocation(line: 789, column: 3, scope: !17666)
!17666 = distinct !DILexicalBlock(scope: !17667, file: !2918, line: 788, column: 26)
!17667 = distinct !DILexicalBlock(scope: !17652, file: !2918, line: 788, column: 2)
!17668 = !DILocation(line: 0, scope: !16575, inlinedAt: !17669)
!17669 = distinct !DILocation(line: 788, column: 2, scope: !17667)
!17670 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17669)
!17671 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17669)
!17672 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17669)
!17673 = !DILocation(line: 0, scope: !16589, inlinedAt: !17674)
!17674 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17669)
!17675 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17674)
!17676 = !DILocation(line: 791, column: 1, scope: !17648)
!17677 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2918, file: !2918, line: 816, type: !17678, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17680)
!17678 = !DISubroutineType(types: !17679)
!17679 = !{!103, !111, !2842, !17427}
!17680 = !{!17681, !17682, !17683, !17684, !17685, !17687}
!17681 = !DILocalVariable(name: "key", arg: 1, scope: !17677, file: !2918, line: 816, type: !111)
!17682 = !DILocalVariable(name: "wait_q", arg: 2, scope: !17677, file: !2918, line: 816, type: !2842)
!17683 = !DILocalVariable(name: "timeout", arg: 3, scope: !17677, file: !2918, line: 816, type: !17427)
!17684 = !DILocalVariable(name: "ret", scope: !17677, file: !2918, line: 828, type: !103)
!17685 = !DILocalVariable(name: "__i", scope: !17686, file: !2918, line: 829, type: !16533)
!17686 = distinct !DILexicalBlock(scope: !17677, file: !2918, line: 829, column: 2)
!17687 = !DILocalVariable(name: "__key", scope: !17686, file: !2918, line: 829, type: !16533)
!17688 = !DILocation(line: 0, scope: !17677)
!17689 = !DILocation(line: 823, column: 14, scope: !17677)
!17690 = !DILocation(line: 823, column: 2, scope: !17677)
!17691 = !DILocation(line: 826, column: 20, scope: !17677)
!17692 = !DILocation(line: 826, column: 18, scope: !17677)
!17693 = !DILocation(line: 828, column: 12, scope: !17677)
!17694 = !DILocation(line: 0, scope: !17686)
!17695 = !DILocation(line: 0, scope: !16541, inlinedAt: !17696)
!17696 = distinct !DILocation(line: 829, column: 2, scope: !17686)
!17697 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17698)
!17698 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17696)
!17699 = !DILocation(line: 0, scope: !16550, inlinedAt: !17698)
!17700 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17696)
!17701 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17696)
!17702 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17696)
!17703 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17696)
!17704 = !DILocation(line: 830, column: 7, scope: !17705)
!17705 = distinct !DILexicalBlock(scope: !17706, file: !2918, line: 830, column: 7)
!17706 = distinct !DILexicalBlock(scope: !17707, file: !2918, line: 829, column: 26)
!17707 = distinct !DILexicalBlock(scope: !17686, file: !2918, line: 829, column: 2)
!17708 = !DILocation(line: 830, column: 26, scope: !17705)
!17709 = !DILocation(line: 830, column: 23, scope: !17705)
!17710 = !DILocation(line: 830, column: 7, scope: !17706)
!17711 = !DILocation(line: 831, column: 20, scope: !17712)
!17712 = distinct !DILexicalBlock(scope: !17705, file: !2918, line: 830, column: 36)
!17713 = !DILocation(line: 832, column: 3, scope: !17712)
!17714 = !DILocation(line: 0, scope: !16575, inlinedAt: !17715)
!17715 = distinct !DILocation(line: 829, column: 2, scope: !17707)
!17716 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17715)
!17717 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17715)
!17718 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17715)
!17719 = !DILocation(line: 0, scope: !16589, inlinedAt: !17720)
!17720 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17715)
!17721 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17720)
!17722 = !DILocation(line: 834, column: 2, scope: !17677)
!17723 = distinct !DISubprogram(name: "z_pend_curr", scope: !2918, file: !2918, line: 840, type: !17724, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17726)
!17724 = !DISubroutineType(types: !17725)
!17725 = !{!103, !16544, !16533, !2842, !17427}
!17726 = !{!17727, !17728, !17729, !17730}
!17727 = !DILocalVariable(name: "lock", arg: 1, scope: !17723, file: !2918, line: 840, type: !16544)
!17728 = !DILocalVariable(name: "key", arg: 2, scope: !17723, file: !2918, line: 840, type: !16533)
!17729 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17723, file: !2918, line: 841, type: !2842)
!17730 = !DILocalVariable(name: "timeout", arg: 4, scope: !17723, file: !2918, line: 841, type: !17427)
!17731 = !DILocation(line: 0, scope: !17723)
!17732 = !DILocation(line: 844, column: 20, scope: !17723)
!17733 = !DILocation(line: 844, column: 18, scope: !17723)
!17734 = !DILocation(line: 846, column: 2, scope: !17735)
!17735 = distinct !DILexicalBlock(scope: !17736, file: !2918, line: 846, column: 2)
!17736 = distinct !DILexicalBlock(scope: !17723, file: !2918, line: 846, column: 2)
!17737 = !DILocation(line: 846, column: 2, scope: !17736)
!17738 = !DILocation(line: 846, column: 2, scope: !17739)
!17739 = distinct !DILexicalBlock(scope: !17735, file: !2918, line: 846, column: 2)
!17740 = !DILocation(line: 0, scope: !16541, inlinedAt: !17741)
!17741 = distinct !DILocation(line: 856, column: 9, scope: !17723)
!17742 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17743)
!17743 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17741)
!17744 = !DILocation(line: 0, scope: !16550, inlinedAt: !17743)
!17745 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17741)
!17746 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17741)
!17747 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17741)
!17748 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17741)
!17749 = !DILocation(line: 857, column: 14, scope: !17723)
!17750 = !DILocation(line: 857, column: 2, scope: !17723)
!17751 = !DILocation(line: 0, scope: !17226, inlinedAt: !17752)
!17752 = distinct !DILocation(line: 858, column: 2, scope: !17723)
!17753 = !DILocation(line: 225, column: 2, scope: !17233, inlinedAt: !17752)
!17754 = !DILocation(line: 225, column: 2, scope: !17234, inlinedAt: !17752)
!17755 = !DILocation(line: 225, column: 2, scope: !17237, inlinedAt: !17752)
!17756 = !DILocation(line: 0, scope: !17217, inlinedAt: !17757)
!17757 = distinct !DILocation(line: 859, column: 9, scope: !17723)
!17758 = !DILocation(line: 0, scope: !17226, inlinedAt: !17759)
!17759 = distinct !DILocation(line: 195, column: 2, scope: !17217, inlinedAt: !17757)
!17760 = !DILocation(line: 225, column: 2, scope: !17233, inlinedAt: !17759)
!17761 = !DILocation(line: 225, column: 2, scope: !17234, inlinedAt: !17759)
!17762 = !DILocation(line: 225, column: 2, scope: !17237, inlinedAt: !17759)
!17763 = !DILocation(line: 196, column: 9, scope: !17217, inlinedAt: !17757)
!17764 = !DILocation(line: 859, column: 2, scope: !17723)
!17765 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2918, file: !2918, line: 862, type: !17766, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17768)
!17766 = !DISubroutineType(types: !17767)
!17767 = !{!2811, !2842}
!17768 = !{!17769, !17770, !17771, !17773}
!17769 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17765, file: !2918, line: 862, type: !2842)
!17770 = !DILocalVariable(name: "thread", scope: !17765, file: !2918, line: 864, type: !2811)
!17771 = !DILocalVariable(name: "__i", scope: !17772, file: !2918, line: 866, type: !16533)
!17772 = distinct !DILexicalBlock(scope: !17765, file: !2918, line: 866, column: 2)
!17773 = !DILocalVariable(name: "__key", scope: !17772, file: !2918, line: 866, type: !16533)
!17774 = !DILocation(line: 0, scope: !17765)
!17775 = !DILocation(line: 0, scope: !17772)
!17776 = !DILocation(line: 0, scope: !16541, inlinedAt: !17777)
!17777 = distinct !DILocation(line: 866, column: 2, scope: !17772)
!17778 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17779)
!17779 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17777)
!17780 = !DILocation(line: 0, scope: !16550, inlinedAt: !17779)
!17781 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17777)
!17782 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17777)
!17783 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17777)
!17784 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17777)
!17785 = !DILocation(line: 867, column: 12, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17787, file: !2918, line: 866, column: 26)
!17787 = distinct !DILexicalBlock(scope: !17772, file: !2918, line: 866, column: 2)
!17788 = !DILocation(line: 869, column: 14, scope: !17789)
!17789 = distinct !DILexicalBlock(scope: !17786, file: !2918, line: 869, column: 7)
!17790 = !DILocation(line: 869, column: 7, scope: !17786)
!17791 = !DILocation(line: 870, column: 4, scope: !17792)
!17792 = distinct !DILexicalBlock(scope: !17789, file: !2918, line: 869, column: 23)
!17793 = !DILocation(line: 871, column: 3, scope: !17792)
!17794 = !DILocation(line: 0, scope: !16575, inlinedAt: !17795)
!17795 = distinct !DILocation(line: 866, column: 2, scope: !17787)
!17796 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17795)
!17797 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17795)
!17798 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17795)
!17799 = !DILocation(line: 0, scope: !16589, inlinedAt: !17800)
!17800 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17795)
!17801 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17800)
!17802 = !DILocation(line: 874, column: 2, scope: !17765)
!17803 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2918, file: !2918, line: 877, type: !17766, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17804)
!17804 = !{!17805, !17806, !17807, !17809}
!17805 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17803, file: !2918, line: 877, type: !2842)
!17806 = !DILocalVariable(name: "thread", scope: !17803, file: !2918, line: 879, type: !2811)
!17807 = !DILocalVariable(name: "__i", scope: !17808, file: !2918, line: 881, type: !16533)
!17808 = distinct !DILexicalBlock(scope: !17803, file: !2918, line: 881, column: 2)
!17809 = !DILocalVariable(name: "__key", scope: !17808, file: !2918, line: 881, type: !16533)
!17810 = !DILocation(line: 0, scope: !17803)
!17811 = !DILocation(line: 0, scope: !17808)
!17812 = !DILocation(line: 0, scope: !16541, inlinedAt: !17813)
!17813 = distinct !DILocation(line: 881, column: 2, scope: !17808)
!17814 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17815)
!17815 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17813)
!17816 = !DILocation(line: 0, scope: !16550, inlinedAt: !17815)
!17817 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17813)
!17818 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17813)
!17819 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17813)
!17820 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17813)
!17821 = !DILocation(line: 882, column: 12, scope: !17822)
!17822 = distinct !DILexicalBlock(scope: !17823, file: !2918, line: 881, column: 26)
!17823 = distinct !DILexicalBlock(scope: !17808, file: !2918, line: 881, column: 2)
!17824 = !DILocation(line: 884, column: 14, scope: !17825)
!17825 = distinct !DILexicalBlock(scope: !17822, file: !2918, line: 884, column: 7)
!17826 = !DILocation(line: 884, column: 7, scope: !17822)
!17827 = !DILocation(line: 885, column: 4, scope: !17828)
!17828 = distinct !DILexicalBlock(scope: !17825, file: !2918, line: 884, column: 23)
!17829 = !DILocation(line: 886, column: 10, scope: !17828)
!17830 = !DILocation(line: 887, column: 3, scope: !17828)
!17831 = !DILocation(line: 0, scope: !16575, inlinedAt: !17832)
!17832 = distinct !DILocation(line: 881, column: 2, scope: !17823)
!17833 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17832)
!17834 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17832)
!17835 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17832)
!17836 = !DILocation(line: 0, scope: !16589, inlinedAt: !17837)
!17837 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17832)
!17838 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17837)
!17839 = !DILocation(line: 890, column: 2, scope: !17803)
!17840 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2918, file: !2918, line: 893, type: !16499, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17841)
!17841 = !{!17842}
!17842 = !DILocalVariable(name: "thread", arg: 1, scope: !17840, file: !2918, line: 893, type: !2811)
!17843 = !DILocation(line: 0, scope: !17840)
!17844 = !DILocation(line: 0, scope: !17648, inlinedAt: !17845)
!17845 = distinct !DILocation(line: 895, column: 2, scope: !17840)
!17846 = !DILocation(line: 0, scope: !17652, inlinedAt: !17845)
!17847 = !DILocation(line: 0, scope: !16541, inlinedAt: !17848)
!17848 = distinct !DILocation(line: 788, column: 2, scope: !17652, inlinedAt: !17845)
!17849 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17850)
!17850 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17848)
!17851 = !DILocation(line: 0, scope: !16550, inlinedAt: !17850)
!17852 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17848)
!17853 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17848)
!17854 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17848)
!17855 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17848)
!17856 = !DILocation(line: 789, column: 3, scope: !17666, inlinedAt: !17845)
!17857 = !DILocation(line: 0, scope: !16575, inlinedAt: !17858)
!17858 = distinct !DILocation(line: 788, column: 2, scope: !17667, inlinedAt: !17845)
!17859 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17858)
!17860 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17858)
!17861 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17858)
!17862 = !DILocation(line: 0, scope: !16589, inlinedAt: !17863)
!17863 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17858)
!17864 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17863)
!17865 = !DILocation(line: 896, column: 8, scope: !17840)
!17866 = !DILocation(line: 897, column: 1, scope: !17840)
!17867 = distinct !DISubprogram(name: "z_set_prio", scope: !2918, file: !2918, line: 902, type: !16902, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17868)
!17868 = !{!17869, !17870, !17871, !17872, !17874}
!17869 = !DILocalVariable(name: "thread", arg: 1, scope: !17867, file: !2918, line: 902, type: !2811)
!17870 = !DILocalVariable(name: "prio", arg: 2, scope: !17867, file: !2918, line: 902, type: !103)
!17871 = !DILocalVariable(name: "need_sched", scope: !17867, file: !2918, line: 904, type: !122)
!17872 = !DILocalVariable(name: "__i", scope: !17873, file: !2918, line: 906, type: !16533)
!17873 = distinct !DILexicalBlock(scope: !17867, file: !2918, line: 906, column: 2)
!17874 = !DILocalVariable(name: "__key", scope: !17873, file: !2918, line: 906, type: !16533)
!17875 = !DILocation(line: 0, scope: !17867)
!17876 = !DILocation(line: 0, scope: !17873)
!17877 = !DILocation(line: 0, scope: !16541, inlinedAt: !17878)
!17878 = distinct !DILocation(line: 906, column: 2, scope: !17873)
!17879 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17880)
!17880 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17878)
!17881 = !DILocation(line: 0, scope: !16550, inlinedAt: !17880)
!17882 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17878)
!17883 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17878)
!17884 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17878)
!17885 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17878)
!17886 = !DILocation(line: 907, column: 16, scope: !17887)
!17887 = distinct !DILexicalBlock(scope: !17888, file: !2918, line: 906, column: 26)
!17888 = distinct !DILexicalBlock(scope: !17873, file: !2918, line: 906, column: 2)
!17889 = !DILocation(line: 909, column: 7, scope: !17887)
!17890 = !DILocation(line: 0, scope: !16733, inlinedAt: !17891)
!17891 = distinct !DILocation(line: 912, column: 5, scope: !17892)
!17892 = distinct !DILexicalBlock(scope: !17893, file: !2918, line: 911, column: 63)
!17893 = distinct !DILexicalBlock(scope: !17894, file: !2918, line: 911, column: 8)
!17894 = distinct !DILexicalBlock(scope: !17895, file: !2918, line: 909, column: 19)
!17895 = distinct !DILexicalBlock(scope: !17887, file: !2918, line: 909, column: 7)
!17896 = !DILocation(line: 266, column: 28, scope: !16733, inlinedAt: !17891)
!17897 = !DILocation(line: 0, scope: !16741, inlinedAt: !17898)
!17898 = distinct !DILocation(line: 268, column: 3, scope: !16745, inlinedAt: !17891)
!17899 = !DILocation(line: 234, column: 2, scope: !16741, inlinedAt: !17898)
!17900 = !DILocation(line: 913, column: 23, scope: !17892)
!17901 = !DILocation(line: 0, scope: !16750, inlinedAt: !17902)
!17902 = distinct !DILocation(line: 914, column: 5, scope: !17892)
!17903 = !DILocation(line: 252, column: 28, scope: !16750, inlinedAt: !17902)
!17904 = !DILocation(line: 0, scope: !16757, inlinedAt: !17905)
!17905 = distinct !DILocation(line: 254, column: 3, scope: !16761, inlinedAt: !17902)
!17906 = !DILocation(line: 0, scope: !16764, inlinedAt: !17907)
!17907 = distinct !DILocation(line: 229, column: 2, scope: !16757, inlinedAt: !17905)
!17908 = !DILocation(line: 186, column: 2, scope: !16774, inlinedAt: !17907)
!17909 = !DILocation(line: 186, column: 2, scope: !16775, inlinedAt: !17907)
!17910 = !DILocation(line: 186, column: 2, scope: !16778, inlinedAt: !17907)
!17911 = !DILocation(line: 188, column: 2, scope: !16780, inlinedAt: !17907)
!17912 = !DILocation(line: 188, column: 2, scope: !16782, inlinedAt: !17907)
!17913 = !DILocation(line: 0, scope: !16780, inlinedAt: !17907)
!17914 = !DILocation(line: 189, column: 7, scope: !16785, inlinedAt: !17907)
!17915 = !DILocation(line: 189, column: 35, scope: !16785, inlinedAt: !17907)
!17916 = !DILocation(line: 189, column: 7, scope: !16786, inlinedAt: !17907)
!17917 = !DILocation(line: 190, column: 4, scope: !16790, inlinedAt: !17907)
!17918 = !DILocation(line: 192, column: 4, scope: !16790, inlinedAt: !17907)
!17919 = distinct !{!17919, !17911, !17920}
!17920 = !DILocation(line: 194, column: 2, scope: !16780, inlinedAt: !17907)
!17921 = !DILocation(line: 196, column: 2, scope: !16764, inlinedAt: !17907)
!17922 = !DILocation(line: 197, column: 1, scope: !16764, inlinedAt: !17907)
!17923 = !DILocation(line: 918, column: 4, scope: !17894)
!17924 = !DILocation(line: 919, column: 3, scope: !17894)
!17925 = !DILocation(line: 920, column: 22, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17895, file: !2918, line: 919, column: 10)
!17927 = !DILocation(line: 0, scope: !16575, inlinedAt: !17928)
!17928 = distinct !DILocation(line: 906, column: 2, scope: !17888)
!17929 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17928)
!17930 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17928)
!17931 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17928)
!17932 = !DILocation(line: 0, scope: !16589, inlinedAt: !17933)
!17933 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17928)
!17934 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17933)
!17935 = !DILocation(line: 926, column: 2, scope: !17867)
!17936 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2918, file: !2918, line: 929, type: !17937, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17939)
!17937 = !DISubroutineType(types: !17938)
!17938 = !{null, !2811, !103}
!17939 = !{!17940, !17941, !17942}
!17940 = !DILocalVariable(name: "thread", arg: 1, scope: !17936, file: !2918, line: 929, type: !2811)
!17941 = !DILocalVariable(name: "prio", arg: 2, scope: !17936, file: !2918, line: 929, type: !103)
!17942 = !DILocalVariable(name: "need_sched", scope: !17936, file: !2918, line: 931, type: !122)
!17943 = !DILocation(line: 0, scope: !17936)
!17944 = !DILocation(line: 931, column: 20, scope: !17936)
!17945 = !DILocation(line: 935, column: 17, scope: !17946)
!17946 = distinct !DILexicalBlock(scope: !17936, file: !2918, line: 935, column: 6)
!17947 = !DILocation(line: 935, column: 20, scope: !17946)
!17948 = !DILocation(line: 935, column: 35, scope: !17946)
!17949 = !DILocation(line: 935, column: 48, scope: !17946)
!17950 = !DILocation(line: 935, column: 6, scope: !17936)
!17951 = !DILocation(line: 936, column: 3, scope: !17952)
!17952 = distinct !DILexicalBlock(scope: !17946, file: !2918, line: 935, column: 55)
!17953 = !DILocation(line: 937, column: 2, scope: !17952)
!17954 = !DILocation(line: 938, column: 1, scope: !17936)
!17955 = distinct !DISubprogram(name: "k_sched_lock", scope: !2918, file: !2918, line: 987, type: !323, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !17956)
!17956 = !{!17957, !17959}
!17957 = !DILocalVariable(name: "__i", scope: !17958, file: !2918, line: 989, type: !16533)
!17958 = distinct !DILexicalBlock(scope: !17955, file: !2918, line: 989, column: 2)
!17959 = !DILocalVariable(name: "__key", scope: !17958, file: !2918, line: 989, type: !16533)
!17960 = !DILocation(line: 0, scope: !17958)
!17961 = !DILocation(line: 0, scope: !16541, inlinedAt: !17962)
!17962 = distinct !DILocation(line: 989, column: 2, scope: !17958)
!17963 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !17964)
!17964 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !17962)
!17965 = !DILocation(line: 0, scope: !16550, inlinedAt: !17964)
!17966 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !17962)
!17967 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !17962)
!17968 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !17962)
!17969 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !17962)
!17970 = !DILocation(line: 992, column: 3, scope: !17971)
!17971 = distinct !DILexicalBlock(scope: !17972, file: !2918, line: 989, column: 26)
!17972 = distinct !DILexicalBlock(scope: !17958, file: !2918, line: 989, column: 2)
!17973 = !DILocation(line: 0, scope: !16575, inlinedAt: !17974)
!17974 = distinct !DILocation(line: 989, column: 2, scope: !17972)
!17975 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17974)
!17976 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !17974)
!17977 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !17974)
!17978 = !DILocation(line: 0, scope: !16589, inlinedAt: !17979)
!17979 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !17974)
!17980 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !17979)
!17981 = !DILocation(line: 994, column: 1, scope: !17955)
!17982 = distinct !DISubprogram(name: "z_sched_lock", scope: !14864, file: !14864, line: 251, type: !323, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!17983 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !17984)
!17984 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !17985)
!17985 = distinct !DILocation(line: 253, column: 2, scope: !17986)
!17986 = distinct !DILexicalBlock(scope: !17987, file: !14864, line: 253, column: 2)
!17987 = distinct !DILexicalBlock(scope: !17982, file: !14864, line: 253, column: 2)
!17988 = !DILocation(line: 0, scope: !17266, inlinedAt: !17984)
!17989 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !17985)
!17990 = !DILocation(line: 253, column: 2, scope: !17987)
!17991 = !DILocation(line: 253, column: 2, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17986, file: !14864, line: 253, column: 2)
!17993 = !DILocation(line: 254, column: 2, scope: !17994)
!17994 = distinct !DILexicalBlock(scope: !17995, file: !14864, line: 254, column: 2)
!17995 = distinct !DILexicalBlock(scope: !17982, file: !14864, line: 254, column: 2)
!17996 = !DILocation(line: 254, column: 2, scope: !17995)
!17997 = !DILocation(line: 254, column: 2, scope: !17998)
!17998 = distinct !DILexicalBlock(scope: !17994, file: !14864, line: 254, column: 2)
!17999 = !DILocation(line: 256, column: 2, scope: !17982)
!18000 = !DILocation(line: 258, column: 2, scope: !18001)
!18001 = distinct !DILexicalBlock(scope: !17982, file: !14864, line: 258, column: 2)
!18002 = !{i64 2152351084}
!18003 = !DILocation(line: 259, column: 1, scope: !17982)
!18004 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2918, file: !2918, line: 996, type: !323, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18005)
!18005 = !{!18006, !18008}
!18006 = !DILocalVariable(name: "__i", scope: !18007, file: !2918, line: 998, type: !16533)
!18007 = distinct !DILexicalBlock(scope: !18004, file: !2918, line: 998, column: 2)
!18008 = !DILocalVariable(name: "__key", scope: !18007, file: !2918, line: 998, type: !16533)
!18009 = !DILocation(line: 0, scope: !18007)
!18010 = !DILocation(line: 0, scope: !16541, inlinedAt: !18011)
!18011 = distinct !DILocation(line: 998, column: 2, scope: !18007)
!18012 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !18013)
!18013 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !18011)
!18014 = !DILocation(line: 0, scope: !16550, inlinedAt: !18013)
!18015 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !18011)
!18016 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !18011)
!18017 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !18011)
!18018 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !18011)
!18019 = !DILocation(line: 999, column: 3, scope: !18020)
!18020 = distinct !DILexicalBlock(scope: !18021, file: !2918, line: 999, column: 3)
!18021 = distinct !DILexicalBlock(scope: !18022, file: !2918, line: 999, column: 3)
!18022 = distinct !DILexicalBlock(scope: !18023, file: !2918, line: 998, column: 26)
!18023 = distinct !DILexicalBlock(scope: !18007, file: !2918, line: 998, column: 2)
!18024 = !DILocation(line: 999, column: 3, scope: !18021)
!18025 = !DILocation(line: 999, column: 3, scope: !18026)
!18026 = distinct !DILexicalBlock(scope: !18020, file: !2918, line: 999, column: 3)
!18027 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !18028)
!18028 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !18029)
!18029 = distinct !DILocation(line: 1000, column: 3, scope: !18030)
!18030 = distinct !DILexicalBlock(scope: !18031, file: !2918, line: 1000, column: 3)
!18031 = distinct !DILexicalBlock(scope: !18022, file: !2918, line: 1000, column: 3)
!18032 = !DILocation(line: 0, scope: !17266, inlinedAt: !18028)
!18033 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !18029)
!18034 = !DILocation(line: 1000, column: 3, scope: !18031)
!18035 = !DILocation(line: 1000, column: 3, scope: !18036)
!18036 = distinct !DILexicalBlock(scope: !18030, file: !2918, line: 1000, column: 3)
!18037 = !DILocation(line: 1002, column: 5, scope: !18022)
!18038 = !DILocation(line: 1002, column: 20, scope: !18022)
!18039 = !DILocation(line: 1002, column: 3, scope: !18022)
!18040 = !DILocation(line: 1003, column: 3, scope: !18022)
!18041 = !DILocation(line: 0, scope: !16575, inlinedAt: !18042)
!18042 = distinct !DILocation(line: 998, column: 2, scope: !18023)
!18043 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !18042)
!18044 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !18042)
!18045 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !18042)
!18046 = !DILocation(line: 0, scope: !16589, inlinedAt: !18047)
!18047 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !18042)
!18048 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !18047)
!18049 = !DILocation(line: 1011, column: 2, scope: !18004)
!18050 = !DILocation(line: 1012, column: 1, scope: !18004)
!18051 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2918, file: !2918, line: 1014, type: !16890, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!18052 = !DILocation(line: 1028, column: 25, scope: !18051)
!18053 = !DILocation(line: 1028, column: 2, scope: !18051)
!18054 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2918, file: !2918, line: 1155, type: !18055, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18057)
!18055 = !DISubroutineType(types: !18056)
!18056 = !{!122, !2840, !2840}
!18057 = !{!18058, !18059, !18060, !18061, !18062}
!18058 = !DILocalVariable(name: "a", arg: 1, scope: !18054, file: !2918, line: 1155, type: !2840)
!18059 = !DILocalVariable(name: "b", arg: 2, scope: !18054, file: !2918, line: 1155, type: !2840)
!18060 = !DILocalVariable(name: "thread_a", scope: !18054, file: !2918, line: 1157, type: !2811)
!18061 = !DILocalVariable(name: "thread_b", scope: !18054, file: !2918, line: 1157, type: !2811)
!18062 = !DILocalVariable(name: "cmp", scope: !18054, file: !2918, line: 1158, type: !320)
!18063 = !DILocation(line: 0, scope: !18054)
!18064 = !DILocation(line: 1160, column: 13, scope: !18054)
!18065 = !DILocation(line: 1161, column: 13, scope: !18054)
!18066 = !DILocation(line: 1163, column: 8, scope: !18054)
!18067 = !DILocation(line: 1165, column: 10, scope: !18068)
!18068 = distinct !DILexicalBlock(scope: !18054, file: !2918, line: 1165, column: 6)
!18069 = !DILocation(line: 1165, column: 6, scope: !18054)
!18070 = !DILocation(line: 1167, column: 17, scope: !18071)
!18071 = distinct !DILexicalBlock(scope: !18068, file: !2918, line: 1167, column: 13)
!18072 = !DILocation(line: 1167, column: 13, scope: !18068)
!18073 = !DILocation(line: 1170, column: 25, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18071, file: !2918, line: 1169, column: 9)
!18075 = !DILocation(line: 1170, column: 52, scope: !18074)
!18076 = !DILocation(line: 1170, column: 35, scope: !18074)
!18077 = !DILocation(line: 1170, column: 3, scope: !18074)
!18078 = !DILocation(line: 0, scope: !18068)
!18079 = !DILocation(line: 1173, column: 1, scope: !18054)
!18080 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2918, file: !2918, line: 1175, type: !18081, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18096)
!18081 = !DISubroutineType(types: !18082)
!18082 = !{null, !18083, !2811}
!18083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18084, size: 32)
!18084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !18085, line: 37, size: 128, elements: !18086)
!18085 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18086 = !{!18087, !18095}
!18087 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !18084, file: !18085, line: 38, baseType: !18088, size: 96)
!18088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !211, line: 83, size: 96, elements: !18089)
!18089 = !{!18090, !18091, !18094}
!18090 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !18088, file: !211, line: 84, baseType: !2840, size: 32)
!18091 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !18088, file: !211, line: 85, baseType: !18092, size: 32, offset: 32)
!18092 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !211, line: 81, baseType: !18093)
!18093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18055, size: 32)
!18094 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !18088, file: !211, line: 86, baseType: !103, size: 32, offset: 64)
!18095 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !18084, file: !18085, line: 39, baseType: !103, size: 32, offset: 96)
!18096 = !{!18097, !18098, !18099, !18100, !18109}
!18097 = !DILocalVariable(name: "pq", arg: 1, scope: !18080, file: !2918, line: 1175, type: !18083)
!18098 = !DILocalVariable(name: "thread", arg: 2, scope: !18080, file: !2918, line: 1175, type: !2811)
!18099 = !DILocalVariable(name: "t", scope: !18080, file: !2918, line: 1177, type: !2811)
!18100 = !DILocalVariable(name: "__f", scope: !18101, file: !2918, line: 1190, type: !18104)
!18101 = distinct !DILexicalBlock(scope: !18102, file: !2918, line: 1190, column: 3)
!18102 = distinct !DILexicalBlock(scope: !18103, file: !2918, line: 1189, column: 27)
!18103 = distinct !DILexicalBlock(scope: !18080, file: !2918, line: 1189, column: 6)
!18104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !211, line: 155, size: 96, elements: !18105)
!18105 = !{!18106, !18107, !18108}
!18106 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !18104, file: !211, line: 156, baseType: !2913, size: 32)
!18107 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !18104, file: !211, line: 157, baseType: !550, size: 32, offset: 32)
!18108 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !18104, file: !211, line: 158, baseType: !320, size: 32, offset: 64)
!18109 = !DILocalVariable(name: "n", scope: !18110, file: !2918, line: 1190, type: !2840)
!18110 = distinct !DILexicalBlock(scope: !18111, file: !2918, line: 1190, column: 3)
!18111 = distinct !DILexicalBlock(scope: !18101, file: !2918, line: 1190, column: 3)
!18112 = !DILocation(line: 0, scope: !18080)
!18113 = !DILocation(line: 1179, column: 2, scope: !18114)
!18114 = distinct !DILexicalBlock(scope: !18115, file: !2918, line: 1179, column: 2)
!18115 = distinct !DILexicalBlock(scope: !18080, file: !2918, line: 1179, column: 2)
!18116 = !DILocation(line: 1179, column: 2, scope: !18115)
!18117 = !DILocation(line: 1179, column: 2, scope: !18118)
!18118 = distinct !DILexicalBlock(scope: !18114, file: !2918, line: 1179, column: 2)
!18119 = !DILocation(line: 1181, column: 31, scope: !18080)
!18120 = !DILocation(line: 1181, column: 45, scope: !18080)
!18121 = !DILocation(line: 1181, column: 15, scope: !18080)
!18122 = !DILocation(line: 1181, column: 25, scope: !18080)
!18123 = !DILocation(line: 1189, column: 11, scope: !18103)
!18124 = !DILocation(line: 1189, column: 7, scope: !18103)
!18125 = !DILocation(line: 1189, column: 6, scope: !18080)
!18126 = !DILocation(line: 1190, column: 3, scope: !18101)
!18127 = !DILocation(line: 1190, column: 3, scope: !18110)
!18128 = !DILocation(line: 0, scope: !18110)
!18129 = !DILocation(line: 1190, column: 3, scope: !18111)
!18130 = !DILocation(line: 1193, column: 2, scope: !18102)
!18131 = !DILocation(line: 1191, column: 42, scope: !18132)
!18132 = distinct !DILexicalBlock(scope: !18111, file: !2918, line: 1190, column: 54)
!18133 = !DILocation(line: 1191, column: 12, scope: !18132)
!18134 = !DILocation(line: 1191, column: 22, scope: !18132)
!18135 = distinct !{!18135, !18126, !18136}
!18136 = !DILocation(line: 1192, column: 3, scope: !18101)
!18137 = !DILocation(line: 1195, column: 17, scope: !18080)
!18138 = !DILocation(line: 1195, column: 37, scope: !18080)
!18139 = !DILocation(line: 1195, column: 2, scope: !18080)
!18140 = !DILocation(line: 1196, column: 1, scope: !18080)
!18141 = !DISubprogram(name: "z_rb_foreach_next", scope: !211, file: !211, line: 176, type: !18142, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!18142 = !DISubroutineType(types: !18143)
!18143 = !{!2840, !18144, !18145}
!18144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18088, size: 32)
!18145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18104, size: 32)
!18146 = !DISubprogram(name: "rb_insert", scope: !211, file: !211, line: 105, type: !18147, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!18147 = !DISubroutineType(types: !18148)
!18148 = !{null, !18144, !2840}
!18149 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2918, file: !2918, line: 1198, type: !18081, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18150)
!18150 = !{!18151, !18152}
!18151 = !DILocalVariable(name: "pq", arg: 1, scope: !18149, file: !2918, line: 1198, type: !18083)
!18152 = !DILocalVariable(name: "thread", arg: 2, scope: !18149, file: !2918, line: 1198, type: !2811)
!18153 = !DILocation(line: 0, scope: !18149)
!18154 = !DILocation(line: 1200, column: 2, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18156, file: !2918, line: 1200, column: 2)
!18156 = distinct !DILexicalBlock(scope: !18149, file: !2918, line: 1200, column: 2)
!18157 = !DILocation(line: 1200, column: 2, scope: !18156)
!18158 = !DILocation(line: 1200, column: 2, scope: !18159)
!18159 = distinct !DILexicalBlock(scope: !18155, file: !2918, line: 1200, column: 2)
!18160 = !DILocation(line: 1202, column: 17, scope: !18149)
!18161 = !DILocation(line: 1202, column: 37, scope: !18149)
!18162 = !DILocation(line: 1202, column: 2, scope: !18149)
!18163 = !DILocation(line: 1204, column: 16, scope: !18164)
!18164 = distinct !DILexicalBlock(scope: !18149, file: !2918, line: 1204, column: 6)
!18165 = !DILocation(line: 1204, column: 7, scope: !18164)
!18166 = !DILocation(line: 1204, column: 6, scope: !18149)
!18167 = !DILocation(line: 1205, column: 7, scope: !18168)
!18168 = distinct !DILexicalBlock(scope: !18164, file: !2918, line: 1204, column: 22)
!18169 = !DILocation(line: 1205, column: 22, scope: !18168)
!18170 = !DILocation(line: 1206, column: 2, scope: !18168)
!18171 = !DILocation(line: 1207, column: 1, scope: !18149)
!18172 = !DISubprogram(name: "rb_remove", scope: !211, file: !211, line: 110, type: !18147, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!18173 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2918, file: !2918, line: 1209, type: !18174, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18176)
!18174 = !DISubroutineType(types: !18175)
!18175 = !{!2811, !18083}
!18176 = !{!18177, !18178, !18179}
!18177 = !DILocalVariable(name: "pq", arg: 1, scope: !18173, file: !2918, line: 1209, type: !18083)
!18178 = !DILocalVariable(name: "thread", scope: !18173, file: !2918, line: 1211, type: !2811)
!18179 = !DILocalVariable(name: "n", scope: !18173, file: !2918, line: 1212, type: !2840)
!18180 = !DILocation(line: 0, scope: !18173)
!18181 = !DILocation(line: 1212, column: 37, scope: !18173)
!18182 = !DILocation(line: 1212, column: 21, scope: !18173)
!18183 = !DILocation(line: 1217, column: 2, scope: !18173)
!18184 = distinct !DISubprogram(name: "rb_get_min", scope: !211, file: !211, line: 115, type: !18185, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18187)
!18185 = !DISubroutineType(types: !18186)
!18186 = !{!2840, !18144}
!18187 = !{!18188}
!18188 = !DILocalVariable(name: "tree", arg: 1, scope: !18184, file: !211, line: 115, type: !18144)
!18189 = !DILocation(line: 0, scope: !18184)
!18190 = !DILocation(line: 117, column: 9, scope: !18184)
!18191 = !DILocation(line: 117, column: 2, scope: !18184)
!18192 = !DISubprogram(name: "z_rb_get_minmax", scope: !211, file: !211, line: 100, type: !18193, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2512)
!18193 = !DISubroutineType(types: !18194)
!18194 = !{!2840, !18144, !166}
!18195 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2918, file: !2918, line: 1246, type: !18196, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18204)
!18196 = !DISubroutineType(types: !18197)
!18197 = !{!2811, !18198}
!18198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18199, size: 32)
!18199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !18085, line: 53, size: 2080, elements: !18200)
!18200 = !{!18201, !18203}
!18201 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !18199, file: !18085, line: 54, baseType: !18202, size: 2048)
!18202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2847, size: 2048, elements: !1417)
!18203 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !18199, file: !18085, line: 55, baseType: !32, size: 32, offset: 2048)
!18204 = !{!18205, !18206, !18207, !18208}
!18205 = !DILocalVariable(name: "pq", arg: 1, scope: !18195, file: !2918, line: 1246, type: !18198)
!18206 = !DILocalVariable(name: "thread", scope: !18195, file: !2918, line: 1252, type: !2811)
!18207 = !DILocalVariable(name: "l", scope: !18195, file: !2918, line: 1253, type: !16767)
!18208 = !DILocalVariable(name: "n", scope: !18195, file: !2918, line: 1254, type: !2914)
!18209 = !DILocation(line: 0, scope: !18195)
!18210 = !DILocation(line: 1248, column: 11, scope: !18211)
!18211 = distinct !DILexicalBlock(scope: !18195, file: !2918, line: 1248, column: 6)
!18212 = !DILocation(line: 1248, column: 7, scope: !18211)
!18213 = !DILocation(line: 1248, column: 6, scope: !18195)
!18214 = !DILocation(line: 1253, column: 31, scope: !18195)
!18215 = !DILocation(line: 1253, column: 20, scope: !18195)
!18216 = !DILocation(line: 1254, column: 19, scope: !18195)
!18217 = !DILocation(line: 1260, column: 1, scope: !18195)
!18218 = distinct !DISubprogram(name: "z_unpend_all", scope: !2918, file: !2918, line: 1262, type: !18219, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18221)
!18219 = !DISubroutineType(types: !18220)
!18220 = !{!103, !2842}
!18221 = !{!18222, !18223, !18224}
!18222 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18218, file: !2918, line: 1262, type: !2842)
!18223 = !DILocalVariable(name: "need_sched", scope: !18218, file: !2918, line: 1264, type: !103)
!18224 = !DILocalVariable(name: "thread", scope: !18218, file: !2918, line: 1265, type: !2811)
!18225 = !DILocation(line: 0, scope: !18218)
!18226 = !DILocation(line: 1267, column: 19, scope: !18218)
!18227 = !DILocation(line: 1267, column: 41, scope: !18218)
!18228 = !DILocation(line: 1267, column: 2, scope: !18218)
!18229 = !DILocation(line: 1268, column: 3, scope: !18230)
!18230 = distinct !DILexicalBlock(scope: !18218, file: !2918, line: 1267, column: 50)
!18231 = !DILocation(line: 1269, column: 3, scope: !18230)
!18232 = distinct !{!18232, !18228, !18233}
!18233 = !DILocation(line: 1271, column: 2, scope: !18218)
!18234 = !DILocation(line: 1273, column: 2, scope: !18218)
!18235 = distinct !DISubprogram(name: "z_waitq_head", scope: !15203, file: !15203, line: 52, type: !17766, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18236)
!18236 = !{!18237}
!18237 = !DILocalVariable(name: "w", arg: 1, scope: !18235, file: !15203, line: 52, type: !2842)
!18238 = !DILocation(line: 0, scope: !18235)
!18239 = !DILocation(line: 54, column: 52, scope: !18235)
!18240 = !DILocation(line: 54, column: 28, scope: !18235)
!18241 = !DILocation(line: 54, column: 9, scope: !18235)
!18242 = !DILocation(line: 54, column: 2, scope: !18235)
!18243 = distinct !DISubprogram(name: "init_ready_q", scope: !2918, file: !2918, line: 1276, type: !18244, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18251)
!18244 = !DISubroutineType(types: !18245)
!18245 = !{null, !18246}
!18246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18247, size: 32)
!18247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !131, line: 83, size: 96, elements: !18248)
!18248 = !{!18249, !18250}
!18249 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !18247, file: !131, line: 86, baseType: !2811, size: 32)
!18250 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !18247, file: !131, line: 90, baseType: !2847, size: 64, offset: 32)
!18251 = !{!18252}
!18252 = !DILocalVariable(name: "rq", arg: 1, scope: !18243, file: !2918, line: 1276, type: !18246)
!18253 = !DILocation(line: 0, scope: !18243)
!18254 = !DILocation(line: 1289, column: 22, scope: !18243)
!18255 = !DILocation(line: 1289, column: 2, scope: !18243)
!18256 = !DILocation(line: 1291, column: 1, scope: !18243)
!18257 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !18258, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18260)
!18258 = !DISubroutineType(types: !18259)
!18259 = !{null, !16767}
!18260 = !{!18261}
!18261 = !DILocalVariable(name: "list", arg: 1, scope: !18257, file: !136, line: 197, type: !16767)
!18262 = !DILocation(line: 0, scope: !18257)
!18263 = !DILocation(line: 199, column: 8, scope: !18257)
!18264 = !DILocation(line: 199, column: 13, scope: !18257)
!18265 = !DILocation(line: 200, column: 8, scope: !18257)
!18266 = !DILocation(line: 200, column: 13, scope: !18257)
!18267 = !DILocation(line: 201, column: 1, scope: !18257)
!18268 = distinct !DISubprogram(name: "z_sched_init", scope: !2918, file: !2918, line: 1293, type: !323, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!18269 = !DILocation(line: 1302, column: 2, scope: !18268)
!18270 = !DILocation(line: 1306, column: 2, scope: !18268)
!18271 = !DILocation(line: 1309, column: 1, scope: !18268)
!18272 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2918, file: !2918, line: 1311, type: !18273, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18276)
!18273 = !DISubroutineType(types: !18274)
!18274 = !{!103, !18275}
!18275 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !199, line: 347, baseType: !2811)
!18276 = !{!18277}
!18277 = !DILocalVariable(name: "thread", arg: 1, scope: !18272, file: !2918, line: 1311, type: !18275)
!18278 = !DILocation(line: 0, scope: !18272)
!18279 = !DILocation(line: 1313, column: 22, scope: !18272)
!18280 = !DILocation(line: 1313, column: 9, scope: !18272)
!18281 = !DILocation(line: 1313, column: 2, scope: !18272)
!18282 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2918, file: !2918, line: 1325, type: !18283, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18285)
!18283 = !DISubroutineType(types: !18284)
!18284 = !{null, !18275, !103}
!18285 = !{!18286, !18287, !18288}
!18286 = !DILocalVariable(name: "thread", arg: 1, scope: !18282, file: !2918, line: 1325, type: !18275)
!18287 = !DILocalVariable(name: "prio", arg: 2, scope: !18282, file: !2918, line: 1325, type: !103)
!18288 = !DILocalVariable(name: "th", scope: !18282, file: !2918, line: 1334, type: !2811)
!18289 = !DILocation(line: 0, scope: !18282)
!18290 = !DILocation(line: 1331, column: 2, scope: !18291)
!18291 = distinct !DILexicalBlock(scope: !18292, file: !2918, line: 1331, column: 2)
!18292 = distinct !DILexicalBlock(scope: !18293, file: !2918, line: 1331, column: 2)
!18293 = distinct !DILexicalBlock(scope: !18282, file: !2918, line: 1331, column: 2)
!18294 = !DILocation(line: 1331, column: 2, scope: !18295)
!18295 = distinct !DILexicalBlock(scope: !18291, file: !2918, line: 1331, column: 2)
!18296 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !18297)
!18297 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !18298)
!18298 = distinct !DILocation(line: 1332, column: 2, scope: !18299)
!18299 = distinct !DILexicalBlock(scope: !18300, file: !2918, line: 1332, column: 2)
!18300 = distinct !DILexicalBlock(scope: !18282, file: !2918, line: 1332, column: 2)
!18301 = !DILocation(line: 0, scope: !17266, inlinedAt: !18297)
!18302 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !18298)
!18303 = !DILocation(line: 1332, column: 2, scope: !18300)
!18304 = !DILocation(line: 1332, column: 2, scope: !18305)
!18305 = distinct !DILexicalBlock(scope: !18299, file: !2918, line: 1332, column: 2)
!18306 = !DILocation(line: 1336, column: 2, scope: !18282)
!18307 = !DILocation(line: 1337, column: 1, scope: !18282)
!18308 = distinct !DISubprogram(name: "k_can_yield", scope: !2918, file: !2918, line: 1384, type: !8844, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!18309 = !DILocation(line: 1386, column: 11, scope: !18308)
!18310 = !DILocation(line: 1386, column: 29, scope: !18308)
!18311 = !DILocation(line: 1386, column: 32, scope: !18308)
!18312 = !DILocation(line: 1386, column: 46, scope: !18308)
!18313 = !DILocation(line: 1387, column: 28, scope: !18308)
!18314 = !DILocation(line: 1387, column: 4, scope: !18308)
!18315 = !DILocation(line: 1386, column: 2, scope: !18308)
!18316 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !127, file: !127, line: 989, type: !8844, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!18317 = !DILocation(line: 993, column: 10, scope: !18316)
!18318 = !DILocation(line: 993, column: 2, scope: !18316)
!18319 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2918, file: !2918, line: 1390, type: !323, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18320)
!18320 = !{!18321}
!18321 = !DILocalVariable(name: "key", scope: !18319, file: !2918, line: 1396, type: !16533)
!18322 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !18323)
!18323 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !18324)
!18324 = distinct !DILocation(line: 1392, column: 2, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18326, file: !2918, line: 1392, column: 2)
!18326 = distinct !DILexicalBlock(scope: !18319, file: !2918, line: 1392, column: 2)
!18327 = !DILocation(line: 0, scope: !17266, inlinedAt: !18323)
!18328 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !18324)
!18329 = !DILocation(line: 1392, column: 2, scope: !18326)
!18330 = !DILocation(line: 1392, column: 2, scope: !18331)
!18331 = distinct !DILexicalBlock(scope: !18325, file: !2918, line: 1392, column: 2)
!18332 = !DILocation(line: 0, scope: !16541, inlinedAt: !18333)
!18333 = distinct !DILocation(line: 1396, column: 25, scope: !18319)
!18334 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !18335)
!18335 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !18333)
!18336 = !DILocation(line: 0, scope: !16550, inlinedAt: !18335)
!18337 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !18333)
!18338 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !18333)
!18339 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !18333)
!18340 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !18333)
!18341 = !DILocation(line: 0, scope: !18319)
!18342 = !DILocation(line: 1400, column: 18, scope: !18343)
!18343 = distinct !DILexicalBlock(scope: !18344, file: !2918, line: 1399, column: 36)
!18344 = distinct !DILexicalBlock(scope: !18319, file: !2918, line: 1398, column: 6)
!18345 = !DILocation(line: 0, scope: !16733, inlinedAt: !18346)
!18346 = distinct !DILocation(line: 1400, column: 3, scope: !18343)
!18347 = !DILocation(line: 266, column: 15, scope: !16733, inlinedAt: !18346)
!18348 = !DILocation(line: 266, column: 28, scope: !16733, inlinedAt: !18346)
!18349 = !DILocation(line: 0, scope: !16741, inlinedAt: !18350)
!18350 = distinct !DILocation(line: 268, column: 3, scope: !16745, inlinedAt: !18346)
!18351 = !DILocation(line: 234, column: 2, scope: !16741, inlinedAt: !18350)
!18352 = !DILocation(line: 1402, column: 15, scope: !18319)
!18353 = !DILocation(line: 0, scope: !16750, inlinedAt: !18354)
!18354 = distinct !DILocation(line: 1402, column: 2, scope: !18319)
!18355 = !DILocation(line: 252, column: 15, scope: !16750, inlinedAt: !18354)
!18356 = !DILocation(line: 252, column: 28, scope: !16750, inlinedAt: !18354)
!18357 = !DILocation(line: 0, scope: !16757, inlinedAt: !18358)
!18358 = distinct !DILocation(line: 254, column: 3, scope: !16761, inlinedAt: !18354)
!18359 = !DILocation(line: 0, scope: !16764, inlinedAt: !18360)
!18360 = distinct !DILocation(line: 229, column: 2, scope: !16757, inlinedAt: !18358)
!18361 = !DILocation(line: 186, column: 2, scope: !16774, inlinedAt: !18360)
!18362 = !DILocation(line: 186, column: 2, scope: !16775, inlinedAt: !18360)
!18363 = !DILocation(line: 186, column: 2, scope: !16778, inlinedAt: !18360)
!18364 = !DILocation(line: 188, column: 2, scope: !16780, inlinedAt: !18360)
!18365 = !DILocation(line: 188, column: 2, scope: !16782, inlinedAt: !18360)
!18366 = !DILocation(line: 0, scope: !16780, inlinedAt: !18360)
!18367 = !DILocation(line: 189, column: 7, scope: !16785, inlinedAt: !18360)
!18368 = !DILocation(line: 189, column: 35, scope: !16785, inlinedAt: !18360)
!18369 = !DILocation(line: 189, column: 7, scope: !16786, inlinedAt: !18360)
!18370 = !DILocation(line: 191, column: 21, scope: !16790, inlinedAt: !18360)
!18371 = !DILocation(line: 190, column: 4, scope: !16790, inlinedAt: !18360)
!18372 = !DILocation(line: 192, column: 4, scope: !16790, inlinedAt: !18360)
!18373 = distinct !{!18373, !18364, !18374}
!18374 = !DILocation(line: 194, column: 2, scope: !16780, inlinedAt: !18360)
!18375 = !DILocation(line: 196, column: 37, scope: !16764, inlinedAt: !18360)
!18376 = !DILocation(line: 196, column: 2, scope: !16764, inlinedAt: !18360)
!18377 = !DILocation(line: 197, column: 1, scope: !16764, inlinedAt: !18360)
!18378 = !DILocation(line: 1403, column: 2, scope: !18319)
!18379 = !DILocation(line: 0, scope: !17217, inlinedAt: !18380)
!18380 = distinct !DILocation(line: 1404, column: 2, scope: !18319)
!18381 = !DILocation(line: 0, scope: !17226, inlinedAt: !18382)
!18382 = distinct !DILocation(line: 195, column: 2, scope: !17217, inlinedAt: !18380)
!18383 = !DILocation(line: 225, column: 2, scope: !17233, inlinedAt: !18382)
!18384 = !DILocation(line: 225, column: 2, scope: !17234, inlinedAt: !18382)
!18385 = !DILocation(line: 225, column: 2, scope: !17237, inlinedAt: !18382)
!18386 = !DILocation(line: 196, column: 9, scope: !17217, inlinedAt: !18380)
!18387 = !DILocation(line: 1405, column: 1, scope: !18319)
!18388 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2918, file: !2918, line: 1459, type: !18389, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18391)
!18389 = !DISubroutineType(types: !18390)
!18390 = !{!320, !17427}
!18391 = !{!18392, !18393, !18394}
!18392 = !DILocalVariable(name: "timeout", arg: 1, scope: !18388, file: !2918, line: 1459, type: !17427)
!18393 = !DILocalVariable(name: "ticks", scope: !18388, file: !2918, line: 1461, type: !104)
!18394 = !DILocalVariable(name: "ret", scope: !18388, file: !2918, line: 1480, type: !320)
!18395 = !DILocation(line: 0, scope: !18388)
!18396 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !18397)
!18397 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !18398)
!18398 = distinct !DILocation(line: 1463, column: 2, scope: !18399)
!18399 = distinct !DILexicalBlock(scope: !18400, file: !2918, line: 1463, column: 2)
!18400 = distinct !DILexicalBlock(scope: !18388, file: !2918, line: 1463, column: 2)
!18401 = !DILocation(line: 0, scope: !17266, inlinedAt: !18397)
!18402 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !18398)
!18403 = !DILocation(line: 1463, column: 2, scope: !18400)
!18404 = !DILocation(line: 1463, column: 2, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18399, file: !2918, line: 1463, column: 2)
!18406 = !DILocation(line: 1468, column: 6, scope: !18407)
!18407 = distinct !DILexicalBlock(scope: !18388, file: !2918, line: 1468, column: 6)
!18408 = !DILocation(line: 1468, column: 6, scope: !18388)
!18409 = !DILocation(line: 1469, column: 20, scope: !18410)
!18410 = distinct !DILexicalBlock(scope: !18407, file: !2918, line: 1468, column: 40)
!18411 = !DILocation(line: 1469, column: 3, scope: !18410)
!18412 = !DILocation(line: 1473, column: 3, scope: !18410)
!18413 = !DILocation(line: 1478, column: 10, scope: !18388)
!18414 = !DILocation(line: 1480, column: 16, scope: !18388)
!18415 = !DILocation(line: 1485, column: 1, scope: !18388)
!18416 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5243, file: !5243, line: 310, type: !18417, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18419)
!18417 = !DISubroutineType(types: !18418)
!18418 = !{null, !18275}
!18419 = !{!18420}
!18420 = !DILocalVariable(name: "thread", arg: 1, scope: !18416, file: !5243, line: 310, type: !18275)
!18421 = !DILocation(line: 0, scope: !18416)
!18422 = !DILocation(line: 319, column: 2, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18416, file: !5243, line: 319, column: 2)
!18424 = !{i64 2152267242}
!18425 = !DILocation(line: 320, column: 2, scope: !18416)
!18426 = !DILocation(line: 321, column: 1, scope: !18416)
!18427 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2918, file: !2918, line: 1415, type: !18428, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18430)
!18428 = !DISubroutineType(types: !18429)
!18429 = !{!320, !104}
!18430 = !{!18431, !18432, !18433, !18434}
!18431 = !DILocalVariable(name: "ticks", arg: 1, scope: !18427, file: !2918, line: 1415, type: !104)
!18432 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !18427, file: !2918, line: 1418, type: !111)
!18433 = !DILocalVariable(name: "timeout", scope: !18427, file: !2918, line: 1430, type: !17427)
!18434 = !DILocalVariable(name: "key", scope: !18427, file: !2918, line: 1437, type: !16533)
!18435 = !DILocation(line: 0, scope: !18427)
!18436 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !18437)
!18437 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !18438)
!18438 = distinct !DILocation(line: 1420, column: 2, scope: !18439)
!18439 = distinct !DILexicalBlock(scope: !18440, file: !2918, line: 1420, column: 2)
!18440 = distinct !DILexicalBlock(scope: !18427, file: !2918, line: 1420, column: 2)
!18441 = !DILocation(line: 0, scope: !17266, inlinedAt: !18437)
!18442 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !18438)
!18443 = !DILocation(line: 1420, column: 2, scope: !18440)
!18444 = !DILocation(line: 1420, column: 2, scope: !18445)
!18445 = distinct !DILexicalBlock(scope: !18439, file: !2918, line: 1420, column: 2)
!18446 = !DILocation(line: 1425, column: 12, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18427, file: !2918, line: 1425, column: 6)
!18448 = !DILocation(line: 1425, column: 6, scope: !18427)
!18449 = !DILocation(line: 1426, column: 3, scope: !18450)
!18450 = distinct !DILexicalBlock(scope: !18447, file: !2918, line: 1425, column: 18)
!18451 = !DILocation(line: 1427, column: 3, scope: !18450)
!18452 = !DILocation(line: 1431, column: 24, scope: !18453)
!18453 = distinct !DILexicalBlock(scope: !18427, file: !2918, line: 1431, column: 6)
!18454 = !DILocation(line: 1431, column: 6, scope: !18427)
!18455 = !DILocation(line: 1432, column: 35, scope: !18456)
!18456 = distinct !DILexicalBlock(scope: !18453, file: !2918, line: 1431, column: 30)
!18457 = !DILocation(line: 1432, column: 27, scope: !18456)
!18458 = !DILocation(line: 1433, column: 2, scope: !18456)
!18459 = !DILocation(line: 1434, column: 27, scope: !18460)
!18460 = distinct !DILexicalBlock(scope: !18453, file: !2918, line: 1433, column: 9)
!18461 = !DILocation(line: 0, scope: !18453)
!18462 = !DILocation(line: 0, scope: !16541, inlinedAt: !18463)
!18463 = distinct !DILocation(line: 1437, column: 25, scope: !18427)
!18464 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !18465)
!18465 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !18463)
!18466 = !DILocation(line: 0, scope: !16550, inlinedAt: !18465)
!18467 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !18463)
!18468 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !18463)
!18469 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !18463)
!18470 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !18463)
!18471 = !DILocation(line: 1440, column: 20, scope: !18427)
!18472 = !DILocation(line: 1440, column: 18, scope: !18427)
!18473 = !DILocation(line: 1442, column: 2, scope: !18427)
!18474 = !DILocation(line: 1443, column: 23, scope: !18427)
!18475 = !DILocation(line: 1443, column: 2, scope: !18427)
!18476 = !DILocation(line: 1444, column: 29, scope: !18427)
!18477 = !DILocation(line: 1444, column: 2, scope: !18427)
!18478 = !DILocation(line: 0, scope: !17217, inlinedAt: !18479)
!18479 = distinct !DILocation(line: 1446, column: 8, scope: !18427)
!18480 = !DILocation(line: 0, scope: !17226, inlinedAt: !18481)
!18481 = distinct !DILocation(line: 195, column: 2, scope: !17217, inlinedAt: !18479)
!18482 = !DILocation(line: 225, column: 2, scope: !17233, inlinedAt: !18481)
!18483 = !DILocation(line: 225, column: 2, scope: !17234, inlinedAt: !18481)
!18484 = !DILocation(line: 225, column: 2, scope: !17237, inlinedAt: !18481)
!18485 = !DILocation(line: 196, column: 9, scope: !17217, inlinedAt: !18479)
!18486 = !DILocation(line: 1448, column: 2, scope: !18487)
!18487 = distinct !DILexicalBlock(scope: !18488, file: !2918, line: 1448, column: 2)
!18488 = distinct !DILexicalBlock(scope: !18427, file: !2918, line: 1448, column: 2)
!18489 = !DILocation(line: 1448, column: 2, scope: !18488)
!18490 = !DILocation(line: 1448, column: 2, scope: !18491)
!18491 = distinct !DILexicalBlock(scope: !18487, file: !2918, line: 1448, column: 2)
!18492 = !DILocation(line: 1450, column: 10, scope: !18427)
!18493 = !DILocation(line: 1450, column: 45, scope: !18427)
!18494 = !DILocation(line: 1450, column: 43, scope: !18427)
!18495 = !DILocation(line: 1451, column: 6, scope: !18427)
!18496 = !DILocation(line: 1457, column: 1, scope: !18427)
!18497 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3883, file: !3883, line: 1103, type: !3884, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18498)
!18498 = !{!18499}
!18499 = !DILocalVariable(name: "t", arg: 1, scope: !18497, file: !3883, line: 1103, type: !112)
!18500 = !DILocation(line: 0, scope: !18497)
!18501 = !DILocation(line: 0, scope: !16601, inlinedAt: !18502)
!18502 = distinct !DILocation(line: 1106, column: 9, scope: !18497)
!18503 = !DILocation(line: 139, column: 13, scope: !18504, inlinedAt: !18502)
!18504 = distinct !DILexicalBlock(scope: !18505, file: !3883, line: 138, column: 10)
!18505 = distinct !DILexicalBlock(scope: !18506, file: !3883, line: 136, column: 7)
!18506 = distinct !DILexicalBlock(scope: !16622, file: !3883, line: 134, column: 17)
!18507 = !DILocation(line: 1106, column: 2, scope: !18497)
!18508 = distinct !DISubprogram(name: "k_yield", scope: !5243, file: !5243, line: 140, type: !323, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!18509 = !DILocation(line: 148, column: 2, scope: !18510)
!18510 = distinct !DILexicalBlock(scope: !18508, file: !5243, line: 148, column: 2)
!18511 = !{i64 2152266562}
!18512 = !DILocation(line: 149, column: 2, scope: !18508)
!18513 = !DILocation(line: 150, column: 1, scope: !18508)
!18514 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2918, file: !2918, line: 1495, type: !18515, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18517)
!18515 = !DISubroutineType(types: !18516)
!18516 = !{!320, !103}
!18517 = !{!18518, !18519}
!18518 = !DILocalVariable(name: "us", arg: 1, scope: !18514, file: !2918, line: 1495, type: !103)
!18519 = !DILocalVariable(name: "ticks", scope: !18514, file: !2918, line: 1497, type: !320)
!18520 = !DILocation(line: 0, scope: !18514)
!18521 = !DILocation(line: 1501, column: 31, scope: !18514)
!18522 = !DILocation(line: 1501, column: 10, scope: !18514)
!18523 = !DILocation(line: 1502, column: 23, scope: !18514)
!18524 = !DILocation(line: 1502, column: 10, scope: !18514)
!18525 = !DILocation(line: 1506, column: 31, scope: !18514)
!18526 = !DILocation(line: 1506, column: 9, scope: !18514)
!18527 = !DILocation(line: 1506, column: 2, scope: !18514)
!18528 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3883, file: !3883, line: 571, type: !3884, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18529)
!18529 = !{!18530}
!18530 = !DILocalVariable(name: "t", arg: 1, scope: !18528, file: !3883, line: 571, type: !112)
!18531 = !DILocation(line: 0, scope: !18528)
!18532 = !DILocation(line: 0, scope: !16601, inlinedAt: !18533)
!18533 = distinct !DILocation(line: 574, column: 9, scope: !18528)
!18534 = !DILocation(line: 135, column: 5, scope: !18506, inlinedAt: !18533)
!18535 = !DILocation(line: 139, column: 13, scope: !18504, inlinedAt: !18533)
!18536 = !DILocation(line: 574, column: 2, scope: !18528)
!18537 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3883, file: !3883, line: 1187, type: !3884, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18538)
!18538 = !{!18539}
!18539 = !DILocalVariable(name: "t", arg: 1, scope: !18537, file: !3883, line: 1187, type: !112)
!18540 = !DILocation(line: 0, scope: !18537)
!18541 = !DILocation(line: 0, scope: !16601, inlinedAt: !18542)
!18542 = distinct !DILocation(line: 1190, column: 9, scope: !18537)
!18543 = !DILocation(line: 145, column: 13, scope: !18544, inlinedAt: !18542)
!18544 = distinct !DILexicalBlock(scope: !16619, file: !3883, line: 144, column: 10)
!18545 = !DILocation(line: 1190, column: 2, scope: !18537)
!18546 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2918, file: !2918, line: 1517, type: !18417, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18547)
!18547 = !{!18548}
!18548 = !DILocalVariable(name: "thread", arg: 1, scope: !18546, file: !2918, line: 1517, type: !18275)
!18549 = !DILocation(line: 0, scope: !18546)
!18550 = !DILocation(line: 1521, column: 6, scope: !18551)
!18551 = distinct !DILexicalBlock(scope: !18546, file: !2918, line: 1521, column: 6)
!18552 = !DILocation(line: 1521, column: 6, scope: !18546)
!18553 = !DILocation(line: 1525, column: 6, scope: !18554)
!18554 = distinct !DILexicalBlock(scope: !18546, file: !2918, line: 1525, column: 6)
!18555 = !DILocation(line: 1525, column: 37, scope: !18554)
!18556 = !DILocation(line: 1525, column: 6, scope: !18546)
!18557 = !DILocation(line: 1527, column: 20, scope: !18558)
!18558 = distinct !DILexicalBlock(scope: !18559, file: !2918, line: 1527, column: 7)
!18559 = distinct !DILexicalBlock(scope: !18554, file: !2918, line: 1525, column: 42)
!18560 = !DILocation(line: 1527, column: 33, scope: !18558)
!18561 = !DILocation(line: 1527, column: 7, scope: !18559)
!18562 = !DILocation(line: 1532, column: 2, scope: !18546)
!18563 = !DILocation(line: 1533, column: 2, scope: !18546)
!18564 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !18565)
!18565 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !18566)
!18566 = distinct !DILocation(line: 1537, column: 7, scope: !18567)
!18567 = distinct !DILexicalBlock(scope: !18546, file: !2918, line: 1537, column: 6)
!18568 = !DILocation(line: 0, scope: !17266, inlinedAt: !18565)
!18569 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !18566)
!18570 = !DILocation(line: 1537, column: 6, scope: !18546)
!18571 = !DILocation(line: 1538, column: 3, scope: !18572)
!18572 = distinct !DILexicalBlock(scope: !18567, file: !2918, line: 1537, column: 25)
!18573 = !DILocation(line: 1539, column: 2, scope: !18572)
!18574 = !DILocation(line: 1540, column: 1, scope: !18546)
!18575 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !14864, file: !14864, line: 101, type: !16682, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18576)
!18576 = !{!18577}
!18577 = !DILocalVariable(name: "thread", arg: 1, scope: !18575, file: !14864, line: 101, type: !2811)
!18578 = !DILocation(line: 0, scope: !18575)
!18579 = !DILocation(line: 103, column: 23, scope: !18575)
!18580 = !DILocation(line: 103, column: 36, scope: !18575)
!18581 = !DILocation(line: 103, column: 55, scope: !18575)
!18582 = !DILocation(line: 103, column: 2, scope: !18575)
!18583 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2918, file: !2918, line: 1567, type: !18584, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18586)
!18584 = !DISubroutineType(types: !18585)
!18585 = !{!18275}
!18586 = !{!18587}
!18587 = !DILocalVariable(name: "ret", scope: !18583, file: !2918, line: 1577, type: !18275)
!18588 = !DILocation(line: 1577, column: 30, scope: !18583)
!18589 = !DILocation(line: 0, scope: !18583)
!18590 = !DILocation(line: 1582, column: 2, scope: !18583)
!18591 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2918, file: !2918, line: 1593, type: !9146, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !2512)
!18592 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !18593)
!18593 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !18594)
!18594 = distinct !DILocation(line: 1595, column: 10, scope: !18591)
!18595 = !DILocation(line: 0, scope: !17266, inlinedAt: !18593)
!18596 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !18594)
!18597 = !DILocation(line: 1595, column: 27, scope: !18591)
!18598 = !DILocation(line: 1595, column: 41, scope: !18591)
!18599 = !DILocation(line: 1595, column: 30, scope: !18591)
!18600 = !DILocation(line: 1595, column: 2, scope: !18591)
!18601 = distinct !DISubprogram(name: "z_thread_abort", scope: !2918, file: !2918, line: 1725, type: !16499, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18602)
!18602 = !{!18603, !18604}
!18603 = !DILocalVariable(name: "thread", arg: 1, scope: !18601, file: !2918, line: 1725, type: !2811)
!18604 = !DILocalVariable(name: "key", scope: !18601, file: !2918, line: 1727, type: !16533)
!18605 = !DILocation(line: 0, scope: !18601)
!18606 = !DILocation(line: 0, scope: !16541, inlinedAt: !18607)
!18607 = distinct !DILocation(line: 1727, column: 25, scope: !18601)
!18608 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !18609)
!18609 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !18607)
!18610 = !DILocation(line: 0, scope: !16550, inlinedAt: !18609)
!18611 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !18607)
!18612 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !18607)
!18613 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !18607)
!18614 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !18607)
!18615 = !DILocation(line: 1729, column: 20, scope: !18616)
!18616 = distinct !DILexicalBlock(scope: !18601, file: !2918, line: 1729, column: 6)
!18617 = !DILocation(line: 1729, column: 33, scope: !18616)
!18618 = !DILocation(line: 1729, column: 48, scope: !18616)
!18619 = !DILocation(line: 1729, column: 6, scope: !18601)
!18620 = !DILocation(line: 0, scope: !16575, inlinedAt: !18621)
!18621 = distinct !DILocation(line: 1730, column: 3, scope: !18622)
!18622 = distinct !DILexicalBlock(scope: !18616, file: !2918, line: 1729, column: 54)
!18623 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !18621)
!18624 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !18621)
!18625 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !18621)
!18626 = !DILocation(line: 0, scope: !16589, inlinedAt: !18627)
!18627 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !18621)
!18628 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !18627)
!18629 = !DILocation(line: 1731, column: 3, scope: !18630)
!18630 = distinct !DILexicalBlock(scope: !18631, file: !2918, line: 1731, column: 3)
!18631 = distinct !DILexicalBlock(scope: !18632, file: !2918, line: 1731, column: 3)
!18632 = distinct !DILexicalBlock(scope: !18622, file: !2918, line: 1731, column: 3)
!18633 = !DILocation(line: 1736, column: 20, scope: !18634)
!18634 = distinct !DILexicalBlock(scope: !18601, file: !2918, line: 1736, column: 6)
!18635 = !DILocation(line: 1736, column: 33, scope: !18634)
!18636 = !DILocation(line: 1736, column: 49, scope: !18634)
!18637 = !DILocation(line: 1736, column: 6, scope: !18601)
!18638 = !DILocation(line: 0, scope: !16575, inlinedAt: !18639)
!18639 = distinct !DILocation(line: 1737, column: 3, scope: !18640)
!18640 = distinct !DILexicalBlock(scope: !18634, file: !2918, line: 1736, column: 56)
!18641 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !18639)
!18642 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !18639)
!18643 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !18639)
!18644 = !DILocation(line: 0, scope: !16589, inlinedAt: !18645)
!18645 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !18639)
!18646 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !18645)
!18647 = !DILocation(line: 1738, column: 3, scope: !18640)
!18648 = !DILocation(line: 1775, column: 2, scope: !18601)
!18649 = !DILocation(line: 1776, column: 16, scope: !18650)
!18650 = distinct !DILexicalBlock(scope: !18601, file: !2918, line: 1776, column: 6)
!18651 = !DILocation(line: 1776, column: 13, scope: !18650)
!18652 = !DILocation(line: 1776, column: 25, scope: !18650)
!18653 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !18654)
!18654 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !18655)
!18655 = distinct !DILocation(line: 1776, column: 29, scope: !18650)
!18656 = !DILocation(line: 0, scope: !17266, inlinedAt: !18654)
!18657 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !18655)
!18658 = !DILocation(line: 1776, column: 6, scope: !18601)
!18659 = !DILocation(line: 0, scope: !17217, inlinedAt: !18660)
!18660 = distinct !DILocation(line: 1777, column: 3, scope: !18661)
!18661 = distinct !DILexicalBlock(scope: !18650, file: !2918, line: 1776, column: 47)
!18662 = !DILocation(line: 0, scope: !17226, inlinedAt: !18663)
!18663 = distinct !DILocation(line: 195, column: 2, scope: !17217, inlinedAt: !18660)
!18664 = !DILocation(line: 225, column: 2, scope: !17233, inlinedAt: !18663)
!18665 = !DILocation(line: 225, column: 2, scope: !17234, inlinedAt: !18663)
!18666 = !DILocation(line: 225, column: 2, scope: !17237, inlinedAt: !18663)
!18667 = !DILocation(line: 196, column: 9, scope: !17217, inlinedAt: !18660)
!18668 = !DILocation(line: 1778, column: 3, scope: !18669)
!18669 = distinct !DILexicalBlock(scope: !18670, file: !2918, line: 1778, column: 3)
!18670 = distinct !DILexicalBlock(scope: !18671, file: !2918, line: 1778, column: 3)
!18671 = distinct !DILexicalBlock(scope: !18661, file: !2918, line: 1778, column: 3)
!18672 = !DILocation(line: 0, scope: !16575, inlinedAt: !18673)
!18673 = distinct !DILocation(line: 1780, column: 2, scope: !18601)
!18674 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !18673)
!18675 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !18673)
!18676 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !18673)
!18677 = !DILocation(line: 0, scope: !16589, inlinedAt: !18678)
!18678 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !18673)
!18679 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !18678)
!18680 = !DILocation(line: 1781, column: 1, scope: !18601)
!18681 = distinct !DISubprogram(name: "end_thread", scope: !2918, file: !2918, line: 1690, type: !16499, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18682)
!18682 = !{!18683}
!18683 = !DILocalVariable(name: "thread", arg: 1, scope: !18681, file: !2918, line: 1690, type: !2811)
!18684 = !DILocation(line: 0, scope: !18681)
!18685 = !DILocation(line: 1695, column: 20, scope: !18686)
!18686 = distinct !DILexicalBlock(scope: !18681, file: !2918, line: 1695, column: 6)
!18687 = !DILocation(line: 1695, column: 33, scope: !18686)
!18688 = !DILocation(line: 1695, column: 49, scope: !18686)
!18689 = !DILocation(line: 1695, column: 6, scope: !18681)
!18690 = !DILocation(line: 1697, column: 29, scope: !18691)
!18691 = distinct !DILexicalBlock(scope: !18686, file: !2918, line: 1695, column: 56)
!18692 = !DILocation(line: 1698, column: 7, scope: !18693)
!18693 = distinct !DILexicalBlock(scope: !18691, file: !2918, line: 1698, column: 7)
!18694 = !DILocation(line: 1698, column: 7, scope: !18691)
!18695 = !DILocation(line: 0, scope: !16733, inlinedAt: !18696)
!18696 = distinct !DILocation(line: 1699, column: 4, scope: !18697)
!18697 = distinct !DILexicalBlock(scope: !18693, file: !2918, line: 1698, column: 35)
!18698 = !DILocation(line: 266, column: 28, scope: !16733, inlinedAt: !18696)
!18699 = !DILocation(line: 0, scope: !16741, inlinedAt: !18700)
!18700 = distinct !DILocation(line: 268, column: 3, scope: !16745, inlinedAt: !18696)
!18701 = !DILocation(line: 234, column: 2, scope: !16741, inlinedAt: !18700)
!18702 = !DILocation(line: 1700, column: 3, scope: !18697)
!18703 = !DILocation(line: 1701, column: 20, scope: !18704)
!18704 = distinct !DILexicalBlock(scope: !18691, file: !2918, line: 1701, column: 7)
!18705 = !DILocation(line: 1701, column: 30, scope: !18704)
!18706 = !DILocation(line: 1701, column: 7, scope: !18691)
!18707 = !DILocation(line: 1702, column: 4, scope: !18708)
!18708 = distinct !DILexicalBlock(scope: !18704, file: !2918, line: 1701, column: 39)
!18709 = !DILocation(line: 1703, column: 3, scope: !18708)
!18710 = !DILocation(line: 1704, column: 9, scope: !18691)
!18711 = !DILocation(line: 1705, column: 23, scope: !18691)
!18712 = !DILocation(line: 1705, column: 3, scope: !18691)
!18713 = !DILocation(line: 1706, column: 3, scope: !18691)
!18714 = !DILocation(line: 1722, column: 2, scope: !18691)
!18715 = !DILocation(line: 1723, column: 1, scope: !18681)
!18716 = distinct !DISubprogram(name: "unpend_all", scope: !2918, file: !2918, line: 1674, type: !18717, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18719)
!18717 = !DISubroutineType(types: !18718)
!18718 = !{null, !2842}
!18719 = !{!18720, !18721}
!18720 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18716, file: !2918, line: 1674, type: !2842)
!18721 = !DILocalVariable(name: "thread", scope: !18716, file: !2918, line: 1676, type: !2811)
!18722 = !DILocation(line: 0, scope: !18716)
!18723 = !DILocation(line: 1678, column: 19, scope: !18716)
!18724 = !DILocation(line: 1678, column: 41, scope: !18716)
!18725 = !DILocation(line: 1678, column: 2, scope: !18716)
!18726 = !DILocation(line: 1679, column: 3, scope: !18727)
!18727 = distinct !DILexicalBlock(scope: !18716, file: !2918, line: 1678, column: 50)
!18728 = !DILocation(line: 1680, column: 9, scope: !18727)
!18729 = !DILocalVariable(name: "thread", arg: 1, scope: !18730, file: !14884, line: 65, type: !2811)
!18730 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !14884, file: !14884, line: 65, type: !18731, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18733)
!18731 = !DISubroutineType(types: !18732)
!18732 = !{null, !2811, !32}
!18733 = !{!18729, !18734}
!18734 = !DILocalVariable(name: "value", arg: 2, scope: !18730, file: !14884, line: 65, type: !32)
!18735 = !DILocation(line: 0, scope: !18730, inlinedAt: !18736)
!18736 = distinct !DILocation(line: 1681, column: 3, scope: !18727)
!18737 = !DILocation(line: 67, column: 15, scope: !18730, inlinedAt: !18736)
!18738 = !DILocation(line: 67, column: 33, scope: !18730, inlinedAt: !18736)
!18739 = !DILocation(line: 1682, column: 3, scope: !18727)
!18740 = distinct !{!18740, !18725, !18741}
!18741 = !DILocation(line: 1683, column: 2, scope: !18716)
!18742 = !DILocation(line: 1684, column: 1, scope: !18716)
!18743 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2918, file: !2918, line: 1794, type: !18744, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18746)
!18744 = !DISubroutineType(types: !18745)
!18745 = !{!103, !2811, !17427}
!18746 = !{!18747, !18748, !18749, !18750}
!18747 = !DILocalVariable(name: "thread", arg: 1, scope: !18743, file: !2918, line: 1794, type: !2811)
!18748 = !DILocalVariable(name: "timeout", arg: 2, scope: !18743, file: !2918, line: 1794, type: !17427)
!18749 = !DILocalVariable(name: "key", scope: !18743, file: !2918, line: 1796, type: !16533)
!18750 = !DILocalVariable(name: "ret", scope: !18743, file: !2918, line: 1797, type: !103)
!18751 = !DILocation(line: 0, scope: !18743)
!18752 = !DILocation(line: 0, scope: !16541, inlinedAt: !18753)
!18753 = distinct !DILocation(line: 1796, column: 25, scope: !18743)
!18754 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !18755)
!18755 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !18753)
!18756 = !DILocation(line: 0, scope: !16550, inlinedAt: !18755)
!18757 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !18753)
!18758 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !18753)
!18759 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !18753)
!18760 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !18753)
!18761 = !DILocation(line: 1801, column: 20, scope: !18762)
!18762 = distinct !DILexicalBlock(scope: !18743, file: !2918, line: 1801, column: 6)
!18763 = !DILocation(line: 1801, column: 33, scope: !18762)
!18764 = !DILocation(line: 1801, column: 49, scope: !18762)
!18765 = !DILocation(line: 1801, column: 6, scope: !18743)
!18766 = !DILocation(line: 1803, column: 13, scope: !18767)
!18767 = distinct !DILexicalBlock(scope: !18762, file: !2918, line: 1803, column: 13)
!18768 = !DILocation(line: 1803, column: 13, scope: !18762)
!18769 = !DILocation(line: 1805, column: 24, scope: !18770)
!18770 = distinct !DILexicalBlock(scope: !18767, file: !2918, line: 1805, column: 13)
!18771 = !DILocation(line: 1805, column: 21, scope: !18770)
!18772 = !DILocation(line: 1805, column: 34, scope: !18770)
!18773 = !DILocation(line: 1806, column: 20, scope: !18770)
!18774 = !DILocation(line: 1806, column: 44, scope: !18770)
!18775 = !DILocation(line: 1806, column: 30, scope: !18770)
!18776 = !DILocation(line: 1805, column: 13, scope: !18767)
!18777 = !DILocation(line: 1031, column: 3, scope: !17266, inlinedAt: !18778)
!18778 = distinct !DILocation(line: 48, column: 10, scope: !17270, inlinedAt: !18779)
!18779 = distinct !DILocation(line: 1809, column: 3, scope: !18780)
!18780 = distinct !DILexicalBlock(scope: !18781, file: !2918, line: 1809, column: 3)
!18781 = distinct !DILexicalBlock(scope: !18782, file: !2918, line: 1809, column: 3)
!18782 = distinct !DILexicalBlock(scope: !18770, file: !2918, line: 1808, column: 9)
!18783 = !DILocation(line: 0, scope: !17266, inlinedAt: !18778)
!18784 = !DILocation(line: 48, column: 9, scope: !17270, inlinedAt: !18779)
!18785 = !DILocation(line: 1809, column: 3, scope: !18781)
!18786 = !DILocation(line: 1809, column: 3, scope: !18787)
!18787 = distinct !DILexicalBlock(scope: !18780, file: !2918, line: 1809, column: 3)
!18788 = !DILocation(line: 1810, column: 23, scope: !18782)
!18789 = !DILocation(line: 1810, column: 42, scope: !18782)
!18790 = !DILocation(line: 1810, column: 3, scope: !18782)
!18791 = !DILocation(line: 1811, column: 22, scope: !18782)
!18792 = !DILocation(line: 1811, column: 3, scope: !18782)
!18793 = !DILocation(line: 0, scope: !17217, inlinedAt: !18794)
!18794 = distinct !DILocation(line: 1814, column: 9, scope: !18782)
!18795 = !DILocation(line: 0, scope: !17226, inlinedAt: !18796)
!18796 = distinct !DILocation(line: 195, column: 2, scope: !17217, inlinedAt: !18794)
!18797 = !DILocation(line: 225, column: 2, scope: !17233, inlinedAt: !18796)
!18798 = !DILocation(line: 225, column: 2, scope: !17234, inlinedAt: !18796)
!18799 = !DILocation(line: 225, column: 2, scope: !17237, inlinedAt: !18796)
!18800 = !DILocation(line: 196, column: 9, scope: !17217, inlinedAt: !18794)
!18801 = !DILocation(line: 1817, column: 3, scope: !18782)
!18802 = !DILocation(line: 0, scope: !18762)
!18803 = !DILocation(line: 0, scope: !16575, inlinedAt: !18804)
!18804 = distinct !DILocation(line: 1822, column: 2, scope: !18743)
!18805 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !18804)
!18806 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !18804)
!18807 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !18804)
!18808 = !DILocation(line: 0, scope: !16589, inlinedAt: !18809)
!18809 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !18804)
!18810 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !18809)
!18811 = !DILocation(line: 1823, column: 2, scope: !18743)
!18812 = !DILocation(line: 1824, column: 1, scope: !18743)
!18813 = distinct !DISubprogram(name: "z_sched_wake", scope: !2918, file: !2918, line: 1882, type: !18814, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18816)
!18814 = !DISubroutineType(types: !18815)
!18815 = !{!122, !2842, !103, !102}
!18816 = !{!18817, !18818, !18819, !18820, !18821, !18822, !18824}
!18817 = !DILocalVariable(name: "wait_q", arg: 1, scope: !18813, file: !2918, line: 1882, type: !2842)
!18818 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !18813, file: !2918, line: 1882, type: !103)
!18819 = !DILocalVariable(name: "swap_data", arg: 3, scope: !18813, file: !2918, line: 1882, type: !102)
!18820 = !DILocalVariable(name: "thread", scope: !18813, file: !2918, line: 1884, type: !2811)
!18821 = !DILocalVariable(name: "ret", scope: !18813, file: !2918, line: 1885, type: !122)
!18822 = !DILocalVariable(name: "__i", scope: !18823, file: !2918, line: 1887, type: !16533)
!18823 = distinct !DILexicalBlock(scope: !18813, file: !2918, line: 1887, column: 2)
!18824 = !DILocalVariable(name: "__key", scope: !18823, file: !2918, line: 1887, type: !16533)
!18825 = !DILocation(line: 0, scope: !18813)
!18826 = !DILocation(line: 0, scope: !18823)
!18827 = !DILocation(line: 0, scope: !16541, inlinedAt: !18828)
!18828 = distinct !DILocation(line: 1887, column: 2, scope: !18823)
!18829 = !DILocation(line: 55, column: 2, scope: !16550, inlinedAt: !18830)
!18830 = distinct !DILocation(line: 145, column: 10, scope: !16541, inlinedAt: !18828)
!18831 = !DILocation(line: 0, scope: !16550, inlinedAt: !18830)
!18832 = !DILocation(line: 148, column: 2, scope: !16558, inlinedAt: !18828)
!18833 = !DILocation(line: 148, column: 2, scope: !16559, inlinedAt: !18828)
!18834 = !DILocation(line: 148, column: 2, scope: !16562, inlinedAt: !18828)
!18835 = !DILocation(line: 160, column: 2, scope: !16541, inlinedAt: !18828)
!18836 = !DILocation(line: 1888, column: 12, scope: !18837)
!18837 = distinct !DILexicalBlock(scope: !18838, file: !2918, line: 1887, column: 26)
!18838 = distinct !DILexicalBlock(scope: !18823, file: !2918, line: 1887, column: 2)
!18839 = !DILocation(line: 1890, column: 14, scope: !18840)
!18840 = distinct !DILexicalBlock(scope: !18837, file: !2918, line: 1890, column: 7)
!18841 = !DILocation(line: 1890, column: 7, scope: !18837)
!18842 = !DILocalVariable(name: "thread", arg: 1, scope: !18843, file: !15727, line: 134, type: !2811)
!18843 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !15727, file: !15727, line: 134, type: !18844, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18846)
!18844 = !DISubroutineType(types: !18845)
!18845 = !{null, !2811, !32, !102}
!18846 = !{!18842, !18847, !18848}
!18847 = !DILocalVariable(name: "value", arg: 2, scope: !18843, file: !15727, line: 135, type: !32)
!18848 = !DILocalVariable(name: "data", arg: 3, scope: !18843, file: !15727, line: 136, type: !102)
!18849 = !DILocation(line: 0, scope: !18843, inlinedAt: !18850)
!18850 = distinct !DILocation(line: 1891, column: 4, scope: !18851)
!18851 = distinct !DILexicalBlock(scope: !18840, file: !2918, line: 1890, column: 23)
!18852 = !DILocation(line: 0, scope: !18730, inlinedAt: !18853)
!18853 = distinct !DILocation(line: 138, column: 2, scope: !18843, inlinedAt: !18850)
!18854 = !DILocation(line: 67, column: 15, scope: !18730, inlinedAt: !18853)
!18855 = !DILocation(line: 67, column: 33, scope: !18730, inlinedAt: !18853)
!18856 = !DILocation(line: 139, column: 15, scope: !18843, inlinedAt: !18850)
!18857 = !DILocation(line: 139, column: 25, scope: !18843, inlinedAt: !18850)
!18858 = !DILocation(line: 1894, column: 4, scope: !18851)
!18859 = !DILocation(line: 1895, column: 10, scope: !18851)
!18860 = !DILocation(line: 1896, column: 4, scope: !18851)
!18861 = !DILocation(line: 1898, column: 3, scope: !18851)
!18862 = !DILocation(line: 0, scope: !16575, inlinedAt: !18863)
!18863 = distinct !DILocation(line: 1887, column: 2, scope: !18838)
!18864 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !18863)
!18865 = !DILocation(line: 194, column: 2, scope: !16584, inlinedAt: !18863)
!18866 = !DILocation(line: 194, column: 2, scope: !16587, inlinedAt: !18863)
!18867 = !DILocation(line: 0, scope: !16589, inlinedAt: !18868)
!18868 = distinct !DILocation(line: 215, column: 2, scope: !16575, inlinedAt: !18863)
!18869 = !DILocation(line: 95, column: 2, scope: !16589, inlinedAt: !18868)
!18870 = !DILocation(line: 1901, column: 2, scope: !18813)
!18871 = distinct !DISubprogram(name: "z_sched_wait", scope: !2918, file: !2918, line: 1904, type: !18872, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !18875)
!18872 = !DISubroutineType(types: !18873)
!18873 = !{!103, !16544, !16533, !2842, !17427, !18874}
!18874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!18875 = !{!18876, !18877, !18878, !18879, !18880, !18881}
!18876 = !DILocalVariable(name: "lock", arg: 1, scope: !18871, file: !2918, line: 1904, type: !16544)
!18877 = !DILocalVariable(name: "key", arg: 2, scope: !18871, file: !2918, line: 1904, type: !16533)
!18878 = !DILocalVariable(name: "wait_q", arg: 3, scope: !18871, file: !2918, line: 1905, type: !2842)
!18879 = !DILocalVariable(name: "timeout", arg: 4, scope: !18871, file: !2918, line: 1905, type: !17427)
!18880 = !DILocalVariable(name: "data", arg: 5, scope: !18871, file: !2918, line: 1905, type: !18874)
!18881 = !DILocalVariable(name: "ret", scope: !18871, file: !2918, line: 1907, type: !103)
!18882 = !DILocation(line: 0, scope: !18871)
!18883 = !DILocation(line: 1907, column: 12, scope: !18871)
!18884 = !DILocation(line: 1909, column: 11, scope: !18885)
!18885 = distinct !DILexicalBlock(scope: !18871, file: !2918, line: 1909, column: 6)
!18886 = !DILocation(line: 1909, column: 6, scope: !18871)
!18887 = !DILocation(line: 1910, column: 11, scope: !18888)
!18888 = distinct !DILexicalBlock(scope: !18885, file: !2918, line: 1909, column: 20)
!18889 = !DILocation(line: 1910, column: 26, scope: !18888)
!18890 = !DILocation(line: 1910, column: 9, scope: !18888)
!18891 = !DILocation(line: 1911, column: 2, scope: !18888)
!18892 = !DILocation(line: 1912, column: 2, scope: !18871)
!18893 = distinct !DISubprogram(name: "z_data_copy", scope: !18894, file: !18894, line: 22, type: !323, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3697, retainedNodes: !2512)
!18894 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18895 = !DILocation(line: 24, column: 2, scope: !18893)
!18896 = !DILocation(line: 27, column: 2, scope: !18893)
!18897 = !DILocation(line: 71, column: 1, scope: !18893)
!18898 = distinct !DISubprogram(name: "z_add_timeout", scope: !2955, file: !2955, line: 88, type: !18899, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !18905)
!18899 = !DISubroutineType(types: !18900)
!18900 = !{null, !2928, !2947, !18901}
!18901 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !18902)
!18902 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !18903)
!18903 = !{!18904}
!18904 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !18902, file: !105, line: 66, baseType: !104, size: 64)
!18905 = !{!18906, !18907, !18908, !18909, !18915, !18916, !18919, !18922}
!18906 = !DILocalVariable(name: "to", arg: 1, scope: !18898, file: !2955, line: 88, type: !2928)
!18907 = !DILocalVariable(name: "fn", arg: 2, scope: !18898, file: !2955, line: 88, type: !2947)
!18908 = !DILocalVariable(name: "timeout", arg: 3, scope: !18898, file: !2955, line: 89, type: !18901)
!18909 = !DILocalVariable(name: "__i", scope: !18910, file: !2955, line: 102, type: !18911)
!18910 = distinct !DILexicalBlock(scope: !18898, file: !2955, line: 102, column: 2)
!18911 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !18912)
!18912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !18913)
!18913 = !{!18914}
!18914 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !18912, file: !152, line: 33, baseType: !103, size: 32)
!18915 = !DILocalVariable(name: "__key", scope: !18910, file: !2955, line: 102, type: !18911)
!18916 = !DILocalVariable(name: "t", scope: !18917, file: !2955, line: 103, type: !2928)
!18917 = distinct !DILexicalBlock(scope: !18918, file: !2955, line: 102, column: 24)
!18918 = distinct !DILexicalBlock(scope: !18910, file: !2955, line: 102, column: 2)
!18919 = !DILocalVariable(name: "ticks", scope: !18920, file: !2955, line: 107, type: !104)
!18920 = distinct !DILexicalBlock(scope: !18921, file: !2955, line: 106, column: 39)
!18921 = distinct !DILexicalBlock(scope: !18917, file: !2955, line: 105, column: 7)
!18922 = !DILocalVariable(name: "next_time", scope: !18923, file: !2955, line: 137, type: !320)
!18923 = distinct !DILexicalBlock(scope: !18924, file: !2955, line: 127, column: 22)
!18924 = distinct !DILexicalBlock(scope: !18917, file: !2955, line: 127, column: 7)
!18925 = !DILocation(line: 0, scope: !18898)
!18926 = !DILocation(line: 91, column: 6, scope: !18927)
!18927 = distinct !DILexicalBlock(scope: !18898, file: !2955, line: 91, column: 6)
!18928 = !DILocation(line: 91, column: 6, scope: !18898)
!18929 = !DILocation(line: 99, column: 2, scope: !18930)
!18930 = distinct !DILexicalBlock(scope: !18931, file: !2955, line: 99, column: 2)
!18931 = distinct !DILexicalBlock(scope: !18898, file: !2955, line: 99, column: 2)
!18932 = !DILocation(line: 99, column: 2, scope: !18931)
!18933 = !DILocation(line: 99, column: 2, scope: !18934)
!18934 = distinct !DILexicalBlock(scope: !18930, file: !2955, line: 99, column: 2)
!18935 = !DILocation(line: 100, column: 6, scope: !18898)
!18936 = !DILocation(line: 100, column: 9, scope: !18898)
!18937 = !DILocation(line: 0, scope: !18910)
!18938 = !DILocalVariable(name: "l", arg: 1, scope: !18939, file: !152, line: 136, type: !18942)
!18939 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !18940, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !18943)
!18940 = !DISubroutineType(types: !18941)
!18941 = !{!18911, !18942}
!18942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 32)
!18943 = !{!18938, !18944}
!18944 = !DILocalVariable(name: "k", scope: !18939, file: !152, line: 139, type: !18911)
!18945 = !DILocation(line: 0, scope: !18939, inlinedAt: !18946)
!18946 = distinct !DILocation(line: 102, column: 2, scope: !18910)
!18947 = !DILocation(line: 55, column: 2, scope: !18948, inlinedAt: !18952)
!18948 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !18949)
!18949 = !{!18950, !18951}
!18950 = !DILocalVariable(name: "key", scope: !18948, file: !7496, line: 44, type: !32)
!18951 = !DILocalVariable(name: "tmp", scope: !18948, file: !7496, line: 53, type: !32)
!18952 = distinct !DILocation(line: 145, column: 10, scope: !18939, inlinedAt: !18946)
!18953 = !{i64 1658057}
!18954 = !DILocation(line: 0, scope: !18948, inlinedAt: !18952)
!18955 = !DILocation(line: 148, column: 2, scope: !18956, inlinedAt: !18946)
!18956 = distinct !DILexicalBlock(scope: !18957, file: !152, line: 148, column: 2)
!18957 = distinct !DILexicalBlock(scope: !18939, file: !152, line: 148, column: 2)
!18958 = !DILocation(line: 148, column: 2, scope: !18957, inlinedAt: !18946)
!18959 = !DILocation(line: 148, column: 2, scope: !18960, inlinedAt: !18946)
!18960 = distinct !DILexicalBlock(scope: !18956, file: !152, line: 148, column: 2)
!18961 = !DILocation(line: 160, column: 2, scope: !18939, inlinedAt: !18946)
!18962 = !DILocation(line: 106, column: 33, scope: !18921)
!18963 = !DILocation(line: 105, column: 7, scope: !18917)
!18964 = !DILocation(line: 107, column: 50, scope: !18920)
!18965 = !DILocation(line: 107, column: 48, scope: !18920)
!18966 = !DILocation(line: 0, scope: !18920)
!18967 = !DILocation(line: 109, column: 17, scope: !18920)
!18968 = !DILocation(line: 110, column: 3, scope: !18920)
!18969 = !DILocation(line: 111, column: 31, scope: !18970)
!18970 = distinct !DILexicalBlock(scope: !18921, file: !2955, line: 110, column: 10)
!18971 = !DILocation(line: 111, column: 37, scope: !18970)
!18972 = !DILocation(line: 111, column: 35, scope: !18970)
!18973 = !DILocation(line: 0, scope: !18921)
!18974 = !DILocation(line: 109, column: 8, scope: !18920)
!18975 = !DILocation(line: 109, column: 15, scope: !18920)
!18976 = !DILocation(line: 114, column: 12, scope: !18977)
!18977 = distinct !DILexicalBlock(scope: !18917, file: !2955, line: 114, column: 3)
!18978 = !DILocation(line: 0, scope: !18917)
!18979 = !DILocation(line: 114, column: 3, scope: !18977)
!18980 = !DILocation(line: 115, column: 24, scope: !18981)
!18981 = distinct !DILexicalBlock(scope: !18982, file: !2955, line: 115, column: 8)
!18982 = distinct !DILexicalBlock(scope: !18983, file: !2955, line: 114, column: 45)
!18983 = distinct !DILexicalBlock(scope: !18977, file: !2955, line: 114, column: 3)
!18984 = !DILocation(line: 115, column: 11, scope: !18981)
!18985 = !DILocation(line: 115, column: 18, scope: !18981)
!18986 = !DILocation(line: 115, column: 8, scope: !18982)
!18987 = !DILocation(line: 116, column: 15, scope: !18988)
!18988 = distinct !DILexicalBlock(scope: !18981, file: !2955, line: 115, column: 32)
!18989 = !DILocation(line: 117, column: 26, scope: !18988)
!18990 = !DILocation(line: 117, column: 5, scope: !18988)
!18991 = !DILocation(line: 123, column: 7, scope: !18917)
!18992 = !DILocation(line: 120, column: 15, scope: !18982)
!18993 = !DILocation(line: 114, column: 36, scope: !18983)
!18994 = distinct !{!18994, !18979, !18995}
!18995 = !DILocation(line: 121, column: 3, scope: !18977)
!18996 = !DILocation(line: 124, column: 4, scope: !18997)
!18997 = distinct !DILexicalBlock(scope: !18998, file: !2955, line: 123, column: 18)
!18998 = distinct !DILexicalBlock(scope: !18917, file: !2955, line: 123, column: 7)
!18999 = !DILocation(line: 125, column: 3, scope: !18997)
!19000 = !DILocation(line: 127, column: 13, scope: !18924)
!19001 = !DILocation(line: 127, column: 10, scope: !18924)
!19002 = !DILocation(line: 127, column: 7, scope: !18917)
!19003 = !DILocation(line: 137, column: 24, scope: !18923)
!19004 = !DILocation(line: 0, scope: !18923)
!19005 = !DILocation(line: 139, column: 18, scope: !19006)
!19006 = distinct !DILexicalBlock(scope: !18923, file: !2955, line: 139, column: 8)
!19007 = !DILocation(line: 139, column: 23, scope: !19006)
!19008 = !DILocation(line: 141, column: 5, scope: !19009)
!19009 = distinct !DILexicalBlock(scope: !19006, file: !2955, line: 140, column: 48)
!19010 = !DILocation(line: 142, column: 4, scope: !19009)
!19011 = !DILocalVariable(name: "key", arg: 2, scope: !19012, file: !152, line: 190, type: !18911)
!19012 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !19013, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19015)
!19013 = !DISubroutineType(types: !19014)
!19014 = !{null, !18942, !18911}
!19015 = !{!19016, !19011}
!19016 = !DILocalVariable(name: "l", arg: 1, scope: !19012, file: !152, line: 189, type: !18942)
!19017 = !DILocation(line: 0, scope: !19012, inlinedAt: !19018)
!19018 = distinct !DILocation(line: 102, column: 2, scope: !18918)
!19019 = !DILocation(line: 194, column: 2, scope: !19020, inlinedAt: !19018)
!19020 = distinct !DILexicalBlock(scope: !19021, file: !152, line: 194, column: 2)
!19021 = distinct !DILexicalBlock(scope: !19012, file: !152, line: 194, column: 2)
!19022 = !DILocation(line: 194, column: 2, scope: !19021, inlinedAt: !19018)
!19023 = !DILocation(line: 194, column: 2, scope: !19024, inlinedAt: !19018)
!19024 = distinct !DILexicalBlock(scope: !19020, file: !152, line: 194, column: 2)
!19025 = !DILocalVariable(name: "key", arg: 1, scope: !19026, file: !7496, line: 84, type: !32)
!19026 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19027)
!19027 = !{!19025}
!19028 = !DILocation(line: 0, scope: !19026, inlinedAt: !19029)
!19029 = distinct !DILocation(line: 215, column: 2, scope: !19012, inlinedAt: !19018)
!19030 = !DILocation(line: 95, column: 2, scope: !19026, inlinedAt: !19029)
!19031 = !{i64 1658874}
!19032 = !DILocation(line: 148, column: 1, scope: !18898)
!19033 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !136, file: !136, line: 225, type: !19034, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19038)
!19034 = !DISubroutineType(types: !19035)
!19035 = !{!122, !19036}
!19036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19037, size: 32)
!19037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2932)
!19038 = !{!19039}
!19039 = !DILocalVariable(name: "node", arg: 1, scope: !19033, file: !136, line: 225, type: !19036)
!19040 = !DILocation(line: 0, scope: !19033)
!19041 = !DILocation(line: 227, column: 15, scope: !19033)
!19042 = !DILocation(line: 227, column: 20, scope: !19033)
!19043 = !DILocation(line: 227, column: 2, scope: !19033)
!19044 = distinct !DISubprogram(name: "elapsed", scope: !2955, file: !2955, line: 62, type: !19045, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2512)
!19045 = !DISubroutineType(types: !19046)
!19046 = !{!320}
!19047 = !DILocation(line: 64, column: 9, scope: !19044)
!19048 = !DILocation(line: 64, column: 28, scope: !19044)
!19049 = !DILocation(line: 64, column: 35, scope: !19044)
!19050 = !DILocation(line: 64, column: 2, scope: !19044)
!19051 = distinct !DISubprogram(name: "first", scope: !2955, file: !2955, line: 39, type: !19052, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19054)
!19052 = !DISubroutineType(types: !19053)
!19053 = !{!2928}
!19054 = !{!19055}
!19055 = !DILocalVariable(name: "t", scope: !19051, file: !2955, line: 41, type: !19056)
!19056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 32)
!19057 = !DILocation(line: 41, column: 19, scope: !19051)
!19058 = !DILocation(line: 0, scope: !19051)
!19059 = !DILocation(line: 43, column: 9, scope: !19051)
!19060 = !DILocation(line: 43, column: 2, scope: !19051)
!19061 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !136, file: !136, line: 443, type: !19062, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19064)
!19062 = !DISubroutineType(types: !19063)
!19063 = !{null, !19056, !19056}
!19064 = !{!19065, !19066, !19067}
!19065 = !DILocalVariable(name: "successor", arg: 1, scope: !19061, file: !136, line: 443, type: !19056)
!19066 = !DILocalVariable(name: "node", arg: 2, scope: !19061, file: !136, line: 443, type: !19056)
!19067 = !DILocalVariable(name: "prev", scope: !19061, file: !136, line: 445, type: !19068)
!19068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !19056)
!19069 = !DILocation(line: 0, scope: !19061)
!19070 = !DILocation(line: 445, column: 39, scope: !19061)
!19071 = !DILocation(line: 447, column: 8, scope: !19061)
!19072 = !DILocation(line: 447, column: 13, scope: !19061)
!19073 = !DILocation(line: 448, column: 8, scope: !19061)
!19074 = !DILocation(line: 448, column: 13, scope: !19061)
!19075 = !DILocation(line: 449, column: 8, scope: !19061)
!19076 = !DILocation(line: 449, column: 13, scope: !19061)
!19077 = !DILocation(line: 450, column: 18, scope: !19061)
!19078 = !DILocation(line: 451, column: 1, scope: !19061)
!19079 = distinct !DISubprogram(name: "next", scope: !2955, file: !2955, line: 46, type: !19080, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19082)
!19080 = !DISubroutineType(types: !19081)
!19081 = !{!2928, !2928}
!19082 = !{!19083, !19084}
!19083 = !DILocalVariable(name: "t", arg: 1, scope: !19079, file: !2955, line: 46, type: !2928)
!19084 = !DILocalVariable(name: "n", scope: !19079, file: !2955, line: 48, type: !19056)
!19085 = !DILocation(line: 0, scope: !19079)
!19086 = !DILocation(line: 48, column: 58, scope: !19079)
!19087 = !DILocation(line: 48, column: 19, scope: !19079)
!19088 = !DILocation(line: 50, column: 9, scope: !19079)
!19089 = !DILocation(line: 50, column: 2, scope: !19079)
!19090 = distinct !DISubprogram(name: "sys_dlist_append", scope: !136, file: !136, line: 404, type: !19091, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19094)
!19091 = !DISubroutineType(types: !19092)
!19092 = !{null, !19093, !19056}
!19093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!19094 = !{!19095, !19096, !19097}
!19095 = !DILocalVariable(name: "list", arg: 1, scope: !19090, file: !136, line: 404, type: !19093)
!19096 = !DILocalVariable(name: "node", arg: 2, scope: !19090, file: !136, line: 404, type: !19056)
!19097 = !DILocalVariable(name: "tail", scope: !19090, file: !136, line: 406, type: !19068)
!19098 = !DILocation(line: 0, scope: !19090)
!19099 = !DILocation(line: 406, column: 34, scope: !19090)
!19100 = !DILocation(line: 408, column: 8, scope: !19090)
!19101 = !DILocation(line: 408, column: 13, scope: !19090)
!19102 = !DILocation(line: 409, column: 8, scope: !19090)
!19103 = !DILocation(line: 409, column: 13, scope: !19090)
!19104 = !DILocation(line: 411, column: 8, scope: !19090)
!19105 = !DILocation(line: 411, column: 13, scope: !19090)
!19106 = !DILocation(line: 412, column: 13, scope: !19090)
!19107 = !DILocation(line: 413, column: 1, scope: !19090)
!19108 = distinct !DISubprogram(name: "next_timeout", scope: !2955, file: !2955, line: 67, type: !19045, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19109)
!19109 = !{!19110, !19111, !19112}
!19110 = !DILocalVariable(name: "to", scope: !19108, file: !2955, line: 69, type: !2928)
!19111 = !DILocalVariable(name: "ticks_elapsed", scope: !19108, file: !2955, line: 70, type: !320)
!19112 = !DILocalVariable(name: "ret", scope: !19108, file: !2955, line: 71, type: !320)
!19113 = !DILocation(line: 69, column: 24, scope: !19108)
!19114 = !DILocation(line: 0, scope: !19108)
!19115 = !DILocation(line: 70, column: 26, scope: !19108)
!19116 = !DILocation(line: 73, column: 10, scope: !19117)
!19117 = distinct !DILexicalBlock(scope: !19108, file: !2955, line: 73, column: 6)
!19118 = !DILocation(line: 73, column: 19, scope: !19117)
!19119 = !DILocation(line: 74, column: 21, scope: !19117)
!19120 = !DILocation(line: 74, column: 30, scope: !19117)
!19121 = !DILocation(line: 74, column: 28, scope: !19117)
!19122 = !DILocation(line: 74, column: 45, scope: !19117)
!19123 = !DILocation(line: 73, column: 6, scope: !19108)
!19124 = !DILocation(line: 77, column: 9, scope: !19125)
!19125 = distinct !DILexicalBlock(scope: !19117, file: !2955, line: 76, column: 9)
!19126 = !DILocation(line: 0, scope: !19117)
!19127 = !DILocation(line: 81, column: 20, scope: !19128)
!19128 = distinct !DILexicalBlock(scope: !19108, file: !2955, line: 81, column: 6)
!19129 = !DILocation(line: 81, column: 6, scope: !19128)
!19130 = !DILocation(line: 81, column: 32, scope: !19128)
!19131 = !DILocation(line: 85, column: 2, scope: !19108)
!19132 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !136, file: !136, line: 341, type: !19133, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19135)
!19133 = !DISubroutineType(types: !19134)
!19134 = !{!19056, !19093, !19056}
!19135 = !{!19136, !19137}
!19136 = !DILocalVariable(name: "list", arg: 1, scope: !19132, file: !136, line: 341, type: !19093)
!19137 = !DILocalVariable(name: "node", arg: 2, scope: !19132, file: !136, line: 342, type: !19056)
!19138 = !DILocation(line: 0, scope: !19132)
!19139 = !DILocation(line: 344, column: 15, scope: !19132)
!19140 = !DILocation(line: 344, column: 9, scope: !19132)
!19141 = !DILocation(line: 344, column: 26, scope: !19132)
!19142 = !DILocation(line: 344, column: 2, scope: !19132)
!19143 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !136, file: !136, line: 325, type: !19133, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19144)
!19144 = !{!19145, !19146}
!19145 = !DILocalVariable(name: "list", arg: 1, scope: !19143, file: !136, line: 325, type: !19093)
!19146 = !DILocalVariable(name: "node", arg: 2, scope: !19143, file: !136, line: 326, type: !19056)
!19147 = !DILocation(line: 0, scope: !19143)
!19148 = !DILocation(line: 328, column: 24, scope: !19143)
!19149 = !DILocation(line: 328, column: 15, scope: !19143)
!19150 = !DILocation(line: 328, column: 9, scope: !19143)
!19151 = !DILocation(line: 328, column: 45, scope: !19143)
!19152 = !DILocation(line: 328, column: 2, scope: !19143)
!19153 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !136, file: !136, line: 294, type: !19154, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19156)
!19154 = !DISubroutineType(types: !19155)
!19155 = !{!19056, !19093}
!19156 = !{!19157}
!19157 = !DILocalVariable(name: "list", arg: 1, scope: !19153, file: !136, line: 294, type: !19093)
!19158 = !DILocation(line: 0, scope: !19153)
!19159 = !DILocation(line: 296, column: 9, scope: !19153)
!19160 = !DILocation(line: 296, column: 2, scope: !19153)
!19161 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !136, file: !136, line: 266, type: !19162, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19164)
!19162 = !DISubroutineType(types: !19163)
!19163 = !{!122, !19093}
!19164 = !{!19165}
!19165 = !DILocalVariable(name: "list", arg: 1, scope: !19161, file: !136, line: 266, type: !19093)
!19166 = !DILocation(line: 0, scope: !19161)
!19167 = !DILocation(line: 268, column: 15, scope: !19161)
!19168 = !DILocation(line: 268, column: 20, scope: !19161)
!19169 = !DILocation(line: 268, column: 2, scope: !19161)
!19170 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2955, file: !2955, line: 150, type: !19171, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19173)
!19171 = !DISubroutineType(types: !19172)
!19172 = !{!103, !2928}
!19173 = !{!19174, !19175, !19176, !19178}
!19174 = !DILocalVariable(name: "to", arg: 1, scope: !19170, file: !2955, line: 150, type: !2928)
!19175 = !DILocalVariable(name: "ret", scope: !19170, file: !2955, line: 152, type: !103)
!19176 = !DILocalVariable(name: "__i", scope: !19177, file: !2955, line: 154, type: !18911)
!19177 = distinct !DILexicalBlock(scope: !19170, file: !2955, line: 154, column: 2)
!19178 = !DILocalVariable(name: "__key", scope: !19177, file: !2955, line: 154, type: !18911)
!19179 = !DILocation(line: 0, scope: !19170)
!19180 = !DILocation(line: 0, scope: !19177)
!19181 = !DILocation(line: 0, scope: !18939, inlinedAt: !19182)
!19182 = distinct !DILocation(line: 154, column: 2, scope: !19177)
!19183 = !DILocation(line: 55, column: 2, scope: !18948, inlinedAt: !19184)
!19184 = distinct !DILocation(line: 145, column: 10, scope: !18939, inlinedAt: !19182)
!19185 = !DILocation(line: 0, scope: !18948, inlinedAt: !19184)
!19186 = !DILocation(line: 148, column: 2, scope: !18956, inlinedAt: !19182)
!19187 = !DILocation(line: 148, column: 2, scope: !18957, inlinedAt: !19182)
!19188 = !DILocation(line: 148, column: 2, scope: !18960, inlinedAt: !19182)
!19189 = !DILocation(line: 160, column: 2, scope: !18939, inlinedAt: !19182)
!19190 = !DILocation(line: 155, column: 7, scope: !19191)
!19191 = distinct !DILexicalBlock(scope: !19192, file: !2955, line: 155, column: 7)
!19192 = distinct !DILexicalBlock(scope: !19193, file: !2955, line: 154, column: 24)
!19193 = distinct !DILexicalBlock(scope: !19177, file: !2955, line: 154, column: 2)
!19194 = !DILocation(line: 155, column: 7, scope: !19192)
!19195 = !DILocation(line: 156, column: 4, scope: !19196)
!19196 = distinct !DILexicalBlock(scope: !19191, file: !2955, line: 155, column: 39)
!19197 = !DILocation(line: 158, column: 3, scope: !19196)
!19198 = !DILocation(line: 0, scope: !19012, inlinedAt: !19199)
!19199 = distinct !DILocation(line: 154, column: 2, scope: !19193)
!19200 = !DILocation(line: 194, column: 2, scope: !19020, inlinedAt: !19199)
!19201 = !DILocation(line: 194, column: 2, scope: !19021, inlinedAt: !19199)
!19202 = !DILocation(line: 194, column: 2, scope: !19024, inlinedAt: !19199)
!19203 = !DILocation(line: 0, scope: !19026, inlinedAt: !19204)
!19204 = distinct !DILocation(line: 215, column: 2, scope: !19012, inlinedAt: !19199)
!19205 = !DILocation(line: 95, column: 2, scope: !19026, inlinedAt: !19204)
!19206 = !DILocation(line: 161, column: 2, scope: !19170)
!19207 = distinct !DISubprogram(name: "remove_timeout", scope: !2955, file: !2955, line: 53, type: !2949, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19208)
!19208 = !{!19209}
!19209 = !DILocalVariable(name: "t", arg: 1, scope: !19207, file: !2955, line: 53, type: !2928)
!19210 = !DILocation(line: 0, scope: !19207)
!19211 = !DILocation(line: 55, column: 6, scope: !19212)
!19212 = distinct !DILexicalBlock(scope: !19207, file: !2955, line: 55, column: 6)
!19213 = !DILocation(line: 55, column: 14, scope: !19212)
!19214 = !DILocation(line: 55, column: 6, scope: !19207)
!19215 = !DILocation(line: 56, column: 25, scope: !19216)
!19216 = distinct !DILexicalBlock(scope: !19212, file: !2955, line: 55, column: 23)
!19217 = !DILocation(line: 56, column: 12, scope: !19216)
!19218 = !DILocation(line: 56, column: 19, scope: !19216)
!19219 = !DILocation(line: 57, column: 2, scope: !19216)
!19220 = !DILocation(line: 59, column: 23, scope: !19207)
!19221 = !DILocation(line: 59, column: 2, scope: !19207)
!19222 = !DILocation(line: 60, column: 1, scope: !19207)
!19223 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !136, file: !136, line: 496, type: !19224, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19226)
!19224 = !DISubroutineType(types: !19225)
!19225 = !{null, !19056}
!19226 = !{!19227, !19228, !19229}
!19227 = !DILocalVariable(name: "node", arg: 1, scope: !19223, file: !136, line: 496, type: !19056)
!19228 = !DILocalVariable(name: "prev", scope: !19223, file: !136, line: 498, type: !19068)
!19229 = !DILocalVariable(name: "next", scope: !19223, file: !136, line: 499, type: !19068)
!19230 = !DILocation(line: 0, scope: !19223)
!19231 = !DILocation(line: 498, column: 34, scope: !19223)
!19232 = !DILocation(line: 499, column: 34, scope: !19223)
!19233 = !DILocation(line: 501, column: 8, scope: !19223)
!19234 = !DILocation(line: 501, column: 13, scope: !19223)
!19235 = !DILocation(line: 502, column: 8, scope: !19223)
!19236 = !DILocation(line: 502, column: 13, scope: !19223)
!19237 = !DILocation(line: 503, column: 2, scope: !19223)
!19238 = !DILocation(line: 504, column: 1, scope: !19223)
!19239 = distinct !DISubprogram(name: "sys_dnode_init", scope: !136, file: !136, line: 211, type: !19224, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19240)
!19240 = !{!19241}
!19241 = !DILocalVariable(name: "node", arg: 1, scope: !19239, file: !136, line: 211, type: !19056)
!19242 = !DILocation(line: 0, scope: !19239)
!19243 = !DILocation(line: 213, column: 8, scope: !19239)
!19244 = !DILocation(line: 213, column: 13, scope: !19239)
!19245 = !DILocation(line: 214, column: 8, scope: !19239)
!19246 = !DILocation(line: 214, column: 13, scope: !19239)
!19247 = !DILocation(line: 215, column: 1, scope: !19239)
!19248 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2955, file: !2955, line: 183, type: !19249, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19253)
!19249 = !DISubroutineType(types: !19250)
!19250 = !{!104, !19251}
!19251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19252, size: 32)
!19252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2929)
!19253 = !{!19254, !19255, !19256, !19258}
!19254 = !DILocalVariable(name: "timeout", arg: 1, scope: !19248, file: !2955, line: 183, type: !19251)
!19255 = !DILocalVariable(name: "ticks", scope: !19248, file: !2955, line: 185, type: !104)
!19256 = !DILocalVariable(name: "__i", scope: !19257, file: !2955, line: 187, type: !18911)
!19257 = distinct !DILexicalBlock(scope: !19248, file: !2955, line: 187, column: 2)
!19258 = !DILocalVariable(name: "__key", scope: !19257, file: !2955, line: 187, type: !18911)
!19259 = !DILocation(line: 0, scope: !19248)
!19260 = !DILocation(line: 0, scope: !19257)
!19261 = !DILocation(line: 0, scope: !18939, inlinedAt: !19262)
!19262 = distinct !DILocation(line: 187, column: 2, scope: !19257)
!19263 = !DILocation(line: 55, column: 2, scope: !18948, inlinedAt: !19264)
!19264 = distinct !DILocation(line: 145, column: 10, scope: !18939, inlinedAt: !19262)
!19265 = !DILocation(line: 0, scope: !18948, inlinedAt: !19264)
!19266 = !DILocation(line: 148, column: 2, scope: !18956, inlinedAt: !19262)
!19267 = !DILocation(line: 148, column: 2, scope: !18957, inlinedAt: !19262)
!19268 = !DILocation(line: 148, column: 2, scope: !18960, inlinedAt: !19262)
!19269 = !DILocation(line: 160, column: 2, scope: !18939, inlinedAt: !19262)
!19270 = !DILocation(line: 188, column: 11, scope: !19271)
!19271 = distinct !DILexicalBlock(scope: !19272, file: !2955, line: 187, column: 24)
!19272 = distinct !DILexicalBlock(scope: !19257, file: !2955, line: 187, column: 2)
!19273 = !DILocation(line: 0, scope: !19012, inlinedAt: !19274)
!19274 = distinct !DILocation(line: 187, column: 2, scope: !19272)
!19275 = !DILocation(line: 194, column: 2, scope: !19020, inlinedAt: !19274)
!19276 = !DILocation(line: 194, column: 2, scope: !19021, inlinedAt: !19274)
!19277 = !DILocation(line: 194, column: 2, scope: !19024, inlinedAt: !19274)
!19278 = !DILocation(line: 0, scope: !19026, inlinedAt: !19279)
!19279 = distinct !DILocation(line: 215, column: 2, scope: !19012, inlinedAt: !19274)
!19280 = !DILocation(line: 95, column: 2, scope: !19026, inlinedAt: !19279)
!19281 = !DILocation(line: 191, column: 2, scope: !19248)
!19282 = distinct !DISubprogram(name: "timeout_rem", scope: !2955, file: !2955, line: 165, type: !19249, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19283)
!19283 = !{!19284, !19285, !19286}
!19284 = !DILocalVariable(name: "timeout", arg: 1, scope: !19282, file: !2955, line: 165, type: !19251)
!19285 = !DILocalVariable(name: "ticks", scope: !19282, file: !2955, line: 167, type: !104)
!19286 = !DILocalVariable(name: "t", scope: !19287, file: !2955, line: 173, type: !2928)
!19287 = distinct !DILexicalBlock(scope: !19282, file: !2955, line: 173, column: 2)
!19288 = !DILocation(line: 0, scope: !19282)
!19289 = !DILocation(line: 169, column: 6, scope: !19290)
!19290 = distinct !DILexicalBlock(scope: !19282, file: !2955, line: 169, column: 6)
!19291 = !DILocation(line: 169, column: 6, scope: !19282)
!19292 = !DILocation(line: 173, column: 28, scope: !19287)
!19293 = !DILocation(line: 0, scope: !19287)
!19294 = !DILocation(line: 173, column: 39, scope: !19295)
!19295 = distinct !DILexicalBlock(scope: !19287, file: !2955, line: 173, column: 2)
!19296 = !DILocation(line: 173, column: 2, scope: !19287)
!19297 = !DILocation(line: 174, column: 15, scope: !19298)
!19298 = distinct !DILexicalBlock(scope: !19295, file: !2955, line: 173, column: 61)
!19299 = !DILocation(line: 174, column: 9, scope: !19298)
!19300 = !DILocation(line: 175, column: 15, scope: !19301)
!19301 = distinct !DILexicalBlock(scope: !19298, file: !2955, line: 175, column: 7)
!19302 = !DILocation(line: 175, column: 7, scope: !19298)
!19303 = !DILocation(line: 173, column: 52, scope: !19295)
!19304 = distinct !{!19304, !19296, !19305}
!19305 = !DILocation(line: 178, column: 2, scope: !19287)
!19306 = !DILocation(line: 180, column: 17, scope: !19282)
!19307 = !DILocation(line: 180, column: 15, scope: !19282)
!19308 = !DILocation(line: 180, column: 2, scope: !19282)
!19309 = !DILocation(line: 181, column: 1, scope: !19282)
!19310 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15271, file: !15271, line: 35, type: !19311, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19313)
!19311 = !DISubroutineType(types: !19312)
!19312 = !{!122, !19251}
!19313 = !{!19314}
!19314 = !DILocalVariable(name: "to", arg: 1, scope: !19310, file: !15271, line: 35, type: !19251)
!19315 = !DILocation(line: 0, scope: !19310)
!19316 = !DILocation(line: 37, column: 35, scope: !19310)
!19317 = !DILocation(line: 37, column: 10, scope: !19310)
!19318 = !DILocation(line: 37, column: 9, scope: !19310)
!19319 = !DILocation(line: 37, column: 2, scope: !19310)
!19320 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2955, file: !2955, line: 194, type: !19249, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19321)
!19321 = !{!19322, !19323, !19324, !19326}
!19322 = !DILocalVariable(name: "timeout", arg: 1, scope: !19320, file: !2955, line: 194, type: !19251)
!19323 = !DILocalVariable(name: "ticks", scope: !19320, file: !2955, line: 196, type: !104)
!19324 = !DILocalVariable(name: "__i", scope: !19325, file: !2955, line: 198, type: !18911)
!19325 = distinct !DILexicalBlock(scope: !19320, file: !2955, line: 198, column: 2)
!19326 = !DILocalVariable(name: "__key", scope: !19325, file: !2955, line: 198, type: !18911)
!19327 = !DILocation(line: 0, scope: !19320)
!19328 = !DILocation(line: 0, scope: !19325)
!19329 = !DILocation(line: 0, scope: !18939, inlinedAt: !19330)
!19330 = distinct !DILocation(line: 198, column: 2, scope: !19325)
!19331 = !DILocation(line: 55, column: 2, scope: !18948, inlinedAt: !19332)
!19332 = distinct !DILocation(line: 145, column: 10, scope: !18939, inlinedAt: !19330)
!19333 = !DILocation(line: 0, scope: !18948, inlinedAt: !19332)
!19334 = !DILocation(line: 148, column: 2, scope: !18956, inlinedAt: !19330)
!19335 = !DILocation(line: 148, column: 2, scope: !18957, inlinedAt: !19330)
!19336 = !DILocation(line: 148, column: 2, scope: !18960, inlinedAt: !19330)
!19337 = !DILocation(line: 160, column: 2, scope: !18939, inlinedAt: !19330)
!19338 = !DILocation(line: 199, column: 11, scope: !19339)
!19339 = distinct !DILexicalBlock(scope: !19340, file: !2955, line: 198, column: 24)
!19340 = distinct !DILexicalBlock(scope: !19325, file: !2955, line: 198, column: 2)
!19341 = !DILocation(line: 199, column: 23, scope: !19339)
!19342 = !DILocation(line: 0, scope: !19012, inlinedAt: !19343)
!19343 = distinct !DILocation(line: 198, column: 2, scope: !19340)
!19344 = !DILocation(line: 194, column: 2, scope: !19020, inlinedAt: !19343)
!19345 = !DILocation(line: 194, column: 2, scope: !19021, inlinedAt: !19343)
!19346 = !DILocation(line: 194, column: 2, scope: !19024, inlinedAt: !19343)
!19347 = !DILocation(line: 0, scope: !19026, inlinedAt: !19348)
!19348 = distinct !DILocation(line: 215, column: 2, scope: !19012, inlinedAt: !19343)
!19349 = !DILocation(line: 95, column: 2, scope: !19026, inlinedAt: !19348)
!19350 = !DILocation(line: 199, column: 21, scope: !19339)
!19351 = !DILocation(line: 202, column: 2, scope: !19320)
!19352 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2955, file: !2955, line: 205, type: !19045, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19353)
!19353 = !{!19354, !19355, !19357}
!19354 = !DILocalVariable(name: "ret", scope: !19352, file: !2955, line: 207, type: !320)
!19355 = !DILocalVariable(name: "__i", scope: !19356, file: !2955, line: 209, type: !18911)
!19356 = distinct !DILexicalBlock(scope: !19352, file: !2955, line: 209, column: 2)
!19357 = !DILocalVariable(name: "__key", scope: !19356, file: !2955, line: 209, type: !18911)
!19358 = !DILocation(line: 0, scope: !19352)
!19359 = !DILocation(line: 0, scope: !19356)
!19360 = !DILocation(line: 0, scope: !18939, inlinedAt: !19361)
!19361 = distinct !DILocation(line: 209, column: 2, scope: !19356)
!19362 = !DILocation(line: 55, column: 2, scope: !18948, inlinedAt: !19363)
!19363 = distinct !DILocation(line: 145, column: 10, scope: !18939, inlinedAt: !19361)
!19364 = !DILocation(line: 0, scope: !18948, inlinedAt: !19363)
!19365 = !DILocation(line: 148, column: 2, scope: !18956, inlinedAt: !19361)
!19366 = !DILocation(line: 148, column: 2, scope: !18957, inlinedAt: !19361)
!19367 = !DILocation(line: 148, column: 2, scope: !18960, inlinedAt: !19361)
!19368 = !DILocation(line: 160, column: 2, scope: !18939, inlinedAt: !19361)
!19369 = !DILocation(line: 210, column: 9, scope: !19370)
!19370 = distinct !DILexicalBlock(scope: !19371, file: !2955, line: 209, column: 24)
!19371 = distinct !DILexicalBlock(scope: !19356, file: !2955, line: 209, column: 2)
!19372 = !DILocation(line: 0, scope: !19012, inlinedAt: !19373)
!19373 = distinct !DILocation(line: 209, column: 2, scope: !19371)
!19374 = !DILocation(line: 194, column: 2, scope: !19020, inlinedAt: !19373)
!19375 = !DILocation(line: 194, column: 2, scope: !19021, inlinedAt: !19373)
!19376 = !DILocation(line: 194, column: 2, scope: !19024, inlinedAt: !19373)
!19377 = !DILocation(line: 0, scope: !19026, inlinedAt: !19378)
!19378 = distinct !DILocation(line: 215, column: 2, scope: !19012, inlinedAt: !19373)
!19379 = !DILocation(line: 95, column: 2, scope: !19026, inlinedAt: !19378)
!19380 = !DILocation(line: 212, column: 2, scope: !19352)
!19381 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2955, file: !2955, line: 215, type: !12611, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19382)
!19382 = !{!19383, !19384, !19385, !19387, !19388, !19391, !19392}
!19383 = !DILocalVariable(name: "ticks", arg: 1, scope: !19381, file: !2955, line: 215, type: !320)
!19384 = !DILocalVariable(name: "is_idle", arg: 2, scope: !19381, file: !2955, line: 215, type: !122)
!19385 = !DILocalVariable(name: "__i", scope: !19386, file: !2955, line: 217, type: !18911)
!19386 = distinct !DILexicalBlock(scope: !19381, file: !2955, line: 217, column: 2)
!19387 = !DILocalVariable(name: "__key", scope: !19386, file: !2955, line: 217, type: !18911)
!19388 = !DILocalVariable(name: "next_to", scope: !19389, file: !2955, line: 218, type: !103)
!19389 = distinct !DILexicalBlock(scope: !19390, file: !2955, line: 217, column: 24)
!19390 = distinct !DILexicalBlock(scope: !19386, file: !2955, line: 217, column: 2)
!19391 = !DILocalVariable(name: "sooner", scope: !19389, file: !2955, line: 219, type: !122)
!19392 = !DILocalVariable(name: "imminent", scope: !19389, file: !2955, line: 221, type: !122)
!19393 = !DILocation(line: 0, scope: !19381)
!19394 = !DILocation(line: 0, scope: !19386)
!19395 = !DILocation(line: 0, scope: !18939, inlinedAt: !19396)
!19396 = distinct !DILocation(line: 217, column: 2, scope: !19386)
!19397 = !DILocation(line: 55, column: 2, scope: !18948, inlinedAt: !19398)
!19398 = distinct !DILocation(line: 145, column: 10, scope: !18939, inlinedAt: !19396)
!19399 = !DILocation(line: 0, scope: !18948, inlinedAt: !19398)
!19400 = !DILocation(line: 148, column: 2, scope: !18956, inlinedAt: !19396)
!19401 = !DILocation(line: 148, column: 2, scope: !18957, inlinedAt: !19396)
!19402 = !DILocation(line: 148, column: 2, scope: !18960, inlinedAt: !19396)
!19403 = !DILocation(line: 160, column: 2, scope: !18939, inlinedAt: !19396)
!19404 = !DILocation(line: 218, column: 17, scope: !19389)
!19405 = !DILocation(line: 0, scope: !19389)
!19406 = !DILocation(line: 221, column: 27, scope: !19389)
!19407 = !DILocation(line: 233, column: 17, scope: !19408)
!19408 = distinct !DILexicalBlock(scope: !19389, file: !2955, line: 233, column: 7)
!19409 = !DILocation(line: 234, column: 26, scope: !19410)
!19410 = distinct !DILexicalBlock(scope: !19408, file: !2955, line: 233, column: 56)
!19411 = !DILocation(line: 234, column: 4, scope: !19410)
!19412 = !DILocation(line: 235, column: 3, scope: !19410)
!19413 = !DILocation(line: 0, scope: !19012, inlinedAt: !19414)
!19414 = distinct !DILocation(line: 217, column: 2, scope: !19390)
!19415 = !DILocation(line: 194, column: 2, scope: !19020, inlinedAt: !19414)
!19416 = !DILocation(line: 194, column: 2, scope: !19021, inlinedAt: !19414)
!19417 = !DILocation(line: 194, column: 2, scope: !19024, inlinedAt: !19414)
!19418 = !DILocation(line: 0, scope: !19026, inlinedAt: !19419)
!19419 = distinct !DILocation(line: 215, column: 2, scope: !19012, inlinedAt: !19414)
!19420 = !DILocation(line: 95, column: 2, scope: !19026, inlinedAt: !19419)
!19421 = !DILocation(line: 237, column: 1, scope: !19381)
!19422 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2955, file: !2955, line: 239, type: !19423, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19425)
!19423 = !DISubroutineType(types: !19424)
!19424 = !{null, !320}
!19425 = !{!19426, !19427, !19428, !19430}
!19426 = !DILocalVariable(name: "ticks", arg: 1, scope: !19422, file: !2955, line: 239, type: !320)
!19427 = !DILocalVariable(name: "key", scope: !19422, file: !2955, line: 245, type: !18911)
!19428 = !DILocalVariable(name: "t", scope: !19429, file: !2955, line: 262, type: !2928)
!19429 = distinct !DILexicalBlock(scope: !19422, file: !2955, line: 261, column: 67)
!19430 = !DILocalVariable(name: "dt", scope: !19429, file: !2955, line: 263, type: !103)
!19431 = !DILocation(line: 0, scope: !19422)
!19432 = !DILocation(line: 242, column: 2, scope: !19422)
!19433 = !DILocation(line: 0, scope: !18939, inlinedAt: !19434)
!19434 = distinct !DILocation(line: 245, column: 25, scope: !19422)
!19435 = !DILocation(line: 55, column: 2, scope: !18948, inlinedAt: !19436)
!19436 = distinct !DILocation(line: 145, column: 10, scope: !18939, inlinedAt: !19434)
!19437 = !DILocation(line: 0, scope: !18948, inlinedAt: !19436)
!19438 = !DILocation(line: 148, column: 2, scope: !18956, inlinedAt: !19434)
!19439 = !DILocation(line: 148, column: 2, scope: !18957, inlinedAt: !19434)
!19440 = !DILocation(line: 148, column: 2, scope: !18960, inlinedAt: !19434)
!19441 = !DILocation(line: 160, column: 2, scope: !18939, inlinedAt: !19434)
!19442 = !DILocation(line: 261, column: 9, scope: !19422)
!19443 = !DILocation(line: 261, column: 17, scope: !19422)
!19444 = !DILocation(line: 261, column: 25, scope: !19422)
!19445 = !DILocation(line: 261, column: 37, scope: !19422)
!19446 = !DILocation(line: 261, column: 47, scope: !19422)
!19447 = !DILocation(line: 261, column: 44, scope: !19422)
!19448 = !DILocation(line: 261, column: 2, scope: !19422)
!19449 = !DILocation(line: 0, scope: !19429)
!19450 = !DILocation(line: 263, column: 12, scope: !19429)
!19451 = !DILocation(line: 265, column: 16, scope: !19429)
!19452 = !DILocation(line: 265, column: 13, scope: !19429)
!19453 = !DILocation(line: 266, column: 13, scope: !19429)
!19454 = !DILocation(line: 267, column: 3, scope: !19429)
!19455 = !DILocation(line: 0, scope: !19012, inlinedAt: !19456)
!19456 = distinct !DILocation(line: 269, column: 3, scope: !19429)
!19457 = !DILocation(line: 194, column: 2, scope: !19020, inlinedAt: !19456)
!19458 = !DILocation(line: 194, column: 2, scope: !19021, inlinedAt: !19456)
!19459 = !DILocation(line: 194, column: 2, scope: !19024, inlinedAt: !19456)
!19460 = !DILocation(line: 0, scope: !19026, inlinedAt: !19461)
!19461 = distinct !DILocation(line: 215, column: 2, scope: !19012, inlinedAt: !19456)
!19462 = !DILocation(line: 95, column: 2, scope: !19026, inlinedAt: !19461)
!19463 = !DILocation(line: 270, column: 6, scope: !19429)
!19464 = !DILocation(line: 270, column: 3, scope: !19429)
!19465 = !DILocation(line: 0, scope: !18939, inlinedAt: !19466)
!19466 = distinct !DILocation(line: 271, column: 9, scope: !19429)
!19467 = !DILocation(line: 55, column: 2, scope: !18948, inlinedAt: !19468)
!19468 = distinct !DILocation(line: 145, column: 10, scope: !18939, inlinedAt: !19466)
!19469 = !DILocation(line: 0, scope: !18948, inlinedAt: !19468)
!19470 = !DILocation(line: 148, column: 2, scope: !18956, inlinedAt: !19466)
!19471 = !DILocation(line: 148, column: 2, scope: !18957, inlinedAt: !19466)
!19472 = !DILocation(line: 148, column: 2, scope: !18960, inlinedAt: !19466)
!19473 = !DILocation(line: 160, column: 2, scope: !18939, inlinedAt: !19466)
!19474 = !DILocation(line: 272, column: 22, scope: !19429)
!19475 = distinct !{!19475, !19448, !19476}
!19476 = !DILocation(line: 273, column: 2, scope: !19422)
!19477 = !DILocation(line: 276, column: 19, scope: !19478)
!19478 = distinct !DILexicalBlock(scope: !19479, file: !2955, line: 275, column: 23)
!19479 = distinct !DILexicalBlock(scope: !19422, file: !2955, line: 275, column: 6)
!19480 = !DILocation(line: 277, column: 2, scope: !19478)
!19481 = !DILocation(line: 279, column: 15, scope: !19422)
!19482 = !DILocation(line: 279, column: 12, scope: !19422)
!19483 = !DILocation(line: 280, column: 21, scope: !19422)
!19484 = !DILocation(line: 282, column: 24, scope: !19422)
!19485 = !DILocation(line: 282, column: 2, scope: !19422)
!19486 = !DILocation(line: 0, scope: !19012, inlinedAt: !19487)
!19487 = distinct !DILocation(line: 284, column: 2, scope: !19422)
!19488 = !DILocation(line: 194, column: 2, scope: !19020, inlinedAt: !19487)
!19489 = !DILocation(line: 194, column: 2, scope: !19021, inlinedAt: !19487)
!19490 = !DILocation(line: 194, column: 2, scope: !19024, inlinedAt: !19487)
!19491 = !DILocation(line: 0, scope: !19026, inlinedAt: !19492)
!19492 = distinct !DILocation(line: 215, column: 2, scope: !19012, inlinedAt: !19487)
!19493 = !DILocation(line: 95, column: 2, scope: !19026, inlinedAt: !19492)
!19494 = !DILocation(line: 285, column: 1, scope: !19422)
!19495 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2955, file: !2955, line: 287, type: !19496, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19498)
!19496 = !DISubroutineType(types: !19497)
!19497 = !{!106}
!19498 = !{!19499, !19500, !19502}
!19499 = !DILocalVariable(name: "t", scope: !19495, file: !2955, line: 289, type: !112)
!19500 = !DILocalVariable(name: "__i", scope: !19501, file: !2955, line: 291, type: !18911)
!19501 = distinct !DILexicalBlock(scope: !19495, file: !2955, line: 291, column: 2)
!19502 = !DILocalVariable(name: "__key", scope: !19501, file: !2955, line: 291, type: !18911)
!19503 = !DILocation(line: 0, scope: !19495)
!19504 = !DILocation(line: 0, scope: !19501)
!19505 = !DILocation(line: 0, scope: !18939, inlinedAt: !19506)
!19506 = distinct !DILocation(line: 291, column: 2, scope: !19501)
!19507 = !DILocation(line: 55, column: 2, scope: !18948, inlinedAt: !19508)
!19508 = distinct !DILocation(line: 145, column: 10, scope: !18939, inlinedAt: !19506)
!19509 = !DILocation(line: 0, scope: !18948, inlinedAt: !19508)
!19510 = !DILocation(line: 148, column: 2, scope: !18956, inlinedAt: !19506)
!19511 = !DILocation(line: 148, column: 2, scope: !18957, inlinedAt: !19506)
!19512 = !DILocation(line: 148, column: 2, scope: !18960, inlinedAt: !19506)
!19513 = !DILocation(line: 160, column: 2, scope: !18939, inlinedAt: !19506)
!19514 = !DILocation(line: 292, column: 7, scope: !19515)
!19515 = distinct !DILexicalBlock(scope: !19516, file: !2955, line: 291, column: 24)
!19516 = distinct !DILexicalBlock(scope: !19501, file: !2955, line: 291, column: 2)
!19517 = !DILocation(line: 292, column: 19, scope: !19515)
!19518 = !DILocation(line: 0, scope: !19012, inlinedAt: !19519)
!19519 = distinct !DILocation(line: 291, column: 2, scope: !19516)
!19520 = !DILocation(line: 194, column: 2, scope: !19020, inlinedAt: !19519)
!19521 = !DILocation(line: 194, column: 2, scope: !19021, inlinedAt: !19519)
!19522 = !DILocation(line: 194, column: 2, scope: !19024, inlinedAt: !19519)
!19523 = !DILocation(line: 0, scope: !19026, inlinedAt: !19524)
!19524 = distinct !DILocation(line: 215, column: 2, scope: !19012, inlinedAt: !19519)
!19525 = !DILocation(line: 95, column: 2, scope: !19026, inlinedAt: !19524)
!19526 = !DILocation(line: 292, column: 17, scope: !19515)
!19527 = !DILocation(line: 294, column: 2, scope: !19495)
!19528 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2955, file: !2955, line: 297, type: !8837, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2512)
!19529 = !DILocation(line: 300, column: 19, scope: !19528)
!19530 = !DILocation(line: 300, column: 9, scope: !19528)
!19531 = !DILocation(line: 300, column: 2, scope: !19528)
!19532 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2955, file: !2955, line: 306, type: !19496, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2512)
!19533 = !DILocation(line: 308, column: 9, scope: !19532)
!19534 = !DILocation(line: 308, column: 2, scope: !19532)
!19535 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2955, file: !2955, line: 319, type: !7520, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19536)
!19536 = !{!19537, !19538, !19539, !19540}
!19537 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !19535, file: !2955, line: 319, type: !111)
!19538 = !DILocalVariable(name: "start_cycles", scope: !19535, file: !2955, line: 328, type: !111)
!19539 = !DILocalVariable(name: "cycles_to_wait", scope: !19535, file: !2955, line: 331, type: !111)
!19540 = !DILocalVariable(name: "current_cycles", scope: !19541, file: !2955, line: 338, type: !111)
!19541 = distinct !DILexicalBlock(scope: !19542, file: !2955, line: 337, column: 11)
!19542 = distinct !DILexicalBlock(scope: !19543, file: !2955, line: 337, column: 2)
!19543 = distinct !DILexicalBlock(scope: !19535, file: !2955, line: 337, column: 2)
!19544 = !DILocation(line: 0, scope: !19535)
!19545 = !DILocation(line: 322, column: 19, scope: !19546)
!19546 = distinct !DILexicalBlock(scope: !19535, file: !2955, line: 322, column: 6)
!19547 = !DILocation(line: 322, column: 6, scope: !19535)
!19548 = !DILocation(line: 328, column: 26, scope: !19535)
!19549 = !DILocation(line: 333, column: 43, scope: !19535)
!19550 = !DILocation(line: 337, column: 2, scope: !19535)
!19551 = !DILocation(line: 338, column: 29, scope: !19541)
!19552 = !DILocation(line: 0, scope: !19541)
!19553 = !DILocation(line: 341, column: 23, scope: !19554)
!19554 = distinct !DILexicalBlock(scope: !19541, file: !2955, line: 341, column: 7)
!19555 = !DILocation(line: 341, column: 39, scope: !19554)
!19556 = !DILocation(line: 349, column: 1, scope: !19535)
!19557 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !127, file: !127, line: 1675, type: !8837, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2512)
!19558 = !DILocation(line: 1677, column: 9, scope: !19557)
!19559 = !DILocation(line: 1677, column: 2, scope: !19557)
!19560 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !19561, file: !19561, line: 24, type: !8837, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !2512)
!19561 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19562 = !DILocation(line: 26, column: 9, scope: !19560)
!19563 = !DILocation(line: 26, column: 2, scope: !19560)
!19564 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2955, file: !2955, line: 364, type: !19565, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2925, retainedNodes: !19567)
!19565 = !DISubroutineType(types: !19566)
!19566 = !{!112, !18901}
!19567 = !{!19568, !19569}
!19568 = !DILocalVariable(name: "timeout", arg: 1, scope: !19564, file: !2955, line: 364, type: !18901)
!19569 = !DILocalVariable(name: "dt", scope: !19564, file: !2955, line: 366, type: !104)
!19570 = !DILocation(line: 0, scope: !19564)
!19571 = !DILocation(line: 368, column: 6, scope: !19564)
!19572 = !DILocation(line: 371, column: 10, scope: !19573)
!19573 = distinct !DILexicalBlock(scope: !19574, file: !2955, line: 370, column: 47)
!19574 = distinct !DILexicalBlock(scope: !19575, file: !2955, line: 370, column: 13)
!19575 = distinct !DILexicalBlock(scope: !19564, file: !2955, line: 368, column: 6)
!19576 = !DILocation(line: 371, column: 3, scope: !19573)
!19577 = !DILocation(line: 376, column: 58, scope: !19578)
!19578 = distinct !DILexicalBlock(scope: !19579, file: !2955, line: 376, column: 7)
!19579 = distinct !DILexicalBlock(scope: !19574, file: !2955, line: 372, column: 9)
!19580 = !DILocation(line: 376, column: 7, scope: !19579)
!19581 = !DILocation(line: 376, column: 43, scope: !19578)
!19582 = !DILocation(line: 377, column: 4, scope: !19583)
!19583 = distinct !DILexicalBlock(scope: !19578, file: !2955, line: 376, column: 64)
!19584 = !DILocation(line: 379, column: 10, scope: !19579)
!19585 = !DILocation(line: 379, column: 33, scope: !19579)
!19586 = !DILocation(line: 379, column: 31, scope: !19579)
!19587 = !DILocation(line: 379, column: 3, scope: !19579)
!19588 = !DILocation(line: 0, scope: !19575)
!19589 = !DILocation(line: 381, column: 1, scope: !19564)
!19590 = distinct !DISubprogram(name: "k_free", scope: !2972, file: !2972, line: 43, type: !7771, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !19591)
!19591 = !{!19592, !19593}
!19592 = !DILocalVariable(name: "ptr", arg: 1, scope: !19590, file: !2972, line: 43, type: !102)
!19593 = !DILocalVariable(name: "heap_ref", scope: !19590, file: !2972, line: 45, type: !19594)
!19594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19595, size: 32)
!19595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!19596 = !DILocation(line: 0, scope: !19590)
!19597 = !DILocation(line: 47, column: 10, scope: !19598)
!19598 = distinct !DILexicalBlock(scope: !19590, file: !2972, line: 47, column: 6)
!19599 = !DILocation(line: 47, column: 6, scope: !19590)
!19600 = !DILocation(line: 49, column: 9, scope: !19601)
!19601 = distinct !DILexicalBlock(scope: !19598, file: !2972, line: 47, column: 19)
!19602 = !DILocation(line: 53, column: 15, scope: !19601)
!19603 = !DILocation(line: 53, column: 3, scope: !19601)
!19604 = !DILocation(line: 56, column: 2, scope: !19601)
!19605 = !DILocation(line: 57, column: 1, scope: !19590)
!19606 = distinct !DISubprogram(name: "k_aligned_alloc", scope: !2972, file: !2972, line: 64, type: !19607, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !19609)
!19607 = !DISubroutineType(types: !19608)
!19608 = !{!102, !156, !156}
!19609 = !{!19610, !19611, !19612}
!19610 = !DILocalVariable(name: "align", arg: 1, scope: !19606, file: !2972, line: 64, type: !156)
!19611 = !DILocalVariable(name: "size", arg: 2, scope: !19606, file: !2972, line: 64, type: !156)
!19612 = !DILocalVariable(name: "ret", scope: !19606, file: !2972, line: 75, type: !102)
!19613 = !DILocation(line: 0, scope: !19606)
!19614 = !DILocation(line: 66, column: 2, scope: !19615)
!19615 = distinct !DILexicalBlock(scope: !19616, file: !2972, line: 66, column: 2)
!19616 = distinct !DILexicalBlock(scope: !19606, file: !2972, line: 66, column: 2)
!19617 = !DILocation(line: 66, column: 2, scope: !19618)
!19618 = distinct !DILexicalBlock(scope: !19615, file: !2972, line: 66, column: 2)
!19619 = !DILocation(line: 70, column: 2, scope: !19620)
!19620 = distinct !DILexicalBlock(scope: !19621, file: !2972, line: 70, column: 2)
!19621 = distinct !DILexicalBlock(scope: !19606, file: !2972, line: 70, column: 2)
!19622 = !DILocation(line: 70, column: 2, scope: !19621)
!19623 = !DILocation(line: 70, column: 2, scope: !19624)
!19624 = distinct !DILexicalBlock(scope: !19620, file: !2972, line: 70, column: 2)
!19625 = !DILocation(line: 75, column: 14, scope: !19606)
!19626 = !DILocation(line: 79, column: 2, scope: !19606)
!19627 = distinct !DISubprogram(name: "z_heap_aligned_alloc", scope: !2972, file: !2972, line: 12, type: !19628, scopeLine: 13, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !19630)
!19628 = !DISubroutineType(types: !19629)
!19629 = !{!102, !19595, !156, !156}
!19630 = !{!19631, !19632, !19633, !19634, !19635, !19636}
!19631 = !DILocalVariable(name: "heap", arg: 1, scope: !19627, file: !2972, line: 12, type: !19595)
!19632 = !DILocalVariable(name: "align", arg: 2, scope: !19627, file: !2972, line: 12, type: !156)
!19633 = !DILocalVariable(name: "size", arg: 3, scope: !19627, file: !2972, line: 12, type: !156)
!19634 = !DILocalVariable(name: "mem", scope: !19627, file: !2972, line: 14, type: !102)
!19635 = !DILocalVariable(name: "heap_ref", scope: !19627, file: !2972, line: 15, type: !19594)
!19636 = !DILocalVariable(name: "__align", scope: !19627, file: !2972, line: 16, type: !156)
!19637 = !DILocation(line: 0, scope: !19627)
!19638 = !DILocation(line: 24, column: 6, scope: !19639)
!19639 = distinct !DILexicalBlock(scope: !19627, file: !2972, line: 24, column: 6)
!19640 = !DILocation(line: 24, column: 6, scope: !19627)
!19641 = !DILocation(line: 27, column: 18, scope: !19627)
!19642 = !DILocation(line: 29, column: 44, scope: !19627)
!19643 = !DILocation(line: 29, column: 8, scope: !19627)
!19644 = !DILocation(line: 30, column: 10, scope: !19645)
!19645 = distinct !DILexicalBlock(scope: !19627, file: !2972, line: 30, column: 6)
!19646 = !DILocation(line: 30, column: 6, scope: !19627)
!19647 = !DILocation(line: 34, column: 13, scope: !19627)
!19648 = !DILocation(line: 35, column: 12, scope: !19627)
!19649 = !DILocation(line: 36, column: 8, scope: !19627)
!19650 = !DILocation(line: 37, column: 2, scope: !19651)
!19651 = distinct !DILexicalBlock(scope: !19652, file: !2972, line: 37, column: 2)
!19652 = distinct !DILexicalBlock(scope: !19627, file: !2972, line: 37, column: 2)
!19653 = !DILocation(line: 37, column: 2, scope: !19652)
!19654 = !DILocation(line: 37, column: 2, scope: !19655)
!19655 = distinct !DILexicalBlock(scope: !19651, file: !2972, line: 37, column: 2)
!19656 = !DILocation(line: 41, column: 1, scope: !19627)
!19657 = distinct !DISubprogram(name: "size_add_overflow", scope: !15716, file: !15716, line: 47, type: !15717, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !19658)
!19658 = !{!19659, !19660, !19661}
!19659 = !DILocalVariable(name: "a", arg: 1, scope: !19657, file: !15716, line: 47, type: !156)
!19660 = !DILocalVariable(name: "b", arg: 2, scope: !19657, file: !15716, line: 47, type: !156)
!19661 = !DILocalVariable(name: "result", arg: 3, scope: !19657, file: !15716, line: 47, type: !3108)
!19662 = !DILocation(line: 0, scope: !19657)
!19663 = !DILocation(line: 49, column: 9, scope: !19657)
!19664 = !DILocation(line: 49, column: 2, scope: !19657)
!19665 = distinct !DISubprogram(name: "k_malloc", scope: !2972, file: !2972, line: 82, type: !15728, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !19666)
!19666 = !{!19667, !19668}
!19667 = !DILocalVariable(name: "size", arg: 1, scope: !19665, file: !2972, line: 82, type: !156)
!19668 = !DILocalVariable(name: "ret", scope: !19665, file: !2972, line: 86, type: !102)
!19669 = !DILocation(line: 0, scope: !19665)
!19670 = !DILocation(line: 86, column: 14, scope: !19665)
!19671 = !DILocation(line: 90, column: 2, scope: !19665)
!19672 = distinct !DISubprogram(name: "k_calloc", scope: !2972, file: !2972, line: 93, type: !19607, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !19673)
!19673 = !{!19674, !19675, !19676, !19677}
!19674 = !DILocalVariable(name: "nmemb", arg: 1, scope: !19672, file: !2972, line: 93, type: !156)
!19675 = !DILocalVariable(name: "size", arg: 2, scope: !19672, file: !2972, line: 93, type: !156)
!19676 = !DILocalVariable(name: "ret", scope: !19672, file: !2972, line: 95, type: !102)
!19677 = !DILocalVariable(name: "bounds", scope: !19672, file: !2972, line: 96, type: !156)
!19678 = !DILocation(line: 0, scope: !19672)
!19679 = !DILocation(line: 96, column: 2, scope: !19672)
!19680 = !DILocation(line: 100, column: 6, scope: !19681)
!19681 = distinct !DILexicalBlock(scope: !19672, file: !2972, line: 100, column: 6)
!19682 = !DILocation(line: 100, column: 6, scope: !19672)
!19683 = !DILocation(line: 106, column: 17, scope: !19672)
!19684 = !DILocation(line: 106, column: 8, scope: !19672)
!19685 = !DILocation(line: 107, column: 10, scope: !19686)
!19686 = distinct !DILexicalBlock(scope: !19672, file: !2972, line: 107, column: 6)
!19687 = !DILocation(line: 107, column: 6, scope: !19672)
!19688 = !DILocation(line: 108, column: 9, scope: !19689)
!19689 = distinct !DILexicalBlock(scope: !19686, file: !2972, line: 107, column: 19)
!19690 = !DILocation(line: 109, column: 2, scope: !19689)
!19691 = !DILocation(line: 114, column: 1, scope: !19672)
!19692 = distinct !DISubprogram(name: "size_mul_overflow", scope: !15716, file: !15716, line: 105, type: !15717, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !19693)
!19693 = !{!19694, !19695, !19696}
!19694 = !DILocalVariable(name: "a", arg: 1, scope: !19692, file: !15716, line: 105, type: !156)
!19695 = !DILocalVariable(name: "b", arg: 2, scope: !19692, file: !15716, line: 105, type: !156)
!19696 = !DILocalVariable(name: "result", arg: 3, scope: !19692, file: !15716, line: 105, type: !3108)
!19697 = !DILocation(line: 0, scope: !19692)
!19698 = !DILocation(line: 107, column: 9, scope: !19692)
!19699 = !DILocation(line: 107, column: 2, scope: !19692)
!19700 = distinct !DISubprogram(name: "k_thread_system_pool_assign", scope: !2972, file: !2972, line: 116, type: !19701, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !19773)
!19701 = !DISubroutineType(types: !19702)
!19702 = !{null, !19703}
!19703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19704, size: 32)
!19704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !199, line: 245, size: 1024, elements: !19705)
!19705 = !{!19706, !19746, !19758, !19759, !19760, !19761, !19767, !19768}
!19706 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !19704, file: !199, line: 247, baseType: !19707, size: 384)
!19707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !199, line: 57, size: 384, elements: !19708)
!19708 = !{!19709, !19720, !19722, !19723, !19724, !19733, !19734, !19735}
!19709 = !DIDerivedType(tag: DW_TAG_member, scope: !19707, file: !199, line: 60, baseType: !19710, size: 64)
!19710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !19707, file: !199, line: 60, size: 64, elements: !19711)
!19711 = !{!19712, !19714}
!19712 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !19710, file: !199, line: 61, baseType: !19713, size: 64)
!19713 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !136, line: 49, baseType: !2987)
!19714 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !19710, file: !199, line: 62, baseType: !19715, size: 64)
!19715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !211, line: 49, size: 64, elements: !19716)
!19716 = !{!19717}
!19717 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !19715, file: !211, line: 50, baseType: !19718, size: 64)
!19718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19719, size: 64, elements: !216)
!19719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19715, size: 32)
!19720 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !19707, file: !199, line: 68, baseType: !19721, size: 32, offset: 64)
!19721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 32)
!19722 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !19707, file: !199, line: 71, baseType: !166, size: 8, offset: 96)
!19723 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !19707, file: !199, line: 74, baseType: !166, size: 8, offset: 104)
!19724 = !DIDerivedType(tag: DW_TAG_member, scope: !19707, file: !199, line: 90, baseType: !19725, size: 16, offset: 112)
!19725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !19707, file: !199, line: 90, size: 16, elements: !19726)
!19726 = !{!19727, !19732}
!19727 = !DIDerivedType(tag: DW_TAG_member, scope: !19725, file: !199, line: 91, baseType: !19728, size: 16)
!19728 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !19725, file: !199, line: 91, size: 16, elements: !19729)
!19729 = !{!19730, !19731}
!19730 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !19728, file: !199, line: 96, baseType: !229, size: 8)
!19731 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !19728, file: !199, line: 97, baseType: !166, size: 8, offset: 8)
!19732 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !19725, file: !199, line: 100, baseType: !181, size: 16)
!19733 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !19707, file: !199, line: 107, baseType: !111, size: 32, offset: 128)
!19734 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !19707, file: !199, line: 127, baseType: !102, size: 32, offset: 160)
!19735 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !19707, file: !199, line: 131, baseType: !19736, size: 192, offset: 192)
!19736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !131, line: 244, size: 192, elements: !19737)
!19737 = !{!19738, !19739, !19745}
!19738 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !19736, file: !131, line: 245, baseType: !19713, size: 64)
!19739 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !19736, file: !131, line: 246, baseType: !19740, size: 32, offset: 64)
!19740 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !131, line: 242, baseType: !19741)
!19741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19742, size: 32)
!19742 = !DISubroutineType(types: !19743)
!19743 = !{null, !19744}
!19744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19736, size: 32)
!19745 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !19736, file: !131, line: 249, baseType: !106, size: 64, offset: 128)
!19746 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !19704, file: !199, line: 250, baseType: !19747, size: 288, offset: 384)
!19747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !248, line: 25, size: 288, elements: !19748)
!19748 = !{!19749, !19750, !19751, !19752, !19753, !19754, !19755, !19756, !19757}
!19749 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !19747, file: !248, line: 26, baseType: !111, size: 32)
!19750 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !19747, file: !248, line: 27, baseType: !111, size: 32, offset: 32)
!19751 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !19747, file: !248, line: 28, baseType: !111, size: 32, offset: 64)
!19752 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !19747, file: !248, line: 29, baseType: !111, size: 32, offset: 96)
!19753 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !19747, file: !248, line: 30, baseType: !111, size: 32, offset: 128)
!19754 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !19747, file: !248, line: 31, baseType: !111, size: 32, offset: 160)
!19755 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !19747, file: !248, line: 32, baseType: !111, size: 32, offset: 192)
!19756 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !19747, file: !248, line: 33, baseType: !111, size: 32, offset: 224)
!19757 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !19747, file: !248, line: 34, baseType: !111, size: 32, offset: 256)
!19758 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !19704, file: !199, line: 253, baseType: !102, size: 32, offset: 672)
!19759 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !19704, file: !199, line: 256, baseType: !2982, size: 64, offset: 704)
!19760 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !19704, file: !199, line: 294, baseType: !103, size: 32, offset: 768)
!19761 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !19704, file: !199, line: 300, baseType: !19762, size: 96, offset: 800)
!19762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !199, line: 149, size: 96, elements: !19763)
!19763 = !{!19764, !19765, !19766}
!19764 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !19762, file: !199, line: 153, baseType: !22, size: 32)
!19765 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !19762, file: !199, line: 162, baseType: !156, size: 32, offset: 32)
!19766 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !19762, file: !199, line: 168, baseType: !156, size: 32, offset: 64)
!19767 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !19704, file: !199, line: 325, baseType: !19595, size: 32, offset: 896)
!19768 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !19704, file: !199, line: 343, baseType: !19769, size: 64, offset: 928)
!19769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !248, line: 60, size: 64, elements: !19770)
!19770 = !{!19771, !19772}
!19771 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !19769, file: !248, line: 63, baseType: !111, size: 32)
!19772 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !19769, file: !248, line: 66, baseType: !111, size: 32, offset: 32)
!19773 = !{!19774}
!19774 = !DILocalVariable(name: "thread", arg: 1, scope: !19700, file: !2972, line: 116, type: !19703)
!19775 = !DILocation(line: 0, scope: !19700)
!19776 = !DILocation(line: 118, column: 10, scope: !19700)
!19777 = !DILocation(line: 118, column: 24, scope: !19700)
!19778 = !DILocation(line: 119, column: 1, scope: !19700)
!19779 = distinct !DISubprogram(name: "z_thread_aligned_alloc", scope: !2972, file: !2972, line: 124, type: !19607, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !19780)
!19780 = !{!19781, !19782, !19783, !19784}
!19781 = !DILocalVariable(name: "align", arg: 1, scope: !19779, file: !2972, line: 124, type: !156)
!19782 = !DILocalVariable(name: "size", arg: 2, scope: !19779, file: !2972, line: 124, type: !156)
!19783 = !DILocalVariable(name: "ret", scope: !19779, file: !2972, line: 126, type: !102)
!19784 = !DILocalVariable(name: "heap", scope: !19779, file: !2972, line: 127, type: !19595)
!19785 = !DILocation(line: 0, scope: !19779)
!19786 = !DILocation(line: 129, column: 6, scope: !19787)
!19787 = distinct !DILexicalBlock(scope: !19779, file: !2972, line: 129, column: 6)
!19788 = !DILocation(line: 129, column: 6, scope: !19779)
!19789 = !DILocation(line: 132, column: 10, scope: !19790)
!19790 = distinct !DILexicalBlock(scope: !19787, file: !2972, line: 131, column: 9)
!19791 = !DILocation(line: 132, column: 20, scope: !19790)
!19792 = !DILocation(line: 135, column: 11, scope: !19793)
!19793 = distinct !DILexicalBlock(scope: !19779, file: !2972, line: 135, column: 6)
!19794 = !DILocation(line: 135, column: 6, scope: !19779)
!19795 = !DILocation(line: 136, column: 9, scope: !19796)
!19796 = distinct !DILexicalBlock(scope: !19793, file: !2972, line: 135, column: 20)
!19797 = !DILocation(line: 137, column: 2, scope: !19796)
!19798 = !DILocation(line: 0, scope: !19793)
!19799 = !DILocation(line: 141, column: 2, scope: !19779)
!19800 = distinct !DISubprogram(name: "boot_banner", scope: !19801, file: !19801, line: 26, type: !323, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3700, retainedNodes: !2512)
!19801 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!19802 = !DILocation(line: 36, column: 1, scope: !19800)
!19803 = distinct !DISubprogram(name: "statics_init", scope: !3028, file: !3028, line: 21, type: !3034, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19804)
!19804 = !{!19805, !19806}
!19805 = !DILocalVariable(name: "unused", arg: 1, scope: !19803, file: !3028, line: 21, type: !3036)
!19806 = !DILocalVariable(name: "h", scope: !19807, file: !3028, line: 24, type: !19808)
!19807 = distinct !DILexicalBlock(scope: !19803, file: !3028, line: 24, column: 2)
!19808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19809, size: 32)
!19809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !127, line: 5073, size: 192, elements: !19810)
!19810 = !{!19811, !19817, !19823}
!19811 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19809, file: !127, line: 5074, baseType: !19812, size: 96)
!19812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !274, line: 56, size: 96, elements: !19813)
!19813 = !{!19814, !19815, !19816}
!19814 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !19812, file: !274, line: 57, baseType: !277, size: 32)
!19815 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !19812, file: !274, line: 58, baseType: !102, size: 32, offset: 32)
!19816 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !19812, file: !274, line: 59, baseType: !156, size: 32, offset: 64)
!19817 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !19809, file: !127, line: 5075, baseType: !19818, size: 64, offset: 96)
!19818 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !131, line: 233, baseType: !19819)
!19819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !131, line: 231, size: 64, elements: !19820)
!19820 = !{!19821}
!19821 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !19819, file: !131, line: 232, baseType: !19822, size: 64)
!19822 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !136, line: 48, baseType: !3014)
!19823 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !19809, file: !127, line: 5076, baseType: !19824, size: 32, offset: 160)
!19824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !152, line: 43, size: 32, elements: !19825)
!19825 = !{!19826}
!19826 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !19824, file: !152, line: 52, baseType: !22, size: 32)
!19827 = !DILocation(line: 0, scope: !19803)
!19828 = !DILocation(line: 0, scope: !19807)
!19829 = !DILocation(line: 24, column: 2, scope: !19830)
!19830 = distinct !DILexicalBlock(scope: !19831, file: !3028, line: 24, column: 2)
!19831 = distinct !DILexicalBlock(scope: !19832, file: !3028, line: 24, column: 2)
!19832 = distinct !DILexicalBlock(scope: !19807, file: !3028, line: 24, column: 2)
!19833 = !DILocation(line: 24, column: 2, scope: !19834)
!19834 = distinct !DILexicalBlock(scope: !19835, file: !3028, line: 24, column: 2)
!19835 = distinct !DILexicalBlock(scope: !19830, file: !3028, line: 24, column: 2)
!19836 = !DILocation(line: 24, column: 2, scope: !19831)
!19837 = !DILocation(line: 24, column: 2, scope: !19807)
!19838 = !DILocation(line: 52, column: 2, scope: !19803)
!19839 = !DILocation(line: 49, column: 27, scope: !19840)
!19840 = distinct !DILexicalBlock(scope: !19841, file: !3028, line: 48, column: 3)
!19841 = distinct !DILexicalBlock(scope: !19832, file: !3028, line: 24, column: 36)
!19842 = !DILocation(line: 49, column: 45, scope: !19840)
!19843 = !DILocation(line: 49, column: 4, scope: !19840)
!19844 = !DILocation(line: 24, column: 2, scope: !19832)
!19845 = !DILocation(line: 24, column: 2, scope: !19835)
!19846 = distinct !{!19846, !19837, !19847}
!19847 = !DILocation(line: 51, column: 2, scope: !19807)
!19848 = distinct !DISubprogram(name: "k_heap_init", scope: !3028, file: !3028, line: 13, type: !19849, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19851)
!19849 = !DISubroutineType(types: !19850)
!19850 = !{null, !19808, !102, !156}
!19851 = !{!19852, !19853, !19854}
!19852 = !DILocalVariable(name: "h", arg: 1, scope: !19848, file: !3028, line: 13, type: !19808)
!19853 = !DILocalVariable(name: "mem", arg: 2, scope: !19848, file: !3028, line: 13, type: !102)
!19854 = !DILocalVariable(name: "bytes", arg: 3, scope: !19848, file: !3028, line: 13, type: !156)
!19855 = !DILocation(line: 0, scope: !19848)
!19856 = !DILocation(line: 15, column: 19, scope: !19848)
!19857 = !DILocation(line: 15, column: 2, scope: !19848)
!19858 = !DILocation(line: 16, column: 20, scope: !19848)
!19859 = !DILocation(line: 16, column: 2, scope: !19848)
!19860 = !DILocation(line: 19, column: 1, scope: !19848)
!19861 = distinct !DISubprogram(name: "z_waitq_init", scope: !15203, file: !15203, line: 47, type: !19862, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19865)
!19862 = !DISubroutineType(types: !19863)
!19863 = !{null, !19864}
!19864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19818, size: 32)
!19865 = !{!19866}
!19866 = !DILocalVariable(name: "w", arg: 1, scope: !19861, file: !15203, line: 47, type: !19864)
!19867 = !DILocation(line: 0, scope: !19861)
!19868 = !DILocation(line: 49, column: 21, scope: !19861)
!19869 = !DILocation(line: 49, column: 2, scope: !19861)
!19870 = !DILocation(line: 50, column: 1, scope: !19861)
!19871 = distinct !DISubprogram(name: "sys_dlist_init", scope: !136, file: !136, line: 197, type: !19872, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19875)
!19872 = !DISubroutineType(types: !19873)
!19873 = !{null, !19874}
!19874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19822, size: 32)
!19875 = !{!19876}
!19876 = !DILocalVariable(name: "list", arg: 1, scope: !19871, file: !136, line: 197, type: !19874)
!19877 = !DILocation(line: 0, scope: !19871)
!19878 = !DILocation(line: 199, column: 8, scope: !19871)
!19879 = !DILocation(line: 199, column: 13, scope: !19871)
!19880 = !DILocation(line: 200, column: 8, scope: !19871)
!19881 = !DILocation(line: 200, column: 13, scope: !19871)
!19882 = !DILocation(line: 201, column: 1, scope: !19871)
!19883 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !3028, file: !3028, line: 64, type: !19884, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19890)
!19884 = !DISubroutineType(types: !19885)
!19885 = !{!102, !19808, !156, !156, !19886}
!19886 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !19887)
!19887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !19888)
!19888 = !{!19889}
!19889 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !19887, file: !105, line: 66, baseType: !104, size: 64)
!19890 = !{!19891, !19892, !19893, !19894, !19895, !19896, !19897, !19898, !19903}
!19891 = !DILocalVariable(name: "h", arg: 1, scope: !19883, file: !3028, line: 64, type: !19808)
!19892 = !DILocalVariable(name: "align", arg: 2, scope: !19883, file: !3028, line: 64, type: !156)
!19893 = !DILocalVariable(name: "bytes", arg: 3, scope: !19883, file: !3028, line: 64, type: !156)
!19894 = !DILocalVariable(name: "timeout", arg: 4, scope: !19883, file: !3028, line: 65, type: !19886)
!19895 = !DILocalVariable(name: "now", scope: !19883, file: !3028, line: 67, type: !106)
!19896 = !DILocalVariable(name: "end", scope: !19883, file: !3028, line: 67, type: !106)
!19897 = !DILocalVariable(name: "ret", scope: !19883, file: !3028, line: 68, type: !102)
!19898 = !DILocalVariable(name: "key", scope: !19883, file: !3028, line: 72, type: !19899)
!19899 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !152, line: 106, baseType: !19900)
!19900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !152, line: 32, size: 32, elements: !19901)
!19901 = !{!19902}
!19902 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !19900, file: !152, line: 33, baseType: !103, size: 32)
!19903 = !DILocalVariable(name: "blocked_alloc", scope: !19883, file: !3028, line: 78, type: !122)
!19904 = !DILocation(line: 0, scope: !19883)
!19905 = !DILocation(line: 67, column: 21, scope: !19883)
!19906 = !DILocation(line: 70, column: 8, scope: !19883)
!19907 = !DILocation(line: 72, column: 41, scope: !19883)
!19908 = !DILocalVariable(name: "l", arg: 1, scope: !19909, file: !152, line: 136, type: !19912)
!19909 = distinct !DISubprogram(name: "k_spin_lock", scope: !152, file: !152, line: 136, type: !19910, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19913)
!19910 = !DISubroutineType(types: !19911)
!19911 = !{!19899, !19912}
!19912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19824, size: 32)
!19913 = !{!19908, !19914}
!19914 = !DILocalVariable(name: "k", scope: !19909, file: !152, line: 139, type: !19899)
!19915 = !DILocation(line: 0, scope: !19909, inlinedAt: !19916)
!19916 = distinct !DILocation(line: 72, column: 25, scope: !19883)
!19917 = !DILocation(line: 55, column: 2, scope: !19918, inlinedAt: !19922)
!19918 = distinct !DISubprogram(name: "arch_irq_lock", scope: !7496, file: !7496, line: 42, type: !7497, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19919)
!19919 = !{!19920, !19921}
!19920 = !DILocalVariable(name: "key", scope: !19918, file: !7496, line: 44, type: !32)
!19921 = !DILocalVariable(name: "tmp", scope: !19918, file: !7496, line: 53, type: !32)
!19922 = distinct !DILocation(line: 145, column: 10, scope: !19909, inlinedAt: !19916)
!19923 = !{i64 1653111}
!19924 = !DILocation(line: 0, scope: !19918, inlinedAt: !19922)
!19925 = !DILocation(line: 148, column: 2, scope: !19926, inlinedAt: !19916)
!19926 = distinct !DILexicalBlock(scope: !19927, file: !152, line: 148, column: 2)
!19927 = distinct !DILexicalBlock(scope: !19909, file: !152, line: 148, column: 2)
!19928 = !DILocation(line: 148, column: 2, scope: !19927, inlinedAt: !19916)
!19929 = !DILocation(line: 148, column: 2, scope: !19930, inlinedAt: !19916)
!19930 = distinct !DILexicalBlock(scope: !19926, file: !152, line: 148, column: 2)
!19931 = !DILocation(line: 160, column: 2, scope: !19909, inlinedAt: !19916)
!19932 = !DILocation(line: 1031, column: 3, scope: !19933, inlinedAt: !19936)
!19933 = distinct !DISubprogram(name: "__get_IPSR", scope: !7834, file: !7834, line: 1027, type: !8837, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19934)
!19934 = !{!19935}
!19935 = !DILocalVariable(name: "result", scope: !19933, file: !7834, line: 1029, type: !111)
!19936 = distinct !DILocation(line: 48, column: 10, scope: !19937, inlinedAt: !19938)
!19937 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !8843, file: !8843, line: 46, type: !8844, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !2512)
!19938 = distinct !DILocation(line: 76, column: 2, scope: !19939)
!19939 = distinct !DILexicalBlock(scope: !19940, file: !3028, line: 76, column: 2)
!19940 = distinct !DILexicalBlock(scope: !19883, file: !3028, line: 76, column: 2)
!19941 = !{i64 2447046}
!19942 = !DILocation(line: 0, scope: !19933, inlinedAt: !19936)
!19943 = !DILocation(line: 48, column: 9, scope: !19937, inlinedAt: !19938)
!19944 = !DILocation(line: 76, column: 2, scope: !19939)
!19945 = !DILocation(line: 81, column: 9, scope: !19946)
!19946 = distinct !DILexicalBlock(scope: !19883, file: !3028, line: 80, column: 22)
!19947 = !DILocation(line: 83, column: 9, scope: !19946)
!19948 = !DILocation(line: 85, column: 12, scope: !19949)
!19949 = distinct !DILexicalBlock(scope: !19946, file: !3028, line: 84, column: 7)
!19950 = !DILocation(line: 85, column: 21, scope: !19949)
!19951 = !DILocation(line: 76, column: 2, scope: !19952)
!19952 = distinct !DILexicalBlock(scope: !19939, file: !3028, line: 76, column: 2)
!19953 = !DILocation(line: 85, column: 30, scope: !19949)
!19954 = !DILocation(line: 85, column: 37, scope: !19949)
!19955 = !DILocation(line: 84, column: 7, scope: !19946)
!19956 = !DILocation(line: 99, column: 10, scope: !19946)
!19957 = !DILocation(line: 0, scope: !19909, inlinedAt: !19958)
!19958 = distinct !DILocation(line: 101, column: 9, scope: !19946)
!19959 = !DILocation(line: 55, column: 2, scope: !19918, inlinedAt: !19960)
!19960 = distinct !DILocation(line: 145, column: 10, scope: !19909, inlinedAt: !19958)
!19961 = !DILocation(line: 0, scope: !19918, inlinedAt: !19960)
!19962 = !DILocation(line: 148, column: 2, scope: !19926, inlinedAt: !19958)
!19963 = !DILocation(line: 148, column: 2, scope: !19927, inlinedAt: !19958)
!19964 = !DILocation(line: 148, column: 2, scope: !19930, inlinedAt: !19958)
!19965 = !DILocation(line: 160, column: 2, scope: !19909, inlinedAt: !19958)
!19966 = distinct !{!19966, !19967, !19968}
!19967 = !DILocation(line: 80, column: 2, scope: !19883)
!19968 = !DILocation(line: 102, column: 2, scope: !19883)
!19969 = !DILocalVariable(name: "key", arg: 2, scope: !19970, file: !152, line: 190, type: !19899)
!19970 = distinct !DISubprogram(name: "k_spin_unlock", scope: !152, file: !152, line: 189, type: !19971, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19973)
!19971 = !DISubroutineType(types: !19972)
!19972 = !{null, !19912, !19899}
!19973 = !{!19974, !19969}
!19974 = !DILocalVariable(name: "l", arg: 1, scope: !19970, file: !152, line: 189, type: !19912)
!19975 = !DILocation(line: 0, scope: !19970, inlinedAt: !19976)
!19976 = distinct !DILocation(line: 106, column: 2, scope: !19883)
!19977 = !DILocation(line: 194, column: 2, scope: !19978, inlinedAt: !19976)
!19978 = distinct !DILexicalBlock(scope: !19979, file: !152, line: 194, column: 2)
!19979 = distinct !DILexicalBlock(scope: !19970, file: !152, line: 194, column: 2)
!19980 = !DILocation(line: 194, column: 2, scope: !19979, inlinedAt: !19976)
!19981 = !DILocation(line: 194, column: 2, scope: !19982, inlinedAt: !19976)
!19982 = distinct !DILexicalBlock(scope: !19978, file: !152, line: 194, column: 2)
!19983 = !DILocalVariable(name: "key", arg: 1, scope: !19984, file: !7496, line: 84, type: !32)
!19984 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !7496, file: !7496, line: 84, type: !7507, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19985)
!19985 = !{!19983}
!19986 = !DILocation(line: 0, scope: !19984, inlinedAt: !19987)
!19987 = distinct !DILocation(line: 215, column: 2, scope: !19970, inlinedAt: !19976)
!19988 = !DILocation(line: 95, column: 2, scope: !19984, inlinedAt: !19987)
!19989 = !{i64 1653928}
!19990 = !DILocation(line: 107, column: 2, scope: !19883)
!19991 = distinct !DISubprogram(name: "k_heap_alloc", scope: !3028, file: !3028, line: 110, type: !19992, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !19994)
!19992 = !DISubroutineType(types: !19993)
!19993 = !{!102, !19808, !156, !19886}
!19994 = !{!19995, !19996, !19997, !19998}
!19995 = !DILocalVariable(name: "h", arg: 1, scope: !19991, file: !3028, line: 110, type: !19808)
!19996 = !DILocalVariable(name: "bytes", arg: 2, scope: !19991, file: !3028, line: 110, type: !156)
!19997 = !DILocalVariable(name: "timeout", arg: 3, scope: !19991, file: !3028, line: 110, type: !19886)
!19998 = !DILocalVariable(name: "ret", scope: !19991, file: !3028, line: 114, type: !102)
!19999 = !DILocation(line: 0, scope: !19991)
!20000 = !DILocation(line: 114, column: 14, scope: !19991)
!20001 = !DILocation(line: 118, column: 2, scope: !19991)
!20002 = distinct !DISubprogram(name: "k_heap_free", scope: !3028, file: !3028, line: 121, type: !20003, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !20005)
!20003 = !DISubroutineType(types: !20004)
!20004 = !{null, !19808, !102}
!20005 = !{!20006, !20007, !20008}
!20006 = !DILocalVariable(name: "h", arg: 1, scope: !20002, file: !3028, line: 121, type: !19808)
!20007 = !DILocalVariable(name: "mem", arg: 2, scope: !20002, file: !3028, line: 121, type: !102)
!20008 = !DILocalVariable(name: "key", scope: !20002, file: !3028, line: 123, type: !19899)
!20009 = !DILocation(line: 0, scope: !20002)
!20010 = !DILocation(line: 123, column: 41, scope: !20002)
!20011 = !DILocation(line: 0, scope: !19909, inlinedAt: !20012)
!20012 = distinct !DILocation(line: 123, column: 25, scope: !20002)
!20013 = !DILocation(line: 55, column: 2, scope: !19918, inlinedAt: !20014)
!20014 = distinct !DILocation(line: 145, column: 10, scope: !19909, inlinedAt: !20012)
!20015 = !DILocation(line: 0, scope: !19918, inlinedAt: !20014)
!20016 = !DILocation(line: 148, column: 2, scope: !19926, inlinedAt: !20012)
!20017 = !DILocation(line: 148, column: 2, scope: !19927, inlinedAt: !20012)
!20018 = !DILocation(line: 148, column: 2, scope: !19930, inlinedAt: !20012)
!20019 = !DILocation(line: 160, column: 2, scope: !19909, inlinedAt: !20012)
!20020 = !DILocation(line: 125, column: 20, scope: !20002)
!20021 = !DILocation(line: 125, column: 2, scope: !20002)
!20022 = !DILocation(line: 128, column: 60, scope: !20023)
!20023 = distinct !DILexicalBlock(scope: !20002, file: !3028, line: 128, column: 6)
!20024 = !DILocation(line: 128, column: 43, scope: !20023)
!20025 = !DILocation(line: 128, column: 68, scope: !20023)
!20026 = !DILocation(line: 128, column: 6, scope: !20002)
!20027 = !DILocation(line: 129, column: 3, scope: !20028)
!20028 = distinct !DILexicalBlock(scope: !20023, file: !3028, line: 128, column: 74)
!20029 = !DILocation(line: 130, column: 2, scope: !20028)
!20030 = !DILocation(line: 0, scope: !19970, inlinedAt: !20031)
!20031 = distinct !DILocation(line: 131, column: 3, scope: !20032)
!20032 = distinct !DILexicalBlock(scope: !20023, file: !3028, line: 130, column: 9)
!20033 = !DILocation(line: 194, column: 2, scope: !19978, inlinedAt: !20031)
!20034 = !DILocation(line: 194, column: 2, scope: !19979, inlinedAt: !20031)
!20035 = !DILocation(line: 194, column: 2, scope: !19982, inlinedAt: !20031)
!20036 = !DILocation(line: 0, scope: !19984, inlinedAt: !20037)
!20037 = distinct !DILocation(line: 215, column: 2, scope: !19970, inlinedAt: !20031)
!20038 = !DILocation(line: 95, column: 2, scope: !19984, inlinedAt: !20037)
!20039 = !DILocation(line: 133, column: 1, scope: !20002)
