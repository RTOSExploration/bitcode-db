; ModuleID = 'build/96b_wistrio/pytest/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.ztest_suite_stats = type { i32, i32, i32 }
%struct.ztest_suite_node = type { i8*, i8* ()*, void (i8*)*, void (i8*)*, void (i8*)*, i1 (i8*)*, %struct.ztest_suite_stats* }
%struct.ztest_unit_test_stats = type { i32, i32, i32, i32, i32 }
%struct.ztest_unit_test = type { i8*, i8*, void (i8*)*, i32, %struct.ztest_unit_test_stats* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.k_spinlock = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, [32 x i8], i32, %struct.ztest_suite_stats, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct._thread_arch = type { i32, i32 }
%struct.ztest_test_rule = type { void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)* }
%struct.ztest_expected_result_entry = type { i8*, i8*, i32 }
%struct.ztest_arch_api = type { void (i8*)*, i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, i8*)* }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236124 to i8*), void (i8*)* inttoptr (i32 134234875 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236124 to i8*), void (i8*)* inttoptr (i32 134234865 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236124 to i8*), void (i8*)* inttoptr (i32 134234855 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236124 to i8*), void (i8*)* inttoptr (i32 134234845 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236124 to i8*), void (i8*)* inttoptr (i32 134234835 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236124 to i8*), void (i8*)* inttoptr (i32 134234825 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236124 to i8*), void (i8*)* inttoptr (i32 134234815 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [38 x i8*] [i8* bitcast (%struct.ztest_suite_node* @z_ztest_test_node_test_pytest to i8*), i8* bitcast (%struct.ztest_unit_test* @z_ztest_unit_test__test_pytest__test_pytest to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [12 x i8] c"test_pytest\00", align 1
@z_ztest_suite_node_stats_test_pytest = dso_local global %struct.ztest_suite_stats zeroinitializer, align 4, !dbg !25
@z_ztest_test_node_test_pytest = internal constant %struct.ztest_suite_node { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* ()* null, void (i8*)* null, void (i8*)* null, void (i8*)* null, i1 (i8*)* null, %struct.ztest_suite_stats* @z_ztest_suite_node_stats_test_pytest }, section "._ztest_suite_node.static.z_ztest_test_node_test_pytest", align 4, !dbg !109
@z_ztest_unit_test_stats_test_pytest_test_pytest = dso_local global %struct.ztest_unit_test_stats zeroinitializer, align 4, !dbg !173
@z_ztest_unit_test__test_pytest__test_pytest = internal global %struct.ztest_unit_test { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i32 0, i32 0), void (i8*)* @_test_pytest_test_pytest_wrapper, i32 0, %struct.ztest_unit_test_stats* @z_ztest_unit_test_stats_test_pytest_test_pytest }, section "._ztest_unit_test.static.z_ztest_unit_test__test_pytest__test_pytest", align 4, !dbg !155
@.str.1 = private unnamed_addr constant [13 x i8] c"Hello world\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !175
@.str.1.4 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.5 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !207
@.str.13 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !216
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !279
@.str.22 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.24 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.25 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.23 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.27 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.28 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.26 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.29 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.30 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.31 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.32 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.33 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.34 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.35 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.36 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.40 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.41 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.42 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.55 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.47 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.48 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.49 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.50 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.51 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.52 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.53 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.54 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13.46 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.22.45 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.26 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.29.43 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.31 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.33.44 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.61 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.61, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !308
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !460
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !314
@.str.67 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.68 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.69 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.70 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.75 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.76 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !469
@.str.6.77 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.78 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.71 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.72 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !505
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i32 0, i32 0), %struct.k_spinlock { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.88, i32 0, i32 0), %struct.k_spinlock { i32 285933596 } }], align 4, !dbg !515
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !520
@.str.87 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.88 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !540
@.str.90 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.92 = private unnamed_addr constant [42 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio.h\00", align 1
@.str.10.103 = private unnamed_addr constant [62 x i8] c"(cfg->port_pin_mask & (gpio_port_pins_t)(1UL << (pin))) != 0U\00", align 1
@.str.11.104 = private unnamed_addr constant [18 x i8] c"\09Unsupported pin\0A\00", align 1
@.str.12.91 = private unnamed_addr constant [93 x i8] c"(flags & ((1U << 21) | (1U << 22) | (1U << 23) | (1U << 24) | (1U << 25) | (1U << 26))) == 0\00", align 1
@.str.13.93 = private unnamed_addr constant [36 x i8] c"\09Interrupt flags are not supported\0A\00", align 1
@.str.14.94 = private unnamed_addr constant [57 x i8] c"(flags & ((1 << 4) | (1 << 5))) != ((1 << 4) | (1 << 5))\00", align 1
@.str.15.95 = private unnamed_addr constant [61 x i8] c"\09Pull Up and Pull Down should not be enabled simultaneously\0A\00", align 1
@.str.16.96 = private unnamed_addr constant [53 x i8] c"(flags & (1U << 17)) != 0 || (flags & (1 << 1)) == 0\00", align 1
@.str.17.97 = private unnamed_addr constant [82 x i8] c"\09Output needs to be enabled for 'Open Drain', 'Open Source' mode to be supported\0A\00", align 1
@.str.18.98 = private unnamed_addr constant [51 x i8] c"(flags & (1 << 1)) != 0 || (flags & (1 << 2)) == 0\00", align 1
@.str.19.99 = private unnamed_addr constant [70 x i8] c"(flags & ((1U << 18) | (1U << 19))) == 0 || (flags & (1U << 17)) != 0\00", align 1
@.str.20.100 = private unnamed_addr constant [59 x i8] c"\09Output needs to be enabled to be initialized low or high\0A\00", align 1
@.str.21.101 = private unnamed_addr constant [65 x i8] c"(flags & ((1U << 18) | (1U << 19))) != ((1U << 18) | (1U << 19))\00", align 1
@.str.22.102 = private unnamed_addr constant [44 x i8] c"\09Output cannot be initialized low and high\0A\00", align 1
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@phase = dso_local local_unnamed_addr global i32 5, align 4, !dbg !648
@test_status = internal unnamed_addr global i32 0, align 4, !dbg !703
@.str.105 = private unnamed_addr constant [69 x i8] c"===================================================================\0A\00", align 1
@.str.1.108 = private unnamed_addr constant [22 x i8] c"PROJECT EXECUTION %s\0A\00", align 1
@.str.2.107 = private unnamed_addr constant [7 x i8] c"FAILED\00", align 1
@.str.3.106 = private unnamed_addr constant [11 x i8] c"SUCCESSFUL\00", align 1
@current_test_failed_assumption = internal unnamed_addr global i1 false, align 1, !dbg !814
@test_result = internal unnamed_addr global i32 0, align 4, !dbg !690
@.str.4.120 = private unnamed_addr constant [51 x i8] c" ERROR: cannot fail in test phase '%s()', bailing\0A\00", align 1
@.str.5.121 = private unnamed_addr constant [51 x i8] c" ERROR: cannot pass in test phase '%s()', bailing\0A\00", align 1
@.str.6.109 = private unnamed_addr constant [51 x i8] c" ERROR: cannot skip in test phase '%s()', bailing\0A\00", align 1
@_ztest_unit_test_list_start = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_unit_test_list_end = external dso_local global [0 x %struct.ztest_unit_test], align 4
@_ztest_suite_node_list_start = external dso_local global [0 x %struct.ztest_suite_node], align 4
@_ztest_suite_node_list_end = external dso_local global [0 x %struct.ztest_suite_node], align 4
@.str.7.136 = private unnamed_addr constant [37 x i8] c"ERROR: Test suite '%s' did not run.\0A\00", align 1
@.str.8.137 = private unnamed_addr constant [66 x i8] c"ERROR: Test '%s' assigned to test suite '%s' which doesn't exist\0A\00", align 1
@.str.9.138 = private unnamed_addr constant [21 x i8] c"Bad stats for %s.%s\0A\00", align 1
@ztest_thread_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/subsys/testsuite/ztest/src/ztest_new.c\22.0", align 64, !dbg !694
@ztest_thread = internal global %struct.k_thread zeroinitializer, align 8, !dbg !705
@.str.10.111 = private unnamed_addr constant [6 x i8] c"setup\00", align 1
@.str.11.112 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.12.113 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.13.114 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.14.115 = private unnamed_addr constant [9 x i8] c"teardown\00", align 1
@.str.15.116 = private unnamed_addr constant [10 x i8] c"framework\00", align 1
@.str.16.110 = private unnamed_addr constant [10 x i8] c"(unknown)\00", align 1
@.str.17.122 = private unnamed_addr constant [22 x i8] c"Running TESTSUITE %s\0A\00", align 1
@.str.18.124 = private unnamed_addr constant [24 x i8] c"TESTSUITE %s succeeded\0A\00", align 1
@.str.19.123 = private unnamed_addr constant [22 x i8] c"TESTSUITE %s failed.\0A\00", align 1
@.str.20.125 = private unnamed_addr constant [12 x i8] c"START - %s\0A\00", align 1
@tc_spend_time = internal unnamed_addr global i32 0, align 4, !dbg !812
@.str.21.126 = private unnamed_addr constant [29 x i8] c" %s - %s in %u.%03u seconds\0A\00", align 1
@tc_start_time = internal unnamed_addr global i32 0, align 4, !dbg !809
@_ztest_test_rule_list_start = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_test_rule_list_end = external dso_local global [0 x %struct.ztest_test_rule], align 4
@_ztest_expected_result_entry_list_start = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@_ztest_expected_result_entry_list_end = external dso_local global [0 x %struct.ztest_expected_result_entry], align 4
@.str.24.128 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.25.129 = private unnamed_addr constant [5 x i8] c"FAIL\00", align 1
@.str.26.130 = private unnamed_addr constant [5 x i8] c"SKIP\00", align 1
@.str.27.127 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.28.131 = private unnamed_addr constant [41 x i8] c"\0A------ TESTSUITE SUMMARY START ------\0A\0A\00", align 1
@.str.29.132 = private unnamed_addr constant [38 x i8] c"------ TESTSUITE SUMMARY END ------\0A\0A\00", align 1
@.str.30.133 = private unnamed_addr constant [44 x i8] c" - %s - [%s.%s] duration = %u.%03u seconds\0A\00", align 1
@.str.31.134 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32.135 = private unnamed_addr constant [100 x i8] c"SUITE %s - %3d.%02d%% [%s]: pass = %d, fail = %d, skip = %d, total = %d duration = %u.%03u seconds\0A\00", align 1
@switch.table.get_friendly_phase_name = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.111, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.112, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12.113, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.114, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.115, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.116, i32 0, i32 0)], align 4
@switch.table.TC_RESULT_TO_STR = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.128, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.129, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26.130, i32 0, i32 0)], align 4
@ztest_api = dso_local local_unnamed_addr constant %struct.ztest_arch_api { void (i8*)* @z_ztest_run_all, i1 (i8*, %struct.ztest_suite_node*)* @z_ztest_should_suite_run, i1 (i8*, i8*)* @z_ztest_should_test_run }, align 4, !dbg !815
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !850
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1003
@.str.4.141 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !972
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !955
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.141, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !928
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !944
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !974
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !988
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !990
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !992
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !994
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !996
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !998
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1008
@.str.143 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !1033
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1108
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1097
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1149
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1024
@.str.154 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !1215
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1461
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1439
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1425
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1373
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1022
@.str.1.164 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1463
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1443
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1441
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1390
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1020
@.str.2.165 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1476
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1447
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1445
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1399
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1018
@.str.3.166 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1478
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1451
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1449
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1408
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1016
@.str.4.167 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1480
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1455
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1453
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1414
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1014
@.str.5.168 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1482
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1459
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1457
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1423
@.str.6.155 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.29.161 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.30.157 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.31.160 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.32.156 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.33.158 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.34.159 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.172 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.172, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1484
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1028
@.str.1.173 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1644
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1699
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1640
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1701
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.173, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1625
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1627
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !1026
@.str.2.182 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1707
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1642
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1717
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.182, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1636
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1638
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1688
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1691
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1693
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1696
@.str.3.175 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.4.176 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.177 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.6.178 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.7.179 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.8.185 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.9.187 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.10.188 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.143, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1081
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1709
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1711
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1713
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1715
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.11 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1724
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1835
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1837
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1833
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1828
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1802
@.str.192 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.193 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.194 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.195 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.196 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.197 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1839
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.154, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1371
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.164, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1388
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.165, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1397
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.166, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1406
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.167, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1412
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.168, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1421
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1926
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1950
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1953
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1957
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1961
@.str.230 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.234 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.235 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.236 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.240 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.241 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.242 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.243 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.244 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.239 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.238 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.240, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.241, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.242, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.243, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.244, i32 0, i32 0)], align 4
@.str.246 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.246, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1968
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2192
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2181
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2187
@z_idle_stacks = internal global [1 x [4160 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2199
@.str.5.252 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2204
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.256 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.264, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.265, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.266, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.267, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.268, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.262, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.269, i32 0, i32 0)], align 4, !dbg !2232
@.str.263 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.264 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.265 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.266 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.267 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.268 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.262 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.269 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2347
@.str.8.261 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.274 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.275 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.276 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.277 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.281 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.282 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.286 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.287 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.296 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.297 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.298 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2360
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2471
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2474
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2476
@.str.299 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.315 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.306 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.320 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.328 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.308 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.323 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.305 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.332 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.333 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.339 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.340 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.341 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.344 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.300 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.301 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.302 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.303 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.304 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.307 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.319 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.324 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.325 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2189
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2197
@.str.23.334 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.350 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.351 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.352 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.353 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2478
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2508
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2513
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2055
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2511
@.str.4.354 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.355 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.356 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.360 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.361 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.381 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3053 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3057, !srcloc !3058
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3059, !srcloc !3060
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3061, !srcloc !3062
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3063, !srcloc !3064
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3065, !srcloc !3066
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3067, !srcloc !3068
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3069, !srcloc !3070
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3071, !srcloc !3072
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3073, !srcloc !3074
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3075, !srcloc !3076
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3077, !srcloc !3078
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3079, !srcloc !3080
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3081, !srcloc !3082
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3083, !srcloc !3084
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3085, !srcloc !3086
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3087, !srcloc !3088
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3089, !srcloc !3090
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3111, !srcloc !3114
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3145, !srcloc !3146
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3147, !srcloc !3148
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3161, !srcloc !3162
  ret void, !dbg !3163
}

; Function Attrs: noinline nounwind optsize
define internal void @_test_pytest_test_pytest_wrapper(i8* nocapture noundef readnone %0) #1 !dbg !3166 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3168, metadata !DIExpression()), !dbg !3169
  tail call fastcc void @test_pytest_test_pytest() #24, !dbg !3170
  ret void, !dbg !3170
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_pytest_test_pytest() unnamed_addr #1 !dbg !3171 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0)) #25, !dbg !3172
  ret void, !dbg !3173
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3174 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3189, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %0, metadata !3185, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %1, metadata !3186, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %2, metadata !3187, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %3, metadata !3188, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %0, metadata !3190, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %0, metadata !3191, metadata !DIExpression()), !dbg !3252
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3253
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3253
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3194, metadata !DIExpression()), !dbg !3254
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3255
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3255
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3196, metadata !DIExpression()), !dbg !3256
  call void @llvm.dbg.value(metadata i32 0, metadata !3197, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 0, metadata !3198, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 0, metadata !3199, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 -1, metadata !3200, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 0, metadata !3203, metadata !DIExpression()), !dbg !3252
  %12 = and i32 %2, 4, !dbg !3257
  %13 = icmp eq i32 %12, 0, !dbg !3258
  call void @llvm.dbg.value(metadata i1 %13, metadata !3204, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3252
  %14 = lshr i32 %2, 3, !dbg !3259
  %15 = and i32 %14, 7, !dbg !3259
  %16 = add nuw nsw i32 %15, 1, !dbg !3260
  call void @llvm.dbg.value(metadata i32 %16, metadata !3205, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 0, metadata !3206, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %0, metadata !3207, metadata !DIExpression()), !dbg !3252
  %17 = ptrtoint i8* %0 to i32, !dbg !3261
  %18 = and i32 %17, 3, !dbg !3263
  %19 = icmp eq i32 %18, 0, !dbg !3263
  br i1 %19, label %20, label %320, !dbg !3264

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3265
  call void @llvm.dbg.value(metadata i8* %21, metadata !3191, metadata !DIExpression()), !dbg !3252
  %22 = icmp eq i8* %0, null, !dbg !3266
  %23 = and i32 %1, 7, !dbg !3268
  %24 = sub nuw nsw i32 8, %23, !dbg !3268
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3268
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3268
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3268
  call void @llvm.dbg.value(metadata i32 %27, metadata !3186, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %26, metadata !3191, metadata !DIExpression()), !dbg !3252
  br i1 %22, label %33, label %28, !dbg !3269

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3271
  %30 = sub i32 4, %17, !dbg !3271
  %31 = add i32 %30, %29, !dbg !3272
  %32 = icmp ugt i32 %31, %27, !dbg !3273
  br i1 %32, label %320, label %33, !dbg !3274

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3275
  call void @llvm.dbg.value(metadata i8* %34, metadata !3188, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %3, metadata !3202, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 4, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 4, metadata !3192, metadata !DIExpression()), !dbg !3252
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3276

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3189, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %42, metadata !3188, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %43, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %44, metadata !3192, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %45, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %72, metadata !3200, metadata !DIExpression()), !dbg !3252
  br i1 %46, label %73, label %47, !dbg !3277

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3278
  %49 = zext i1 %48 to i32, !dbg !3282
  %50 = add nsw i32 %72, %49, !dbg !3282
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3282
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3282
  call void @llvm.dbg.value(metadata i32 %52, metadata !3192, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %51, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %50, metadata !3200, metadata !DIExpression()), !dbg !3252
  br label %53, !dbg !3283

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3189, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %40, metadata !3188, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %58, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %57, metadata !3192, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %56, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %54, metadata !3200, metadata !DIExpression()), !dbg !3252
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3284
  call void @llvm.dbg.value(metadata i8* %60, metadata !3188, metadata !DIExpression()), !dbg !3252
  %61 = load i8, i8* %60, align 1, !dbg !3286
  %62 = icmp eq i8 %61, 0, !dbg !3287
  br i1 %62, label %226, label %63, !dbg !3288, !llvm.loop !3289

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3277

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3292

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3203, metadata !DIExpression()), !dbg !3252
  %75 = add nsw i32 %72, -1, !dbg !3293
  call void @llvm.dbg.value(metadata i32 %75, metadata !3200, metadata !DIExpression()), !dbg !3252
  br label %53, !dbg !3294

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3295

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 4, metadata !3192, metadata !DIExpression()), !dbg !3252
  br label %53, !dbg !3296

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 4, metadata !3192, metadata !DIExpression()), !dbg !3252
  br label %53, !dbg !3297

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3298
  %81 = icmp eq i8 %80, 108, !dbg !3300
  br i1 %81, label %82, label %109, !dbg !3301

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3302
  %84 = load i8, i8* %83, align 1, !dbg !3302
  %85 = icmp eq i8 %84, 108, !dbg !3305
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3306
  %89 = add i32 %88, 7, !dbg !3306
  %90 = and i32 %89, -8, !dbg !3306
  %91 = inttoptr i32 %90 to i8*, !dbg !3306
  %92 = inttoptr i32 %90 to double*, !dbg !3306
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3306
  %94 = load double, double* %92, align 8, !dbg !3306
  call void @llvm.dbg.value(metadata i8* %93, metadata !3189, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 8, metadata !3192, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 8, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata double %94, metadata !3220, metadata !DIExpression()), !dbg !3308
  %95 = ptrtoint i8* %43 to i32, !dbg !3309
  %96 = add i32 %95, 7, !dbg !3309
  %97 = and i32 %96, -8, !dbg !3309
  %98 = inttoptr i32 %97 to i8*, !dbg !3310
  call void @llvm.dbg.value(metadata i8* %98, metadata !3191, metadata !DIExpression()), !dbg !3252
  br i1 %22, label %104, label %99, !dbg !3311

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3312
  %101 = icmp ugt i32 %100, %196, !dbg !3316
  br i1 %101, label %320, label %102, !dbg !3317

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3318
  store double %94, double* %103, align 8, !dbg !3318
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3321
  call void @llvm.dbg.value(metadata i8* %105, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3252
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3203, metadata !DIExpression()), !dbg !3252
  br label %53, !dbg !3322

107:                                              ; preds = %73, %73
  br label %109, !dbg !3323

108:                                              ; preds = %73
  br label %109, !dbg !3323

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3252
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3252
  call void @llvm.dbg.value(metadata i32 %113, metadata !3192, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %112, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3206, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3252
  %114 = ptrtoint i8* %43 to i32, !dbg !3323
  %115 = add i32 %114, -1, !dbg !3323
  %116 = add i32 %115, %112, !dbg !3323
  %117 = sub i32 0, %112, !dbg !3323
  %118 = and i32 %116, %117, !dbg !3323
  %119 = inttoptr i32 %118 to i8*, !dbg !3324
  call void @llvm.dbg.value(metadata i8* %119, metadata !3191, metadata !DIExpression()), !dbg !3252
  br i1 %22, label %124, label %120, !dbg !3325

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3327
  %122 = add i32 %121, %118, !dbg !3328
  %123 = icmp ugt i32 %122, %196, !dbg !3329
  br i1 %123, label %320, label %124, !dbg !3330

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3331

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3324
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3332
  call void @llvm.dbg.value(metadata i8* %127, metadata !3189, metadata !DIExpression()), !dbg !3252
  %128 = bitcast i8* %41 to i8**, !dbg !3332
  %129 = load i8*, i8** %128, align 4, !dbg !3332
  call void @llvm.dbg.value(metadata i8* %129, metadata !3202, metadata !DIExpression()), !dbg !3252
  br label %130, !dbg !3333

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3252
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3334
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3252
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3335
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3252
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3252
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3252
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3252
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3252
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3252
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3336
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3189, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %142, metadata !3186, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %141, metadata !3188, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %140, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %139, metadata !3192, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %138, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %137, metadata !3197, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %136, metadata !3205, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %135, metadata !3198, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %133, metadata !3202, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %132, metadata !3200, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %131, metadata !3199, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.label(metadata !3251), !dbg !3338
  br i1 %22, label %146, label %144, !dbg !3339

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3340
  store i8* %133, i8** %145, align 4, !dbg !3343
  br label %146, !dbg !3344

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3345
  call void @llvm.dbg.value(metadata i32 %147, metadata !3205, metadata !DIExpression()), !dbg !3252
  %148 = icmp sgt i32 %136, 0, !dbg !3346
  br i1 %148, label %152, label %149, !dbg !3347

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3348
  %151 = zext i1 %150 to i32, !dbg !3348
  br label %152, !dbg !3347

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3347
  %154 = icmp eq i32 %153, 0, !dbg !3347
  call void @llvm.dbg.value(metadata i1 %154, metadata !3229, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3349
  call void @llvm.dbg.value(metadata i1 %36, metadata !3232, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3349
  %155 = or i1 %36, %154, !dbg !3350
  br i1 %155, label %156, label %192, !dbg !3350

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3351
  %158 = sub i32 %157, %17, !dbg !3351
  %159 = lshr i32 %158, 2, !dbg !3352
  call void @llvm.dbg.value(metadata i32 %159, metadata !3233, metadata !DIExpression()), !dbg !3353
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3354
  br i1 %161, label %162, label %163, !dbg !3354

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3356
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i32 0, i32 0)) #25, !dbg !3356
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 635) #25, !dbg !3356
  unreachable, !dbg !3356

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3361
  br i1 %164, label %165, label %166, !dbg !3363

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3364
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)) #25, !dbg !3364
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 640) #25, !dbg !3364
  unreachable, !dbg !3364

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3369

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3370
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3373
  store i8 %168, i8* %169, align 1, !dbg !3374
  %170 = trunc i32 %132 to i8, !dbg !3375
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3376
  store i8 %170, i8* %171, align 1, !dbg !3377
  br i1 %154, label %175, label %172, !dbg !3378

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3379
  store i8 %173, i8* %169, align 1, !dbg !3379
  %174 = add i32 %131, 1, !dbg !3382
  call void @llvm.dbg.value(metadata i32 %174, metadata !3199, metadata !DIExpression()), !dbg !3252
  br label %187, !dbg !3383

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3384
  call void @llvm.dbg.value(metadata i32 %176, metadata !3198, metadata !DIExpression()), !dbg !3252
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3386

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3387
  call void @llvm.dbg.value(metadata i32 %179, metadata !3186, metadata !DIExpression()), !dbg !3252
  br label %187, !dbg !3390

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3391

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3392
  call void @llvm.dbg.value(metadata i32 %182, metadata !3186, metadata !DIExpression()), !dbg !3252
  br label %187, !dbg !3395

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3396
  %185 = add i32 %142, 2, !dbg !3398
  %186 = add i32 %185, %184, !dbg !3399
  call void @llvm.dbg.value(metadata i32 %186, metadata !3186, metadata !DIExpression()), !dbg !3252
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3252
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3252
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3252
  call void @llvm.dbg.value(metadata i32 %190, metadata !3186, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %189, metadata !3198, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %188, metadata !3199, metadata !DIExpression()), !dbg !3252
  %191 = add nuw nsw i32 %137, 1, !dbg !3400
  call void @llvm.dbg.value(metadata i32 %191, metadata !3197, metadata !DIExpression()), !dbg !3252
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3252
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3335
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3252
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3336
  call void @llvm.dbg.value(metadata i32 %196, metadata !3186, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %195, metadata !3197, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %194, metadata !3198, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %193, metadata !3199, metadata !DIExpression()), !dbg !3252
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3401
  call void @llvm.dbg.value(metadata i8* %197, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %143, metadata !3189, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %141, metadata !3188, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %139, metadata !3192, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %138, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3206, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %132, metadata !3200, metadata !DIExpression()), !dbg !3252
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3284
  call void @llvm.dbg.value(metadata i8* %198, metadata !3188, metadata !DIExpression()), !dbg !3252
  %199 = load i8, i8* %198, align 1, !dbg !3286
  %200 = icmp eq i8 %199, 0, !dbg !3287
  br i1 %200, label %226, label %63, !dbg !3288

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3402

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3403
  call void @llvm.dbg.value(metadata i8* %203, metadata !3189, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 undef, metadata !3236, metadata !DIExpression()), !dbg !3404
  br i1 %22, label %219, label %204, !dbg !3405

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3403
  %206 = load i32, i32* %205, align 4, !dbg !3403
  call void @llvm.dbg.value(metadata i32 %206, metadata !3236, metadata !DIExpression()), !dbg !3404
  %207 = inttoptr i32 %118 to i32*, !dbg !3406
  store i32 %206, i32* %207, align 4, !dbg !3409
  br label %219, !dbg !3410

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3411
  %210 = add i32 %209, 7, !dbg !3411
  %211 = and i32 %210, -8, !dbg !3411
  %212 = inttoptr i32 %211 to i8*, !dbg !3411
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3411
  call void @llvm.dbg.value(metadata i8* %213, metadata !3189, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i64 undef, metadata !3242, metadata !DIExpression()), !dbg !3412
  br i1 %22, label %219, label %214, !dbg !3413

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3411
  %216 = load i64, i64* %215, align 8, !dbg !3411
  call void @llvm.dbg.value(metadata i64 %216, metadata !3242, metadata !DIExpression()), !dbg !3412
  %217 = inttoptr i32 %118 to i64*, !dbg !3414
  store i64 %216, i64* %217, align 8, !dbg !3419
  br label %219, !dbg !3420

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3421
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3421
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 709) #25, !dbg !3421
  unreachable, !dbg !3421

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3426
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3426
  call void @llvm.dbg.value(metadata i8* %221, metadata !3189, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %40, metadata !3188, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %222, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %113, metadata !3192, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %112, metadata !3193, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3206, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8 poison, metadata !3203, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %72, metadata !3200, metadata !DIExpression()), !dbg !3252
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3284
  call void @llvm.dbg.value(metadata i8* %223, metadata !3188, metadata !DIExpression()), !dbg !3252
  %224 = load i8, i8* %223, align 1, !dbg !3286
  %225 = icmp eq i8 %224, 0, !dbg !3287
  br i1 %225, label %226, label %38, !dbg !3288

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3427
  %228 = ptrtoint i8* %227 to i32, !dbg !3428
  %229 = sub i32 %228, %17, !dbg !3428
  %230 = lshr i32 %229, 2, !dbg !3430
  %231 = icmp ugt i32 %229, 1023, !dbg !3431
  br i1 %231, label %232, label %233, !dbg !3432

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.5, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3433
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3433
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 721) #25, !dbg !3433
  unreachable, !dbg !3433

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3438

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3439
  %236 = add i32 %235, %229, !dbg !3442
  br label %320, !dbg !3443

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3444
  store i8 %238, i8* %0, align 1, !dbg !3445
  %239 = trunc i32 %194 to i8, !dbg !3446
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3448
  store i8 %240, i8* %242, align 1, !dbg !3450
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3451
  store i8 %241, i8* %243, align 1, !dbg !3452
  %244 = trunc i32 %193 to i8, !dbg !3453
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3454
  store i8 %244, i8* %245, align 1, !dbg !3455
  %246 = icmp eq i32 %193, 0, !dbg !3456
  %247 = xor i1 %246, true, !dbg !3457
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3457
  call void @llvm.dbg.value(metadata i8* %227, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 0, metadata !3201, metadata !DIExpression()), !dbg !3252
  br i1 %249, label %250, label %269, !dbg !3457

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3458

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %254, metadata !3201, metadata !DIExpression()), !dbg !3252
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3459
  %256 = load i8, i8* %255, align 1, !dbg !3459
  %257 = icmp sgt i8 %256, -1, !dbg !3461
  br i1 %257, label %265, label %258, !dbg !3462

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3245, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3463
  %259 = ptrtoint i8* %253 to i32, !dbg !3464
  %260 = add i32 %251, %259, !dbg !3466
  %261 = icmp ugt i32 %260, %196, !dbg !3467
  br i1 %261, label %320, label %262, !dbg !3468

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3469
  call void @llvm.dbg.value(metadata i8 %263, metadata !3245, metadata !DIExpression()), !dbg !3463
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3470
  call void @llvm.dbg.value(metadata i8* %264, metadata !3191, metadata !DIExpression()), !dbg !3252
  store i8 %263, i8* %253, align 1, !dbg !3471
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3401
  call void @llvm.dbg.value(metadata i8* %266, metadata !3191, metadata !DIExpression()), !dbg !3252
  %267 = add nuw i32 %254, 1, !dbg !3472
  call void @llvm.dbg.value(metadata i32 %267, metadata !3201, metadata !DIExpression()), !dbg !3252
  %268 = icmp eq i32 %267, %195, !dbg !3473
  br i1 %268, label %269, label %252, !dbg !3458, !llvm.loop !3474

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3401
  call void @llvm.dbg.value(metadata i8* %270, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 0, metadata !3201, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %133, metadata !3202, metadata !DIExpression()), !dbg !3252
  %271 = icmp eq i32 %195, 0, !dbg !3476
  br i1 %271, label %316, label %272, !dbg !3479

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3479

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %276, metadata !3202, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %277, metadata !3201, metadata !DIExpression()), !dbg !3252
  br i1 %246, label %282, label %278, !dbg !3480

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3483
  %280 = load i8, i8* %279, align 1, !dbg !3483
  %281 = icmp sgt i8 %280, -1, !dbg !3484
  br i1 %281, label %282, label %311, !dbg !3485

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3486

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3192, metadata !DIExpression()), !dbg !3252
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3487
  %285 = load i8, i8* %284, align 1, !dbg !3487
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3490
  call void @llvm.dbg.value(metadata i8* %286, metadata !3191, metadata !DIExpression()), !dbg !3252
  store i8 %285, i8* %275, align 1, !dbg !3491
  br label %297, !dbg !3492

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3493
  %289 = load i8, i8* %288, align 1, !dbg !3493
  %290 = zext i8 %289 to i32, !dbg !3493
  %291 = shl nuw nsw i32 %290, 2, !dbg !3495
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3496
  %293 = bitcast i8* %292 to i8**, !dbg !3497
  %294 = load i8*, i8** %293, align 4, !dbg !3497
  call void @llvm.dbg.value(metadata i8* %294, metadata !3202, metadata !DIExpression()), !dbg !3252
  store i8* null, i8** %293, align 4, !dbg !3498
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3499
  %296 = add i32 %295, 1, !dbg !3500
  call void @llvm.dbg.value(metadata i32 %296, metadata !3192, metadata !DIExpression()), !dbg !3252
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3252
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3501
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3252
  call void @llvm.dbg.value(metadata i8* %300, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i32 %299, metadata !3192, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %298, metadata !3202, metadata !DIExpression()), !dbg !3252
  %301 = ptrtoint i8* %300 to i32, !dbg !3502
  %302 = add i32 %273, %299, !dbg !3504
  %303 = add i32 %302, %301, !dbg !3505
  %304 = icmp ugt i32 %303, %196, !dbg !3506
  br i1 %304, label %320, label %305, !dbg !3507

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3508
  %307 = load i8, i8* %306, align 1, !dbg !3508
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3509
  call void @llvm.dbg.value(metadata i8* %308, metadata !3191, metadata !DIExpression()), !dbg !3252
  store i8 %307, i8* %300, align 1, !dbg !3510
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3511
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3512
  call void @llvm.dbg.value(metadata i8* %310, metadata !3191, metadata !DIExpression()), !dbg !3252
  br label %311, !dbg !3513

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3514
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3252
  call void @llvm.dbg.value(metadata i8* %313, metadata !3191, metadata !DIExpression()), !dbg !3252
  call void @llvm.dbg.value(metadata i8* %312, metadata !3202, metadata !DIExpression()), !dbg !3252
  %314 = add nuw i32 %277, 1, !dbg !3515
  call void @llvm.dbg.value(metadata i32 %314, metadata !3201, metadata !DIExpression()), !dbg !3252
  %315 = icmp eq i32 %314, %195, !dbg !3476
  br i1 %315, label %316, label %274, !dbg !3479, !llvm.loop !3516

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3401
  %318 = ptrtoint i8* %317 to i32, !dbg !3518
  %319 = sub i32 %318, %17, !dbg !3518
  br label %320, !dbg !3519

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3520
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3520
  ret i32 %321, !dbg !3520
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3521 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3525, metadata !DIExpression()), !dbg !3526
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3527
  ret i1 %2, !dbg !3528
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #4 !dbg !3529 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3532, metadata !DIExpression()), !dbg !3533
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3534
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3535
  %4 = and i1 %2, %3, !dbg !3535
  ret i1 %4, !dbg !3536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3537 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3541, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.value(metadata i32 %1, metadata !3542, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.value(metadata i32 %2, metadata !3543, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.value(metadata i8* %3, metadata !3544, metadata !DIExpression()), !dbg !3547
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3548
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3548
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3545, metadata !DIExpression()), !dbg !3549
  call void @llvm.va_start(i8* nonnull %6), !dbg !3550
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3551
  %8 = load i32, i32* %7, align 4, !dbg !3551
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3551
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3551
  call void @llvm.dbg.value(metadata i32 %10, metadata !3546, metadata !DIExpression()), !dbg !3547
  call void @llvm.va_end(i8* nonnull %6), !dbg !3552
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3553
  ret i32 %10, !dbg !3554
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3555 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3567, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3568, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i8* %2, metadata !3569, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i8* %3, metadata !3570, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i8* %3, metadata !3571, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i8* %3, metadata !3572, metadata !DIExpression()), !dbg !3586
  %5 = icmp eq i8* %3, null, !dbg !3587
  br i1 %5, label %45, label %6, !dbg !3589

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3581, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3586
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3590
  %8 = load i8, i8* %7, align 1, !dbg !3590
  %9 = zext i8 %8 to i32, !dbg !3591
  call void @llvm.dbg.value(metadata i32 %9, metadata !3582, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i8 undef, metadata !3583, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3586
  call void @llvm.dbg.value(metadata i8 undef, metadata !3584, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  call void @llvm.dbg.value(metadata i32 0, metadata !3580, metadata !DIExpression()), !dbg !3586
  %10 = icmp eq i8 %8, 0, !dbg !3592
  br i1 %10, label %39, label %11, !dbg !3595

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3596
  call void @llvm.dbg.value(metadata i8 %12, metadata !3581, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %13 = zext i8 %12 to i32, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %13, metadata !3581, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %14 = shl nuw nsw i32 %13, 2, !dbg !3598
  call void @llvm.dbg.value(metadata i32 %14, metadata !3581, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3599
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3600
  %17 = load i8, i8* %16, align 1, !dbg !3600
  call void @llvm.dbg.value(metadata i8 %17, metadata !3583, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %18 = zext i8 %17 to i32, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %18, metadata !3583, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3602
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3603
  %21 = load i8, i8* %20, align 1, !dbg !3603
  call void @llvm.dbg.value(metadata i8 %21, metadata !3584, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %22 = zext i8 %21 to i32, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %22, metadata !3584, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %23 = shl nuw nsw i32 %22, 1, !dbg !3605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3578, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3586
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3606
  call void @llvm.dbg.value(metadata i8* %24, metadata !3578, metadata !DIExpression()), !dbg !3586
  br label %25, !dbg !3595

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3578, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i32 %27, metadata !3580, metadata !DIExpression()), !dbg !3586
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3607
  call void @llvm.dbg.value(metadata i8* %28, metadata !3578, metadata !DIExpression()), !dbg !3586
  %29 = load i8, i8* %26, align 1, !dbg !3609
  %30 = zext i8 %29 to i32, !dbg !3609
  call void @llvm.dbg.value(metadata i32 %30, metadata !3585, metadata !DIExpression()), !dbg !3586
  %31 = shl nuw nsw i32 %30, 2, !dbg !3610
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3611
  %33 = bitcast i8* %32 to i8**, !dbg !3612
  call void @llvm.dbg.value(metadata i8** %33, metadata !3579, metadata !DIExpression()), !dbg !3586
  store i8* %28, i8** %33, align 4, !dbg !3613
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3614
  %35 = add i32 %34, 1, !dbg !3615
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3616
  call void @llvm.dbg.value(metadata i8* %36, metadata !3578, metadata !DIExpression()), !dbg !3586
  %37 = add nuw nsw i32 %27, 1, !dbg !3617
  call void @llvm.dbg.value(metadata i32 %37, metadata !3580, metadata !DIExpression()), !dbg !3586
  %38 = icmp eq i32 %37, %9, !dbg !3592
  br i1 %38, label %39, label %25, !dbg !3595, !llvm.loop !3618

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3620
  call void @llvm.dbg.value(metadata i8* %40, metadata !3571, metadata !DIExpression()), !dbg !3586
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3621
  %42 = bitcast i8* %41 to i8**, !dbg !3621
  %43 = load i8*, i8** %42, align 1, !dbg !3621
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3622
  br label %45, !dbg !3623

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3586
  ret i32 %46, !dbg !3624
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3625 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3629, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3630, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %2, metadata !3631, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %3, metadata !3632, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %4, metadata !3633, metadata !DIExpression()), !dbg !3639
  call void @llvm.dbg.value(metadata i8* %4, metadata !3634, metadata !DIExpression()), !dbg !3639
  %6 = ptrtoint i8* %4 to i32, !dbg !3640
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3640
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3640
  ret i32 %8, !dbg !3641
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3642 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3646, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.value(metadata i32 %1, metadata !3647, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.value(metadata i8 0, metadata !3649, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.value(metadata i32 0, metadata !3650, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.value(metadata i8 poison, metadata !3649, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.value(metadata i8* %0, metadata !3646, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3651
  %3 = load i8, i8* %0, align 1, !dbg !3652
  call void @llvm.dbg.value(metadata i8 %3, metadata !3648, metadata !DIExpression()), !dbg !3651
  %4 = icmp eq i8 %3, 0, !dbg !3653
  br i1 %4, label %29, label %5, !dbg !3654

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3655
  call void @llvm.dbg.value(metadata i32 %8, metadata !3650, metadata !DIExpression()), !dbg !3651
  br i1 %9, label %11, label %22, !dbg !3656

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3658
  br i1 %12, label %13, label %17, !dbg !3662

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3663
  br i1 %14, label %29, label %15, !dbg !3666

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3667
  br i1 %16, label %29, label %22, !dbg !3669

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3670
  %19 = xor i1 %18, true, !dbg !3672
  %20 = zext i1 %18 to i32, !dbg !3672
  %21 = add nsw i32 %8, %20, !dbg !3672
  br label %22, !dbg !3672

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3651
  call void @llvm.dbg.value(metadata i32 %24, metadata !3650, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.value(metadata i8 poison, metadata !3649, metadata !DIExpression()), !dbg !3651
  %25 = icmp eq i8 %6, 37, !dbg !3673
  %26 = xor i1 %25, %23, !dbg !3675
  call void @llvm.dbg.value(metadata i8* %10, metadata !3646, metadata !DIExpression()), !dbg !3651
  call void @llvm.dbg.value(metadata i8* %10, metadata !3646, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3651
  %27 = load i8, i8* %10, align 1, !dbg !3652
  call void @llvm.dbg.value(metadata i8 %27, metadata !3648, metadata !DIExpression()), !dbg !3651
  %28 = icmp eq i8 %27, 0, !dbg !3653
  br i1 %28, label %29, label %5, !dbg !3654, !llvm.loop !3676

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3651
  ret i1 %30, !dbg !3678
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #4 !dbg !3679 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3683, metadata !DIExpression()), !dbg !3684
  %2 = add i8 %0, -64, !dbg !3685
  %3 = icmp ult i8 %2, 59, !dbg !3685
  ret i1 %3, !dbg !3686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3687 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3695, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %1, metadata !3696, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3697, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8* %3, metadata !3698, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %4, metadata !3699, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i16* %5, metadata !3700, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %6, metadata !3701, metadata !DIExpression()), !dbg !3764
  %11 = icmp eq i8* %0, null, !dbg !3765
  br i1 %11, label %12, label %13, !dbg !3768

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3769
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 916) #25, !dbg !3769
  unreachable, !dbg !3769

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3702, metadata !DIExpression()), !dbg !3764
  %14 = bitcast i8* %0 to i32*, !dbg !3771
  call void @llvm.dbg.value(metadata i32* %14, metadata !3703, metadata !DIExpression()), !dbg !3764
  %15 = and i32 %4, 8, !dbg !3772
  %16 = icmp eq i32 %15, 0, !dbg !3773
  call void @llvm.dbg.value(metadata i1 %16, metadata !3707, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3764
  call void @llvm.dbg.value(metadata i8* %0, metadata !3710, metadata !DIExpression()), !dbg !3764
  %17 = icmp eq i32 %1, 0, !dbg !3774
  br i1 %17, label %18, label %20, !dbg !3775

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3776
  br label %20, !dbg !3775

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3775
  call void @llvm.dbg.value(metadata i32 %21, metadata !3696, metadata !DIExpression()), !dbg !3764
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3777
  %23 = load i8, i8* %22, align 1, !dbg !3777
  %24 = zext i8 %23 to i32, !dbg !3778
  call void @llvm.dbg.value(metadata i32 %24, metadata !3705, metadata !DIExpression()), !dbg !3764
  %25 = icmp ne i8 %23, 0, !dbg !3779
  %26 = and i32 %4, 1, !dbg !3780
  %27 = icmp ne i32 %26, 0, !dbg !3780
  %28 = and i1 %27, %25, !dbg !3780
  call void @llvm.dbg.value(metadata i1 %28, metadata !3709, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3764
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3781
  %30 = load i8, i8* %29, align 1, !dbg !3781
  %31 = zext i8 %30 to i32, !dbg !3782
  call void @llvm.dbg.value(metadata i32 %31, metadata !3706, metadata !DIExpression()), !dbg !3764
  %32 = icmp ne i8 %30, 0, !dbg !3783
  %33 = and i32 %4, 2, !dbg !3784
  %34 = icmp ne i32 %33, 0, !dbg !3784
  %35 = and i1 %34, %32, !dbg !3784
  call void @llvm.dbg.value(metadata i1 %35, metadata !3708, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3764
  %36 = select i1 %35, i1 true, i1 %28, !dbg !3785
  br i1 %36, label %41, label %37, !dbg !3785

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3787
  br i1 %38, label %287, label %39, !dbg !3790

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !3791
  br label %287, !dbg !3793

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !3794
  %43 = zext i8 %42 to i32, !dbg !3795
  %44 = shl nuw nsw i32 %43, 2, !dbg !3796
  call void @llvm.dbg.value(metadata i32 %44, metadata !3704, metadata !DIExpression()), !dbg !3764
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3797
  %46 = bitcast i8* %45 to i8**, !dbg !3798
  %47 = load i8*, i8** %46, align 4, !dbg !3798
  call void @llvm.dbg.value(metadata i8* %47, metadata !3713, metadata !DIExpression()), !dbg !3764
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !3799
  call void @llvm.dbg.value(metadata i8* %48, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 0, metadata !3715, metadata !DIExpression()), !dbg !3764
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !3800
  br i1 %49, label %50, label %135, !dbg !3801

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3712, metadata !DIExpression()), !dbg !3764
  br i1 %28, label %51, label %76, !dbg !3802

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3712, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8* %48, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 0, metadata !3715, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 0, metadata !3716, metadata !DIExpression()), !dbg !3803
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !3804

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3712, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8* %55, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %56, metadata !3715, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %57, metadata !3716, metadata !DIExpression()), !dbg !3803
  %58 = load i8, i8* %55, align 1, !dbg !3805
  %59 = zext i8 %58 to i32, !dbg !3806
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !3806
  %61 = bitcast i32* %60 to i8**, !dbg !3807
  %62 = load i8*, i8** %61, align 4, !dbg !3807
  call void @llvm.dbg.value(metadata i8* %62, metadata !3722, metadata !DIExpression()), !dbg !3808
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !3809
  call void @llvm.dbg.value(metadata i32 %63, metadata !3725, metadata !DIExpression()), !dbg !3808
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !3810
  br i1 %65, label %66, label %70, !dbg !3810

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !3812
  %68 = add nuw i32 %56, 1, !dbg !3814
  call void @llvm.dbg.value(metadata i32 %68, metadata !3715, metadata !DIExpression()), !dbg !3764
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !3815
  store i16 %67, i16* %69, align 2, !dbg !3816
  br label %70, !dbg !3817

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3764
  call void @llvm.dbg.value(metadata i32 %71, metadata !3715, metadata !DIExpression()), !dbg !3764
  %72 = add nsw i32 %63, %54, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %72, metadata !3712, metadata !DIExpression()), !dbg !3764
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !3819
  call void @llvm.dbg.value(metadata i8* %73, metadata !3714, metadata !DIExpression()), !dbg !3764
  %74 = add nuw nsw i32 %57, 1, !dbg !3820
  call void @llvm.dbg.value(metadata i32 %74, metadata !3716, metadata !DIExpression()), !dbg !3803
  %75 = icmp eq i32 %74, %24, !dbg !3821
  br i1 %75, label %82, label %53, !dbg !3804, !llvm.loop !3822

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !3824
  %80 = select i1 %79, i32 %24, i32 0, !dbg !3824
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !3824
  br label %82, !dbg !3824

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !3827
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3764
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !3828
  call void @llvm.dbg.value(metadata i1 undef, metadata !3726, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3829
  call void @llvm.dbg.value(metadata i32 0, metadata !3727, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %85, metadata !3712, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8* %84, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %83, metadata !3715, metadata !DIExpression()), !dbg !3764
  %86 = icmp eq i8 %30, 0, !dbg !3831
  br i1 %86, label %287, label %87, !dbg !3832

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !3833
  %89 = icmp eq i32 %88, 0, !dbg !3834
  call void @llvm.dbg.value(metadata i1 %89, metadata !3726, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3829
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !3832

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3712, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8* %96, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %97, metadata !3715, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %98, metadata !3727, metadata !DIExpression()), !dbg !3830
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !3835
  call void @llvm.dbg.value(metadata i8* %99, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8 undef, metadata !3729, metadata !DIExpression()), !dbg !3836
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !3837
  call void @llvm.dbg.value(metadata i8* %100, metadata !3714, metadata !DIExpression()), !dbg !3764
  %101 = load i8, i8* %99, align 1, !dbg !3838
  call void @llvm.dbg.value(metadata i8 %101, metadata !3732, metadata !DIExpression()), !dbg !3836
  %102 = zext i8 %101 to i32, !dbg !3839
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !3839
  %104 = bitcast i32* %103 to i8**, !dbg !3840
  %105 = load i8*, i8** %104, align 4, !dbg !3840
  call void @llvm.dbg.value(metadata i8* %105, metadata !3733, metadata !DIExpression()), !dbg !3836
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !3841
  call void @llvm.dbg.value(metadata i1 %106, metadata !3734, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3836
  br i1 %16, label %113, label %107, !dbg !3842

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !3844
  call void @llvm.dbg.value(metadata i8 %108, metadata !3729, metadata !DIExpression()), !dbg !3836
  %109 = zext i8 %108 to i32, !dbg !3845
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !3846
  br i1 %110, label %111, label %113, !dbg !3847

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !3848
  %112 = add nsw i32 %95, -2, !dbg !3854
  call void @llvm.dbg.value(metadata i32 %112, metadata !3712, metadata !DIExpression()), !dbg !3764
  br label %130, !dbg !3855

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !3856

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !3857

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %116, metadata !3712, metadata !DIExpression()), !dbg !3764
  br label %130, !dbg !3862

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !3863

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3760), !dbg !3864
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !3865
  call void @llvm.dbg.value(metadata i32 %119, metadata !3735, metadata !DIExpression()), !dbg !3836
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !3866
  br i1 %121, label %122, label %126, !dbg !3866

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !3868
  %124 = add nuw i32 %97, 1, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %124, metadata !3715, metadata !DIExpression()), !dbg !3764
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !3871
  store i16 %123, i16* %125, align 2, !dbg !3872
  br label %126, !dbg !3873

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3764
  call void @llvm.dbg.value(metadata i32 %127, metadata !3715, metadata !DIExpression()), !dbg !3764
  %128 = add i32 %95, -1, !dbg !3874
  %129 = add i32 %128, %119, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %129, metadata !3712, metadata !DIExpression()), !dbg !3764
  br label %130, !dbg !3876

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3764
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !3836
  call void @llvm.dbg.value(metadata i32 %132, metadata !3712, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %131, metadata !3715, metadata !DIExpression()), !dbg !3764
  %133 = add nuw nsw i32 %98, 1, !dbg !3877
  call void @llvm.dbg.value(metadata i8* %100, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %133, metadata !3727, metadata !DIExpression()), !dbg !3830
  %134 = icmp eq i32 %133, %31, !dbg !3831
  br i1 %134, label %287, label %94, !dbg !3832, !llvm.loop !3878

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3737, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3738, metadata !DIExpression()), !dbg !3881
  br i1 %28, label %136, label %138, !dbg !3882

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3739, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8 0, metadata !3740, metadata !DIExpression()), !dbg !3764
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !3883
  call void @llvm.dbg.value(metadata i8* %137, metadata !3741, metadata !DIExpression()), !dbg !3764
  br label %143, !dbg !3886

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !3887
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !3887

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3741, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8 undef, metadata !3740, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8 0, metadata !3739, metadata !DIExpression()), !dbg !3764
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !3889
  br label %148, !dbg !3892

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !3893
  call void @llvm.dbg.value(metadata i8* %151, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 0, metadata !3743, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8 %149, metadata !3740, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8 %150, metadata !3739, metadata !DIExpression()), !dbg !3764
  %152 = icmp eq i8 %30, 0, !dbg !3895
  br i1 %152, label %153, label %155, !dbg !3896

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !3897
  br label %160, !dbg !3896

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !3896

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !3897
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !3898
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !3899
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3764
  call void @llvm.dbg.value(metadata i8 undef, metadata !3736, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3764
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3900
  %166 = load i8, i8* %165, align 1, !dbg !3900
  %167 = zext i8 %162 to i32, !dbg !3901
  %168 = add i8 %166, %162, !dbg !3902
  call void @llvm.dbg.value(metadata i8 %168, metadata !3736, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3764
  %169 = icmp eq i32 %33, 0, !dbg !3903
  %170 = lshr i8 %163, 1, !dbg !3904
  %171 = select i1 %169, i8 %170, i8 0, !dbg !3904
  call void @llvm.dbg.value(metadata i8 %171, metadata !3736, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3764
  %172 = icmp eq i32 %26, 0, !dbg !3905
  %173 = icmp eq i32 %161, 0, !dbg !3897
  %174 = select i1 %173, i8 0, i8 %163, !dbg !3897
  %175 = select i1 %172, i8 %174, i8 0, !dbg !3897
  call void @llvm.dbg.value(metadata i8 %175, metadata !3736, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3764
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3751, metadata !DIExpression()), !dbg !3906
  %176 = load i32, i32* %14, align 1, !dbg !3907
  store i8 %168, i8* %165, align 1, !dbg !3908
  store i8 %175, i8* %22, align 1, !dbg !3908
  store i8 %171, i8* %29, align 1, !dbg !3908
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %177, metadata !3742, metadata !DIExpression()), !dbg !3764
  %178 = icmp slt i32 %177, 0, !dbg !3910
  br i1 %178, label %287, label %240, !dbg !3912

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %181, metadata !3743, metadata !DIExpression()), !dbg !3894
  call void @llvm.dbg.value(metadata i8 %182, metadata !3740, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8 %183, metadata !3739, metadata !DIExpression()), !dbg !3764
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !3913
  call void @llvm.dbg.value(metadata i8* %184, metadata !3714, metadata !DIExpression()), !dbg !3764
  %185 = load i8, i8* %180, align 1, !dbg !3914
  call void @llvm.dbg.value(metadata i8 %185, metadata !3745, metadata !DIExpression()), !dbg !3915
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !3916
  call void @llvm.dbg.value(metadata i8* %186, metadata !3714, metadata !DIExpression()), !dbg !3764
  %187 = load i8, i8* %184, align 1, !dbg !3917
  call void @llvm.dbg.value(metadata i8 %187, metadata !3748, metadata !DIExpression()), !dbg !3915
  %188 = zext i8 %187 to i32, !dbg !3918
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !3918
  %190 = bitcast i32* %189 to i8**, !dbg !3919
  %191 = load i8*, i8** %190, align 4, !dbg !3919
  call void @llvm.dbg.value(metadata i8* %191, metadata !3749, metadata !DIExpression()), !dbg !3915
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !3920
  call void @llvm.dbg.value(metadata i1 %192, metadata !3750, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3915
  br i1 %16, label %196, label %193, !dbg !3921

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !3923
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !3924
  br i1 %195, label %235, label %196, !dbg !3925

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !3926

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !3927

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !3930
  br i1 %199, label %201, label %200, !dbg !3935

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3936
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1086) #25, !dbg !3936
  unreachable, !dbg !3936

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !3930
  %203 = add nuw nsw i8 %183, 1, !dbg !3938
  call void @llvm.dbg.value(metadata i8 %203, metadata !3739, metadata !DIExpression()), !dbg !3764
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !3939
  br label %231, !dbg !3940

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !3941

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !3942
  br i1 %207, label %209, label %208, !dbg !3947

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3948
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1089) #25, !dbg !3948
  unreachable, !dbg !3948

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !3942
  %211 = add nuw nsw i8 %182, 1, !dbg !3950
  call void @llvm.dbg.value(metadata i8 %211, metadata !3740, metadata !DIExpression()), !dbg !3764
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !3951
  br label %231, !dbg !3952

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !3953

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !3955
  br i1 %215, label %217, label %216, !dbg !3960

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3961
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1096) #25, !dbg !3961
  unreachable, !dbg !3961

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !3955
  %219 = add nuw nsw i8 %183, 1, !dbg !3963
  call void @llvm.dbg.value(metadata i8 %219, metadata !3739, metadata !DIExpression()), !dbg !3764
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !3964
  br label %231, !dbg !3965

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !3966
  br i1 %222, label %224, label %223, !dbg !3970

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3971
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 1099) #25, !dbg !3971
  unreachable, !dbg !3971

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !3966
  %226 = add nuw nsw i8 %182, 1, !dbg !3973
  call void @llvm.dbg.value(metadata i8 %226, metadata !3740, metadata !DIExpression()), !dbg !3764
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !3974
  store i8 %185, i8* %227, align 1, !dbg !3975
  %228 = add nuw nsw i8 %182, 2, !dbg !3976
  call void @llvm.dbg.value(metadata i8 %228, metadata !3740, metadata !DIExpression()), !dbg !3764
  %229 = zext i8 %226 to i32, !dbg !3977
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !3977
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !3978
  br label %235, !dbg !3979

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3764
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !3899
  call void @llvm.dbg.value(metadata i8 %237, metadata !3740, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8 %236, metadata !3739, metadata !DIExpression()), !dbg !3764
  %238 = add nuw nsw i32 %181, 1, !dbg !3979
  call void @llvm.dbg.value(metadata i8* %186, metadata !3714, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %238, metadata !3743, metadata !DIExpression()), !dbg !3894
  %239 = icmp eq i32 %238, %31, !dbg !3895
  br i1 %239, label %160, label %179, !dbg !3896, !llvm.loop !3980

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !3904
  call void @llvm.dbg.value(metadata i32 %177, metadata !3712, metadata !DIExpression()), !dbg !3764
  store i32 %176, i32* %14, align 1, !dbg !3982
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !3983
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !3984
  call void @llvm.dbg.value(metadata i32 %243, metadata !3742, metadata !DIExpression()), !dbg !3764
  %244 = icmp slt i32 %243, 0, !dbg !3985
  br i1 %244, label %287, label %245, !dbg !3987

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3712, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3764
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !3988
  %248 = add nuw nsw i32 %44, %24, !dbg !3988
  %249 = sub i32 %247, %248, !dbg !3988
  call void @llvm.dbg.value(metadata i32 %249, metadata !3752, metadata !DIExpression()), !dbg !3764
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !3989
  call void @llvm.dbg.value(metadata i32 %250, metadata !3742, metadata !DIExpression()), !dbg !3764
  %251 = icmp slt i32 %250, 0, !dbg !3990
  br i1 %251, label %287, label %252, !dbg !3992

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !3993
  call void @llvm.dbg.value(metadata i32 %253, metadata !3712, metadata !DIExpression()), !dbg !3764
  %254 = add nuw nsw i32 %253, %250, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %254, metadata !3712, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 0, metadata !3753, metadata !DIExpression()), !dbg !3995
  %255 = icmp eq i8 %162, 0, !dbg !3996
  br i1 %255, label %284, label %256, !dbg !3997

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !3997

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3753, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.value(metadata i32 %260, metadata !3712, metadata !DIExpression()), !dbg !3764
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !3998
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !3999
  %262 = load i8, i8* %261, align 1, !dbg !3999
  call void @llvm.dbg.value(metadata i8 %262, metadata !3755, metadata !DIExpression()), !dbg !4000
  store i8 %262, i8* %10, align 1, !dbg !4001
  %263 = zext i8 %262 to i32, !dbg !4002
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4002
  %265 = bitcast i32* %264 to i8**, !dbg !4003
  %266 = load i8*, i8** %265, align 4, !dbg !4003
  call void @llvm.dbg.value(metadata i8* %266, metadata !3758, metadata !DIExpression()), !dbg !4000
  br i1 %257, label %270, label %267, !dbg !4004

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4005
  %269 = load i16, i16* %268, align 2, !dbg !4005
  br label %270, !dbg !4004

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4004
  call void @llvm.dbg.value(metadata i32 undef, metadata !3759, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4000
  call void @llvm.dbg.value(metadata i8* %10, metadata !3755, metadata !DIExpression(DW_OP_deref)), !dbg !4000
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4006
  call void @llvm.dbg.value(metadata i32 %272, metadata !3742, metadata !DIExpression()), !dbg !3764
  %273 = icmp slt i32 %272, 0, !dbg !4007
  br i1 %273, label %277, label %274, !dbg !4009

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3759, metadata !DIExpression()), !dbg !4000
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3712, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3764
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4010
  call void @llvm.dbg.value(metadata i32 %275, metadata !3742, metadata !DIExpression()), !dbg !3764
  %276 = icmp slt i32 %275, 0, !dbg !4011
  br i1 %276, label %277, label %279, !dbg !4013

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3712, metadata !DIExpression()), !dbg !3764
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4014
  call void @llvm.dbg.value(metadata i32 undef, metadata !3712, metadata !DIExpression()), !dbg !3764
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %280, metadata !3712, metadata !DIExpression()), !dbg !3764
  %281 = add nsw i32 %280, %275, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %281, metadata !3712, metadata !DIExpression()), !dbg !3764
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4014
  %282 = add nuw nsw i32 %259, 1, !dbg !4017
  call void @llvm.dbg.value(metadata i32 %282, metadata !3753, metadata !DIExpression()), !dbg !3995
  %283 = icmp eq i32 %282, %167, !dbg !3996
  br i1 %283, label %284, label %258, !dbg !3997, !llvm.loop !4018

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !3994
  call void @llvm.dbg.value(metadata i32 %285, metadata !3712, metadata !DIExpression()), !dbg !3764
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4020
  br label %287, !dbg !4021

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3764
  ret i32 %288, !dbg !4022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4023 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4027, metadata !DIExpression()), !dbg !4035
  %2 = icmp eq i8* %0, null, !dbg !4036
  br i1 %2, label %3, label %4, !dbg !4039

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i32 0, i32 0), i32 noundef 198) #25, !dbg !4040
  unreachable, !dbg !4040

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4028, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata i8* %0, metadata !4029, metadata !DIExpression()), !dbg !4035
  %5 = load i8, i8* %0, align 1, !dbg !4042
  %6 = zext i8 %5 to i32, !dbg !4042
  %7 = shl nuw nsw i32 %6, 2, !dbg !4043
  call void @llvm.dbg.value(metadata i32 %7, metadata !4030, metadata !DIExpression()), !dbg !4035
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4044
  %9 = load i8, i8* %8, align 1, !dbg !4044
  %10 = zext i8 %9 to i32, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %10, metadata !4031, metadata !DIExpression()), !dbg !4035
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4045
  %12 = load i8, i8* %11, align 1, !dbg !4045
  %13 = zext i8 %12 to i32, !dbg !4045
  call void @llvm.dbg.value(metadata i32 %13, metadata !4032, metadata !DIExpression()), !dbg !4035
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4046
  call void @llvm.dbg.value(metadata i8* %14, metadata !4028, metadata !DIExpression()), !dbg !4035
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4047
  call void @llvm.dbg.value(metadata i8* %15, metadata !4028, metadata !DIExpression()), !dbg !4035
  call void @llvm.dbg.value(metadata i32 0, metadata !4033, metadata !DIExpression()), !dbg !4048
  %16 = icmp eq i8 %9, 0, !dbg !4049
  br i1 %16, label %17, label %22, !dbg !4051

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4035
  %19 = ptrtoint i8* %18 to i32, !dbg !4052
  %20 = ptrtoint i8* %0 to i32, !dbg !4052
  %21 = sub i32 %19, %20, !dbg !4052
  ret i32 %21, !dbg !4053

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4033, metadata !DIExpression()), !dbg !4048
  call void @llvm.dbg.value(metadata i8* %24, metadata !4028, metadata !DIExpression()), !dbg !4035
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4054
  call void @llvm.dbg.value(metadata i8* %25, metadata !4028, metadata !DIExpression()), !dbg !4035
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4056
  %27 = add i32 %26, 1, !dbg !4057
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4058
  call void @llvm.dbg.value(metadata i8* %28, metadata !4028, metadata !DIExpression()), !dbg !4035
  %29 = add nuw nsw i32 %23, 1, !dbg !4059
  call void @llvm.dbg.value(metadata i32 %29, metadata !4033, metadata !DIExpression()), !dbg !4048
  %30 = icmp eq i32 %29, %10, !dbg !4049
  br i1 %30, label %17, label %22, !dbg !4051, !llvm.loop !4060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4062 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4066, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i8* %1, metadata !4067, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i8* %2, metadata !4068, metadata !DIExpression()), !dbg !4070
  call void @llvm.dbg.value(metadata i16 %3, metadata !4069, metadata !DIExpression()), !dbg !4070
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4071
  br i1 %5, label %6, label %9, !dbg !4073

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4074
  %8 = add i32 %7, 1, !dbg !4076
  br label %20, !dbg !4077

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4078
  br i1 %10, label %13, label %11, !dbg !4079

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4079
  br label %16, !dbg !4079

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4080
  %15 = add i32 %14, 1, !dbg !4081
  br label %16, !dbg !4079

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4079
  %18 = and i32 %17, 65535, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %17, metadata !4069, metadata !DIExpression()), !dbg !4070
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4083
  br label %20, !dbg !4084

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4070
  ret i32 %21, !dbg !4085
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4086 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4088, metadata !DIExpression()), !dbg !4089
  ret i32 0, !dbg !4090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4091 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4095, metadata !DIExpression()), !dbg !4096
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4097
  ret void, !dbg !4098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4099 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4100
  ret i8* %1, !dbg !4101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4102 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4113, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i8* %0, metadata !4112, metadata !DIExpression()), !dbg !4124
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4125
  ret void, !dbg !4127
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4132, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i8* %1, metadata !4133, metadata !DIExpression()), !dbg !4134
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4135
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4135
  ret i32 %4, !dbg !4136
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4137 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4144, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4141, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i8* %1, metadata !4142, metadata !DIExpression()), !dbg !4145
  call void @llvm.dbg.value(metadata i8* %2, metadata !4143, metadata !DIExpression()), !dbg !4145
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4146
  ret void, !dbg !4147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4148 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4152, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.value(metadata i32 %1, metadata !4153, metadata !DIExpression()), !dbg !4155
  call void @llvm.dbg.value(metadata i32 0, metadata !4154, metadata !DIExpression()), !dbg !4155
  %3 = icmp eq i32 %1, 0, !dbg !4156
  br i1 %3, label %13, label %4, !dbg !4159

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4154, metadata !DIExpression()), !dbg !4155
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4160
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4162
  %8 = load i8, i8* %7, align 1, !dbg !4162
  %9 = zext i8 %8 to i32, !dbg !4162
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4160
  %11 = add nuw i32 %5, 1, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %11, metadata !4154, metadata !DIExpression()), !dbg !4155
  %12 = icmp eq i32 %11, %1, !dbg !4156
  br i1 %12, label %13, label %4, !dbg !4159, !llvm.loop !4164

13:                                               ; preds = %4, %2
  ret void, !dbg !4166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4167 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4171, metadata !DIExpression()), !dbg !4173
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4174
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4174
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4172, metadata !DIExpression()), !dbg !4175
  call void @llvm.va_start(i8* nonnull %3), !dbg !4176
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4177
  %5 = load i32, i32* %4, align 4, !dbg !4177
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4177
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4177
  call void @llvm.va_end(i8* nonnull %3), !dbg !4178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4179
  ret void, !dbg !4179
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4180 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4184, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.value(metadata i32 %1, metadata !4185, metadata !DIExpression()), !dbg !4189
  call void @llvm.dbg.value(metadata i8* %2, metadata !4186, metadata !DIExpression()), !dbg !4189
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4190
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4190
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4187, metadata !DIExpression()), !dbg !4191
  call void @llvm.va_start(i8* nonnull %5), !dbg !4192
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4193
  %7 = load i32, i32* %6, align 4, !dbg !4193
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4193
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4193
  call void @llvm.dbg.value(metadata i32 %9, metadata !4188, metadata !DIExpression()), !dbg !4189
  call void @llvm.va_end(i8* nonnull %5), !dbg !4194
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4195
  ret i32 %9, !dbg !4196
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4197 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4204, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.value(metadata i8* %0, metadata !4201, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.value(metadata i32 %1, metadata !4202, metadata !DIExpression()), !dbg !4211
  call void @llvm.dbg.value(metadata i8* %2, metadata !4203, metadata !DIExpression()), !dbg !4211
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4212
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4212
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4205, metadata !DIExpression()), !dbg !4213
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4214
  store i8* %0, i8** %7, align 4, !dbg !4214
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4214
  store i32 %1, i32* %8, align 4, !dbg !4214
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4214
  store i32 0, i32* %9, align 4, !dbg !4214
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4215
  %10 = load i32, i32* %9, align 4, !dbg !4216
  %11 = load i32, i32* %8, align 4, !dbg !4218
  %12 = icmp slt i32 %10, %11, !dbg !4219
  br i1 %12, label %13, label %15, !dbg !4220

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4221
  store i8 0, i8* %14, align 1, !dbg !4223
  br label %15, !dbg !4224

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4225
  ret i32 %10, !dbg !4226
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4232, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4233, metadata !DIExpression()), !dbg !4234
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4235
  %4 = load i8*, i8** %3, align 4, !dbg !4235
  %5 = icmp eq i8* %4, null, !dbg !4237
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4238
  br i1 %5, label %12, label %8, !dbg !4239

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4240
  %10 = load i32, i32* %9, align 4, !dbg !4240
  %11 = icmp slt i32 %7, %10, !dbg !4241
  br i1 %11, label %15, label %12, !dbg !4242

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4243
  %14 = add nsw i32 %7, 1, !dbg !4245
  store i32 %14, i32* %13, align 4, !dbg !4245
  br label %25, !dbg !4246

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4247
  %17 = icmp eq i32 %7, %16, !dbg !4249
  br i1 %17, label %18, label %21, !dbg !4250

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4251
  store i32 %19, i32* %6, align 4, !dbg !4251
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4253
  store i8 0, i8* %20, align 1, !dbg !4254
  br label %25, !dbg !4255

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4256
  %23 = add nsw i32 %7, 1, !dbg !4258
  store i32 %23, i32* %6, align 4, !dbg !4258
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4259
  store i8 %22, i8* %24, align 1, !dbg !4260
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4261
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4262 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4267, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %1, metadata !4268, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %2, metadata !4269, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.value(metadata i8* %3, metadata !4270, metadata !DIExpression()), !dbg !4271
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4272
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4273
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4274
  unreachable, !dbg !4275
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4276 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4383
  ret %struct.k_thread* %1, !dbg !4384
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4385 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4390, metadata !DIExpression()), !dbg !4391
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4392, !srcloc !4394
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4395
  ret void, !dbg !4396
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4397 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4398, !srcloc !4400
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4401
  ret %struct.k_thread* %1, !dbg !4402
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4403 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4416, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4413, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i8* %1, metadata !4414, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i8* %2, metadata !4415, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %4, metadata !4417, metadata !DIExpression()), !dbg !4542
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4543
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4543
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4418, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata i32 0, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i1 undef, metadata !4424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4542
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4545

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4545

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4546
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4416, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i8* %30, metadata !4415, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %29, metadata !4422, metadata !DIExpression()), !dbg !4542
  %31 = load i8, i8* %30, align 1, !dbg !4547
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4545

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4547
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4548
  call void @llvm.dbg.value(metadata i8* %34, metadata !4415, metadata !DIExpression()), !dbg !4542
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4548
  call void @llvm.dbg.value(metadata i32 %35, metadata !4426, metadata !DIExpression()), !dbg !4549
  %36 = icmp slt i32 %35, 0, !dbg !4550
  %37 = add i32 %29, 1, !dbg !4548
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %36, label %365, label %28, !llvm.loop !4552

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4554
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4431, metadata !DIExpression()), !dbg !4555
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4555
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4474, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4477, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %30, metadata !4480, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 -1, metadata !4481, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 -1, metadata !4482, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* null, metadata !4483, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %14, metadata !4484, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 0, metadata !4485, metadata !DIExpression()), !dbg !4556
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4557
  call void @llvm.dbg.value(metadata i8* %39, metadata !4415, metadata !DIExpression()), !dbg !4542
  %40 = load i24, i24* %15, align 8, !dbg !4558
  %41 = and i24 %40, 256, !dbg !4558
  %42 = icmp eq i24 %41, 0, !dbg !4558
  br i1 %42, label %51, label %43, !dbg !4560

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4561
  call void @llvm.dbg.value(metadata i8* %44, metadata !4416, metadata !DIExpression()), !dbg !4542
  %45 = bitcast i8* %27 to i32*, !dbg !4561
  %46 = load i32, i32* %45, align 4, !dbg !4561
  call void @llvm.dbg.value(metadata i32 %46, metadata !4481, metadata !DIExpression()), !dbg !4556
  %47 = icmp slt i32 %46, 0, !dbg !4563
  br i1 %47, label %48, label %56, !dbg !4565

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4566
  store i24 %49, i24* %15, align 8, !dbg !4566
  %50 = sub nsw i32 0, %46, !dbg !4568
  call void @llvm.dbg.value(metadata i32 %50, metadata !4481, metadata !DIExpression()), !dbg !4556
  br label %56, !dbg !4569

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4570
  %53 = icmp eq i24 %52, 0, !dbg !4570
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4572
  br label %56, !dbg !4572

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4573
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4556
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4416, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %58, metadata !4481, metadata !DIExpression()), !dbg !4556
  %60 = and i24 %57, 1024, !dbg !4573
  %61 = icmp eq i24 %60, 0, !dbg !4573
  br i1 %61, label %69, label %62, !dbg !4574

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4575
  call void @llvm.dbg.value(metadata i8* %63, metadata !4416, metadata !DIExpression()), !dbg !4542
  %64 = bitcast i8* %59 to i32*, !dbg !4575
  %65 = load i32, i32* %64, align 4, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %65, metadata !4486, metadata !DIExpression()), !dbg !4576
  %66 = icmp slt i32 %65, 0, !dbg !4577
  br i1 %66, label %67, label %74, !dbg !4579

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4580
  store i24 %68, i24* %15, align 8, !dbg !4580
  br label %74, !dbg !4582

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4583
  %71 = icmp eq i24 %70, 0, !dbg !4583
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4585
  br label %74, !dbg !4585

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4586
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4556
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4556
  call void @llvm.dbg.value(metadata i8* %77, metadata !4416, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %76, metadata !4482, metadata !DIExpression()), !dbg !4556
  store i32 0, i32* %16, align 4, !dbg !4587
  store i32 0, i32* %17, align 8, !dbg !4588
  %78 = lshr i24 %75, 16, !dbg !4586
  call void @llvm.dbg.value(metadata i24 %78, metadata !4489, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4556
  %79 = lshr i24 %75, 11, !dbg !4589
  %80 = and i24 %79, 15, !dbg !4589
  %81 = zext i24 %80 to i32, !dbg !4589
  call void @llvm.dbg.value(metadata i32 %81, metadata !4490, metadata !DIExpression()), !dbg !4556
  %82 = trunc i24 %78 to i3, !dbg !4590
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4590

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4591

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4594
  call void @llvm.dbg.value(metadata i8* %85, metadata !4416, metadata !DIExpression()), !dbg !4542
  %86 = bitcast i8* %77 to i32*, !dbg !4594
  %87 = load i32, i32* %86, align 4, !dbg !4594
  %88 = sext i32 %87 to i64, !dbg !4594
  store i64 %88, i64* %20, align 8, !dbg !4596
  br label %115, !dbg !4597

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4598
  call void @llvm.dbg.value(metadata i8* %90, metadata !4416, metadata !DIExpression()), !dbg !4542
  %91 = bitcast i8* %77 to i32*, !dbg !4598
  %92 = load i32, i32* %91, align 4, !dbg !4598
  %93 = sext i32 %92 to i64, !dbg !4598
  store i64 %93, i64* %20, align 8, !dbg !4601
  br label %115, !dbg !4602

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4603
  %96 = add i32 %95, 7, !dbg !4603
  %97 = and i32 %96, -8, !dbg !4603
  %98 = inttoptr i32 %97 to i8*, !dbg !4603
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4603
  call void @llvm.dbg.value(metadata i8* %99, metadata !4416, metadata !DIExpression()), !dbg !4542
  %100 = inttoptr i32 %97 to i64*, !dbg !4603
  %101 = load i64, i64* %100, align 8, !dbg !4603
  store i64 %101, i64* %20, align 8, !dbg !4604
  br label %115, !dbg !4605

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4606
  %104 = add i32 %103, 7, !dbg !4606
  %105 = and i32 %104, -8, !dbg !4606
  %106 = inttoptr i32 %105 to i8*, !dbg !4606
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4606
  call void @llvm.dbg.value(metadata i8* %107, metadata !4416, metadata !DIExpression()), !dbg !4542
  %108 = inttoptr i32 %105 to i64*, !dbg !4606
  %109 = load i64, i64* %108, align 8, !dbg !4606
  store i64 %109, i64* %20, align 8, !dbg !4607
  br label %115, !dbg !4608

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4609
  call void @llvm.dbg.value(metadata i8* %111, metadata !4416, metadata !DIExpression()), !dbg !4542
  %112 = bitcast i8* %77 to i32*, !dbg !4609
  %113 = load i32, i32* %112, align 4, !dbg !4609
  %114 = sext i32 %113 to i64, !dbg !4610
  store i64 %114, i64* %20, align 8, !dbg !4611
  br label %115, !dbg !4612

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4613
  call void @llvm.dbg.value(metadata i8* %117, metadata !4416, metadata !DIExpression()), !dbg !4542
  %118 = trunc i24 %79 to i4, !dbg !4614
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4614

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4615
  %121 = ashr exact i64 %120, 56, !dbg !4615
  store i64 %121, i64* %20, align 8, !dbg !4618
  br label %177, !dbg !4619

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4620
  %124 = ashr exact i64 %123, 48, !dbg !4620
  store i64 %124, i64* %20, align 8, !dbg !4623
  br label %177, !dbg !4624

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4625

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4628
  call void @llvm.dbg.value(metadata i8* %127, metadata !4416, metadata !DIExpression()), !dbg !4542
  %128 = bitcast i8* %77 to i32*, !dbg !4628
  %129 = load i32, i32* %128, align 4, !dbg !4628
  %130 = zext i32 %129 to i64, !dbg !4628
  store i64 %130, i64* %20, align 8, !dbg !4630
  br label %157, !dbg !4631

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4632
  call void @llvm.dbg.value(metadata i8* %132, metadata !4416, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i8* %132, metadata !4416, metadata !DIExpression()), !dbg !4542
  %133 = bitcast i8* %77 to i32*, !dbg !4632
  %134 = load i32, i32* %133, align 4, !dbg !4632
  %135 = zext i32 %134 to i64, !dbg !4632
  store i64 %135, i64* %20, align 8, !dbg !4632
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4634
  %138 = add i32 %137, 7, !dbg !4634
  %139 = and i32 %138, -8, !dbg !4634
  %140 = inttoptr i32 %139 to i8*, !dbg !4634
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4634
  call void @llvm.dbg.value(metadata i8* %141, metadata !4416, metadata !DIExpression()), !dbg !4542
  %142 = inttoptr i32 %139 to i64*, !dbg !4634
  %143 = load i64, i64* %142, align 8, !dbg !4634
  store i64 %143, i64* %20, align 8, !dbg !4635
  br label %157, !dbg !4636

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4637
  %146 = add i32 %145, 7, !dbg !4637
  %147 = and i32 %146, -8, !dbg !4637
  %148 = inttoptr i32 %147 to i8*, !dbg !4637
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4637
  call void @llvm.dbg.value(metadata i8* %149, metadata !4416, metadata !DIExpression()), !dbg !4542
  %150 = inttoptr i32 %147 to i64*, !dbg !4637
  %151 = load i64, i64* %150, align 8, !dbg !4637
  store i64 %151, i64* %20, align 8, !dbg !4638
  br label %157, !dbg !4639

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4640
  call void @llvm.dbg.value(metadata i8* %153, metadata !4416, metadata !DIExpression()), !dbg !4542
  %154 = bitcast i8* %77 to i32*, !dbg !4640
  %155 = load i32, i32* %154, align 4, !dbg !4640
  %156 = zext i32 %155 to i64, !dbg !4641
  store i64 %156, i64* %20, align 8, !dbg !4642
  br label %157, !dbg !4643

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4644
  call void @llvm.dbg.value(metadata i8* %159, metadata !4416, metadata !DIExpression()), !dbg !4542
  %160 = trunc i24 %79 to i4, !dbg !4645
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4645

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4646
  store i64 %162, i64* %20, align 8, !dbg !4649
  br label %177, !dbg !4650

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4651
  store i64 %164, i64* %20, align 8, !dbg !4654
  br label %177, !dbg !4655

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4656
  %167 = add i32 %166, 7, !dbg !4656
  %168 = and i32 %167, -8, !dbg !4656
  %169 = inttoptr i32 %168 to i8*, !dbg !4656
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4656
  call void @llvm.dbg.value(metadata i8* %170, metadata !4416, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i8* %170, metadata !4416, metadata !DIExpression()), !dbg !4542
  %171 = inttoptr i32 %168 to double*, !dbg !4656
  %172 = load double, double* %171, align 8, !dbg !4656
  store double %172, double* %19, align 8, !dbg !4656
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4660
  call void @llvm.dbg.value(metadata i8* %174, metadata !4416, metadata !DIExpression()), !dbg !4542
  %175 = bitcast i8* %77 to i8**, !dbg !4660
  %176 = load i8*, i8** %175, align 4, !dbg !4660
  store i8* %176, i8** %18, align 8, !dbg !4663
  br label %177, !dbg !4664

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4556
  call void @llvm.dbg.value(metadata i8* %178, metadata !4416, metadata !DIExpression()), !dbg !4542
  %179 = and i24 %75, 3, !dbg !4665
  %180 = icmp eq i24 %179, 0, !dbg !4665
  br i1 %180, label %185, label %181, !dbg !4665

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4666
  call void @llvm.dbg.value(metadata i32 %182, metadata !4491, metadata !DIExpression()), !dbg !4667
  %183 = icmp slt i32 %182, 0, !dbg !4668
  %184 = add i32 %182, %29, !dbg !4666
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4670
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4671

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4672
  call void @llvm.dbg.value(metadata i32 %188, metadata !4495, metadata !DIExpression()), !dbg !4673
  %189 = icmp slt i32 %188, 0, !dbg !4674
  %190 = add i32 %29, 1, !dbg !4672
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4676
  call void @llvm.dbg.value(metadata i8* %192, metadata !4483, metadata !DIExpression()), !dbg !4556
  %193 = icmp sgt i32 %76, -1, !dbg !4677
  br i1 %193, label %194, label %196, !dbg !4679

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %195, metadata !4498, metadata !DIExpression()), !dbg !4682
  br label %241, !dbg !4683

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4684
  call void @llvm.dbg.value(metadata i32 %197, metadata !4498, metadata !DIExpression()), !dbg !4682
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4483, metadata !DIExpression()), !dbg !4556
  %199 = load i64, i64* %20, align 8, !dbg !4686
  %200 = trunc i64 %199 to i8, !dbg !4687
  store i8 %200, i8* %10, align 1, !dbg !4688
  call void @llvm.dbg.value(metadata i8* %23, metadata !4484, metadata !DIExpression()), !dbg !4556
  br label %245, !dbg !4689

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4690
  %203 = icmp eq i24 %202, 0, !dbg !4690
  %204 = trunc i24 %75 to i8, !dbg !4692
  %205 = shl i8 %204, 1, !dbg !4692
  %206 = and i8 %205, 32, !dbg !4692
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4692
  call void @llvm.dbg.value(metadata i8 %207, metadata !4485, metadata !DIExpression()), !dbg !4556
  %208 = load i64, i64* %20, align 8, !dbg !4693
  call void @llvm.dbg.value(metadata i64 %208, metadata !4423, metadata !DIExpression()), !dbg !4542
  %209 = icmp slt i64 %208, 0, !dbg !4694
  br i1 %209, label %210, label %212, !dbg !4696

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4485, metadata !DIExpression()), !dbg !4556
  %211 = sub nsw i64 0, %208, !dbg !4697
  store i64 %211, i64* %20, align 8, !dbg !4699
  br label %212, !dbg !4700

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4556
  call void @llvm.dbg.value(metadata i8 %213, metadata !4485, metadata !DIExpression()), !dbg !4556
  %214 = load i64, i64* %20, align 8, !dbg !4701
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4702
  call void @llvm.dbg.value(metadata i8* %215, metadata !4483, metadata !DIExpression()), !dbg !4556
  br label %216, !dbg !4703

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4704
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4705
  call void @llvm.dbg.value(metadata i8* %218, metadata !4483, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 %217, metadata !4485, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.label(metadata !4541), !dbg !4706
  %219 = icmp sgt i32 %76, -1, !dbg !4707
  br i1 %219, label %222, label %220, !dbg !4708

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4709
  br label %245, !dbg !4708

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4711
  %224 = sub i32 %22, %223, !dbg !4711
  call void @llvm.dbg.value(metadata i32 %224, metadata !4500, metadata !DIExpression()), !dbg !4712
  %225 = load i24, i24* %15, align 8, !dbg !4713
  %226 = and i24 %225, -65, !dbg !4713
  store i24 %226, i24* %15, align 8, !dbg !4713
  %227 = icmp ugt i32 %76, %224, !dbg !4714
  br i1 %227, label %228, label %245, !dbg !4716

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4717
  store i32 %229, i32* %16, align 4, !dbg !4719
  br label %245, !dbg !4720

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4721
  %232 = icmp eq i8* %231, null, !dbg !4723
  br i1 %232, label %245, label %233, !dbg !4724

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4725
  %235 = zext i32 %234 to i64, !dbg !4725
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4727
  call void @llvm.dbg.value(metadata i8* %236, metadata !4483, metadata !DIExpression()), !dbg !4556
  %237 = load i24, i24* %15, align 8, !dbg !4728
  %238 = or i24 %237, 1048576, !dbg !4728
  store i24 %238, i24* %15, align 8, !dbg !4728
  store i8 120, i8* %21, align 1, !dbg !4729
  br label %216, !dbg !4730

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4731
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4734
  br label %363, !dbg !4735

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4736
  call void @llvm.dbg.value(metadata i32 %242, metadata !4498, metadata !DIExpression()), !dbg !4682
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4737
  call void @llvm.dbg.value(metadata i32 -1, metadata !4482, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %29, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i8* %192, metadata !4483, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8* %243, metadata !4484, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 0, metadata !4485, metadata !DIExpression()), !dbg !4556
  %244 = icmp eq i8* %192, null, !dbg !4738
  br i1 %244, label %363, label %245, !dbg !4740, !llvm.loop !4552

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4709
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4556
  call void @llvm.dbg.value(metadata i32 0, metadata !4504, metadata !DIExpression()), !dbg !4556
  %250 = zext i8 %249 to i32, !dbg !4741
  %251 = icmp eq i8 %249, 0, !dbg !4743
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  call void @llvm.dbg.value(metadata i32 undef, metadata !4503, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  call void @llvm.dbg.value(metadata i32 undef, metadata !4503, metadata !DIExpression()), !dbg !4556
  %252 = icmp sgt i32 %58, 0, !dbg !4744
  br i1 %252, label %253, label %302, !dbg !4745

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4709
  %255 = icmp eq i24 %254, 0, !dbg !4709
  %256 = ptrtoint i8* %248 to i32, !dbg !4746
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  %257 = ptrtoint i8* %247 to i32, !dbg !4746
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  %258 = xor i1 %251, true, !dbg !4747
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  %259 = sext i1 %258 to i32, !dbg !4747
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  %260 = lshr i24 %246, 19, !dbg !4748
  %261 = and i24 %260, 1, !dbg !4748
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4748
  %263 = zext i24 %262 to i32, !dbg !4748
  %264 = add i32 %257, %259, !dbg !4748
  %265 = add i32 %256, %263, !dbg !4748
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  %266 = and i24 %246, 4194304, !dbg !4749
  %267 = icmp eq i24 %266, 0, !dbg !4749
  %268 = load i32, i32* %16, align 4, !dbg !4751
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4503, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4556
  call void @llvm.dbg.value(metadata i32 undef, metadata !4503, metadata !DIExpression()), !dbg !4556
  %269 = load i32, i32* %17, align 8, !dbg !4752
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4752
  call void @llvm.dbg.value(metadata i32 undef, metadata !4503, metadata !DIExpression()), !dbg !4556
  %271 = add i32 %264, %58, !dbg !4752
  %272 = add i32 %265, %268, !dbg !4752
  %273 = add i32 %272, %270, !dbg !4753
  %274 = sub i32 %271, %273, !dbg !4753
  call void @llvm.dbg.value(metadata i32 %274, metadata !4481, metadata !DIExpression()), !dbg !4556
  %275 = and i24 %246, 4, !dbg !4754
  %276 = icmp eq i24 %275, 0, !dbg !4754
  br i1 %276, label %277, label %302, !dbg !4755

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4505, metadata !DIExpression()), !dbg !4756
  %278 = and i24 %246, 64, !dbg !4757
  %279 = icmp eq i24 %278, 0, !dbg !4757
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4758
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4758
  %282 = select i1 %279, i32 32, i32 48, !dbg !4758
  br i1 %280, label %287, label %283, !dbg !4758

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4759
  call void @llvm.dbg.value(metadata i32 %284, metadata !4510, metadata !DIExpression()), !dbg !4760
  %285 = icmp slt i32 %284, 0, !dbg !4761
  %286 = add i32 %29, 1, !dbg !4759
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4556
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4546
  call void @llvm.dbg.value(metadata i32 %290, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i8 undef, metadata !4505, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.value(metadata i8 %288, metadata !4485, metadata !DIExpression()), !dbg !4556
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4763
  %292 = add i32 %291, -1, !dbg !4763
  br label %293, !dbg !4763

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4764
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4546
  call void @llvm.dbg.value(metadata i32 %295, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %294, metadata !4481, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i32 %294, metadata !4481, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4556
  %296 = icmp sgt i32 %294, 0, !dbg !4765
  br i1 %296, label %297, label %302, !dbg !4763

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %298, metadata !4481, metadata !DIExpression()), !dbg !4556
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4767
  call void @llvm.dbg.value(metadata i32 %299, metadata !4516, metadata !DIExpression()), !dbg !4768
  %300 = icmp slt i32 %299, 0, !dbg !4769
  %301 = add i32 %295, 1, !dbg !4767
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %300, label %361, label %293, !llvm.loop !4771

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4556
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4556
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4546
  call void @llvm.dbg.value(metadata i32 %305, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %304, metadata !4481, metadata !DIExpression()), !dbg !4556
  call void @llvm.dbg.value(metadata i8 %303, metadata !4485, metadata !DIExpression()), !dbg !4556
  %306 = icmp eq i8 %303, 0, !dbg !4773
  br i1 %306, label %312, label %307, !dbg !4774

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4775
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4776
  call void @llvm.dbg.value(metadata i32 %309, metadata !4519, metadata !DIExpression()), !dbg !4777
  %310 = icmp slt i32 %309, 0, !dbg !4778
  %311 = add i32 %305, 1, !dbg !4776
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4546
  call void @llvm.dbg.value(metadata i32 %313, metadata !4422, metadata !DIExpression()), !dbg !4542
  %314 = lshr i24 %246, 20, !dbg !4780
  %315 = lshr i24 %246, 19, !dbg !4781
  %316 = or i24 %314, %315, !dbg !4782
  %317 = and i24 %316, 1, !dbg !4782
  %318 = icmp eq i24 %317, 0, !dbg !4782
  br i1 %318, label %323, label %319, !dbg !4783

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4784
  call void @llvm.dbg.value(metadata i32 %320, metadata !4523, metadata !DIExpression()), !dbg !4785
  %321 = icmp slt i32 %320, 0, !dbg !4786
  %322 = add i32 %313, 1, !dbg !4784
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4546
  call void @llvm.dbg.value(metadata i32 %324, metadata !4422, metadata !DIExpression()), !dbg !4542
  %325 = and i24 %246, 1048576, !dbg !4788
  %326 = icmp eq i24 %325, 0, !dbg !4788
  br i1 %326, label %333, label %327, !dbg !4789

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4790
  %329 = zext i8 %328 to i32, !dbg !4790
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %330, metadata !4529, metadata !DIExpression()), !dbg !4791
  %331 = icmp slt i32 %330, 0, !dbg !4792
  %332 = add i32 %324, 1, !dbg !4790
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4546
  call void @llvm.dbg.value(metadata i32 %334, metadata !4422, metadata !DIExpression()), !dbg !4542
  %335 = load i32, i32* %16, align 4, !dbg !4794
  call void @llvm.dbg.value(metadata i32 %335, metadata !4504, metadata !DIExpression()), !dbg !4556
  br label %336, !dbg !4795

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4796
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4546
  call void @llvm.dbg.value(metadata i32 %338, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %337, metadata !4504, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4556
  %339 = icmp sgt i32 %337, 0, !dbg !4797
  br i1 %339, label %340, label %345, !dbg !4795

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %341, metadata !4504, metadata !DIExpression()), !dbg !4556
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !4799
  call void @llvm.dbg.value(metadata i32 %342, metadata !4533, metadata !DIExpression()), !dbg !4800
  %343 = icmp slt i32 %342, 0, !dbg !4801
  %344 = add i32 %338, 1, !dbg !4799
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %343, label %361, label %336, !llvm.loop !4803

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %346, metadata !4536, metadata !DIExpression()), !dbg !4806
  %347 = icmp slt i32 %346, 0, !dbg !4807
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %349, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %304, metadata !4481, metadata !DIExpression()), !dbg !4556
  %350 = icmp sgt i32 %304, 0, !dbg !4809
  br i1 %350, label %351, label %363, !dbg !4810

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4810
  %353 = add i32 %352, %338, !dbg !4810
  br label %354, !dbg !4810

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %355, metadata !4481, metadata !DIExpression()), !dbg !4556
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %356, metadata !4538, metadata !DIExpression()), !dbg !4812
  %357 = icmp slt i32 %356, 0, !dbg !4813
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4815
  call void @llvm.dbg.value(metadata i32 undef, metadata !4422, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4542
  call void @llvm.dbg.value(metadata i32 %359, metadata !4481, metadata !DIExpression()), !dbg !4556
  %360 = icmp sgt i32 %355, 1, !dbg !4809
  br i1 %360, label %354, label %363, !dbg !4810, !llvm.loop !4816

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4553
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4546
  call void @llvm.dbg.value(metadata i32 %364, metadata !4422, metadata !DIExpression()), !dbg !4542
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4553
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4542
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4818
  ret i32 %366, !dbg !4818
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !4819 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4823, metadata !DIExpression()), !dbg !4825
  call void @llvm.dbg.value(metadata i8* %1, metadata !4824, metadata !DIExpression()), !dbg !4825
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4826
  store i24 0, i24* %3, align 4, !dbg !4826
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4826
  store i8 0, i8* %4, align 1, !dbg !4826
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4826
  store i32 0, i32* %5, align 4, !dbg !4826
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4826
  store i32 0, i32* %6, align 4, !dbg !4826
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4827
  call void @llvm.dbg.value(metadata i8* %7, metadata !4824, metadata !DIExpression()), !dbg !4825
  %8 = load i8, i8* %7, align 1, !dbg !4828
  %9 = icmp eq i8 %8, 37, !dbg !4830
  br i1 %9, label %10, label %12, !dbg !4831

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4832
  call void @llvm.dbg.value(metadata i8* %11, metadata !4824, metadata !DIExpression()), !dbg !4825
  store i8 37, i8* %4, align 1, !dbg !4834
  br label %18, !dbg !4835

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !4836
  call void @llvm.dbg.value(metadata i8* %13, metadata !4824, metadata !DIExpression()), !dbg !4825
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %14, metadata !4824, metadata !DIExpression()), !dbg !4825
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !4838
  call void @llvm.dbg.value(metadata i8* %15, metadata !4824, metadata !DIExpression()), !dbg !4825
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %16, metadata !4824, metadata !DIExpression()), !dbg !4825
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !4840
  call void @llvm.dbg.value(metadata i8* %17, metadata !4824, metadata !DIExpression()), !dbg !4825
  br label %18, !dbg !4841

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4825
  ret i8* %19, !dbg !4842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4843 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4847, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i8* %1, metadata !4848, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i8* %2, metadata !4849, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i8* %3, metadata !4850, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i32 0, metadata !4851, metadata !DIExpression()), !dbg !4854
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !4855

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !4856
  call void @llvm.dbg.value(metadata i32 %9, metadata !4851, metadata !DIExpression()), !dbg !4854
  call void @llvm.dbg.value(metadata i8* %8, metadata !4849, metadata !DIExpression()), !dbg !4854
  %10 = icmp ult i8* %8, %3, !dbg !4857
  br i1 %10, label %11, label %13, !dbg !4858

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !4859
  br label %17, !dbg !4858

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !4860

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !4861
  %16 = icmp eq i8 %15, 0, !dbg !4860
  br i1 %16, label %24, label %17, !dbg !4855

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !4859
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %19, metadata !4849, metadata !DIExpression()), !dbg !4854
  %20 = zext i8 %18 to i32, !dbg !4863
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !4864
  call void @llvm.dbg.value(metadata i32 %21, metadata !4852, metadata !DIExpression()), !dbg !4865
  %22 = icmp slt i32 %21, 0, !dbg !4866
  %23 = add i32 %9, 1, !dbg !4868
  call void @llvm.dbg.value(metadata i32 undef, metadata !4851, metadata !DIExpression()), !dbg !4854
  br i1 %22, label %24, label %7, !llvm.loop !4869

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !4854
  ret i32 %25, !dbg !4871
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !4872 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !4876, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !4877, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i8* %2, metadata !4878, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i8* %3, metadata !4879, metadata !DIExpression()), !dbg !4886
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !4887
  %6 = load i8, i8* %5, align 1, !dbg !4887
  %7 = zext i8 %6 to i32, !dbg !4888
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !4889
  %9 = icmp eq i32 %8, 0, !dbg !4889
  call void @llvm.dbg.value(metadata i1 %9, metadata !4880, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4886
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !4890
  call void @llvm.dbg.value(metadata i32 %10, metadata !4881, metadata !DIExpression()), !dbg !4886
  %11 = ptrtoint i8* %3 to i32, !dbg !4891
  %12 = ptrtoint i8* %2 to i32, !dbg !4891
  %13 = sub i32 %11, %12, !dbg !4891
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !4892
  call void @llvm.dbg.value(metadata i8* %14, metadata !4883, metadata !DIExpression()), !dbg !4886
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !4893

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !4886
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !4876, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.value(metadata i8* %18, metadata !4883, metadata !DIExpression()), !dbg !4886
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !4894
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !4895
  call void @llvm.dbg.value(metadata i32 %25, metadata !4884, metadata !DIExpression()), !dbg !4896
  %26 = icmp ult i32 %25, 10, !dbg !4897
  %27 = select i1 %26, i32 48, i32 %16, !dbg !4898
  %28 = add i32 %27, %25, !dbg !4896
  %29 = trunc i32 %28 to i8, !dbg !4898
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4899
  call void @llvm.dbg.value(metadata i8* %30, metadata !4883, metadata !DIExpression()), !dbg !4886
  store i8 %29, i8* %30, align 1, !dbg !4900
  call void @llvm.dbg.value(metadata i64 %22, metadata !4876, metadata !DIExpression()), !dbg !4886
  %31 = icmp uge i64 %19, %15, !dbg !4901
  %32 = icmp ugt i8* %30, %2, !dbg !4902
  %33 = and i1 %31, %32, !dbg !4902
  br i1 %33, label %17, label %34, !dbg !4903, !llvm.loop !4904

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !4906
  %36 = load i24, i24* %35, align 4, !dbg !4906
  %37 = and i24 %36, 32, !dbg !4906
  %38 = icmp eq i24 %37, 0, !dbg !4906
  br i1 %38, label %44, label %39, !dbg !4908

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !4909

40:                                               ; preds = %39
  br label %41, !dbg !4911

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !4915
  store i24 %43, i24* %35, align 4, !dbg !4915
  br label %44, !dbg !4916

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !4916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !4917 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4923, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i8* %1, metadata !4924, metadata !DIExpression()), !dbg !4926
  call void @llvm.dbg.value(metadata i32 %2, metadata !4925, metadata !DIExpression()), !dbg !4926
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !4927
  %5 = load i24, i24* %4, align 4, !dbg !4927
  %6 = lshr i24 %5, 11, !dbg !4927
  %7 = and i24 %6, 15, !dbg !4927
  %8 = zext i24 %7 to i32, !dbg !4927
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !4928

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !4929
  store i32 %2, i32* %10, align 4, !dbg !4931
  br label %28, !dbg !4932

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !4933
  store i8 %12, i8* %1, align 1, !dbg !4934
  br label %28, !dbg !4935

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !4936
  %15 = bitcast i8* %1 to i16*, !dbg !4937
  store i16 %14, i16* %15, align 2, !dbg !4938
  br label %28, !dbg !4939

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !4940
  store i32 %2, i32* %17, align 4, !dbg !4941
  br label %28, !dbg !4942

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !4943
  %20 = bitcast i8* %1 to i64*, !dbg !4944
  store i64 %19, i64* %20, align 8, !dbg !4945
  br label %28, !dbg !4946

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !4947
  %23 = bitcast i8* %1 to i64*, !dbg !4948
  store i64 %22, i64* %23, align 8, !dbg !4949
  br label %28, !dbg !4950

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !4951
  store i32 %2, i32* %25, align 4, !dbg !4952
  br label %28, !dbg !4953

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !4954
  store i32 %2, i32* %27, align 4, !dbg !4955
  br label %28, !dbg !4956

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !4957
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !4958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4961, metadata !DIExpression()), !dbg !4962
  %2 = add i32 %0, -65, !dbg !4963
  %3 = icmp ult i32 %2, 26, !dbg !4964
  %4 = zext i1 %3 to i32, !dbg !4964
  ret i32 %4, !dbg !4965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !4966 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4970, metadata !DIExpression()), !dbg !4971
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !4972

2:                                                ; preds = %1
  br label %4, !dbg !4973

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !4975

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !4976
  ret i32 %5, !dbg !4977
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !4978 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4980, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata i8* %1, metadata !4981, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata i8 1, metadata !4982, metadata !DIExpression()), !dbg !4983
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !4984

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !4982, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata i8* %5, metadata !4981, metadata !DIExpression()), !dbg !4983
  %6 = load i8, i8* %5, align 1, !dbg !4985
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !4987

7:                                                ; preds = %4
  br label %11, !dbg !4988

8:                                                ; preds = %4
  br label %11, !dbg !4990

9:                                                ; preds = %4
  br label %11, !dbg !4991

10:                                               ; preds = %4
  br label %11, !dbg !4992

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !4993
  %14 = or i24 %13, %12, !dbg !4993
  store i24 %14, i24* %3, align 4, !dbg !4993
  call void @llvm.dbg.value(metadata i8 poison, metadata !4982, metadata !DIExpression()), !dbg !4983
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !4981, metadata !DIExpression()), !dbg !4983
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !4982, metadata !DIExpression()), !dbg !4983
  call void @llvm.dbg.value(metadata i8* %15, metadata !4981, metadata !DIExpression()), !dbg !4983
  %17 = load i24, i24* %3, align 4, !dbg !4994
  %18 = and i24 %17, 68, !dbg !4996
  %19 = icmp eq i24 %18, 68, !dbg !4996
  br i1 %19, label %20, label %22, !dbg !4996

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !4997
  store i24 %21, i24* %3, align 4, !dbg !4997
  br label %22, !dbg !4999

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5000
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5001 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5003, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i8* %1, metadata !5004, metadata !DIExpression()), !dbg !5007
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5008
  %5 = load i24, i24* %4, align 4, !dbg !5009
  %6 = or i24 %5, 128, !dbg !5009
  store i24 %6, i24* %4, align 4, !dbg !5009
  call void @llvm.dbg.value(metadata i8* %1, metadata !5004, metadata !DIExpression()), !dbg !5007
  %7 = load i8, i8* %1, align 1, !dbg !5010
  %8 = icmp eq i8 %7, 42, !dbg !5012
  br i1 %8, label %9, label %12, !dbg !5013

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5014
  store i24 %10, i24* %4, align 4, !dbg !5014
  call void @llvm.dbg.value(metadata i8* %1, metadata !5004, metadata !DIExpression()), !dbg !5007
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5016
  call void @llvm.dbg.value(metadata i8* %11, metadata !5004, metadata !DIExpression()), !dbg !5007
  store i8* %11, i8** %3, align 4, !dbg !5016
  br label %29, !dbg !5017

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5005, metadata !DIExpression()), !dbg !5007
  call void @llvm.dbg.value(metadata i8** %3, metadata !5004, metadata !DIExpression(DW_OP_deref)), !dbg !5007
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5018
  call void @llvm.dbg.value(metadata i32 %13, metadata !5006, metadata !DIExpression()), !dbg !5007
  %14 = load i8*, i8** %3, align 4, !dbg !5019
  call void @llvm.dbg.value(metadata i8* %14, metadata !5004, metadata !DIExpression()), !dbg !5007
  %15 = icmp eq i8* %14, %1, !dbg !5021
  br i1 %15, label %29, label %16, !dbg !5022

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5023
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5025
  store i32 %13, i32* %18, align 4, !dbg !5026
  %19 = lshr i32 %13, 31, !dbg !5027
  %20 = lshr i24 %17, 1, !dbg !5028
  %21 = and i24 %20, 1, !dbg !5028
  %22 = zext i24 %21 to i32, !dbg !5028
  %23 = or i32 %19, %22, !dbg !5028
  %24 = trunc i32 %23 to i24, !dbg !5028
  %25 = shl nuw nsw i24 %24, 1, !dbg !5028
  %26 = and i24 %17, -131, !dbg !5028
  %27 = or i24 %26, 128, !dbg !5028
  %28 = or i24 %25, %27, !dbg !5028
  store i24 %28, i24* %4, align 4, !dbg !5028
  br label %29, !dbg !5029

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5007
  ret i8* %30, !dbg !5030
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5031 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5033, metadata !DIExpression()), !dbg !5036
  call void @llvm.dbg.value(metadata i8* %1, metadata !5034, metadata !DIExpression()), !dbg !5036
  %4 = load i8, i8* %1, align 1, !dbg !5037
  %5 = icmp eq i8 %4, 46, !dbg !5038
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5039
  %7 = load i24, i24* %6, align 4, !dbg !5040
  %8 = select i1 %5, i24 512, i24 0, !dbg !5040
  %9 = and i24 %7, -513, !dbg !5040
  %10 = or i24 %9, %8, !dbg !5040
  store i24 %10, i24* %6, align 4, !dbg !5040
  br i1 %5, label %11, label %32, !dbg !5041

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5034, metadata !DIExpression()), !dbg !5036
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5042
  call void @llvm.dbg.value(metadata i8* %12, metadata !5034, metadata !DIExpression()), !dbg !5036
  store i8* %12, i8** %3, align 4, !dbg !5042
  %13 = load i8, i8* %12, align 1, !dbg !5043
  %14 = icmp eq i8 %13, 42, !dbg !5045
  br i1 %14, label %15, label %18, !dbg !5046

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5047
  store i24 %16, i24* %6, align 4, !dbg !5047
  call void @llvm.dbg.value(metadata i8* %12, metadata !5034, metadata !DIExpression()), !dbg !5036
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5049
  call void @llvm.dbg.value(metadata i8* %17, metadata !5034, metadata !DIExpression()), !dbg !5036
  store i8* %17, i8** %3, align 4, !dbg !5049
  br label %32, !dbg !5050

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5034, metadata !DIExpression(DW_OP_deref)), !dbg !5036
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %19, metadata !5035, metadata !DIExpression()), !dbg !5036
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5052
  store i32 %19, i32* %20, align 4, !dbg !5053
  %21 = lshr i32 %19, 31, !dbg !5054
  %22 = load i24, i24* %6, align 4, !dbg !5055
  %23 = lshr i24 %22, 1, !dbg !5055
  %24 = and i24 %23, 1, !dbg !5055
  %25 = zext i24 %24 to i32, !dbg !5055
  %26 = or i32 %21, %25, !dbg !5055
  %27 = trunc i32 %26 to i24, !dbg !5055
  %28 = shl nuw nsw i24 %27, 1, !dbg !5055
  %29 = and i24 %22, -3, !dbg !5055
  %30 = or i24 %28, %29, !dbg !5055
  store i24 %30, i24* %6, align 4, !dbg !5055
  %31 = load i8*, i8** %3, align 4, !dbg !5056
  call void @llvm.dbg.value(metadata i8* %31, metadata !5034, metadata !DIExpression()), !dbg !5036
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5036
  ret i8* %33, !dbg !5057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5058 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5060, metadata !DIExpression()), !dbg !5062
  call void @llvm.dbg.value(metadata i8* %1, metadata !5061, metadata !DIExpression()), !dbg !5062
  %3 = load i8, i8* %1, align 1, !dbg !5063
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5064

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5065
  call void @llvm.dbg.value(metadata i8* %5, metadata !5061, metadata !DIExpression()), !dbg !5062
  %6 = load i8, i8* %5, align 1, !dbg !5068
  %7 = icmp eq i8 %6, 104, !dbg !5069
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5070
  %9 = load i24, i24* %8, align 4, !dbg !5070
  %10 = and i24 %9, -30721, !dbg !5070
  br i1 %7, label %11, label %14, !dbg !5071

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5072
  store i24 %12, i24* %8, align 4, !dbg !5072
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5074
  call void @llvm.dbg.value(metadata i8* %13, metadata !5061, metadata !DIExpression()), !dbg !5062
  br label %56, !dbg !5075

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5076
  store i24 %15, i24* %8, align 4, !dbg !5076
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5078
  call void @llvm.dbg.value(metadata i8* %17, metadata !5061, metadata !DIExpression()), !dbg !5062
  %18 = load i8, i8* %17, align 1, !dbg !5080
  %19 = icmp eq i8 %18, 108, !dbg !5081
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5082
  %21 = load i24, i24* %20, align 4, !dbg !5082
  %22 = and i24 %21, -30721, !dbg !5082
  br i1 %19, label %23, label %26, !dbg !5083

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5084
  store i24 %24, i24* %20, align 4, !dbg !5084
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5086
  call void @llvm.dbg.value(metadata i8* %25, metadata !5061, metadata !DIExpression()), !dbg !5062
  br label %56, !dbg !5087

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5088
  store i24 %27, i24* %20, align 4, !dbg !5088
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5090
  %30 = load i24, i24* %29, align 4, !dbg !5091
  %31 = and i24 %30, -30721, !dbg !5091
  %32 = or i24 %31, 10240, !dbg !5091
  store i24 %32, i24* %29, align 4, !dbg !5091
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5092
  call void @llvm.dbg.value(metadata i8* %33, metadata !5061, metadata !DIExpression()), !dbg !5062
  br label %56, !dbg !5093

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5094
  %36 = load i24, i24* %35, align 4, !dbg !5095
  %37 = and i24 %36, -30721, !dbg !5095
  %38 = or i24 %37, 12288, !dbg !5095
  store i24 %38, i24* %35, align 4, !dbg !5095
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5096
  call void @llvm.dbg.value(metadata i8* %39, metadata !5061, metadata !DIExpression()), !dbg !5062
  br label %56, !dbg !5097

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5098
  %42 = load i24, i24* %41, align 4, !dbg !5099
  %43 = and i24 %42, -30721, !dbg !5099
  %44 = or i24 %43, 14336, !dbg !5099
  store i24 %44, i24* %41, align 4, !dbg !5099
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5100
  call void @llvm.dbg.value(metadata i8* %45, metadata !5061, metadata !DIExpression()), !dbg !5062
  br label %56, !dbg !5101

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5102
  %48 = load i24, i24* %47, align 4, !dbg !5103
  %49 = and i24 %48, -30723, !dbg !5103
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5104
  call void @llvm.dbg.value(metadata i8* %50, metadata !5061, metadata !DIExpression()), !dbg !5062
  %51 = or i24 %49, 16386, !dbg !5105
  store i24 %51, i24* %47, align 4, !dbg !5105
  br label %56, !dbg !5106

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5107
  %54 = load i24, i24* %53, align 4, !dbg !5108
  %55 = and i24 %54, -30721, !dbg !5108
  store i24 %55, i24* %53, align 4, !dbg !5108
  br label %56, !dbg !5109

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5061, metadata !DIExpression()), !dbg !5062
  ret i8* %57, !dbg !5110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5111 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5113, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i8* %1, metadata !5114, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i8 0, metadata !5115, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i8* %1, metadata !5114, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5118
  %3 = load i8, i8* %1, align 1, !dbg !5119
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5120
  store i8 %3, i8* %4, align 1, !dbg !5121
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5122

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5123

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5124
  %9 = load i24, i24* %8, align 4, !dbg !5124
  %10 = and i24 %9, -458753, !dbg !5124
  %11 = or i24 %10, %7, !dbg !5124
  call void @llvm.dbg.label(metadata !5116), !dbg !5125
  %12 = and i24 %9, 30720, !dbg !5126
  %13 = icmp eq i24 %12, 16384, !dbg !5126
  %14 = zext i1 %13 to i24, !dbg !5128
  %15 = or i24 %11, %14, !dbg !5128
  %16 = icmp eq i8 %3, 99, !dbg !5129
  br i1 %16, label %17, label %43, !dbg !5131

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5132
  %19 = icmp ne i24 %18, 0, !dbg !5132
  call void @llvm.dbg.value(metadata i1 %19, metadata !5115, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5118
  br label %43, !dbg !5134

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5135
  %22 = load i24, i24* %21, align 4, !dbg !5136
  %23 = and i24 %22, -458753, !dbg !5136
  %24 = or i24 %23, 262144, !dbg !5136
  call void @llvm.dbg.value(metadata i8 1, metadata !5115, metadata !DIExpression()), !dbg !5118
  br label %43, !dbg !5137

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5140
  %27 = load i24, i24* %26, align 4, !dbg !5141
  %28 = and i24 %27, -458753, !dbg !5141
  %29 = or i24 %28, 196608, !dbg !5141
  %30 = and i24 %27, 30720, !dbg !5142
  %31 = icmp eq i24 %30, 16384, !dbg !5142
  br label %43, !dbg !5144

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5145
  %34 = load i24, i24* %33, align 4, !dbg !5146
  %35 = and i24 %34, -458753, !dbg !5146
  %36 = or i24 %35, 196608, !dbg !5146
  %37 = and i24 %34, 30720, !dbg !5147
  %38 = icmp ne i24 %37, 0, !dbg !5147
  br label %43, !dbg !5149

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5150
  %41 = load i24, i24* %40, align 4, !dbg !5151
  %42 = or i24 %41, 1, !dbg !5151
  br label %43, !dbg !5152

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5153
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5154
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5155
  call void @llvm.dbg.value(metadata i8* %48, metadata !5114, metadata !DIExpression()), !dbg !5118
  call void @llvm.dbg.value(metadata i8 poison, metadata !5115, metadata !DIExpression()), !dbg !5118
  %49 = lshr i24 %44, 1, !dbg !5153
  %50 = and i24 %49, 1, !dbg !5153
  %51 = zext i24 %50 to i32, !dbg !5153
  %52 = or i32 %51, %47, !dbg !5153
  %53 = trunc i32 %52 to i24, !dbg !5153
  %54 = shl nuw nsw i24 %53, 1, !dbg !5153
  %55 = and i24 %44, -3, !dbg !5153
  %56 = or i24 %54, %55, !dbg !5153
  store i24 %56, i24* %46, align 4, !dbg !5153
  ret i8* %48, !dbg !5156
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5157 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5161, metadata !DIExpression()), !dbg !5164
  %2 = load i8*, i8** %0, align 4, !dbg !5165
  call void @llvm.dbg.value(metadata i8* %2, metadata !5162, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.value(metadata i32 0, metadata !5163, metadata !DIExpression()), !dbg !5164
  %3 = load i8, i8* %2, align 1, !dbg !5166
  %4 = zext i8 %3 to i32, !dbg !5167
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5168
  %6 = icmp eq i32 %5, 0, !dbg !5169
  br i1 %6, label %19, label %7, !dbg !5169

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5163, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.value(metadata i8* %10, metadata !5162, metadata !DIExpression()), !dbg !5164
  %11 = mul i32 %9, 10, !dbg !5170
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5172
  call void @llvm.dbg.value(metadata i8* %12, metadata !5162, metadata !DIExpression()), !dbg !5164
  %13 = add i32 %11, -48, !dbg !5173
  %14 = add i32 %13, %8, !dbg !5174
  call void @llvm.dbg.value(metadata i32 %14, metadata !5163, metadata !DIExpression()), !dbg !5164
  %15 = load i8, i8* %12, align 1, !dbg !5166
  %16 = zext i8 %15 to i32, !dbg !5167
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5168
  %18 = icmp eq i32 %17, 0, !dbg !5169
  br i1 %18, label %19, label %7, !dbg !5169, !llvm.loop !5175

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5164
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5164
  store i8* %20, i8** %0, align 4, !dbg !5177
  ret i32 %21, !dbg !5178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5181, metadata !DIExpression()), !dbg !5182
  %2 = add i32 %0, -48, !dbg !5183
  %3 = icmp ult i32 %2, 10, !dbg !5184
  %4 = zext i1 %3 to i32, !dbg !5184
  ret i32 %4, !dbg !5185
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5186 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5191, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 %1, metadata !5192, metadata !DIExpression()), !dbg !5193
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5194, !srcloc !5196
  ret void, !dbg !5197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5198 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5200, metadata !DIExpression()), !dbg !5208
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5209
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5209
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5201, metadata !DIExpression()), !dbg !5210
  call void @llvm.va_start(i8* nonnull %3), !dbg !5211
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5212
  %5 = load i32, i32* %4, align 4, !dbg !5212
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5212
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5212
  call void @llvm.va_end(i8* nonnull %3), !dbg !5213
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5214
  ret void, !dbg !5214
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5215 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5217, !srcloc !5218
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5219, !srcloc !5220
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5221, !srcloc !5222
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5223, !srcloc !5224
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5225, !srcloc !5226
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5227, !srcloc !5228
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5229, !srcloc !5230
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5231, !srcloc !5232
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5233, !srcloc !5234
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5235, !srcloc !5236
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5237, !srcloc !5238
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5239, !srcloc !5240
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5241, !srcloc !5242
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5243, !srcloc !5244
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5245, !srcloc !5246
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5247, !srcloc !5248
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5249, !srcloc !5250
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5251, !srcloc !5252
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5253, !srcloc !5254
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5255, !srcloc !5256
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5257, !srcloc !5258
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5259, !srcloc !5260
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5261, !srcloc !5262
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5263, !srcloc !5264
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5265, !srcloc !5266
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5267, !srcloc !5268
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5269, !srcloc !5270
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5271, !srcloc !5272
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #23, !dbg !5273, !srcloc !5274
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5275, !srcloc !5276
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5277, !srcloc !5278
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5279, !srcloc !5280
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !5281, !srcloc !5282
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5283, !srcloc !5284
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #23, !dbg !5285, !srcloc !5286
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #23, !dbg !5287, !srcloc !5288
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #23, !dbg !5289, !srcloc !5290
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5291, !srcloc !5292
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #23, !dbg !5293, !srcloc !5294
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #23, !dbg !5295, !srcloc !5296
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #23, !dbg !5297, !srcloc !5298
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5299, !srcloc !5300
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5301, !srcloc !5302
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5303, !srcloc !5304
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5305, !srcloc !5306
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5307, !srcloc !5308
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5309, !srcloc !5310
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5311, !srcloc !5312
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5313, !srcloc !5314
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5315, !srcloc !5316
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5317, !srcloc !5318
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5319, !srcloc !5320
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5321, !srcloc !5322
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5323, !srcloc !5324
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5325, !srcloc !5326
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5327, !srcloc !5328
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5329, !srcloc !5330
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5331, !srcloc !5332
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5333, !srcloc !5334
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5335, !srcloc !5336
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5337, !srcloc !5338
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5339, !srcloc !5340
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5341, !srcloc !5342
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5343, !srcloc !5344
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5345, !srcloc !5346
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5347, !srcloc !5348
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5349, !srcloc !5350
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5351, !srcloc !5352
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5353, !srcloc !5354
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5355, !srcloc !5356
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5357, !srcloc !5358
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5359, !srcloc !5360
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5361, !srcloc !5362
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5363, !srcloc !5364
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5365, !srcloc !5366
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5367, !srcloc !5368
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5369, !srcloc !5370
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5371, !srcloc !5372
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5373, !srcloc !5374
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5375, !srcloc !5376
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5377, !srcloc !5378
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5379, !srcloc !5380
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5381, !srcloc !5382
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5383, !srcloc !5384
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5385, !srcloc !5386
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5387, !srcloc !5388
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5389, !srcloc !5390
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5391, !srcloc !5392
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5393, !srcloc !5394
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #23, !dbg !5395, !srcloc !5396
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #23, !dbg !5397, !srcloc !5398
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5399, !srcloc !5400
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5401, !srcloc !5402
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5403, !srcloc !5404
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5405, !srcloc !5406
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #23, !dbg !5407, !srcloc !5408
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5409, !srcloc !5410
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5411, !srcloc !5412
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5413, !srcloc !5414
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5415, !srcloc !5416
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5417, !srcloc !5418
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,4096\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE\0A\09.equ\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,1\0A\09.type\09CONFIG_LOG_TEST_CLEAR_MESSAGE_SPACE,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST\0A\09.equ\09CONFIG_ZTEST,1\0A\09.type\09CONFIG_ZTEST,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_NEW_API\0A\09.equ\09CONFIG_ZTEST_NEW_API,1\0A\09.type\09CONFIG_ZTEST_NEW_API,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_STACK_SIZE\0A\09.equ\09CONFIG_ZTEST_STACK_SIZE,1024\0A\09.type\09CONFIG_ZTEST_STACK_SIZE,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_TEST_DELAY_MS\0A\09.equ\09CONFIG_ZTEST_TEST_DELAY_MS,0\0A\09.type\09CONFIG_ZTEST_TEST_DELAY_MS,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_CPU_HOLD_TIME_MS\0A\09.equ\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,3000\0A\09.type\09CONFIG_ZTEST_CPU_HOLD_TIME_MS,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ZTEST_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ZTEST_ASSERT_VERBOSE,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_THREAD_PRIORITY\0A\09.equ\09CONFIG_ZTEST_THREAD_PRIORITY,-1\0A\09.type\09CONFIG_ZTEST_THREAD_PRIORITY,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERIFY_RUN_ALL\0A\09.equ\09CONFIG_ZTEST_VERIFY_RUN_ALL,1\0A\09.type\09CONFIG_ZTEST_VERIFY_RUN_ALL,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_OUTPUT\0A\09.equ\09CONFIG_ZTEST_VERBOSE_OUTPUT,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_OUTPUT,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_VERBOSE_SUMMARY\0A\09.equ\09CONFIG_ZTEST_VERBOSE_SUMMARY,1\0A\09.type\09CONFIG_ZTEST_VERBOSE_SUMMARY,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_ZTEST_FAIL_ON_ASSUME\0A\09.equ\09CONFIG_ZTEST_FAIL_ON_ASSUME,1\0A\09.type\09CONFIG_ZTEST_FAIL_ON_ASSUME,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST\0A\09.equ\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,1\0A\09.type\09CONFIG_TEST_LOGGING_FLUSH_AFTER_TEST,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_SYMBOLS\0A\09.equ\09CONFIG_OUTPUT_SYMBOLS,1\0A\09.type\09CONFIG_OUTPUT_SYMBOLS,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !5877, !srcloc !5878
  ret void, !dbg !5879
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5882, metadata !DIExpression()), !dbg !5884
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !5885, !srcloc !5894
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %3, metadata !5891, metadata !DIExpression()) #23, !dbg !5895
  call void @llvm.dbg.value(metadata i32 undef, metadata !5892, metadata !DIExpression()) #23, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %3, metadata !5883, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata i32 %3, metadata !5896, metadata !DIExpression()) #23, !dbg !5901
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !5903, !srcloc !5904
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !5905
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !5906
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #24, !dbg !5907
  ret i32 0, !dbg !5908
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #14 !dbg !5909 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !5914, metadata !DIExpression()), !dbg !5916
  %2 = bitcast i32* %1 to i8*, !dbg !5917
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5917
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5915, metadata !DIExpression()), !dbg !5918
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5919
  %4 = or i32 %3, 268435456, !dbg !5919
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5919
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !5920
  %6 = and i32 %5, 268435456, !dbg !5920
  store volatile i32 %6, i32* %1, align 4, !dbg !5921
  %7 = load volatile i32, i32* %1, align 4, !dbg !5922
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5923
  ret void, !dbg !5923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #15 !dbg !5924 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !5927, metadata !DIExpression()), !dbg !5928
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5929
  %2 = and i32 %1, -6145, !dbg !5929
  %3 = or i32 %2, 2048, !dbg !5929
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !5929
  ret void, !dbg !5930
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !5931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5933, metadata !DIExpression()), !dbg !5934
  ret i32 0, !dbg !5935
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5936 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5939, metadata !DIExpression()), !dbg !5947
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5948
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5948
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5940, metadata !DIExpression()), !dbg !5949
  call void @llvm.va_start(i8* nonnull %3), !dbg !5950
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5951
  %5 = load i32, i32* %4, align 4, !dbg !5951
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5951
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5951
  call void @llvm.va_end(i8* nonnull %3), !dbg !5952
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5953
  ret void, !dbg !5953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5954 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5959, metadata !DIExpression()), !dbg !5960
  call void @llvm.dbg.value(metadata i8* %0, metadata !5958, metadata !DIExpression()), !dbg !5960
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !5961
  ret void, !dbg !5962
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !5963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5967, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i8* %1, metadata !5968, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i32 %2, metadata !5969, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i8* %1, metadata !5970, metadata !DIExpression()), !dbg !5971
  %4 = icmp eq i32 %2, 0, !dbg !5972
  br i1 %4, label %14, label %5, !dbg !5973

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !5971
  %7 = zext i8 %6 to i32
  br label %8, !dbg !5973

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !5970, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i32 %10, metadata !5969, metadata !DIExpression()), !dbg !5971
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i32 noundef %7) #25, !dbg !5974
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !5976
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !5977
  call void @llvm.dbg.value(metadata i32 %11, metadata !5969, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.value(metadata i8* %12, metadata !5970, metadata !DIExpression()), !dbg !5971
  br i1 %13, label %14, label %8, !dbg !5977, !llvm.loop !5978

14:                                               ; preds = %8, %3
  ret void, !dbg !5980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #4 !dbg !5981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5986, metadata !DIExpression()), !dbg !5987
  %2 = add i32 %0, -1, !dbg !5988
  %3 = icmp ult i32 %2, 4, !dbg !5988
  %4 = shl i32 %2, 3, !dbg !5988
  %5 = lshr i32 1145657157, %4, !dbg !5988
  %6 = trunc i32 %5 to i8, !dbg !5988
  %7 = select i1 %3, i8 %6, i8 63, !dbg !5988
  ret i8 %7, !dbg !5989
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !5990 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5994, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i32 %1, metadata !5995, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.value(metadata i32 0, metadata !5996, metadata !DIExpression()), !dbg !6006
  br label %4, !dbg !6007

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.23, i32 0, i32 0)) #25, !dbg !6008
  call void @llvm.dbg.value(metadata i32 0, metadata !5998, metadata !DIExpression()), !dbg !6009
  br label %16, !dbg !6010

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5996, metadata !DIExpression()), !dbg !6006
  %6 = icmp ult i32 %5, %1, !dbg !6011
  br i1 %6, label %7, label %11, !dbg !6015

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6016
  %9 = load i8, i8* %8, align 1, !dbg !6016
  %10 = zext i8 %9 to i32, !dbg !6018
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.24, i32 0, i32 0), i32 noundef %10) #25, !dbg !6019
  br label %12, !dbg !6020

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.25, i32 0, i32 0)) #25, !dbg !6021
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6023
  call void @llvm.dbg.value(metadata i32 %13, metadata !5996, metadata !DIExpression()), !dbg !6006
  %14 = icmp eq i32 %13, 8, !dbg !6024
  br i1 %14, label %3, label %4, !dbg !6007, !llvm.loop !6025

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.26, i32 0, i32 0)) #25, !dbg !6027
  ret void, !dbg !6028

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !5998, metadata !DIExpression()), !dbg !6009
  %18 = icmp ult i32 %17, %1, !dbg !6029
  br i1 %18, label %19, label %26, !dbg !6030

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6031
  %21 = load i8, i8* %20, align 1, !dbg !6031
  call void @llvm.dbg.value(metadata i8 %21, metadata !6000, metadata !DIExpression()), !dbg !6032
  %22 = zext i8 %21 to i32, !dbg !6033
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6034
  %24 = icmp eq i32 %23, 0, !dbg !6035
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6034
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.27, i32 0, i32 0), i32 noundef %25) #25, !dbg !6036
  br label %27, !dbg !6037

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.28, i32 0, i32 0)) #25, !dbg !6038
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6040
  call void @llvm.dbg.value(metadata i32 %28, metadata !5998, metadata !DIExpression()), !dbg !6009
  %29 = icmp eq i32 %28, 8, !dbg !6041
  br i1 %29, label %15, label %16, !dbg !6010, !llvm.loop !6042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #4 !dbg !6044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6046, metadata !DIExpression()), !dbg !6047
  %2 = add i32 %0, -32, !dbg !6048
  %3 = icmp ult i32 %2, 95, !dbg !6048
  %4 = zext i1 %3 to i32, !dbg !6048
  ret i32 %4, !dbg !6049
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6099, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6100, metadata !DIExpression()), !dbg !6101
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6102
  br i1 %3, label %5, label %4, !dbg !6104

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6105
  br label %5, !dbg !6107

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6108
  ret void, !dbg !6109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6110 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6114, metadata !DIExpression()), !dbg !6115
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6116
  %3 = load i32, i32* %2, align 4, !dbg !6116
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6116
  %5 = load i32, i32* %4, align 4, !dbg !6116
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6116
  %7 = load i32, i32* %6, align 4, !dbg !6116
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6116
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6121
  %9 = load i32, i32* %8, align 4, !dbg !6121
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6121
  %11 = load i32, i32* %10, align 4, !dbg !6121
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6121
  %13 = load i32, i32* %12, align 4, !dbg !6121
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.30, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6121
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6126
  %15 = load i32, i32* %14, align 4, !dbg !6126
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.31, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6126
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6131
  %17 = load i32, i32* %16, align 4, !dbg !6131
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.32, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6131
  ret void, !dbg !6136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6137 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6154, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6155, metadata !DIExpression()), !dbg !6157
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6158
  %4 = load i32, i32* %3, align 4, !dbg !6158
  call void @llvm.dbg.value(metadata i32 %4, metadata !6156, metadata !DIExpression()), !dbg !6157
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6159
  ret void, !dbg !6160
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6161 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6163, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.value(metadata i8* %0, metadata !6164, metadata !DIExpression()), !dbg !6166
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6167
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6167
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6165, metadata !DIExpression()), !dbg !6168
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6168
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6169
  %5 = bitcast i8* %4 to i32*, !dbg !6169
  %6 = load i32, i32* %5, align 4, !dbg !6169
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6170
  store i32 %6, i32* %7, align 4, !dbg !6171
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6172
  unreachable, !dbg !6173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6174 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6177, metadata !DIExpression()), !dbg !6178
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6179
  ret void, !dbg !6180
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6181 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6185, metadata !DIExpression()), !dbg !6186
  %2 = icmp sgt i32 %0, -1, !dbg !6187
  br i1 %2, label %3, label %8, !dbg !6189

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6190, !srcloc !6192
  %4 = and i32 %0, 31, !dbg !6193
  %5 = shl nuw i32 1, %4, !dbg !6194
  %6 = lshr i32 %0, 5, !dbg !6195
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6196
  store volatile i32 %5, i32* %7, align 4, !dbg !6197
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6198, !srcloc !6199
  br label %8, !dbg !6200

8:                                                ; preds = %3, %1
  ret void, !dbg !6201
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6204, metadata !DIExpression()), !dbg !6205
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6206
  ret void, !dbg !6207
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6210, metadata !DIExpression()), !dbg !6211
  %2 = icmp sgt i32 %0, -1, !dbg !6212
  br i1 %2, label %3, label %8, !dbg !6214

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6215
  %5 = shl nuw i32 1, %4, !dbg !6217
  %6 = lshr i32 %0, 5, !dbg !6218
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6219
  store volatile i32 %5, i32* %7, align 4, !dbg !6220
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6221, !srcloc !6225
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6226, !srcloc !6229
  br label %8, !dbg !6230

8:                                                ; preds = %3, %1
  ret void, !dbg !6231
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6232 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6236, metadata !DIExpression()), !dbg !6237
  %2 = lshr i32 %0, 5, !dbg !6238
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6239
  %4 = load volatile i32, i32* %3, align 4, !dbg !6239
  %5 = and i32 %0, 31, !dbg !6240
  %6 = shl nuw i32 1, %5, !dbg !6240
  %7 = and i32 %4, %6, !dbg !6241
  ret i32 %7, !dbg !6242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6247, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.value(metadata i32 %1, metadata !6248, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.value(metadata i32 %2, metadata !6249, metadata !DIExpression()), !dbg !6250
  %4 = add i32 %1, 1, !dbg !6251
  call void @llvm.dbg.value(metadata i32 %4, metadata !6248, metadata !DIExpression()), !dbg !6250
  %5 = icmp ult i32 %4, 16, !dbg !6254
  br i1 %5, label %7, label %6, !dbg !6257

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.36, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.35, i32 0, i32 0), i32 noundef 94) #25, !dbg !6258
  unreachable, !dbg !6258

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6260
  ret void, !dbg !6261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6262 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6266, metadata !DIExpression()), !dbg !6268
  call void @llvm.dbg.value(metadata i32 %1, metadata !6267, metadata !DIExpression()), !dbg !6268
  %3 = trunc i32 %1 to i8, !dbg !6269
  %4 = shl i8 %3, 4, !dbg !6269
  %5 = and i32 %0, 15, !dbg !6271
  %6 = add nsw i32 %5, -4, !dbg !6271
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6271
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6271
  %9 = icmp slt i32 %0, 0, !dbg !6271
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6271
  store volatile i8 %4, i8* %10, align 1, !dbg !6269
  ret void, !dbg !6272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6273 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6275, metadata !DIExpression()), !dbg !6276
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6277
  ret void, !dbg !6278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6279 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6281
  tail call void @z_arm_int_exit() #25, !dbg !6282
  ret void, !dbg !6283
}

; Function Attrs: optsize
declare !dbg !6284 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6285 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6287 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6289
  tail call void @z_bss_zero() #25, !dbg !6290
  tail call void @z_data_copy() #25, !dbg !6291
  tail call void @z_arm_interrupt_init() #25, !dbg !6292
  tail call void @z_cstart() #27, !dbg !6293
  unreachable, !dbg !6293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6294 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6295
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6296, !srcloc !6299
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6300, !srcloc !6303
  ret void, !dbg !6304
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6305 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6308, metadata !DIExpression()), !dbg !6309
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6310
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6311
  store i32 %0, i32* %3, align 4, !dbg !6312
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6313
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6314
  store i32 %4, i32* %5, align 4, !dbg !6315
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6316
  %7 = or i32 %6, 268435456, !dbg !6316
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6316
  call void @llvm.dbg.value(metadata i32 0, metadata !6317, metadata !DIExpression()) #23, !dbg !6320
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6322, !srcloc !6323
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6324
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6325
  %10 = load i32, i32* %9, align 4, !dbg !6325
  ret i32 %10, !dbg !6326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6327 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6440, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6441, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i8* %2, metadata !6442, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6443, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i8* %4, metadata !6444, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i8* %5, metadata !6445, metadata !DIExpression()), !dbg !6448
  call void @llvm.dbg.value(metadata i8* %6, metadata !6446, metadata !DIExpression()), !dbg !6448
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6449
  call void @llvm.dbg.value(metadata i8* %8, metadata !6447, metadata !DIExpression()), !dbg !6448
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6450
  %10 = bitcast i8* %9 to i32*, !dbg !6450
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6451
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6452
  %12 = bitcast i8* %8 to i32*, !dbg !6453
  store i32 %11, i32* %12, align 4, !dbg !6454
  %13 = ptrtoint i8* %4 to i32, !dbg !6455
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6456
  %15 = bitcast i8* %14 to i32*, !dbg !6456
  store i32 %13, i32* %15, align 4, !dbg !6457
  %16 = ptrtoint i8* %5 to i32, !dbg !6458
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6459
  %18 = bitcast i8* %17 to i32*, !dbg !6459
  store i32 %16, i32* %18, align 4, !dbg !6460
  %19 = ptrtoint i8* %6 to i32, !dbg !6461
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6462
  %21 = bitcast i8* %20 to i32*, !dbg !6462
  store i32 %19, i32* %21, align 4, !dbg !6463
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6464
  %23 = bitcast i8* %22 to i32*, !dbg !6464
  store i32 16777216, i32* %23, align 4, !dbg !6465
  %24 = ptrtoint i8* %8 to i32, !dbg !6466
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6467
  store i32 %24, i32* %25, align 8, !dbg !6468
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6469
  store i32 0, i32* %26, align 4, !dbg !6470
  ret void, !dbg !6471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6477, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %1, metadata !6478, metadata !DIExpression()), !dbg !6483
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6484
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6479, metadata !DIExpression()), !dbg !6483
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6485
  br i1 %4, label %19, label %5, !dbg !6487

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6482, metadata !DIExpression()), !dbg !6483
  %6 = icmp eq i32 %0, -22, !dbg !6488
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6488
  %8 = load i32, i32* %7, align 4, !dbg !6488
  br i1 %6, label %16, label %9, !dbg !6490

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6488
  %11 = icmp ule i32 %10, %0, !dbg !6488
  %12 = icmp ugt i32 %8, %0, !dbg !6488
  %13 = and i1 %12, %11, !dbg !6488
  %14 = icmp ugt i32 %8, %1, !dbg !6488
  %15 = and i1 %14, %13, !dbg !6488
  br i1 %15, label %18, label %19, !dbg !6488

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6488
  br i1 %17, label %18, label %19, !dbg !6490

18:                                               ; preds = %9, %16
  br label %19, !dbg !6491

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6483
  ret i32 %20, !dbg !6493
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6494 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6498, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata i8* %1, metadata !6499, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6500, metadata !DIExpression()), !dbg !6501
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6502
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6503
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6504, !srcloc !6505
  unreachable, !dbg !6506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6507 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6525, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata i32 %1, metadata !6526, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata i32 %2, metadata !6527, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6528, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata i32 0, metadata !6529, metadata !DIExpression()), !dbg !6535
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6536
  call void @llvm.dbg.value(metadata i32 %8, metadata !6530, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6535
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6537
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6537
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6538
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6538
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6534, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i32 0, metadata !6540, metadata !DIExpression()) #23, !dbg !6543
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6545, !srcloc !6546
  call void @llvm.dbg.value(metadata i8* %6, metadata !6532, metadata !DIExpression(DW_OP_deref)), !dbg !6535
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6547
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6533, metadata !DIExpression()), !dbg !6535
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6548
  br i1 %11, label %12, label %13, !dbg !6551

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.40, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6552
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.42, i32 0, i32 0)) #25, !dbg !6552
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6552
  unreachable, !dbg !6552

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6554
  call void @llvm.dbg.value(metadata i32 %14, metadata !6530, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.value(metadata i8* %5, metadata !6531, metadata !DIExpression(DW_OP_deref)), !dbg !6535
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6555
  call void @llvm.dbg.value(metadata i32 %15, metadata !6529, metadata !DIExpression()), !dbg !6535
  %16 = load i8, i8* %5, align 1, !dbg !6556, !range !6558
  call void @llvm.dbg.value(metadata i8 %16, metadata !6531, metadata !DIExpression()), !dbg !6535
  %17 = icmp eq i8 %16, 0, !dbg !6556
  br i1 %17, label %18, label %35, !dbg !6559

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6560
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6561
  %21 = load i8, i8* %6, align 1, !dbg !6562, !range !6558
  call void @llvm.dbg.value(metadata i8 %21, metadata !6532, metadata !DIExpression()), !dbg !6535
  %22 = icmp eq i8 %21, 0, !dbg !6562
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6564
  %24 = load i32, i32* %23, align 4, !dbg !6564
  br i1 %22, label %30, label %25, !dbg !6565

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6566
  %27 = icmp eq i32 %26, 0, !dbg !6569
  br i1 %27, label %28, label %34, !dbg !6570

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6571
  br label %32, !dbg !6573

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6574
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6564
  br label %34, !dbg !6576

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6576
  br label %35, !dbg !6577

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6577
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6577
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6577
  ret void, !dbg !6577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6583, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i32 %1, metadata !6584, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i32 %2, metadata !6585, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i8* %3, metadata !6586, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata i8 0, metadata !6587, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6588, metadata !DIExpression()), !dbg !6589
  store i8 0, i8* %3, align 1, !dbg !6590
  %5 = icmp ugt i32 %2, -16777217, !dbg !6591
  br i1 %5, label %6, label %17, !dbg !6593

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6594
  %8 = icmp eq i32 %7, 8, !dbg !6594
  br i1 %8, label %9, label %10, !dbg !6594

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.55, i32 0, i32 0), i32 noundef 69) #25, !dbg !6596
  br label %17, !dbg !6602

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6603
  %12 = icmp eq i32 %11, 0, !dbg !6603
  br i1 %12, label %13, label %14, !dbg !6604

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6588, metadata !DIExpression()), !dbg !6589
  store i8 1, i8* %3, align 1, !dbg !6607
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6589
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6588, metadata !DIExpression()), !dbg !6589
  br label %17, !dbg !6610

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6589
  ret %struct.__esf* %18, !dbg !6611
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6612 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6616, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32 %1, metadata !6617, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i8* %2, metadata !6618, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.value(metadata i32 0, metadata !6619, metadata !DIExpression()), !dbg !6620
  store i8 0, i8* %2, align 1, !dbg !6621
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6622

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6623
  call void @llvm.dbg.value(metadata i32 %5, metadata !6619, metadata !DIExpression()), !dbg !6620
  br label %12, !dbg !6625

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6626
  call void @llvm.dbg.value(metadata i32 %7, metadata !6619, metadata !DIExpression()), !dbg !6620
  br label %12, !dbg !6627

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6628
  call void @llvm.dbg.value(metadata i32 0, metadata !6619, metadata !DIExpression()), !dbg !6620
  br label %12, !dbg !6629

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6630
  call void @llvm.dbg.value(metadata i32 0, metadata !6619, metadata !DIExpression()), !dbg !6620
  br label %12, !dbg !6631

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6632
  br label %12, !dbg !6633

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6634
  br label %12, !dbg !6635

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6620
  call void @llvm.dbg.value(metadata i32 %13, metadata !6619, metadata !DIExpression()), !dbg !6620
  ret i32 %13, !dbg !6636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6637 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6641, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %1, metadata !6642, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i32 0, metadata !6643, metadata !DIExpression()), !dbg !6644
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !6645
  store i8 0, i8* %1, align 1, !dbg !6650
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6651
  %4 = and i32 %3, 2, !dbg !6653
  %5 = icmp eq i32 %4, 0, !dbg !6654
  br i1 %5, label %7, label %6, !dbg !6655

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.48, i32 0, i32 0), i32 noundef 69) #25, !dbg !6656
  br label %38, !dbg !6662

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6663
  %9 = icmp sgt i32 %8, -1, !dbg !6665
  br i1 %9, label %11, label %10, !dbg !6666

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !6667
  br label %38, !dbg !6673

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6674
  %13 = and i32 %12, 1073741824, !dbg !6676
  %14 = icmp eq i32 %13, 0, !dbg !6677
  br i1 %14, label %37, label %15, !dbg !6678

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6679
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6685
  br i1 %16, label %17, label %21, !dbg !6687

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6688
  %19 = load i32, i32* %18, align 4, !dbg !6688
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.51, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6688
  %20 = load i32, i32* %18, align 4, !dbg !6694
  call void @llvm.dbg.value(metadata i32 %20, metadata !6643, metadata !DIExpression()), !dbg !6644
  br label %38, !dbg !6695

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6696
  %23 = and i32 %22, 255, !dbg !6698
  %24 = icmp eq i32 %23, 0, !dbg !6699
  br i1 %24, label %27, label %25, !dbg !6700

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %26, metadata !6643, metadata !DIExpression()), !dbg !6644
  br label %38, !dbg !6703

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6704
  %29 = and i32 %28, 65280, !dbg !6706
  %30 = icmp eq i32 %29, 0, !dbg !6707
  br i1 %30, label %32, label %31, !dbg !6708

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6709
  call void @llvm.dbg.value(metadata i32 0, metadata !6643, metadata !DIExpression()), !dbg !6644
  br label %38, !dbg !6711

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6712
  %34 = icmp ult i32 %33, 65536, !dbg !6714
  br i1 %34, label %36, label %35, !dbg !6715

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6716
  call void @llvm.dbg.value(metadata i32 0, metadata !6643, metadata !DIExpression()), !dbg !6644
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6718
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.53, i32 0, i32 0)) #25, !dbg !6718
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 755) #25, !dbg !6718
  unreachable, !dbg !6718

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.52, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.54, i32 0, i32 0)) #25, !dbg !6723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 760) #25, !dbg !6723
  unreachable, !dbg !6723

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6644
  call void @llvm.dbg.value(metadata i32 %39, metadata !6643, metadata !DIExpression()), !dbg !6644
  ret i32 %39, !dbg !6728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6729 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6731, metadata !DIExpression()), !dbg !6744
  call void @llvm.dbg.value(metadata i32 %1, metadata !6732, metadata !DIExpression()), !dbg !6744
  call void @llvm.dbg.value(metadata i8* %2, metadata !6733, metadata !DIExpression()), !dbg !6744
  call void @llvm.dbg.value(metadata i32 0, metadata !6734, metadata !DIExpression()), !dbg !6744
  call void @llvm.dbg.value(metadata i32 -22, metadata !6735, metadata !DIExpression()), !dbg !6744
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.46, i32 0, i32 0), i32 noundef 69) #25, !dbg !6745
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6750
  %5 = and i32 %4, 16, !dbg !6752
  %6 = icmp eq i32 %5, 0, !dbg !6753
  br i1 %6, label %8, label %7, !dbg !6754

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6755
  br label %8, !dbg !6761

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6762
  %10 = and i32 %9, 8, !dbg !6764
  %11 = icmp eq i32 %10, 0, !dbg !6765
  br i1 %11, label %13, label %12, !dbg !6766

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6767
  br label %13, !dbg !6773

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6774
  %15 = and i32 %14, 2, !dbg !6775
  %16 = icmp eq i32 %15, 0, !dbg !6776
  br i1 %16, label %27, label %17, !dbg !6777

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i32 noundef 69) #25, !dbg !6778
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6783
  call void @llvm.dbg.value(metadata i32 %18, metadata !6736, metadata !DIExpression()), !dbg !6784
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6785
  %20 = and i32 %19, 128, !dbg !6787
  %21 = icmp eq i32 %20, 0, !dbg !6788
  br i1 %21, label %27, label %22, !dbg !6789

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6735, metadata !DIExpression()), !dbg !6744
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !6790
  %23 = icmp eq i32 %1, 0, !dbg !6796
  br i1 %23, label %27, label %24, !dbg !6798

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6799
  %26 = and i32 %25, -129, !dbg !6799
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6799
  br label %27, !dbg !6801

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6744
  call void @llvm.dbg.value(metadata i32 %28, metadata !6735, metadata !DIExpression()), !dbg !6744
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6802
  %30 = and i32 %29, 1, !dbg !6804
  %31 = icmp eq i32 %30, 0, !dbg !6805
  br i1 %31, label %33, label %32, !dbg !6806

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !6807
  br label %33, !dbg !6813

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6814
  %35 = and i32 %34, 16, !dbg !6815
  %36 = icmp eq i32 %35, 0, !dbg !6815
  br i1 %36, label %37, label %41, !dbg !6816

37:                                               ; preds = %33
  %38 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6817
  %39 = and i32 %38, 2, !dbg !6818
  %40 = icmp eq i32 %39, 0, !dbg !6818
  br i1 %40, label %55, label %41, !dbg !6819

41:                                               ; preds = %37, %33
  %42 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6820
  %43 = and i32 %42, 2048, !dbg !6821
  %44 = icmp eq i32 %43, 0, !dbg !6821
  br i1 %44, label %55, label %45, !dbg !6822

45:                                               ; preds = %41
  %46 = ptrtoint %struct.__esf* %0 to i32, !dbg !6823
  %47 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %46) #25, !dbg !6824
  call void @llvm.dbg.value(metadata i32 %47, metadata !6739, metadata !DIExpression()), !dbg !6825
  %48 = icmp eq i32 %47, 0, !dbg !6826
  br i1 %48, label %50, label %49, !dbg !6828

49:                                               ; preds = %45
  call void @llvm.dbg.value(metadata i32 %47, metadata !6829, metadata !DIExpression()) #23, !dbg !6832
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %47) #23, !dbg !6835, !srcloc !6836
  call void @llvm.dbg.value(metadata i32 2, metadata !6734, metadata !DIExpression()), !dbg !6744
  br label %55, !dbg !6837

50:                                               ; preds = %45
  %51 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6838
  %52 = and i32 %51, 16, !dbg !6838
  %53 = icmp eq i32 %52, 0, !dbg !6838
  br i1 %53, label %55, label %54, !dbg !6842

54:                                               ; preds = %50
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6843
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #25, !dbg !6843
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.41, i32 0, i32 0), i32 noundef 343) #25, !dbg !6843
  unreachable, !dbg !6843

55:                                               ; preds = %49, %50, %41, %37
  %56 = phi i32 [ 0, %41 ], [ 0, %37 ], [ 2, %49 ], [ 0, %50 ], !dbg !6744
  call void @llvm.dbg.value(metadata i32 %56, metadata !6734, metadata !DIExpression()), !dbg !6744
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6845
  %58 = or i32 %57, 255, !dbg !6845
  store volatile i32 %58, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6845
  store i8 0, i8* %2, align 1, !dbg !6846
  ret i32 %56, !dbg !6847
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6848 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6852, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 %0, metadata !6853, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i8* %1, metadata !6854, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.value(metadata i32 0, metadata !6855, metadata !DIExpression()), !dbg !6859
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i32 0, i32 0), i32 noundef 69) #25, !dbg !6860
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6865
  %4 = and i32 %3, 4096, !dbg !6867
  %5 = icmp eq i32 %4, 0, !dbg !6867
  br i1 %5, label %7, label %6, !dbg !6868

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22.45, i32 0, i32 0), i32 noundef 69) #25, !dbg !6869
  br label %7, !dbg !6875

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6876
  %9 = and i32 %8, 2048, !dbg !6878
  %10 = icmp eq i32 %9, 0, !dbg !6878
  br i1 %10, label %12, label %11, !dbg !6879

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6880
  br label %12, !dbg !6886

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6887
  %14 = and i32 %13, 512, !dbg !6888
  %15 = icmp eq i32 %14, 0, !dbg !6888
  br i1 %15, label %26, label %16, !dbg !6889

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !6890
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6895
  call void @llvm.dbg.value(metadata i32 %17, metadata !6856, metadata !DIExpression()), !dbg !6896
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6897
  %19 = and i32 %18, 32768, !dbg !6899
  %20 = icmp eq i32 %19, 0, !dbg !6900
  br i1 %20, label %26, label %21, !dbg !6901

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6902
  %22 = icmp eq i32 %0, 0, !dbg !6908
  br i1 %22, label %26, label %23, !dbg !6910

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6911
  %25 = and i32 %24, -32769, !dbg !6911
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6911
  br label %26, !dbg !6913

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6914
  %28 = and i32 %27, 1024, !dbg !6916
  %29 = icmp eq i32 %28, 0, !dbg !6916
  br i1 %29, label %31, label %30, !dbg !6917

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i32 0, i32 0), i32 noundef 69) #25, !dbg !6918
  br label %31, !dbg !6924

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6925
  %33 = and i32 %32, 256, !dbg !6927
  %34 = icmp eq i32 %33, 0, !dbg !6928
  br i1 %34, label %36, label %35, !dbg !6929

35:                                               ; preds = %31
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !6930
  br label %36, !dbg !6936

36:                                               ; preds = %35, %31
  %37 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6937
  %38 = or i32 %37, 65280, !dbg !6937
  store volatile i32 %38, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6937
  store i8 0, i8* %1, align 1, !dbg !6938
  ret void, !dbg !6939
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !6940 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6946, metadata !DIExpression()), !dbg !6948
  call void @llvm.dbg.value(metadata i32 0, metadata !6947, metadata !DIExpression()), !dbg !6948
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), i32 noundef 69) #25, !dbg !6949
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6954
  %2 = and i32 %1, 33554432, !dbg !6956
  %3 = icmp eq i32 %2, 0, !dbg !6957
  br i1 %3, label %5, label %4, !dbg !6958

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !6959
  br label %5, !dbg !6965

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6966
  %7 = and i32 %6, 16777216, !dbg !6968
  %8 = icmp eq i32 %7, 0, !dbg !6969
  br i1 %8, label %10, label %9, !dbg !6970

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29.43, i32 0, i32 0), i32 noundef 69) #25, !dbg !6971
  br label %10, !dbg !6977

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6978
  %12 = and i32 %11, 524288, !dbg !6980
  %13 = icmp eq i32 %12, 0, !dbg !6981
  br i1 %13, label %15, label %14, !dbg !6982

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !6983
  br label %15, !dbg !6989

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6990
  %17 = and i32 %16, 262144, !dbg !6992
  %18 = icmp eq i32 %17, 0, !dbg !6993
  br i1 %18, label %20, label %19, !dbg !6994

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !6995
  br label %20, !dbg !7001

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7002
  %22 = and i32 %21, 131072, !dbg !7004
  %23 = icmp eq i32 %22, 0, !dbg !7005
  br i1 %23, label %25, label %24, !dbg !7006

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69) #25, !dbg !7007
  br label %25, !dbg !7013

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7014
  %27 = and i32 %26, 65536, !dbg !7016
  %28 = icmp eq i32 %27, 0, !dbg !7017
  br i1 %28, label %30, label %29, !dbg !7018

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33.44, i32 0, i32 0), i32 noundef 69) #25, !dbg !7019
  br label %30, !dbg !7025

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7026
  %32 = or i32 %31, -65536, !dbg !7026
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7026
  ret void, !dbg !7027
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7028 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7032, metadata !DIExpression()), !dbg !7034
  call void @llvm.dbg.value(metadata i8* %0, metadata !7033, metadata !DIExpression()), !dbg !7034
  store i8 0, i8* %0, align 1, !dbg !7035
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7036
  ret void, !dbg !7041
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7042 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7046, metadata !DIExpression()), !dbg !7048
  call void @llvm.dbg.value(metadata i32 %0, metadata !7047, metadata !DIExpression()), !dbg !7048
  %2 = icmp slt i32 %0, 16, !dbg !7049
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i32 0, i32 0), !dbg !7049
  %4 = add nsw i32 %0, -16, !dbg !7049
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7049
  ret void, !dbg !7054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7055 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7059, metadata !DIExpression()), !dbg !7062
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7063
  %3 = load i32, i32* %2, align 4, !dbg !7063
  %4 = inttoptr i32 %3 to i16*, !dbg !7064
  call void @llvm.dbg.value(metadata i16* %4, metadata !7060, metadata !DIExpression()), !dbg !7062
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7065
  %6 = or i32 %5, 256, !dbg !7065
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7065
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7066, !srcloc !7069
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7070, !srcloc !7073
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7074
  %8 = load i16, i16* %7, align 2, !dbg !7075
  call void @llvm.dbg.value(metadata i16 %8, metadata !7061, metadata !DIExpression()), !dbg !7062
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7076
  %10 = and i32 %9, -257, !dbg !7076
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7076
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7077, !srcloc !7069
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7079, !srcloc !7073
  %11 = icmp eq i16 %8, -8446, !dbg !7081
  ret i1 %11, !dbg !7083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !7084 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7085
  %2 = or i32 %1, 16, !dbg !7085
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7085
  ret void, !dbg !7086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !7087 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7090, metadata !DIExpression()), !dbg !7091
  br label %1, !dbg !7092

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7090, metadata !DIExpression()), !dbg !7091
  tail call fastcc void @__NVIC_SetPriority.58(i32 noundef %2) #24, !dbg !7094
  %3 = add nuw nsw i32 %2, 1, !dbg !7097
  call void @llvm.dbg.value(metadata i32 %3, metadata !7090, metadata !DIExpression()), !dbg !7091
  %4 = icmp eq i32 %3, 45, !dbg !7098
  br i1 %4, label %5, label %1, !dbg !7092, !llvm.loop !7099

5:                                                ; preds = %1
  ret void, !dbg !7101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.58(i32 noundef %0) unnamed_addr #15 !dbg !7102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7104, metadata !DIExpression()), !dbg !7106
  call void @llvm.dbg.value(metadata i32 1, metadata !7105, metadata !DIExpression()), !dbg !7106
  %2 = and i32 %0, 15, !dbg !7107
  %3 = add nsw i32 %2, -4, !dbg !7107
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7107
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7107
  %6 = icmp slt i32 %0, 0, !dbg !7107
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7107
  store volatile i8 16, i8* %7, align 1, !dbg !7108
  ret void, !dbg !7110
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7111 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7220, metadata !DIExpression()), !dbg !7221
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7222
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7224
  br i1 %3, label %4, label %12, !dbg !7225

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7226, !srcloc !7240
  call void @llvm.dbg.value(metadata i32 %5, metadata !7231, metadata !DIExpression()) #23, !dbg !7241
  %6 = icmp eq i32 %5, 0, !dbg !7242
  br i1 %6, label %12, label %7, !dbg !7243

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7244
  %9 = or i32 %8, 268435456, !dbg !7244
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7244
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7246
  %11 = and i32 %10, -32769, !dbg !7246
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7246
  br label %12, !dbg !7247

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7248
  ret void, !dbg !7249
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7250 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7251
  ret void, !dbg !7252
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !316 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !442, metadata !DIExpression()), !dbg !7253
  call void @llvm.dbg.value(metadata i8 0, metadata !443, metadata !DIExpression()), !dbg !7253
  call void @llvm.dbg.value(metadata i32 64, metadata !445, metadata !DIExpression()), !dbg !7253
  call void @llvm.dbg.value(metadata i32 undef, metadata !444, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7253
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7254
  %3 = load i32, i32* %2, align 4, !dbg !7254
  call void @llvm.dbg.value(metadata i32 %3, metadata !444, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7253
  %4 = add i32 %3, -64, !dbg !7256
  call void @llvm.dbg.value(metadata i32 %4, metadata !444, metadata !DIExpression()), !dbg !7253
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7257
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7258
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7259
  call void @llvm.dbg.value(metadata i8 1, metadata !443, metadata !DIExpression()), !dbg !7253
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7260
  ret void, !dbg !7261
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7262 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7263
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7264, !srcloc !7267
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7268, !srcloc !7271
  ret void, !dbg !7272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7273 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7274, !srcloc !7277
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7278
  ret void, !dbg !7279
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7280 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7295, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i8 %1, metadata !7296, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i32 %2, metadata !7297, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i32 %3, metadata !7298, metadata !DIExpression()), !dbg !7299
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7300
  %6 = icmp eq i32 %5, -22, !dbg !7302
  br i1 %6, label %7, label %9, !dbg !7303

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7304
  %8 = zext i8 %1 to i32, !dbg !7304
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.70, i32 0, i32 0), i32 noundef %8) #25, !dbg !7304
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 283) #25, !dbg !7304
  unreachable, !dbg !7304

9:                                                ; preds = %4
  ret void, !dbg !7309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7310 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7315, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i8 %1, metadata !7316, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 undef, metadata !7317, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 undef, metadata !7318, metadata !DIExpression()), !dbg !7320
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7321
  call void @llvm.dbg.value(metadata i8 %3, metadata !7319, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7320
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7322
  call void @llvm.dbg.value(metadata i32 %4, metadata !7319, metadata !DIExpression()), !dbg !7320
  %5 = trunc i32 %4 to i8, !dbg !7323
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7324
  ret i32 %4, !dbg !7325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7326 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7330, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i8 %1, metadata !7331, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i8 %2, metadata !7332, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i1 %3, metadata !7333, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7336
  %5 = zext i8 %2 to i32, !dbg !7337
  call void @llvm.dbg.value(metadata i32 %5, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i32 0, metadata !7334, metadata !DIExpression()), !dbg !7336
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i32 0, metadata !7334, metadata !DIExpression()), !dbg !7336
  %7 = icmp eq i8 %1, 0, !dbg !7338
  br i1 %7, label %30, label %8, !dbg !7341

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i32 %10, metadata !7334, metadata !DIExpression()), !dbg !7336
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7342
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7345
  %13 = load i32, i32* %12, align 4, !dbg !7345
  %14 = icmp eq i32 %13, 0, !dbg !7346
  br i1 %14, label %26, label %15, !dbg !7347

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7348

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7350
  %18 = icmp eq i32 %17, 0, !dbg !7350
  br i1 %18, label %19, label %20, !dbg !7351

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.71, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7352
  br label %30, !dbg !7358

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7359
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7360
  call void @llvm.dbg.value(metadata i32 %22, metadata !7335, metadata !DIExpression()), !dbg !7336
  %23 = icmp eq i32 %22, -22, !dbg !7361
  br i1 %23, label %30, label %24, !dbg !7363

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7364
  call void @llvm.dbg.value(metadata i32 %25, metadata !7335, metadata !DIExpression()), !dbg !7336
  br label %26, !dbg !7365

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7336
  call void @llvm.dbg.value(metadata i32 %27, metadata !7335, metadata !DIExpression()), !dbg !7336
  %28 = add nuw nsw i32 %10, 1, !dbg !7366
  call void @llvm.dbg.value(metadata i32 %28, metadata !7334, metadata !DIExpression()), !dbg !7336
  %29 = icmp eq i32 %28, %6, !dbg !7338
  br i1 %29, label %30, label %8, !dbg !7341, !llvm.loop !7367

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7336
  ret i32 %31, !dbg !7369
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #17 !dbg !7370 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7374, metadata !DIExpression()), !dbg !7376
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7377
  %3 = load i32, i32* %2, align 4, !dbg !7377
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7378, !range !7379
  %5 = icmp ult i32 %4, 2, !dbg !7378
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7380
  br i1 %7, label %8, label %15, !dbg !7380

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7381
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7382
  %11 = load i32, i32* %10, align 4, !dbg !7382
  %12 = and i32 %11, %9, !dbg !7383
  %13 = icmp eq i32 %12, 0, !dbg !7384
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7375, metadata !DIExpression()), !dbg !7376
  ret i32 %16, !dbg !7385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7386 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7390, metadata !DIExpression()), !dbg !7393
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7391, metadata !DIExpression()), !dbg !7393
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7394
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7394
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7392, metadata !DIExpression()), !dbg !7395
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7396
  %6 = load i32, i32* %5, align 4, !dbg !7396
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7397
  store i32 %6, i32* %7, align 4, !dbg !7398
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7399
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7400
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7401
  %11 = load i32, i32* %10, align 4, !dbg !7401
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7402
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7403
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7404
  ret i32 %12, !dbg !7405
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #18 !dbg !7406 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7413, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7414, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.value(metadata i32 undef, metadata !7415, metadata !DIExpression()), !dbg !7417
  call void @llvm.dbg.value(metadata i32 %2, metadata !7416, metadata !DIExpression()), !dbg !7417
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7418
  %5 = load i32, i32* %4, align 4, !dbg !7418
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7419
  %7 = or i32 %6, %5, !dbg !7420
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7421
  store i32 %7, i32* %8, align 4, !dbg !7422
  ret void, !dbg !7423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7424 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7428, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7429, metadata !DIExpression()), !dbg !7430
  %3 = zext i8 %0 to i32, !dbg !7431
  %4 = icmp ugt i8 %0, 7, !dbg !7433
  br i1 %4, label %5, label %6, !dbg !7434

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.72, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7435
  br label %7, !dbg !7441

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7442
  br label %7, !dbg !7443

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7430
  ret i32 %8, !dbg !7444
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7449, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7450, metadata !DIExpression()), !dbg !7451
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7452
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7453
  %4 = load i32, i32* %3, align 4, !dbg !7453
  %5 = and i32 %4, -32, !dbg !7454
  %6 = or i32 %5, %0, !dbg !7455
  %7 = or i32 %6, 16, !dbg !7455
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7456
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7457
  %9 = load i32, i32* %8, align 4, !dbg !7457
  %10 = or i32 %9, 1, !dbg !7458
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7459
  ret void, !dbg !7460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7464, metadata !DIExpression()), !dbg !7465
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7466
  ret void, !dbg !7467
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7472, metadata !DIExpression()), !dbg !7473
  %2 = icmp ult i32 %0, 33, !dbg !7474
  br i1 %2, label %11, label %3, !dbg !7476

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7477
  br i1 %4, label %11, label %5, !dbg !7479

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7480
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7481, !range !7379
  %8 = mul nsw i32 %7, -2, !dbg !7482
  %9 = add nsw i32 %8, 62, !dbg !7482
  %10 = and i32 %9, 62, !dbg !7483
  br label %11, !dbg !7484

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7473
  ret i32 %12, !dbg !7485
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7486 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7490, metadata !DIExpression()), !dbg !7492
  call void @llvm.dbg.value(metadata i8 %1, metadata !7491, metadata !DIExpression()), !dbg !7492
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7493
  %4 = icmp eq i32 %3, -22, !dbg !7495
  br i1 %4, label %5, label %7, !dbg !7496

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7497
  %6 = zext i8 %1 to i32, !dbg !7497
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.75, i32 0, i32 0), i32 noundef %6) #25, !dbg !7497
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 314) #25, !dbg !7497
  unreachable, !dbg !7497

7:                                                ; preds = %2
  ret void, !dbg !7502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7503 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7507, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i8 %1, metadata !7508, metadata !DIExpression()), !dbg !7514
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7515
  call void @llvm.dbg.value(metadata i8 %3, metadata !7509, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7514
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7516
  call void @llvm.dbg.value(metadata i32 %4, metadata !7509, metadata !DIExpression()), !dbg !7514
  %5 = icmp ne i32 %4, -22, !dbg !7517
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7518
  call void @llvm.dbg.value(metadata i32 %4, metadata !7510, metadata !DIExpression()), !dbg !7519
  br i1 %7, label %8, label %12, !dbg !7518

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7510, metadata !DIExpression()), !dbg !7519
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7520
  %10 = add i32 %9, 1, !dbg !7523
  call void @llvm.dbg.value(metadata i32 %10, metadata !7510, metadata !DIExpression()), !dbg !7519
  %11 = icmp eq i32 %10, 8, !dbg !7524
  br i1 %11, label %12, label %8, !dbg !7525, !llvm.loop !7526

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7532, metadata !DIExpression()), !dbg !7533
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7534
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7535
  ret void, !dbg !7536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7537 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7542
  %2 = icmp ugt i32 %1, 8, !dbg !7544
  br i1 %2, label %3, label %4, !dbg !7545

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.68, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7546
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.76, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7546
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 341) #25, !dbg !7546
  unreachable, !dbg !7546

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7551
  call void @llvm.dbg.value(metadata i32 0, metadata !7541, metadata !DIExpression()), !dbg !7552
  %5 = icmp eq i32 %1, 0, !dbg !7553
  br i1 %5, label %13, label %6, !dbg !7556

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7556

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7541, metadata !DIExpression()), !dbg !7552
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7557
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7559
  %11 = add nuw i32 %9, 1, !dbg !7560
  call void @llvm.dbg.value(metadata i32 %11, metadata !7541, metadata !DIExpression()), !dbg !7552
  %12 = icmp eq i32 %11, %1, !dbg !7553
  br i1 %12, label %13, label %8, !dbg !7556, !llvm.loop !7561

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7563
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7564
  tail call void @arm_core_mpu_enable() #24, !dbg !7565
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7566
  %16 = and i32 %15, 65280, !dbg !7566
  %17 = icmp eq i32 %16, 2048, !dbg !7566
  br i1 %17, label %19, label %18, !dbg !7569

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7570
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.78, i32 0, i32 0)) #25, !dbg !7570
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.69, i32 0, i32 0), i32 noundef 435) #25, !dbg !7570
  unreachable, !dbg !7570

19:                                               ; preds = %13
  ret i32 0, !dbg !7572
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7573 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7580, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i8* %1, metadata !7581, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i8* %0, metadata !7582, metadata !DIExpression()), !dbg !7583
  %3 = load i8, i8* %1, align 1, !dbg !7584
  %4 = icmp eq i8 %3, 0, !dbg !7585
  br i1 %4, label %13, label %5, !dbg !7586

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7580, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.value(metadata i8* %8, metadata !7581, metadata !DIExpression()), !dbg !7583
  store i8 %6, i8* %7, align 1, !dbg !7587
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7589
  call void @llvm.dbg.value(metadata i8* %9, metadata !7580, metadata !DIExpression()), !dbg !7583
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7590
  call void @llvm.dbg.value(metadata i8* %10, metadata !7581, metadata !DIExpression()), !dbg !7583
  %11 = load i8, i8* %10, align 1, !dbg !7584
  %12 = icmp eq i8 %11, 0, !dbg !7585
  br i1 %12, label %13, label %5, !dbg !7586, !llvm.loop !7591

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7593
  ret i8* %0, !dbg !7594
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7595 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7599, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i8* %1, metadata !7600, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %2, metadata !7601, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i8* %0, metadata !7602, metadata !DIExpression()), !dbg !7603
  %4 = icmp eq i32 %2, 0, !dbg !7604
  br i1 %4, label %22, label %5, !dbg !7605

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7599, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %7, metadata !7601, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i8* %8, metadata !7600, metadata !DIExpression()), !dbg !7603
  %9 = load i8, i8* %8, align 1, !dbg !7606
  %10 = icmp eq i8 %9, 0, !dbg !7607
  br i1 %10, label %16, label %11, !dbg !7608

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7609
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7611
  call void @llvm.dbg.value(metadata i8* %12, metadata !7600, metadata !DIExpression()), !dbg !7603
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7612
  call void @llvm.dbg.value(metadata i8* %13, metadata !7599, metadata !DIExpression()), !dbg !7603
  %14 = add i32 %7, -1, !dbg !7613
  call void @llvm.dbg.value(metadata i32 %14, metadata !7601, metadata !DIExpression()), !dbg !7603
  %15 = icmp eq i32 %14, 0, !dbg !7604
  br i1 %15, label %22, label %5, !dbg !7605, !llvm.loop !7614

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7599, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.value(metadata i32 %18, metadata !7601, metadata !DIExpression()), !dbg !7603
  store i8 0, i8* %17, align 1, !dbg !7616
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7618
  call void @llvm.dbg.value(metadata i8* %19, metadata !7599, metadata !DIExpression()), !dbg !7603
  %20 = add i32 %18, -1, !dbg !7619
  call void @llvm.dbg.value(metadata i32 %20, metadata !7601, metadata !DIExpression()), !dbg !7603
  %21 = icmp eq i32 %20, 0, !dbg !7620
  br i1 %21, label %22, label %16, !dbg !7621, !llvm.loop !7622

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7624
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7625 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7629, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i32 %1, metadata !7630, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.value(metadata i32 %1, metadata !7631, metadata !DIExpression()), !dbg !7632
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7633

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7629, metadata !DIExpression()), !dbg !7632
  %6 = load i8, i8* %5, align 1, !dbg !7634
  %7 = icmp eq i8 %6, %3, !dbg !7635
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7636
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7637
  call void @llvm.dbg.value(metadata i8* %10, metadata !7629, metadata !DIExpression()), !dbg !7632
  br i1 %9, label %11, label %4, !dbg !7636, !llvm.loop !7639

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7641
  ret i8* %12, !dbg !7642
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7643 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7645, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.value(metadata i32 %1, metadata !7646, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.value(metadata i8* null, metadata !7647, metadata !DIExpression()), !dbg !7648
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7649

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7648
  call void @llvm.dbg.value(metadata i8* %6, metadata !7647, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.value(metadata i8* %5, metadata !7645, metadata !DIExpression()), !dbg !7648
  %7 = load i8, i8* %5, align 1, !dbg !7650
  %8 = icmp eq i8 %7, %3, !dbg !7653
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7654
  call void @llvm.dbg.value(metadata i8* %9, metadata !7647, metadata !DIExpression()), !dbg !7648
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7655
  call void @llvm.dbg.value(metadata i8* %10, metadata !7645, metadata !DIExpression()), !dbg !7648
  %11 = icmp eq i8 %7, 0, !dbg !7656
  br i1 %11, label %12, label %4, !dbg !7656, !llvm.loop !7657

12:                                               ; preds = %4
  ret i8* %9, !dbg !7659
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7660 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7664, metadata !DIExpression()), !dbg !7666
  call void @llvm.dbg.value(metadata i32 0, metadata !7665, metadata !DIExpression()), !dbg !7666
  %2 = load i8, i8* %0, align 1, !dbg !7667
  %3 = icmp eq i8 %2, 0, !dbg !7668
  br i1 %3, label %11, label %4, !dbg !7669

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7665, metadata !DIExpression()), !dbg !7666
  call void @llvm.dbg.value(metadata i8* %6, metadata !7664, metadata !DIExpression()), !dbg !7666
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7670
  call void @llvm.dbg.value(metadata i8* %7, metadata !7664, metadata !DIExpression()), !dbg !7666
  %8 = add i32 %5, 1, !dbg !7672
  call void @llvm.dbg.value(metadata i32 %8, metadata !7665, metadata !DIExpression()), !dbg !7666
  %9 = load i8, i8* %7, align 1, !dbg !7667
  %10 = icmp eq i8 %9, 0, !dbg !7668
  br i1 %10, label %11, label %4, !dbg !7669, !llvm.loop !7673

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7666
  ret i32 %12, !dbg !7675
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7676 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7680, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata i32 %1, metadata !7681, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata i32 0, metadata !7682, metadata !DIExpression()), !dbg !7683
  %3 = load i8, i8* %0, align 1, !dbg !7684
  %4 = icmp ne i8 %3, 0, !dbg !7685
  %5 = icmp ne i32 %1, 0, !dbg !7686
  %6 = and i1 %4, %5, !dbg !7686
  br i1 %6, label %7, label %16, !dbg !7687

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7682, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata i8* %9, metadata !7680, metadata !DIExpression()), !dbg !7683
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7688
  call void @llvm.dbg.value(metadata i8* %10, metadata !7680, metadata !DIExpression()), !dbg !7683
  %11 = add nuw i32 %8, 1, !dbg !7690
  call void @llvm.dbg.value(metadata i32 %11, metadata !7682, metadata !DIExpression()), !dbg !7683
  %12 = load i8, i8* %10, align 1, !dbg !7684
  %13 = icmp ne i8 %12, 0, !dbg !7685
  %14 = icmp ult i32 %11, %1, !dbg !7686
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7686
  br i1 %15, label %7, label %16, !dbg !7687, !llvm.loop !7691

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7683
  ret i32 %17, !dbg !7693
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7694 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7698, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %1, metadata !7699, metadata !DIExpression()), !dbg !7700
  %3 = load i8, i8* %0, align 1, !dbg !7701
  %4 = load i8, i8* %1, align 1, !dbg !7702
  %5 = icmp ne i8 %3, %4, !dbg !7703
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7704
  br i1 %7, label %18, label %8, !dbg !7704

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i8* %10, metadata !7698, metadata !DIExpression()), !dbg !7700
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7705
  call void @llvm.dbg.value(metadata i8* %11, metadata !7698, metadata !DIExpression()), !dbg !7700
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7707
  call void @llvm.dbg.value(metadata i8* %12, metadata !7699, metadata !DIExpression()), !dbg !7700
  %13 = load i8, i8* %11, align 1, !dbg !7701
  %14 = load i8, i8* %12, align 1, !dbg !7702
  %15 = icmp ne i8 %13, %14, !dbg !7703
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7704
  br i1 %17, label %18, label %8, !dbg !7704, !llvm.loop !7708

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7701
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7702
  %21 = zext i8 %19 to i32, !dbg !7711
  %22 = zext i8 %20 to i32, !dbg !7712
  %23 = sub nsw i32 %21, %22, !dbg !7713
  ret i32 %23, !dbg !7714
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7715 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %1, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %2, metadata !7721, metadata !DIExpression()), !dbg !7722
  %4 = icmp eq i32 %2, 0, !dbg !7723
  br i1 %4, label %23, label %5, !dbg !7723

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7721, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %7, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %8, metadata !7719, metadata !DIExpression()), !dbg !7722
  %9 = load i8, i8* %8, align 1, !dbg !7724
  %10 = load i8, i8* %7, align 1, !dbg !7725
  %11 = icmp ne i8 %9, %10, !dbg !7726
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7727
  br i1 %13, label %19, label %14, !dbg !7727

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7728
  call void @llvm.dbg.value(metadata i8* %15, metadata !7719, metadata !DIExpression()), !dbg !7722
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7730
  call void @llvm.dbg.value(metadata i8* %16, metadata !7720, metadata !DIExpression()), !dbg !7722
  %17 = add i32 %6, -1, !dbg !7731
  call void @llvm.dbg.value(metadata i32 %17, metadata !7721, metadata !DIExpression()), !dbg !7722
  %18 = icmp eq i32 %17, 0, !dbg !7723
  br i1 %18, label %23, label %5, !dbg !7723, !llvm.loop !7732

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7735
  %21 = zext i8 %10 to i32, !dbg !7736
  %22 = sub nsw i32 %20, %21, !dbg !7737
  br label %23, !dbg !7738

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7738
  ret i32 %24, !dbg !7739
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7740 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7744, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata i8* %1, metadata !7745, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.value(metadata i8** %2, metadata !7746, metadata !DIExpression()), !dbg !7749
  %4 = icmp eq i8* %0, null, !dbg !7750
  br i1 %4, label %5, label %7, !dbg !7750

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7751
  br label %7, !dbg !7750

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7750
  call void @llvm.dbg.value(metadata i8* %8, metadata !7747, metadata !DIExpression()), !dbg !7749
  %9 = load i8, i8* %8, align 1, !dbg !7752
  %10 = icmp eq i8 %9, 0, !dbg !7752
  br i1 %10, label %33, label %11, !dbg !7753

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7747, metadata !DIExpression()), !dbg !7749
  %14 = zext i8 %12 to i32, !dbg !7752
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7754
  %16 = icmp eq i8* %15, null, !dbg !7753
  br i1 %16, label %21, label %17, !dbg !7755

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7756
  call void @llvm.dbg.value(metadata i8* %18, metadata !7747, metadata !DIExpression()), !dbg !7749
  %19 = load i8, i8* %18, align 1, !dbg !7752
  %20 = icmp eq i8 %19, 0, !dbg !7752
  br i1 %20, label %33, label %11, !dbg !7753, !llvm.loop !7758

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7748, metadata !DIExpression()), !dbg !7749
  %24 = zext i8 %22 to i32, !dbg !7760
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7761
  %26 = icmp eq i8* %25, null, !dbg !7762
  br i1 %26, label %27, label %31, !dbg !7763

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7764
  call void @llvm.dbg.value(metadata i8* %28, metadata !7748, metadata !DIExpression()), !dbg !7749
  %29 = load i8, i8* %28, align 1, !dbg !7760
  %30 = icmp eq i8 %29, 0, !dbg !7760
  br i1 %30, label %33, label %21, !dbg !7766, !llvm.loop !7767

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7769
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7772
  br label %33, !dbg !7773

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7749
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7749
  store i8* %34, i8** %2, align 4, !dbg !7749
  ret i8* %35, !dbg !7774
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7775 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7777, metadata !DIExpression()), !dbg !7779
  call void @llvm.dbg.value(metadata i8* %1, metadata !7778, metadata !DIExpression()), !dbg !7779
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7780
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7781
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7782
  ret i8* %0, !dbg !7783
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7784 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7786, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %1, metadata !7787, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i32 %2, metadata !7788, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %0, metadata !7789, metadata !DIExpression()), !dbg !7791
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7792
  call void @llvm.dbg.value(metadata i32 %4, metadata !7790, metadata !DIExpression()), !dbg !7791
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7793
  call void @llvm.dbg.value(metadata i8* %5, metadata !7786, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %1, metadata !7787, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i32 %2, metadata !7788, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i32 %2, metadata !7788, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7791
  %6 = icmp eq i32 %2, 0, !dbg !7794
  br i1 %6, label %18, label %7, !dbg !7795

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7796
  call void @llvm.dbg.value(metadata i8* %9, metadata !7786, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i8* %10, metadata !7787, metadata !DIExpression()), !dbg !7791
  %12 = load i8, i8* %10, align 1, !dbg !7797
  %13 = icmp eq i8 %12, 0, !dbg !7798
  br i1 %13, label %18, label %14, !dbg !7799

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7800
  call void @llvm.dbg.value(metadata i8* %15, metadata !7787, metadata !DIExpression()), !dbg !7791
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7802
  call void @llvm.dbg.value(metadata i8* %16, metadata !7786, metadata !DIExpression()), !dbg !7791
  store i8 %12, i8* %9, align 1, !dbg !7803
  call void @llvm.dbg.value(metadata i32 %11, metadata !7788, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.value(metadata i32 %11, metadata !7788, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7791
  %17 = icmp eq i32 %11, 0, !dbg !7794
  br i1 %17, label %18, label %7, !dbg !7795, !llvm.loop !7804

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7791
  store i8 0, i8* %19, align 1, !dbg !7806
  ret i8* %0, !dbg !7807
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7808 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7812, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %1, metadata !7813, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %2, metadata !7814, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %0, metadata !7815, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %1, metadata !7816, metadata !DIExpression()), !dbg !7817
  %4 = icmp eq i32 %2, 0, !dbg !7818
  br i1 %4, label %31, label %5, !dbg !7820

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7816, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %0, metadata !7815, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %2, metadata !7814, metadata !DIExpression()), !dbg !7817
  %6 = add i32 %2, -1, !dbg !7821
  call void @llvm.dbg.value(metadata i32 %6, metadata !7814, metadata !DIExpression()), !dbg !7817
  %7 = icmp eq i32 %6, 0, !dbg !7822
  br i1 %7, label %23, label %8, !dbg !7823

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7824
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7824
  br label %11, !dbg !7824

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7816, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i8* %14, metadata !7815, metadata !DIExpression()), !dbg !7817
  %15 = load i8, i8* %14, align 1, !dbg !7825
  %16 = load i8, i8* %13, align 1, !dbg !7826
  %17 = icmp eq i8 %15, %16, !dbg !7827
  br i1 %17, label %18, label %23, !dbg !7824

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7828
  call void @llvm.dbg.value(metadata i8* %19, metadata !7815, metadata !DIExpression()), !dbg !7817
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7830
  call void @llvm.dbg.value(metadata i8* %20, metadata !7816, metadata !DIExpression()), !dbg !7817
  call void @llvm.dbg.value(metadata i32 %12, metadata !7814, metadata !DIExpression()), !dbg !7817
  %21 = add i32 %12, -1, !dbg !7821
  call void @llvm.dbg.value(metadata i32 %21, metadata !7814, metadata !DIExpression()), !dbg !7817
  %22 = icmp eq i32 %21, 0, !dbg !7822
  br i1 %22, label %23, label %11, !dbg !7823, !llvm.loop !7831

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7817
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7817
  %26 = load i8, i8* %24, align 1, !dbg !7833
  %27 = zext i8 %26 to i32, !dbg !7833
  %28 = load i8, i8* %25, align 1, !dbg !7834
  %29 = zext i8 %28 to i32, !dbg !7834
  %30 = sub nsw i32 %27, %29, !dbg !7835
  br label %31, !dbg !7836

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7817
  ret i32 %32, !dbg !7837
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7838 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7842, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i8* %1, metadata !7843, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i32 %2, metadata !7844, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i8* %0, metadata !7845, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i8* %1, metadata !7846, metadata !DIExpression()), !dbg !7847
  %4 = ptrtoint i8* %0 to i32, !dbg !7848
  %5 = ptrtoint i8* %1 to i32, !dbg !7848
  %6 = sub i32 %4, %5, !dbg !7848
  %7 = icmp ult i32 %6, %2, !dbg !7850
  br i1 %7, label %10, label %8, !dbg !7851

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i8* %0, metadata !7845, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i32 %2, metadata !7844, metadata !DIExpression()), !dbg !7847
  %9 = icmp eq i32 %2, 0, !dbg !7852
  br i1 %9, label %26, label %17, !dbg !7854

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7844, metadata !DIExpression()), !dbg !7847
  %12 = add i32 %11, -1, !dbg !7855
  call void @llvm.dbg.value(metadata i32 %12, metadata !7844, metadata !DIExpression()), !dbg !7847
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7858
  %14 = load i8, i8* %13, align 1, !dbg !7858
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7859
  store i8 %14, i8* %15, align 1, !dbg !7860
  %16 = icmp eq i32 %12, 0, !dbg !7861
  br i1 %16, label %26, label %10, !dbg !7862, !llvm.loop !7863

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i8* %19, metadata !7845, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.value(metadata i32 %20, metadata !7844, metadata !DIExpression()), !dbg !7847
  %21 = load i8, i8* %18, align 1, !dbg !7865
  store i8 %21, i8* %19, align 1, !dbg !7867
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7868
  call void @llvm.dbg.value(metadata i8* %22, metadata !7845, metadata !DIExpression()), !dbg !7847
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7869
  call void @llvm.dbg.value(metadata i8* %23, metadata !7846, metadata !DIExpression()), !dbg !7847
  %24 = add i32 %20, -1, !dbg !7870
  call void @llvm.dbg.value(metadata i32 %24, metadata !7844, metadata !DIExpression()), !dbg !7847
  %25 = icmp eq i32 %24, 0, !dbg !7852
  br i1 %25, label %26, label %17, !dbg !7854, !llvm.loop !7871

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7873
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7874 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7880, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %1, metadata !7881, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %2, metadata !7882, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %0, metadata !7883, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %1, metadata !7884, metadata !DIExpression()), !dbg !7885
  %4 = icmp eq i32 %2, 0, !dbg !7886
  br i1 %4, label %14, label %5, !dbg !7887

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7884, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i8* %7, metadata !7883, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %8, metadata !7882, metadata !DIExpression()), !dbg !7885
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7888
  call void @llvm.dbg.value(metadata i8* %9, metadata !7884, metadata !DIExpression()), !dbg !7885
  %10 = load i8, i8* %6, align 1, !dbg !7890
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7891
  call void @llvm.dbg.value(metadata i8* %11, metadata !7883, metadata !DIExpression()), !dbg !7885
  store i8 %10, i8* %7, align 1, !dbg !7892
  %12 = add i32 %8, -1, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %12, metadata !7882, metadata !DIExpression()), !dbg !7885
  %13 = icmp eq i32 %12, 0, !dbg !7886
  br i1 %13, label %14, label %5, !dbg !7887, !llvm.loop !7894

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7896
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7897 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7901, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i32 %1, metadata !7902, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i32 %2, metadata !7903, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i8* %0, metadata !7904, metadata !DIExpression()), !dbg !7906
  %4 = trunc i32 %1 to i8, !dbg !7907
  call void @llvm.dbg.value(metadata i8 %4, metadata !7905, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i32 %2, metadata !7903, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i8* %0, metadata !7904, metadata !DIExpression()), !dbg !7906
  %5 = icmp eq i32 %2, 0, !dbg !7908
  br i1 %5, label %12, label %6, !dbg !7909

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7903, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i8* %8, metadata !7904, metadata !DIExpression()), !dbg !7906
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7910
  call void @llvm.dbg.value(metadata i8* %9, metadata !7904, metadata !DIExpression()), !dbg !7906
  store i8 %4, i8* %8, align 1, !dbg !7912
  %10 = add i32 %7, -1, !dbg !7913
  call void @llvm.dbg.value(metadata i32 %10, metadata !7903, metadata !DIExpression()), !dbg !7906
  %11 = icmp eq i32 %10, 0, !dbg !7908
  br i1 %11, label %12, label %6, !dbg !7909, !llvm.loop !7914

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7916
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7917 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7921, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %1, metadata !7922, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i32 %2, metadata !7923, metadata !DIExpression()), !dbg !7927
  %4 = icmp eq i32 %2, 0, !dbg !7928
  br i1 %4, label %17, label %5, !dbg !7929

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7930

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7931
  call void @llvm.dbg.value(metadata i8* %9, metadata !7924, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i32 %8, metadata !7923, metadata !DIExpression()), !dbg !7927
  call void @llvm.dbg.value(metadata i8* %9, metadata !7924, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7931
  %10 = load i8, i8* %9, align 1, !dbg !7932
  %11 = icmp eq i8 %10, %6, !dbg !7935
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7936
  call void @llvm.dbg.value(metadata i8* %12, metadata !7924, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.value(metadata i32 %13, metadata !7923, metadata !DIExpression()), !dbg !7927
  br i1 %15, label %16, label %7, !dbg !7936, !llvm.loop !7937

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7939

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7927
  ret i8* %19, !dbg !7940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !7941 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7943, metadata !DIExpression()), !dbg !7944
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7945
  ret void, !dbg !7946
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #4 !dbg !7947 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7949, metadata !DIExpression()), !dbg !7950
  ret i32 -1, !dbg !7951
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7956, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata i32* %1, metadata !7957, metadata !DIExpression()), !dbg !7958
  %3 = ptrtoint i32* %1 to i32, !dbg !7959
  %4 = and i32 %3, -2, !dbg !7959
  %5 = icmp eq i32 %4, 2, !dbg !7959
  br i1 %5, label %6, label %9, !dbg !7959

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7960
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !7960
  br label %9, !dbg !7961

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7961
  ret i32 %10, !dbg !7962
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7965, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.value(metadata i32* %1, metadata !7966, metadata !DIExpression()), !dbg !7967
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7968
  ret i32 %3, !dbg !7969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7973, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.value(metadata i32* %1, metadata !7974, metadata !DIExpression()), !dbg !7975
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7976, !srcloc !7978
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !7979
  ret i32 %3, !dbg !7980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7981 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7986, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata i32* %1, metadata !7987, metadata !DIExpression()), !dbg !7990
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !7991
  call void @llvm.dbg.value(metadata i32 %3, metadata !7988, metadata !DIExpression()), !dbg !7990
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !7992
  call void @llvm.dbg.value(metadata i32 %4, metadata !7989, metadata !DIExpression()), !dbg !7990
  %5 = icmp ne i32 %3, %4, !dbg !7993
  %6 = sext i1 %5 to i32, !dbg !7994
  ret i32 %6, !dbg !7995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7996 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8000, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i32 %1, metadata !8001, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i32 %2, metadata !8002, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata i32* %3, metadata !8003, metadata !DIExpression()), !dbg !8004
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8005
  ret i32 %5, !dbg !8006
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8007 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8009, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i32 %1, metadata !8010, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i32 %2, metadata !8011, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.value(metadata i32* %3, metadata !8012, metadata !DIExpression()), !dbg !8013
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8014, !srcloc !8016
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8017
  ret i32 %5, !dbg !8018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8019 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8021, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32 %1, metadata !8022, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32 %2, metadata !8023, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32* %3, metadata !8024, metadata !DIExpression()), !dbg !8029
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8030
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8032
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8032
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8032
  br i1 %11, label %33, label %12, !dbg !8032

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8029
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8029
  call void @llvm.dbg.value(metadata i8* %14, metadata !8027, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32 %13, metadata !8025, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32 %1, metadata !8026, metadata !DIExpression()), !dbg !8029
  br label %15, !dbg !8033

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8035
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8029
  call void @llvm.dbg.value(metadata i8* %17, metadata !8027, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.value(metadata i32 %16, metadata !8026, metadata !DIExpression()), !dbg !8029
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8036
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8039
  call void @llvm.dbg.value(metadata i8* %19, metadata !8027, metadata !DIExpression()), !dbg !8029
  %20 = load i8, i8* %17, align 1, !dbg !8040
  %21 = zext i8 %20 to i32, !dbg !8041
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8036
  %23 = icmp eq i32 %22, -1, !dbg !8042
  br i1 %23, label %30, label %24, !dbg !8043

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8044
  call void @llvm.dbg.value(metadata i32 %25, metadata !8026, metadata !DIExpression()), !dbg !8029
  %26 = icmp eq i32 %25, 0, !dbg !8045
  br i1 %26, label %27, label %15, !dbg !8046, !llvm.loop !8047

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %28, metadata !8025, metadata !DIExpression()), !dbg !8029
  %29 = icmp eq i32 %28, 0, !dbg !8050
  br i1 %29, label %30, label %12, !dbg !8051, !llvm.loop !8052

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8029
  call void @llvm.dbg.value(metadata i32 %31, metadata !8025, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.label(metadata !8028), !dbg !8055
  %32 = sub i32 %2, %31, !dbg !8056
  br label %33, !dbg !8057

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8029
  ret i32 %34, !dbg !8058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8059 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8063, metadata !DIExpression()), !dbg !8064
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8065
  %3 = icmp eq i32 %2, -1, !dbg !8067
  br i1 %3, label %8, label %4, !dbg !8068

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8069
  %6 = icmp eq i32 %5, -1, !dbg !8070
  %7 = sext i1 %6 to i32, !dbg !8069
  br label %8, !dbg !8071

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8064
  ret i32 %9, !dbg !8072
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8073 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8075, metadata !DIExpression()), !dbg !8086
  %8 = bitcast i64* %2 to i8*, !dbg !8087
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8087
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !8076, metadata !DIExpression()), !dbg !8088
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !8088
  store i64 %9, i64* %2, align 8, !dbg !8088
  %10 = bitcast i64* %4 to i8*, !dbg !8089
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8089
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !8084, metadata !DIExpression()), !dbg !8090
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !8090
  store i64 %11, i64* %4, align 8, !dbg !8090
  %12 = bitcast i64* %6 to i8*, !dbg !8091
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8091
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !8085, metadata !DIExpression()), !dbg !8092
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !8092
  store i64 %13, i64* %6, align 8, !dbg !8092
  %14 = trunc i64 %9 to i32, !dbg !8093
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !8093
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #24, !dbg !8095
  %17 = trunc i64 %13 to i32, !dbg !8096
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !8096
  br i1 %16, label %19, label %26, !dbg !8096

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !8096
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !8096
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #24, !dbg !8097
  br i1 %22, label %23, label %26, !dbg !8098

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #24, !dbg !8099
  br i1 %24, label %25, label %26, !dbg !8100

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #24, !dbg !8101
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #24, !dbg !8102
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #24, !dbg !8103
  br label %26, !dbg !8104

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !8086
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23, !dbg !8105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #23, !dbg !8105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !8105
  ret i32 %27, !dbg !8105
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8111, metadata !DIExpression()), !dbg !8112
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8113, !srcloc !8115
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #24, !dbg !8116
  ret i1 %2, !dbg !8117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8118 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !8123, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32 %1, metadata !8124, metadata !DIExpression()), !dbg !8125
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !8126
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !8126
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !8127
  %6 = load i8, i8* %5, align 4, !dbg !8127
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !8128
  %8 = load i16, i16* %7, align 2, !dbg !8128
  %9 = zext i16 %8 to i32, !dbg !8129
  %10 = or i32 %9, %1, !dbg !8130
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #24, !dbg !8131
  ret void, !dbg !8132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8133 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8136, metadata !DIExpression()), !dbg !8139
  call void @llvm.dbg.value(metadata i8 %1, metadata !8137, metadata !DIExpression()), !dbg !8139
  call void @llvm.dbg.value(metadata i32 %2, metadata !8138, metadata !DIExpression()), !dbg !8139
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8140, !srcloc !8142
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #24, !dbg !8143
  ret void, !dbg !8144
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !8145 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8147, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i8 %1, metadata !8148, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %2, metadata !8149, metadata !DIExpression()), !dbg !8154
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8155
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !8155
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !8155
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !8150, metadata !DIExpression()), !dbg !8154
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8156
  %8 = bitcast i8** %7 to %struct.k_spinlock**, !dbg !8156
  %9 = load %struct.k_spinlock*, %struct.k_spinlock** %8, align 4, !dbg !8156
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %9, metadata !8151, metadata !DIExpression()), !dbg !8154
  %10 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8157
  %11 = bitcast i8** %10 to %struct.k_spinlock**, !dbg !8157
  %12 = load %struct.k_spinlock*, %struct.k_spinlock** %11, align 4, !dbg !8157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %12, metadata !8153, metadata !DIExpression()), !dbg !8154
  %13 = and i32 %2, 132120576, !dbg !8158
  %14 = icmp eq i32 %13, 0, !dbg !8158
  br i1 %14, label %16, label %15, !dbg !8161

15:                                               ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([93 x i8], [93 x i8]* @.str.12.91, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 679) #25, !dbg !8162
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13.93, i32 0, i32 0)) #25, !dbg !8162
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 679) #25, !dbg !8162
  unreachable, !dbg !8162

16:                                               ; preds = %3
  %17 = and i32 %2, 48, !dbg !8164
  %18 = icmp eq i32 %17, 48, !dbg !8164
  br i1 %18, label %19, label %20, !dbg !8167

19:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 683) #25, !dbg !8168
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.15.95, i32 0, i32 0)) #25, !dbg !8168
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 683) #25, !dbg !8168
  unreachable, !dbg !8168

20:                                               ; preds = %16
  %21 = and i32 %2, 131072, !dbg !8170
  %22 = icmp ne i32 %21, 0, !dbg !8170
  %23 = and i32 %2, 131074, !dbg !8170
  %24 = icmp eq i32 %23, 2, !dbg !8170
  br i1 %24, label %25, label %26, !dbg !8170

25:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16.96, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 687) #25, !dbg !8173
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([82 x i8], [82 x i8]* @.str.17.97, i32 0, i32 0)) #25, !dbg !8173
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 687) #25, !dbg !8173
  unreachable, !dbg !8173

26:                                               ; preds = %20
  %27 = and i32 %2, 6, !dbg !8175
  %28 = icmp eq i32 %27, 4, !dbg !8175
  br i1 %28, label %29, label %30, !dbg !8175

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18.98, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 690) #25, !dbg !8178
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 690) #25, !dbg !8178
  unreachable, !dbg !8178

30:                                               ; preds = %26
  %31 = and i32 %2, 786432, !dbg !8180
  %32 = icmp eq i32 %31, 0, !dbg !8180
  %33 = or i1 %32, %22, !dbg !8180
  br i1 %33, label %35, label %34, !dbg !8180

34:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([70 x i8], [70 x i8]* @.str.19.99, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 694) #25, !dbg !8183
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.100, i32 0, i32 0)) #25, !dbg !8183
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 694) #25, !dbg !8183
  unreachable, !dbg !8183

35:                                               ; preds = %30
  %36 = icmp eq i32 %31, 786432, !dbg !8185
  br i1 %36, label %37, label %38, !dbg !8188

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([65 x i8], [65 x i8]* @.str.21.101, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 698) #25, !dbg !8189
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22.102, i32 0, i32 0)) #25, !dbg !8189
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 698) #25, !dbg !8189
  unreachable, !dbg !8189

38:                                               ; preds = %35
  %39 = and i32 %2, 1048577, !dbg !8191
  %40 = icmp ne i32 %39, 1048577, !dbg !8191
  %41 = or i1 %40, %32, !dbg !8191
  %42 = xor i32 %2, 786432, !dbg !8191
  %43 = select i1 %41, i32 %2, i32 %42, !dbg !8191
  call void @llvm.dbg.value(metadata i32 %43, metadata !8149, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %43, metadata !8149, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !8154
  %44 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %9, i32 0, i32 0, !dbg !8193
  %45 = load i32, i32* %44, align 4, !dbg !8193
  %46 = zext i8 %1 to i32, !dbg !8193
  %47 = shl nuw i32 1, %46, !dbg !8193
  %48 = and i32 %45, %47, !dbg !8193
  %49 = icmp eq i32 %48, 0, !dbg !8193
  br i1 %49, label %50, label %51, !dbg !8196

50:                                               ; preds = %38
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 709) #25, !dbg !8197
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.104, i32 0, i32 0)) #25, !dbg !8197
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.92, i32 0, i32 0), i32 noundef 709) #25, !dbg !8197
  unreachable, !dbg !8197

51:                                               ; preds = %38
  %52 = and i32 %43, 1, !dbg !8199
  %53 = icmp eq i32 %52, 0, !dbg !8201
  br i1 %53, label %58, label %54, !dbg !8202

54:                                               ; preds = %51
  %55 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !8203
  %56 = load i32, i32* %55, align 4, !dbg !8205
  %57 = or i32 %56, %47, !dbg !8205
  store i32 %57, i32* %55, align 4, !dbg !8205
  br label %63, !dbg !8206

58:                                               ; preds = %51
  %59 = xor i32 %47, -1, !dbg !8207
  %60 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %12, i32 0, i32 0, !dbg !8209
  %61 = load i32, i32* %60, align 4, !dbg !8210
  %62 = and i32 %61, %59, !dbg !8210
  store i32 %62, i32* %60, align 4, !dbg !8210
  br label %63

63:                                               ; preds = %58, %54
  %64 = and i32 %43, -1048577, !dbg !8211
  call void @llvm.dbg.value(metadata i32 %64, metadata !8149, metadata !DIExpression()), !dbg !8154
  %65 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !8212
  %66 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %65, align 4, !dbg !8212
  %67 = tail call i32 %66(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %64) #25, !dbg !8213
  ret void, !dbg !8214
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !8215 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8217, metadata !DIExpression()), !dbg !8218
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !8219
  ret i1 %2, !dbg !8220
}

; Function Attrs: noinline nounwind optsize
define dso_local void @end_report() local_unnamed_addr #1 !dbg !8221 {
  %1 = load i32, i32* @test_status, align 4, !dbg !8222
  %2 = icmp eq i32 %1, 0, !dbg !8222
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.105, i32 0, i32 0)) #25, !dbg !8224
  %3 = select i1 %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3.106, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2.107, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1.108, i32 0, i32 0), i8* noundef %3) #25, !dbg !8224
  ret void, !dbg !8225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_start() local_unnamed_addr #4 !dbg !8226 {
  ret void, !dbg !8227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @z_impl_z_test_1cpu_stop() local_unnamed_addr #4 !dbg !8228 {
  ret void, !dbg !8229
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_skip_failed_assumption() local_unnamed_addr #1 !dbg !8230 {
  store i1 true, i1* @current_test_failed_assumption, align 1, !dbg !8231
  tail call void @ztest_test_skip() #24, !dbg !8234
  ret void, !dbg !8235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_skip() local_unnamed_addr #1 !dbg !8236 {
  %1 = load i32, i32* @phase, align 4, !dbg !8237
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8238

2:                                                ; preds = %0
  store i32 4, i32* @test_result, align 4, !dbg !8239
  br label %6, !dbg !8241

3:                                                ; preds = %0, %0
  store i32 3, i32* @test_result, align 4, !dbg !8242
  tail call fastcc void @test_finalize() #24, !dbg !8243
  br label %6, !dbg !8244

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8245
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6.109, i32 0, i32 0), i8* noundef %5) #25, !dbg !8246
  store i32 2, i32* @test_status, align 4, !dbg !8247
  br label %6, !dbg !8248

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8249
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @test_finalize() unnamed_addr #1 !dbg !8250 {
  tail call fastcc void @k_thread_abort.117(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8251
  %1 = tail call fastcc %struct.k_thread* @k_current_get.118() #26, !dbg !8254
  tail call fastcc void @k_thread_abort.117(%struct.k_thread* noundef %1) #24, !dbg !8255
  ret void, !dbg !8256
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @get_friendly_phase_name(i32 noundef %0) unnamed_addr #4 !dbg !8257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8261, metadata !DIExpression()), !dbg !8262
  %2 = icmp ult i32 %0, 6, !dbg !8263
  br i1 %2, label %3, label %6, !dbg !8263

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table.get_friendly_phase_name, i32 0, i32 %0, !dbg !8263
  %5 = load i8*, i8** %4, align 4, !dbg !8263
  br label %6, !dbg !8263

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16.110, i32 0, i32 0), %1 ], !dbg !8264
  ret i8* %7, !dbg !8266
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.117(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !8267 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8273, metadata !DIExpression()), !dbg !8274
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8275, !srcloc !8277
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !8278
  ret void, !dbg !8279
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.118() unnamed_addr #11 !dbg !8280 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.119() #26, !dbg !8283
  ret %struct.k_thread* %1, !dbg !8284
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.119() unnamed_addr #11 !dbg !8285 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8286, !srcloc !8288
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !8289
  ret %struct.k_thread* %1, !dbg !8290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_fail() local_unnamed_addr #1 !dbg !8291 {
  %1 = load i32, i32* @phase, align 4, !dbg !8292
  switch i32 %1, label %4 [
    i32 0, label %2
    i32 1, label %3
    i32 2, label %3
  ], !dbg !8293

2:                                                ; preds = %0
  store i32 5, i32* @test_result, align 4, !dbg !8294
  br label %6, !dbg !8296

3:                                                ; preds = %0, %0
  store i32 2, i32* @test_result, align 4, !dbg !8297
  tail call fastcc void @test_finalize() #24, !dbg !8298
  br label %6, !dbg !8299

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8300
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4.120, i32 0, i32 0), i8* noundef %5) #25, !dbg !8301
  store i32 2, i32* @test_status, align 4, !dbg !8302
  br label %6, !dbg !8303

6:                                                ; preds = %4, %3, %2
  ret void, !dbg !8304
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_test_pass() local_unnamed_addr #1 !dbg !8305 {
  %1 = load i32, i32* @phase, align 4, !dbg !8306
  %2 = icmp eq i32 %1, 2, !dbg !8307
  br i1 %2, label %3, label %4, !dbg !8307

3:                                                ; preds = %0
  store i32 1, i32* @test_result, align 4, !dbg !8308
  br label %8, !dbg !8310

4:                                                ; preds = %0
  %5 = tail call fastcc i8* @get_friendly_phase_name(i32 noundef %1) #24, !dbg !8311
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.121, i32 0, i32 0), i8* noundef %5) #25, !dbg !8312
  store i32 2, i32* @test_status, align 4, !dbg !8313
  %6 = load i32, i32* @phase, align 4, !dbg !8314
  %7 = icmp eq i32 %6, 1, !dbg !8316
  br i1 %7, label %8, label %9, !dbg !8317

8:                                                ; preds = %4, %3
  tail call fastcc void @test_finalize() #24, !dbg !8318
  br label %9, !dbg !8319

9:                                                ; preds = %8, %4
  ret void, !dbg !8319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_before(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8320 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8322, metadata !DIExpression()), !dbg !8323
  tail call fastcc void @z_test_1cpu_start() #24, !dbg !8324
  ret void, !dbg !8325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_start() unnamed_addr #1 !dbg !8326 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8328, !srcloc !8330
  ret void, !dbg !8331
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_simple_1cpu_after(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8332 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8334, metadata !DIExpression()), !dbg !8335
  tail call fastcc void @z_test_1cpu_stop() #24, !dbg !8336
  ret void, !dbg !8337
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_test_1cpu_stop() unnamed_addr #1 !dbg !8338 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8339, !srcloc !8341
  ret void, !dbg !8342
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %0, %struct.ztest_unit_test* noundef readonly %1) local_unnamed_addr #1 !dbg !8343 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8364, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8365, metadata !DIExpression()), !dbg !8367
  %3 = icmp eq %struct.ztest_unit_test* %1, null, !dbg !8368
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 1, !dbg !8369
  %5 = select i1 %3, %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* %4, !dbg !8369
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %5, metadata !8366, metadata !DIExpression()), !dbg !8367
  %6 = icmp ult %struct.ztest_unit_test* %5, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8370
  br i1 %6, label %7, label %16, !dbg !8373

7:                                                ; preds = %2, %13
  %8 = phi %struct.ztest_unit_test* [ %14, %13 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %8, metadata !8366, metadata !DIExpression()), !dbg !8367
  %9 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 0, i32 0, !dbg !8374
  %10 = load i8*, i8** %9, align 4, !dbg !8374
  %11 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %10) #25, !dbg !8377
  %12 = icmp eq i32 %11, 0, !dbg !8378
  br i1 %12, label %16, label %13, !dbg !8379

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %8, i32 1, !dbg !8380
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %14, metadata !8366, metadata !DIExpression()), !dbg !8367
  %15 = icmp ult %struct.ztest_unit_test* %14, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !8370
  br i1 %15, label %7, label %16, !dbg !8373, !llvm.loop !8381

16:                                               ; preds = %7, %13, %2
  %17 = phi %struct.ztest_unit_test* [ null, %2 ], [ null, %13 ], [ %8, %7 ], !dbg !8367
  ret %struct.ztest_unit_test* %17, !dbg !8383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_ztest_run_test_suite(i8* noundef %0) local_unnamed_addr #1 !dbg !8384 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8386, metadata !DIExpression()), !dbg !8387
  %2 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) #24, !dbg !8388
  %3 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %2) #24, !dbg !8389
  ret i32 %3, !dbg !8390
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %0) unnamed_addr #1 !dbg !8391 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8412, metadata !DIExpression()), !dbg !8414
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8413, metadata !DIExpression()), !dbg !8414
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %11, !dbg !8415

2:                                                ; preds = %1, %8
  %3 = phi %struct.ztest_suite_node* [ %9, %8 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8413, metadata !DIExpression()), !dbg !8414
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 0, i32 0, !dbg !8417
  %5 = load i8*, i8** %4, align 4, !dbg !8417
  %6 = tail call i32 @strcmp(i8* noundef %0, i8* noundef %5) #25, !dbg !8421
  %7 = icmp eq i32 %6, 0, !dbg !8422
  br i1 %7, label %11, label %8, !dbg !8423

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8424
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %9, metadata !8413, metadata !DIExpression()), !dbg !8414
  %10 = icmp ult %struct.ztest_suite_node* %9, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8425
  br i1 %10, label %2, label %11, !dbg !8415, !llvm.loop !8426

11:                                               ; preds = %2, %8, %1
  %12 = phi %struct.ztest_suite_node* [ null, %1 ], [ null, %8 ], [ %3, %2 ], !dbg !8414
  ret %struct.ztest_suite_node* %12, !dbg !8428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef %0) unnamed_addr #1 !dbg !8429 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8433, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8434, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata i8* null, metadata !8435, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata i32 0, metadata !8436, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata i32 0, metadata !8437, metadata !DIExpression()), !dbg !8440
  %2 = icmp eq %struct.ztest_suite_node* %0, null, !dbg !8441
  br i1 %2, label %3, label %4, !dbg !8443

3:                                                ; preds = %1
  store i32 2, i32* @test_status, align 4, !dbg !8444
  br label %68, !dbg !8446

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0, !dbg !8447
  %6 = load i8*, i8** %5, align 4, !dbg !8447
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.122, i32 0, i32 0), i8* noundef %6) #25, !dbg !8447
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.105, i32 0, i32 0)) #25, !dbg !8447
  store i1 false, i1* @current_test_failed_assumption, align 1, !dbg !8449
  store i32 0, i32* @test_result, align 4, !dbg !8450
  store i32 0, i32* @phase, align 4, !dbg !8451
  %7 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 1, !dbg !8452
  %8 = load i8* ()*, i8* ()** %7, align 4, !dbg !8452
  %9 = icmp eq i8* ()* %8, null, !dbg !8454
  br i1 %9, label %12, label %10, !dbg !8455

10:                                               ; preds = %4
  %11 = tail call i8* %8() #25, !dbg !8456
  call void @llvm.dbg.value(metadata i8* %11, metadata !8435, metadata !DIExpression()), !dbg !8440
  br label %12, !dbg !8458

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ null, %4 ], !dbg !8440
  call void @llvm.dbg.value(metadata i8* %13, metadata !8435, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata i32 0, metadata !8438, metadata !DIExpression()), !dbg !8459
  call void @llvm.dbg.value(metadata i32 undef, metadata !8438, metadata !DIExpression()), !dbg !8459
  call void @llvm.dbg.value(metadata i32 0, metadata !8436, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8434, metadata !DIExpression()), !dbg !8440
  %14 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 2), align 4
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8434, metadata !DIExpression()), !dbg !8440
  br label %15, !dbg !8460

15:                                               ; preds = %12, %49
  %16 = phi %struct.ztest_unit_test* [ %19, %49 ], [ null, %12 ], !dbg !8440
  %17 = phi i32 [ %50, %49 ], [ 0, %12 ], !dbg !8463
  call void @llvm.dbg.value(metadata i32 %17, metadata !8436, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %16, metadata !8434, metadata !DIExpression()), !dbg !8440
  %18 = load i8*, i8** %5, align 4, !dbg !8464
  %19 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %18, %struct.ztest_unit_test* noundef %16) #24, !dbg !8465
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !8434, metadata !DIExpression()), !dbg !8440
  %20 = icmp eq %struct.ztest_unit_test* %19, null, !dbg !8466
  br i1 %20, label %53, label %21, !dbg !8460

21:                                               ; preds = %15
  %22 = load i8*, i8** %5, align 4, !dbg !8467
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !8470
  %24 = load i8*, i8** %23, align 4, !dbg !8470
  %25 = tail call zeroext i1 %14(i8* noundef %22, i8* noundef %24) #25, !dbg !8471
  br i1 %25, label %26, label %49, !dbg !8472

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 4, !dbg !8473
  %28 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8473
  %29 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %28, i32 0, i32 0, !dbg !8475
  %30 = load i32, i32* %29, align 4, !dbg !8476
  %31 = add i32 %30, 1, !dbg !8476
  store i32 %31, i32* %29, align 4, !dbg !8476
  %32 = tail call fastcc i32 @run_test(%struct.ztest_suite_node* noundef nonnull %0, %struct.ztest_unit_test* noundef nonnull %19, i8* noundef %13) #24, !dbg !8477
  call void @llvm.dbg.value(metadata i32 %32, metadata !8437, metadata !DIExpression()), !dbg !8440
  switch i32 %32, label %49 [
    i32 0, label %33
    i32 2, label %36
    i32 1, label %39
  ], !dbg !8478

33:                                               ; preds = %26
  %34 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8479
  %35 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %34, i32 0, i32 3, !dbg !8482
  br label %42, !dbg !8483

36:                                               ; preds = %26
  %37 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8484
  %38 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %37, i32 0, i32 1, !dbg !8487
  br label %42, !dbg !8488

39:                                               ; preds = %26
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %27, align 4, !dbg !8489
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !8492
  br label %42, !dbg !8493

42:                                               ; preds = %36, %39, %33
  %43 = phi i32* [ %38, %36 ], [ %41, %39 ], [ %35, %33 ]
  %44 = load i32, i32* %43, align 4, !dbg !8494
  %45 = add i32 %44, 1, !dbg !8494
  store i32 %45, i32* %43, align 4, !dbg !8494
  %46 = icmp eq i32 %32, 1, !dbg !8495
  %47 = zext i1 %46 to i32, !dbg !8497
  %48 = add nsw i32 %17, %47, !dbg !8497
  br label %49, !dbg !8497

49:                                               ; preds = %42, %26, %21
  %50 = phi i32 [ %17, %21 ], [ %17, %26 ], [ %48, %42 ], !dbg !8463
  call void @llvm.dbg.value(metadata i32 %50, metadata !8436, metadata !DIExpression()), !dbg !8440
  %51 = load i32, i32* @test_status, align 4, !dbg !8498
  %52 = icmp eq i32 %51, 2, !dbg !8500
  br i1 %52, label %59, label %15, !dbg !8501, !llvm.loop !8502

53:                                               ; preds = %15
  %54 = load i32, i32* @test_status, align 4, !dbg !8504
  %55 = icmp eq i32 %54, 0, !dbg !8460
  call void @llvm.dbg.value(metadata i32 %17, metadata !8436, metadata !DIExpression()), !dbg !8440
  %56 = icmp ne i32 %17, 0
  %57 = select i1 %55, i1 %56, i1 false, !dbg !8506
  br i1 %57, label %58, label %59, !dbg !8506

58:                                               ; preds = %53
  store i32 1, i32* @test_status, align 4, !dbg !8507
  br label %59, !dbg !8509

59:                                               ; preds = %49, %53, %58
  %60 = phi i32 [ %17, %53 ], [ %17, %58 ], [ %50, %49 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8438, metadata !DIExpression()), !dbg !8459
  call void @llvm.dbg.value(metadata i32 %17, metadata !8436, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8434, metadata !DIExpression()), !dbg !8440
  %61 = icmp sgt i32 %60, 0, !dbg !8510
  %62 = load i8*, i8** %5, align 4, !dbg !8513
  %63 = select i1 %61, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19.123, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18.124, i32 0, i32 0)
  tail call void (i8*, ...) @printk(i8* noundef %63, i8* noundef %62) #25, !dbg !8513
  store i32 4, i32* @phase, align 4, !dbg !8514
  %64 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 4, !dbg !8515
  %65 = load void (i8*)*, void (i8*)** %64, align 4, !dbg !8515
  %66 = icmp eq void (i8*)* %65, null, !dbg !8517
  br i1 %66, label %68, label %67, !dbg !8518

67:                                               ; preds = %59
  tail call void %65(i8* noundef %13) #25, !dbg !8519
  br label %68, !dbg !8521

68:                                               ; preds = %59, %67, %3
  %69 = phi i32 [ -1, %3 ], [ %60, %67 ], [ %60, %59 ], !dbg !8440
  ret i32 %69, !dbg !8522
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @run_test(%struct.ztest_suite_node* noundef %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8523 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8527, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8528, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata i8* %2, metadata !8529, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.value(metadata i32 0, metadata !8530, metadata !DIExpression()), !dbg !8531
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 1, !dbg !8532
  %5 = load i8*, i8** %4, align 4, !dbg !8532
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20.125, i32 0, i32 0), i8* noundef %5) #25, !dbg !8532
  store i32 1, i32* @phase, align 4, !dbg !8534
  tail call fastcc void @get_start_time_cyc() #24, !dbg !8535
  %6 = bitcast %struct.ztest_suite_node* %0 to i8*, !dbg !8538
  %7 = bitcast %struct.ztest_unit_test* %1 to i8*, !dbg !8539
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 3, !dbg !8540
  %9 = load i32, i32* %8, align 4, !dbg !8540
  %10 = or i32 %9, 8, !dbg !8541
  tail call fastcc void @k_thread_create(i8* noundef %6, i8* noundef %7, i8* noundef %2, i32 noundef %10) #24, !dbg !8542
  tail call fastcc void @k_object_access_grant() #24, !dbg !8543
  tail call fastcc void @k_object_access_grant() #24, !dbg !8543
  tail call fastcc void @k_object_access_grant() #24, !dbg !8543
  %11 = load i8*, i8** %4, align 4, !dbg !8544
  %12 = icmp eq i8* %11, null, !dbg !8546
  br i1 %12, label %14, label %13, !dbg !8547

13:                                               ; preds = %3
  tail call fastcc void @k_thread_name_set(i8* noundef nonnull %11) #24, !dbg !8548
  br label %14, !dbg !8550

14:                                               ; preds = %13, %3
  %15 = load i32, i32* @test_result, align 4, !dbg !8551
  %16 = and i32 %15, -2, !dbg !8553
  %17 = icmp eq i32 %16, 4, !dbg !8553
  br i1 %17, label %19, label %18, !dbg !8553

18:                                               ; preds = %14
  tail call fastcc void @k_thread_start() #24, !dbg !8554
  tail call fastcc void @k_thread_join() #24, !dbg !8556
  br label %19, !dbg !8557

19:                                               ; preds = %18, %14
  store i32 3, i32* @phase, align 4, !dbg !8558
  %20 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 3, !dbg !8559
  %21 = load void (i8*)*, void (i8*)** %20, align 4, !dbg !8559
  %22 = icmp eq void (i8*)* %21, null, !dbg !8561
  br i1 %22, label %24, label %23, !dbg !8562

23:                                               ; preds = %19
  tail call void %21(i8* noundef %2) #25, !dbg !8563
  br label %24, !dbg !8565

24:                                               ; preds = %23, %19
  tail call fastcc void @run_test_rules(i1 noundef zeroext false, %struct.ztest_unit_test* noundef nonnull %1, i8* noundef %2) #24, !dbg !8566
  tail call fastcc void @get_test_duration_ms() #24, !dbg !8567
  %25 = load i32, i32* @tc_spend_time, align 4, !dbg !8568
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %1, i32 0, i32 4, !dbg !8570
  %27 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %26, align 4, !dbg !8570
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %27, i32 0, i32 4, !dbg !8571
  %29 = load i32, i32* %28, align 4, !dbg !8571
  %30 = icmp ugt i32 %25, %29, !dbg !8572
  br i1 %30, label %31, label %32, !dbg !8573

31:                                               ; preds = %24
  store i32 %25, i32* %28, align 4, !dbg !8574
  br label %32, !dbg !8576

32:                                               ; preds = %31, %24
  store i32 5, i32* @phase, align 4, !dbg !8577
  %33 = load i32, i32* @test_result, align 4, !dbg !8578
  switch i32 %33, label %34 [
    i32 5, label %38
    i32 2, label %38
  ], !dbg !8580

34:                                               ; preds = %32
  %35 = add i32 %33, -3, !dbg !8581
  %36 = icmp ult i32 %35, 2, !dbg !8581
  %37 = select i1 %36, i32 2, i32 0, !dbg !8581
  br label %38, !dbg !8581

38:                                               ; preds = %34, %32, %32
  %39 = phi i32 [ 1, %32 ], [ 1, %32 ], [ %37, %34 ], !dbg !8531
  call void @llvm.dbg.value(metadata i32 %39, metadata !8530, metadata !DIExpression()), !dbg !8531
  tail call fastcc void @cleanup_test() #24, !dbg !8583
  call void @llvm.dbg.value(metadata i32 %39, metadata !8530, metadata !DIExpression()), !dbg !8531
  %40 = tail call fastcc i32 @get_final_test_result(%struct.ztest_unit_test* noundef nonnull %1, i32 noundef %39) #24, !dbg !8586
  call void @llvm.dbg.value(metadata i32 %40, metadata !8530, metadata !DIExpression()), !dbg !8531
  %41 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %40) #24, !dbg !8587
  %42 = load i8*, i8** %4, align 4, !dbg !8587
  %43 = load i32, i32* @tc_spend_time, align 4, !dbg !8587
  %44 = freeze i32 %43
  %45 = udiv i32 %44, 1000, !dbg !8587
  %46 = mul i32 %45, 1000
  %47 = sub i32 %44, %46
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.126, i32 0, i32 0), i8* noundef %41, i8* noundef %42, i32 noundef %45, i32 noundef %47) #25, !dbg !8587
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([69 x i8], [69 x i8]* @.str.105, i32 0, i32 0)) #25, !dbg !8587
  %48 = icmp eq i32 %40, 2, !dbg !8589
  br i1 %48, label %49, label %52, !dbg !8591

49:                                               ; preds = %38
  %50 = load i1, i1* @current_test_failed_assumption, align 1, !dbg !8592
  br i1 %50, label %51, label %52, !dbg !8593

51:                                               ; preds = %49
  store i32 1, i32* @test_status, align 4, !dbg !8594
  br label %52, !dbg !8596

52:                                               ; preds = %51, %49, %38
  ret i32 %40, !dbg !8597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_start_time_cyc() unnamed_addr #1 !dbg !8598 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8599
  store i32 %1, i32* @tc_start_time, align 4, !dbg !8600
  ret void, !dbg !8601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8602 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8621, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8612, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), metadata !8613, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i32 1024, metadata !8614, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @test_cb, metadata !8615, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i8* %0, metadata !8616, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i8* %1, metadata !8617, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i8* %2, metadata !8618, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i32 -1, metadata !8619, metadata !DIExpression()), !dbg !8622
  call void @llvm.dbg.value(metadata i32 %3, metadata !8620, metadata !DIExpression()), !dbg !8622
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8623, !srcloc !8625
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef nonnull @ztest_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @ztest_thread_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @test_cb, i8* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef -1, i32 noundef %3, [1 x i64] [i64 -1]) #25, !dbg !8626
  ret void, !dbg !8627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !8628 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8633, metadata !DIExpression()), !dbg !8635
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8634, metadata !DIExpression()), !dbg !8635
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8636, !srcloc !8638
  ret void, !dbg !8639
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(i8* noundef %0) unnamed_addr #1 !dbg !8640 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8644, metadata !DIExpression()), !dbg !8646
  call void @llvm.dbg.value(metadata i8* %0, metadata !8645, metadata !DIExpression()), !dbg !8646
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8647, !srcloc !8649
  %2 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef nonnull @ztest_thread, i8* noundef %0) #25, !dbg !8650
  ret void, !dbg !8651
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start() unnamed_addr #1 !dbg !8652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8654, metadata !DIExpression()), !dbg !8655
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8656, !srcloc !8658
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef nonnull @ztest_thread) #25, !dbg !8659
  ret void, !dbg !8660
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_join() unnamed_addr #1 !dbg !8661 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !8666, metadata !DIExpression()), !dbg !8667
  call void @llvm.dbg.value(metadata %struct.k_thread* @ztest_thread, metadata !8665, metadata !DIExpression()), !dbg !8667
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8668, !srcloc !8670
  %1 = tail call i32 @z_impl_k_thread_join(%struct.k_thread* noundef nonnull @ztest_thread, [1 x i64] [i64 -1]) #25, !dbg !8671
  ret void, !dbg !8672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_rules(i1 noundef zeroext %0, %struct.ztest_unit_test* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !8673 {
  call void @llvm.dbg.value(metadata i1 %0, metadata !8677, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8693
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %1, metadata !8678, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata i8* %2, metadata !8679, metadata !DIExpression()), !dbg !8693
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), metadata !8680, metadata !DIExpression()), !dbg !8694
  br i1 icmp ult (%struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %struct.ztest_test_rule* getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0)), label %5, label %4, !dbg !8695

4:                                                ; preds = %17, %3
  ret void, !dbg !8696

5:                                                ; preds = %3, %17
  %6 = phi %struct.ztest_test_rule* [ %18, %17 ], [ getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %6, metadata !8680, metadata !DIExpression()), !dbg !8694
  br i1 %0, label %7, label %11, !dbg !8697

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 0, !dbg !8701
  %9 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %8, align 4, !dbg !8701
  %10 = icmp eq void (%struct.ztest_unit_test*, i8*)* %9, null, !dbg !8702
  br i1 %10, label %17, label %15, !dbg !8703

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 0, i32 1, !dbg !8704
  %13 = load void (%struct.ztest_unit_test*, i8*)*, void (%struct.ztest_unit_test*, i8*)** %12, align 4, !dbg !8704
  %14 = icmp eq void (%struct.ztest_unit_test*, i8*)* %13, null, !dbg !8706
  br i1 %14, label %17, label %15, !dbg !8707

15:                                               ; preds = %11, %7
  %16 = phi void (%struct.ztest_unit_test*, i8*)* [ %9, %7 ], [ %13, %11 ]
  tail call void %16(%struct.ztest_unit_test* noundef %1, i8* noundef %2) #25, !dbg !8708
  br label %17, !dbg !8709

17:                                               ; preds = %15, %7, %11
  %18 = getelementptr inbounds %struct.ztest_test_rule, %struct.ztest_test_rule* %6, i32 1, !dbg !8709
  call void @llvm.dbg.value(metadata %struct.ztest_test_rule* %18, metadata !8680, metadata !DIExpression()), !dbg !8694
  %19 = icmp ult %struct.ztest_test_rule* %18, getelementptr inbounds ([0 x %struct.ztest_test_rule], [0 x %struct.ztest_test_rule]* @_ztest_test_rule_list_end, i32 0, i32 0), !dbg !8710
  br i1 %19, label %5, label %4, !dbg !8695, !llvm.loop !8711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @get_test_duration_ms() unnamed_addr #1 !dbg !8713 {
  %1 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !8716
  %2 = load i32, i32* @tc_start_time, align 4, !dbg !8717
  %3 = sub i32 %1, %2, !dbg !8718
  call void @llvm.dbg.value(metadata i32 %3, metadata !8715, metadata !DIExpression()), !dbg !8719
  %4 = tail call fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %3) #24, !dbg !8720
  store i32 %4, i32* @tc_spend_time, align 4, !dbg !8721
  ret void, !dbg !8722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cleanup_test() unnamed_addr #1 !dbg !8723 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* undef, metadata !8727, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 0, metadata !8728, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata i32 0, metadata !8729, metadata !DIExpression()), !dbg !8730
  tail call fastcc void @k_thread_abort.117(%struct.k_thread* noundef nonnull @ztest_thread) #24, !dbg !8731
  call void @llvm.dbg.value(metadata i32 0, metadata !8728, metadata !DIExpression()), !dbg !8730
  ret void, !dbg !8734
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_final_test_result(%struct.ztest_unit_test* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8735 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8739, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i32 %1, metadata !8740, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i32 -1, metadata !8741, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), metadata !8742, metadata !DIExpression()), !dbg !8751
  br i1 icmp ult (%struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %struct.ztest_expected_result_entry* getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0)), label %3, label %31, !dbg !8752

3:                                                ; preds = %2
  %4 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 1
  %5 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 0
  br label %6, !dbg !8752

6:                                                ; preds = %3, %19
  %7 = phi %struct.ztest_expected_result_entry* [ getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_start, i32 0, i32 0), %3 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %7, metadata !8742, metadata !DIExpression()), !dbg !8751
  %8 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 1, !dbg !8753
  %9 = load i8*, i8** %8, align 4, !dbg !8753
  %10 = load i8*, i8** %4, align 4, !dbg !8757
  %11 = tail call i32 @strcmp(i8* noundef %9, i8* noundef %10) #25, !dbg !8758
  %12 = icmp eq i32 %11, 0, !dbg !8759
  br i1 %12, label %13, label %19, !dbg !8760

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 0, !dbg !8761
  %15 = load i8*, i8** %14, align 4, !dbg !8761
  %16 = load i8*, i8** %5, align 4, !dbg !8762
  %17 = tail call i32 @strcmp(i8* noundef %15, i8* noundef %16) #25, !dbg !8763
  %18 = icmp eq i32 %17, 0, !dbg !8764
  br i1 %18, label %22, label %19, !dbg !8765

19:                                               ; preds = %6, %13
  %20 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 1, !dbg !8766
  call void @llvm.dbg.value(metadata %struct.ztest_expected_result_entry* %20, metadata !8742, metadata !DIExpression()), !dbg !8751
  %21 = icmp ult %struct.ztest_expected_result_entry* %20, getelementptr inbounds ([0 x %struct.ztest_expected_result_entry], [0 x %struct.ztest_expected_result_entry]* @_ztest_expected_result_entry_list_end, i32 0, i32 0), !dbg !8767
  br i1 %21, label %6, label %31, !dbg !8752, !llvm.loop !8768

22:                                               ; preds = %13
  %23 = getelementptr inbounds %struct.ztest_expected_result_entry, %struct.ztest_expected_result_entry* %7, i32 0, i32 2, !dbg !8770
  %24 = load i32, i32* %23, align 4, !dbg !8770
  call void @llvm.dbg.value(metadata i32 %24, metadata !8741, metadata !DIExpression()), !dbg !8750
  switch i32 %24, label %31 [
    i32 0, label %25
    i32 1, label %28
  ], !dbg !8772

25:                                               ; preds = %22
  %26 = icmp ne i32 %1, 1, !dbg !8773
  %27 = zext i1 %26 to i32, !dbg !8776
  br label %31, !dbg !8777

28:                                               ; preds = %22
  %29 = icmp ne i32 %1, 2, !dbg !8778
  %30 = zext i1 %29 to i32, !dbg !8781
  br label %31, !dbg !8782

31:                                               ; preds = %19, %2, %22, %28, %25
  %32 = phi i32 [ %27, %25 ], [ %30, %28 ], [ %1, %22 ], [ %1, %2 ], [ %1, %19 ], !dbg !8750
  ret i32 %32, !dbg !8783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @TC_RESULT_TO_STR(i32 noundef %0) unnamed_addr #4 !dbg !8784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8788, metadata !DIExpression()), !dbg !8789
  %2 = icmp ult i32 %0, 3, !dbg !8790
  br i1 %2, label %3, label %6, !dbg !8790

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.TC_RESULT_TO_STR, i32 0, i32 %0, !dbg !8790
  %5 = load i8*, i8** %4, align 4, !dbg !8790
  br label %6, !dbg !8790

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27.127, i32 0, i32 0), %1 ], !dbg !8791
  ret i8* %7, !dbg !8793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !8794 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !8795
  ret i32 %1, !dbg !8796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_cyc_to_ms_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !8797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8800, metadata !DIExpression()), !dbg !8801
  %2 = zext i32 %0 to i64, !dbg !8802
  call void @llvm.dbg.value(metadata i64 %2, metadata !8803, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i32 32000000, metadata !8808, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i32 1000, metadata !8809, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 1, metadata !8810, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 1, metadata !8811, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 1, metadata !8812, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 0, metadata !8813, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 0, metadata !8814, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i8 1, metadata !8815, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i64 0, metadata !8816, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i64 31999, metadata !8816, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i64 31999, metadata !8816, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i64 31999, metadata !8816, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i64 31999, metadata !8816, metadata !DIExpression()), !dbg !8820
  %3 = add nuw nsw i64 %2, 31999, !dbg !8822
  call void @llvm.dbg.value(metadata i64 %3, metadata !8803, metadata !DIExpression()), !dbg !8820
  %4 = icmp ult i32 %0, -31999
  %5 = trunc i64 %3 to i32, !dbg !8825
  %6 = udiv i32 %5, 32000, !dbg !8825
  %7 = zext i32 %6 to i64, !dbg !8825
  %8 = udiv i64 %3, 32000, !dbg !8825
  %9 = select i1 %4, i64 %7, i64 %8, !dbg !8825
  %10 = trunc i64 %9 to i32, !dbg !8827
  ret i32 %10, !dbg !8828
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !8829 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !8831
  ret i32 %1, !dbg !8832
}

; Function Attrs: noinline nounwind optsize
define internal void @test_cb(i8* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2) #1 !dbg !8833 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8835, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i8* %1, metadata !8836, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i8* %2, metadata !8837, metadata !DIExpression()), !dbg !8840
  call void @llvm.dbg.value(metadata i8* %0, metadata !8838, metadata !DIExpression()), !dbg !8840
  %4 = bitcast i8* %1 to %struct.ztest_unit_test*, !dbg !8841
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8839, metadata !DIExpression()), !dbg !8840
  store i32 0, i32* @test_result, align 4, !dbg !8842
  tail call fastcc void @run_test_rules(i1 noundef zeroext true, %struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8843
  %5 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !8844
  %6 = bitcast i8* %5 to void (i8*)**, !dbg !8844
  %7 = load void (i8*)*, void (i8*)** %6, align 4, !dbg !8844
  %8 = icmp eq void (i8*)* %7, null, !dbg !8846
  br i1 %8, label %10, label %9, !dbg !8847

9:                                                ; preds = %3
  tail call void %7(i8* noundef %2) #25, !dbg !8848
  br label %10, !dbg !8850

10:                                               ; preds = %9, %3
  tail call fastcc void @run_test_functions(%struct.ztest_unit_test* noundef %4, i8* noundef %2) #24, !dbg !8851
  store i32 1, i32* @test_result, align 4, !dbg !8852
  ret void, !dbg !8853
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @run_test_functions(%struct.ztest_unit_test* nocapture noundef readonly %0, i8* noundef %1) unnamed_addr #1 !dbg !8854 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* undef, metadata !8858, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %0, metadata !8859, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata i8* %1, metadata !8860, metadata !DIExpression()), !dbg !8861
  store i32 2, i32* @phase, align 4, !dbg !8862
  %3 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %0, i32 0, i32 2, !dbg !8863
  %4 = load void (i8*)*, void (i8*)** %3, align 4, !dbg !8863
  tail call void %4(i8* noundef %1) #25, !dbg !8864
  ret void, !dbg !8865
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_ztest_run_test_suites(i8* noundef %0) local_unnamed_addr #1 !dbg !8866 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8870, metadata !DIExpression()), !dbg !8874
  call void @llvm.dbg.value(metadata i32 0, metadata !8871, metadata !DIExpression()), !dbg !8874
  %2 = load i32, i32* @test_status, align 4, !dbg !8875
  %3 = icmp eq i32 %2, 2, !dbg !8877
  br i1 %3, label %17, label %4, !dbg !8878

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8872, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata i32 0, metadata !8871, metadata !DIExpression()), !dbg !8874
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %5, label %15, !dbg !8880

5:                                                ; preds = %4, %5
  %6 = phi %struct.ztest_suite_node* [ %12, %5 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %4 ]
  %7 = phi i32 [ %9, %5 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %6, metadata !8872, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata i32 %7, metadata !8871, metadata !DIExpression()), !dbg !8874
  %8 = tail call fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef nonnull %6, i8* noundef %0) #24, !dbg !8881
  %9 = add nsw i32 %8, %7, !dbg !8884
  call void @llvm.dbg.value(metadata i32 %9, metadata !8871, metadata !DIExpression()), !dbg !8874
  %10 = load i32, i32* @test_status, align 4, !dbg !8885
  %11 = icmp ne i32 %10, 2, !dbg !8887
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %6, i32 1, !dbg !8888
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8872, metadata !DIExpression()), !dbg !8879
  %13 = icmp ult %struct.ztest_suite_node* %12, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)
  %14 = select i1 %11, i1 %13, i1 false, !dbg !8889
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %12, metadata !8872, metadata !DIExpression()), !dbg !8879
  call void @llvm.dbg.value(metadata i32 %9, metadata !8871, metadata !DIExpression()), !dbg !8874
  br i1 %14, label %5, label %15, !dbg !8889, !llvm.loop !8890

15:                                               ; preds = %5, %4
  %16 = phi i32 [ 0, %4 ], [ %9, %5 ], !dbg !8874
  call void @llvm.dbg.value(metadata i32 %16, metadata !8871, metadata !DIExpression()), !dbg !8874
  tail call fastcc void @__ztest_show_suite_summary() #24, !dbg !8892
  br label %17, !dbg !8893

17:                                               ; preds = %1, %15
  %18 = phi i32 [ %16, %15 ], [ 0, %1 ], !dbg !8874
  ret i32 %18, !dbg !8894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @__ztest_run_test_suite(%struct.ztest_suite_node* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8895 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8899, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i8* %1, metadata !8900, metadata !DIExpression()), !dbg !8910
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 6, !dbg !8911
  %4 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %3, align 4, !dbg !8911
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %4, metadata !8901, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8910
  tail call fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* noundef %0) #24, !dbg !8912
  call void @llvm.dbg.value(metadata i32 0, metadata !8903, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 undef, metadata !8903, metadata !DIExpression()), !dbg !8913
  %5 = load i1 (i8*, %struct.ztest_suite_node*)*, i1 (i8*, %struct.ztest_suite_node*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 1), align 4
  %6 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 1
  %7 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8902, metadata !DIExpression()), !dbg !8910
  %8 = tail call zeroext i1 %5(i8* noundef %1, %struct.ztest_suite_node* noundef %0) #25, !dbg !8914
  br i1 %8, label %9, label %16, !dbg !8915

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %4, i32 0, i32 2
  %11 = tail call fastcc i32 @z_ztest_run_test_suite_ptr(%struct.ztest_suite_node* noundef nonnull %0) #24, !dbg !8916
  call void @llvm.dbg.value(metadata i32 %11, metadata !8905, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.value(metadata i32 1, metadata !8902, metadata !DIExpression()), !dbg !8910
  %12 = load i32, i32* %7, align 4, !dbg !8918
  %13 = add i32 %12, 1, !dbg !8918
  store i32 %13, i32* %7, align 4, !dbg !8918
  %14 = icmp ne i32 %11, 0, !dbg !8919
  %15 = zext i1 %14 to i32, !dbg !8920
  br label %16, !dbg !8921

16:                                               ; preds = %2, %9
  %17 = phi i32* [ %10, %9 ], [ %6, %2 ]
  %18 = phi i32 [ %15, %9 ], [ 1, %2 ]
  %19 = phi i32 [ 1, %9 ], [ 0, %2 ], !dbg !8910
  %20 = load i32, i32* %17, align 4, !dbg !8922
  %21 = add i32 %20, %18, !dbg !8922
  store i32 %21, i32* %17, align 4, !dbg !8922
  call void @llvm.dbg.value(metadata i32 %19, metadata !8902, metadata !DIExpression()), !dbg !8910
  call void @llvm.dbg.value(metadata i32 undef, metadata !8903, metadata !DIExpression()), !dbg !8913
  ret i32 %19, !dbg !8923
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary() unnamed_addr #1 !dbg !8924 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.28.131, i32 0, i32 0)) #25, !dbg !8928
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !8926, metadata !DIExpression()), !dbg !8929
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %2, label %1, !dbg !8930

1:                                                ; preds = %2, %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.29.132, i32 0, i32 0)) #25, !dbg !8931
  ret void, !dbg !8932

2:                                                ; preds = %0, %2
  %3 = phi %struct.ztest_suite_node* [ %4, %2 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %3, metadata !8926, metadata !DIExpression()), !dbg !8929
  tail call fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* noundef nonnull %3) #24, !dbg !8933
  %4 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %3, i32 1, !dbg !8936
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !8926, metadata !DIExpression()), !dbg !8929
  %5 = icmp ult %struct.ztest_suite_node* %4, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !8937
  br i1 %5, label %2, label %1, !dbg !8930, !llvm.loop !8938
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_verbose(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8940 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8944, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8945, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.value(metadata i32 0, metadata !8946, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.value(metadata i32 0, metadata !8947, metadata !DIExpression()), !dbg !8948
  tail call fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* noundef %0) #24, !dbg !8949
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 poison, metadata !8947, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8945, metadata !DIExpression()), !dbg !8948
  %3 = load i8*, i8** %2, align 4, !dbg !8950
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8951
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8945, metadata !DIExpression()), !dbg !8948
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8952
  br i1 %5, label %36, label %6, !dbg !8953

6:                                                ; preds = %1, %20
  %7 = phi %struct.ztest_unit_test* [ %34, %20 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8954
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !8954
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 1, !dbg !8957
  %11 = load i32, i32* %10, align 4, !dbg !8957
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !8958
  %13 = load i32, i32* %12, align 4, !dbg !8958
  %14 = icmp eq i32 %11, %13, !dbg !8959
  br i1 %14, label %20, label %15, !dbg !8960

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 3, !dbg !8961
  %17 = load i32, i32* %16, align 4, !dbg !8961
  %18 = icmp ne i32 %17, %13, !dbg !8963
  %19 = zext i1 %18 to i32
  br label %20

20:                                               ; preds = %15, %6
  %21 = phi i32 [ 2, %6 ], [ %19, %15 ], !dbg !8964
  call void @llvm.dbg.value(metadata i32 %21, metadata !8946, metadata !DIExpression()), !dbg !8948
  %22 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %21) #24, !dbg !8965
  %23 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 0, !dbg !8965
  %24 = load i8*, i8** %23, align 4, !dbg !8965
  %25 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 1, !dbg !8965
  %26 = load i8*, i8** %25, align 4, !dbg !8965
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 4, !dbg !8965
  %28 = load i32, i32* %27, align 4, !dbg !8965
  %29 = freeze i32 %28
  %30 = udiv i32 %29, 1000, !dbg !8965
  %31 = mul i32 %30, 1000
  %32 = sub i32 %29, %31
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.133, i32 0, i32 0), i8* noundef %22, i8* noundef %24, i8* noundef %26, i32 noundef %30, i32 noundef %32) #25, !dbg !8965
  call void @llvm.dbg.value(metadata i32 poison, metadata !8947, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8945, metadata !DIExpression()), !dbg !8948
  %33 = load i8*, i8** %2, align 4, !dbg !8950
  %34 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %33, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8951
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %34, metadata !8945, metadata !DIExpression()), !dbg !8948
  %35 = icmp eq %struct.ztest_unit_test* %34, null, !dbg !8952
  br i1 %35, label %36, label %6, !dbg !8953, !llvm.loop !8966

36:                                               ; preds = %20, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31.134, i32 0, i32 0)) #25, !dbg !8968
  ret void, !dbg !8969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_show_suite_summary_oneline(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8970 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !8972, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8974, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8975, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8976, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8977, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8978, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8979, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8980, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8981, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8982, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8983, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8984, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8985, metadata !DIExpression()), !dbg !8986
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !8985, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !8984, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8976, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8975, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8974, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 0, metadata !8973, metadata !DIExpression()), !dbg !8986
  %3 = load i8*, i8** %2, align 4, !dbg !8987
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !8988
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !8984, metadata !DIExpression()), !dbg !8986
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !8989
  br i1 %5, label %58, label %6, !dbg !8990

6:                                                ; preds = %1, %34
  %7 = phi %struct.ztest_unit_test* [ %39, %34 ], [ %4, %1 ]
  %8 = phi i32 [ %18, %34 ], [ 0, %1 ]
  %9 = phi i32 [ %13, %34 ], [ 0, %1 ]
  %10 = phi i32 [ %37, %34 ], [ 0, %1 ]
  %11 = phi i32 [ %36, %34 ], [ 0, %1 ]
  %12 = phi i32 [ %35, %34 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8985, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %9, metadata !8976, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %10, metadata !8975, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %11, metadata !8974, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %12, metadata !8973, metadata !DIExpression()), !dbg !8986
  %13 = add nuw nsw i32 %9, 1, !dbg !8991
  call void @llvm.dbg.value(metadata i32 %13, metadata !8976, metadata !DIExpression()), !dbg !8986
  %14 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !8993
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %14, align 4, !dbg !8993
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 4, !dbg !8994
  %17 = load i32, i32* %16, align 4, !dbg !8994
  %18 = add i32 %17, %8, !dbg !8995
  call void @llvm.dbg.value(metadata i32 %18, metadata !8985, metadata !DIExpression()), !dbg !8986
  %19 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 1, !dbg !8996
  %20 = load i32, i32* %19, align 4, !dbg !8996
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 0, !dbg !8998
  %22 = load i32, i32* %21, align 4, !dbg !8998
  %23 = icmp eq i32 %20, %22, !dbg !8999
  br i1 %23, label %24, label %26, !dbg !9000

24:                                               ; preds = %6
  %25 = add nsw i32 %10, 1, !dbg !9001
  call void @llvm.dbg.value(metadata i32 %25, metadata !8975, metadata !DIExpression()), !dbg !8986
  br label %34, !dbg !9003

26:                                               ; preds = %6
  %27 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !9004
  %28 = load i32, i32* %27, align 4, !dbg !9004
  %29 = icmp eq i32 %28, %22, !dbg !9006
  br i1 %29, label %30, label %32, !dbg !9007

30:                                               ; preds = %26
  %31 = add nsw i32 %12, 1, !dbg !9008
  call void @llvm.dbg.value(metadata i32 %31, metadata !8973, metadata !DIExpression()), !dbg !8986
  br label %34, !dbg !9010

32:                                               ; preds = %26
  %33 = add nsw i32 %11, 1, !dbg !9011
  call void @llvm.dbg.value(metadata i32 %33, metadata !8974, metadata !DIExpression()), !dbg !8986
  br label %34

34:                                               ; preds = %30, %32, %24
  %35 = phi i32 [ %12, %24 ], [ %31, %30 ], [ %12, %32 ], !dbg !8986
  %36 = phi i32 [ %11, %24 ], [ %11, %30 ], [ %33, %32 ], !dbg !8986
  %37 = phi i32 [ %25, %24 ], [ %10, %30 ], [ %10, %32 ], !dbg !8986
  call void @llvm.dbg.value(metadata i32 %18, metadata !8985, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !8984, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %13, metadata !8976, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %37, metadata !8975, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %36, metadata !8974, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %35, metadata !8973, metadata !DIExpression()), !dbg !8986
  %38 = load i8*, i8** %2, align 4, !dbg !8987
  %39 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %38, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !8988
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %39, metadata !8984, metadata !DIExpression()), !dbg !8986
  %40 = icmp eq %struct.ztest_unit_test* %39, null, !dbg !8989
  br i1 %40, label %41, label %6, !dbg !8990, !llvm.loop !9013

41:                                               ; preds = %34
  %42 = icmp eq i32 %13, %37, !dbg !9015
  br i1 %42, label %58, label %43, !dbg !9017

43:                                               ; preds = %41
  %44 = icmp sgt i32 %36, 0, !dbg !9018
  %45 = zext i1 %44 to i32, !dbg !9020
  call void @llvm.dbg.value(metadata i32 %45, metadata !8983, metadata !DIExpression()), !dbg !8986
  %46 = sub nsw i32 %13, %37, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %46, metadata !8977, metadata !DIExpression()), !dbg !8986
  %47 = mul nsw i32 %35, 100000, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %47, metadata !8978, metadata !DIExpression()), !dbg !8986
  %48 = sdiv i32 %47, %46, !dbg !9023
  call void @llvm.dbg.value(metadata i32 %48, metadata !8979, metadata !DIExpression()), !dbg !8986
  %49 = sdiv i32 %48, 1000, !dbg !9024
  call void @llvm.dbg.value(metadata i32 %49, metadata !8980, metadata !DIExpression()), !dbg !8986
  %50 = mul nsw i32 %49, -1000, !dbg !9025
  %51 = add i32 %50, %48, !dbg !9026
  %52 = sdiv i32 %51, 10, !dbg !9027
  call void @llvm.dbg.value(metadata i32 %52, metadata !8981, metadata !DIExpression()), !dbg !8986
  %53 = mul nsw i32 %52, -10, !dbg !9028
  %54 = add i32 %53, %51, !dbg !9029
  call void @llvm.dbg.value(metadata i32 %54, metadata !8982, metadata !DIExpression()), !dbg !8986
  %55 = icmp sgt i32 %54, 4, !dbg !9030
  %56 = zext i1 %55 to i32, !dbg !9032
  %57 = add nsw i32 %52, %56, !dbg !9032
  br label %58, !dbg !9032

58:                                               ; preds = %1, %43, %41
  %59 = phi i32 [ %18, %41 ], [ %18, %43 ], [ 0, %1 ]
  %60 = phi i32 [ %13, %41 ], [ %13, %43 ], [ 0, %1 ]
  %61 = phi i32 [ %37, %41 ], [ %37, %43 ], [ 0, %1 ]
  %62 = phi i32 [ %36, %41 ], [ %36, %43 ], [ 0, %1 ]
  %63 = phi i32 [ %35, %41 ], [ %35, %43 ], [ 0, %1 ]
  %64 = phi i32 [ 0, %41 ], [ %49, %43 ], [ 0, %1 ], !dbg !9033
  %65 = phi i32 [ 0, %41 ], [ %57, %43 ], [ 0, %1 ], !dbg !9033
  %66 = phi i32 [ 2, %41 ], [ %45, %43 ], [ 2, %1 ], !dbg !9033
  call void @llvm.dbg.value(metadata i32 %66, metadata !8983, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %65, metadata !8981, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.value(metadata i32 %64, metadata !8980, metadata !DIExpression()), !dbg !8986
  %67 = tail call fastcc i8* @TC_RESULT_TO_STR(i32 noundef %66) #24, !dbg !9034
  %68 = load i8*, i8** %2, align 4, !dbg !9034
  %69 = freeze i32 %59
  %70 = udiv i32 %69, 1000, !dbg !9034
  %71 = mul i32 %70, 1000
  %72 = sub i32 %69, %71
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([100 x i8], [100 x i8]* @.str.32.135, i32 0, i32 0), i8* noundef %67, i32 noundef %64, i32 noundef %65, i8* noundef %68, i32 noundef %63, i32 noundef %62, i32 noundef %61, i32 noundef %60, i32 noundef %70, i32 noundef %72) #25, !dbg !9034
  ret void, !dbg !9035
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__ztest_init_unit_test_result_for_suite(%struct.ztest_suite_node* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9036 {
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %0, metadata !9038, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9039, metadata !DIExpression()), !dbg !9040
  %2 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* null, metadata !9039, metadata !DIExpression()), !dbg !9040
  %3 = load i8*, i8** %2, align 4, !dbg !9041
  %4 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %3, %struct.ztest_unit_test* noundef null) #24, !dbg !9042
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %4, metadata !9039, metadata !DIExpression()), !dbg !9040
  %5 = icmp eq %struct.ztest_unit_test* %4, null, !dbg !9043
  br i1 %5, label %22, label %6, !dbg !9044

6:                                                ; preds = %1, %6
  %7 = phi %struct.ztest_unit_test* [ %20, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %7, i32 0, i32 4, !dbg !9045
  %9 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9045
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %9, i32 0, i32 0, !dbg !9047
  store i32 0, i32* %10, align 4, !dbg !9048
  %11 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9049
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %11, i32 0, i32 1, !dbg !9050
  store i32 0, i32* %12, align 4, !dbg !9051
  %13 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9052
  %14 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %13, i32 0, i32 2, !dbg !9053
  store i32 0, i32* %14, align 4, !dbg !9054
  %15 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9055
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %15, i32 0, i32 3, !dbg !9056
  store i32 0, i32* %16, align 4, !dbg !9057
  %17 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %8, align 4, !dbg !9058
  %18 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %17, i32 0, i32 4, !dbg !9059
  store i32 0, i32* %18, align 4, !dbg !9060
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %7, metadata !9039, metadata !DIExpression()), !dbg !9040
  %19 = load i8*, i8** %2, align 4, !dbg !9041
  %20 = tail call %struct.ztest_unit_test* @z_ztest_get_next_test(i8* noundef %19, %struct.ztest_unit_test* noundef nonnull %7) #24, !dbg !9042
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %20, metadata !9039, metadata !DIExpression()), !dbg !9040
  %21 = icmp eq %struct.ztest_unit_test* %20, null, !dbg !9043
  br i1 %21, label %22, label %6, !dbg !9044, !llvm.loop !9061

22:                                               ; preds = %6, %1
  ret void, !dbg !9063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_verify_all_test_suites_ran() local_unnamed_addr #1 !dbg !9064 {
  call void @llvm.dbg.value(metadata i8 1, metadata !9066, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), metadata !9067, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 poison, metadata !9066, metadata !DIExpression()), !dbg !9069
  br i1 icmp ult (%struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %struct.ztest_suite_node* getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0)), label %3, label %1, !dbg !9070

1:                                                ; preds = %14, %0
  %2 = phi i1 [ true, %0 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9068, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i8 poison, metadata !9066, metadata !DIExpression()), !dbg !9069
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %18, label %33, !dbg !9074

3:                                                ; preds = %0, %14
  %4 = phi %struct.ztest_suite_node* [ %16, %14 ], [ getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_start, i32 0, i32 0), %0 ]
  %5 = phi i1 [ %15, %14 ], [ true, %0 ]
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %4, metadata !9067, metadata !DIExpression()), !dbg !9069
  %6 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 6, !dbg !9076
  %7 = load %struct.ztest_suite_stats*, %struct.ztest_suite_stats** %6, align 4, !dbg !9076
  %8 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %7, i32 0, i32 0, !dbg !9080
  %9 = load i32, i32* %8, align 4, !dbg !9080
  %10 = icmp eq i32 %9, 0, !dbg !9081
  br i1 %10, label %11, label %14, !dbg !9082

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 0, i32 0, !dbg !9083
  %13 = load i8*, i8** %12, align 4, !dbg !9083
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7.136, i32 0, i32 0), i8* noundef %13) #25, !dbg !9085
  call void @llvm.dbg.value(metadata i8 0, metadata !9066, metadata !DIExpression()), !dbg !9069
  br label %14, !dbg !9086

14:                                               ; preds = %3, %11
  %15 = phi i1 [ false, %11 ], [ %5, %3 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9066, metadata !DIExpression()), !dbg !9069
  %16 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %4, i32 1, !dbg !9087
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %16, metadata !9067, metadata !DIExpression()), !dbg !9069
  %17 = icmp ult %struct.ztest_suite_node* %16, getelementptr inbounds ([0 x %struct.ztest_suite_node], [0 x %struct.ztest_suite_node]* @_ztest_suite_node_list_end, i32 0, i32 0), !dbg !9088
  br i1 %17, label %3, label %1, !dbg !9070, !llvm.loop !9089

18:                                               ; preds = %1, %29
  %19 = phi %struct.ztest_unit_test* [ %31, %29 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %1 ]
  %20 = phi i1 [ %30, %29 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %19, metadata !9068, metadata !DIExpression()), !dbg !9069
  %21 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 0, !dbg !9091
  %22 = load i8*, i8** %21, align 4, !dbg !9091
  %23 = tail call fastcc %struct.ztest_suite_node* @ztest_find_test_suite(i8* noundef %22) #24, !dbg !9094
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %23, metadata !9067, metadata !DIExpression()), !dbg !9069
  %24 = icmp eq %struct.ztest_suite_node* %23, null, !dbg !9095
  br i1 %24, label %25, label %29, !dbg !9097

25:                                               ; preds = %18
  %26 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 0, i32 1, !dbg !9098
  %27 = load i8*, i8** %26, align 4, !dbg !9098
  %28 = load i8*, i8** %21, align 4, !dbg !9100
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8.137, i32 0, i32 0), i8* noundef %27, i8* noundef %28) #25, !dbg !9101
  call void @llvm.dbg.value(metadata i8 0, metadata !9066, metadata !DIExpression()), !dbg !9069
  br label %29, !dbg !9102

29:                                               ; preds = %18, %25
  %30 = phi i1 [ false, %25 ], [ %20, %18 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9066, metadata !DIExpression()), !dbg !9069
  %31 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %19, i32 1, !dbg !9103
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %31, metadata !9068, metadata !DIExpression()), !dbg !9069
  %32 = icmp ult %struct.ztest_unit_test* %31, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9104
  br i1 %32, label %18, label %33, !dbg !9074, !llvm.loop !9105

33:                                               ; preds = %29, %1
  %34 = phi i1 [ %2, %1 ], [ %30, %29 ]
  br i1 %34, label %36, label %35, !dbg !9107

35:                                               ; preds = %33
  store i32 1, i32* @test_status, align 4, !dbg !9108
  br label %36, !dbg !9111

36:                                               ; preds = %35, %33
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), metadata !9068, metadata !DIExpression()), !dbg !9069
  br i1 icmp ult (%struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %struct.ztest_unit_test* getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0)), label %37, label %60, !dbg !9112

37:                                               ; preds = %36, %57
  %38 = phi %struct.ztest_unit_test* [ %58, %57 ], [ getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_start, i32 0, i32 0), %36 ]
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %38, metadata !9068, metadata !DIExpression()), !dbg !9069
  %39 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 4, !dbg !9114
  %40 = load %struct.ztest_unit_test_stats*, %struct.ztest_unit_test_stats** %39, align 4, !dbg !9114
  %41 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 2, !dbg !9118
  %42 = load i32, i32* %41, align 4, !dbg !9118
  %43 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 3, !dbg !9119
  %44 = load i32, i32* %43, align 4, !dbg !9119
  %45 = add i32 %44, %42, !dbg !9120
  %46 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 1, !dbg !9121
  %47 = load i32, i32* %46, align 4, !dbg !9121
  %48 = add i32 %45, %47, !dbg !9122
  %49 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %40, i32 0, i32 0, !dbg !9123
  %50 = load i32, i32* %49, align 4, !dbg !9123
  %51 = icmp eq i32 %48, %50, !dbg !9124
  br i1 %51, label %57, label %52, !dbg !9125

52:                                               ; preds = %37
  %53 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 0, !dbg !9126
  %54 = load i8*, i8** %53, align 4, !dbg !9126
  %55 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 0, i32 1, !dbg !9128
  %56 = load i8*, i8** %55, align 4, !dbg !9128
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.138, i32 0, i32 0), i8* noundef %54, i8* noundef %56) #25, !dbg !9129
  store i32 1, i32* @test_status, align 4, !dbg !9130
  br label %57, !dbg !9131

57:                                               ; preds = %37, %52
  %58 = getelementptr inbounds %struct.ztest_unit_test, %struct.ztest_unit_test* %38, i32 1, !dbg !9132
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test* %58, metadata !9068, metadata !DIExpression()), !dbg !9069
  %59 = icmp ult %struct.ztest_unit_test* %58, getelementptr inbounds ([0 x %struct.ztest_unit_test], [0 x %struct.ztest_unit_test]* @_ztest_unit_test_list_end, i32 0, i32 0), !dbg !9133
  br i1 %59, label %37, label %60, !dbg !9112, !llvm.loop !9134

60:                                               ; preds = %57, %36
  ret void, !dbg !9136
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ztest_run_all(i8* noundef %0) local_unnamed_addr #1 !dbg !9137 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9139, metadata !DIExpression()), !dbg !9140
  %2 = load void (i8*)*, void (i8*)** getelementptr inbounds (%struct.ztest_arch_api, %struct.ztest_arch_api* @ztest_api, i32 0, i32 0), align 4, !dbg !9141
  tail call void %2(i8* noundef %0) #25, !dbg !9142
  ret void, !dbg !9143
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @test_main() local_unnamed_addr #1 !dbg !9144 {
  tail call void @ztest_run_all(i8* noundef null) #24, !dbg !9145
  tail call void @ztest_verify_all_test_suites_ran() #24, !dbg !9146
  ret void, !dbg !9147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !9148 {
  tail call void @test_main() #24, !dbg !9149
  tail call void @end_report() #24, !dbg !9150
  ret void, !dbg !9151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ztest_run_all(i8* noundef %0) #1 !dbg !9152 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9154, metadata !DIExpression()), !dbg !9155
  tail call fastcc void @ztest_run_test_suites(i8* noundef %0) #24, !dbg !9156
  ret void, !dbg !9157
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_ztest_should_suite_run(i8* noundef %0, %struct.ztest_suite_node* nocapture noundef readonly %1) #1 !dbg !9158 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9160, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata %struct.ztest_suite_node* %1, metadata !9161, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.value(metadata i8 1, metadata !9162, metadata !DIExpression()), !dbg !9163
  %3 = getelementptr inbounds %struct.ztest_suite_node, %struct.ztest_suite_node* %1, i32 0, i32 5, !dbg !9164
  %4 = load i1 (i8*)*, i1 (i8*)** %3, align 4, !dbg !9164
  %5 = icmp eq i1 (i8*)* %4, null, !dbg !9166
  br i1 %5, label %8, label %6, !dbg !9167

6:                                                ; preds = %2
  %7 = tail call zeroext i1 %4(i8* noundef %0) #25, !dbg !9168
  call void @llvm.dbg.value(metadata i1 %7, metadata !9162, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9163
  br label %8, !dbg !9170

8:                                                ; preds = %6, %2
  %9 = phi i1 [ %7, %6 ], [ true, %2 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !9162, metadata !DIExpression()), !dbg !9163
  ret i1 %9, !dbg !9171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @z_ztest_should_test_run(i8* nocapture readnone %0, i8* nocapture readnone %1) #4 !dbg !9172 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9174, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.value(metadata i8* undef, metadata !9175, metadata !DIExpression()), !dbg !9176
  ret i1 true, !dbg !9177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ztest_run_test_suites(i8* noundef %0) unnamed_addr #1 !dbg !9178 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9181, metadata !DIExpression()), !dbg !9182
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9183, !srcloc !9185
  %2 = tail call i32 @z_impl_ztest_run_test_suites(i8* noundef %0) #25, !dbg !9186
  ret void, !dbg !9187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i8* @ztest_relative_filename(i8* noundef readnone returned %0) local_unnamed_addr #4 !dbg !9188 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9192, metadata !DIExpression()), !dbg !9193
  ret i8* %0, !dbg !9194
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !9195 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9197, metadata !DIExpression()), !dbg !9198
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !9199
  ret void, !dbg !9200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !9201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9205, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %1, metadata !9206, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !9207, metadata !DIExpression()), !dbg !9211
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !9212
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !9212
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !9212
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !9208, metadata !DIExpression()), !dbg !9211
  call void @llvm.dbg.value(metadata i32 %0, metadata !9210, metadata !DIExpression()), !dbg !9211
  %7 = icmp slt i32 %0, %1, !dbg !9213
  br i1 %7, label %8, label %22, !dbg !9216

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9210, metadata !DIExpression()), !dbg !9211
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !9217
  %11 = icmp eq i32 %10, 0, !dbg !9217
  br i1 %11, label %19, label %12, !dbg !9220

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !9221
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !9223
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !9223
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !9225
  br i1 %15, label %19, label %16, !dbg !9226

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !9227
  %18 = load i8*, i8** %17, align 4, !dbg !9227
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !9228
  br label %19, !dbg !9229

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !9230
  call void @llvm.dbg.value(metadata i32 %20, metadata !9210, metadata !DIExpression()), !dbg !9211
  %21 = icmp eq i32 %20, %1, !dbg !9213
  br i1 %21, label %22, label %8, !dbg !9216, !llvm.loop !9231

22:                                               ; preds = %19, %3
  ret void, !dbg !9233
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !9234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9236, metadata !DIExpression()), !dbg !9237
  %2 = shl nuw i32 1, %0, !dbg !9238
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !9241
  ret i32 %3, !dbg !9242
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !9243 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9247, metadata !DIExpression()), !dbg !9248
  %2 = shl nuw i32 1, %0, !dbg !9249
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !9252
  ret void, !dbg !9253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9257, metadata !DIExpression()), !dbg !9258
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9259
  ret void, !dbg !9260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !9261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9263, metadata !DIExpression()), !dbg !9264
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !9265
  %3 = and i32 %2, %0, !dbg !9265
  %4 = icmp eq i32 %3, %0, !dbg !9266
  %5 = zext i1 %4 to i32, !dbg !9266
  ret i32 %5, !dbg !9267
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !9268 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9270, metadata !DIExpression()), !dbg !9271
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !9272
  ret void, !dbg !9273
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !9274 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9276, metadata !DIExpression()), !dbg !9277
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !9278
  ret void, !dbg !9279
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !9280 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9282, metadata !DIExpression()), !dbg !9283
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !9284
  ret void, !dbg !9285
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !9286 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9288, metadata !DIExpression()), !dbg !9289
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !9290
  ret void, !dbg !9291
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !9292 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9294, metadata !DIExpression()), !dbg !9295
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !9296
  ret void, !dbg !9297
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !9298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9300, metadata !DIExpression()), !dbg !9301
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !9302
  ret void, !dbg !9303
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9304 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9306, metadata !DIExpression()), !dbg !9307
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !9308
  ret i32 0, !dbg !9309
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !976 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !980, metadata !DIExpression()), !dbg !9310
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !9311
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !9313
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !9315
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !9317
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !9319
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !9321
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !9323
  ret void, !dbg !9325
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !9326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9328, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 0, metadata !9329, metadata !DIExpression()), !dbg !9330
  call void @llvm.dbg.value(metadata i32 undef, metadata !9329, metadata !DIExpression()), !dbg !9330
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !9331
  %3 = load i32, i32* %2, align 4, !dbg !9331
  call void @llvm.dbg.value(metadata i32 %3, metadata !9329, metadata !DIExpression()), !dbg !9330
  %4 = shl nuw i32 1, %0, !dbg !9332
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #24, !dbg !9333
  tail call void @arch_irq_enable(i32 noundef %3) #25, !dbg !9334
  ret void, !dbg !9335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9338, metadata !DIExpression()), !dbg !9339
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9340
  %3 = or i32 %2, %0, !dbg !9340
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9340
  ret void, !dbg !9341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !9342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9344, metadata !DIExpression()), !dbg !9345
  %2 = icmp slt i32 %0, 32, !dbg !9346
  br i1 %2, label %3, label %5, !dbg !9348

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !9349
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !9351
  br label %5, !dbg !9352

5:                                                ; preds = %1, %3
  ret void, !dbg !9353
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9356, metadata !DIExpression()), !dbg !9357
  %2 = xor i32 %0, -1, !dbg !9358
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9358
  %4 = and i32 %3, %2, !dbg !9358
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !9358
  ret void, !dbg !9359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !9360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9364, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.value(metadata i32 %1, metadata !9365, metadata !DIExpression()), !dbg !9366
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !9367

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !9368
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !9370
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !9371
  br label %11, !dbg !9372

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !9373
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !9374
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !9375
  br label %11, !dbg !9376

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !9377
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !9378
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !9379
  br label %11, !dbg !9380

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !9381
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !9382
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !9383
  br label %11, !dbg !9384

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !9385
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9388, metadata !DIExpression()), !dbg !9389
  %2 = xor i32 %0, -1, !dbg !9390
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9390
  %4 = and i32 %3, %2, !dbg !9390
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9390
  ret void, !dbg !9391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9394, metadata !DIExpression()), !dbg !9395
  %2 = xor i32 %0, -1, !dbg !9396
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9396
  %4 = and i32 %3, %2, !dbg !9396
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9396
  ret void, !dbg !9397
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9398 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9400, metadata !DIExpression()), !dbg !9401
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9402
  %3 = or i32 %2, %0, !dbg !9402
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !9402
  ret void, !dbg !9403
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !9404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9406, metadata !DIExpression()), !dbg !9407
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9408
  %3 = or i32 %2, %0, !dbg !9408
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !9408
  ret void, !dbg !9409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !9410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9414, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !9415, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata i8* %2, metadata !9416, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !9417, metadata !DIExpression()), !dbg !9420
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9419, metadata !DIExpression()), !dbg !9420
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9421
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !9421
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !9423
  br i1 %6, label %7, label %9, !dbg !9424

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !9425
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9426
  store i8* %2, i8** %8, align 4, !dbg !9427
  br label %9, !dbg !9428

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !9420
  ret i32 %10, !dbg !9429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !9430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9432, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !9433, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !9434, metadata !DIExpression()), !dbg !9435
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !9436
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !9437
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !9438
  store i8* null, i8** %3, align 4, !dbg !9439
  ret void, !dbg !9440
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9443, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %1, metadata !9444, metadata !DIExpression()), !dbg !9448
  call void @llvm.dbg.value(metadata i8* %1, metadata !9445, metadata !DIExpression()), !dbg !9448
  %3 = bitcast i8* %1 to i32*, !dbg !9449
  %4 = load i32, i32* %3, align 4, !dbg !9449
  %5 = add i32 %4, -37, !dbg !9449
  %6 = icmp ult i32 %5, -9, !dbg !9449
  br i1 %6, label %15, label %7, !dbg !9451

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9452
  %9 = inttoptr i32 %8 to i32*, !dbg !9453
  call void @llvm.dbg.value(metadata i32* %9, metadata !9446, metadata !DIExpression()), !dbg !9448
  %10 = load volatile i32, i32* %9, align 4, !dbg !9454
  call void @llvm.dbg.value(metadata i32 %10, metadata !9447, metadata !DIExpression()), !dbg !9448
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9455
  %12 = bitcast i8* %11 to i32*, !dbg !9455
  %13 = load i32, i32* %12, align 4, !dbg !9455
  %14 = or i32 %13, %10, !dbg !9456
  call void @llvm.dbg.value(metadata i32 %14, metadata !9447, metadata !DIExpression()), !dbg !9448
  store volatile i32 %14, i32* %9, align 4, !dbg !9457
  br label %15, !dbg !9458

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9448
  ret i32 %16, !dbg !9459
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !9460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9462, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata i8* %1, metadata !9463, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata i8* %1, metadata !9464, metadata !DIExpression()), !dbg !9467
  %3 = bitcast i8* %1 to i32*, !dbg !9468
  %4 = load i32, i32* %3, align 4, !dbg !9468
  %5 = add i32 %4, -37, !dbg !9468
  %6 = icmp ult i32 %5, -9, !dbg !9468
  br i1 %6, label %16, label %7, !dbg !9470

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !9471
  %9 = inttoptr i32 %8 to i32*, !dbg !9472
  call void @llvm.dbg.value(metadata i32* %9, metadata !9465, metadata !DIExpression()), !dbg !9467
  %10 = load volatile i32, i32* %9, align 4, !dbg !9473
  call void @llvm.dbg.value(metadata i32 %10, metadata !9466, metadata !DIExpression()), !dbg !9467
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9474
  %12 = bitcast i8* %11 to i32*, !dbg !9474
  %13 = load i32, i32* %12, align 4, !dbg !9474
  %14 = xor i32 %13, -1, !dbg !9475
  %15 = and i32 %10, %14, !dbg !9476
  call void @llvm.dbg.value(metadata i32 %15, metadata !9466, metadata !DIExpression()), !dbg !9467
  store volatile i32 %15, i32* %9, align 4, !dbg !9477
  br label %16, !dbg !9478

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !9467
  ret i32 %17, !dbg !9479
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #9 !dbg !9480 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9482, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i8* %1, metadata !9483, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i32* %2, metadata !9484, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i8* %1, metadata !9485, metadata !DIExpression()), !dbg !9489
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %4, metadata !9486, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i32 %4, metadata !9487, metadata !DIExpression()), !dbg !9489
  call void @llvm.dbg.value(metadata i32 %4, metadata !9488, metadata !DIExpression()), !dbg !9489
  %5 = bitcast i8* %1 to i32*, !dbg !9491
  %6 = load i32, i32* %5, align 4, !dbg !9491
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !9492

7:                                                ; preds = %3
  br label %10, !dbg !9493

8:                                                ; preds = %3
  br label %10, !dbg !9495

9:                                                ; preds = %3
  br label %10, !dbg !9496

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !9497
  br label %12, !dbg !9498

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !9489
  ret i32 %13, !dbg !9498
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !9499 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9501, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i8* %1, metadata !9502, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i8* %2, metadata !9503, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i8* %1, metadata !9504, metadata !DIExpression()), !dbg !9509
  %4 = bitcast i8* %1 to i32*, !dbg !9510
  %5 = load i32, i32* %4, align 4, !dbg !9510
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !9511
  call void @llvm.dbg.value(metadata i32 %6, metadata !9508, metadata !DIExpression()), !dbg !9509
  %7 = icmp slt i32 %6, 0, !dbg !9512
  br i1 %7, label %22, label %8, !dbg !9514

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9504, metadata !DIExpression()), !dbg !9509
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9515
  %10 = bitcast i8* %9 to i32*, !dbg !9515
  %11 = load i32, i32* %10, align 4, !dbg !9515
  %12 = lshr i32 %11, 16, !dbg !9515
  %13 = and i32 %12, 7, !dbg !9515
  %14 = lshr i32 %11, 8, !dbg !9516
  %15 = and i32 %14, 31, !dbg !9516
  %16 = shl i32 %13, %15, !dbg !9517
  call void @llvm.dbg.value(metadata i32 %16, metadata !9507, metadata !DIExpression()), !dbg !9509
  %17 = and i32 %11, 255, !dbg !9518
  %18 = or i32 %17, 1073887232, !dbg !9519
  %19 = inttoptr i32 %18 to i32*, !dbg !9520
  call void @llvm.dbg.value(metadata i32* %19, metadata !9505, metadata !DIExpression()), !dbg !9509
  %20 = load volatile i32, i32* %19, align 4, !dbg !9521
  call void @llvm.dbg.value(metadata i32 %20, metadata !9506, metadata !DIExpression()), !dbg !9509
  %21 = or i32 %16, %20, !dbg !9522
  call void @llvm.dbg.value(metadata i32 %21, metadata !9506, metadata !DIExpression()), !dbg !9509
  store volatile i32 %21, i32* %19, align 4, !dbg !9523
  br label %22, !dbg !9524

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !9509
  ret i32 %23, !dbg !9525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !9526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9530, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.value(metadata i32 0, metadata !9531, metadata !DIExpression()), !dbg !9532
  %2 = add i32 %0, -1, !dbg !9533
  %3 = icmp ult i32 %2, 4, !dbg !9533
  br i1 %3, label %4, label %7, !dbg !9533

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !9533
  %6 = load i32, i32* %5, align 4, !dbg !9533
  call void @llvm.dbg.value(metadata i32 %6, metadata !9531, metadata !DIExpression()), !dbg !9532
  br label %7, !dbg !9534

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !9532
  ret i32 %8, !dbg !9535
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !9536 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !9538, metadata !DIExpression()), !dbg !9541
  tail call void @config_enable_default_clocks() #25, !dbg !9542
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9543
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !9543
  %4 = lshr i32 %3, 4, !dbg !9543
  %5 = and i32 %4, 15, !dbg !9543
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !9543
  %7 = load i8, i8* %6, align 1, !dbg !9543
  %8 = zext i8 %7 to i32, !dbg !9543
  %9 = lshr i32 %2, %8, !dbg !9543
  call void @llvm.dbg.value(metadata i32 %9, metadata !9539, metadata !DIExpression()), !dbg !9541
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !9540, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !9541
  %10 = icmp ult i32 %9, 32000000, !dbg !9544
  br i1 %10, label %11, label %13, !dbg !9546

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !9547
  br label %13, !dbg !9549

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !9550
  tail call fastcc void @set_up_plls() #24, !dbg !9551
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9552
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #24, !dbg !9555
  br label %14, !dbg !9556

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9557
  %16 = icmp eq i32 %15, 12, !dbg !9558
  br i1 %16, label %17, label %14, !dbg !9556, !llvm.loop !9559

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !9561
  br i1 %18, label %19, label %21, !dbg !9563

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #25, !dbg !9564
  br label %21, !dbg !9566

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !9567
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !9568
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !9569
  ret i32 0, !dbg !9570
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !9571 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9573
  %2 = and i32 %1, 240, !dbg !9573
  ret i32 %2, !dbg !9574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !9575 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9576
  %2 = icmp eq i32 %1, 1, !dbg !9580
  br i1 %2, label %7, label %3, !dbg !9581

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9582
  br label %4, !dbg !9584

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9585
  %6 = icmp eq i32 %5, 1, !dbg !9586
  br i1 %6, label %7, label %4, !dbg !9584, !llvm.loop !9587

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !9589
  br label %8, !dbg !9592

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !9593
  %10 = icmp eq i32 %9, 1, !dbg !9594
  br i1 %10, label %11, label %8, !dbg !9592, !llvm.loop !9595

11:                                               ; preds = %8
  ret void, !dbg !9597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !9598 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9599
  %2 = icmp eq i32 %1, 12, !dbg !9601
  br i1 %2, label %3, label %4, !dbg !9602

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !9603
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !9605
  br label %4, !dbg !9606

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !9607
  tail call void @config_pll_sysclock() #25, !dbg !9608
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !9609
  br label %5, !dbg !9610

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !9611
  %7 = icmp eq i32 %6, 1, !dbg !9612
  br i1 %7, label %8, label %5, !dbg !9610, !llvm.loop !9613

8:                                                ; preds = %5
  ret void, !dbg !9615
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !9616 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9618, metadata !DIExpression()), !dbg !9619
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9620
  %2 = and i32 %1, -241, !dbg !9620
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9620
  ret void, !dbg !9621
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !9622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9624, metadata !DIExpression()), !dbg !9625
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9626
  %3 = and i32 %2, -4, !dbg !9626
  %4 = or i32 %3, %0, !dbg !9626
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9626
  ret void, !dbg !9627
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !9628 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9629
  %2 = and i32 %1, 12, !dbg !9629
  ret i32 %2, !dbg !9630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !9631 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9633, metadata !DIExpression()), !dbg !9634
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9635
  %2 = and i32 %1, -1793, !dbg !9635
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9635
  ret void, !dbg !9636
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !9637 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9639, metadata !DIExpression()), !dbg !9640
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9641
  %2 = and i32 %1, -14337, !dbg !9641
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9641
  ret void, !dbg !9642
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !9643 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9644
  %2 = icmp eq i32 %1, 1, !dbg !9646
  br i1 %2, label %7, label %3, !dbg !9647

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !9648
  br label %4, !dbg !9650

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !9651
  %6 = icmp eq i32 %5, 1, !dbg !9652
  br i1 %6, label %7, label %4, !dbg !9650, !llvm.loop !9653

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #24, !dbg !9655
  br label %8, !dbg !9656

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !9657
  %10 = icmp eq i32 %9, 4, !dbg !9658
  br i1 %10, label %11, label %8, !dbg !9656, !llvm.loop !9659

11:                                               ; preds = %8
  ret void, !dbg !9661
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !9662 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9663
  %2 = and i32 %1, -16777217, !dbg !9663
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9663
  ret void, !dbg !9664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !9665 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9666
  %2 = or i32 %1, 16777216, !dbg !9666
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9666
  ret void, !dbg !9667
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !9668 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9669
  %2 = lshr i32 %1, 25, !dbg !9670
  %3 = and i32 %2, 1, !dbg !9670
  ret i32 %3, !dbg !9671
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !9672 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9673
  %2 = lshr i32 %1, 1, !dbg !9674
  %3 = and i32 %2, 1, !dbg !9674
  ret i32 %3, !dbg !9675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !9676 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9677
  %2 = or i32 %1, 1, !dbg !9677
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9677
  ret void, !dbg !9678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !9679 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9680
  %2 = or i32 %1, 1, !dbg !9680
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9680
  ret void, !dbg !9681
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !9682 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9683
  %2 = lshr i32 %1, 1, !dbg !9684
  %3 = and i32 %2, 1, !dbg !9684
  ret i32 %3, !dbg !9685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !9686 {
  ret i32 16000000, !dbg !9688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !9691 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !9692
  ret void, !dbg !9693
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !9694 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9698, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 262144, metadata !9699, metadata !DIExpression()), !dbg !9701
  call void @llvm.dbg.value(metadata i32 4194304, metadata !9700, metadata !DIExpression()), !dbg !9701
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9702
  %2 = and i32 %1, -16580609, !dbg !9702
  %3 = or i32 %2, 4456448, !dbg !9702
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9702
  ret void, !dbg !9703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #4 !dbg !9704 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !9705
  %2 = zext i8 %1 to i32, !dbg !9705
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !9705
  ret i32 %3, !dbg !9706
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #14 !dbg !9707 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #24, !dbg !9708
  ret void, !dbg !9709
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #14 !dbg !9710 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !9712, metadata !DIExpression()), !dbg !9714
  %2 = bitcast i32* %1 to i8*, !dbg !9715
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !9715
  call void @llvm.dbg.declare(metadata i32* %1, metadata !9713, metadata !DIExpression()), !dbg !9716
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9717
  %4 = or i32 %3, 1, !dbg !9717
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9717
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !9718
  %6 = and i32 %5, 1, !dbg !9718
  store volatile i32 %6, i32* %1, align 4, !dbg !9719
  %7 = load volatile i32, i32* %1, align 4, !dbg !9720
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !9721
  ret void, !dbg !9721
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9724, metadata !DIExpression()), !dbg !9725
  %2 = tail call fastcc zeroext i1 @device_is_ready.150() #24, !dbg !9726
  br i1 %2, label %3, label %4, !dbg !9728

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !9729
  br label %4, !dbg !9730

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !9725
  ret i32 %5, !dbg !9731
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.150() unnamed_addr #1 !dbg !9732 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9736, metadata !DIExpression()), !dbg !9737
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9738, !srcloc !9740
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.151() #24, !dbg !9741
  ret i1 %1, !dbg !9742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !9743 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9744
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !9745
  ret void, !dbg !9746
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !9747 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9749, metadata !DIExpression()), !dbg !9750
  %2 = icmp eq i32 %0, 10, !dbg !9751
  br i1 %2, label %3, label %4, !dbg !9753

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !9754
  br label %4, !dbg !9756

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !9757
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !9758
  ret i32 %0, !dbg !9759
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9760 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9763, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata i8 %0, metadata !9764, metadata !DIExpression()), !dbg !9765
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9766, !srcloc !9768
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !9769
  ret void, !dbg !9770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !9771 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9773, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.value(metadata i8 %0, metadata !9774, metadata !DIExpression()), !dbg !9776
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !9777
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !9775, metadata !DIExpression()), !dbg !9776
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !9778
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !9778
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #25, !dbg !9779
  ret void, !dbg !9780
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.151() unnamed_addr #1 !dbg !9781 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !9783, metadata !DIExpression()), !dbg !9784
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #25, !dbg !9785
  ret i1 %1, !dbg !9786
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !9787 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9836, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9837, metadata !DIExpression()), !dbg !9839
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9838, metadata !DIExpression()), !dbg !9839
  ret void, !dbg !9840
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9841 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9843, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i8 %1, metadata !9844, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32 %2, metadata !9845, metadata !DIExpression()), !dbg !9848
  %5 = bitcast i32* %4 to i8*, !dbg !9849
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9849
  call void @llvm.dbg.value(metadata i32* %4, metadata !9847, metadata !DIExpression(DW_OP_deref)), !dbg !9848
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9850
  call void @llvm.dbg.value(metadata i32 %6, metadata !9846, metadata !DIExpression()), !dbg !9848
  %7 = icmp eq i32 %6, 0, !dbg !9851
  br i1 %7, label %8, label %31, !dbg !9853

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9846, metadata !DIExpression()), !dbg !9848
  %9 = and i32 %2, 131072, !dbg !9854
  %10 = icmp eq i32 %9, 0, !dbg !9856
  br i1 %10, label %28, label %11, !dbg !9857

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9858
  %13 = icmp eq i32 %12, 0, !dbg !9861
  br i1 %13, label %18, label %14, !dbg !9862

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9863
  %16 = shl nuw i32 1, %15, !dbg !9863
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9865
  br label %25, !dbg !9866

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9867
  %20 = icmp eq i32 %19, 0, !dbg !9869
  %21 = zext i8 %1 to i32, !dbg !9848
  br i1 %20, label %25, label %22, !dbg !9870

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9871
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9873
  br label %25, !dbg !9874

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9875
  %27 = load i32, i32* %4, align 4, !dbg !9876
  call void @llvm.dbg.value(metadata i32 %30, metadata !9847, metadata !DIExpression()), !dbg !9848
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9877
  br label %31, !dbg !9878

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9875
  %30 = load i32, i32* %4, align 4, !dbg !9876
  call void @llvm.dbg.value(metadata i32 %30, metadata !9847, metadata !DIExpression()), !dbg !9848
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9877
  call void @llvm.dbg.value(metadata i32 0, metadata !9846, metadata !DIExpression()), !dbg !9848
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9879
  ret i32 %6, !dbg !9879
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !9880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9884, metadata !DIExpression()), !dbg !9889
  call void @llvm.dbg.value(metadata i32* %1, metadata !9885, metadata !DIExpression()), !dbg !9889
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9890
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9890
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9890
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9886, metadata !DIExpression()), !dbg !9889
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9891
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9891
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9891
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9888, metadata !DIExpression()), !dbg !9889
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9892
  store i32 %9, i32* %1, align 4, !dbg !9893
  ret i32 0, !dbg !9894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !9895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9897, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i32 %1, metadata !9898, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.value(metadata i32 %2, metadata !9899, metadata !DIExpression()), !dbg !9903
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9904
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9904
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9904
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9900, metadata !DIExpression()), !dbg !9903
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9905
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9905
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9905
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9901, metadata !DIExpression()), !dbg !9903
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9906
  call void @llvm.dbg.value(metadata i32 %10, metadata !9902, metadata !DIExpression()), !dbg !9903
  %11 = xor i32 %1, -1, !dbg !9907
  %12 = and i32 %10, %11, !dbg !9908
  %13 = and i32 %2, %1, !dbg !9909
  %14 = or i32 %12, %13, !dbg !9910
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9911
  ret i32 0, !dbg !9912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9913 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9915, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.value(metadata i32 %1, metadata !9916, metadata !DIExpression()), !dbg !9919
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9920
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9920
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9920
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9917, metadata !DIExpression()), !dbg !9919
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9921
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9921
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9921
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9918, metadata !DIExpression()), !dbg !9919
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9922
  store volatile i32 %1, i32* %9, align 4, !dbg !9922
  ret i32 0, !dbg !9923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9924 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9926, metadata !DIExpression()), !dbg !9930
  call void @llvm.dbg.value(metadata i32 %1, metadata !9927, metadata !DIExpression()), !dbg !9930
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9931
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9931
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9931
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9928, metadata !DIExpression()), !dbg !9930
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9932
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9932
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9932
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9929, metadata !DIExpression()), !dbg !9930
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9933
  ret i32 0, !dbg !9934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !9935 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9937, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.value(metadata i32 %1, metadata !9938, metadata !DIExpression()), !dbg !9941
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9942
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9942
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9942
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9939, metadata !DIExpression()), !dbg !9941
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9943
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9943
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9943
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9940, metadata !DIExpression()), !dbg !9941
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9944
  %10 = load volatile i32, i32* %9, align 4, !dbg !9944
  %11 = xor i32 %10, %1, !dbg !9944
  store volatile i32 %11, i32* %9, align 4, !dbg !9944
  ret i32 0, !dbg !9945
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9946 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9948, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.value(metadata i8 %1, metadata !9949, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.value(metadata i32 %2, metadata !9950, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.value(metadata i32 %3, metadata !9951, metadata !DIExpression()), !dbg !9958
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9959
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9959
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9959
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9952, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.value(metadata i8* undef, metadata !9953, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.value(metadata i32 0, metadata !9955, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.value(metadata i32 0, metadata !9956, metadata !DIExpression()), !dbg !9958
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9960

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9961
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9965
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9966
  %12 = load i32, i32* %11, align 4, !dbg !9966
  %13 = icmp eq i32 %10, %12, !dbg !9967
  br i1 %13, label %14, label %29, !dbg !9968

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9969
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9971
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9972
  br label %29, !dbg !9973

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9974
  %17 = load i8*, i8** %16, align 4, !dbg !9974
  call void @llvm.dbg.value(metadata i8* %17, metadata !9953, metadata !DIExpression()), !dbg !9958
  %18 = zext i8 %1 to i32, !dbg !9975
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9977
  %20 = icmp eq i32 %19, 0, !dbg !9978
  br i1 %20, label %21, label %29, !dbg !9979

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9980
  %23 = load i32, i32* %22, align 4, !dbg !9980
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9981
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9982

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9955, metadata !DIExpression()), !dbg !9958
  br label %27, !dbg !9983

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9955, metadata !DIExpression()), !dbg !9958
  br label %27, !dbg !9985

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9955, metadata !DIExpression()), !dbg !9958
  br label %27, !dbg !9986

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9958
  call void @llvm.dbg.value(metadata i32 %28, metadata !9955, metadata !DIExpression()), !dbg !9958
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9987
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9988
  br label %29, !dbg !9988

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9958
  call void @llvm.dbg.value(metadata i32 %30, metadata !9956, metadata !DIExpression()), !dbg !9958
  call void @llvm.dbg.label(metadata !9957), !dbg !9989
  ret i32 %30, !dbg !9990
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9991 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9993, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9994, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i1 %2, metadata !9995, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9997
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9998
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9998
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9998
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9996, metadata !DIExpression()), !dbg !9997
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9999
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !10000
  ret i32 %8, !dbg !10001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !10002 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10008, metadata !DIExpression()), !dbg !10011
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !10009, metadata !DIExpression()), !dbg !10011
  call void @llvm.dbg.value(metadata i1 %2, metadata !10010, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10011
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !10012
  br i1 %4, label %5, label %6, !dbg !10015

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32.156, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 42) #25, !dbg !10016
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33.158, i32 0, i32 0)) #25, !dbg !10016
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 42) #25, !dbg !10016
  unreachable, !dbg !10016

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !10018
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !10018
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !10018
  br i1 %9, label %10, label %11, !dbg !10021

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34.159, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 43) #25, !dbg !10022
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.160, i32 0, i32 0)) #25, !dbg !10022
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 43) #25, !dbg !10022
  unreachable, !dbg !10022

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !10024
  br i1 %12, label %18, label %13, !dbg !10026

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10027
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !10030
  %16 = or i1 %15, %2, !dbg !10031
  %17 = select i1 %16, i32 0, i32 -22, !dbg !10031
  br i1 %2, label %19, label %21, !dbg !10031

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !10032

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !10033
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !10036
  br label %21, !dbg !10037

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !10011
  ret i32 %22, !dbg !10038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10039 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10043, metadata !DIExpression()), !dbg !10044
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10045
  %3 = icmp eq %struct._snode* %2, null, !dbg !10045
  ret i1 %3, !dbg !10045
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !10046 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10050, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10051, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10052, metadata !DIExpression()), !dbg !10054
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10055
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10053, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10052, metadata !DIExpression()), !dbg !10054
  %4 = icmp eq %struct._snode* %3, null, !dbg !10057
  br i1 %4, label %15, label %5, !dbg !10055

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !10053, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !10052, metadata !DIExpression()), !dbg !10054
  %6 = icmp eq %struct._snode* %3, %1, !dbg !10059
  br i1 %6, label %9, label %11, !dbg !10062

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10053, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10052, metadata !DIExpression()), !dbg !10054
  %8 = icmp eq %struct._snode* %13, %1, !dbg !10059
  br i1 %8, label %9, label %11, !dbg !10062, !llvm.loop !10063

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !10064
  br label %15, !dbg !10064

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10053, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !10052, metadata !DIExpression()), !dbg !10054
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !10057
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !10053, metadata !DIExpression()), !dbg !10054
  %14 = icmp eq %struct._snode* %13, null, !dbg !10057
  br i1 %14, label %15, label %7, !dbg !10055, !llvm.loop !10063

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !10066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !10067 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10071, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10072, metadata !DIExpression()), !dbg !10073
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10074
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !10074
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !10074
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10075
  %5 = icmp eq %struct._snode* %4, null, !dbg !10075
  br i1 %5, label %6, label %8, !dbg !10074

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10077
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !10077
  br label %8, !dbg !10077

8:                                                ; preds = %6, %2
  ret void, !dbg !10074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10079 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10083, metadata !DIExpression()), !dbg !10084
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10085
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10085
  ret %struct._snode* %3, !dbg !10086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10087 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10091, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10092, metadata !DIExpression()), !dbg !10093
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10094
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10095
  ret void, !dbg !10096
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10097 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10099, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10100, metadata !DIExpression()), !dbg !10101
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !10102
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10105 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10107, metadata !DIExpression()), !dbg !10108
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10109
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10109
  ret %struct._snode* %3, !dbg !10110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !10111 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10113, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10114, metadata !DIExpression()), !dbg !10115
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !10116
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !10117
  ret void, !dbg !10118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !10119 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10123, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !10124, metadata !DIExpression()), !dbg !10126
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !10125, metadata !DIExpression()), !dbg !10126
  %4 = icmp eq %struct._snode* %1, null, !dbg !10127
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !10129
  br i1 %4, label %6, label %11, !dbg !10130

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !10131
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10133
  %8 = icmp eq %struct._snode* %7, %2, !dbg !10133
  br i1 %8, label %9, label %15, !dbg !10131

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10135
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !10135
  br label %15, !dbg !10135

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !10137
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !10139
  %13 = icmp eq %struct._snode* %12, %2, !dbg !10139
  br i1 %13, label %14, label %15, !dbg !10137

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !10141
  br label %15, !dbg !10141

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !10130
  ret void, !dbg !10130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !10143 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10147, metadata !DIExpression()), !dbg !10148
  %2 = icmp eq %struct._snode* %0, null, !dbg !10149
  br i1 %2, label %5, label %3, !dbg !10149

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !10149
  br label %5, !dbg !10149

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !10149
  ret %struct._snode* %6, !dbg !10149
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10150 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10152, metadata !DIExpression()), !dbg !10153
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !10154
  ret %struct._snode* %2, !dbg !10154
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !10155 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !10157, metadata !DIExpression()), !dbg !10158
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !10159
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !10159
  ret %struct._snode* %3, !dbg !10160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !10161 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10163, metadata !DIExpression()), !dbg !10166
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !10167, !range !10168
  call void @llvm.dbg.value(metadata i32 %2, metadata !10164, metadata !DIExpression()), !dbg !10166
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !10169
  call void @llvm.dbg.value(metadata i32 %3, metadata !10165, metadata !DIExpression()), !dbg !10166
  ret i32 %3, !dbg !10170
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !10171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10173, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i8* %1, metadata !10174, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.value(metadata i8* %1, metadata !10175, metadata !DIExpression()), !dbg !10176
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !10177
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !10177
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10178
  %6 = bitcast i8* %5 to %struct.device**, !dbg !10178
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !10178
  %8 = shl nuw i32 1, %0, !dbg !10179
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !10180
  ret void, !dbg !10181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10182 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !10186, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata i32 %1, metadata !10187, metadata !DIExpression()), !dbg !10192
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10188, metadata !DIExpression()), !dbg !10192
  %4 = bitcast i64* %3 to i8*, !dbg !10193
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10193
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !10190, metadata !DIExpression()), !dbg !10192
  store i64 4294967328, i64* %3, align 8, !dbg !10194
  call void @llvm.dbg.value(metadata i64* %3, metadata !10190, metadata !DIExpression(DW_OP_deref)), !dbg !10192
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !10195
  call void @llvm.dbg.value(metadata i32 %5, metadata !10191, metadata !DIExpression()), !dbg !10192
  %6 = icmp eq i32 %5, 0, !dbg !10196
  br i1 %6, label %7, label %8, !dbg !10198

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !10199
  br label %8, !dbg !10200

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !10201
  ret void, !dbg !10201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !10202 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10204, metadata !DIExpression()), !dbg !10207
  call void @llvm.dbg.value(metadata i8* %0, metadata !10205, metadata !DIExpression()), !dbg !10207
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !10208
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !10206, metadata !DIExpression()), !dbg !10207
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !10209
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !10209
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #25, !dbg !10210
  ret i32 %5, !dbg !10211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10214, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.value(metadata i32 %1, metadata !10215, metadata !DIExpression()), !dbg !10217
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !10218
  call void @llvm.dbg.value(metadata i32 %3, metadata !10216, metadata !DIExpression()), !dbg !10217
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !10219
  ret void, !dbg !10220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !10221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10225, metadata !DIExpression()), !dbg !10226
  %2 = sdiv i32 %0, 4, !dbg !10227
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !10228
  %6 = add nsw i32 %5, 16, !dbg !10229
  %7 = shl i32 15, %6, !dbg !10230
  %8 = or i32 %7, %2, !dbg !10231
  ret i32 %8, !dbg !10232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !10233 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10238, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.value(metadata i32 %1, metadata !10239, metadata !DIExpression()), !dbg !10240
  %3 = and i32 %1, 3, !dbg !10241
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !10241
  %5 = load volatile i32, i32* %4, align 4, !dbg !10241
  %6 = lshr i32 %1, 16, !dbg !10241
  %7 = xor i32 %6, -1, !dbg !10241
  %8 = and i32 %5, %7, !dbg !10241
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10246
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10248, !srcloc !10249
  call void @llvm.dbg.value(metadata i32 %9, metadata !10245, metadata !DIExpression()) #23, !dbg !10246
  call void @llvm.dbg.value(metadata i32 %9, metadata !10250, metadata !DIExpression()) #23, !dbg !10255
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !10257, !range !7379
  %11 = shl i32 %0, %10, !dbg !10241
  %12 = or i32 %11, %8, !dbg !10241
  store volatile i32 %12, i32* %4, align 4, !dbg !10241
  ret void, !dbg !10258
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10259 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !10263, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !10264, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i32 %2, metadata !10265, metadata !DIExpression()), !dbg !10268
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !10269
  %5 = icmp eq %struct._snode* %4, null, !dbg !10269
  br i1 %5, label %24, label %6, !dbg !10269

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !10271
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10267, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !10266, metadata !DIExpression()), !dbg !10268
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !10272
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !10272
  %12 = load i32, i32* %11, align 4, !dbg !10272
  %13 = and i32 %12, %2, !dbg !10276
  %14 = icmp eq i32 %13, 0, !dbg !10276
  br i1 %14, label %22, label %15, !dbg !10277

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !10278
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !10278
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !10278
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !10278
  br i1 %19, label %20, label %21, !dbg !10282

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6.155, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29.161, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 77) #25, !dbg !10283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31.160, i32 0, i32 0)) #25, !dbg !10283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.30.157, i32 0, i32 0), i32 noundef 77) #25, !dbg !10283
  unreachable, !dbg !10283

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !10285
  br label %22, !dbg !10286

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !10266, metadata !DIExpression()), !dbg !10268
  %23 = icmp eq %struct._snode* %8, null, !dbg !10287
  br i1 %23, label %24, label %6, !dbg !10287

24:                                               ; preds = %22, %3
  ret void, !dbg !10288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !10289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10291, metadata !DIExpression()), !dbg !10292
  %2 = and i32 %0, 3, !dbg !10293
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !10293
  %4 = load volatile i32, i32* %3, align 4, !dbg !10293
  %5 = lshr i32 %0, 16, !dbg !10293
  %6 = and i32 %4, %5, !dbg !10293
  call void @llvm.dbg.value(metadata i32 %5, metadata !10242, metadata !DIExpression()) #23, !dbg !10294
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !10296, !srcloc !10249
  call void @llvm.dbg.value(metadata i32 %7, metadata !10245, metadata !DIExpression()) #23, !dbg !10294
  call void @llvm.dbg.value(metadata i32 %7, metadata !10250, metadata !DIExpression()) #23, !dbg !10297
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10299, !range !7379
  %9 = lshr i32 %6, %8, !dbg !10300
  ret i32 %9, !dbg !10301
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10302 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10307, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.value(metadata i32 %1, metadata !10308, metadata !DIExpression()), !dbg !10309
  %3 = shl i32 %1, 16, !dbg !10310
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !10310
  store volatile i32 %3, i32* %4, align 4, !dbg !10310
  ret void, !dbg !10311
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10312 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10316, metadata !DIExpression()), !dbg !10317
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10318
  %3 = load volatile i32, i32* %2, align 4, !dbg !10318
  ret i32 %3, !dbg !10319
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10320 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10322, metadata !DIExpression()), !dbg !10324
  call void @llvm.dbg.value(metadata i32 %1, metadata !10323, metadata !DIExpression()), !dbg !10324
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !10325
  store volatile i32 %1, i32* %3, align 4, !dbg !10325
  ret void, !dbg !10326
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !10327 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10329, metadata !DIExpression()), !dbg !10330
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !10331
  %3 = load volatile i32, i32* %2, align 4, !dbg !10331
  ret i32 %3, !dbg !10332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !10333 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10337, metadata !DIExpression()), !dbg !10339
  call void @llvm.dbg.value(metadata i32* %1, metadata !10338, metadata !DIExpression()), !dbg !10339
  %3 = and i32 %0, 131072, !dbg !10340
  %4 = icmp eq i32 %3, 0, !dbg !10342
  br i1 %4, label %22, label %5, !dbg !10343

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !10344
  %6 = and i32 %0, 2, !dbg !10346
  %7 = icmp eq i32 %6, 0, !dbg !10348
  br i1 %7, label %11, label %8, !dbg !10349

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !10350
  %10 = icmp eq i32 %9, 0, !dbg !10350
  br i1 %10, label %33, label %11, !dbg !10353

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !10354
  store i32 %12, i32* %1, align 4, !dbg !10354
  %13 = and i32 %0, 16, !dbg !10355
  %14 = icmp eq i32 %13, 0, !dbg !10357
  br i1 %14, label %17, label %15, !dbg !10358

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !10359
  br label %31, !dbg !10361

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !10362
  %19 = icmp eq i32 %18, 0, !dbg !10364
  br i1 %19, label %33, label %20, !dbg !10365

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !10366
  br label %31, !dbg !10368

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !10369
  %24 = icmp eq i32 %23, 0, !dbg !10371
  br i1 %24, label %31, label %25, !dbg !10372

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !10373
  %27 = icmp eq i32 %26, 0, !dbg !10376
  br i1 %27, label %28, label %31, !dbg !10377

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !10378
  br label %33, !dbg !10379

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !10339
  ret i32 %34, !dbg !10379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !10380 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10384, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata i32 %1, metadata !10385, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata i32 %2, metadata !10386, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata i32 %3, metadata !10387, metadata !DIExpression()), !dbg !10395
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10396
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !10396
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !10396
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !10388, metadata !DIExpression()), !dbg !10395
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !10397
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !10397
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !10397
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !10389, metadata !DIExpression()), !dbg !10395
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !10398
  call void @llvm.dbg.value(metadata i32 %11, metadata !10390, metadata !DIExpression()), !dbg !10395
  %12 = and i32 %2, 48, !dbg !10399
  call void @llvm.dbg.value(metadata i32 %12, metadata !10391, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.value(metadata i32 %2, metadata !10392, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !10395
  call void @llvm.dbg.value(metadata i32 %2, metadata !10393, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !10395
  call void @llvm.dbg.value(metadata i32 %2, metadata !10394, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !10395
  %13 = lshr i32 %2, 6, !dbg !10400
  %14 = and i32 %13, 1, !dbg !10400
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !10401
  %15 = lshr i32 %2, 7, !dbg !10402
  %16 = and i32 %15, 3, !dbg !10402
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !10403
  %17 = lshr i32 %2, 9, !dbg !10404
  %18 = and i32 %17, 3, !dbg !10404
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !10405
  %19 = icmp eq i32 %12, 32, !dbg !10406
  br i1 %19, label %20, label %24, !dbg !10408

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !10409
  br i1 %21, label %22, label %23, !dbg !10412

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10413
  br label %24, !dbg !10415

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !10416
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !10418
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !10419
  ret void, !dbg !10420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !10421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10423, metadata !DIExpression()), !dbg !10425
  %2 = shl nuw i32 1, %0, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %2, metadata !10424, metadata !DIExpression()), !dbg !10425
  ret i32 %2, !dbg !10427
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10428 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10432, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i32 %1, metadata !10433, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i32 %2, metadata !10434, metadata !DIExpression()), !dbg !10435
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !10436
  %5 = load volatile i32, i32* %4, align 4, !dbg !10436
  %6 = xor i32 %1, -1, !dbg !10436
  %7 = and i32 %5, %6, !dbg !10436
  %8 = mul i32 %2, %1, !dbg !10436
  %9 = or i32 %7, %8, !dbg !10436
  store volatile i32 %9, i32* %4, align 4, !dbg !10436
  ret void, !dbg !10437
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10438 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10440, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 %1, metadata !10441, metadata !DIExpression()), !dbg !10443
  call void @llvm.dbg.value(metadata i32 %2, metadata !10442, metadata !DIExpression()), !dbg !10443
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !10444
  %5 = load volatile i32, i32* %4, align 4, !dbg !10444
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()) #23, !dbg !10445
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10447, !srcloc !10249
  call void @llvm.dbg.value(metadata i32 %6, metadata !10245, metadata !DIExpression()) #23, !dbg !10445
  call void @llvm.dbg.value(metadata i32 %6, metadata !10250, metadata !DIExpression()) #23, !dbg !10448
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10450, !range !7379
  %8 = shl nuw nsw i32 %7, 1, !dbg !10444
  %9 = shl i32 3, %8, !dbg !10444
  %10 = xor i32 %9, -1, !dbg !10444
  %11 = and i32 %5, %10, !dbg !10444
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()) #23, !dbg !10451
  call void @llvm.dbg.value(metadata i32 %6, metadata !10245, metadata !DIExpression()) #23, !dbg !10451
  call void @llvm.dbg.value(metadata i32 %6, metadata !10250, metadata !DIExpression()) #23, !dbg !10453
  %12 = shl i32 %2, %8, !dbg !10444
  %13 = or i32 %11, %12, !dbg !10444
  store volatile i32 %13, i32* %4, align 4, !dbg !10444
  ret void, !dbg !10455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10456 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10458, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.value(metadata i32 %1, metadata !10459, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.value(metadata i32 %2, metadata !10460, metadata !DIExpression()), !dbg !10461
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !10462
  %5 = load volatile i32, i32* %4, align 4, !dbg !10462
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()) #23, !dbg !10463
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10465, !srcloc !10249
  call void @llvm.dbg.value(metadata i32 %6, metadata !10245, metadata !DIExpression()) #23, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %6, metadata !10250, metadata !DIExpression()) #23, !dbg !10466
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10468, !range !7379
  %8 = shl nuw nsw i32 %7, 1, !dbg !10462
  %9 = shl i32 3, %8, !dbg !10462
  %10 = xor i32 %9, -1, !dbg !10462
  %11 = and i32 %5, %10, !dbg !10462
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()) #23, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %6, metadata !10245, metadata !DIExpression()) #23, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %6, metadata !10250, metadata !DIExpression()) #23, !dbg !10471
  %12 = shl i32 %2, %8, !dbg !10462
  %13 = or i32 %11, %12, !dbg !10462
  store volatile i32 %13, i32* %4, align 4, !dbg !10462
  ret void, !dbg !10473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10474 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10476, metadata !DIExpression()), !dbg !10479
  call void @llvm.dbg.value(metadata i32 %1, metadata !10477, metadata !DIExpression()), !dbg !10479
  call void @llvm.dbg.value(metadata i32 %2, metadata !10478, metadata !DIExpression()), !dbg !10479
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !10480
  %5 = load volatile i32, i32* %4, align 4, !dbg !10480
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()) #23, !dbg !10481
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10483, !srcloc !10249
  call void @llvm.dbg.value(metadata i32 %6, metadata !10245, metadata !DIExpression()) #23, !dbg !10481
  call void @llvm.dbg.value(metadata i32 %6, metadata !10250, metadata !DIExpression()) #23, !dbg !10484
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10486, !range !7379
  %8 = shl nuw nsw i32 %7, 2, !dbg !10480
  %9 = shl i32 15, %8, !dbg !10480
  %10 = xor i32 %9, -1, !dbg !10480
  %11 = and i32 %5, %10, !dbg !10480
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()) #23, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %6, metadata !10245, metadata !DIExpression()) #23, !dbg !10487
  call void @llvm.dbg.value(metadata i32 %6, metadata !10250, metadata !DIExpression()) #23, !dbg !10489
  %12 = shl i32 %2, %8, !dbg !10480
  %13 = or i32 %11, %12, !dbg !10480
  store volatile i32 %13, i32* %4, align 4, !dbg !10480
  ret void, !dbg !10491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10492 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10494, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 %1, metadata !10495, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.value(metadata i32 %2, metadata !10496, metadata !DIExpression()), !dbg !10497
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !10498
  %5 = load volatile i32, i32* %4, align 4, !dbg !10498
  %6 = lshr i32 %1, 8, !dbg !10498
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10499
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !10501, !srcloc !10249
  call void @llvm.dbg.value(metadata i32 %7, metadata !10245, metadata !DIExpression()) #23, !dbg !10499
  call void @llvm.dbg.value(metadata i32 %7, metadata !10250, metadata !DIExpression()) #23, !dbg !10502
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !10504, !range !7379
  %9 = shl nuw nsw i32 %8, 2, !dbg !10498
  %10 = shl i32 15, %9, !dbg !10498
  %11 = xor i32 %10, -1, !dbg !10498
  %12 = and i32 %5, %11, !dbg !10498
  call void @llvm.dbg.value(metadata i32 %6, metadata !10242, metadata !DIExpression()) #23, !dbg !10505
  call void @llvm.dbg.value(metadata i32 %7, metadata !10245, metadata !DIExpression()) #23, !dbg !10505
  call void @llvm.dbg.value(metadata i32 %7, metadata !10250, metadata !DIExpression()) #23, !dbg !10507
  %13 = shl i32 %2, %9, !dbg !10498
  %14 = or i32 %12, %13, !dbg !10498
  store volatile i32 %14, i32* %4, align 4, !dbg !10498
  ret void, !dbg !10509
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10510 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !10512, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 %1, metadata !10513, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.value(metadata i32 %2, metadata !10514, metadata !DIExpression()), !dbg !10515
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !10516
  %5 = load volatile i32, i32* %4, align 4, !dbg !10516
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()) #23, !dbg !10517
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !10519, !srcloc !10249
  call void @llvm.dbg.value(metadata i32 %6, metadata !10245, metadata !DIExpression()) #23, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %6, metadata !10250, metadata !DIExpression()) #23, !dbg !10520
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !10522, !range !7379
  %8 = shl nuw nsw i32 %7, 1, !dbg !10516
  %9 = shl i32 3, %8, !dbg !10516
  %10 = xor i32 %9, -1, !dbg !10516
  %11 = and i32 %5, %10, !dbg !10516
  call void @llvm.dbg.value(metadata i32 %1, metadata !10242, metadata !DIExpression()) #23, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %6, metadata !10245, metadata !DIExpression()) #23, !dbg !10523
  call void @llvm.dbg.value(metadata i32 %6, metadata !10250, metadata !DIExpression()) #23, !dbg !10525
  %12 = shl i32 %2, %8, !dbg !10516
  %13 = or i32 %11, %12, !dbg !10516
  store volatile i32 %13, i32* %4, align 4, !dbg !10516
  ret void, !dbg !10527
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !10528 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10530, metadata !DIExpression()), !dbg !10533
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10534
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !10534
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !10534
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !10531, metadata !DIExpression()), !dbg !10533
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !10535
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !10536
  %6 = tail call fastcc zeroext i1 @device_is_ready.170() #24, !dbg !10537
  br i1 %6, label %7, label %11, !dbg !10539

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !10540
  call void @llvm.dbg.value(metadata i32 %8, metadata !10532, metadata !DIExpression()), !dbg !10533
  %9 = icmp slt i32 %8, 0, !dbg !10541
  %10 = select i1 %9, i32 %8, i32 0, !dbg !10543
  br label %11, !dbg !10543

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !10533
  ret i32 %12, !dbg !10544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.170() unnamed_addr #1 !dbg !10545 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10549, metadata !DIExpression()), !dbg !10550
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10551, !srcloc !10553
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.171() #24, !dbg !10554
  ret i1 %1, !dbg !10555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !10556 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10560, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i8 1, metadata !10561, metadata !DIExpression()), !dbg !10565
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10566
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !10566
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !10566
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !10562, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata i32 0, metadata !10563, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10564, metadata !DIExpression()), !dbg !10565
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !10567
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !10570
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !10571
  call void @llvm.dbg.value(metadata i32 %7, metadata !10563, metadata !DIExpression()), !dbg !10565
  ret i32 %7, !dbg !10572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.171() unnamed_addr #1 !dbg !10573 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !10575, metadata !DIExpression()), !dbg !10576
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #25, !dbg !10577
  ret i1 %1, !dbg !10578
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !10579 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10583, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i32 %1, metadata !10584, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i32 %2, metadata !10585, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i32 %3, metadata !10586, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.value(metadata i32 0, metadata !10587, metadata !DIExpression()), !dbg !10591
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !10592
  %5 = icmp eq i32 %3, 17, !dbg !10593
  br i1 %5, label %6, label %14, !dbg !10594

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %7, metadata !10588, metadata !DIExpression()), !dbg !10596
  %8 = icmp eq i32 %7, 0, !dbg !10597
  %9 = shl nuw i32 1, %1, !dbg !10599
  br i1 %8, label %12, label %10, !dbg !10600

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10601
  br label %14, !dbg !10603

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !10604
  br label %14, !dbg !10607

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !10608
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #14 !dbg !10609 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10611, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.value(metadata i8* %1, metadata !10612, metadata !DIExpression()), !dbg !10615
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10616
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10616
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10616
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10613, metadata !DIExpression()), !dbg !10615
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10617
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10617
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !10619
  %9 = icmp eq i32 %8, 0, !dbg !10619
  br i1 %9, label %12, label %10, !dbg !10620

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10621
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !10623
  br label %12, !dbg !10624

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10625
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10627
  %15 = icmp eq i32 %14, 0, !dbg !10627
  br i1 %15, label %19, label %16, !dbg !10628

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10629
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !10630
  store i8 %18, i8* %1, align 1, !dbg !10631
  br label %19, !dbg !10632

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !10615
  ret i32 %20, !dbg !10633
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !10634 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10636, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata i8 %1, metadata !10637, metadata !DIExpression()), !dbg !10640
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10641
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10641
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10641
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10638, metadata !DIExpression()), !dbg !10640
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !10642

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10643
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !10646
  %10 = icmp eq i32 %9, 0, !dbg !10646
  br i1 %10, label %18, label %11, !dbg !10647

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10648, !srcloc !10655
  call void @llvm.dbg.value(metadata i32 undef, metadata !10651, metadata !DIExpression()) #23, !dbg !10656
  call void @llvm.dbg.value(metadata i32 undef, metadata !10652, metadata !DIExpression()) #23, !dbg !10656
  call void @llvm.dbg.value(metadata i32 undef, metadata !10639, metadata !DIExpression()), !dbg !10640
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10657
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !10659
  %15 = icmp eq i32 %14, 0, !dbg !10659
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !10648
  br i1 %15, label %17, label %19, !dbg !10660

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !10651, metadata !DIExpression()) #23, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %16, metadata !10639, metadata !DIExpression()), !dbg !10640
  call void @llvm.dbg.value(metadata i32 undef, metadata !10661, metadata !DIExpression()) #23, !dbg !10664
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !10666, !srcloc !10667
  br label %18, !dbg !10668

18:                                               ; preds = %17, %7
  br label %7, !dbg !10643, !llvm.loop !10669

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !10648
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10671
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %20, metadata !10661, metadata !DIExpression()) #23, !dbg !10673
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !10675, !srcloc !10667
  ret void, !dbg !10676
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #14 !dbg !10677 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10679, metadata !DIExpression()), !dbg !10682
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10683
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10683
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10683
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10680, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata i32 0, metadata !10681, metadata !DIExpression()), !dbg !10682
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10684
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10684
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !10686
  %8 = icmp ne i32 %7, 0, !dbg !10686
  %9 = zext i1 %8 to i32, !dbg !10687
  call void @llvm.dbg.value(metadata i32 %9, metadata !10681, metadata !DIExpression()), !dbg !10682
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10688
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !10690
  %12 = icmp eq i32 %11, 0, !dbg !10690
  %13 = or i32 %9, 2, !dbg !10691
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !10691
  call void @llvm.dbg.value(metadata i32 %14, metadata !10681, metadata !DIExpression()), !dbg !10682
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10692
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !10694
  %17 = icmp eq i32 %16, 0, !dbg !10694
  %18 = or i32 %14, 4, !dbg !10695
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !10695
  call void @llvm.dbg.value(metadata i32 %19, metadata !10681, metadata !DIExpression()), !dbg !10682
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10696
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !10698
  %22 = icmp eq i32 %21, 0, !dbg !10698
  %23 = or i32 %19, 8, !dbg !10699
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !10699
  call void @llvm.dbg.value(metadata i32 %24, metadata !10681, metadata !DIExpression()), !dbg !10682
  %25 = and i32 %24, 8, !dbg !10700
  %26 = icmp eq i32 %25, 0, !dbg !10700
  br i1 %26, label %29, label %27, !dbg !10702

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10703
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !10705
  br label %29, !dbg !10706

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !10707
  %31 = icmp eq i32 %30, 0, !dbg !10707
  br i1 %31, label %34, label %32, !dbg !10709

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10710
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !10712
  br label %34, !dbg !10713

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !10714
  %36 = icmp eq i32 %35, 0, !dbg !10714
  br i1 %36, label %39, label %37, !dbg !10716

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10717
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !10719
  br label %39, !dbg !10720

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !10721
  %41 = icmp eq i32 %40, 0, !dbg !10721
  br i1 %41, label %44, label %42, !dbg !10723

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10724
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !10726
  br label %44, !dbg !10727

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10728
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !10729
  ret i32 %24, !dbg !10730
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !10731 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10733, metadata !DIExpression()), !dbg !10742
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10734, metadata !DIExpression()), !dbg !10742
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10743
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10743
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10743
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10735, metadata !DIExpression()), !dbg !10742
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10744
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !10744
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !10744
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !10736, metadata !DIExpression()), !dbg !10742
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10745
  %10 = load i8, i8* %9, align 4, !dbg !10745
  %11 = zext i8 %10 to i32, !dbg !10746
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !10747
  call void @llvm.dbg.value(metadata i32 %12, metadata !10738, metadata !DIExpression()), !dbg !10742
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10748
  %14 = load i8, i8* %13, align 1, !dbg !10748
  %15 = zext i8 %14 to i32, !dbg !10749
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !10750
  call void @llvm.dbg.value(metadata i32 %16, metadata !10739, metadata !DIExpression()), !dbg !10742
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10751
  %18 = load i8, i8* %17, align 2, !dbg !10751
  %19 = zext i8 %18 to i32, !dbg !10752
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !10753
  call void @llvm.dbg.value(metadata i32 %20, metadata !10740, metadata !DIExpression()), !dbg !10742
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10754
  %22 = load i8, i8* %21, align 1, !dbg !10754
  %23 = zext i8 %22 to i32, !dbg !10755
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %24, metadata !10741, metadata !DIExpression()), !dbg !10742
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !10757

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !10759
  br i1 %26, label %69, label %27, !dbg !10761

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !10762

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !10763
  br i1 %29, label %65, label %30, !dbg !10763

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !10765
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !10742
  br i1 %31, label %38, label %34, !dbg !10767

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !10768
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !10768

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !10771
  br i1 %37, label %38, label %69, !dbg !10772

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10773
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !10774
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !10775
  %41 = icmp eq i32 %12, %40, !dbg !10777
  br i1 %41, label %43, label %42, !dbg !10778

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !10779
  br label %43, !dbg !10781

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !10782
  %45 = icmp eq i32 %16, %44, !dbg !10784
  br i1 %45, label %47, label %46, !dbg !10785

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !10786
  br label %47, !dbg !10788

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !10789
  %49 = icmp eq i32 %20, %48, !dbg !10791
  br i1 %49, label %51, label %50, !dbg !10792

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !10793
  br label %51, !dbg !10795

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !10796
  %53 = icmp eq i32 %24, %52, !dbg !10798
  br i1 %53, label %55, label %54, !dbg !10799

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10800
  br label %55, !dbg !10802

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10803
  %57 = load i32, i32* %56, align 4, !dbg !10803
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10805
  %59 = load i32, i32* %58, align 4, !dbg !10805
  %60 = icmp eq i32 %57, %59, !dbg !10806
  br i1 %60, label %63, label %61, !dbg !10807

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10808
  %62 = load i32, i32* %56, align 4, !dbg !10810
  store i32 %62, i32* %58, align 4, !dbg !10811
  br label %63, !dbg !10812

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10813
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10814
  br label %69, !dbg !10815

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !10763
  %67 = and i8 %66, 1, !dbg !10763
  %68 = icmp eq i8 %67, 0, !dbg !10763
  br i1 %68, label %30, label %69, !dbg !10763

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !10742
  ret i32 %70, !dbg !10816
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10817 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10819, metadata !DIExpression()), !dbg !10822
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10820, metadata !DIExpression()), !dbg !10822
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10823
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10823
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10823
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10821, metadata !DIExpression()), !dbg !10822
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10824
  %7 = load i32, i32* %6, align 4, !dbg !10824
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10825
  store i32 %7, i32* %8, align 4, !dbg !10826
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10827, !range !10828
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10829
  %11 = trunc i32 %10 to i8, !dbg !10829
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10830
  store i8 %11, i8* %12, align 4, !dbg !10831
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10832, !range !10833
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10834
  %15 = trunc i32 %14 to i8, !dbg !10834
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10835
  store i8 %15, i8* %16, align 1, !dbg !10836
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10837
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10838, !range !10828
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10839
  %20 = trunc i32 %19 to i8, !dbg !10839
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10840
  store i8 %20, i8* %21, align 2, !dbg !10841
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10842, !range !10843
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10844
  %24 = trunc i32 %23 to i8, !dbg !10844
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10845
  store i8 %24, i8* %25, align 1, !dbg !10846
  ret i32 0, !dbg !10847
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10848 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10852, metadata !DIExpression()), !dbg !10854
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10855
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10855
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10855
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10853, metadata !DIExpression()), !dbg !10854
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10856
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10856
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10857
  ret i32 %7, !dbg !10858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !10859 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10863, metadata !DIExpression()), !dbg !10864
  %2 = icmp eq i32 %0, 1024, !dbg !10865
  %3 = select i1 %2, i32 2, i32 0, !dbg !10865
  %4 = icmp eq i32 %0, 1536, !dbg !10865
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10865
  ret i32 %5, !dbg !10866
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10867 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10869, metadata !DIExpression()), !dbg !10871
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10872
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10872
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10872
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10870, metadata !DIExpression()), !dbg !10871
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10873
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10873
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10874
  ret i32 %7, !dbg !10875
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10880, metadata !DIExpression()), !dbg !10881
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10882
  %3 = icmp ult i32 %2, 4, !dbg !10882
  br i1 %3, label %4, label %7, !dbg !10882

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10882
  %6 = load i32, i32* %5, align 4, !dbg !10882
  br label %7, !dbg !10882

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10883
  ret i32 %8, !dbg !10885
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10886 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10888, metadata !DIExpression()), !dbg !10890
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10891
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10891
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10891
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10889, metadata !DIExpression()), !dbg !10890
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10892
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10892
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10893
  ret i32 %7, !dbg !10894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10895 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10899, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.value(metadata i32 %1, metadata !10900, metadata !DIExpression()), !dbg !10901
  %3 = icmp eq i32 %0, 4096, !dbg !10902
  %4 = icmp eq i32 %1, 0, !dbg !10902
  %5 = select i1 %4, i32 4, i32 3, !dbg !10902
  %6 = select i1 %4, i32 3, i32 2, !dbg !10902
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10902
  ret i32 %7, !dbg !10903
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !10904 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10906, metadata !DIExpression()), !dbg !10908
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10909
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10909
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10909
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10907, metadata !DIExpression()), !dbg !10908
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10910
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10910
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10911
  ret i32 %7, !dbg !10912
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10913 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10917, metadata !DIExpression()), !dbg !10918
  %2 = icmp eq i32 %0, 768, !dbg !10919
  %3 = zext i1 %2 to i32, !dbg !10918
  ret i32 %3, !dbg !10921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10922 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10927, metadata !DIExpression()), !dbg !10928
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10929
  %3 = load volatile i32, i32* %2, align 4, !dbg !10929
  %4 = and i32 %3, 768, !dbg !10929
  ret i32 %4, !dbg !10930
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10931 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10933, metadata !DIExpression()), !dbg !10934
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10935
  %3 = load volatile i32, i32* %2, align 4, !dbg !10935
  %4 = and i32 %3, 4096, !dbg !10935
  ret i32 %4, !dbg !10936
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10937 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10939, metadata !DIExpression()), !dbg !10940
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10941
  %3 = load volatile i32, i32* %2, align 4, !dbg !10941
  %4 = and i32 %3, 12288, !dbg !10941
  ret i32 %4, !dbg !10942
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10943 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10945, metadata !DIExpression()), !dbg !10946
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10947
  %3 = load volatile i32, i32* %2, align 4, !dbg !10947
  %4 = and i32 %3, 1536, !dbg !10947
  ret i32 %4, !dbg !10948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !10949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10953, metadata !DIExpression()), !dbg !10954
  %2 = icmp eq i32 %0, 2, !dbg !10955
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10955
  %4 = icmp eq i32 %0, 1, !dbg !10955
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10955
  ret i32 %5, !dbg !10956
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !10957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10961, metadata !DIExpression()), !dbg !10962
  %2 = icmp ult i32 %0, 3, !dbg !10963
  br i1 %2, label %3, label %6, !dbg !10963

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10963
  %5 = load i32, i32* %4, align 4, !dbg !10963
  br label %6, !dbg !10963

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10964
  ret i32 %7, !dbg !10966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !10967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10971, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.value(metadata i32 %1, metadata !10972, metadata !DIExpression()), !dbg !10973
  %3 = icmp eq i32 %0, 4, !dbg !10974
  %4 = icmp eq i32 %1, 0, !dbg !10974
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10974
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10974
  ret i32 %6, !dbg !10975
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !10976 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10980, metadata !DIExpression()), !dbg !10981
  %2 = icmp eq i32 %0, 1, !dbg !10982
  %3 = select i1 %2, i32 768, i32 0, !dbg !10981
  ret i32 %3, !dbg !10984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10985 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10989, metadata !DIExpression()), !dbg !10990
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10991
  %3 = load volatile i32, i32* %2, align 4, !dbg !10991
  %4 = and i32 %3, -8193, !dbg !10991
  store volatile i32 %4, i32* %2, align 4, !dbg !10991
  ret void, !dbg !10992
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10993 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10997, metadata !DIExpression()), !dbg !11000
  call void @llvm.dbg.value(metadata i32 %1, metadata !10998, metadata !DIExpression()), !dbg !11000
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11001
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11001
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11001
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10999, metadata !DIExpression()), !dbg !11000
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11002
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11002
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11003
  ret void, !dbg !11004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11005 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11007, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32 %1, metadata !11008, metadata !DIExpression()), !dbg !11010
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11011
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11011
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11011
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11009, metadata !DIExpression()), !dbg !11010
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11012
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11012
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11013
  ret void, !dbg !11014
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11015 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11017, metadata !DIExpression()), !dbg !11020
  call void @llvm.dbg.value(metadata i32 %1, metadata !11018, metadata !DIExpression()), !dbg !11020
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11021
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11021
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11021
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11019, metadata !DIExpression()), !dbg !11020
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11022
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11022
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11023
  ret void, !dbg !11024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !11025 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11027, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i32 %1, metadata !11028, metadata !DIExpression()), !dbg !11030
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11031
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !11031
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !11031
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !11029, metadata !DIExpression()), !dbg !11030
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !11032
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !11032
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !11033
  ret void, !dbg !11034
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !11035 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11037, metadata !DIExpression()), !dbg !11042
  call void @llvm.dbg.value(metadata i32 %1, metadata !11038, metadata !DIExpression()), !dbg !11042
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11043
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !11043
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !11043
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !11039, metadata !DIExpression()), !dbg !11042
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11044
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !11044
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !11044
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !11040, metadata !DIExpression()), !dbg !11042
  %10 = bitcast i32* %3 to i8*, !dbg !11045
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11045
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !11046
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !11046
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !11050
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !11050
  %15 = load i8*, i8** %14, align 4, !dbg !11050
  call void @llvm.dbg.value(metadata i32* %3, metadata !11041, metadata !DIExpression(DW_OP_deref)), !dbg !11042
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !11051
  %17 = icmp slt i32 %16, 0, !dbg !11052
  br i1 %17, label %18, label %21, !dbg !11053

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef 1) #24, !dbg !11054
  %20 = zext i8 %19 to i32, !dbg !11054
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.175, i32 0, i32 0), i32 noundef %20) #25, !dbg !11054
  br label %31, !dbg !11060

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !11061
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11061
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !11062
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11063
  %25 = load i32, i32* %3, align 4, !dbg !11064
  call void @llvm.dbg.value(metadata i32 %25, metadata !11041, metadata !DIExpression()), !dbg !11042
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !11065
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !11066
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !11066
  %28 = load volatile i32, i32* %27, align 4, !dbg !11066
  %29 = icmp ugt i32 %28, 16, !dbg !11066
  br i1 %29, label %31, label %30, !dbg !11069

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.176, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.177, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.178, i32 0, i32 0), i32 noundef 190) #25, !dbg !11070
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.179, i32 0, i32 0)) #25, !dbg !11070
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.178, i32 0, i32 0), i32 noundef 190) #25, !dbg !11070
  unreachable, !dbg !11070

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !11072
  ret void, !dbg !11072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11073 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11075, metadata !DIExpression()), !dbg !11076
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11077
  %3 = load volatile i32, i32* %2, align 4, !dbg !11077
  %4 = or i32 %3, 8192, !dbg !11077
  store volatile i32 %4, i32* %2, align 4, !dbg !11077
  ret void, !dbg !11078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !11079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11081, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata i8* %1, metadata !11082, metadata !DIExpression()), !dbg !11085
  call void @llvm.dbg.value(metadata i32* %2, metadata !11083, metadata !DIExpression()), !dbg !11085
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11086
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !11086
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !11086
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !11084, metadata !DIExpression()), !dbg !11085
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !11087
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !11087
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !11089
  br i1 %9, label %12, label %10, !dbg !11090

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !11091
  br label %12, !dbg !11092

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !11085
  ret i32 %13, !dbg !11093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef %0) unnamed_addr #4 !dbg !11094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11096, metadata !DIExpression()), !dbg !11097
  %2 = icmp eq i32 %0, 2, !dbg !11098
  %3 = select i1 %2, i8 87, i8 63, !dbg !11098
  %4 = icmp eq i32 %0, 1, !dbg !11098
  %5 = select i1 %4, i8 69, i8 %3, !dbg !11098
  ret i8 %5, !dbg !11099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11100 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11104, metadata !DIExpression()), !dbg !11106
  call void @llvm.dbg.value(metadata i32 0, metadata !11105, metadata !DIExpression()), !dbg !11106
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11107
  %3 = load volatile i32, i32* %2, align 4, !dbg !11107
  %4 = and i32 %3, -32769, !dbg !11107
  store volatile i32 %4, i32* %2, align 4, !dbg !11107
  ret void, !dbg !11108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11109 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11113, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 %1, metadata !11114, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 0, metadata !11115, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.value(metadata i32 %2, metadata !11116, metadata !DIExpression()), !dbg !11117
  %4 = mul i32 %1, 25, !dbg !11118
  %5 = shl i32 %2, 2, !dbg !11118
  %6 = udiv i32 %4, %5, !dbg !11118
  %7 = udiv i32 %6, 100, !dbg !11118
  %8 = shl nuw nsw i32 %7, 4, !dbg !11118
  %9 = mul i32 %7, -100, !dbg !11118
  %10 = add i32 %9, %6, !dbg !11118
  %11 = shl i32 %10, 4, !dbg !11118
  %12 = add i32 %11, 50, !dbg !11118
  %13 = udiv i32 %12, 100, !dbg !11118
  %14 = and i32 %13, 240, !dbg !11118
  %15 = add nuw nsw i32 %14, %8, !dbg !11118
  %16 = and i32 %13, 15, !dbg !11118
  %17 = and i32 %15, 65520, !dbg !11121
  %18 = or i32 %17, %16, !dbg !11121
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !11122
  store volatile i32 %18, i32* %19, align 4, !dbg !11123
  ret void, !dbg !11124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11125 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11127, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.value(metadata i32 %1, metadata !11128, metadata !DIExpression()), !dbg !11129
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11130
  %4 = load volatile i32, i32* %3, align 4, !dbg !11130
  %5 = and i32 %4, -769, !dbg !11130
  %6 = or i32 %5, %1, !dbg !11130
  store volatile i32 %6, i32* %3, align 4, !dbg !11130
  ret void, !dbg !11131
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11132 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11134, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.value(metadata i32 %1, metadata !11135, metadata !DIExpression()), !dbg !11136
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11137
  %4 = load volatile i32, i32* %3, align 4, !dbg !11137
  %5 = and i32 %4, -4097, !dbg !11137
  %6 = or i32 %5, %1, !dbg !11137
  store volatile i32 %6, i32* %3, align 4, !dbg !11137
  ret void, !dbg !11138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11139 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11141, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.value(metadata i32 %1, metadata !11142, metadata !DIExpression()), !dbg !11143
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11144
  %4 = load volatile i32, i32* %3, align 4, !dbg !11144
  %5 = and i32 %4, -12289, !dbg !11144
  %6 = or i32 %5, %1, !dbg !11144
  store volatile i32 %6, i32* %3, align 4, !dbg !11144
  ret void, !dbg !11145
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11146 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11148, metadata !DIExpression()), !dbg !11150
  call void @llvm.dbg.value(metadata i32 %1, metadata !11149, metadata !DIExpression()), !dbg !11150
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11151
  %4 = load volatile i32, i32* %3, align 4, !dbg !11151
  %5 = and i32 %4, -1537, !dbg !11151
  %6 = or i32 %5, %1, !dbg !11151
  store volatile i32 %6, i32* %3, align 4, !dbg !11151
  ret void, !dbg !11152
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11153 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11155, metadata !DIExpression()), !dbg !11156
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11157
  %3 = load volatile i32, i32* %2, align 4, !dbg !11157
  %4 = lshr i32 %3, 3, !dbg !11158
  %5 = and i32 %4, 1, !dbg !11158
  ret i32 %5, !dbg !11159
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11160 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11162, metadata !DIExpression()), !dbg !11163
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11164
  %3 = load volatile i32, i32* %2, align 4, !dbg !11164
  %4 = and i32 %3, 1, !dbg !11164
  ret i32 %4, !dbg !11165
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11166 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11168, metadata !DIExpression()), !dbg !11169
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11170
  %3 = load volatile i32, i32* %2, align 4, !dbg !11170
  %4 = lshr i32 %3, 1, !dbg !11171
  %5 = and i32 %4, 1, !dbg !11171
  ret i32 %5, !dbg !11172
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11173 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11175, metadata !DIExpression()), !dbg !11176
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11177
  %3 = load volatile i32, i32* %2, align 4, !dbg !11177
  %4 = lshr i32 %3, 8, !dbg !11178
  %5 = and i32 %4, 1, !dbg !11178
  ret i32 %5, !dbg !11179
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11180 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11182, metadata !DIExpression()), !dbg !11183
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11184
  store volatile i32 -257, i32* %2, align 4, !dbg !11184
  ret void, !dbg !11185
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11186 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11188, metadata !DIExpression()), !dbg !11190
  %3 = bitcast i32* %2 to i8*, !dbg !11191
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11191
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11189, metadata !DIExpression()), !dbg !11192
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11193
  %5 = load volatile i32, i32* %4, align 4, !dbg !11193
  store volatile i32 %5, i32* %2, align 4, !dbg !11194
  %6 = load volatile i32, i32* %2, align 4, !dbg !11195
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11196
  %8 = load volatile i32, i32* %7, align 4, !dbg !11196
  store volatile i32 %8, i32* %2, align 4, !dbg !11197
  %9 = load volatile i32, i32* %2, align 4, !dbg !11198
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11199
  ret void, !dbg !11199
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11200 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11202, metadata !DIExpression()), !dbg !11204
  %3 = bitcast i32* %2 to i8*, !dbg !11205
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11205
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11203, metadata !DIExpression()), !dbg !11206
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11207
  %5 = load volatile i32, i32* %4, align 4, !dbg !11207
  store volatile i32 %5, i32* %2, align 4, !dbg !11208
  %6 = load volatile i32, i32* %2, align 4, !dbg !11209
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11210
  %8 = load volatile i32, i32* %7, align 4, !dbg !11210
  store volatile i32 %8, i32* %2, align 4, !dbg !11211
  %9 = load volatile i32, i32* %2, align 4, !dbg !11212
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11213
  ret void, !dbg !11213
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11214 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11216, metadata !DIExpression()), !dbg !11218
  %3 = bitcast i32* %2 to i8*, !dbg !11219
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11219
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11217, metadata !DIExpression()), !dbg !11220
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11221
  %5 = load volatile i32, i32* %4, align 4, !dbg !11221
  store volatile i32 %5, i32* %2, align 4, !dbg !11222
  %6 = load volatile i32, i32* %2, align 4, !dbg !11223
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11224
  %8 = load volatile i32, i32* %7, align 4, !dbg !11224
  store volatile i32 %8, i32* %2, align 4, !dbg !11225
  %9 = load volatile i32, i32* %2, align 4, !dbg !11226
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11227
  ret void, !dbg !11227
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !11228 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11230, metadata !DIExpression()), !dbg !11232
  %3 = bitcast i32* %2 to i8*, !dbg !11233
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11233
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11231, metadata !DIExpression()), !dbg !11234
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11235
  %5 = load volatile i32, i32* %4, align 4, !dbg !11235
  store volatile i32 %5, i32* %2, align 4, !dbg !11236
  %6 = load volatile i32, i32* %2, align 4, !dbg !11237
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11238
  %8 = load volatile i32, i32* %7, align 4, !dbg !11238
  store volatile i32 %8, i32* %2, align 4, !dbg !11239
  %9 = load volatile i32, i32* %2, align 4, !dbg !11240
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11241
  ret void, !dbg !11241
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11242 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11244, metadata !DIExpression()), !dbg !11245
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11246
  %3 = load volatile i32, i32* %2, align 4, !dbg !11246
  %4 = lshr i32 %3, 7, !dbg !11247
  %5 = and i32 %4, 1, !dbg !11247
  ret i32 %5, !dbg !11248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !11249 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11253, metadata !DIExpression()), !dbg !11255
  call void @llvm.dbg.value(metadata i8 %1, metadata !11254, metadata !DIExpression()), !dbg !11255
  %3 = zext i8 %1 to i32, !dbg !11256
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11257
  store volatile i32 %3, i32* %4, align 4, !dbg !11258
  ret void, !dbg !11259
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11260 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11262, metadata !DIExpression()), !dbg !11263
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !11264
  %3 = load volatile i32, i32* %2, align 4, !dbg !11264
  %4 = lshr i32 %3, 5, !dbg !11265
  %5 = and i32 %4, 1, !dbg !11265
  ret i32 %5, !dbg !11266
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !11267 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11271, metadata !DIExpression()), !dbg !11272
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !11273
  %3 = load volatile i32, i32* %2, align 4, !dbg !11273
  %4 = trunc i32 %3 to i8, !dbg !11274
  ret i8 %4, !dbg !11275
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !11276 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11278, metadata !DIExpression()), !dbg !11284
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11285
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !11285
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !11285
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !11279, metadata !DIExpression()), !dbg !11284
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11286
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !11286
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !11286
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !11280, metadata !DIExpression()), !dbg !11284
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !11287
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !11288
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !11288
  %10 = tail call fastcc zeroext i1 @device_is_ready.184(%struct.device* noundef %9) #24, !dbg !11290
  br i1 %10, label %14, label %11, !dbg !11291

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef 1) #24, !dbg !11292
  %13 = zext i8 %12 to i32, !dbg !11292
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.185, i32 0, i32 0), i32 noundef %13) #25, !dbg !11292
  br label %62, !dbg !11298

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !11299
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !11300
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !11300
  %18 = load i8*, i8** %17, align 4, !dbg !11300
  %19 = tail call fastcc i32 @clock_control_on.186(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !11301
  call void @llvm.dbg.value(metadata i32 %19, metadata !11283, metadata !DIExpression()), !dbg !11284
  %20 = icmp eq i32 %19, 0, !dbg !11302
  br i1 %20, label %24, label %21, !dbg !11304

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef 1) #24, !dbg !11305
  %23 = zext i8 %22 to i32, !dbg !11305
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.187, i32 0, i32 0), i32 noundef %23) #25, !dbg !11305
  br label %62, !dbg !11311

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !11312
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !11312
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !11313
  call void @llvm.dbg.value(metadata i32 %27, metadata !11283, metadata !DIExpression()), !dbg !11284
  %28 = icmp slt i32 %27, 0, !dbg !11314
  br i1 %28, label %62, label %29, !dbg !11316

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !11317
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11317
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !11318
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11319
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !11320
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !11321
  %34 = load i32, i32* %33, align 4, !dbg !11321
  %35 = icmp ult i32 %34, 3, !dbg !11323
  br i1 %35, label %39, label %36, !dbg !11323

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.174(i32 noundef 2) #24, !dbg !11324
  %38 = zext i8 %37 to i32, !dbg !11324
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10.188, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !11324
  call void @llvm.dbg.value(metadata i32 0, metadata !11281, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata i32 0, metadata !11282, metadata !DIExpression()), !dbg !11284
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !11323
  %41 = load i32, i32* %40, align 4, !dbg !11323
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.11, i32 0, i32 %34, !dbg !11323
  %43 = load i32, i32* %42, align 4, !dbg !11323
  br label %44, !dbg !11323

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !11333
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !11333
  call void @llvm.dbg.value(metadata i32 %46, metadata !11282, metadata !DIExpression()), !dbg !11284
  call void @llvm.dbg.value(metadata i32 %45, metadata !11281, metadata !DIExpression()), !dbg !11284
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11334
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !11335
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !11336
  %49 = load i8, i8* %48, align 4, !dbg !11336, !range !6558
  %50 = icmp eq i8 %49, 0, !dbg !11336
  br i1 %50, label %52, label %51, !dbg !11338

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !11339
  br label %52, !dbg !11341

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !11342
  %54 = load i32, i32* %53, align 4, !dbg !11342
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !11343
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !11344
  %56 = load i8, i8* %55, align 4, !dbg !11344, !range !6558
  %57 = icmp eq i8 %56, 0, !dbg !11344
  br i1 %57, label %60, label %58, !dbg !11346

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11347
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !11349
  br label %60, !dbg !11350

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !11351
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !11352
  br label %62, !dbg !11353

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !11284
  ret i32 %63, !dbg !11354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !11355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11359, metadata !DIExpression()), !dbg !11363
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11364
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !11364
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !11364
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !11360, metadata !DIExpression()), !dbg !11363
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !11361, metadata !DIExpression()), !dbg !11363
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !11365
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !11366
  ret void, !dbg !11367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.184(%struct.device* noundef %0) unnamed_addr #1 !dbg !11368 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11372, metadata !DIExpression()), !dbg !11373
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11374, !srcloc !11376
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) #24, !dbg !11377
  ret i1 %2, !dbg !11378
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.186(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !11379 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11381, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.value(metadata i8* %1, metadata !11382, metadata !DIExpression()), !dbg !11384
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !11385
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !11385
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !11385
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !11383, metadata !DIExpression()), !dbg !11384
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !11386
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !11386
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !11387
  ret i32 %8, !dbg !11388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !11389 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11393, metadata !DIExpression()), !dbg !11397
  call void @llvm.dbg.value(metadata i8 0, metadata !11394, metadata !DIExpression()), !dbg !11397
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !11398
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11398
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11396, metadata !DIExpression(DW_OP_deref)), !dbg !11397
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !11399
  call void @llvm.dbg.value(metadata i32 %4, metadata !11395, metadata !DIExpression()), !dbg !11397
  %5 = icmp slt i32 %4, 0, !dbg !11400
  br i1 %5, label %9, label %6, !dbg !11402

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !11403
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !11396, metadata !DIExpression()), !dbg !11397
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !11404
  br label %9, !dbg !11405

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !11397
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !11406
  ret i32 %10, !dbg !11406
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11407 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata i32 12, metadata !11410, metadata !DIExpression()), !dbg !11411
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11412
  %3 = load volatile i32, i32* %2, align 4, !dbg !11412
  %4 = or i32 %3, 12, !dbg !11412
  store volatile i32 %4, i32* %2, align 4, !dbg !11412
  ret void, !dbg !11413
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11414 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11416, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 %1, metadata !11417, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 %2, metadata !11418, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.value(metadata i32 0, metadata !11419, metadata !DIExpression()), !dbg !11420
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !11421
  %5 = load volatile i32, i32* %4, align 4, !dbg !11421
  %6 = and i32 %5, -5633, !dbg !11421
  %7 = or i32 %2, %1, !dbg !11421
  %8 = or i32 %7, %6, !dbg !11421
  store volatile i32 %8, i32* %4, align 4, !dbg !11421
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !11422
  %10 = load volatile i32, i32* %9, align 4, !dbg !11422
  %11 = and i32 %10, -12289, !dbg !11422
  store volatile i32 %11, i32* %9, align 4, !dbg !11422
  ret void, !dbg !11423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !11424 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !11426, metadata !DIExpression()), !dbg !11427
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !11428
  %3 = load volatile i32, i32* %2, align 4, !dbg !11428
  %4 = or i32 %3, 8, !dbg !11428
  store volatile i32 %4, i32* %2, align 4, !dbg !11428
  ret void, !dbg !11429
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11430 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !11434, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !11435, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.value(metadata i32 0, metadata !11436, metadata !DIExpression()), !dbg !11437
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !11438
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !11438
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !11439
  %5 = load i8, i8* %4, align 4, !dbg !11439
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !11440
  ret i32 %6, !dbg !11441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.189(%struct.device* noundef %0) unnamed_addr #1 !dbg !11442 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11444, metadata !DIExpression()), !dbg !11445
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11446
  ret i1 %2, !dbg !11447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !11448 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11450, metadata !DIExpression()), !dbg !11451
  tail call fastcc void @__NVIC_SetPriority.191() #24, !dbg !11452
  store i32 3199, i32* @last_load, align 4, !dbg !11453
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11454
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11455
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11456
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11457
  %3 = or i32 %2, 7, !dbg !11457
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11457
  ret i32 0, !dbg !11458
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.191() unnamed_addr #15 !dbg !11459 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !11461, metadata !DIExpression()), !dbg !11463
  call void @llvm.dbg.value(metadata i32 1, metadata !11462, metadata !DIExpression()), !dbg !11463
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !11464
  ret void, !dbg !11467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !11468 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11470, metadata !DIExpression()), !dbg !11472
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !11473
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11474
  %4 = load i32, i32* @cycle_count, align 4, !dbg !11475
  %5 = add i32 %4, %3, !dbg !11475
  store i32 %5, i32* @cycle_count, align 4, !dbg !11475
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11476
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !11477
  %7 = sub i32 %5, %6, !dbg !11480
  %8 = udiv i32 %7, 3200, !dbg !11481
  call void @llvm.dbg.value(metadata i32 %8, metadata !11471, metadata !DIExpression()), !dbg !11472
  %9 = mul nuw i32 %8, 3200, !dbg !11482
  %10 = add i32 %9, %6, !dbg !11483
  store i32 %10, i32* @announced_cycles, align 4, !dbg !11483
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !11484
  tail call void @z_arm_int_exit() #25, !dbg !11485
  ret void, !dbg !11486
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !11487 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11492
  call void @llvm.dbg.value(metadata i32 %1, metadata !11489, metadata !DIExpression()), !dbg !11493
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11494
  call void @llvm.dbg.value(metadata i32 %2, metadata !11490, metadata !DIExpression()), !dbg !11493
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11495
  call void @llvm.dbg.value(metadata i32 %3, metadata !11491, metadata !DIExpression()), !dbg !11493
  %4 = and i32 %2, 65536, !dbg !11496
  %5 = icmp ne i32 %4, 0, !dbg !11496
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !11498
  %8 = load i32, i32* @last_load, align 4, !dbg !11493
  br i1 %7, label %9, label %13, !dbg !11498

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11499
  %11 = add i32 %10, %8, !dbg !11499
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !11499
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11501
  br label %13, !dbg !11502

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !11503
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !11504
  %16 = add i32 %14, %15, !dbg !11505
  ret i32 %16, !dbg !11506
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !11507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11511, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i1 %1, metadata !11512, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11524
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !11525
  br i1 %4, label %5, label %8, !dbg !11525

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11527
  %7 = and i32 %6, -2, !dbg !11527
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11527
  store i32 -16777216, i32* @last_load, align 4, !dbg !11529
  br label %60, !dbg !11530

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !11531
  call void @llvm.dbg.value(metadata i32 %9, metadata !11516, metadata !DIExpression()), !dbg !11524
  br i1 %3, label %18, label %10, !dbg !11532

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !11532
  call void @llvm.dbg.value(metadata i32 undef, metadata !11511, metadata !DIExpression()), !dbg !11524
  %12 = icmp slt i32 %11, 1, !dbg !11533
  br i1 %12, label %18, label %13, !dbg !11533

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !11533
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !11533
  %16 = mul nuw nsw i32 %15, 3200, !dbg !11533
  %17 = add nuw nsw i32 %16, 3199, !dbg !11533
  br label %18, !dbg !11533

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !11511, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11534, metadata !DIExpression()) #23, !dbg !11541
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11543, !srcloc !11549
  call void @llvm.dbg.value(metadata i32 undef, metadata !11546, metadata !DIExpression()) #23, !dbg !11550
  call void @llvm.dbg.value(metadata i32 undef, metadata !11547, metadata !DIExpression()) #23, !dbg !11550
  call void @llvm.dbg.value(metadata i32 undef, metadata !11540, metadata !DIExpression()) #23, !dbg !11541
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11551
  br i1 %21, label %23, label %22, !dbg !11554

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11555
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.195, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11555
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11555
  unreachable, !dbg !11555

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !11543
  call void @llvm.dbg.value(metadata i32 %24, metadata !11546, metadata !DIExpression()) #23, !dbg !11550
  call void @llvm.dbg.value(metadata i32 %24, metadata !11540, metadata !DIExpression()) #23, !dbg !11541
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11557
  call void @llvm.dbg.value(metadata i32 %24, metadata !11517, metadata !DIExpression()), !dbg !11524
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !11558
  call void @llvm.dbg.value(metadata i32 %25, metadata !11522, metadata !DIExpression()), !dbg !11524
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11559
  call void @llvm.dbg.value(metadata i32 %26, metadata !11514, metadata !DIExpression()), !dbg !11524
  %27 = load i32, i32* @cycle_count, align 4, !dbg !11560
  %28 = add i32 %27, %25, !dbg !11560
  store i32 %28, i32* @cycle_count, align 4, !dbg !11560
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !11561
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !11562
  %30 = sub i32 %28, %29, !dbg !11563
  call void @llvm.dbg.value(metadata i32 %30, metadata !11523, metadata !DIExpression()), !dbg !11524
  %31 = icmp slt i32 %30, 0, !dbg !11564
  br i1 %31, label %41, label %32, !dbg !11566

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !11513, metadata !DIExpression()), !dbg !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11513, metadata !DIExpression()), !dbg !11524
  %33 = add nuw i32 %19, %30, !dbg !11567
  %34 = urem i32 %33, 3200, !dbg !11569
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !11513, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11524
  %35 = sub nuw nsw i32 %19, %34, !dbg !11570
  call void @llvm.dbg.value(metadata i32 %35, metadata !11513, metadata !DIExpression()), !dbg !11524
  %36 = icmp ugt i32 %35, 1024, !dbg !11571
  br i1 %36, label %37, label %39, !dbg !11571

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !11513, metadata !DIExpression()), !dbg !11524
  %38 = icmp ugt i32 %35, 16771200, !dbg !11572
  br i1 %38, label %41, label %39, !dbg !11574

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16771200, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !11575
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %43, metadata !11515, metadata !DIExpression()), !dbg !11524
  %44 = add nsw i32 %42, -1, !dbg !11577
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11578
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11579
  %45 = icmp ult i32 %26, %43, !dbg !11580
  br i1 %45, label %46, label %51, !dbg !11582

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !11583
  %48 = add i32 %26, %9, !dbg !11585
  %49 = sub i32 %48, %43, !dbg !11586
  %50 = add i32 %49, %47, !dbg !11583
  br label %55, !dbg !11587

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !11588
  %53 = load i32, i32* @cycle_count, align 4, !dbg !11590
  %54 = add i32 %52, %53, !dbg !11590
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !11591
  store i32 %56, i32* @cycle_count, align 4, !dbg !11591
  call void @llvm.dbg.value(metadata i32 undef, metadata !11592, metadata !DIExpression()) #23, !dbg !11598
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11597, metadata !DIExpression()) #23, !dbg !11598
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11600
  br i1 %57, label %59, label %58, !dbg !11603

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.197, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11604
  unreachable, !dbg !11604

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !11592, metadata !DIExpression()) #23, !dbg !11598
  call void @llvm.dbg.value(metadata i32 %24, metadata !11606, metadata !DIExpression()) #23, !dbg !11609
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !11611, !srcloc !11612
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !11613
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !11614 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11534, metadata !DIExpression()) #23, !dbg !11618
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11620, !srcloc !11549
  call void @llvm.dbg.value(metadata i32 undef, metadata !11546, metadata !DIExpression()) #23, !dbg !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11547, metadata !DIExpression()) #23, !dbg !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11540, metadata !DIExpression()) #23, !dbg !11618
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11623
  br i1 %2, label %4, label %3, !dbg !11624

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11625
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.195, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11625
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11625
  unreachable, !dbg !11625

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11546, metadata !DIExpression()) #23, !dbg !11622
  call void @llvm.dbg.value(metadata i32 undef, metadata !11540, metadata !DIExpression()) #23, !dbg !11618
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11626
  call void @llvm.dbg.value(metadata i32 undef, metadata !11616, metadata !DIExpression()), !dbg !11627
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11628
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11629
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !11630
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !11617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11627
  call void @llvm.dbg.value(metadata i32 undef, metadata !11592, metadata !DIExpression()) #23, !dbg !11631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11597, metadata !DIExpression()) #23, !dbg !11631
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11633
  br i1 %8, label %10, label %9, !dbg !11634

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11635
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.197, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11635
  unreachable, !dbg !11635

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !11636
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !11617, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11627
  %12 = sub i32 %11, %7, !dbg !11637
  call void @llvm.dbg.value(metadata i32 %12, metadata !11617, metadata !DIExpression()), !dbg !11627
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !11620
  call void @llvm.dbg.value(metadata i32 %13, metadata !11546, metadata !DIExpression()) #23, !dbg !11622
  call void @llvm.dbg.value(metadata i32 %13, metadata !11540, metadata !DIExpression()) #23, !dbg !11618
  call void @llvm.dbg.value(metadata i32 %13, metadata !11616, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.value(metadata i32 undef, metadata !11592, metadata !DIExpression()) #23, !dbg !11631
  call void @llvm.dbg.value(metadata i32 undef, metadata !11606, metadata !DIExpression()) #23, !dbg !11638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !11640, !srcloc !11612
  %14 = udiv i32 %12, 3200, !dbg !11641
  ret i32 %14, !dbg !11642
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !11643 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11534, metadata !DIExpression()) #23, !dbg !11647
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11649, !srcloc !11549
  call void @llvm.dbg.value(metadata i32 undef, metadata !11546, metadata !DIExpression()) #23, !dbg !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11547, metadata !DIExpression()) #23, !dbg !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11540, metadata !DIExpression()) #23, !dbg !11647
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11652
  br i1 %2, label %4, label %3, !dbg !11653

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.193, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11654
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.195, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11654
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 148) #25, !dbg !11654
  unreachable, !dbg !11654

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !11546, metadata !DIExpression()) #23, !dbg !11651
  call void @llvm.dbg.value(metadata i32 undef, metadata !11540, metadata !DIExpression()) #23, !dbg !11647
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11645, metadata !DIExpression()), !dbg !11656
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !11657
  %6 = load i32, i32* @cycle_count, align 4, !dbg !11658
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !11646, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !11656
  call void @llvm.dbg.value(metadata i32 undef, metadata !11592, metadata !DIExpression()) #23, !dbg !11659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !11597, metadata !DIExpression()) #23, !dbg !11659
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11661
  br i1 %7, label %9, label %8, !dbg !11662

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.192, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.196, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11663
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.197, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !11663
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.194, i32 0, i32 0), i32 noundef 194) #25, !dbg !11663
  unreachable, !dbg !11663

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !11664
  call void @llvm.dbg.value(metadata i32 %10, metadata !11646, metadata !DIExpression()), !dbg !11656
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !11649
  call void @llvm.dbg.value(metadata i32 %11, metadata !11546, metadata !DIExpression()) #23, !dbg !11651
  call void @llvm.dbg.value(metadata i32 %11, metadata !11540, metadata !DIExpression()) #23, !dbg !11647
  call void @llvm.dbg.value(metadata i32 %11, metadata !11645, metadata !DIExpression()), !dbg !11656
  call void @llvm.dbg.value(metadata i32 undef, metadata !11592, metadata !DIExpression()) #23, !dbg !11659
  call void @llvm.dbg.value(metadata i32 undef, metadata !11606, metadata !DIExpression()) #23, !dbg !11665
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !11667, !srcloc !11612
  ret i32 %10, !dbg !11668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !11669 {
  %1 = load i32, i32* @last_load, align 4, !dbg !11670
  %2 = icmp eq i32 %1, -16777216, !dbg !11672
  br i1 %2, label %3, label %6, !dbg !11673

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11674
  %5 = or i32 %4, 1, !dbg !11674
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11674
  br label %6, !dbg !11676

6:                                                ; preds = %3, %0
  ret void, !dbg !11677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !11678 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11679
  %2 = and i32 %1, -2, !dbg !11679
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11679
  ret void, !dbg !11680
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !11681 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !11707, metadata !DIExpression()), !dbg !11710
  call void @llvm.dbg.value(metadata i8 %1, metadata !11708, metadata !DIExpression()), !dbg !11710
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !11709, metadata !DIExpression()), !dbg !11710
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !11711
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11711
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !11710
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11712
  %8 = load i8, i8* %6, align 4, !dbg !11713
  %9 = zext i8 %8 to i32, !dbg !11714
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !11714
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !11715
  br i1 %11, label %18, label %24, !dbg !11716

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !11710
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !11712
  %14 = load i8, i8* %6, align 4, !dbg !11713
  %15 = zext i8 %14 to i32, !dbg !11714
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !11714
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !11715
  br i1 %17, label %18, label %24, !dbg !11716, !llvm.loop !11717

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !11719
  %21 = load i8, i8* %20, align 1, !dbg !11719
  %22 = icmp eq i8 %21, %1, !dbg !11722
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !11723
  br i1 %22, label %24, label %12, !dbg !11724

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !11710
  ret i32 %25, !dbg !11725
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11726 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !11737, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i8 %1, metadata !11738, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32 %2, metadata !11739, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32 0, metadata !11742, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i32 0, metadata !11743, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.value(metadata i8 0, metadata !11744, metadata !DIExpression()), !dbg !11754
  %4 = icmp eq i8 %1, 0, !dbg !11755
  br i1 %4, label %35, label %5, !dbg !11756

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !11755
  br label %9, !dbg !11756

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !11744, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata i32 %29, metadata !11742, metadata !DIExpression()), !dbg !11753
  %8 = icmp eq i32 %34, %6, !dbg !11755
  br i1 %8, label %35, label %9, !dbg !11756, !llvm.loop !11757

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11744, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.value(metadata i32 %11, metadata !11742, metadata !DIExpression()), !dbg !11753
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !11759
  %13 = load i32, i32* %12, align 4, !dbg !11759
  call void @llvm.dbg.value(metadata i32 %13, metadata !11741, metadata !DIExpression()), !dbg !11753
  %14 = and i32 %13, 31, !dbg !11760
  %15 = icmp ult i32 %14, 16, !dbg !11761
  br i1 %15, label %16, label %20, !dbg !11762

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11763
  %18 = load i32, i32* %17, align 4, !dbg !11763
  %19 = or i32 %18, 32, !dbg !11765
  call void @llvm.dbg.value(metadata i32 %19, metadata !11742, metadata !DIExpression()), !dbg !11753
  br label %28, !dbg !11766

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !11767

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !11768
  %23 = load i32, i32* %22, align 4, !dbg !11768
  call void @llvm.dbg.value(metadata i32 %23, metadata !11746, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !11769
  %24 = lshr i32 %23, 7, !dbg !11770
  %25 = and i32 %24, 16, !dbg !11770
  %26 = or i32 %25, %23, !dbg !11770
  call void @llvm.dbg.value(metadata i32 %26, metadata !11742, metadata !DIExpression()), !dbg !11753
  br label %28, !dbg !11771

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !11753
  call void @llvm.dbg.value(metadata i32 %29, metadata !11742, metadata !DIExpression()), !dbg !11753
  %30 = lshr i32 %13, 5, !dbg !11772
  %31 = and i32 %30, 255, !dbg !11772
  call void @llvm.dbg.value(metadata i32 %31, metadata !11740, metadata !DIExpression()), !dbg !11753
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11773
  call void @llvm.dbg.value(metadata i32 %32, metadata !11743, metadata !DIExpression()), !dbg !11753
  %33 = icmp slt i32 %32, 0, !dbg !11774
  %34 = add nuw nsw i32 %10, 1, !dbg !11776
  call void @llvm.dbg.value(metadata i32 %34, metadata !11744, metadata !DIExpression()), !dbg !11754
  br i1 %33, label %35, label %7, !dbg !11777

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11778
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11783, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i32 %1, metadata !11784, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.value(metadata i32 %2, metadata !11785, metadata !DIExpression()), !dbg !11787
  %4 = icmp ugt i32 %0, 175, !dbg !11788
  br i1 %4, label %17, label %5, !dbg !11790

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11791
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11792
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11792
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11786, metadata !DIExpression()), !dbg !11787
  %9 = lshr i32 1888, %6, !dbg !11793
  %10 = and i32 %9, 1, !dbg !11793
  %11 = icmp eq i32 %10, 0, !dbg !11793
  br i1 %11, label %12, label %17, !dbg !11795

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.204(%struct.device* noundef %8) #24, !dbg !11796
  br i1 %13, label %14, label %17, !dbg !11797

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !11798
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #25, !dbg !11799
  br label %17, !dbg !11800

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !11787
  ret i32 %18, !dbg !11801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.204(%struct.device* noundef %0) unnamed_addr #1 !dbg !11802 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11806, metadata !DIExpression()), !dbg !11807
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11808, !srcloc !11810
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.205(%struct.device* noundef %0) #24, !dbg !11811
  ret i1 %2, !dbg !11812
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.205(%struct.device* noundef %0) unnamed_addr #1 !dbg !11813 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11815, metadata !DIExpression()), !dbg !11816
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11817
  ret i1 %2, !dbg !11818
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !11819 {
  ret void, !dbg !11820
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !11821 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11823, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata i32 0, metadata !11824, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata i32 0, metadata !11825, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata i32 0, metadata !11826, metadata !DIExpression()), !dbg !11828
  call void @llvm.dbg.value(metadata i32 0, metadata !11827, metadata !DIExpression()), !dbg !11828
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11829
  call void @llvm.dbg.value(metadata i32 %1, metadata !11823, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !11828
  %2 = lshr i32 %1, 2, !dbg !11830
  %3 = and i32 %2, 3, !dbg !11830
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !11830

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11831
  %6 = lshr i32 %5, 13, !dbg !11833
  %7 = and i32 %6, 7, !dbg !11833
  call void @llvm.dbg.value(metadata i32 %7, metadata !11827, metadata !DIExpression()), !dbg !11828
  %8 = shl nuw nsw i32 65536, %7, !dbg !11834
  br label %31, !dbg !11835

9:                                                ; preds = %0
  br label %31, !dbg !11836

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11837
  call void @llvm.dbg.value(metadata i32 %11, metadata !11824, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !11828
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11838
  call void @llvm.dbg.value(metadata i32 %12, metadata !11825, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !11828
  %13 = lshr i32 %11, 18, !dbg !11839
  %14 = and i32 %13, 15, !dbg !11839
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !11840
  %16 = load i8, i8* %15, align 1, !dbg !11840
  %17 = zext i8 %16 to i32, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %17, metadata !11824, metadata !DIExpression()), !dbg !11828
  %18 = lshr i32 %12, 22, !dbg !11841
  %19 = and i32 %18, 3, !dbg !11841
  %20 = add nuw nsw i32 %19, 1, !dbg !11842
  call void @llvm.dbg.value(metadata i32 %20, metadata !11825, metadata !DIExpression()), !dbg !11828
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11843
  %22 = and i32 %21, 65536, !dbg !11844
  call void @llvm.dbg.value(metadata i32 %22, metadata !11826, metadata !DIExpression()), !dbg !11828
  %23 = icmp eq i32 %22, 0, !dbg !11845
  br i1 %23, label %24, label %27, !dbg !11847

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !11848
  %26 = udiv i32 %25, %20, !dbg !11850
  br label %31, !dbg !11851

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !11852
  %29 = udiv i32 %28, %20, !dbg !11854
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !11855
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11856
  %34 = lshr i32 %33, 4, !dbg !11857
  %35 = and i32 %34, 15, !dbg !11857
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !11858
  %37 = load i8, i8* %36, align 1, !dbg !11858
  %38 = zext i8 %37 to i32, !dbg !11858
  call void @llvm.dbg.value(metadata i32 %38, metadata !11823, metadata !DIExpression()), !dbg !11828
  %39 = lshr i32 %32, %38, !dbg !11859
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !11859
  ret void, !dbg !11860
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11861 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11869
  %2 = and i32 %1, 16711935, !dbg !11869
  %3 = or i32 %2, 45056, !dbg !11869
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11869
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11870
  %5 = or i32 %4, 256, !dbg !11870
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11870
  %6 = tail call i32 @HAL_GetTick() #25, !dbg !11871
  call void @llvm.dbg.value(metadata i32 %6, metadata !11867, metadata !DIExpression()), !dbg !11872
  br label %7, !dbg !11873

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11874
  %9 = and i32 %8, 512, !dbg !11874
  %10 = icmp eq i32 %9, 0, !dbg !11875
  br i1 %10, label %11, label %15, !dbg !11873

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #25, !dbg !11876
  %13 = sub i32 %12, %6, !dbg !11879
  %14 = icmp ugt i32 %13, 2, !dbg !11880
  br i1 %14, label %47, label %7, !dbg !11881, !llvm.loop !11882

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11884
  %17 = and i32 %16, -4, !dbg !11884
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11884
  br label %18, !dbg !11885

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11886
  %20 = and i32 %19, 12, !dbg !11886
  %21 = icmp eq i32 %20, 0, !dbg !11887
  br i1 %21, label %26, label %22, !dbg !11885

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #25, !dbg !11888
  %24 = sub i32 %23, %6, !dbg !11891
  %25 = icmp ugt i32 %24, 5000, !dbg !11892
  br i1 %25, label %47, label %18, !dbg !11893, !llvm.loop !11894

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !11896
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !11897
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #25, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %28, metadata !11868, metadata !DIExpression()), !dbg !11872
  %29 = icmp eq i32 %28, 0, !dbg !11899
  br i1 %29, label %30, label %47, !dbg !11901

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11902
  %32 = and i32 %31, -285278210, !dbg !11902
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11902
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11903
  %34 = and i32 %33, -262145, !dbg !11903
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11903
  %35 = tail call i32 @HAL_GetTick() #25, !dbg !11904
  call void @llvm.dbg.value(metadata i32 %35, metadata !11867, metadata !DIExpression()), !dbg !11872
  br label %36, !dbg !11905

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11906
  %38 = and i32 %37, 33554432, !dbg !11906
  %39 = icmp eq i32 %38, 0, !dbg !11907
  br i1 %39, label %44, label %40, !dbg !11905

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #25, !dbg !11908
  %42 = sub i32 %41, %35, !dbg !11911
  %43 = icmp ugt i32 %42, 2, !dbg !11912
  br i1 %43, label %47, label %36, !dbg !11913, !llvm.loop !11914

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11916
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11917
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11918
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11919
  %46 = or i32 %45, 16777216, !dbg !11919
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !11919
  br label %47, !dbg !11920

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !11872
  ret i32 %48, !dbg !11921
}

; Function Attrs: optsize
declare !dbg !11922 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !11924 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11927 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11953, metadata !DIExpression()), !dbg !11966
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11967
  br i1 %3, label %385, label %4, !dbg !11969

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11970
  %6 = and i32 %5, 12, !dbg !11970
  call void @llvm.dbg.value(metadata i32 %6, metadata !11956, metadata !DIExpression()), !dbg !11966
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11971
  %8 = and i32 %7, 65536, !dbg !11971
  call void @llvm.dbg.value(metadata i32 %8, metadata !11957, metadata !DIExpression()), !dbg !11966
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11972
  %10 = load i32, i32* %9, align 4, !dbg !11972
  %11 = and i32 %10, 1, !dbg !11974
  %12 = icmp eq i32 %11, 0, !dbg !11975
  br i1 %12, label %69, label %13, !dbg !11976

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !11977
  br i1 %14, label %19, label %15, !dbg !11980

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !11981
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !11982
  br i1 %18, label %19, label %27, !dbg !11982

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11983
  %21 = and i32 %20, 131072, !dbg !11983
  %22 = icmp eq i32 %21, 0, !dbg !11986
  br i1 %22, label %69, label %23, !dbg !11987

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11988
  %25 = load i32, i32* %24, align 4, !dbg !11988
  %26 = icmp eq i32 %25, 0, !dbg !11989
  br i1 %26, label %385, label %69, !dbg !11990

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11991
  %29 = load i32, i32* %28, align 4, !dbg !11991
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !11995

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11996
  %32 = or i32 %31, 65536, !dbg !11996
  br label %48, !dbg !11996

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11998
  %35 = and i32 %34, -65537, !dbg !11998
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11998
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11998
  %37 = and i32 %36, -262145, !dbg !11998
  br label %48, !dbg !11998

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12001
  %40 = or i32 %39, 262144, !dbg !12001
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12001
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12001
  %42 = or i32 %41, 65536, !dbg !12001
  br label %48, !dbg !12001

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12004
  %45 = and i32 %44, -65537, !dbg !12004
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12004
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12004
  %47 = and i32 %46, -262145, !dbg !12004
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12006
  %50 = load i32, i32* %28, align 4, !dbg !12007
  %51 = icmp eq i32 %50, 0, !dbg !12009
  %52 = tail call i32 @HAL_GetTick() #25, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %52, metadata !11954, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i32 %52, metadata !11954, metadata !DIExpression()), !dbg !11966
  br i1 %51, label %61, label %53, !dbg !12011

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12012
  %55 = and i32 %54, 131072, !dbg !12012
  %56 = icmp eq i32 %55, 0, !dbg !12014
  br i1 %56, label %57, label %69, !dbg !12015

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #25, !dbg !12016
  %59 = sub i32 %58, %52, !dbg !12019
  %60 = icmp ugt i32 %59, 100, !dbg !12020
  br i1 %60, label %385, label %53, !dbg !12021, !llvm.loop !12022

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12024
  %63 = and i32 %62, 131072, !dbg !12024
  %64 = icmp eq i32 %63, 0, !dbg !12026
  br i1 %64, label %69, label %65, !dbg !12027

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12028
  %67 = sub i32 %66, %52, !dbg !12031
  %68 = icmp ugt i32 %67, 100, !dbg !12032
  br i1 %68, label %385, label %61, !dbg !12033, !llvm.loop !12034

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !12036
  %71 = and i32 %70, 2, !dbg !12038
  %72 = icmp eq i32 %71, 0, !dbg !12039
  br i1 %72, label %118, label %73, !dbg !12040

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !12041
  br i1 %74, label %79, label %75, !dbg !12044

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !12045
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !12046
  br i1 %78, label %79, label %87, !dbg !12046

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12047
  %81 = and i32 %80, 2, !dbg !12047
  %82 = icmp eq i32 %81, 0, !dbg !12050
  br i1 %82, label %111, label %83, !dbg !12051

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12052
  %85 = load i32, i32* %84, align 4, !dbg !12052
  %86 = icmp eq i32 %85, 1, !dbg !12053
  br i1 %86, label %111, label %385, !dbg !12054

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12055
  %89 = load i32, i32* %88, align 4, !dbg !12055
  %90 = icmp eq i32 %89, 0, !dbg !12058
  br i1 %90, label %101, label %91, !dbg !12059

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12060
  %92 = tail call i32 @HAL_GetTick() #25, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %92, metadata !11954, metadata !DIExpression()), !dbg !11966
  br label %93, !dbg !12063

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12064
  %95 = and i32 %94, 2, !dbg !12064
  %96 = icmp eq i32 %95, 0, !dbg !12065
  br i1 %96, label %97, label %111, !dbg !12063

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #25, !dbg !12066
  %99 = sub i32 %98, %92, !dbg !12069
  %100 = icmp ugt i32 %99, 2, !dbg !12070
  br i1 %100, label %385, label %93, !dbg !12071, !llvm.loop !12072

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !12074
  %102 = tail call i32 @HAL_GetTick() #25, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %102, metadata !11954, metadata !DIExpression()), !dbg !11966
  br label %103, !dbg !12077

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12078
  %105 = and i32 %104, 2, !dbg !12078
  %106 = icmp eq i32 %105, 0, !dbg !12079
  br i1 %106, label %118, label %107, !dbg !12077

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #25, !dbg !12080
  %109 = sub i32 %108, %102, !dbg !12083
  %110 = icmp ugt i32 %109, 2, !dbg !12084
  br i1 %110, label %385, label %103, !dbg !12085, !llvm.loop !12086

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12088
  %113 = and i32 %112, -7937, !dbg !12088
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12088
  %115 = load i32, i32* %114, align 4, !dbg !12088
  %116 = shl i32 %115, 8, !dbg !12088
  %117 = or i32 %116, %113, !dbg !12088
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12088
  br label %118, !dbg !12089

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !12089
  %120 = and i32 %119, 16, !dbg !12091
  %121 = icmp eq i32 %120, 0, !dbg !12092
  br i1 %121, label %215, label %122, !dbg !12093

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !12094
  br i1 %123, label %124, label %179, !dbg !12097

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12098
  %126 = and i32 %125, 512, !dbg !12098
  %127 = icmp eq i32 %126, 0, !dbg !12101
  br i1 %127, label %132, label %128, !dbg !12102

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12103
  %130 = load i32, i32* %129, align 4, !dbg !12103
  %131 = icmp eq i32 %130, 0, !dbg !12104
  br i1 %131, label %385, label %132, !dbg !12105

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12106
  %134 = load i32, i32* %133, align 4, !dbg !12106
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12109
  %136 = and i32 %135, 57344, !dbg !12109
  %137 = icmp ugt i32 %134, %136, !dbg !12110
  br i1 %137, label %138, label %152, !dbg !12111

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #24, !dbg !12112
  %140 = icmp eq i32 %139, 0, !dbg !12115
  br i1 %140, label %141, label %385, !dbg !12116

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12117
  %143 = and i32 %142, -57345, !dbg !12117
  %144 = load i32, i32* %133, align 4, !dbg !12117
  %145 = or i32 %143, %144, !dbg !12117
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12117
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12118
  %147 = and i32 %146, 16777215, !dbg !12118
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12118
  %149 = load i32, i32* %148, align 4, !dbg !12118
  %150 = shl i32 %149, 24, !dbg !12118
  %151 = or i32 %150, %147, !dbg !12118
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12118
  br label %165, !dbg !12119

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12120
  %154 = and i32 %153, -57345, !dbg !12120
  %155 = or i32 %154, %134, !dbg !12120
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12120
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12122
  %157 = and i32 %156, 16777215, !dbg !12122
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12122
  %159 = load i32, i32* %158, align 4, !dbg !12122
  %160 = shl i32 %159, 24, !dbg !12122
  %161 = or i32 %160, %157, !dbg !12122
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12122
  %162 = load i32, i32* %133, align 4, !dbg !12123
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #24, !dbg !12125
  %164 = icmp eq i32 %163, 0, !dbg !12126
  br i1 %164, label %165, label %385, !dbg !12127

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !12128
  %167 = lshr i32 %166, 13, !dbg !12129
  %168 = shl i32 65536, %167, !dbg !12130
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12131
  %170 = lshr i32 %169, 4, !dbg !12132
  %171 = and i32 %170, 15, !dbg !12132
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !12133
  %173 = load i8, i8* %172, align 1, !dbg !12133
  %174 = zext i8 %173 to i32, !dbg !12133
  %175 = lshr i32 %168, %174, !dbg !12134
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !12135
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !12136
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #25, !dbg !12137
  call void @llvm.dbg.value(metadata i32 %177, metadata !11955, metadata !DIExpression()), !dbg !11966
  %178 = icmp eq i32 %177, 0, !dbg !12138
  br i1 %178, label %215, label %385, !dbg !12140

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12141
  %181 = load i32, i32* %180, align 4, !dbg !12141
  %182 = icmp eq i32 %181, 0, !dbg !12144
  br i1 %182, label %205, label %183, !dbg !12145

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12146
  %184 = tail call i32 @HAL_GetTick() #25, !dbg !12148
  call void @llvm.dbg.value(metadata i32 %184, metadata !11954, metadata !DIExpression()), !dbg !11966
  br label %185, !dbg !12149

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12150
  %187 = and i32 %186, 512, !dbg !12150
  %188 = icmp eq i32 %187, 0, !dbg !12151
  br i1 %188, label %189, label %193, !dbg !12149

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #25, !dbg !12152
  %191 = sub i32 %190, %184, !dbg !12155
  %192 = icmp ugt i32 %191, 2, !dbg !12156
  br i1 %192, label %385, label %185, !dbg !12157, !llvm.loop !12158

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12160
  %195 = and i32 %194, -57345, !dbg !12160
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12160
  %197 = load i32, i32* %196, align 4, !dbg !12160
  %198 = or i32 %195, %197, !dbg !12160
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12160
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12161
  %200 = and i32 %199, 16777215, !dbg !12161
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12161
  %202 = load i32, i32* %201, align 4, !dbg !12161
  %203 = shl i32 %202, 24, !dbg !12161
  %204 = or i32 %203, %200, !dbg !12161
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12161
  br label %215, !dbg !12162

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !12163
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !12165
  call void @llvm.dbg.value(metadata i32 %206, metadata !11954, metadata !DIExpression()), !dbg !11966
  br label %207, !dbg !12166

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12167
  %209 = and i32 %208, 512, !dbg !12167
  %210 = icmp eq i32 %209, 0, !dbg !12168
  br i1 %210, label %215, label %211, !dbg !12166

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #25, !dbg !12169
  %213 = sub i32 %212, %206, !dbg !12172
  %214 = icmp ugt i32 %213, 2, !dbg !12173
  br i1 %214, label %385, label %207, !dbg !12174, !llvm.loop !12175

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !12177
  %217 = and i32 %216, 8, !dbg !12179
  %218 = icmp eq i32 %217, 0, !dbg !12180
  br i1 %218, label %243, label %219, !dbg !12181

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12182
  %221 = load i32, i32* %220, align 4, !dbg !12182
  %222 = icmp eq i32 %221, 0, !dbg !12185
  br i1 %222, label %233, label %223, !dbg !12186

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12187
  %224 = tail call i32 @HAL_GetTick() #25, !dbg !12189
  call void @llvm.dbg.value(metadata i32 %224, metadata !11954, metadata !DIExpression()), !dbg !11966
  br label %225, !dbg !12190

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12191
  %227 = and i32 %226, 2, !dbg !12191
  %228 = icmp eq i32 %227, 0, !dbg !12192
  br i1 %228, label %229, label %243, !dbg !12190

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #25, !dbg !12193
  %231 = sub i32 %230, %224, !dbg !12196
  %232 = icmp ugt i32 %231, 2, !dbg !12197
  br i1 %232, label %385, label %225, !dbg !12198, !llvm.loop !12199

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !12201
  %234 = tail call i32 @HAL_GetTick() #25, !dbg !12203
  call void @llvm.dbg.value(metadata i32 %234, metadata !11954, metadata !DIExpression()), !dbg !11966
  br label %235, !dbg !12204

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12205
  %237 = and i32 %236, 2, !dbg !12205
  %238 = icmp eq i32 %237, 0, !dbg !12206
  br i1 %238, label %243, label %239, !dbg !12204

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #25, !dbg !12207
  %241 = sub i32 %240, %234, !dbg !12210
  %242 = icmp ugt i32 %241, 2, !dbg !12211
  br i1 %242, label %385, label %235, !dbg !12212, !llvm.loop !12213

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !12215
  %245 = and i32 %244, 4, !dbg !12216
  %246 = icmp eq i32 %245, 0, !dbg !12217
  br i1 %246, label %320, label %247, !dbg !12218

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !11958, metadata !DIExpression()), !dbg !12219
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12220
  %249 = and i32 %248, 268435456, !dbg !12220
  %250 = icmp eq i32 %249, 0, !dbg !12220
  br i1 %250, label %251, label %258, !dbg !12221

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !12222
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !12222
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11962, metadata !DIExpression()), !dbg !12222
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12222
  %254 = or i32 %253, 268435456, !dbg !12222
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12222
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12222
  %256 = and i32 %255, 268435456, !dbg !12222
  store volatile i32 %256, i32* %2, align 4, !dbg !12222
  %257 = load volatile i32, i32* %2, align 4, !dbg !12222
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !12223
  call void @llvm.dbg.value(metadata i32 1, metadata !11958, metadata !DIExpression()), !dbg !12219
  br label %258, !dbg !12224

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !11958, metadata !DIExpression()), !dbg !12219
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12225
  %260 = and i32 %259, 256, !dbg !12225
  %261 = icmp eq i32 %260, 0, !dbg !12225
  br i1 %261, label %262, label %274, !dbg !12227

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12228
  %264 = or i32 %263, 256, !dbg !12228
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12228
  %265 = tail call i32 @HAL_GetTick() #25, !dbg !12230
  call void @llvm.dbg.value(metadata i32 %265, metadata !11954, metadata !DIExpression()), !dbg !11966
  br label %266, !dbg !12231

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12232
  %268 = and i32 %267, 256, !dbg !12232
  %269 = icmp eq i32 %268, 0, !dbg !12232
  br i1 %269, label %270, label %274, !dbg !12231

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #25, !dbg !12233
  %272 = sub i32 %271, %265, !dbg !12236
  %273 = icmp ugt i32 %272, 100, !dbg !12237
  br i1 %273, label %385, label %266, !dbg !12238, !llvm.loop !12239

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12241
  %276 = load i32, i32* %275, align 4, !dbg !12241
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !12244

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12245
  %279 = or i32 %278, 256, !dbg !12245
  br label %295, !dbg !12245

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12247
  %282 = and i32 %281, -257, !dbg !12247
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12247
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12247
  %284 = and i32 %283, -1025, !dbg !12247
  br label %295, !dbg !12247

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12250
  %287 = or i32 %286, 1024, !dbg !12250
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12250
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12250
  %289 = or i32 %288, 256, !dbg !12250
  br label %295, !dbg !12250

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12253
  %292 = and i32 %291, -257, !dbg !12253
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12253
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12253
  %294 = and i32 %293, -1025, !dbg !12253
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12255
  %297 = load i32, i32* %275, align 4, !dbg !12256
  %298 = icmp eq i32 %297, 0, !dbg !12258
  %299 = tail call i32 @HAL_GetTick() #25, !dbg !12259
  call void @llvm.dbg.value(metadata i32 %299, metadata !11954, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i32 %299, metadata !11954, metadata !DIExpression()), !dbg !11966
  br i1 %298, label %308, label %300, !dbg !12260

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12261
  %302 = and i32 %301, 512, !dbg !12261
  %303 = icmp eq i32 %302, 0, !dbg !12263
  br i1 %303, label %304, label %316, !dbg !12264

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #25, !dbg !12265
  %306 = sub i32 %305, %299, !dbg !12268
  %307 = icmp ugt i32 %306, 5000, !dbg !12269
  br i1 %307, label %385, label %300, !dbg !12270, !llvm.loop !12271

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12273
  %310 = and i32 %309, 512, !dbg !12273
  %311 = icmp eq i32 %310, 0, !dbg !12275
  br i1 %311, label %316, label %312, !dbg !12276

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #25, !dbg !12277
  %314 = sub i32 %313, %299, !dbg !12280
  %315 = icmp ugt i32 %314, 5000, !dbg !12281
  br i1 %315, label %385, label %308, !dbg !12282, !llvm.loop !12283

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !12285

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12286
  %319 = and i32 %318, -268435457, !dbg !12286
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12286
  br label %320, !dbg !12289

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12290
  %322 = load i32, i32* %321, align 4, !dbg !12290
  %323 = icmp eq i32 %322, 0, !dbg !12292
  br i1 %323, label %384, label %324, !dbg !12293

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !12294
  br i1 %325, label %366, label %326, !dbg !12297

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !12298
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12301
  %328 = tail call i32 @HAL_GetTick() #25, !dbg !12301
  call void @llvm.dbg.value(metadata i32 %328, metadata !11954, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i32 %328, metadata !11954, metadata !DIExpression()), !dbg !11966
  br i1 %327, label %329, label %358, !dbg !12302

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12303
  %331 = and i32 %330, 33554432, !dbg !12303
  %332 = icmp eq i32 %331, 0, !dbg !12305
  br i1 %332, label %337, label %333, !dbg !12306

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #25, !dbg !12307
  %335 = sub i32 %334, %328, !dbg !12310
  %336 = icmp ugt i32 %335, 2, !dbg !12311
  br i1 %336, label %385, label %329, !dbg !12312, !llvm.loop !12313

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12315
  %339 = and i32 %338, -16580609, !dbg !12315
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12315
  %341 = load i32, i32* %340, align 4, !dbg !12315
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12315
  %343 = load i32, i32* %342, align 4, !dbg !12315
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12315
  %345 = load i32, i32* %344, align 4, !dbg !12315
  %346 = or i32 %339, %341, !dbg !12315
  %347 = or i32 %346, %343, !dbg !12315
  %348 = or i32 %347, %345, !dbg !12315
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12315
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !12316
  %349 = tail call i32 @HAL_GetTick() #25, !dbg !12317
  call void @llvm.dbg.value(metadata i32 %349, metadata !11954, metadata !DIExpression()), !dbg !11966
  br label %350, !dbg !12318

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12319
  %352 = and i32 %351, 33554432, !dbg !12319
  %353 = icmp eq i32 %352, 0, !dbg !12320
  br i1 %353, label %354, label %384, !dbg !12318

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #25, !dbg !12321
  %356 = sub i32 %355, %349, !dbg !12324
  %357 = icmp ugt i32 %356, 2, !dbg !12325
  br i1 %357, label %385, label %350, !dbg !12326, !llvm.loop !12327

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12329
  %360 = and i32 %359, 33554432, !dbg !12329
  %361 = icmp eq i32 %360, 0, !dbg !12331
  br i1 %361, label %384, label %362, !dbg !12332

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #25, !dbg !12333
  %364 = sub i32 %363, %328, !dbg !12336
  %365 = icmp ugt i32 %364, 2, !dbg !12337
  br i1 %365, label %385, label %358, !dbg !12338, !llvm.loop !12339

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !12341
  br i1 %367, label %385, label %368, !dbg !12344

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12345
  call void @llvm.dbg.value(metadata i32 %369, metadata !11957, metadata !DIExpression()), !dbg !11966
  %370 = and i32 %369, 65536, !dbg !12347
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12349
  %372 = load i32, i32* %371, align 4, !dbg !12349
  %373 = icmp eq i32 %370, %372, !dbg !12350
  br i1 %373, label %374, label %385, !dbg !12351

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !12352
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12353
  %377 = load i32, i32* %376, align 4, !dbg !12353
  %378 = icmp eq i32 %375, %377, !dbg !12354
  br i1 %378, label %379, label %385, !dbg !12355

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !12356
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12357
  %382 = load i32, i32* %381, align 4, !dbg !12357
  %383 = icmp eq i32 %380, %382, !dbg !12358
  br i1 %383, label %384, label %385, !dbg !12359

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !12360

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !11966
  ret i32 %386, !dbg !12361
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #14 !dbg !12362 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12364, metadata !DIExpression()), !dbg !12373
  call void @llvm.dbg.value(metadata i32 0, metadata !12366, metadata !DIExpression()), !dbg !12373
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12374
  %4 = and i32 %3, 240, !dbg !12374
  %5 = icmp eq i32 %4, 0, !dbg !12375
  br i1 %5, label %6, label %31, !dbg !12376

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12377
  %8 = and i32 %7, 268435456, !dbg !12377
  %9 = icmp eq i32 %8, 0, !dbg !12377
  br i1 %9, label %12, label %10, !dbg !12378

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12379
  call void @llvm.dbg.value(metadata i32 %11, metadata !12365, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12373
  br label %22, !dbg !12381

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !12382
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !12382
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12367, metadata !DIExpression()), !dbg !12382
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12382
  %15 = or i32 %14, 268435456, !dbg !12382
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12382
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12382
  %17 = and i32 %16, 268435456, !dbg !12382
  store volatile i32 %17, i32* %2, align 4, !dbg !12382
  %18 = load volatile i32, i32* %2, align 4, !dbg !12382
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !12383
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12384
  call void @llvm.dbg.value(metadata i32 %19, metadata !12365, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !12373
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12385
  %21 = and i32 %20, -268435457, !dbg !12385
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !12385
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !12386
  call void @llvm.dbg.value(metadata i32 %24, metadata !12365, metadata !DIExpression()), !dbg !12373
  %25 = icmp eq i32 %24, 6144, !dbg !12387
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !12389
  call void @llvm.dbg.value(metadata i32 undef, metadata !12366, metadata !DIExpression()), !dbg !12373
  br i1 %27, label %28, label %31, !dbg !12390

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12392
  %30 = or i32 %29, 4, !dbg !12392
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12392
  br label %31, !dbg !12392

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12390
  %34 = and i32 %33, -2, !dbg !12390
  %35 = or i32 %34, %32, !dbg !12390
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12390
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12395
  %37 = and i32 %36, 1, !dbg !12395
  %38 = xor i32 %37, %32, !dbg !12373
  ret i32 %38, !dbg !12397
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.ztest_unit_test_stats* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12398 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12411, metadata !DIExpression()), !dbg !12415
  call void @llvm.dbg.value(metadata i32 %1, metadata !12412, metadata !DIExpression()), !dbg !12415
  %3 = icmp eq %struct.ztest_unit_test_stats* %0, null, !dbg !12416
  br i1 %3, label %136, label %4, !dbg !12418

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12419
  %6 = and i32 %5, 1, !dbg !12419
  %7 = icmp ult i32 %6, %1, !dbg !12421
  br i1 %7, label %8, label %20, !dbg !12422

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !12423
  br i1 %9, label %10, label %13, !dbg !12427

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12428
  %12 = or i32 %11, 4, !dbg !12428
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12428
  br label %13, !dbg !12428

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12427
  %15 = and i32 %14, -2, !dbg !12427
  %16 = or i32 %15, %1, !dbg !12427
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12427
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12430
  %18 = and i32 %17, 1, !dbg !12430
  %19 = icmp eq i32 %18, %1, !dbg !12432
  br i1 %19, label %20, label %136, !dbg !12433

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12434
  %22 = load i32, i32* %21, align 4, !dbg !12434
  %23 = and i32 %22, 2, !dbg !12436
  %24 = icmp eq i32 %23, 0, !dbg !12437
  br i1 %24, label %32, label %25, !dbg !12438

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12439
  %27 = and i32 %26, -241, !dbg !12439
  %28 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12439
  %29 = load i32, i32* %28, align 4, !dbg !12439
  %30 = or i32 %27, %29, !dbg !12439
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12439
  %31 = load i32, i32* %21, align 4, !dbg !12441
  br label %32, !dbg !12443

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !12441
  %34 = and i32 %33, 1, !dbg !12444
  %35 = icmp eq i32 %34, 0, !dbg !12445
  br i1 %35, label %93, label %36, !dbg !12446

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12447
  %38 = load i32, i32* %37, align 4, !dbg !12447
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !12450

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12451
  %41 = and i32 %40, 131072, !dbg !12451
  %42 = icmp eq i32 %41, 0, !dbg !12454
  br i1 %42, label %136, label %55, !dbg !12455

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12456
  %45 = and i32 %44, 33554432, !dbg !12456
  %46 = icmp eq i32 %45, 0, !dbg !12460
  br i1 %46, label %136, label %55, !dbg !12461

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12462
  %49 = and i32 %48, 2, !dbg !12462
  %50 = icmp eq i32 %49, 0, !dbg !12466
  br i1 %50, label %136, label %55, !dbg !12467

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12468
  %53 = and i32 %52, 512, !dbg !12468
  %54 = icmp eq i32 %53, 0, !dbg !12471
  br i1 %54, label %136, label %55, !dbg !12472

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12473
  %57 = and i32 %56, -4, !dbg !12473
  %58 = or i32 %57, %38, !dbg !12473
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12473
  %59 = tail call i32 @HAL_GetTick() #25, !dbg !12474
  call void @llvm.dbg.value(metadata i32 %59, metadata !12413, metadata !DIExpression()), !dbg !12415
  %60 = load i32, i32* %37, align 4, !dbg !12475
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !12477

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12478
  %63 = and i32 %62, 12, !dbg !12478
  %64 = icmp eq i32 %63, 8, !dbg !12480
  br i1 %64, label %93, label %65, !dbg !12481

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #25, !dbg !12482
  %67 = sub i32 %66, %59, !dbg !12485
  %68 = icmp ugt i32 %67, 5000, !dbg !12486
  br i1 %68, label %136, label %61, !dbg !12487, !llvm.loop !12488

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12490
  %71 = and i32 %70, 12, !dbg !12490
  %72 = icmp eq i32 %71, 12, !dbg !12493
  br i1 %72, label %93, label %73, !dbg !12494

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #25, !dbg !12495
  %75 = sub i32 %74, %59, !dbg !12498
  %76 = icmp ugt i32 %75, 5000, !dbg !12499
  br i1 %76, label %136, label %69, !dbg !12500, !llvm.loop !12501

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12503
  %79 = and i32 %78, 12, !dbg !12503
  %80 = icmp eq i32 %79, 4, !dbg !12506
  br i1 %80, label %93, label %81, !dbg !12507

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #25, !dbg !12508
  %83 = sub i32 %82, %59, !dbg !12511
  %84 = icmp ugt i32 %83, 5000, !dbg !12512
  br i1 %84, label %136, label %77, !dbg !12513, !llvm.loop !12514

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12516
  %87 = and i32 %86, 12, !dbg !12516
  %88 = icmp eq i32 %87, 0, !dbg !12518
  br i1 %88, label %93, label %89, !dbg !12519

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #25, !dbg !12520
  %91 = sub i32 %90, %59, !dbg !12523
  %92 = icmp ugt i32 %91, 5000, !dbg !12524
  br i1 %92, label %136, label %85, !dbg !12525, !llvm.loop !12526

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12528
  %95 = and i32 %94, 1, !dbg !12528
  %96 = icmp ugt i32 %95, %1, !dbg !12530
  br i1 %96, label %97, label %103, !dbg !12531

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12532
  %99 = and i32 %98, -2, !dbg !12532
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12532
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12535
  %101 = and i32 %100, 1, !dbg !12535
  %102 = icmp eq i32 %101, 0, !dbg !12537
  br i1 %102, label %103, label %136, !dbg !12538

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !12539
  %105 = and i32 %104, 4, !dbg !12541
  %106 = icmp eq i32 %105, 0, !dbg !12542
  br i1 %106, label %114, label %107, !dbg !12543

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12544
  %109 = and i32 %108, -1793, !dbg !12544
  %110 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12544
  %111 = load i32, i32* %110, align 4, !dbg !12544
  %112 = or i32 %109, %111, !dbg !12544
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12544
  %113 = load i32, i32* %21, align 4, !dbg !12546
  br label %114, !dbg !12548

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !12546
  %116 = and i32 %115, 8, !dbg !12549
  %117 = icmp eq i32 %116, 0, !dbg !12550
  br i1 %117, label %125, label %118, !dbg !12551

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12552
  %120 = and i32 %119, -14337, !dbg !12552
  %121 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12552
  %122 = load i32, i32* %121, align 4, !dbg !12552
  %123 = shl i32 %122, 3, !dbg !12552
  %124 = or i32 %123, %120, !dbg !12552
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12552
  br label %125, !dbg !12554

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !12555
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12556
  %128 = lshr i32 %127, 4, !dbg !12557
  %129 = and i32 %128, 15, !dbg !12557
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !12558
  %131 = load i8, i8* %130, align 1, !dbg !12558
  %132 = zext i8 %131 to i32, !dbg !12558
  %133 = lshr i32 %126, %132, !dbg !12559
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !12560
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !12561
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #25, !dbg !12562
  call void @llvm.dbg.value(metadata i32 %135, metadata !12414, metadata !DIExpression()), !dbg !12415
  br label %136, !dbg !12563

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !12415
  ret i32 %137, !dbg !12564
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !12565 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12573
  call void @llvm.dbg.value(metadata i32 %1, metadata !12567, metadata !DIExpression()), !dbg !12574
  %2 = lshr i32 %1, 2, !dbg !12575
  %3 = and i32 %2, 3, !dbg !12575
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !12575

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !12572, metadata !DIExpression()), !dbg !12574
  br label %26, !dbg !12576

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !12579
  %7 = and i32 %6, 15, !dbg !12579
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !12581
  %9 = load i8, i8* %8, align 1, !dbg !12581
  call void @llvm.dbg.value(metadata i8 %9, metadata !12568, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12574
  %10 = lshr i32 %1, 22, !dbg !12582
  %11 = and i32 %10, 3, !dbg !12582
  %12 = add nuw nsw i32 %11, 1, !dbg !12583
  call void @llvm.dbg.value(metadata i32 %12, metadata !12569, metadata !DIExpression()), !dbg !12574
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12584
  %14 = and i32 %13, 65536, !dbg !12584
  %15 = icmp eq i32 %14, 0, !dbg !12586
  %16 = zext i8 %9 to i32, !dbg !12587
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !12587
  %18 = mul nuw i32 %17, %16, !dbg !12587
  %19 = udiv i32 %18, %12, !dbg !12588
  call void @llvm.dbg.value(metadata i32 %19, metadata !12570, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.value(metadata i32 %19, metadata !12572, metadata !DIExpression()), !dbg !12574
  br label %26, !dbg !12589

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12590
  %23 = lshr i32 %22, 13, !dbg !12592
  %24 = and i32 %23, 7, !dbg !12592
  call void @llvm.dbg.value(metadata i32 %24, metadata !12571, metadata !DIExpression()), !dbg !12574
  %25 = shl nuw nsw i32 65536, %24, !dbg !12593
  call void @llvm.dbg.value(metadata i32 %25, metadata !12572, metadata !DIExpression()), !dbg !12574
  br label %26, !dbg !12594

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !12595
  call void @llvm.dbg.value(metadata i32 %27, metadata !12572, metadata !DIExpression()), !dbg !12574
  ret i32 %27, !dbg !12596
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12597 {
  %4 = alloca %struct.ztest_unit_test_stats, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12599, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata i32 %1, metadata !12600, metadata !DIExpression()), !dbg !12614
  call void @llvm.dbg.value(metadata i32 %2, metadata !12601, metadata !DIExpression()), !dbg !12614
  %6 = bitcast %struct.ztest_unit_test_stats* %4 to i8*, !dbg !12615
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12615
  call void @llvm.dbg.declare(metadata %struct.ztest_unit_test_stats* %4, metadata !12602, metadata !DIExpression()), !dbg !12616
  %7 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 1, !dbg !12617
  store i32 2, i32* %7, align 4, !dbg !12618
  %8 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 3, !dbg !12619
  store i32 2, i32* %8, align 4, !dbg !12620
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 2, !dbg !12621
  store i32 0, i32* %9, align 4, !dbg !12622
  %10 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 0, !dbg !12623
  store i32 256, i32* %10, align 4, !dbg !12624
  %11 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %4, i32 0, i32 4, !dbg !12625
  store i32 0, i32* %11, align 4, !dbg !12626
  %12 = bitcast i32* %5 to i8*, !dbg !12627
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !12627
  call void @llvm.dbg.declare(metadata i32* %5, metadata !12612, metadata !DIExpression()), !dbg !12627
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12627
  %14 = or i32 %13, 1, !dbg !12627
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12627
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !12627
  %16 = and i32 %15, 1, !dbg !12627
  store volatile i32 %16, i32* %5, align 4, !dbg !12627
  %17 = load volatile i32, i32* %5, align 4, !dbg !12627
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !12628
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.ztest_unit_test_stats* noundef nonnull %4) #25, !dbg !12629
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12630
  %19 = and i32 %18, -1996488705, !dbg !12630
  %20 = or i32 %2, %1, !dbg !12630
  %21 = or i32 %20, %19, !dbg !12630
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12630
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !12631
  ret void, !dbg !12631
}

; Function Attrs: optsize
declare !dbg !12632 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.ztest_unit_test_stats* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !12636 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12637
  ret void, !dbg !12638
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !12639 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !12640
  ret void, !dbg !12641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !12642 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !12643
  ret i32 %1, !dbg !12644
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !12645 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12646
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12647
  %3 = lshr i32 %2, 8, !dbg !12648
  %4 = and i32 %3, 7, !dbg !12648
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12649
  %6 = load i8, i8* %5, align 1, !dbg !12649
  %7 = zext i8 %6 to i32, !dbg !12649
  %8 = lshr i32 %1, %7, !dbg !12650
  ret i32 %8, !dbg !12651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !12652 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !12653
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12654
  %3 = lshr i32 %2, 11, !dbg !12655
  %4 = and i32 %3, 7, !dbg !12655
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !12656
  %6 = load i8, i8* %5, align 1, !dbg !12656
  %7 = zext i8 %6 to i32, !dbg !12656
  %8 = lshr i32 %1, %7, !dbg !12657
  ret i32 %8, !dbg !12658
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !12659 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12663, metadata !DIExpression()), !dbg !12664
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12665
  store i32 31, i32* %2, align 4, !dbg !12666
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12667
  %4 = and i32 %3, 262144, !dbg !12669
  %5 = icmp eq i32 %4, 0, !dbg !12670
  br i1 %5, label %8, label %6, !dbg !12671

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12672
  store i32 5, i32* %7, align 4, !dbg !12674
  br label %15, !dbg !12675

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12676
  %10 = and i32 %9, 65536, !dbg !12678
  %11 = icmp eq i32 %10, 0, !dbg !12679
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12680
  br i1 %11, label %14, label %13, !dbg !12681

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !12682
  br label %15, !dbg !12684

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12685
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12687
  %17 = and i32 %16, 1, !dbg !12689
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12690
  store i32 %17, i32* %18, align 4, !dbg !12692
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12693
  %20 = lshr i32 %19, 8, !dbg !12694
  %21 = and i32 %20, 31, !dbg !12694
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12695
  store i32 %21, i32* %22, align 4, !dbg !12696
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12697
  %24 = lshr i32 %23, 8, !dbg !12699
  %25 = and i32 %24, 1, !dbg !12699
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !12700
  store i32 %25, i32* %26, align 4, !dbg !12702
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12703
  %28 = lshr i32 %27, 24, !dbg !12704
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !12705
  store i32 %28, i32* %29, align 4, !dbg !12706
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12707
  %31 = and i32 %30, 57344, !dbg !12708
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !12709
  store i32 %31, i32* %32, align 4, !dbg !12710
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12711
  %34 = and i32 %33, 1024, !dbg !12713
  %35 = icmp eq i32 %34, 0, !dbg !12714
  br i1 %35, label %38, label %36, !dbg !12715

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12716
  store i32 5, i32* %37, align 4, !dbg !12718
  br label %45, !dbg !12719

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12720
  %40 = and i32 %39, 256, !dbg !12722
  %41 = icmp eq i32 %40, 0, !dbg !12723
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12724
  br i1 %41, label %44, label %43, !dbg !12725

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !12726
  br label %45, !dbg !12728

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !12729
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !12731
  %47 = and i32 %46, 1, !dbg !12733
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12734
  store i32 %47, i32* %48, align 4, !dbg !12736
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12737
  %50 = and i32 %49, 16777216, !dbg !12739
  %51 = icmp eq i32 %50, 0, !dbg !12740
  %52 = select i1 %51, i32 1, i32 2, !dbg !12741
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !12742
  store i32 %52, i32* %53, align 4, !dbg !12744
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12745
  %55 = and i32 %54, 65536, !dbg !12746
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !12747
  store i32 %55, i32* %56, align 4, !dbg !12748
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12749
  %58 = and i32 %57, 3932160, !dbg !12750
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !12751
  store i32 %58, i32* %59, align 4, !dbg !12752
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12753
  %61 = and i32 %60, 12582912, !dbg !12754
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !12755
  store i32 %61, i32* %62, align 4, !dbg !12756
  ret void, !dbg !12757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.ztest_unit_test_stats* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !12758 {
  call void @llvm.dbg.value(metadata %struct.ztest_unit_test_stats* %0, metadata !12762, metadata !DIExpression()), !dbg !12764
  call void @llvm.dbg.value(metadata i32* %1, metadata !12763, metadata !DIExpression()), !dbg !12764
  %3 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 0, !dbg !12765
  store i32 15, i32* %3, align 4, !dbg !12766
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12767
  %5 = and i32 %4, 3, !dbg !12768
  %6 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 1, !dbg !12769
  store i32 %5, i32* %6, align 4, !dbg !12770
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12771
  %8 = and i32 %7, 240, !dbg !12772
  %9 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 2, !dbg !12773
  store i32 %8, i32* %9, align 4, !dbg !12774
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12775
  %11 = and i32 %10, 1792, !dbg !12776
  %12 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 3, !dbg !12777
  store i32 %11, i32* %12, align 4, !dbg !12778
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12779
  %14 = lshr i32 %13, 3, !dbg !12780
  %15 = and i32 %14, 1792, !dbg !12780
  %16 = getelementptr inbounds %struct.ztest_unit_test_stats, %struct.ztest_unit_test_stats* %0, i32 0, i32 4, !dbg !12781
  store i32 %15, i32* %16, align 4, !dbg !12782
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12783
  %18 = and i32 %17, 1, !dbg !12783
  store i32 %18, i32* %1, align 4, !dbg !12784
  ret void, !dbg !12785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !12786 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !12787
  %2 = and i32 %1, 128, !dbg !12787
  %3 = icmp eq i32 %2, 0, !dbg !12787
  br i1 %3, label %5, label %4, !dbg !12789

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !12790
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !12792
  br label %5, !dbg !12793

5:                                                ; preds = %4, %0
  ret void, !dbg !12794
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !12795 {
  ret void, !dbg !12796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12800, metadata !DIExpression()), !dbg !12801
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !12802
  ret void, !dbg !12803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12807, metadata !DIExpression()), !dbg !12809
  call void @llvm.dbg.value(metadata i32 1000, metadata !12808, metadata !DIExpression()), !dbg !12809
  %2 = udiv i32 %0, 1000, !dbg !12810
  %3 = add nsw i32 %2, -1, !dbg !12811
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12812
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12813
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12814
  ret void, !dbg !12815
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #14 !dbg !12816 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12818, metadata !DIExpression()), !dbg !12821
  %3 = bitcast i32* %2 to i8*, !dbg !12822
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12822
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12819, metadata !DIExpression()), !dbg !12823
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12824
  store volatile i32 %4, i32* %2, align 4, !dbg !12823
  call void @llvm.dbg.value(metadata i32 %0, metadata !12820, metadata !DIExpression()), !dbg !12821
  %5 = load volatile i32, i32* %2, align 4, !dbg !12825
  %6 = icmp eq i32 %0, -1, !dbg !12826
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12820, metadata !DIExpression()), !dbg !12821
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %8, metadata !12820, metadata !DIExpression()), !dbg !12821
  br label %9, !dbg !12828

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12820, metadata !DIExpression()), !dbg !12821
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12829
  call void @llvm.dbg.value(metadata i32 undef, metadata !12820, metadata !DIExpression()), !dbg !12821
  %12 = shl i32 %11, 15, !dbg !12821
  %13 = ashr i32 %12, 31, !dbg !12821
  %14 = add i32 %13, %10, !dbg !12821
  call void @llvm.dbg.value(metadata i32 %14, metadata !12820, metadata !DIExpression()), !dbg !12821
  %15 = icmp eq i32 %14, 0, !dbg !12832
  br i1 %15, label %16, label %9, !dbg !12828

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12833
  ret void, !dbg !12833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !12834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12836, metadata !DIExpression()), !dbg !12837
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12838
  ret void, !dbg !12839
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12845, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i32 0, metadata !12846, metadata !DIExpression()), !dbg !12848
  call void @llvm.dbg.value(metadata i32 0, metadata !12847, metadata !DIExpression()), !dbg !12848
  %2 = add i32 %0, -32000001, !dbg !12849
  %3 = icmp ult i32 %2, -32000000, !dbg !12849
  br i1 %3, label %22, label %4, !dbg !12849

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12851
  %6 = icmp eq i32 %5, 2048, !dbg !12854
  br i1 %6, label %7, label %9, !dbg !12855

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !12856
  call void @llvm.dbg.value(metadata i32 undef, metadata !12847, metadata !DIExpression()), !dbg !12848
  br i1 %8, label %16, label %17, !dbg !12859

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !12860
  %11 = icmp eq i32 %10, 4096, !dbg !12862
  br i1 %11, label %12, label %14, !dbg !12863

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !12864
  call void @llvm.dbg.value(metadata i32 undef, metadata !12847, metadata !DIExpression()), !dbg !12848
  br i1 %13, label %16, label %17, !dbg !12859

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !12867
  call void @llvm.dbg.value(metadata i32 undef, metadata !12847, metadata !DIExpression()), !dbg !12848
  br i1 %15, label %16, label %17, !dbg !12859

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #24, !dbg !12870
  br label %17, !dbg !12873

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #24, !dbg !12874
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !12875
  %20 = icmp ne i32 %19, %18, !dbg !12877
  %21 = zext i1 %20 to i32, !dbg !12878
  br label %22, !dbg !12878

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !12848
  call void @llvm.dbg.value(metadata i32 %23, metadata !12846, metadata !DIExpression()), !dbg !12848
  ret i32 %23, !dbg !12879
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12880 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12881
  %2 = and i32 %1, 6144, !dbg !12881
  ret i32 %2, !dbg !12882
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #15 !dbg !12883 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12884
  %2 = or i32 %1, 4, !dbg !12884
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12884
  ret void, !dbg !12885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12888, metadata !DIExpression()), !dbg !12889
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12890
  %3 = and i32 %2, -2, !dbg !12890
  %4 = or i32 %3, %0, !dbg !12890
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12890
  ret void, !dbg !12891
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12892 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12893
  %2 = and i32 %1, 1, !dbg !12893
  ret i32 %2, !dbg !12894
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12895 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !12912, metadata !DIExpression()), !dbg !12916
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12913, metadata !DIExpression()), !dbg !12916
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12917
  %4 = icmp eq i32 %3, 0, !dbg !12919
  br i1 %4, label %5, label %19, !dbg !12920

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #24, !dbg !12921
  call void @llvm.dbg.value(metadata i32 %6, metadata !12915, metadata !DIExpression()), !dbg !12916
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.216() #24, !dbg !12923
  %8 = icmp eq i32 %7, 1, !dbg !12925
  br i1 %8, label %13, label %9, !dbg !12926

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.217() #24, !dbg !12927
  br label %10, !dbg !12929

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.216() #24, !dbg !12930
  %12 = icmp eq i32 %11, 1, !dbg !12931
  br i1 %12, label %13, label %10, !dbg !12929, !llvm.loop !12932

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !12934
  %15 = load i32, i32* %14, align 4, !dbg !12934
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !12935
  %17 = load i32, i32* %16, align 4, !dbg !12935
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.218(i32 noundef 0, i32 noundef %15, i32 noundef %17) #24, !dbg !12936
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct.ztest_suite_stats* noundef %1) #24, !dbg !12937
  call void @llvm.dbg.value(metadata i32 %18, metadata !12914, metadata !DIExpression()), !dbg !12916
  br label %19, !dbg !12938

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !12939
  call void @llvm.dbg.value(metadata i32 %20, metadata !12914, metadata !DIExpression()), !dbg !12916
  ret i32 %20, !dbg !12940
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12941 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12945, metadata !DIExpression()), !dbg !12946
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.220() #24, !dbg !12947
  %2 = icmp ne i32 %1, 0, !dbg !12949
  %3 = zext i1 %2 to i32, !dbg !12950
  call void @llvm.dbg.value(metadata i32 %3, metadata !12945, metadata !DIExpression()), !dbg !12946
  ret i32 %3, !dbg !12951
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12952 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12956, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !12957, metadata !DIExpression()), !dbg !12959
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !12960
  %4 = load i32, i32* %3, align 4, !dbg !12960
  %5 = lshr i32 %4, 18, !dbg !12961
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !12962
  %7 = load i8, i8* %6, align 1, !dbg !12962
  %8 = zext i8 %7 to i32, !dbg !12963
  %9 = mul i32 %8, %0, !dbg !12964
  call void @llvm.dbg.value(metadata i32 %9, metadata !12958, metadata !DIExpression()), !dbg !12959
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !12965
  %11 = load i32, i32* %10, align 4, !dbg !12965
  %12 = lshr i32 %11, 22, !dbg !12966
  %13 = add nuw nsw i32 %12, 1, !dbg !12967
  %14 = udiv i32 %9, %13, !dbg !12968
  call void @llvm.dbg.value(metadata i32 %14, metadata !12958, metadata !DIExpression()), !dbg !12959
  ret i32 %14, !dbg !12969
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.216() unnamed_addr #16 !dbg !12970 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12971
  %2 = lshr i32 %1, 1, !dbg !12972
  %3 = and i32 %2, 1, !dbg !12972
  ret i32 %3, !dbg !12973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.217() unnamed_addr #15 !dbg !12974 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12975
  %2 = or i32 %1, 1, !dbg !12975
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12975
  ret void, !dbg !12976
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.218(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12979, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.value(metadata i32 %1, metadata !12980, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.value(metadata i32 %2, metadata !12981, metadata !DIExpression()), !dbg !12982
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12983
  %5 = and i32 %4, -16580609, !dbg !12983
  %6 = or i32 %1, %0, !dbg !12983
  %7 = or i32 %6, %2, !dbg !12983
  %8 = or i32 %7, %5, !dbg !12983
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12983
  ret void, !dbg !12984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct.ztest_suite_stats* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12989, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %1, metadata !12990, metadata !DIExpression()), !dbg !12993
  call void @llvm.dbg.value(metadata i32 0, metadata !12991, metadata !DIExpression()), !dbg !12993
  %3 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 0, !dbg !12994
  %4 = load i32, i32* %3, align 4, !dbg !12994
  %5 = lshr i32 %4, 4, !dbg !12994
  %6 = and i32 %5, 15, !dbg !12994
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12994
  %8 = load i8, i8* %7, align 1, !dbg !12994
  %9 = zext i8 %8 to i32, !dbg !12994
  %10 = lshr i32 %0, %9, !dbg !12994
  call void @llvm.dbg.value(metadata i32 %10, metadata !12992, metadata !DIExpression()), !dbg !12993
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12995
  %12 = icmp ult i32 %11, %10, !dbg !12997
  br i1 %12, label %13, label %16, !dbg !12998

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12999
  call void @llvm.dbg.value(metadata i32 %14, metadata !12991, metadata !DIExpression()), !dbg !12993
  %15 = icmp eq i32 %14, 0, !dbg !13001
  br i1 %15, label %16, label %30, !dbg !13003

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.219() #24, !dbg !13004
  br label %17, !dbg !13006

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.220() #24, !dbg !13007
  %19 = icmp eq i32 %18, 1, !dbg !13008
  br i1 %19, label %20, label %17, !dbg !13006, !llvm.loop !13009

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !13011
  tail call fastcc void @LL_RCC_SetAHBPrescaler.221(i32 noundef %21) #24, !dbg !13012
  tail call fastcc void @LL_RCC_SetSysClkSource.222() #24, !dbg !13013
  br label %22, !dbg !13014

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.223() #24, !dbg !13015
  %24 = icmp eq i32 %23, 12, !dbg !13016
  br i1 %24, label %25, label %22, !dbg !13014, !llvm.loop !13017

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 1, !dbg !13019
  %27 = load i32, i32* %26, align 4, !dbg !13019
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.224(i32 noundef %27) #24, !dbg !13020
  %28 = getelementptr inbounds %struct.ztest_suite_stats, %struct.ztest_suite_stats* %1, i32 0, i32 2, !dbg !13021
  %29 = load i32, i32* %28, align 4, !dbg !13021
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.225(i32 noundef %29) #24, !dbg !13022
  br label %30, !dbg !13023

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !13024
  %33 = icmp ugt i32 %32, %10, !dbg !13026
  br i1 %33, label %34, label %36, !dbg !13027

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !13028
  call void @llvm.dbg.value(metadata i32 %35, metadata !12991, metadata !DIExpression()), !dbg !12993
  br label %36, !dbg !13030

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12993
  call void @llvm.dbg.value(metadata i32 %37, metadata !12991, metadata !DIExpression()), !dbg !12993
  %38 = icmp eq i32 %37, 0, !dbg !13031
  br i1 %38, label %39, label %40, !dbg !13033

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !13034
  br label %40, !dbg !13036

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !13037
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.219() unnamed_addr #15 !dbg !13038 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13039
  %2 = or i32 %1, 16777216, !dbg !13039
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13039
  ret void, !dbg !13040
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.220() unnamed_addr #16 !dbg !13041 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13042
  %2 = lshr i32 %1, 25, !dbg !13043
  %3 = and i32 %2, 1, !dbg !13043
  ret i32 %3, !dbg !13044
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.221(i32 noundef %0) unnamed_addr #15 !dbg !13045 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13047, metadata !DIExpression()), !dbg !13048
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13049
  %3 = and i32 %2, -241, !dbg !13049
  %4 = or i32 %3, %0, !dbg !13049
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.222() unnamed_addr #15 !dbg !13051 {
  call void @llvm.dbg.value(metadata i32 3, metadata !13053, metadata !DIExpression()), !dbg !13054
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13055
  %2 = or i32 %1, 3, !dbg !13055
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13055
  ret void, !dbg !13056
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.223() unnamed_addr #16 !dbg !13057 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13058
  %2 = and i32 %1, 12, !dbg !13058
  ret i32 %2, !dbg !13059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.224(i32 noundef %0) unnamed_addr #15 !dbg !13060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13062, metadata !DIExpression()), !dbg !13063
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13064
  %3 = and i32 %2, -1793, !dbg !13064
  %4 = or i32 %3, %0, !dbg !13064
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13064
  ret void, !dbg !13065
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.225(i32 noundef %0) unnamed_addr #15 !dbg !13066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13068, metadata !DIExpression()), !dbg !13069
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13070
  %3 = and i32 %2, -14337, !dbg !13070
  %4 = or i32 %3, %0, !dbg !13070
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13070
  ret void, !dbg !13071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct.ztest_suite_stats* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !13072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13076, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata i32 %1, metadata !13077, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !13078, metadata !DIExpression()), !dbg !13082
  call void @llvm.dbg.value(metadata %struct.ztest_suite_stats* %3, metadata !13079, metadata !DIExpression()), !dbg !13082
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !13083
  %6 = icmp eq i32 %5, 0, !dbg !13085
  br i1 %6, label %7, label %25, !dbg !13086

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #24, !dbg !13087
  call void @llvm.dbg.value(metadata i32 %8, metadata !13081, metadata !DIExpression()), !dbg !13082
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !13089
  %10 = icmp eq i32 %9, 1, !dbg !13091
  br i1 %10, label %19, label %11, !dbg !13092

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !13093
  br i1 %12, label %13, label %14, !dbg !13096

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !13097
  br label %15, !dbg !13099

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !13100
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !13102
  br label %16, !dbg !13103

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !13104
  %18 = icmp eq i32 %17, 1, !dbg !13105
  br i1 %18, label %19, label %16, !dbg !13103, !llvm.loop !13106

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !13108
  %21 = load i32, i32* %20, align 4, !dbg !13108
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !13109
  %23 = load i32, i32* %22, align 4, !dbg !13109
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.218(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #24, !dbg !13110
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct.ztest_suite_stats* noundef %3) #24, !dbg !13111
  call void @llvm.dbg.value(metadata i32 %24, metadata !13080, metadata !DIExpression()), !dbg !13082
  br label %25, !dbg !13112

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !13113
  call void @llvm.dbg.value(metadata i32 %26, metadata !13080, metadata !DIExpression()), !dbg !13082
  ret i32 %26, !dbg !13114
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !13115 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13116
  %2 = lshr i32 %1, 17, !dbg !13117
  %3 = and i32 %2, 1, !dbg !13117
  ret i32 %3, !dbg !13118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !13119 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13120
  %2 = or i32 %1, 262144, !dbg !13120
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13120
  ret void, !dbg !13121
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !13122 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13123
  %2 = and i32 %1, -262145, !dbg !13123
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13123
  ret void, !dbg !13124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !13125 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13126
  %2 = or i32 %1, 65536, !dbg !13126
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13126
  ret void, !dbg !13127
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !13128 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13131, metadata !DIExpression()), !dbg !13147
  call void @llvm.dbg.value(metadata i32 undef, metadata !13131, metadata !DIExpression()), !dbg !13147
  call void @llvm.dbg.value(metadata i32 undef, metadata !13131, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !13147
  ret void, !dbg !13148
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !13149 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13153, metadata !DIExpression()), !dbg !13155
  %2 = icmp eq i8* %0, null, !dbg !13156
  br i1 %2, label %29, label %3, !dbg !13158

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !13159
  %5 = icmp eq i8 %4, 0, !dbg !13160
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !13161
  br i1 %6, label %29, label %8, !dbg !13161

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !13154, metadata !DIExpression()), !dbg !13155
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !13162

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !13154, metadata !DIExpression()), !dbg !13155
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !13164
  br i1 %10, label %11, label %15, !dbg !13169

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !13170
  %13 = load i8*, i8** %12, align 4, !dbg !13170
  %14 = icmp eq i8* %13, %0, !dbg !13171
  br i1 %14, label %29, label %15, !dbg !13172

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !13173
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !13154, metadata !DIExpression()), !dbg !13155
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13174
  br i1 %17, label %7, label %8, !dbg !13175, !llvm.loop !13176

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !13154, metadata !DIExpression()), !dbg !13155
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !13178
  br i1 %20, label %21, label %26, !dbg !13182

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !13183
  %23 = load i8*, i8** %22, align 4, !dbg !13183
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !13184
  %25 = icmp eq i32 %24, 0, !dbg !13185
  br i1 %25, label %29, label %26, !dbg !13186

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !13187
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !13154, metadata !DIExpression()), !dbg !13155
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !13188
  br i1 %28, label %29, label %18, !dbg !13162, !llvm.loop !13189

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !13155
  ret %struct.device* %30, !dbg !13191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !13192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13196, metadata !DIExpression()), !dbg !13197
  %2 = icmp eq %struct.device* %0, null, !dbg !13198
  br i1 %2, label %14, label %3, !dbg !13200

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13201
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !13201
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !13202
  %7 = load i8, i8* %6, align 1, !dbg !13202
  %8 = and i8 %7, 1, !dbg !13202
  %9 = icmp eq i8 %8, 0, !dbg !13202
  br i1 %9, label %14, label %10, !dbg !13203

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !13204
  %12 = load i8, i8* %11, align 1, !dbg !13204
  %13 = icmp eq i8 %12, 0, !dbg !13205
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !13197
  ret i1 %15, !dbg !13206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !13207 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !13212, metadata !DIExpression()), !dbg !13213
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !13214
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !13215
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13216 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13224, metadata !DIExpression()), !dbg !13229
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13225, metadata !DIExpression()), !dbg !13229
  call void @llvm.dbg.value(metadata i8* %2, metadata !13226, metadata !DIExpression()), !dbg !13229
  %5 = bitcast i32* %4 to i8*, !dbg !13230
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13230
  call void @llvm.dbg.value(metadata i32 0, metadata !13227, metadata !DIExpression()), !dbg !13229
  store i32 0, i32* %4, align 4, !dbg !13231
  call void @llvm.dbg.value(metadata i32* %4, metadata !13227, metadata !DIExpression(DW_OP_deref)), !dbg !13229
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13232
  call void @llvm.dbg.value(metadata i16* %6, metadata !13228, metadata !DIExpression()), !dbg !13229
  %7 = load i32, i32* %4, align 4, !dbg !13233
  call void @llvm.dbg.value(metadata i32 %7, metadata !13227, metadata !DIExpression()), !dbg !13229
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13234
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13235
  ret i32 %8, !dbg !13236
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13237 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13241, metadata !DIExpression()), !dbg !13247
  call void @llvm.dbg.value(metadata i32* %1, metadata !13242, metadata !DIExpression()), !dbg !13247
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13248
  %4 = load i16*, i16** %3, align 4, !dbg !13248
  call void @llvm.dbg.value(metadata i16* %4, metadata !13243, metadata !DIExpression()), !dbg !13247
  %5 = icmp eq i16* %4, null, !dbg !13249
  br i1 %5, label %14, label %6, !dbg !13250

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !13251
  call void @llvm.dbg.value(metadata i32 %7, metadata !13244, metadata !DIExpression()), !dbg !13251
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !13252
  %9 = load i16, i16* %8, align 2, !dbg !13252
  %10 = add i16 %9, -32767, !dbg !13253
  %11 = icmp ult i16 %10, 2, !dbg !13253
  %12 = add i32 %7, 1, !dbg !13254
  call void @llvm.dbg.value(metadata i32 %12, metadata !13244, metadata !DIExpression()), !dbg !13251
  br i1 %11, label %13, label %6, !dbg !13253, !llvm.loop !13256

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !13259
  br label %14, !dbg !13260

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !13261
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !13262 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !13266, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i32 %1, metadata !13267, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !13268, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i8* %3, metadata !13269, metadata !DIExpression()), !dbg !13277
  call void @llvm.dbg.value(metadata i32 0, metadata !13270, metadata !DIExpression()), !dbg !13278
  %5 = icmp eq i32 %1, 0, !dbg !13279
  br i1 %5, label %16, label %8, !dbg !13280

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !13270, metadata !DIExpression()), !dbg !13278
  %7 = icmp eq i32 %15, %1, !dbg !13279
  br i1 %7, label %16, label %8, !dbg !13280, !llvm.loop !13281

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !13270, metadata !DIExpression()), !dbg !13278
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !13283
  %11 = load i16, i16* %10, align 2, !dbg !13283
  call void @llvm.dbg.value(metadata i16 %11, metadata !13272, metadata !DIExpression()), !dbg !13284
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !13285
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !13275, metadata !DIExpression()), !dbg !13284
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !13286
  call void @llvm.dbg.value(metadata i32 %13, metadata !13276, metadata !DIExpression()), !dbg !13284
  %14 = icmp slt i32 %13, 0, !dbg !13287
  %15 = add nuw i32 %9, 1, !dbg !13289
  call void @llvm.dbg.value(metadata i32 %15, metadata !13270, metadata !DIExpression()), !dbg !13278
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !13290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !13291 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !13295, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !13296, metadata !DIExpression()), !dbg !13298
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !13297, metadata !DIExpression()), !dbg !13298
  %2 = sext i16 %0 to i32, !dbg !13299
  %3 = icmp slt i16 %0, 1, !dbg !13301
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !13302
  %6 = add nsw i32 %2, -1, !dbg !13302
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !13302
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !13302
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13296, metadata !DIExpression()), !dbg !13298
  ret %struct.device* %8, !dbg !13303
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13304 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13306, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !13307, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.value(metadata i8* %2, metadata !13308, metadata !DIExpression()), !dbg !13311
  %5 = bitcast i32* %4 to i8*, !dbg !13312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13312
  call void @llvm.dbg.value(metadata i32 0, metadata !13309, metadata !DIExpression()), !dbg !13311
  store i32 0, i32* %4, align 4, !dbg !13313
  call void @llvm.dbg.value(metadata i32* %4, metadata !13309, metadata !DIExpression(DW_OP_deref)), !dbg !13311
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !13314
  call void @llvm.dbg.value(metadata i16* %6, metadata !13310, metadata !DIExpression()), !dbg !13311
  %7 = load i32, i32* %4, align 4, !dbg !13315
  call void @llvm.dbg.value(metadata i32 %7, metadata !13309, metadata !DIExpression()), !dbg !13311
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !13316
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !13317
  ret i32 %8, !dbg !13318
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !13319 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13321, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.value(metadata i32* %1, metadata !13322, metadata !DIExpression()), !dbg !13326
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !13327
  %4 = load i16*, i16** %3, align 4, !dbg !13327
  call void @llvm.dbg.value(metadata i16* %4, metadata !13323, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.value(metadata i32 0, metadata !13324, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.value(metadata i32 0, metadata !13325, metadata !DIExpression()), !dbg !13326
  %5 = icmp eq i16* %4, null, !dbg !13328
  br i1 %5, label %22, label %6, !dbg !13330

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !13324, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.value(metadata i16* %8, metadata !13323, metadata !DIExpression()), !dbg !13326
  %9 = load i16, i16* %8, align 2, !dbg !13331
  %10 = icmp eq i16 %9, -32768, !dbg !13335
  call void @llvm.dbg.value(metadata i32 undef, metadata !13324, metadata !DIExpression()), !dbg !13326
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !13336
  call void @llvm.dbg.value(metadata i16* %11, metadata !13323, metadata !DIExpression()), !dbg !13326
  %12 = zext i1 %10 to i32, !dbg !13337
  %13 = add i32 %7, %12, !dbg !13337
  call void @llvm.dbg.value(metadata i32 %13, metadata !13324, metadata !DIExpression()), !dbg !13326
  %14 = icmp eq i32 %13, 2, !dbg !13338
  br i1 %14, label %15, label %6, !dbg !13339

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !13326
  call void @llvm.dbg.value(metadata i32 %16, metadata !13325, metadata !DIExpression()), !dbg !13326
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !13340
  %18 = load i16, i16* %17, align 2, !dbg !13340
  %19 = icmp eq i16 %18, 32767, !dbg !13341
  %20 = add i32 %16, 1, !dbg !13342
  call void @llvm.dbg.value(metadata i32 %20, metadata !13325, metadata !DIExpression()), !dbg !13326
  br i1 %19, label %21, label %15, !dbg !13344, !llvm.loop !13345

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !13347
  br label %22, !dbg !13348

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !13349
  call void @llvm.dbg.value(metadata i16* %23, metadata !13323, metadata !DIExpression()), !dbg !13326
  ret i16* %23, !dbg !13350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !13351 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13354
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !13355
  ret i32* %2, !dbg !13356
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !13357 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13508, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !13509, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13510, metadata !DIExpression()), !dbg !13511
  ret void, !dbg !13512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13517, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata i32 %1, metadata !13518, metadata !DIExpression()), !dbg !13519
  ret void, !dbg !13520
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13521 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13525, metadata !DIExpression()), !dbg !13527
  call void @llvm.dbg.value(metadata i32 %1, metadata !13526, metadata !DIExpression()), !dbg !13527
  ret void, !dbg !13528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13533, metadata !DIExpression()), !dbg !13535
  call void @llvm.dbg.value(metadata i8* %1, metadata !13534, metadata !DIExpression()), !dbg !13535
  ret i32 -134, !dbg !13536
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !13537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13541, metadata !DIExpression()), !dbg !13543
  call void @llvm.dbg.value(metadata i8* %1, metadata !13542, metadata !DIExpression()), !dbg !13543
  ret i32 -134, !dbg !13544
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13548, metadata !DIExpression()), !dbg !13549
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13550, !srcloc !13556
  call void @llvm.dbg.value(metadata i32 undef, metadata !13553, metadata !DIExpression()) #23, !dbg !13557
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #23, !dbg !13557
  br label %3, !dbg !13558

3:                                                ; preds = %3, %1
  br label %3, !dbg !13559, !llvm.loop !13562
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13569, metadata !DIExpression()), !dbg !13571
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13570, metadata !DIExpression()), !dbg !13571
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.230, i32 0, i32 0), i32 noundef 69) #25, !dbg !13572
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13577
  unreachable, !dbg !13577
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !13578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13580, metadata !DIExpression()), !dbg !13581
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !13582
  unreachable, !dbg !13582
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !13583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13585, metadata !DIExpression()), !dbg !13589
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13586, metadata !DIExpression()), !dbg !13589
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13590, !srcloc !13556
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13590
  call void @llvm.dbg.value(metadata i32 %4, metadata !13553, metadata !DIExpression()) #23, !dbg !13592
  call void @llvm.dbg.value(metadata i32 undef, metadata !13554, metadata !DIExpression()) #23, !dbg !13592
  call void @llvm.dbg.value(metadata i32 %4, metadata !13587, metadata !DIExpression()), !dbg !13589
  %5 = tail call fastcc %struct.k_thread* @k_current_get.233() #26, !dbg !13593
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13588, metadata !DIExpression()), !dbg !13589
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !13594
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.234, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !13594
  %7 = icmp eq %struct.__esf* %1, null, !dbg !13599
  br i1 %7, label %20, label %8, !dbg !13601

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13602, metadata !DIExpression()), !dbg !13607
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !13609
  %10 = load i32, i32* %9, align 4, !dbg !13609
  %11 = and i32 %10, 511, !dbg !13610
  %12 = icmp eq i32 %11, 0, !dbg !13611
  br i1 %12, label %14, label %13, !dbg !13612

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.235, i32 0, i32 0), i32 noundef 69) #25, !dbg !13613
  br label %14, !dbg !13619

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13620
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.236, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !13620
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !13625
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !13602, metadata !DIExpression()), !dbg !13626
  %16 = load i32, i32* %9, align 4, !dbg !13631
  %17 = and i32 %16, 511, !dbg !13632
  %18 = icmp eq i32 %17, 0, !dbg !13633
  br i1 %18, label %22, label %19, !dbg !13634

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !13635, metadata !DIExpression()) #23, !dbg !13638
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13641, !srcloc !13642
  br label %25, !dbg !13643

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !13620
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.236, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !13620
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !13625
  br label %22, !dbg !13644

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !13645
  call void @llvm.dbg.value(metadata i32 %4, metadata !13635, metadata !DIExpression()) #23, !dbg !13648
  call void @llvm.dbg.value(metadata i32 %4, metadata !13635, metadata !DIExpression()) #23, !dbg !13651
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13589
  br i1 %23, label %25, label %24, !dbg !13653

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.237(%struct.k_thread* noundef %5) #24, !dbg !13654
  br label %25, !dbg !13657

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !13657
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.233() unnamed_addr #11 !dbg !13658 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.245() #26, !dbg !13662
  ret %struct.k_thread* %1, !dbg !13663
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #4 !dbg !13664 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13668, metadata !DIExpression()), !dbg !13669
  %2 = icmp ult i32 %0, 5, !dbg !13670
  br i1 %2, label %3, label %6, !dbg !13670

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !13670
  %5 = load i8*, i8** %4, align 4, !dbg !13670
  br label %6, !dbg !13670

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.239, i32 0, i32 0), %1 ], !dbg !13671
  ret i8* %7, !dbg !13673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13674 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13678, metadata !DIExpression()), !dbg !13680
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !13681
  br i1 %2, label %9, label %3, !dbg !13682

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !13683
  call void @llvm.dbg.value(metadata i8* %4, metadata !13679, metadata !DIExpression()), !dbg !13680
  %5 = icmp eq i8* %4, null, !dbg !13684
  br i1 %5, label %9, label %6, !dbg !13686

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !13687
  %8 = icmp eq i8 %7, 0, !dbg !13688
  br i1 %8, label %9, label %10, !dbg !13689

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.238, i32 0, i32 0), metadata !13679, metadata !DIExpression()), !dbg !13680
  br label %10, !dbg !13690

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.238, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !13680
  call void @llvm.dbg.value(metadata i8* %11, metadata !13679, metadata !DIExpression()), !dbg !13680
  ret i8* %11, !dbg !13692
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.237(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13693 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13697, metadata !DIExpression()), !dbg !13698
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13699, !srcloc !13701
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !13702
  ret void, !dbg !13703
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.245() unnamed_addr #11 !dbg !13704 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13705, !srcloc !13707
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !13708
  ret %struct.k_thread* %1, !dbg !13709
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13710 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13714, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.value(metadata i32 %1, metadata !13715, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.value(metadata i32 %2, metadata !13716, metadata !DIExpression()), !dbg !13717
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !13718
  ret void, !dbg !13719
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13720 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13724, metadata !DIExpression()), !dbg !13727
  call void @llvm.dbg.value(metadata i8* %1, metadata !13725, metadata !DIExpression()), !dbg !13727
  call void @llvm.dbg.value(metadata i32 %2, metadata !13726, metadata !DIExpression()), !dbg !13727
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !13728
  ret void, !dbg !13729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13730 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !13731
  ret void, !dbg !13732
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13735, metadata !DIExpression()), !dbg !13736
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !13737
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13738
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13739
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13740
  %4 = trunc i32 %0 to i8, !dbg !13741
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13742
  store i8 %4, i8* %5, align 4, !dbg !13743
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13744
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !13745
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13746
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13747
  store i8* %8, i8** %9, align 4, !dbg !13748
  ret void, !dbg !13749
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13750 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13752, metadata !DIExpression()), !dbg !13758
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13759
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13753, metadata !DIExpression()), !dbg !13758
  %3 = getelementptr inbounds [1 x [4160 x %struct.z_thread_stack_element]], [1 x [4160 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13760
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13754, metadata !DIExpression()), !dbg !13758
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.252, i32 0, i32 0), metadata !13757, metadata !DIExpression()), !dbg !13758
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13761
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13762
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 4096, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.252, i32 0, i32 0)) #25, !dbg !13763
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !13764
  ret void, !dbg !13765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13766 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13770, metadata !DIExpression()), !dbg !13771
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13772
  ret i8* %2, !dbg !13773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !13774 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13779, metadata !DIExpression()), !dbg !13780
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13781
  %3 = load i8, i8* %2, align 1, !dbg !13782
  %4 = and i8 %3, -5, !dbg !13782
  store i8 %4, i8* %2, align 1, !dbg !13782
  ret void, !dbg !13783
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !13784 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !13787
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !13788
  %3 = ptrtoint i8* %2 to i32, !dbg !13797
  %4 = add i32 %3, 2048, !dbg !13798
  call void @llvm.dbg.value(metadata i32 %4, metadata !13792, metadata !DIExpression()) #23, !dbg !13799
  call void @llvm.dbg.value(metadata i32 %4, metadata !13800, metadata !DIExpression()) #23, !dbg !13803
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !13805, !srcloc !13806
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13807
  %6 = or i32 %5, 512, !dbg !13807
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13807
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -2, i32 noundef 255) #25, !dbg !13808
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -5, i32 noundef 0) #25, !dbg !13811
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -12, i32 noundef 0) #25, !dbg !13812
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -11, i32 noundef 0) #25, !dbg !13813
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -10, i32 noundef 0) #25, !dbg !13814
  tail call fastcc void @__NVIC_SetPriority.255(i32 noundef -4, i32 noundef 0) #25, !dbg !13815
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13816
  %8 = or i32 %7, 458752, !dbg !13816
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13816
  tail call void @z_arm_fault_init() #25, !dbg !13817
  tail call void @z_arm_cpu_idle_init() #25, !dbg !13818
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13819
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13822
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !13823
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !13824
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13825
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !13825
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13786, metadata !DIExpression()), !dbg !13826
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !13827
  call void @z_device_state_init() #25, !dbg !13828
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !13829
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !13830
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !13831
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !13832
  unreachable, !dbg !13832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2210, metadata !DIExpression()), !dbg !13833
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13834
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13834
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !13833
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2211, metadata !DIExpression()), !dbg !13833
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13835
  br i1 %7, label %8, label %35, !dbg !13836

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2211, metadata !DIExpression()), !dbg !13833
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13837
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13837
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2221, metadata !DIExpression()), !dbg !13838
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13839
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13839
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !13840
  call void @llvm.dbg.value(metadata i32 %14, metadata !2225, metadata !DIExpression()), !dbg !13838
  %15 = icmp eq %struct.device* %11, null, !dbg !13841
  br i1 %15, label %32, label %16, !dbg !13843

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13844
  br i1 %17, label %26, label %18, !dbg !13847

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13848
  call void @llvm.dbg.value(metadata i32 %19, metadata !2225, metadata !DIExpression()), !dbg !13838
  %20 = icmp ult i32 %19, 255, !dbg !13850
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13850
  call void @llvm.dbg.value(metadata i32 %21, metadata !2225, metadata !DIExpression()), !dbg !13838
  %22 = trunc i32 %21 to i8, !dbg !13851
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13852
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13852
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13853
  store i8 %22, i8* %25, align 1, !dbg !13854
  br label %26, !dbg !13855

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13856
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13856
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13857
  %30 = load i8, i8* %29, align 1, !dbg !13858
  %31 = or i8 %30, 1, !dbg !13858
  store i8 %31, i8* %29, align 1, !dbg !13858
  br label %32, !dbg !13859

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13860
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2211, metadata !DIExpression()), !dbg !13833
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13835
  br i1 %34, label %8, label %35, !dbg !13836, !llvm.loop !13861

35:                                               ; preds = %32, %1
  ret void, !dbg !13863
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.255(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13866, metadata !DIExpression()), !dbg !13868
  call void @llvm.dbg.value(metadata i32 %1, metadata !13867, metadata !DIExpression()), !dbg !13868
  %3 = trunc i32 %1 to i8, !dbg !13869
  %4 = shl i8 %3, 4, !dbg !13869
  %5 = and i32 %0, 15, !dbg !13872
  %6 = add nsw i32 %5, -4, !dbg !13873
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13874
  store volatile i8 %4, i8* %7, align 1, !dbg !13875
  ret void, !dbg !13876
}

; Function Attrs: optsize
declare !dbg !13877 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !13878 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13881, metadata !DIExpression()), !dbg !13882
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13883
  store i8 1, i8* %2, align 1, !dbg !13884
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13885
  store i8 1, i8* %3, align 4, !dbg !13886
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13887
  store i32 0, i32* %4, align 4, !dbg !13888
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13889
  store i32 0, i32* %5, align 4, !dbg !13890
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13891
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13892
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13893
  ret void, !dbg !13894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13895 {
  tail call void @z_sched_init() #25, !dbg !13900
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13901
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.256, i32 0, i32 0)) #25, !dbg !13902
  call void @llvm.dbg.value(metadata i8* %1, metadata !13899, metadata !DIExpression()), !dbg !13903
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !13904
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !13905
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !13906
  ret i8* %1, !dbg !13907
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !13908 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13912, metadata !DIExpression()), !dbg !13913
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !13914
  unreachable, !dbg !13915
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13918, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata i8* %1, metadata !13919, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.value(metadata i8* %2, metadata !13920, metadata !DIExpression()), !dbg !13921
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13922
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !13923
  tail call void @boot_banner() #25, !dbg !13924
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !13925
  tail call void @z_init_static_threads() #25, !dbg !13926
  tail call void @main() #25, !dbg !13927
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13928
  %5 = and i8 %4, -2, !dbg !13928
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13928
  ret void, !dbg !13929
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13930 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13940, metadata !DIExpression()), !dbg !13942
  call void @llvm.dbg.value(metadata i8* %1, metadata !13941, metadata !DIExpression()), !dbg !13942
  ret void, !dbg !13943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #4 !dbg !13944 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13946, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.value(metadata i8* %1, metadata !13947, metadata !DIExpression()), !dbg !13948
  ret void, !dbg !13949
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13950 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13951, !srcloc !13958
  call void @llvm.dbg.value(metadata i32 %1, metadata !13954, metadata !DIExpression()) #23, !dbg !13959
  %2 = icmp ne i32 %1, 0, !dbg !13960
  ret i1 %2, !dbg !13961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !13962 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13963
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13964
  %3 = load i8, i8* %2, align 4, !dbg !13965
  %4 = or i8 %3, 1, !dbg !13965
  store i8 %4, i8* %2, align 4, !dbg !13965
  ret void, !dbg !13966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13967 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13968
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13969
  %3 = load i8, i8* %2, align 4, !dbg !13970
  %4 = and i8 %3, -2, !dbg !13970
  store i8 %4, i8* %2, align 4, !dbg !13970
  ret void, !dbg !13971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13972 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13973
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13974
  %3 = load i8, i8* %2, align 4, !dbg !13974
  %4 = and i8 %3, 1, !dbg !13975
  %5 = icmp ne i8 %4, 0, !dbg !13976
  ret i1 %5, !dbg !13977
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13978 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13982, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.value(metadata i8* %1, metadata !13983, metadata !DIExpression()), !dbg !13984
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13985
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13987
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13982, metadata !DIExpression()), !dbg !13984
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13988
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13989
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13990
  store i8 0, i8* %8, align 1, !dbg !13991
  ret i32 0, !dbg !13992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13997, metadata !DIExpression()), !dbg !13998
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13999
  ret i8* %2, !dbg !14000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14001 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14005, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata i8* %1, metadata !14006, metadata !DIExpression()), !dbg !14008
  call void @llvm.dbg.value(metadata i32 %2, metadata !14007, metadata !DIExpression()), !dbg !14008
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14009
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !14010
  ret i32 0, !dbg !14011
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2234 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2351, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i8* %1, metadata !2352, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i32 %2, metadata !2353, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i32 0, metadata !2354, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i8 undef, metadata !2356, metadata !DIExpression()), !dbg !14012
  %4 = icmp eq i8* %1, null, !dbg !14013
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !14015
  br i1 %6, label %46, label %7, !dbg !14015

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14016
  %9 = load i8, i8* %8, align 1, !dbg !14016
  call void @llvm.dbg.value(metadata i8 %9, metadata !2356, metadata !DIExpression()), !dbg !14012
  %10 = add i32 %2, -1, !dbg !14017
  call void @llvm.dbg.value(metadata i32 %10, metadata !2353, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i8 0, metadata !2357, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata i8 %9, metadata !2356, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i32 0, metadata !2354, metadata !DIExpression()), !dbg !14012
  %11 = icmp eq i8 %9, 0, !dbg !14019
  br i1 %11, label %12, label %15, !dbg !14021

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !14022
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !14023
  store i8 0, i8* %14, align 1, !dbg !14024
  br label %46, !dbg !14025

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2357, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata i8 %17, metadata !2356, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i32 %18, metadata !2354, metadata !DIExpression()), !dbg !14012
  %19 = zext i8 %17 to i32, !dbg !14026
  %20 = zext i8 %16 to i32, !dbg !14027
  %21 = shl nuw i32 1, %20, !dbg !14027
  call void @llvm.dbg.value(metadata i32 %21, metadata !2355, metadata !DIExpression()), !dbg !14012
  %22 = and i32 %21, %19, !dbg !14029
  %23 = icmp eq i32 %22, 0, !dbg !14031
  br i1 %23, label %42, label %24, !dbg !14032

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !14033
  %26 = sub i32 %10, %18, !dbg !14034
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !14035
  %28 = load i8*, i8** %27, align 4, !dbg !14035
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !14036
  %30 = load i32, i32* %29, align 4, !dbg !14036
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !14037
  %32 = add i32 %31, %18, !dbg !14038
  call void @llvm.dbg.value(metadata i32 %32, metadata !2354, metadata !DIExpression()), !dbg !14012
  %33 = trunc i32 %21 to i8, !dbg !14039
  %34 = xor i8 %33, -1, !dbg !14039
  %35 = and i8 %17, %34, !dbg !14039
  call void @llvm.dbg.value(metadata i8 %35, metadata !2356, metadata !DIExpression()), !dbg !14012
  %36 = icmp eq i8 %35, 0, !dbg !14040
  br i1 %36, label %12, label %37, !dbg !14042

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !14043
  %39 = sub i32 %10, %32, !dbg !14045
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.261, i32 0, i32 0), i32 noundef 1) #24, !dbg !14046
  %41 = add i32 %40, %32, !dbg !14047
  call void @llvm.dbg.value(metadata i32 %41, metadata !2354, metadata !DIExpression()), !dbg !14012
  br label %42, !dbg !14048

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !14012
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !14012
  call void @llvm.dbg.value(metadata i8 %44, metadata !2356, metadata !DIExpression()), !dbg !14012
  call void @llvm.dbg.value(metadata i32 %43, metadata !2354, metadata !DIExpression()), !dbg !14012
  %45 = add i8 %16, 1, !dbg !14049
  call void @llvm.dbg.value(metadata i8 %45, metadata !2357, metadata !DIExpression()), !dbg !14018
  br label %15, !dbg !14021

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.262, i32 0, i32 0), %3 ], !dbg !14012
  ret i8* %47, !dbg !14050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !14051 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14055, metadata !DIExpression()), !dbg !14060
  call void @llvm.dbg.value(metadata i32 %1, metadata !14056, metadata !DIExpression()), !dbg !14060
  call void @llvm.dbg.value(metadata i8* %2, metadata !14057, metadata !DIExpression()), !dbg !14060
  call void @llvm.dbg.value(metadata i32 %3, metadata !14058, metadata !DIExpression()), !dbg !14060
  %5 = icmp ult i32 %1, %3, !dbg !14061
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !14061
  call void @llvm.dbg.value(metadata i32 %6, metadata !14059, metadata !DIExpression()), !dbg !14060
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !14062
  ret i32 %6, !dbg !14063
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14068, metadata !DIExpression()), !dbg !14069
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !14070
  ret void, !dbg !14071
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !14072 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14081, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14082, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata i32 %2, metadata !14083, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14084, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata i8* %4, metadata !14085, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata i8* %5, metadata !14086, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata i8* %6, metadata !14087, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata i32 %7, metadata !14088, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata i32 %8, metadata !14089, metadata !DIExpression()), !dbg !14092
  call void @llvm.dbg.value(metadata i8* %9, metadata !14090, metadata !DIExpression()), !dbg !14092
  %11 = icmp eq i32 %7, 15, !dbg !14093
  br i1 %11, label %12, label %15, !dbg !14093

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !14093
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !14093
  br i1 %14, label %19, label %18, !dbg !14093

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !14093
  %17 = icmp ult i32 %16, 31, !dbg !14093
  br i1 %17, label %19, label %18, !dbg !14093

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.275, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 536) #25, !dbg !14097
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.277, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !14097
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 536) #25, !dbg !14097
  unreachable, !dbg !14097

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !14099
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %20) #24, !dbg !14100
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !14101
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !14102
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !14103
  call void @llvm.dbg.value(metadata i8* %22, metadata !14091, metadata !DIExpression()), !dbg !14092
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !14104
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !14105
  store i8* null, i8** %23, align 4, !dbg !14106
  %24 = icmp eq i8* %9, null, !dbg !14107
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !14109
  br i1 %24, label %29, label %26, !dbg !14110

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !14111
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !14113
  store i8 0, i8* %28, align 1, !dbg !14114
  br label %30, !dbg !14115

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !14116
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14118
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !14118
  br i1 %32, label %36, label %33, !dbg !14120

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !14121
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !14121
  br label %36, !dbg !14122

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !14092
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !14123
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !14125
  ret i8* %22, !dbg !14126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !14127 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14131, metadata !DIExpression()), !dbg !14132
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !14133
  ret i1 %2, !dbg !14134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #7 !dbg !14135 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !14140, metadata !DIExpression()), !dbg !14141
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !14142
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !14143
  ret void, !dbg !14144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !14145 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14150, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i32 %1, metadata !14151, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i32 %2, metadata !14152, metadata !DIExpression()), !dbg !14154
  call void @llvm.dbg.value(metadata i32 %3, metadata !14153, metadata !DIExpression()), !dbg !14154
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !14155
  store %union.anon* null, %union.anon** %5, align 8, !dbg !14156
  %6 = trunc i32 %3 to i8, !dbg !14157
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !14158
  store i8 %6, i8* %7, align 4, !dbg !14159
  %8 = trunc i32 %2 to i8, !dbg !14160
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !14161
  store i8 %8, i8* %9, align 1, !dbg !14162
  %10 = trunc i32 %1 to i8, !dbg !14163
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !14164
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !14164
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !14164
  store i8 %10, i8* %13, align 2, !dbg !14165
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !14166
  store i8 0, i8* %14, align 1, !dbg !14167
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !14168
  ret void, !dbg !14169
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !14170 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14174, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14175, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i32 %2, metadata !14176, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i32 0, metadata !14181, metadata !DIExpression()), !dbg !14182
  %4 = add i32 %2, 7, !dbg !14183
  %5 = and i32 %4, -8, !dbg !14183
  %6 = add i32 %5, 64, !dbg !14183
  call void @llvm.dbg.value(metadata i32 %6, metadata !14177, metadata !DIExpression()), !dbg !14182
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.278(%struct.z_thread_stack_element* noundef %1) #24, !dbg !14185
  call void @llvm.dbg.value(metadata i8* %7, metadata !14180, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i32 %5, metadata !14178, metadata !DIExpression()), !dbg !14182
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !14186
  call void @llvm.dbg.value(metadata i8* %8, metadata !14179, metadata !DIExpression()), !dbg !14182
  call void @llvm.dbg.value(metadata i32 0, metadata !14181, metadata !DIExpression()), !dbg !14182
  %9 = ptrtoint i8* %7 to i32, !dbg !14187
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !14188
  store i32 %9, i32* %10, align 4, !dbg !14189
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !14190
  store i32 %5, i32* %11, align 4, !dbg !14191
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !14192
  store i32 0, i32* %12, align 4, !dbg !14193
  call void @llvm.dbg.value(metadata i8* %8, metadata !14179, metadata !DIExpression()), !dbg !14182
  ret i8* %8, !dbg !14194
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.278(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !14195 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14199, metadata !DIExpression()), !dbg !14200
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14201
  ret i8* %2, !dbg !14202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14203 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !14208, metadata !DIExpression()), !dbg !14209
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !14210
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14211
  ret void, !dbg !14212
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14213 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14215, metadata !DIExpression()), !dbg !14216
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14217
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !14218
  ret void, !dbg !14219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14220 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14224, metadata !DIExpression()), !dbg !14225
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14226
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14227
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14228
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14229
  ret void, !dbg !14230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !14231 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14236, metadata !DIExpression()), !dbg !14237
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14238
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !14239
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14240
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !14241
  ret void, !dbg !14242
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !14243 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14260, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14251, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !14252, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 %2, metadata !14253, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !14254, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i8* %4, metadata !14255, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i8* %5, metadata !14256, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i8* %6, metadata !14257, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 %7, metadata !14258, metadata !DIExpression()), !dbg !14261
  call void @llvm.dbg.value(metadata i32 %8, metadata !14259, metadata !DIExpression()), !dbg !14261
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14262, !srcloc !13958
  call void @llvm.dbg.value(metadata i32 %11, metadata !13954, metadata !DIExpression()) #23, !dbg !14267
  %12 = icmp eq i32 %11, 0, !dbg !14268
  br i1 %12, label %14, label %13, !dbg !14269

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.281, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 647) #25, !dbg !14270
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.282, i32 0, i32 0)) #25, !dbg !14270
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 647) #25, !dbg !14270
  unreachable, !dbg !14270

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !14260, metadata !DIExpression()), !dbg !14261
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !14272
  %17 = icmp eq i64 %15, -1, !dbg !14273
  br i1 %17, label %19, label %18, !dbg !14275

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !14276
  br label %19, !dbg !14278

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !14279
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14280 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14285, metadata !DIExpression()), !dbg !14286
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14284, metadata !DIExpression()), !dbg !14286
  %4 = icmp eq i64 %3, 0, !dbg !14287
  br i1 %4, label %5, label %6, !dbg !14289

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.283(%struct.k_thread* noundef %0) #24, !dbg !14290
  br label %7, !dbg !14292

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !14293
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !14295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.283(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14300, metadata !DIExpression()), !dbg !14301
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !14302, !srcloc !14304
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !14305
  ret void, !dbg !14306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14307 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14310, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14309, metadata !DIExpression()), !dbg !14311
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14312
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !14313
  ret void, !dbg !14314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !14315 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14317, metadata !DIExpression()), !dbg !14337
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !14338

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 750) #25, !dbg !14342
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.287, i32 0, i32 0)) #25, !dbg !14342
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 750) #25, !dbg !14342
  unreachable, !dbg !14342

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !14317, metadata !DIExpression()), !dbg !14337
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14345
  br i1 %4, label %6, label %5, !dbg !14346

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !14347
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !14335, metadata !DIExpression()), !dbg !14348
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !14349

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !14353
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14353
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !14355
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !14355
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !14356
  %12 = load i32, i32* %11, align 4, !dbg !14356
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !14357
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !14357
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !14358
  %16 = load i8*, i8** %15, align 4, !dbg !14358
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !14359
  %18 = load i8*, i8** %17, align 4, !dbg !14359
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !14360
  %20 = load i8*, i8** %19, align 4, !dbg !14360
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !14361
  %22 = load i32, i32* %21, align 4, !dbg !14361
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !14362
  %24 = load i32, i32* %23, align 4, !dbg !14362
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !14363
  %26 = load i8*, i8** %25, align 4, !dbg !14363
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !14364
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !14365
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !14366
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !14367
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !14367
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !14368
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !14317, metadata !DIExpression()), !dbg !14337
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14369
  br i1 %32, label %1, label %2, !dbg !14338, !llvm.loop !14370

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.274, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.286, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 781) #25, !dbg !14372
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.287, i32 0, i32 0)) #25, !dbg !14372
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.276, i32 0, i32 0), i32 noundef 781) #25, !dbg !14372
  unreachable, !dbg !14372

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !14335, metadata !DIExpression()), !dbg !14348
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14375
  br i1 %36, label %38, label %37, !dbg !14376

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !14377
  ret void, !dbg !14378

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !14379
  %40 = load i32, i32* %39, align 4, !dbg !14379
  %41 = icmp eq i32 %40, -1, !dbg !14382
  br i1 %41, label %50, label %42, !dbg !14383

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !14384
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !14384
  %45 = icmp sgt i32 %40, 0, !dbg !14386
  %46 = select i1 %45, i32 %40, i32 0, !dbg !14386
  %47 = zext i32 %46 to i64, !dbg !14386
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %47) #24, !dbg !14386
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !14387
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !14387
  br label %50, !dbg !14388

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !14389
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !14335, metadata !DIExpression()), !dbg !14348
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !14390
  br i1 %52, label %33, label %34, !dbg !14349, !llvm.loop !14391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !14393 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !14397, metadata !DIExpression()), !dbg !14398
  call void @llvm.dbg.value(metadata i64 %0, metadata !14399, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i32 1000, metadata !14402, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i32 10000, metadata !14403, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8 1, metadata !14404, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8 0, metadata !14405, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8 1, metadata !14406, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8 0, metadata !14407, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8 1, metadata !14408, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i8 0, metadata !14409, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i64 0, metadata !14410, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.value(metadata i64 0, metadata !14410, metadata !DIExpression()), !dbg !14414
  %2 = mul i64 %0, 10, !dbg !14416
  ret i64 %2, !dbg !14422
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !14423 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !14425, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i8* %1, metadata !14426, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i8* %2, metadata !14427, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.value(metadata i8* %3, metadata !14428, metadata !DIExpression()), !dbg !14429
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14430
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !14431
  %7 = load i8, i8* %6, align 4, !dbg !14432
  %8 = or i8 %7, 4, !dbg !14432
  store i8 %8, i8* %6, align 4, !dbg !14432
  tail call void @z_thread_essential_clear() #24, !dbg !14433
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !14434
  unreachable, !dbg !14434
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !14435 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14440, metadata !DIExpression()), !dbg !14442
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14443
  %3 = load i32, i32* %2, align 4, !dbg !14443
  call void @llvm.dbg.value(metadata i32 %3, metadata !14441, metadata !DIExpression()), !dbg !14442
  %4 = icmp eq i32 %3, 0, !dbg !14444
  br i1 %4, label %10, label %5, !dbg !14446

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !14447
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14450
  %8 = zext i8 %7 to i32, !dbg !14451
  %9 = icmp eq i32 %6, %8, !dbg !14452
  br i1 %9, label %11, label %10, !dbg !14453

10:                                               ; preds = %5, %1
  br label %11, !dbg !14454

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !14442
  ret i1 %12, !dbg !14455
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !14456 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14458, metadata !DIExpression()), !dbg !14459
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14460
  %3 = load i32, i32* %2, align 4, !dbg !14460
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14462
  %5 = zext i8 %4 to i32, !dbg !14463
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14464
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !14465
  %8 = or i32 %7, %5, !dbg !14466
  %9 = icmp eq i32 %3, %8, !dbg !14467
  br i1 %9, label %10, label %11, !dbg !14468

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !14469
  br label %11, !dbg !14470

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !14471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14472 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14476, metadata !DIExpression()), !dbg !14477
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !14478
  %3 = zext i8 %2 to i32, !dbg !14479
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14480
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !14481
  %6 = or i32 %5, %3, !dbg !14482
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !14483
  store i32 %6, i32* %7, align 4, !dbg !14484
  ret void, !dbg !14485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !14486 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14490, metadata !DIExpression()), !dbg !14491
  ret i32 -134, !dbg !14492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !14493 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14497, metadata !DIExpression()), !dbg !14499
  call void @llvm.dbg.value(metadata i32 %1, metadata !14498, metadata !DIExpression()), !dbg !14499
  ret i32 -134, !dbg !14500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !14501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14508, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !14509, metadata !DIExpression()), !dbg !14510
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !14511
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !14513
  %6 = select i1 %5, i32 -22, i32 0, !dbg !14510
  ret i32 %6, !dbg !14514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !14515 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !14519, metadata !DIExpression()), !dbg !14520
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !14521
  %3 = select i1 %2, i32 -22, i32 0, !dbg !14520
  ret i32 %3, !dbg !14523
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !14524 {
  tail call void @sys_clock_idle_exit() #25, !dbg !14526
  ret void, !dbg !14527
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !14528 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14530, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i8* %1, metadata !14531, metadata !DIExpression()), !dbg !14533
  call void @llvm.dbg.value(metadata i8* %2, metadata !14532, metadata !DIExpression()), !dbg !14533
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14534
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !14534
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !14534
  %7 = load i8, i8* %6, align 2, !dbg !14534
  %8 = icmp sgt i8 %7, -1, !dbg !14534
  br i1 %8, label %10, label %9, !dbg !14537

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.296, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.297, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 39) #25, !dbg !14538
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.298, i32 0, i32 0), i32 noundef 39) #25, !dbg !14538
  unreachable, !dbg !14538

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14540, !srcloc !14547
  call void @llvm.dbg.value(metadata i32 undef, metadata !14543, metadata !DIExpression()) #23, !dbg !14548
  call void @llvm.dbg.value(metadata i32 undef, metadata !14544, metadata !DIExpression()) #23, !dbg !14548
  tail call fastcc void @k_cpu_idle() #24, !dbg !14549
  br label %10, !dbg !14550, !llvm.loop !14551
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !14553 {
  tail call void @arch_cpu_idle() #25, !dbg !14554
  ret void, !dbg !14555
}

; Function Attrs: optsize
declare !dbg !14556 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14557 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14561, metadata !DIExpression()), !dbg !14565
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14562, metadata !DIExpression()), !dbg !14565
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14566
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14566
  %5 = load i8, i8* %4, align 2, !dbg !14566
  call void @llvm.dbg.value(metadata i8 %5, metadata !14563, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14565
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14567
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14567
  %8 = load i8, i8* %7, align 2, !dbg !14567
  call void @llvm.dbg.value(metadata i8 %8, metadata !14564, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14565
  %9 = icmp eq i8 %8, %5, !dbg !14568
  %10 = sext i8 %5 to i32, !dbg !14570
  %11 = sext i8 %8 to i32, !dbg !14570
  %12 = sub nsw i32 %11, %10, !dbg !14570
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14570
  ret i32 %13, !dbg !14571
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14572 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14576, metadata !DIExpression()), !dbg !14577
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14578
  %3 = icmp eq i32 %2, 0, !dbg !14580
  br i1 %3, label %8, label %4, !dbg !14581

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !14582
  %6 = add i32 %5, %2, !dbg !14584
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14585
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14586
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !14587
  br label %8, !dbg !14588

8:                                                ; preds = %4, %1
  ret void, !dbg !14589
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14590 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14594, metadata !DIExpression()), !dbg !14596
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14597
  call void @llvm.dbg.value(metadata i32 %1, metadata !14595, metadata !DIExpression()), !dbg !14596
  ret i32 %1, !dbg !14598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14603, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i32 %1, metadata !14604, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.value(metadata i32 0, metadata !14605, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !14621
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14623, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !14621
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14631
  br i1 %4, label %6, label %5, !dbg !14634

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !14635
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !14635
  unreachable, !dbg !14635

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !14621
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14637
  call void @llvm.dbg.value(metadata i32 undef, metadata !14611, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14613
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14638
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14641
  %8 = icmp sgt i32 %0, 0, !dbg !14642
  %9 = icmp sgt i32 %7, 2, !dbg !14644
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14644
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14644
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14645
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14646
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14647
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !14654
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !14654
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14656
  br i1 %12, label %14, label %13, !dbg !14659

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14660
  unreachable, !dbg !14660

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14623
  call void @llvm.dbg.value(metadata i32 %15, metadata !14626, metadata !DIExpression()) #23, !dbg !14630
  call void @llvm.dbg.value(metadata i32 %15, metadata !14620, metadata !DIExpression()) #23, !dbg !14621
  call void @llvm.dbg.value(metadata i32 %15, metadata !14611, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !14654
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !14665
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14667, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !14605, metadata !DIExpression()), !dbg !14613
  call void @llvm.dbg.value(metadata i32 undef, metadata !14605, metadata !DIExpression()), !dbg !14613
  ret void, !dbg !14669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14672, metadata !DIExpression()), !dbg !14673
  call void @llvm.dbg.value(metadata i32 %0, metadata !14674, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14689
  call void @llvm.dbg.value(metadata i32 1000, metadata !14677, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i32 10000, metadata !14678, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i8 1, metadata !14679, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i1 true, metadata !14680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14689
  call void @llvm.dbg.value(metadata i1 true, metadata !14681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14689
  call void @llvm.dbg.value(metadata i8 0, metadata !14682, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i1 true, metadata !14683, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14689
  call void @llvm.dbg.value(metadata i1 false, metadata !14684, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14689
  call void @llvm.dbg.value(metadata i64 0, metadata !14685, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.value(metadata i64 0, metadata !14685, metadata !DIExpression()), !dbg !14689
  %2 = mul i32 %0, 10, !dbg !14691
  ret i32 %2, !dbg !14697
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14700, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !14703
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14705, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !14707
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !14707
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !14703
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14708
  br i1 %3, label %5, label %4, !dbg !14709

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !14710
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14710
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !14710
  unreachable, !dbg !14710

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14705
  call void @llvm.dbg.value(metadata i32 %6, metadata !14626, metadata !DIExpression()) #23, !dbg !14707
  call void @llvm.dbg.value(metadata i32 %6, metadata !14620, metadata !DIExpression()) #23, !dbg !14703
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14711
  call void @llvm.dbg.value(metadata i32 %6, metadata !14701, metadata !DIExpression()), !dbg !14702
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14712
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14714
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14715
  br i1 %9, label %10, label %14, !dbg !14716

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14717
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !14719
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !14719
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14721
  br i1 %11, label %13, label %12, !dbg !14722

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14723
  unreachable, !dbg !14723

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14648, metadata !DIExpression()) #23, !dbg !14719
  call void @llvm.dbg.value(metadata i32 %6, metadata !14662, metadata !DIExpression()) #23, !dbg !14724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14726, !srcloc !14668
  br label %33, !dbg !14727

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14728
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14729
  %16 = icmp eq i32 %15, 0, !dbg !14729
  br i1 %16, label %27, label %17, !dbg !14731

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14732
  br i1 %18, label %19, label %27, !dbg !14733

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14734
  %21 = icmp sgt i32 %20, %0, !dbg !14737
  br i1 %21, label %25, label %22, !dbg !14738

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14739
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14739
  call void @llvm.dbg.value(metadata i32 %24, metadata !14701, metadata !DIExpression()), !dbg !14702
  br label %28, !dbg !14741

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14742
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14742
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14744
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14702
  call void @llvm.dbg.value(metadata i32 %29, metadata !14701, metadata !DIExpression()), !dbg !14702
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !14746
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !14746
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14748
  br i1 %30, label %32, label %31, !dbg !14749

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14750
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14750
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !14750
  unreachable, !dbg !14750

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14648, metadata !DIExpression()) #23, !dbg !14746
  call void @llvm.dbg.value(metadata i32 %29, metadata !14662, metadata !DIExpression()) #23, !dbg !14751
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14753, !srcloc !14668
  br label %33, !dbg !14754

33:                                               ; preds = %32, %13
  ret void, !dbg !14754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14755 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14759, metadata !DIExpression()), !dbg !14761
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14762
  %3 = icmp eq i32 %2, 0, !dbg !14762
  br i1 %3, label %16, label %4, !dbg !14763

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14764
  br i1 %5, label %16, label %6, !dbg !14765

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14766
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14766
  %9 = load i8, i8* %8, align 2, !dbg !14766
  %10 = sext i8 %9 to i32, !dbg !14767
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14768
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #24, !dbg !14769
  br i1 %12, label %16, label %13, !dbg !14770

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14771
  %15 = xor i1 %14, true, !dbg !14772
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14761
  call void @llvm.dbg.value(metadata i1 %17, metadata !14760, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14761
  ret i1 %17, !dbg !14773
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14774 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14778, metadata !DIExpression()), !dbg !14780
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14781
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14779, metadata !DIExpression()), !dbg !14780
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14782
  br i1 %3, label %5, label %4, !dbg !14784

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14785
  br label %5, !dbg !14787

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14778, metadata !DIExpression()), !dbg !14780
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14788
  ret i32 %6, !dbg !14789
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14790 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14792, metadata !DIExpression()), !dbg !14794
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14795
  %3 = load i8, i8* %2, align 1, !dbg !14795
  call void @llvm.dbg.value(metadata i8 %3, metadata !14793, metadata !DIExpression()), !dbg !14794
  %4 = and i8 %3, 31, !dbg !14796
  %5 = icmp ne i8 %4, 0, !dbg !14797
  ret i1 %5, !dbg !14798
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14799 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14801, metadata !DIExpression()), !dbg !14802
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14803
  br i1 %2, label %3, label %7, !dbg !14805

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14806, metadata !DIExpression()) #23, !dbg !14809
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14812
  %5 = load i8, i8* %4, align 1, !dbg !14813
  %6 = and i8 %5, 127, !dbg !14813
  store i8 %6, i8* %4, align 1, !dbg !14813
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14814, metadata !DIExpression()) #23, !dbg !14817
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14821
  br label %7, !dbg !14822

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()) #23, !dbg !14826
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14828
  %9 = load i8, i8* %8, align 1, !dbg !14829
  %10 = or i8 %9, -128, !dbg !14829
  store i8 %10, i8* %8, align 1, !dbg !14829
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14830, metadata !DIExpression()) #23, !dbg !14833
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14837, metadata !DIExpression()) #23, !dbg !14845
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14843, metadata !DIExpression()) #23, !dbg !14845
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14847
  br i1 %11, label %12, label %13, !dbg !14850

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !14851
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !14851
  unreachable, !dbg !14851

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14853
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14844, metadata !DIExpression()) #23, !dbg !14845
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14855
  br i1 %15, label %26, label %16, !dbg !14853

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14844, metadata !DIExpression()) #23, !dbg !14845
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14857
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14844, metadata !DIExpression()) #23, !dbg !14845
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14858
  %20 = icmp sgt i32 %19, 0, !dbg !14861
  br i1 %20, label %21, label %23, !dbg !14862

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14863
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14865
  br label %28, !dbg !14866

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14855
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14844, metadata !DIExpression()) #23, !dbg !14845
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14855
  br i1 %25, label %26, label %16, !dbg !14853, !llvm.loop !14867

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14869
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14870
  br label %28, !dbg !14871

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14872
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14873
  %31 = zext i1 %30 to i32, !dbg !14873
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14874
  ret void, !dbg !14875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14876 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14878, metadata !DIExpression()), !dbg !14879
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14880
  ret i1 %2, !dbg !14881
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14882 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14884, metadata !DIExpression()), !dbg !14886
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14885, metadata !DIExpression()), !dbg !14886
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14887
  br i1 %3, label %4, label %5, !dbg !14890

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14891
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14891
  unreachable, !dbg !14891

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14893
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14894
  ret void, !dbg !14895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14896 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14898, metadata !DIExpression()), !dbg !14899
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14900
  ret i1 %2, !dbg !14901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14902 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14906, metadata !DIExpression()), !dbg !14907
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14908
  br i1 %2, label %6, label %3, !dbg !14908

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14909
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14909
  br label %6, !dbg !14908

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14908
  ret %struct._dnode* %7, !dbg !14910
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14911 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14915, metadata !DIExpression()), !dbg !14919
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14916, metadata !DIExpression()), !dbg !14919
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14920
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14920
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14917, metadata !DIExpression()), !dbg !14919
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14921
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14922
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14923
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14924
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14925
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14926
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14927
  ret void, !dbg !14928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14929 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14933, metadata !DIExpression()), !dbg !14935
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14934, metadata !DIExpression()), !dbg !14935
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14936
  br i1 %3, label %6, label %4, !dbg !14937

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14938
  br label %6, !dbg !14937

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14937
  ret %struct._dnode* %7, !dbg !14939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14940 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14944, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14945, metadata !DIExpression()), !dbg !14947
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14948
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14948
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14946, metadata !DIExpression()), !dbg !14947
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14949
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14950
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14951
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14952
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14953
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14954
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14955
  ret void, !dbg !14956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14959, metadata !DIExpression()), !dbg !14961
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14962
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14969, metadata !DIExpression()) #23, !dbg !14971
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14972
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14973
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14973
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14960, metadata !DIExpression()), !dbg !14961
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14974, metadata !DIExpression()) #23, !dbg !14980
  call void @llvm.dbg.value(metadata i32 %0, metadata !14979, metadata !DIExpression()) #23, !dbg !14980
  %6 = icmp eq i32 %0, 0, !dbg !14983
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14985
  br i1 %6, label %8, label %18, !dbg !14986

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14987
  br i1 %9, label %10, label %11, !dbg !14990

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.307, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 137) #25, !dbg !14991
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !14991
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 137) #25, !dbg !14991
  unreachable, !dbg !14991

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14993
  br i1 %12, label %18, label %13, !dbg !14995

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14996
  br i1 %14, label %18, label %15, !dbg !14998

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14999
  %17 = icmp eq i32 %16, 0, !dbg !14999
  br i1 %17, label %21, label %18, !dbg !15001

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !15002
  br i1 %19, label %21, label %20, !dbg !15005

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !15006
  br label %21, !dbg !15008

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14985
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14985
  ret void, !dbg !15009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !15010 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15014, metadata !DIExpression()), !dbg !15017
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15015, metadata !DIExpression()), !dbg !15017
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #24, !dbg !15018
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15016, metadata !DIExpression()), !dbg !15017
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15015, metadata !DIExpression()), !dbg !15017
  ret %struct.k_thread* %3, !dbg !15019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15020 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15022, metadata !DIExpression()), !dbg !15023
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15024
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !15025
  %4 = xor i1 %3, true, !dbg !15026
  ret i1 %4, !dbg !15027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15030, metadata !DIExpression()), !dbg !15031
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !15032
  %3 = load i16, i16* %2, align 2, !dbg !15032
  %4 = icmp ult i16 %3, 128, !dbg !15033
  %5 = zext i1 %4 to i32, !dbg !15033
  ret i32 %5, !dbg !15034
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15035 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15041, metadata !DIExpression()), !dbg !15042
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15043
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !15044
  %4 = xor i1 %3, true, !dbg !15045
  ret i1 %4, !dbg !15046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15047 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15053, metadata !DIExpression()), !dbg !15054
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15055
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15055
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15056
  ret i1 %4, !dbg !15057
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15058 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15060, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15061, metadata !DIExpression()), !dbg !15062
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15063
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15063
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15064
  br i1 %5, label %9, label %6, !dbg !15065

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15066
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15066
  br label %9, !dbg !15065

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15065
  ret %struct._dnode* %10, !dbg !15067
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15068 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15072, metadata !DIExpression()), !dbg !15073
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15074
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15074
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15075
  ret i1 %4, !dbg !15076
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !15077 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15081, metadata !DIExpression()), !dbg !15084
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15085
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15085
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15082, metadata !DIExpression()), !dbg !15084
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15086
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15086
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15083, metadata !DIExpression()), !dbg !15084
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15087
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15088
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15089
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15090
  tail call fastcc void @sys_dnode_init.309(%struct._dnode* noundef %0) #24, !dbg !15091
  ret void, !dbg !15092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.309(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15093 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15095, metadata !DIExpression()), !dbg !15096
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15097
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15098
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15099
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15100
  ret void, !dbg !15101
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !15102 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15106, metadata !DIExpression()), !dbg !15108
  call void @llvm.dbg.value(metadata i32 %1, metadata !15107, metadata !DIExpression()), !dbg !15108
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15109
  %4 = load i8, i8* %3, align 1, !dbg !15109
  %5 = zext i8 %4 to i32, !dbg !15110
  %6 = and i32 %5, %1, !dbg !15111
  %7 = icmp ne i32 %6, 0, !dbg !15112
  ret i1 %7, !dbg !15113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15118, metadata !DIExpression()), !dbg !15120
  call void @llvm.dbg.value(metadata i32 %1, metadata !15119, metadata !DIExpression()), !dbg !15120
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !15121
  ret i1 %3, !dbg !15122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !15123 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15125, metadata !DIExpression()), !dbg !15127
  call void @llvm.dbg.value(metadata i32 %1, metadata !15126, metadata !DIExpression()), !dbg !15127
  %3 = icmp slt i32 %0, %1, !dbg !15128
  ret i1 %3, !dbg !15129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15132, metadata !DIExpression()), !dbg !15136
  call void @llvm.dbg.value(metadata i32 0, metadata !15133, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15138
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15140, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15138
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15143
  br i1 %3, label %5, label %4, !dbg !15144

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15145
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15145
  unreachable, !dbg !15145

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15138
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !15135, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15133, metadata !DIExpression()), !dbg !15137
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15147
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15152
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15152
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15154
  br i1 %6, label %8, label %7, !dbg !15155

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15156
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15156
  unreachable, !dbg !15156

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15140
  call void @llvm.dbg.value(metadata i32 %9, metadata !14626, metadata !DIExpression()) #23, !dbg !15142
  call void @llvm.dbg.value(metadata i32 %9, metadata !14620, metadata !DIExpression()) #23, !dbg !15138
  call void @llvm.dbg.value(metadata i32 %9, metadata !15135, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15152
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !15157
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15159, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !15133, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.value(metadata i32 undef, metadata !15133, metadata !DIExpression()), !dbg !15137
  ret void, !dbg !15160
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15161 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15163, metadata !DIExpression()), !dbg !15164
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15165
  br i1 %2, label %27, label %3, !dbg !15167

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15168
  br i1 %4, label %5, label %27, !dbg !15169

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()) #23, !dbg !15170
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15173
  %7 = load i8, i8* %6, align 1, !dbg !15174
  %8 = or i8 %7, -128, !dbg !15174
  store i8 %8, i8* %6, align 1, !dbg !15174
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14830, metadata !DIExpression()) #23, !dbg !15175
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14837, metadata !DIExpression()) #23, !dbg !15177
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14843, metadata !DIExpression()) #23, !dbg !15177
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15179
  br i1 %9, label %10, label %11, !dbg !15180

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15181
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15181
  unreachable, !dbg !15181

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15182
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14844, metadata !DIExpression()) #23, !dbg !15177
  %13 = icmp eq %struct._dnode* %12, null, !dbg !15183
  br i1 %13, label %24, label %14, !dbg !15182

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14844, metadata !DIExpression()) #23, !dbg !15177
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !15184
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14844, metadata !DIExpression()) #23, !dbg !15177
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !15185
  %18 = icmp sgt i32 %17, 0, !dbg !15186
  br i1 %18, label %19, label %21, !dbg !15187

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15188
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !15189
  br label %26, !dbg !15190

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !15183
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14844, metadata !DIExpression()) #23, !dbg !15177
  %23 = icmp eq %struct._dnode* %22, null, !dbg !15183
  br i1 %23, label %24, label %14, !dbg !15182, !llvm.loop !15191

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15193
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !15194
  br label %26, !dbg !15195

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15196
  br label %27, !dbg !15197

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !15198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15199 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15201, metadata !DIExpression()), !dbg !15202
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !15203
  br i1 %2, label %6, label %3, !dbg !15204

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !15205
  %5 = xor i1 %4, true, !dbg !15204
  br label %6, !dbg !15204

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !15206
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15207 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15209, metadata !DIExpression()), !dbg !15213
  call void @llvm.dbg.value(metadata i32 0, metadata !15210, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15215
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15217, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15219
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15219
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15215
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15220
  br i1 %3, label %5, label %4, !dbg !15221

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15222
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15222
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15222
  unreachable, !dbg !15222

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15219
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15215
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15223
  call void @llvm.dbg.value(metadata i32 undef, metadata !15212, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata i32 undef, metadata !15210, metadata !DIExpression()), !dbg !15214
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !15224
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15227
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15229
  br i1 %6, label %8, label %7, !dbg !15230

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15231
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15231
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15231
  unreachable, !dbg !15231

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15217
  call void @llvm.dbg.value(metadata i32 %9, metadata !14626, metadata !DIExpression()) #23, !dbg !15219
  call void @llvm.dbg.value(metadata i32 %9, metadata !14620, metadata !DIExpression()) #23, !dbg !15215
  call void @llvm.dbg.value(metadata i32 %9, metadata !15212, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15227
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !15232
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15234, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !15210, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata i32 undef, metadata !15210, metadata !DIExpression()), !dbg !15214
  ret void, !dbg !15235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15236 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15238, metadata !DIExpression()), !dbg !15240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15241
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15243, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15245
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15245
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15241
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15246
  br i1 %3, label %5, label %4, !dbg !15247

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15248
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15248
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15248
  unreachable, !dbg !15248

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15243
  call void @llvm.dbg.value(metadata i32 %6, metadata !14626, metadata !DIExpression()) #23, !dbg !15245
  call void @llvm.dbg.value(metadata i32 %6, metadata !14620, metadata !DIExpression()) #23, !dbg !15241
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15249
  call void @llvm.dbg.value(metadata i32 %6, metadata !15239, metadata !DIExpression()), !dbg !15240
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !15250
  br i1 %7, label %8, label %12, !dbg !15252

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15253
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15256
  br i1 %9, label %11, label %10, !dbg !15257

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15258
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15258
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15258
  unreachable, !dbg !15258

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14648, metadata !DIExpression()) #23, !dbg !15253
  call void @llvm.dbg.value(metadata i32 %6, metadata !14662, metadata !DIExpression()) #23, !dbg !15259
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15261, !srcloc !14668
  br label %14, !dbg !15262

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.314(%struct.k_thread* noundef %0) #24, !dbg !15263
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15264
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15265
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15265
  br label %14, !dbg !15266

14:                                               ; preds = %12, %11
  ret void, !dbg !15266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15267 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15269, metadata !DIExpression()), !dbg !15270
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15271
  %3 = load i8, i8* %2, align 1, !dbg !15271
  %4 = and i8 %3, 4, !dbg !15272
  %5 = icmp eq i8 %4, 0, !dbg !15273
  ret i1 %5, !dbg !15274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.314(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15275 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15277, metadata !DIExpression()), !dbg !15278
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15279
  %3 = load i8, i8* %2, align 1, !dbg !15280
  %4 = and i8 %3, -5, !dbg !15280
  store i8 %4, i8* %2, align 1, !dbg !15280
  ret void, !dbg !15281
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !15282 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !15285, metadata !DIExpression()), !dbg !15286
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15284, metadata !DIExpression()), !dbg !15286
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !15287
  br i1 %4, label %5, label %12, !dbg !15289

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !15290
  br i1 %6, label %7, label %12, !dbg !15291

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !15292, metadata !DIExpression()) #23, !dbg !15298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15297, metadata !DIExpression()) #23, !dbg !15298
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15301, metadata !DIExpression()) #23, !dbg !15306
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15308
  br i1 %8, label %10, label %9, !dbg !15311

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15312
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15312
  unreachable, !dbg !15312

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !15292, metadata !DIExpression()) #23, !dbg !15298
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !15314
  br label %16, !dbg !15315

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14653, metadata !DIExpression()) #23, !dbg !15316
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15319
  br i1 %13, label %15, label %14, !dbg !15320

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15321
  unreachable, !dbg !15321

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14648, metadata !DIExpression()) #23, !dbg !15316
  call void @llvm.dbg.value(metadata i32 %3, metadata !14662, metadata !DIExpression()) #23, !dbg !15322
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !15324, !srcloc !14668
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !15325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !15326 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15330, metadata !DIExpression()), !dbg !15331
  call void @llvm.dbg.value(metadata i32 %0, metadata !15332, metadata !DIExpression()), !dbg !15337
  %2 = icmp eq i32 %0, 0, !dbg !15339
  br i1 %2, label %3, label %6, !dbg !15340

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15341, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %4, metadata !15344, metadata !DIExpression()) #23, !dbg !15349
  %5 = icmp eq i32 %4, 0, !dbg !15350
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !15331
  ret i1 %7, !dbg !15351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !15352 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15355
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15354, metadata !DIExpression()), !dbg !15356
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15357
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !15358
  ret i1 %3, !dbg !15359
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !15360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15362, metadata !DIExpression()), !dbg !15364
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !15365
  call void @llvm.dbg.value(metadata i32 %2, metadata !15363, metadata !DIExpression()), !dbg !15364
  ret i32 %2, !dbg !15366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15367 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15369, metadata !DIExpression()), !dbg !15373
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15374
  call void @llvm.dbg.value(metadata i32 0, metadata !15370, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15376
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15378, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15380
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15380
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15376
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15381
  br i1 %4, label %6, label %5, !dbg !15382

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15383
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15383
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15383
  unreachable, !dbg !15383

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !15378
  call void @llvm.dbg.value(metadata i32 %7, metadata !14626, metadata !DIExpression()) #23, !dbg !15380
  call void @llvm.dbg.value(metadata i32 %7, metadata !14620, metadata !DIExpression()) #23, !dbg !15376
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15384
  call void @llvm.dbg.value(metadata i32 %7, metadata !15372, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()), !dbg !15375
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15385
  br i1 %8, label %9, label %13, !dbg !15389

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14806, metadata !DIExpression()) #23, !dbg !15390
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15393
  %11 = load i8, i8* %10, align 1, !dbg !15394
  %12 = and i8 %11, 127, !dbg !15394
  store i8 %12, i8* %10, align 1, !dbg !15394
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14814, metadata !DIExpression()) #23, !dbg !15395
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15397
  br label %13, !dbg !15398

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !15399
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15400
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !15401
  %16 = zext i1 %15 to i32, !dbg !15401
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !15402
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15403
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15403
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15405
  br i1 %17, label %19, label %18, !dbg !15406

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15407
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15407
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15407
  unreachable, !dbg !15407

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14648, metadata !DIExpression()) #23, !dbg !15403
  call void @llvm.dbg.value(metadata i32 %7, metadata !14662, metadata !DIExpression()) #23, !dbg !15408
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !15410, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !15370, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !15370, metadata !DIExpression()), !dbg !15375
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15411
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !15413
  br i1 %21, label %22, label %23, !dbg !15414

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15415
  br label %23, !dbg !15417

23:                                               ; preds = %22, %19
  ret void, !dbg !15418
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15419 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15421, metadata !DIExpression()), !dbg !15422
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15423
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !15424
  ret i32 %3, !dbg !15425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15426 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15428, metadata !DIExpression()), !dbg !15429
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15430
  %3 = load i8, i8* %2, align 1, !dbg !15431
  %4 = or i8 %3, 16, !dbg !15431
  store i8 %4, i8* %2, align 1, !dbg !15431
  ret void, !dbg !15432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15433 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15434, !srcloc !14629
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15434
  call void @llvm.dbg.value(metadata i32 %2, metadata !14626, metadata !DIExpression()) #23, !dbg !15436
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15436
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !15437
  ret void, !dbg !15438
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15439 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15441, metadata !DIExpression()), !dbg !15442
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !15443
  br i1 %2, label %3, label %5, !dbg !15445

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15446
  br label %6, !dbg !15448

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14662, metadata !DIExpression()) #23, !dbg !15449
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !15452, !srcloc !14668
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15453
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15454 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15456, metadata !DIExpression()), !dbg !15458
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15459
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15461, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15463
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15463
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15459
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15464
  br i1 %3, label %5, label %4, !dbg !15465

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15466
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15466
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15466
  unreachable, !dbg !15466

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !15461
  call void @llvm.dbg.value(metadata i32 %6, metadata !14626, metadata !DIExpression()) #23, !dbg !15463
  call void @llvm.dbg.value(metadata i32 %6, metadata !14620, metadata !DIExpression()) #23, !dbg !15459
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15467
  call void @llvm.dbg.value(metadata i32 %6, metadata !15457, metadata !DIExpression()), !dbg !15458
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !15468
  br i1 %7, label %12, label %8, !dbg !15470

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15471
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15474
  br i1 %9, label %11, label %10, !dbg !15475

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15476
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15476
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15476
  unreachable, !dbg !15476

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14648, metadata !DIExpression()) #23, !dbg !15471
  call void @llvm.dbg.value(metadata i32 %6, metadata !14662, metadata !DIExpression()) #23, !dbg !15477
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !15479, !srcloc !14668
  br label %14, !dbg !15480

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !15481
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !15482
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !15483
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !15483
  br label %14, !dbg !15484

14:                                               ; preds = %12, %11
  ret void, !dbg !15484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15487, metadata !DIExpression()), !dbg !15488
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15489
  %3 = load i8, i8* %2, align 1, !dbg !15489
  %4 = and i8 %3, 16, !dbg !15490
  %5 = icmp ne i8 %4, 0, !dbg !15491
  ret i1 %5, !dbg !15492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15493 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15495, metadata !DIExpression()), !dbg !15496
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15497
  %3 = load i8, i8* %2, align 1, !dbg !15498
  %4 = and i8 %3, -17, !dbg !15498
  store i8 %4, i8* %2, align 1, !dbg !15498
  ret void, !dbg !15499
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15500 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15510, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15508, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15509, metadata !DIExpression()), !dbg !15514
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15515
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15515
  br i1 %5, label %9, label %6, !dbg !15515

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15515
  br i1 %7, label %9, label %8, !dbg !15518

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.315, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 773) #25, !dbg !15519
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 773) #25, !dbg !15519
  unreachable, !dbg !15519

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15511, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15522
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15524, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15522
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15527
  br i1 %11, label %13, label %12, !dbg !15528

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15529
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15529
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15529
  unreachable, !dbg !15529

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15526
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15522
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15530
  call void @llvm.dbg.value(metadata i32 undef, metadata !15513, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata i32 undef, metadata !15511, metadata !DIExpression()), !dbg !15521
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15531
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15534
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15534
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15536
  br i1 %14, label %16, label %15, !dbg !15537

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15538
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15538
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15538
  unreachable, !dbg !15538

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15524
  call void @llvm.dbg.value(metadata i32 %17, metadata !14626, metadata !DIExpression()) #23, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %17, metadata !14620, metadata !DIExpression()) #23, !dbg !15522
  call void @llvm.dbg.value(metadata i32 %17, metadata !15513, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15534
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !15539
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15541, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !15511, metadata !DIExpression()), !dbg !15521
  call void @llvm.dbg.value(metadata i32 undef, metadata !15511, metadata !DIExpression()), !dbg !15521
  ret void, !dbg !15542
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15543 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15545, metadata !DIExpression()), !dbg !15546
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15547
  %3 = load i8, i8* %2, align 1, !dbg !15547
  %4 = and i8 %3, 1, !dbg !15548
  %5 = icmp ne i8 %4, 0, !dbg !15549
  ret i1 %5, !dbg !15550
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15551 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15555, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15553, metadata !DIExpression()), !dbg !15556
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15554, metadata !DIExpression()), !dbg !15556
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #24, !dbg !15557
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15558
  ret void, !dbg !15559
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !15560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15564, metadata !DIExpression()), !dbg !15566
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15565, metadata !DIExpression()), !dbg !15566
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15567
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15568
  %3 = icmp eq %union.anon* %1, null, !dbg !15569
  br i1 %3, label %24, label %4, !dbg !15571

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15572
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !15574
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !15575
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14837, metadata !DIExpression()) #23, !dbg !15576
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14843, metadata !DIExpression()) #23, !dbg !15576
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15578
  br i1 %7, label %8, label %9, !dbg !15579

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15580
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15580
  unreachable, !dbg !15580

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #25, !dbg !15581
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14844, metadata !DIExpression()) #23, !dbg !15576
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15582
  br i1 %11, label %22, label %12, !dbg !15581

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14844, metadata !DIExpression()) #23, !dbg !15576
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15583
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14844, metadata !DIExpression()) #23, !dbg !15576
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !15584
  %16 = icmp sgt i32 %15, 0, !dbg !15585
  br i1 %16, label %17, label %19, !dbg !15586

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15587
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !15588
  br label %24, !dbg !15589

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !15582
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14844, metadata !DIExpression()) #23, !dbg !15576
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15582
  br i1 %21, label %22, label %12, !dbg !15581, !llvm.loop !15590

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15592
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !15593
  br label %24, !dbg !15594

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15595
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15596 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15601, metadata !DIExpression()), !dbg !15602
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15600, metadata !DIExpression()), !dbg !15602
  %4 = icmp eq i64 %3, -1, !dbg !15603
  br i1 %4, label %6, label %5, !dbg !15605

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.316(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15606
  br label %6, !dbg !15608

6:                                                ; preds = %5, %2
  ret void, !dbg !15609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.316(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15610 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15613, metadata !DIExpression()), !dbg !15614
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15612, metadata !DIExpression()), !dbg !15614
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15615
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15616
  ret void, !dbg !15617
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15618 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15620, metadata !DIExpression()), !dbg !15628
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15629
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15629
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15621, metadata !DIExpression()), !dbg !15628
  call void @llvm.dbg.value(metadata i32 0, metadata !15622, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15631
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15633, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15631
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15636
  br i1 %5, label %7, label %6, !dbg !15637

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15638
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15638
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15638
  unreachable, !dbg !15638

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15631
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15639
  call void @llvm.dbg.value(metadata i32 undef, metadata !15624, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 undef, metadata !15622, metadata !DIExpression()), !dbg !15630
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15640
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15641
  %10 = load i8, i8* %9, align 1, !dbg !15641
  %11 = and i8 %10, 40, !dbg !15642
  %12 = icmp eq i8 %11, 0, !dbg !15642
  call void @llvm.dbg.value(metadata i1 %12, metadata !15625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15643
  br i1 %12, label %13, label %20, !dbg !15644

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15645
  %15 = bitcast void (%struct._timeout*)** %14 to %union.anon**, !dbg !15645
  %16 = load %union.anon*, %union.anon** %15, align 8, !dbg !15645
  %17 = icmp eq %union.anon* %16, null, !dbg !15649
  br i1 %17, label %19, label %18, !dbg !15650

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15651
  br label %19, !dbg !15653

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.314(%struct.k_thread* noundef nonnull %3) #24, !dbg !15654
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15655
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15656
  br label %20, !dbg !15657

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15658
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15660
  br i1 %21, label %23, label %22, !dbg !15661

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15662
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15662
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15662
  unreachable, !dbg !15662

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15633
  call void @llvm.dbg.value(metadata i32 %24, metadata !14626, metadata !DIExpression()) #23, !dbg !15635
  call void @llvm.dbg.value(metadata i32 %24, metadata !14620, metadata !DIExpression()) #23, !dbg !15631
  call void @llvm.dbg.value(metadata i32 %24, metadata !15624, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15658
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !15663
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15665, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !15622, metadata !DIExpression()), !dbg !15630
  call void @llvm.dbg.value(metadata i32 undef, metadata !15622, metadata !DIExpression()), !dbg !15630
  ret void, !dbg !15666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15667 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15669, metadata !DIExpression()), !dbg !15670
  %2 = tail call fastcc %union.anon* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15671
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15672
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15673
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15674
  store %union.anon* null, %union.anon** %3, align 8, !dbg !15675
  ret void, !dbg !15676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %union.anon* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15677 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15681, metadata !DIExpression()), !dbg !15682
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15683
  %3 = load %union.anon*, %union.anon** %2, align 8, !dbg !15683
  %4 = icmp eq %union.anon* %3, null, !dbg !15683
  br i1 %4, label %5, label %6, !dbg !15686

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.319, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 726) #25, !dbg !15687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 726) #25, !dbg !15687
  unreachable, !dbg !15687

6:                                                ; preds = %1
  ret %union.anon* %3, !dbg !15689
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15690 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15692, metadata !DIExpression()), !dbg !15693
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15694
  %3 = load i8, i8* %2, align 1, !dbg !15695
  %4 = and i8 %3, -3, !dbg !15695
  store i8 %4, i8* %2, align 1, !dbg !15695
  ret void, !dbg !15696
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15697 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15699, metadata !DIExpression()), !dbg !15700
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15701
  br i1 %2, label %3, label %7, !dbg !15703

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14806, metadata !DIExpression()) #23, !dbg !15704
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15707
  %5 = load i8, i8* %4, align 1, !dbg !15708
  %6 = and i8 %5, 127, !dbg !15708
  store i8 %6, i8* %4, align 1, !dbg !15708
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14814, metadata !DIExpression()) #23, !dbg !15709
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15711
  br label %7, !dbg !15712

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15713
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15714
  %10 = zext i1 %9 to i32, !dbg !15714
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15715
  ret void, !dbg !15716
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15717 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15719, metadata !DIExpression()), !dbg !15720
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15721
  %3 = load i8, i8* %2, align 1, !dbg !15722
  %4 = or i8 %3, 2, !dbg !15722
  store i8 %4, i8* %2, align 1, !dbg !15722
  ret void, !dbg !15723
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15724 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15726, metadata !DIExpression()), !dbg !15730
  call void @llvm.dbg.value(metadata i32 0, metadata !15727, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15732
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15734, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15732
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15737
  br i1 %3, label %5, label %4, !dbg !15738

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15739
  unreachable, !dbg !15739

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15732
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15740
  call void @llvm.dbg.value(metadata i32 undef, metadata !15729, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata i32 undef, metadata !15727, metadata !DIExpression()), !dbg !15731
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15741
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15744
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15746
  br i1 %6, label %8, label %7, !dbg !15747

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15748
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15748
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15748
  unreachable, !dbg !15748

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15734
  call void @llvm.dbg.value(metadata i32 %9, metadata !14626, metadata !DIExpression()) #23, !dbg !15736
  call void @llvm.dbg.value(metadata i32 %9, metadata !14620, metadata !DIExpression()) #23, !dbg !15732
  call void @llvm.dbg.value(metadata i32 %9, metadata !15729, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !15749
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15751, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !15727, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.value(metadata i32 undef, metadata !15727, metadata !DIExpression()), !dbg !15731
  ret void, !dbg !15752
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15753 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15759, metadata !DIExpression()), !dbg !15764
  call void @llvm.dbg.value(metadata i32 %0, metadata !15757, metadata !DIExpression()), !dbg !15764
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !15758, metadata !DIExpression()), !dbg !15764
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15765
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #24, !dbg !15766
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15767
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15768
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15769
  call void @llvm.dbg.value(metadata i32 %6, metadata !15760, metadata !DIExpression()), !dbg !15764
  call void @llvm.dbg.value(metadata i32 0, metadata !15761, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15771
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15773, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15771
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15776
  br i1 %8, label %10, label %9, !dbg !15777

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15778
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15778
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15778
  unreachable, !dbg !15778

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15771
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15779
  call void @llvm.dbg.value(metadata i32 undef, metadata !15763, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()), !dbg !15770
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15780
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15784
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15785
  br i1 %13, label %14, label %15, !dbg !15786

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15787
  br label %15, !dbg !15789

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15790
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15792
  br i1 %16, label %18, label %17, !dbg !15793

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15794
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15794
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15794
  unreachable, !dbg !15794

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15773
  call void @llvm.dbg.value(metadata i32 %19, metadata !14626, metadata !DIExpression()) #23, !dbg !15775
  call void @llvm.dbg.value(metadata i32 %19, metadata !14620, metadata !DIExpression()) #23, !dbg !15771
  call void @llvm.dbg.value(metadata i32 %19, metadata !15763, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15790
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !15795
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15797, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !15761, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.value(metadata i32 undef, metadata !15761, metadata !DIExpression()), !dbg !15770
  ret i32 %6, !dbg !15798
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15799 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15804, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata i64 undef, metadata !15806, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15803, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !15805, metadata !DIExpression()), !dbg !15807
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15808
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15809
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15810
  br i1 %6, label %7, label %8, !dbg !15813

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.320, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 846) #25, !dbg !15814
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 846) #25, !dbg !15814
  unreachable, !dbg !15814

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15816
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15818, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15816
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15821
  br i1 %10, label %12, label %11, !dbg !15822

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15823
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15823
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15823
  unreachable, !dbg !15823

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15820
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15816
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15824
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15825
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !15826
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15301, metadata !DIExpression()) #23, !dbg !15827
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15829
  br i1 %14, label %16, label %15, !dbg !15830

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15831
  unreachable, !dbg !15831

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !15292, metadata !DIExpression()) #23, !dbg !15832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15297, metadata !DIExpression()) #23, !dbg !15832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15301, metadata !DIExpression()) #23, !dbg !15834
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15836
  br i1 %17, label %19, label %18, !dbg !15837

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15838
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15838
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !15838
  unreachable, !dbg !15838

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !15292, metadata !DIExpression()) #23, !dbg !15832
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15839
  ret i32 %21, !dbg !15840
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15841 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15845, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15846, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata i32 0, metadata !15847, metadata !DIExpression()), !dbg !15851
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15852
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15854, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15852
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15857
  br i1 %3, label %5, label %4, !dbg !15858

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15859
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15859
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15859
  unreachable, !dbg !15859

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15852
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15860
  call void @llvm.dbg.value(metadata i32 undef, metadata !15849, metadata !DIExpression()), !dbg !15851
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15846, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()), !dbg !15851
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15861
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15846, metadata !DIExpression()), !dbg !15850
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15864
  br i1 %8, label %10, label %9, !dbg !15866

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15867
  br label %10, !dbg !15869

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15870
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15870
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15872
  br i1 %11, label %13, label %12, !dbg !15873

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15874
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15874
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15874
  unreachable, !dbg !15874

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15854
  call void @llvm.dbg.value(metadata i32 %14, metadata !14626, metadata !DIExpression()) #23, !dbg !15856
  call void @llvm.dbg.value(metadata i32 %14, metadata !14620, metadata !DIExpression()) #23, !dbg !15852
  call void @llvm.dbg.value(metadata i32 %14, metadata !15849, metadata !DIExpression()), !dbg !15851
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15870
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !15875
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15877, !srcloc !14668
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15846, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.value(metadata i32 undef, metadata !15847, metadata !DIExpression()), !dbg !15851
  ret %struct.k_thread* %7, !dbg !15878
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !15879 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15881, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15882, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.value(metadata i32 0, metadata !15883, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15888
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15890, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15888
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15893
  br i1 %3, label %5, label %4, !dbg !15894

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15895
  unreachable, !dbg !15895

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15892
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15888
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15896
  call void @llvm.dbg.value(metadata i32 undef, metadata !15885, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15882, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.value(metadata i32 undef, metadata !15883, metadata !DIExpression()), !dbg !15887
  %6 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15897
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15882, metadata !DIExpression()), !dbg !15886
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15900
  br i1 %8, label %11, label %9, !dbg !15902

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15903
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15905
  br label %11, !dbg !15906

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15907
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15909
  br i1 %12, label %14, label %13, !dbg !15910

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15911
  unreachable, !dbg !15911

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15890
  call void @llvm.dbg.value(metadata i32 %15, metadata !14626, metadata !DIExpression()) #23, !dbg !15892
  call void @llvm.dbg.value(metadata i32 %15, metadata !14620, metadata !DIExpression()) #23, !dbg !15888
  call void @llvm.dbg.value(metadata i32 %15, metadata !15885, metadata !DIExpression()), !dbg !15887
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15907
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !15912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15914, !srcloc !14668
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15882, metadata !DIExpression()), !dbg !15886
  call void @llvm.dbg.value(metadata i32 undef, metadata !15883, metadata !DIExpression()), !dbg !15887
  ret %struct.k_thread* %7, !dbg !15915
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15916 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15918, metadata !DIExpression()), !dbg !15919
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15726, metadata !DIExpression()) #23, !dbg !15920
  call void @llvm.dbg.value(metadata i32 0, metadata !15727, metadata !DIExpression()) #23, !dbg !15922
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15923
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15925, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15927
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15927
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15923
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15928
  br i1 %3, label %5, label %4, !dbg !15929

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15930
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15930
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15930
  unreachable, !dbg !15930

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15927
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15923
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15931
  call void @llvm.dbg.value(metadata i32 undef, metadata !15729, metadata !DIExpression()) #23, !dbg !15922
  call void @llvm.dbg.value(metadata i32 undef, metadata !15727, metadata !DIExpression()) #23, !dbg !15922
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15932
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15933
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !15933
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15935
  br i1 %6, label %8, label %7, !dbg !15936

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15937
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15937
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !15937
  unreachable, !dbg !15937

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15925
  call void @llvm.dbg.value(metadata i32 %9, metadata !14626, metadata !DIExpression()) #23, !dbg !15927
  call void @llvm.dbg.value(metadata i32 %9, metadata !14620, metadata !DIExpression()) #23, !dbg !15923
  call void @llvm.dbg.value(metadata i32 %9, metadata !15729, metadata !DIExpression()) #23, !dbg !15922
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !15933
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !15938
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15940, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !15727, metadata !DIExpression()) #23, !dbg !15922
  call void @llvm.dbg.value(metadata i32 undef, metadata !15727, metadata !DIExpression()) #23, !dbg !15922
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15941
  ret void, !dbg !15942
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15943 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15945, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 %1, metadata !15946, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i8 0, metadata !15947, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 0, metadata !15948, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !15953
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15955, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15957
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !15957
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15953
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15958
  br i1 %4, label %6, label %5, !dbg !15959

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15960
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15960
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !15960
  unreachable, !dbg !15960

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !15957
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !15953
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15961
  call void @llvm.dbg.value(metadata i32 undef, metadata !15950, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i8 poison, metadata !15947, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15948, metadata !DIExpression()), !dbg !15952
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15962
  call void @llvm.dbg.value(metadata i1 %9, metadata !15947, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15951
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15965

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14806, metadata !DIExpression()) #23, !dbg !15966
  %14 = load i8, i8* %7, align 1, !dbg !15972
  %15 = and i8 %14, 127, !dbg !15972
  store i8 %15, i8* %7, align 1, !dbg !15972
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14814, metadata !DIExpression()) #23, !dbg !15973
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15975
  store i8 %12, i8* %11, align 2, !dbg !15976
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()) #23, !dbg !15977
  %16 = load i8, i8* %7, align 1, !dbg !15979
  %17 = or i8 %16, -128, !dbg !15979
  store i8 %17, i8* %7, align 1, !dbg !15979
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14830, metadata !DIExpression()) #23, !dbg !15980
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14837, metadata !DIExpression()) #23, !dbg !15982
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14843, metadata !DIExpression()) #23, !dbg !15982
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15984
  br i1 %18, label %19, label %20, !dbg !15985

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !15986
  unreachable, !dbg !15986

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15987
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14844, metadata !DIExpression()) #23, !dbg !15982
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15988
  br i1 %22, label %32, label %23, !dbg !15987

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14844, metadata !DIExpression()) #23, !dbg !15982
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15989
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14844, metadata !DIExpression()) #23, !dbg !15982
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15990
  %27 = icmp sgt i32 %26, 0, !dbg !15991
  br i1 %27, label %28, label %29, !dbg !15992

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15993
  br label %33, !dbg !15994

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15988
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14844, metadata !DIExpression()) #23, !dbg !15982
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15988
  br i1 %31, label %32, label %23, !dbg !15987, !llvm.loop !15995

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15997
  br label %33, !dbg !15998

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15999
  br label %35, !dbg !16000

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !16001
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16003
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !16003
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16005
  br i1 %36, label %38, label %37, !dbg !16006

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16007
  unreachable, !dbg !16007

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15955
  call void @llvm.dbg.value(metadata i32 %39, metadata !14626, metadata !DIExpression()) #23, !dbg !15957
  call void @llvm.dbg.value(metadata i32 %39, metadata !14620, metadata !DIExpression()) #23, !dbg !15953
  call void @llvm.dbg.value(metadata i32 %39, metadata !15950, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16003
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !16008
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !16010, !srcloc !14668
  call void @llvm.dbg.value(metadata i8 poison, metadata !15947, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.value(metadata i32 undef, metadata !15948, metadata !DIExpression()), !dbg !15952
  ret i1 %9, !dbg !16011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16016, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i32 %1, metadata !16017, metadata !DIExpression()), !dbg !16019
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16020
  call void @llvm.dbg.value(metadata i1 %3, metadata !16018, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16019
  br i1 %3, label %4, label %12, !dbg !16021

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16023
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16024
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16024
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16024
  %9 = load i8, i8* %8, align 1, !dbg !16024
  %10 = icmp eq i8 %9, 0, !dbg !16025
  br i1 %10, label %11, label %12, !dbg !16026

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16027
  br label %12, !dbg !16029

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16030
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16031 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16033, metadata !DIExpression()), !dbg !16036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !16037
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16039, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16041
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !16041
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16037
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16042
  br i1 %2, label %4, label %3, !dbg !16043

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16044
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16044
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16044
  unreachable, !dbg !16044

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16041
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16037
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16045
  call void @llvm.dbg.value(metadata i32 undef, metadata !16035, metadata !DIExpression()), !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !16033, metadata !DIExpression()), !dbg !16036
  tail call fastcc void @z_sched_lock() #24, !dbg !16046
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16049
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !16049
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16051
  br i1 %5, label %7, label %6, !dbg !16052

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16053
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16053
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16053
  unreachable, !dbg !16053

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !16039
  call void @llvm.dbg.value(metadata i32 %8, metadata !14626, metadata !DIExpression()) #23, !dbg !16041
  call void @llvm.dbg.value(metadata i32 %8, metadata !14620, metadata !DIExpression()) #23, !dbg !16037
  call void @llvm.dbg.value(metadata i32 %8, metadata !16035, metadata !DIExpression()), !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16049
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !16054
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !16056, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !16033, metadata !DIExpression()), !dbg !16036
  call void @llvm.dbg.value(metadata i32 undef, metadata !16033, metadata !DIExpression()), !dbg !16036
  ret void, !dbg !16057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16058 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16059, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %1, metadata !15344, metadata !DIExpression()) #23, !dbg !16064
  %2 = icmp eq i32 %1, 0, !dbg !16065
  br i1 %2, label %4, label %3, !dbg !16066

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.324, i32 0, i32 0), i32 noundef 253) #25, !dbg !16067
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16067
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.324, i32 0, i32 0), i32 noundef 253) #25, !dbg !16067
  unreachable, !dbg !16067

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16069
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16069
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16069
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16069
  %9 = load i8, i8* %8, align 1, !dbg !16069
  %10 = icmp eq i8 %9, 1, !dbg !16069
  br i1 %10, label %11, label %12, !dbg !16072

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.325, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.324, i32 0, i32 0), i32 noundef 254) #25, !dbg !16073
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16073
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.324, i32 0, i32 0), i32 noundef 254) #25, !dbg !16073
  unreachable, !dbg !16073

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !16075
  store i8 %13, i8* %8, align 1, !dbg !16075
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16076, !srcloc !16078
  ret void, !dbg !16079
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16080 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16082, metadata !DIExpression()), !dbg !16085
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !16086
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16088, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16090
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !16090
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16086
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16091
  br i1 %2, label %4, label %3, !dbg !16092

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16093
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16093
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16093
  unreachable, !dbg !16093

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16090
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16086
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16094
  call void @llvm.dbg.value(metadata i32 undef, metadata !16084, metadata !DIExpression()), !dbg !16085
  call void @llvm.dbg.value(metadata i32 undef, metadata !16082, metadata !DIExpression()), !dbg !16085
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16095
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16095
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16095
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16095
  %9 = load i8, i8* %8, align 1, !dbg !16095
  %10 = icmp eq i8 %9, 0, !dbg !16095
  br i1 %10, label %11, label %12, !dbg !16100

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.328, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 999) #25, !dbg !16101
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16101
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 999) #25, !dbg !16101
  unreachable, !dbg !16101

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16103, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %13, metadata !15344, metadata !DIExpression()) #23, !dbg !16108
  %14 = icmp eq i32 %13, 0, !dbg !16109
  br i1 %14, label %16, label %15, !dbg !16110

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16111
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16111
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1000) #25, !dbg !16111
  unreachable, !dbg !16111

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16113
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !16114
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !16114
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !16114
  %21 = load i8, i8* %20, align 1, !dbg !16115
  %22 = add i8 %21, 1, !dbg !16115
  store i8 %22, i8* %20, align 1, !dbg !16115
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !16116
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16117
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !16117
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16119
  br i1 %23, label %25, label %24, !dbg !16120

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16121
  unreachable, !dbg !16121

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !16088
  call void @llvm.dbg.value(metadata i32 %26, metadata !14626, metadata !DIExpression()) #23, !dbg !16090
  call void @llvm.dbg.value(metadata i32 %26, metadata !14620, metadata !DIExpression()) #23, !dbg !16086
  call void @llvm.dbg.value(metadata i32 %26, metadata !16084, metadata !DIExpression()), !dbg !16085
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16117
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !16122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !16124, !srcloc !14668
  call void @llvm.dbg.value(metadata i32 1, metadata !16082, metadata !DIExpression()), !dbg !16085
  call void @llvm.dbg.value(metadata i32 undef, metadata !16082, metadata !DIExpression()), !dbg !16085
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16125
  ret void, !dbg !16126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !16127 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16128
  ret %struct.k_thread* %1, !dbg !16129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !16130 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16134, metadata !DIExpression()), !dbg !16139
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16135, metadata !DIExpression()), !dbg !16139
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !16140
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16136, metadata !DIExpression()), !dbg !16139
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !16141
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16137, metadata !DIExpression()), !dbg !16139
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !16142
  call void @llvm.dbg.value(metadata i32 %5, metadata !16138, metadata !DIExpression()), !dbg !16139
  %6 = icmp sgt i32 %5, 0, !dbg !16143
  br i1 %6, label %17, label %7, !dbg !16145

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !16146
  br i1 %8, label %17, label %9, !dbg !16148

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !16149
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !16149
  %12 = load i32, i32* %11, align 8, !dbg !16149
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !16151
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !16151
  %15 = load i32, i32* %14, align 8, !dbg !16151
  %16 = icmp ult i32 %12, %15, !dbg !16152
  br label %17, !dbg !16153

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !16154
  ret i1 %18, !dbg !16155
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16156 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16173, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16174, metadata !DIExpression()), !dbg !16188
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16189
  br i1 %4, label %5, label %6, !dbg !16192

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16193
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1179) #25, !dbg !16193
  unreachable, !dbg !16193

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16195
  %8 = load i32, i32* %7, align 4, !dbg !16196
  %9 = add nsw i32 %8, 1, !dbg !16196
  store i32 %9, i32* %7, align 4, !dbg !16196
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !16197
  store i32 %8, i32* %10, align 8, !dbg !16198
  %11 = load i32, i32* %7, align 4, !dbg !16199
  %12 = icmp eq i32 %11, 0, !dbg !16200
  br i1 %12, label %13, label %35, !dbg !16201

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !16202
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16202
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !16176, metadata !DIExpression()), !dbg !16202
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16202
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !16202
  %17 = load i32, i32* %16, align 4, !dbg !16202
  %18 = shl i32 %17, 2, !dbg !16202
  %19 = alloca i8, i32 %18, align 8, !dbg !16202
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !16202
  store i8* %19, i8** %20, align 4, !dbg !16202
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !16202
  %22 = alloca i8, i32 %17, align 8, !dbg !16202
  store i8* %22, i8** %21, align 4, !dbg !16202
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !16202
  store i32 -1, i32* %23, align 4, !dbg !16202
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16203
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16185, metadata !DIExpression()), !dbg !16204
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !16175, metadata !DIExpression()), !dbg !16188
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !16205
  br i1 %25, label %26, label %27, !dbg !16202

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !16205
  br label %35, !dbg !16206

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !16175, metadata !DIExpression()), !dbg !16188
  %29 = load i32, i32* %7, align 4, !dbg !16207
  %30 = add nsw i32 %29, 1, !dbg !16207
  store i32 %30, i32* %7, align 4, !dbg !16207
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !16209
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !16209
  store i32 %29, i32* %32, align 8, !dbg !16210
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !16203
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16185, metadata !DIExpression()), !dbg !16204
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !16175, metadata !DIExpression()), !dbg !16188
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !16205
  br i1 %34, label %26, label %27, !dbg !16202, !llvm.loop !16211

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16213
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16214
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !16215
  ret void, !dbg !16216
}

; Function Attrs: optsize
declare !dbg !16217 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !16222 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !16225 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16227, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16228, metadata !DIExpression()), !dbg !16229
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !16230
  br i1 %3, label %4, label %5, !dbg !16233

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16234
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1200) #25, !dbg !16234
  unreachable, !dbg !16234

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16236
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !16237
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !16238
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !16239
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !16239
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !16241
  br i1 %10, label %11, label %13, !dbg !16242

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !16243
  store i32 0, i32* %12, align 4, !dbg !16245
  br label %13, !dbg !16246

13:                                               ; preds = %11, %5
  ret void, !dbg !16247
}

; Function Attrs: optsize
declare !dbg !16248 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !16249 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !16253, metadata !DIExpression()), !dbg !16256
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16254, metadata !DIExpression()), !dbg !16256
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !16257
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !16258
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !16255, metadata !DIExpression()), !dbg !16256
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16254, metadata !DIExpression()), !dbg !16256
  ret %struct.k_thread* %4, !dbg !16259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !16260 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !16264, metadata !DIExpression()), !dbg !16265
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !16266
  ret %struct.rbnode* %2, !dbg !16267
}

; Function Attrs: optsize
declare !dbg !16268 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #17 !dbg !16271 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !16281, metadata !DIExpression()), !dbg !16285
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !16286
  %3 = load i32, i32* %2, align 4, !dbg !16286
  %4 = icmp eq i32 %3, 0, !dbg !16288
  br i1 %4, label %10, label %5, !dbg !16289

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16282, metadata !DIExpression()), !dbg !16285
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !16290, !range !7379
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !16291
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !16283, metadata !DIExpression()), !dbg !16285
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #24, !dbg !16292
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !16284, metadata !DIExpression()), !dbg !16285
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16282, metadata !DIExpression()), !dbg !16285
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !16285
  ret %struct.k_thread* %11, !dbg !16293
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16294 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16298, metadata !DIExpression()), !dbg !16301
  call void @llvm.dbg.value(metadata i32 0, metadata !16299, metadata !DIExpression()), !dbg !16301
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16302
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16300, metadata !DIExpression()), !dbg !16301
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16303
  br i1 %3, label %8, label %4, !dbg !16304

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16305
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16307
  call void @llvm.dbg.value(metadata i32 1, metadata !16299, metadata !DIExpression()), !dbg !16301
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16302
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16300, metadata !DIExpression()), !dbg !16301
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16303
  br i1 %7, label %8, label %4, !dbg !16304, !llvm.loop !16308

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !16301
  ret i32 %9, !dbg !16310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #8 !dbg !16311 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16313, metadata !DIExpression()), !dbg !16314
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !16315
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !16316
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !16317
  ret %struct.k_thread* %4, !dbg !16318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !16319 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !16328, metadata !DIExpression()), !dbg !16329
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !16330
  tail call fastcc void @sys_dlist_init.329(%struct._dnode* noundef nonnull %2) #24, !dbg !16331
  ret void, !dbg !16332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.329(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16333 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16337, metadata !DIExpression()), !dbg !16338
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16339
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16340
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16341
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16342
  ret void, !dbg !16343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !16344 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !16345
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !16346
  ret void, !dbg !16347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !16348 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16353, metadata !DIExpression()), !dbg !16354
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !16355
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !16355
  %4 = load i8, i8* %3, align 2, !dbg !16355
  %5 = sext i8 %4 to i32, !dbg !16356
  ret i32 %5, !dbg !16357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16362, metadata !DIExpression()), !dbg !16365
  call void @llvm.dbg.value(metadata i32 %1, metadata !16363, metadata !DIExpression()), !dbg !16365
  %3 = add i32 %1, 16, !dbg !16366
  %4 = icmp ult i32 %3, 31, !dbg !16366
  br i1 %4, label %6, label %5, !dbg !16366

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.332, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16370
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.333, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !16370
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1331) #25, !dbg !16370
  unreachable, !dbg !16370

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16372, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %7, metadata !15344, metadata !DIExpression()) #23, !dbg !16377
  %8 = icmp eq i32 %7, 0, !dbg !16378
  br i1 %8, label %10, label %9, !dbg !16379

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16380
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16380
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1332) #25, !dbg !16380
  unreachable, !dbg !16380

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16364, metadata !DIExpression()), !dbg !16365
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !16382
  ret void, !dbg !16383
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !16384 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !16385
  br i1 %1, label %8, label %2, !dbg !16386

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !16387
  br i1 %3, label %8, label %4, !dbg !16388

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16389
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !16390
  %7 = xor i1 %6, true, !dbg !16388
  br label %8, !dbg !16388

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !16391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !16392 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !16393, !range !6558
  %2 = icmp eq i8 %1, 0, !dbg !16393
  ret i1 %2, !dbg !16394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !16395 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16398, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %1, metadata !15344, metadata !DIExpression()) #23, !dbg !16403
  %2 = icmp eq i32 %1, 0, !dbg !16404
  br i1 %2, label %4, label %3, !dbg !16405

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16406
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16406
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1392) #25, !dbg !16406
  unreachable, !dbg !16406

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !16408
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16410, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16412
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !16412
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16408
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16413
  br i1 %6, label %8, label %7, !dbg !16414

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16415
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16415
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16415
  unreachable, !dbg !16415

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16412
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16408
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16416
  call void @llvm.dbg.value(metadata i32 undef, metadata !16397, metadata !DIExpression()), !dbg !16417
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16418
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14806, metadata !DIExpression()) #23, !dbg !16421
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !16423
  %11 = load i8, i8* %10, align 1, !dbg !16424
  %12 = and i8 %11, 127, !dbg !16424
  store i8 %12, i8* %10, align 1, !dbg !16424
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14814, metadata !DIExpression()) #23, !dbg !16425
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !16427
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16428
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14823, metadata !DIExpression()) #23, !dbg !16429
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !16431
  %15 = load i8, i8* %14, align 1, !dbg !16432
  %16 = or i8 %15, -128, !dbg !16432
  store i8 %16, i8* %14, align 1, !dbg !16432
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14830, metadata !DIExpression()) #23, !dbg !16433
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14837, metadata !DIExpression()) #23, !dbg !16435
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14843, metadata !DIExpression()) #23, !dbg !16435
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !16437
  br i1 %17, label %18, label %19, !dbg !16438

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !16439
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 186) #25, !dbg !16439
  unreachable, !dbg !16439

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !16440
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14844, metadata !DIExpression()) #23, !dbg !16435
  %21 = icmp eq %struct._dnode* %20, null, !dbg !16441
  br i1 %21, label %32, label %22, !dbg !16440

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14844, metadata !DIExpression()) #23, !dbg !16435
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !16442
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14844, metadata !DIExpression()) #23, !dbg !16435
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !16443
  %26 = icmp sgt i32 %25, 0, !dbg !16444
  br i1 %26, label %27, label %29, !dbg !16445

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16446
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !16447
  br label %34, !dbg !16448

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !16441
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14844, metadata !DIExpression()) #23, !dbg !16435
  %31 = icmp eq %struct._dnode* %30, null, !dbg !16441
  br i1 %31, label %32, label %22, !dbg !16440, !llvm.loop !16449

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !16451
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !16452
  br label %34, !dbg !16453

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16454
  call void @llvm.dbg.value(metadata i32 undef, metadata !15292, metadata !DIExpression()) #23, !dbg !16455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15297, metadata !DIExpression()) #23, !dbg !16455
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15301, metadata !DIExpression()) #23, !dbg !16457
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16459
  br i1 %35, label %37, label %36, !dbg !16460

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16461
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16461
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16461
  unreachable, !dbg !16461

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %38, metadata !14626, metadata !DIExpression()) #23, !dbg !16412
  call void @llvm.dbg.value(metadata i32 %38, metadata !14620, metadata !DIExpression()) #23, !dbg !16408
  call void @llvm.dbg.value(metadata i32 %38, metadata !16397, metadata !DIExpression()), !dbg !16417
  call void @llvm.dbg.value(metadata i32 undef, metadata !15292, metadata !DIExpression()) #23, !dbg !16455
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !16462
  ret void, !dbg !16463
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !16464 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16468, metadata !DIExpression()), !dbg !16471
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16472, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %3, metadata !15344, metadata !DIExpression()) #23, !dbg !16477
  %4 = icmp eq i32 %3, 0, !dbg !16478
  br i1 %4, label %6, label %5, !dbg !16479

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16480
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16480
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1463) #25, !dbg !16480
  unreachable, !dbg !16480

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !16482
  br i1 %7, label %8, label %10, !dbg !16484

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16485
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !16487
  br label %15, !dbg !16488

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !16469, metadata !DIExpression()), !dbg !16471
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !16489
  %12 = sext i32 %11 to i64, !dbg !16489
  call void @llvm.dbg.value(metadata i64 %12, metadata !16469, metadata !DIExpression()), !dbg !16471
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !16490
  %14 = trunc i64 %13 to i32, !dbg !16490
  call void @llvm.dbg.value(metadata i32 %14, metadata !16470, metadata !DIExpression()), !dbg !16471
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !16471
  ret i32 %16, !dbg !16491
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16492 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16496, metadata !DIExpression()), !dbg !16497
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16498, !srcloc !16500
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !16501
  ret void, !dbg !16502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !16503 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16507, metadata !DIExpression()), !dbg !16511
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16512, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %2, metadata !15344, metadata !DIExpression()) #23, !dbg !16517
  %3 = icmp eq i32 %2, 0, !dbg !16518
  br i1 %3, label %5, label %4, !dbg !16519

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16520
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1420) #25, !dbg !16520
  unreachable, !dbg !16520

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16522
  br i1 %6, label %7, label %8, !dbg !16524

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16525
  br label %43, !dbg !16527

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !16509, metadata !DIExpression()), !dbg !16511
  %9 = icmp sgt i64 %0, -3, !dbg !16528
  br i1 %9, label %10, label %14, !dbg !16530

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16531
  %12 = trunc i64 %0 to i32, !dbg !16533
  %13 = add i32 %11, %12, !dbg !16533
  call void @llvm.dbg.value(metadata i32 %13, metadata !16508, metadata !DIExpression()), !dbg !16511
  br label %17, !dbg !16534

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16535
  %16 = sub i32 -2, %15, !dbg !16535
  call void @llvm.dbg.value(metadata i32 %16, metadata !16508, metadata !DIExpression()), !dbg !16511
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16537
  call void @llvm.dbg.value(metadata i32 %18, metadata !16508, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !16538
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16540, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16538
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16543
  br i1 %20, label %22, label %21, !dbg !16544

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16545
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16545
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16545
  unreachable, !dbg !16545

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16542
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16538
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16546
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()), !dbg !16511
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16547
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16548
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16549
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16550
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16551
  tail call fastcc void @z_add_thread_timeout.316(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16551
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16552
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16553
  call void @llvm.dbg.value(metadata i32 undef, metadata !15292, metadata !DIExpression()) #23, !dbg !16554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15297, metadata !DIExpression()) #23, !dbg !16554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15301, metadata !DIExpression()) #23, !dbg !16556
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16558
  br i1 %27, label %29, label %28, !dbg !16559

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16560
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16560
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16560
  unreachable, !dbg !16560

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16540
  call void @llvm.dbg.value(metadata i32 %30, metadata !14626, metadata !DIExpression()) #23, !dbg !16542
  call void @llvm.dbg.value(metadata i32 %30, metadata !14620, metadata !DIExpression()) #23, !dbg !16538
  call void @llvm.dbg.value(metadata i32 %30, metadata !16510, metadata !DIExpression()), !dbg !16511
  call void @llvm.dbg.value(metadata i32 undef, metadata !15292, metadata !DIExpression()) #23, !dbg !16554
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !16561
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16562
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16562
  br i1 %33, label %34, label %35, !dbg !16565

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.334, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16566
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.308, i32 0, i32 0)) #25, !dbg !16566
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1448) #25, !dbg !16566
  unreachable, !dbg !16566

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16568
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !16569
  %38 = zext i32 %37 to i64, !dbg !16569
  %39 = sub nsw i64 %36, %38, !dbg !16570
  call void @llvm.dbg.value(metadata i64 %39, metadata !16507, metadata !DIExpression()), !dbg !16511
  %40 = icmp sgt i64 %39, 0, !dbg !16571
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16571
  %42 = trunc i64 %41 to i32, !dbg !16571
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !16511
  ret i32 %44, !dbg !16572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16573 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16575, metadata !DIExpression()), !dbg !16576
  call void @llvm.dbg.value(metadata i64 %0, metadata !14674, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.value(metadata i32 10000, metadata !14677, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.value(metadata i32 1000, metadata !14678, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.value(metadata i8 1, metadata !14679, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.value(metadata i1 false, metadata !14680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16577
  call void @llvm.dbg.value(metadata i1 false, metadata !14681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16577
  call void @llvm.dbg.value(metadata i8 0, metadata !14682, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.value(metadata i1 false, metadata !14683, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16577
  call void @llvm.dbg.value(metadata i1 true, metadata !14684, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16577
  call void @llvm.dbg.value(metadata i64 0, metadata !14685, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.value(metadata i64 0, metadata !14685, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.value(metadata i64 %0, metadata !14674, metadata !DIExpression()), !dbg !16577
  %2 = udiv i64 %0, 10, !dbg !16579
  ret i64 %2, !dbg !16583
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16584 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16585, !srcloc !16587
  tail call void @z_impl_k_yield() #24, !dbg !16588
  ret void, !dbg !16589
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16590 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16594, metadata !DIExpression()), !dbg !16596
  %2 = sext i32 %0 to i64, !dbg !16597
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16598
  call void @llvm.dbg.value(metadata i64 %3, metadata !16595, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16596
  %4 = shl i64 %3, 32, !dbg !16599
  %5 = ashr exact i64 %4, 32, !dbg !16599
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16600
  call void @llvm.dbg.value(metadata i32 %6, metadata !16595, metadata !DIExpression()), !dbg !16596
  %7 = sext i32 %6 to i64, !dbg !16601
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16602
  %9 = trunc i64 %8 to i32, !dbg !16602
  ret i32 %9, !dbg !16603
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16604 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16606, metadata !DIExpression()), !dbg !16607
  call void @llvm.dbg.value(metadata i64 %0, metadata !14674, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14677, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i32 10000, metadata !14678, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i8 1, metadata !14679, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i1 false, metadata !14680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16608
  call void @llvm.dbg.value(metadata i1 true, metadata !14681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16608
  call void @llvm.dbg.value(metadata i8 0, metadata !14682, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i1 false, metadata !14683, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16608
  call void @llvm.dbg.value(metadata i1 true, metadata !14684, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16608
  call void @llvm.dbg.value(metadata i64 0, metadata !14685, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i64 0, metadata !14685, metadata !DIExpression()), !dbg !16608
  %2 = add i64 %0, 99, !dbg !16610
  call void @llvm.dbg.value(metadata i64 %2, metadata !14674, metadata !DIExpression()), !dbg !16608
  %3 = udiv i64 %2, 100, !dbg !16611
  ret i64 %3, !dbg !16612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16613 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16615, metadata !DIExpression()), !dbg !16616
  call void @llvm.dbg.value(metadata i64 %0, metadata !14674, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i32 10000, metadata !14677, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14678, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i8 1, metadata !14679, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i1 false, metadata !14680, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16617
  call void @llvm.dbg.value(metadata i1 false, metadata !14681, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16617
  call void @llvm.dbg.value(metadata i8 0, metadata !14682, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i1 true, metadata !14683, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16617
  call void @llvm.dbg.value(metadata i1 false, metadata !14684, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16617
  call void @llvm.dbg.value(metadata i64 0, metadata !14685, metadata !DIExpression()), !dbg !16617
  call void @llvm.dbg.value(metadata i64 0, metadata !14685, metadata !DIExpression()), !dbg !16617
  %2 = mul i64 %0, 100, !dbg !16619
  ret i64 %2, !dbg !16621
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16622 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16624, metadata !DIExpression()), !dbg !16625
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16626
  br i1 %2, label %14, label %3, !dbg !16628

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16629
  %5 = icmp slt i32 %4, 0, !dbg !16631
  br i1 %5, label %6, label %10, !dbg !16632

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16633
  %8 = load i8, i8* %7, align 1, !dbg !16633
  %9 = icmp eq i8 %8, 16, !dbg !16636
  br i1 %9, label %10, label %14, !dbg !16637

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16638
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16639
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16640, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %11, metadata !15344, metadata !DIExpression()) #23, !dbg !16644
  %12 = icmp eq i32 %11, 0, !dbg !16645
  br i1 %12, label %13, label %14, !dbg !16646

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16647
  br label %14, !dbg !16649

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16650
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16651 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16653, metadata !DIExpression()), !dbg !16654
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16655
  %3 = load i8, i8* %2, align 1, !dbg !16655
  %4 = and i8 %3, 2, !dbg !16656
  %5 = icmp ne i8 %4, 0, !dbg !16657
  ret i1 %5, !dbg !16658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16659 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16664
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16663, metadata !DIExpression()), !dbg !16665
  ret %struct.k_thread* %1, !dbg !16666
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16667 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16668, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %1, metadata !15344, metadata !DIExpression()) #23, !dbg !16671
  %2 = icmp eq i32 %1, 0, !dbg !16672
  br i1 %2, label %3, label %8, !dbg !16673

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16674
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16675
  %6 = icmp ne i32 %5, 0, !dbg !16673
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16677 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16679, metadata !DIExpression()), !dbg !16681
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !16682
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16684, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !16686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16682
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16687
  br i1 %3, label %5, label %4, !dbg !16688

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16689
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16689
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16689
  unreachable, !dbg !16689

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16684
  call void @llvm.dbg.value(metadata i32 %6, metadata !14626, metadata !DIExpression()) #23, !dbg !16686
  call void @llvm.dbg.value(metadata i32 %6, metadata !14620, metadata !DIExpression()) #23, !dbg !16682
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16690
  call void @llvm.dbg.value(metadata i32 %6, metadata !16680, metadata !DIExpression()), !dbg !16681
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16691
  %8 = load i8, i8* %7, align 4, !dbg !16691
  %9 = and i8 %8, 1, !dbg !16693
  %10 = icmp eq i8 %9, 0, !dbg !16694
  br i1 %10, label %15, label %11, !dbg !16695

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16696
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !16696
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16699
  br i1 %12, label %14, label %13, !dbg !16700

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16701
  unreachable, !dbg !16701

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14648, metadata !DIExpression()) #23, !dbg !16696
  call void @llvm.dbg.value(metadata i32 %6, metadata !14662, metadata !DIExpression()) #23, !dbg !16702
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16704, !srcloc !14668
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16705
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.340, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16705
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16705
  unreachable, !dbg !16705

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16709
  %17 = load i8, i8* %16, align 1, !dbg !16709
  %18 = and i8 %17, 8, !dbg !16711
  %19 = icmp eq i8 %18, 0, !dbg !16712
  br i1 %19, label %24, label %20, !dbg !16713

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !16714
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16717
  br i1 %21, label %23, label %22, !dbg !16718

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16719
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16719
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16719
  unreachable, !dbg !16719

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14648, metadata !DIExpression()) #23, !dbg !16714
  call void @llvm.dbg.value(metadata i32 %6, metadata !14662, metadata !DIExpression()) #23, !dbg !16720
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16722, !srcloc !14668
  br label %39, !dbg !16723

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16724
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16725
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16727
  br i1 %26, label %27, label %35, !dbg !16728

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16729, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %28, metadata !15344, metadata !DIExpression()) #23, !dbg !16732
  %29 = icmp eq i32 %28, 0, !dbg !16733
  br i1 %29, label %30, label %35, !dbg !16734

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !15292, metadata !DIExpression()) #23, !dbg !16735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15297, metadata !DIExpression()) #23, !dbg !16735
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15301, metadata !DIExpression()) #23, !dbg !16738
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16740
  br i1 %31, label %33, label %32, !dbg !16741

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16742
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16742
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16742
  unreachable, !dbg !16742

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !15292, metadata !DIExpression()) #23, !dbg !16735
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16743
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.339, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16744
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.341, i32 0, i32 0)) #25, !dbg !16744
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16744
  unreachable, !dbg !16744

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16748
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !16748
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16750
  br i1 %36, label %38, label %37, !dbg !16751

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16752
  unreachable, !dbg !16752

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14648, metadata !DIExpression()) #23, !dbg !16748
  call void @llvm.dbg.value(metadata i32 %6, metadata !14662, metadata !DIExpression()) #23, !dbg !16753
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16755, !srcloc !14668
  br label %39, !dbg !16756

39:                                               ; preds = %38, %23
  ret void, !dbg !16756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16757 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16759, metadata !DIExpression()), !dbg !16760
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16761
  %3 = load i8, i8* %2, align 1, !dbg !16761
  %4 = and i8 %3, 8, !dbg !16763
  %5 = icmp eq i8 %4, 0, !dbg !16764
  br i1 %5, label %6, label %20, !dbg !16765

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16766
  %8 = or i8 %7, 8, !dbg !16766
  store i8 %8, i8* %2, align 1, !dbg !16766
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16768
  br i1 %9, label %10, label %12, !dbg !16770

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14806, metadata !DIExpression()) #23, !dbg !16771
  %11 = and i8 %8, 95, !dbg !16774
  store i8 %11, i8* %2, align 1, !dbg !16774
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14814, metadata !DIExpression()) #23, !dbg !16775
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16777
  br label %12, !dbg !16778

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16779
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !16779
  %15 = icmp eq %union.anon* %14, null, !dbg !16781
  br i1 %15, label %17, label %16, !dbg !16782

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16783
  br label %17, !dbg !16785

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16786
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16787
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #24, !dbg !16788
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16789
  br label %20, !dbg !16790

20:                                               ; preds = %17, %1
  ret void, !dbg !16791
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !16792 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16796, metadata !DIExpression()), !dbg !16798
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16799
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16797, metadata !DIExpression()), !dbg !16798
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16800
  br i1 %3, label %10, label %4, !dbg !16801

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16802
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16804
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16805, metadata !DIExpression()), !dbg !16811
  call void @llvm.dbg.value(metadata i32 0, metadata !16810, metadata !DIExpression()), !dbg !16811
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16813
  store i32 0, i32* %7, align 4, !dbg !16814
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16815
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #24, !dbg !16799
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16797, metadata !DIExpression()), !dbg !16798
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16800
  br i1 %9, label %10, label %4, !dbg !16801, !llvm.loop !16816

10:                                               ; preds = %4, %1
  ret void, !dbg !16818
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16819 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16824, metadata !DIExpression()), !dbg !16827
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16823, metadata !DIExpression()), !dbg !16827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !16828
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16830, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !16832
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16828
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16833
  br i1 %4, label %6, label %5, !dbg !16834

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16835
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16835
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16835
  unreachable, !dbg !16835

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16830
  call void @llvm.dbg.value(metadata i32 %7, metadata !14626, metadata !DIExpression()) #23, !dbg !16832
  call void @llvm.dbg.value(metadata i32 %7, metadata !14620, metadata !DIExpression()) #23, !dbg !16828
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16836
  call void @llvm.dbg.value(metadata i32 %7, metadata !16825, metadata !DIExpression()), !dbg !16827
  call void @llvm.dbg.value(metadata i32 0, metadata !16826, metadata !DIExpression()), !dbg !16827
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16837
  %9 = load i8, i8* %8, align 1, !dbg !16837
  %10 = and i8 %9, 8, !dbg !16839
  %11 = icmp eq i8 %10, 0, !dbg !16840
  br i1 %11, label %12, label %35, !dbg !16841

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16824, metadata !DIExpression()), !dbg !16827
  %14 = icmp eq i64 %13, 0, !dbg !16842
  br i1 %14, label %35, label %15, !dbg !16844

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16845
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16847
  br i1 %17, label %35, label %18, !dbg !16848

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16849
  %20 = load %union.anon*, %union.anon** %19, align 8, !dbg !16849
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16850
  %22 = icmp eq %union.anon* %20, %21, !dbg !16851
  br i1 %22, label %35, label %23, !dbg !16852

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16853, !srcloc !15348
  call void @llvm.dbg.value(metadata i32 %24, metadata !15344, metadata !DIExpression()) #23, !dbg !16859
  %25 = icmp eq i32 %24, 0, !dbg !16860
  br i1 %25, label %27, label %26, !dbg !16861

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.323, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16862
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.344, i32 0, i32 0)) #25, !dbg !16862
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.306, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16862
  unreachable, !dbg !16862

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16864
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16865
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %union.anon* noundef nonnull %29) #24, !dbg !16866
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16867
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16868
  call void @llvm.dbg.value(metadata i32 undef, metadata !15292, metadata !DIExpression()) #23, !dbg !16869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15297, metadata !DIExpression()) #23, !dbg !16869
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !15301, metadata !DIExpression()) #23, !dbg !16871
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16873
  br i1 %31, label %33, label %32, !dbg !16874

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16875
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16875
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 225) #25, !dbg !16875
  unreachable, !dbg !16875

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !15292, metadata !DIExpression()) #23, !dbg !16869
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16876
  call void @llvm.dbg.value(metadata i32 %34, metadata !16826, metadata !DIExpression()), !dbg !16827
  br label %40, !dbg !16877

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16878
  call void @llvm.dbg.value(metadata i32 %36, metadata !16826, metadata !DIExpression()), !dbg !16827
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !16879
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16881
  br i1 %37, label %39, label %38, !dbg !16882

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16883
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16883
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16883
  unreachable, !dbg !16883

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14648, metadata !DIExpression()) #23, !dbg !16879
  call void @llvm.dbg.value(metadata i32 %7, metadata !14662, metadata !DIExpression()) #23, !dbg !16884
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16886, !srcloc !14668
  br label %40, !dbg !16887

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16827
  ret i32 %41, !dbg !16888
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16889 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16893, metadata !DIExpression()), !dbg !16901
  call void @llvm.dbg.value(metadata i32 %1, metadata !16894, metadata !DIExpression()), !dbg !16901
  call void @llvm.dbg.value(metadata i8* %2, metadata !16895, metadata !DIExpression()), !dbg !16901
  call void @llvm.dbg.value(metadata i8 0, metadata !16897, metadata !DIExpression()), !dbg !16901
  call void @llvm.dbg.value(metadata i32 0, metadata !16898, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14614, metadata !DIExpression()) #23, !dbg !16903
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16905, !srcloc !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16907
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()) #23, !dbg !16907
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16903
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16908
  br i1 %5, label %7, label %6, !dbg !16909

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16910
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.302, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 148) #25, !dbg !16910
  unreachable, !dbg !16910

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14626, metadata !DIExpression()) #23, !dbg !16907
  call void @llvm.dbg.value(metadata i32 undef, metadata !14620, metadata !DIExpression()) #23, !dbg !16903
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16911
  call void @llvm.dbg.value(metadata i32 undef, metadata !16900, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.value(metadata i8 poison, metadata !16897, metadata !DIExpression()), !dbg !16901
  call void @llvm.dbg.value(metadata i32 undef, metadata !16898, metadata !DIExpression()), !dbg !16902
  %8 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16912
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16896, metadata !DIExpression()), !dbg !16901
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16915
  br i1 %10, label %15, label %11, !dbg !16917

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16918, metadata !DIExpression()), !dbg !16926
  call void @llvm.dbg.value(metadata i32 %1, metadata !16924, metadata !DIExpression()), !dbg !16926
  call void @llvm.dbg.value(metadata i8* %2, metadata !16925, metadata !DIExpression()), !dbg !16926
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16805, metadata !DIExpression()), !dbg !16929
  call void @llvm.dbg.value(metadata i32 %1, metadata !16810, metadata !DIExpression()), !dbg !16929
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16931
  store i32 %1, i32* %12, align 4, !dbg !16932
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16933
  store i8* %2, i8** %13, align 4, !dbg !16934
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16935
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16936
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16937
  call void @llvm.dbg.value(metadata i8 1, metadata !16897, metadata !DIExpression()), !dbg !16901
  br label %15, !dbg !16938

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16897, metadata !DIExpression()), !dbg !16901
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16939
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14653, metadata !DIExpression()) #23, !dbg !16939
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16941
  br i1 %16, label %18, label %17, !dbg !16942

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.299, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16943
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.304, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16943
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.301, i32 0, i32 0), i32 noundef 194) #25, !dbg !16943
  unreachable, !dbg !16943

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16901
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16905
  call void @llvm.dbg.value(metadata i32 %20, metadata !14626, metadata !DIExpression()) #23, !dbg !16907
  call void @llvm.dbg.value(metadata i32 %20, metadata !14620, metadata !DIExpression()) #23, !dbg !16903
  call void @llvm.dbg.value(metadata i32 %20, metadata !16900, metadata !DIExpression()), !dbg !16902
  call void @llvm.dbg.value(metadata i32 undef, metadata !14648, metadata !DIExpression()) #23, !dbg !16939
  call void @llvm.dbg.value(metadata i32 undef, metadata !14662, metadata !DIExpression()) #23, !dbg !16944
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16946, !srcloc !14668
  call void @llvm.dbg.value(metadata i8 poison, metadata !16897, metadata !DIExpression()), !dbg !16901
  call void @llvm.dbg.value(metadata i32 undef, metadata !16898, metadata !DIExpression()), !dbg !16902
  ret i1 %19, !dbg !16947
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16948 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()), !dbg !16959
  call void @llvm.dbg.value(metadata i64 undef, metadata !16956, metadata !DIExpression()), !dbg !16959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16953, metadata !DIExpression()), !dbg !16959
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16955, metadata !DIExpression()), !dbg !16959
  call void @llvm.dbg.value(metadata i8** %4, metadata !16957, metadata !DIExpression()), !dbg !16959
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #24, !dbg !16960
  call void @llvm.dbg.value(metadata i32 %6, metadata !16958, metadata !DIExpression()), !dbg !16959
  %7 = icmp eq i8** %4, null, !dbg !16961
  br i1 %7, label %12, label %8, !dbg !16963

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16964
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16966
  %11 = load i8*, i8** %10, align 4, !dbg !16966
  store i8* %11, i8** %4, align 4, !dbg !16967
  br label %12, !dbg !16968

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16969
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16970 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16972
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16973
  ret void, !dbg !16974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16975 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16985, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16983, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16984, metadata !DIExpression()), !dbg !17002
  %5 = icmp eq i64 %4, -1, !dbg !17003
  br i1 %5, label %63, label %6, !dbg !17005

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17006
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* noundef %7) #24, !dbg !17006
  br i1 %8, label %9, label %10, !dbg !17009

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 99) #25, !dbg !17010
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.353, i32 0, i32 0)) #25, !dbg !17010
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.352, i32 0, i32 0), i32 noundef 99) #25, !dbg !17010
  unreachable, !dbg !17010

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17012
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !17013
  call void @llvm.dbg.value(metadata i32 0, metadata !16986, metadata !DIExpression()), !dbg !17014
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17015, metadata !DIExpression()) #23, !dbg !17022
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17024, !srcloc !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17031
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()) #23, !dbg !17031
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17022
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17032
  br i1 %13, label %15, label %14, !dbg !17035

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17036
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17036
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17036
  unreachable, !dbg !17036

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !17024
  call void @llvm.dbg.value(metadata i32 %16, metadata !17027, metadata !DIExpression()) #23, !dbg !17031
  call void @llvm.dbg.value(metadata i32 %16, metadata !17021, metadata !DIExpression()) #23, !dbg !17022
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17038
  call void @llvm.dbg.value(metadata i32 %16, metadata !16992, metadata !DIExpression()), !dbg !17014
  call void @llvm.dbg.value(metadata i32 undef, metadata !16986, metadata !DIExpression()), !dbg !17014
  %17 = icmp slt i64 %4, -1, !dbg !17039
  br i1 %17, label %18, label %24, !dbg !17040

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !17041
  %20 = add i64 %4, %19, !dbg !17042
  %21 = sub i64 -2, %20, !dbg !17042
  call void @llvm.dbg.value(metadata i64 %21, metadata !16996, metadata !DIExpression()), !dbg !17043
  %22 = icmp sgt i64 %21, 1, !dbg !17044
  %23 = select i1 %22, i64 %21, i64 1, !dbg !17044
  br label %29, !dbg !17045

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !17046
  %26 = tail call fastcc i32 @elapsed.357() #24, !dbg !17048
  %27 = sext i32 %26 to i64, !dbg !17048
  %28 = add nsw i64 %25, %27, !dbg !17049
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !17050
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17051
  store i64 %30, i64* %31, align 8, !dbg !17052
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !17053
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16993, metadata !DIExpression()), !dbg !17055
  %33 = icmp eq %struct._timeout* %32, null, !dbg !17056
  br i1 %33, label %48, label %34, !dbg !17056

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !17057
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16993, metadata !DIExpression()), !dbg !17055
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17061
  %38 = load i64, i64* %37, align 8, !dbg !17061
  %39 = icmp slt i64 %35, %38, !dbg !17062
  br i1 %39, label %40, label %44, !dbg !17063

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !17061
  %42 = sub nsw i64 %38, %35, !dbg !17064
  store i64 %42, i64* %41, align 8, !dbg !17064
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !17066
  tail call fastcc void @sys_dlist_insert.358(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !17067
  br label %49, !dbg !17068

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !17069
  store i64 %45, i64* %31, align 8, !dbg !17069
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !17070
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16993, metadata !DIExpression()), !dbg !17055
  %47 = icmp eq %struct._timeout* %46, null, !dbg !17056
  br i1 %47, label %48, label %34, !dbg !17056, !llvm.loop !17071

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.359(%struct._dnode* noundef nonnull %7) #24, !dbg !17073
  br label %49, !dbg !17076

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !17077
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !17078
  br i1 %51, label %52, label %59, !dbg !17079

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !17080
  call void @llvm.dbg.value(metadata i32 %53, metadata !16999, metadata !DIExpression()), !dbg !17081
  %54 = icmp ne i32 %53, 0, !dbg !17082
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !17084
  br i1 %57, label %59, label %58, !dbg !17084

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !17085
  br label %59, !dbg !17087

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17094
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17093, metadata !DIExpression()) #23, !dbg !17094
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17096
  br i1 %60, label %62, label %61, !dbg !17099

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17100
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17100
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17100
  unreachable, !dbg !17100

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !17088, metadata !DIExpression()) #23, !dbg !17094
  call void @llvm.dbg.value(metadata i32 %16, metadata !17102, metadata !DIExpression()) #23, !dbg !17105
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !17107, !srcloc !17108
  call void @llvm.dbg.value(metadata i32 undef, metadata !16986, metadata !DIExpression()), !dbg !17014
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !17109
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17110 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17116, metadata !DIExpression()), !dbg !17117
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17118
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17118
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17119
  ret i1 %4, !dbg !17120
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.357() unnamed_addr #1 !dbg !17121 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17124
  %2 = icmp eq i32 %1, 0, !dbg !17125
  br i1 %2, label %3, label %5, !dbg !17124

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !17126
  br label %5, !dbg !17124

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17124
  ret i32 %6, !dbg !17127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !17128 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.364() #24, !dbg !17134
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17132, metadata !DIExpression()), !dbg !17135
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17136
  ret %struct._timeout* %2, !dbg !17137
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.358(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !17138 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17142, metadata !DIExpression()), !dbg !17146
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17143, metadata !DIExpression()), !dbg !17146
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17147
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17147
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17144, metadata !DIExpression()), !dbg !17146
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17148
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17149
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17150
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17151
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17152
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17153
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17154
  ret void, !dbg !17155
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !17156 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17160, metadata !DIExpression()), !dbg !17162
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17163
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.362(%struct._dnode* noundef %2) #24, !dbg !17164
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17161, metadata !DIExpression()), !dbg !17162
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17165
  ret %struct._timeout* %4, !dbg !17166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.359(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17167 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17172, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17173, metadata !DIExpression()), !dbg !17175
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17176
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17174, metadata !DIExpression()), !dbg !17175
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17177
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17178
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17179
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17180
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17181
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17182
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17183
  ret void, !dbg !17184
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17185 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !17190
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17187, metadata !DIExpression()), !dbg !17191
  %2 = tail call fastcc i32 @elapsed.357() #24, !dbg !17192
  call void @llvm.dbg.value(metadata i32 %2, metadata !17188, metadata !DIExpression()), !dbg !17191
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17193
  br i1 %3, label %14, label %4, !dbg !17195

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17196
  %6 = load i64, i64* %5, align 8, !dbg !17196
  %7 = sext i32 %2 to i64, !dbg !17197
  %8 = sub nsw i64 %6, %7, !dbg !17198
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17199
  br i1 %9, label %14, label %10, !dbg !17200

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17201
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17201
  %13 = trunc i64 %12 to i32, !dbg !17201
  call void @llvm.dbg.value(metadata i32 %13, metadata !17189, metadata !DIExpression()), !dbg !17191
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17203
  call void @llvm.dbg.value(metadata i32 %15, metadata !17189, metadata !DIExpression()), !dbg !17191
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17204
  %17 = icmp ne i32 %16, 0, !dbg !17206
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17207
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17207
  call void @llvm.dbg.value(metadata i32 %20, metadata !17189, metadata !DIExpression()), !dbg !17191
  ret i32 %20, !dbg !17208
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.362(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17209 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17213, metadata !DIExpression()), !dbg !17215
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17214, metadata !DIExpression()), !dbg !17215
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17216
  br i1 %2, label %5, label %3, !dbg !17217

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.363(%struct._dnode* noundef nonnull %0) #24, !dbg !17218
  br label %5, !dbg !17217

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17217
  ret %struct._dnode* %6, !dbg !17219
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.363(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !17220 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17222, metadata !DIExpression()), !dbg !17224
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17223, metadata !DIExpression()), !dbg !17224
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17225
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17226
  br i1 %3, label %7, label %4, !dbg !17227

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17228
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17228
  br label %7, !dbg !17227

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17227
  ret %struct._dnode* %8, !dbg !17229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.364() unnamed_addr #8 !dbg !17230 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17234, metadata !DIExpression()), !dbg !17235
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.365() #24, !dbg !17236
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17236
  ret %struct._dnode* %3, !dbg !17237
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.365() unnamed_addr #8 !dbg !17238 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17242, metadata !DIExpression()), !dbg !17243
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17244
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17245
  ret i1 %2, !dbg !17246
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17247 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17251, metadata !DIExpression()), !dbg !17256
  call void @llvm.dbg.value(metadata i32 -22, metadata !17252, metadata !DIExpression()), !dbg !17256
  call void @llvm.dbg.value(metadata i32 0, metadata !17253, metadata !DIExpression()), !dbg !17257
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17015, metadata !DIExpression()) #23, !dbg !17258
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17260, !srcloc !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17262
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()) #23, !dbg !17262
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17258
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17263
  br i1 %3, label %5, label %4, !dbg !17264

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17265
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17265
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17265
  unreachable, !dbg !17265

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17262
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17258
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !17255, metadata !DIExpression()), !dbg !17257
  call void @llvm.dbg.value(metadata i32 -22, metadata !17252, metadata !DIExpression()), !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17253, metadata !DIExpression()), !dbg !17257
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17252, metadata !DIExpression()), !dbg !17256
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* noundef %6) #24, !dbg !17267
  br i1 %7, label %8, label %9, !dbg !17271

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !17272
  call void @llvm.dbg.value(metadata i32 0, metadata !17252, metadata !DIExpression()), !dbg !17256
  br label %9, !dbg !17274

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !17256
  call void @llvm.dbg.value(metadata i32 %10, metadata !17252, metadata !DIExpression()), !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17275
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17093, metadata !DIExpression()) #23, !dbg !17275
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17277
  br i1 %11, label %13, label %12, !dbg !17278

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17279
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17279
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17279
  unreachable, !dbg !17279

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !17260
  call void @llvm.dbg.value(metadata i32 %14, metadata !17027, metadata !DIExpression()) #23, !dbg !17262
  call void @llvm.dbg.value(metadata i32 %14, metadata !17021, metadata !DIExpression()) #23, !dbg !17258
  call void @llvm.dbg.value(metadata i32 %14, metadata !17255, metadata !DIExpression()), !dbg !17257
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17275
  call void @llvm.dbg.value(metadata i32 undef, metadata !17102, metadata !DIExpression()) #23, !dbg !17280
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !17282, !srcloc !17108
  call void @llvm.dbg.value(metadata i32 %10, metadata !17252, metadata !DIExpression()), !dbg !17256
  call void @llvm.dbg.value(metadata i32 undef, metadata !17253, metadata !DIExpression()), !dbg !17257
  ret i32 %10, !dbg !17283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !17284 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17286, metadata !DIExpression()), !dbg !17287
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !17288
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17290
  br i1 %3, label %10, label %4, !dbg !17291

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17292
  %6 = load i64, i64* %5, align 8, !dbg !17292
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17294
  %8 = load i64, i64* %7, align 8, !dbg !17295
  %9 = add nsw i64 %8, %6, !dbg !17295
  store i64 %9, i64* %7, align 8, !dbg !17295
  br label %10, !dbg !17296

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17297
  tail call fastcc void @sys_dlist_remove.368(%struct._dnode* noundef %11) #24, !dbg !17298
  ret void, !dbg !17299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.368(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !17300 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17304, metadata !DIExpression()), !dbg !17307
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17308
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17308
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17305, metadata !DIExpression()), !dbg !17307
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17309
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !17309
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !17306, metadata !DIExpression()), !dbg !17307
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !17310
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !17311
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !17312
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !17313
  tail call fastcc void @sys_dnode_init.369(%struct._dnode* noundef %0) #24, !dbg !17314
  ret void, !dbg !17315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.369(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17316 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17318, metadata !DIExpression()), !dbg !17319
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17320
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17321
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17322
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17323
  ret void, !dbg !17324
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17325 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17331, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i64 0, metadata !17332, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i32 0, metadata !17333, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17015, metadata !DIExpression()) #23, !dbg !17338
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17340, !srcloc !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17338
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17343
  br i1 %3, label %5, label %4, !dbg !17344

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17345
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17345
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17345
  unreachable, !dbg !17345

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17338
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17346
  call void @llvm.dbg.value(metadata i32 undef, metadata !17335, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata i64 0, metadata !17332, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !17333, metadata !DIExpression()), !dbg !17337
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17347
  call void @llvm.dbg.value(metadata i64 %6, metadata !17332, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17350
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17093, metadata !DIExpression()) #23, !dbg !17350
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17352
  br i1 %7, label %9, label %8, !dbg !17353

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17354
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17354
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17354
  unreachable, !dbg !17354

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17340
  call void @llvm.dbg.value(metadata i32 %10, metadata !17027, metadata !DIExpression()) #23, !dbg !17342
  call void @llvm.dbg.value(metadata i32 %10, metadata !17021, metadata !DIExpression()) #23, !dbg !17338
  call void @llvm.dbg.value(metadata i32 %10, metadata !17335, metadata !DIExpression()), !dbg !17337
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17350
  call void @llvm.dbg.value(metadata i32 undef, metadata !17102, metadata !DIExpression()) #23, !dbg !17355
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17357, !srcloc !17108
  call void @llvm.dbg.value(metadata i64 %6, metadata !17332, metadata !DIExpression()), !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !17333, metadata !DIExpression()), !dbg !17337
  ret i64 %6, !dbg !17358
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17359 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17361, metadata !DIExpression()), !dbg !17365
  call void @llvm.dbg.value(metadata i64 0, metadata !17362, metadata !DIExpression()), !dbg !17365
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.370(%struct._timeout* noundef %0) #24, !dbg !17366
  br i1 %2, label %21, label %3, !dbg !17368

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17369
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17363, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i64 0, metadata !17362, metadata !DIExpression()), !dbg !17365
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17371
  br i1 %5, label %16, label %6, !dbg !17373

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17363, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i64 %8, metadata !17362, metadata !DIExpression()), !dbg !17365
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17374
  %10 = load i64, i64* %9, align 8, !dbg !17374
  %11 = add nsw i64 %10, %8, !dbg !17376
  call void @llvm.dbg.value(metadata i64 %11, metadata !17362, metadata !DIExpression()), !dbg !17365
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17377
  br i1 %12, label %16, label %13, !dbg !17379

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17380
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17363, metadata !DIExpression()), !dbg !17370
  call void @llvm.dbg.value(metadata i64 %11, metadata !17362, metadata !DIExpression()), !dbg !17365
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17371
  br i1 %15, label %16, label %6, !dbg !17373, !llvm.loop !17381

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17365
  call void @llvm.dbg.value(metadata i64 %17, metadata !17362, metadata !DIExpression()), !dbg !17365
  %18 = tail call fastcc i32 @elapsed.357() #24, !dbg !17383
  %19 = sext i32 %18 to i64, !dbg !17383
  %20 = sub nsw i64 %17, %19, !dbg !17384
  br label %21, !dbg !17385

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17365
  ret i64 %22, !dbg !17386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.370(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17387 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17391, metadata !DIExpression()), !dbg !17392
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17393
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.349(%struct._dnode* noundef %2) #24, !dbg !17394
  %4 = xor i1 %3, true, !dbg !17395
  ret i1 %4, !dbg !17396
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17397 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17399, metadata !DIExpression()), !dbg !17404
  call void @llvm.dbg.value(metadata i64 0, metadata !17400, metadata !DIExpression()), !dbg !17404
  call void @llvm.dbg.value(metadata i32 0, metadata !17401, metadata !DIExpression()), !dbg !17405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17015, metadata !DIExpression()) #23, !dbg !17406
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17408, !srcloc !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()) #23, !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17406
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17411
  br i1 %3, label %5, label %4, !dbg !17412

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17413
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17413
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17413
  unreachable, !dbg !17413

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17410
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17406
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17414
  call void @llvm.dbg.value(metadata i32 undef, metadata !17403, metadata !DIExpression()), !dbg !17405
  call void @llvm.dbg.value(metadata i64 0, metadata !17400, metadata !DIExpression()), !dbg !17404
  call void @llvm.dbg.value(metadata i32 undef, metadata !17401, metadata !DIExpression()), !dbg !17405
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17415
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17418
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17400, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17404
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17419
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17093, metadata !DIExpression()) #23, !dbg !17419
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17421
  br i1 %8, label %10, label %9, !dbg !17422

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17423
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17423
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17423
  unreachable, !dbg !17423

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17408
  call void @llvm.dbg.value(metadata i32 %11, metadata !17027, metadata !DIExpression()) #23, !dbg !17410
  call void @llvm.dbg.value(metadata i32 %11, metadata !17021, metadata !DIExpression()) #23, !dbg !17406
  call void @llvm.dbg.value(metadata i32 %11, metadata !17403, metadata !DIExpression()), !dbg !17405
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17400, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17404
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17419
  call void @llvm.dbg.value(metadata i32 undef, metadata !17102, metadata !DIExpression()) #23, !dbg !17424
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17426, !srcloc !17108
  call void @llvm.dbg.value(metadata i32 undef, metadata !17401, metadata !DIExpression()), !dbg !17405
  %12 = add i64 %7, %6, !dbg !17427
  ret i64 %12, !dbg !17428
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17429 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17431, metadata !DIExpression()), !dbg !17435
  call void @llvm.dbg.value(metadata i32 0, metadata !17432, metadata !DIExpression()), !dbg !17436
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17015, metadata !DIExpression()) #23, !dbg !17437
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17439, !srcloc !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17441
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()) #23, !dbg !17441
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17437
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17442
  br i1 %2, label %4, label %3, !dbg !17443

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17444
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17444
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17444
  unreachable, !dbg !17444

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17441
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17437
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17445
  call void @llvm.dbg.value(metadata i32 undef, metadata !17434, metadata !DIExpression()), !dbg !17436
  call void @llvm.dbg.value(metadata i32 -1, metadata !17431, metadata !DIExpression()), !dbg !17435
  call void @llvm.dbg.value(metadata i32 undef, metadata !17432, metadata !DIExpression()), !dbg !17436
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17446
  call void @llvm.dbg.value(metadata i32 %5, metadata !17431, metadata !DIExpression()), !dbg !17435
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17449
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17093, metadata !DIExpression()) #23, !dbg !17449
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17451
  br i1 %6, label %8, label %7, !dbg !17452

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17453
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17453
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17453
  unreachable, !dbg !17453

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17439
  call void @llvm.dbg.value(metadata i32 %9, metadata !17027, metadata !DIExpression()) #23, !dbg !17441
  call void @llvm.dbg.value(metadata i32 %9, metadata !17021, metadata !DIExpression()) #23, !dbg !17437
  call void @llvm.dbg.value(metadata i32 %9, metadata !17434, metadata !DIExpression()), !dbg !17436
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17449
  call void @llvm.dbg.value(metadata i32 undef, metadata !17102, metadata !DIExpression()) #23, !dbg !17454
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17456, !srcloc !17108
  call void @llvm.dbg.value(metadata i32 %5, metadata !17431, metadata !DIExpression()), !dbg !17435
  call void @llvm.dbg.value(metadata i32 undef, metadata !17432, metadata !DIExpression()), !dbg !17436
  ret i32 %5, !dbg !17457
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17458 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17460, metadata !DIExpression()), !dbg !17470
  call void @llvm.dbg.value(metadata i1 %1, metadata !17461, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17470
  call void @llvm.dbg.value(metadata i32 0, metadata !17462, metadata !DIExpression()), !dbg !17471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17015, metadata !DIExpression()) #23, !dbg !17472
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17474, !srcloc !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17476
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()) #23, !dbg !17476
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17472
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17477
  br i1 %4, label %6, label %5, !dbg !17478

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17479
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17479
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17479
  unreachable, !dbg !17479

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17476
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17472
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17480
  call void @llvm.dbg.value(metadata i32 undef, metadata !17464, metadata !DIExpression()), !dbg !17471
  call void @llvm.dbg.value(metadata i32 undef, metadata !17462, metadata !DIExpression()), !dbg !17471
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17481
  call void @llvm.dbg.value(metadata i32 %7, metadata !17465, metadata !DIExpression()), !dbg !17482
  call void @llvm.dbg.value(metadata i1 undef, metadata !17468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17482
  %8 = icmp slt i32 %7, 2, !dbg !17483
  call void @llvm.dbg.value(metadata i1 %8, metadata !17469, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17482
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17484
  call void @llvm.dbg.value(metadata i1 %9, metadata !17468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17482
  br i1 %10, label %14, label %11, !dbg !17484

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17486
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17486
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17488
  br label %14, !dbg !17489

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17093, metadata !DIExpression()) #23, !dbg !17490
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17492
  br i1 %15, label %17, label %16, !dbg !17493

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17494
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17494
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17494
  unreachable, !dbg !17494

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17474
  call void @llvm.dbg.value(metadata i32 %18, metadata !17027, metadata !DIExpression()) #23, !dbg !17476
  call void @llvm.dbg.value(metadata i32 %18, metadata !17021, metadata !DIExpression()) #23, !dbg !17472
  call void @llvm.dbg.value(metadata i32 %18, metadata !17464, metadata !DIExpression()), !dbg !17471
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17490
  call void @llvm.dbg.value(metadata i32 undef, metadata !17102, metadata !DIExpression()) #23, !dbg !17495
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17497, !srcloc !17108
  call void @llvm.dbg.value(metadata i32 1, metadata !17462, metadata !DIExpression()), !dbg !17471
  call void @llvm.dbg.value(metadata i32 undef, metadata !17462, metadata !DIExpression()), !dbg !17471
  ret void, !dbg !17498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17503, metadata !DIExpression()), !dbg !17508
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17015, metadata !DIExpression()) #23, !dbg !17510
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17512, !srcloc !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17514
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()) #23, !dbg !17514
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17510
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17515
  br i1 %3, label %5, label %4, !dbg !17516

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17517
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17517
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17517
  unreachable, !dbg !17517

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17514
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17510
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17518
  call void @llvm.dbg.value(metadata i32 undef, metadata !17504, metadata !DIExpression()), !dbg !17508
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17508
  call void @llvm.dbg.value(metadata i32 undef, metadata !17504, metadata !DIExpression()), !dbg !17508
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17519
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17520
  br i1 %7, label %37, label %8, !dbg !17521

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17508
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17522
  %14 = load i64, i64* %13, align 8, !dbg !17522
  %15 = sext i32 %11 to i64, !dbg !17523
  %16 = icmp sgt i64 %14, %15, !dbg !17524
  br i1 %16, label %35, label %17, !dbg !17525

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17505, metadata !DIExpression()), !dbg !17526
  %18 = trunc i64 %14 to i32, !dbg !17527
  call void @llvm.dbg.value(metadata i32 %18, metadata !17507, metadata !DIExpression()), !dbg !17526
  %19 = sext i32 %18 to i64, !dbg !17528
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17529
  %21 = add i64 %20, %19, !dbg !17529
  store i64 %21, i64* @curr_tick, align 8, !dbg !17529
  store i64 0, i64* %13, align 8, !dbg !17530
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17531
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17093, metadata !DIExpression()) #23, !dbg !17532
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17534
  br i1 %22, label %24, label %23, !dbg !17535

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17536
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17536
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17536
  unreachable, !dbg !17536

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !17088, metadata !DIExpression()) #23, !dbg !17532
  call void @llvm.dbg.value(metadata i32 %12, metadata !17102, metadata !DIExpression()) #23, !dbg !17537
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17539, !srcloc !17108
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17540
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17540
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17541
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17015, metadata !DIExpression()) #23, !dbg !17542
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17544, !srcloc !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17546
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()) #23, !dbg !17546
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17542
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17547
  br i1 %28, label %30, label %29, !dbg !17548

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17549
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17549
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17549
  unreachable, !dbg !17549

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17546
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17542
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17550
  call void @llvm.dbg.value(metadata i32 undef, metadata !17504, metadata !DIExpression()), !dbg !17508
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17551
  %32 = sub nsw i32 %31, %18, !dbg !17551
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17508
  call void @llvm.dbg.value(metadata i32 undef, metadata !17504, metadata !DIExpression()), !dbg !17508
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17519
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17520
  br i1 %34, label %37, label %8, !dbg !17521, !llvm.loop !17552

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17554
  store i64 %36, i64* %13, align 8, !dbg !17554
  br label %41, !dbg !17557

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17508
  %40 = sext i32 %39 to i64, !dbg !17558
  br label %41, !dbg !17558

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17558
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17559
  %45 = add i64 %44, %42, !dbg !17559
  store i64 %45, i64* @curr_tick, align 8, !dbg !17559
  store i32 0, i32* @announce_remaining, align 4, !dbg !17560
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17561
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17562
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17563
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17093, metadata !DIExpression()) #23, !dbg !17563
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17565
  br i1 %47, label %49, label %48, !dbg !17566

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17567
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17567
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17567
  unreachable, !dbg !17567

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17508
  call void @llvm.dbg.value(metadata i32 %50, metadata !17088, metadata !DIExpression()) #23, !dbg !17563
  call void @llvm.dbg.value(metadata i32 %50, metadata !17102, metadata !DIExpression()) #23, !dbg !17568
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17570, !srcloc !17108
  ret void, !dbg !17571
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17572 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17576, metadata !DIExpression()), !dbg !17580
  call void @llvm.dbg.value(metadata i32 0, metadata !17577, metadata !DIExpression()), !dbg !17581
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17015, metadata !DIExpression()) #23, !dbg !17582
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17584, !srcloc !17030
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17586
  call void @llvm.dbg.value(metadata i32 undef, metadata !17028, metadata !DIExpression()) #23, !dbg !17586
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17582
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17587
  br i1 %2, label %4, label %3, !dbg !17588

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.354, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17589
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.356, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17589
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 148) #25, !dbg !17589
  unreachable, !dbg !17589

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !17027, metadata !DIExpression()) #23, !dbg !17586
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()) #23, !dbg !17582
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17590
  call void @llvm.dbg.value(metadata i32 undef, metadata !17579, metadata !DIExpression()), !dbg !17581
  call void @llvm.dbg.value(metadata i64 0, metadata !17576, metadata !DIExpression()), !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()), !dbg !17581
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17591
  %6 = tail call fastcc i32 @elapsed.357() #24, !dbg !17594
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17576, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17595
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !17093, metadata !DIExpression()) #23, !dbg !17595
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17597
  br i1 %7, label %9, label %8, !dbg !17598

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.350, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.360, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17599
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.361, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17599
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.355, i32 0, i32 0), i32 noundef 194) #25, !dbg !17599
  unreachable, !dbg !17599

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17584
  call void @llvm.dbg.value(metadata i32 %10, metadata !17027, metadata !DIExpression()) #23, !dbg !17586
  call void @llvm.dbg.value(metadata i32 %10, metadata !17021, metadata !DIExpression()) #23, !dbg !17582
  call void @llvm.dbg.value(metadata i32 %10, metadata !17579, metadata !DIExpression()), !dbg !17581
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17576, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17580
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17576, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17580
  call void @llvm.dbg.value(metadata i32 undef, metadata !17088, metadata !DIExpression()) #23, !dbg !17595
  call void @llvm.dbg.value(metadata i32 undef, metadata !17102, metadata !DIExpression()) #23, !dbg !17600
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17602, !srcloc !17108
  call void @llvm.dbg.value(metadata i32 undef, metadata !17577, metadata !DIExpression()), !dbg !17581
  %11 = sext i32 %6 to i64, !dbg !17594
  %12 = add i64 %5, %11, !dbg !17603
  ret i64 %12, !dbg !17604
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17605 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17606
  %2 = trunc i64 %1 to i32, !dbg !17607
  ret i32 %2, !dbg !17608
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17609 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17610
  ret i64 %1, !dbg !17611
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17612 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17614, metadata !DIExpression()), !dbg !17621
  %2 = icmp eq i32 %0, 0, !dbg !17622
  br i1 %2, label %10, label %3, !dbg !17624

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32.377() #24, !dbg !17625
  call void @llvm.dbg.value(metadata i32 %4, metadata !17615, metadata !DIExpression()), !dbg !17621
  %5 = shl i32 %0, 5, !dbg !17626
  call void @llvm.dbg.value(metadata i32 %5, metadata !17616, metadata !DIExpression()), !dbg !17621
  br label %6, !dbg !17627

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32.377() #24, !dbg !17628
  call void @llvm.dbg.value(metadata i32 %7, metadata !17617, metadata !DIExpression()), !dbg !17629
  %8 = sub i32 %7, %4, !dbg !17630
  %9 = icmp ult i32 %8, %5, !dbg !17632
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17633
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32.377() unnamed_addr #1 !dbg !17634 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32.378() #24, !dbg !17635
  ret i32 %1, !dbg !17636
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32.378() unnamed_addr #1 !dbg !17637 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17638
  ret i32 %1, !dbg !17639
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17640 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17644, metadata !DIExpression()), !dbg !17646
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17647

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17648
  br label %14, !dbg !17652

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17645, metadata !DIExpression()), !dbg !17646
  %6 = icmp slt i64 %2, -1, !dbg !17653
  br i1 %6, label %7, label %9, !dbg !17656

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17657
  br label %14, !dbg !17658

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17660
  %11 = icmp ugt i64 %2, 1, !dbg !17661
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17661
  %13 = add nsw i64 %10, %12, !dbg !17662
  br label %14, !dbg !17663

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17664
  ret i64 %15, !dbg !17665
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17666 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.381, i32 0, i32 0)) #25, !dbg !17668
  ret void, !dbg !17669
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!1005, !2, !2519, !27, !177, !209, !2521, !2523, !2557, !2559, !218, !281, !2561, !2564, !2575, !2621, !2623, !2651, !2679, !2722, !2794, !2839, !310, !471, !2867, !507, !517, !542, !650, !817, !852, !1035, !2872, !1151, !1217, !1486, !1726, !2893, !1841, !1928, !2895, !2966, !3015, !1963, !3018, !1970, !2342, !3036, !2362, !3038, !2480, !3041}
!llvm.ident = !{!3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043, !3043}
!llvm.module.flags = !{!3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "z_ztest_suite_node_stats_test_pytest", scope: !27, file: !111, line: 8, type: !149, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !108, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_NODE", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_ZTEST_SUITE_STATS", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_ZTEST_UNIT_TEST", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_ZTEST_TEST_RULE", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 66)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 67)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 68)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 69)
!104 = !DIEnumerator(name: "K_OBJ_LAST", value: 70)
!105 = !{!106, !107}
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !{!109, !155, !25, !173}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "z_ztest_test_node_test_pytest", scope: !27, file: !111, line: 8, type: !112, isLocal: true, isDefinition: true, align: 32)
!111 = !DIFile(filename: "zephyr/samples/subsys/testsuite/pytest/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !115)
!114 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/include/zephyr/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!115 = !{!116, !121, !127, !133, !136, !139, !146}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !113, file: !114, line: 179, baseType: !117, size: 32)
!117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !113, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !123)
!123 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_setup_t", file: !114, line: 141, baseType: !124)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!125 = !DISubroutineType(types: !126)
!126 = !{!106}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !113, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_before_t", file: !114, line: 148, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 32)
!131 = !DISubroutineType(types: !132)
!132 = !{null, !106}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !113, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!135 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_after_t", file: !114, line: 155, baseType: !130)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !113, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_teardown_t", file: !114, line: 162, baseType: !130)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !113, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_suite_predicate_t", file: !114, line: 171, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!143 = !DISubroutineType(types: !144)
!144 = !{!145, !13}
!145 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !113, file: !114, line: 197, baseType: !147, size: 32, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !150)
!150 = !{!151, !153, !154}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !149, file: !114, line: 116, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !149, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !149, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!155 = !DIGlobalVariableExpression(var: !156, expr: !DIExpression())
!156 = distinct !DIGlobalVariable(name: "z_ztest_unit_test__test_pytest__test_pytest", scope: !27, file: !111, line: 10, type: !157, isLocal: true, isDefinition: true, align: 32)
!157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !157, file: !114, line: 98, baseType: !118, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !157, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !157, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !157, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !157, file: !114, line: 104, baseType: !164, size: 32, offset: 128)
!164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !167)
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !166, file: !114, line: 125, baseType: !152, size: 32)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !166, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !166, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !166, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !166, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!173 = !DIGlobalVariableExpression(var: !174, expr: !DIExpression())
!174 = distinct !DIGlobalVariable(name: "z_ztest_unit_test_stats_test_pytest_test_pytest", scope: !27, file: !111, line: 10, type: !166, isLocal: false, isDefinition: true)
!175 = !DIGlobalVariableExpression(var: !176, expr: !DIExpression())
!176 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !177, file: !200, line: 18, type: !201, isLocal: false, isDefinition: true)
!177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !178, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !179, globals: !199, splitDebugInlining: false, nameTableKind: None)
!178 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!179 = !{!22, !106, !24, !180, !182, !184, !185, !107, !187, !188, !190, !192, !193, !194, !197, !118}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 32)
!183 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !186, line: 214, baseType: !32)
!186 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!189 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 32)
!191 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !196)
!196 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !198)
!198 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!199 = !{!175}
!200 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !204)
!203 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !202, file: !203, line: 17, baseType: !118, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "_char_out", scope: !209, file: !212, line: 54, type: !213, isLocal: false, isDefinition: true)
!209 = distinct !DICompileUnit(language: DW_LANG_C99, file: !210, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !211, splitDebugInlining: false, nameTableKind: None)
!210 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!211 = !{!207}
!212 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 32)
!214 = !DISubroutineType(types: !215)
!215 = !{!107, !107}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !218, file: !248, line: 60, type: !249, isLocal: true, isDefinition: true, align: 32)
!218 = distinct !DICompileUnit(language: DW_LANG_C99, file: !219, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !220, globals: !247, splitDebugInlining: false, nameTableKind: None)
!219 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!220 = !{!221, !241}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !224)
!223 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !224, file: !223, line: 372, baseType: !227, size: 32)
!227 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !152)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !224, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !224, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !224, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !224, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !224, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !224, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !224, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !224, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !224, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !224, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !224, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !224, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !224, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 364, baseType: !243)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 64, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !243, file: !223, line: 362, baseType: !227, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !243, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!247 = !{!216}
!248 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !250)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253, !278}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !250, file: !251, line: 60, baseType: !254, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!107, !257}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !261)
!260 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!261 = !{!262, !263, !264, !265, !271, !272}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !259, file: !260, line: 380, baseType: !118, size: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !259, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !259, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !259, file: !260, line: 386, baseType: !266, size: 32, offset: 96)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 32)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !268)
!268 = !{!269, !270}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !267, file: !260, line: 359, baseType: !195, size: 8)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !267, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !259, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !259, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !260, line: 43, baseType: !276)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !277)
!277 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !250, file: !251, line: 65, baseType: !257, size: 32, offset: 32)
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !281, file: !284, line: 71, type: !285, isLocal: true, isDefinition: true, align: 32)
!281 = distinct !DICompileUnit(language: DW_LANG_C99, file: !282, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !283, splitDebugInlining: false, nameTableKind: None)
!282 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!283 = !{!279}
!284 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !286)
!286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !287)
!287 = !{!288, !307}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !286, file: !251, line: 60, baseType: !289, size: 32)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 32)
!290 = !DISubroutineType(types: !291)
!291 = !{!107, !292}
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 32)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !294)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !295)
!295 = !{!296, !297, !298, !299, !305, !306}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !294, file: !260, line: 380, baseType: !118, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !294, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !294, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !294, file: !260, line: 386, baseType: !300, size: 32, offset: 96)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !302)
!302 = !{!303, !304}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !301, file: !260, line: 359, baseType: !195, size: 8)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !301, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !294, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !294, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !286, file: !251, line: 65, baseType: !292, size: 32, offset: 32)
!308 = !DIGlobalVariableExpression(var: !309, expr: !DIExpression())
!309 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !310, file: !317, line: 17, type: !464, isLocal: false, isDefinition: true)
!310 = distinct !DICompileUnit(language: DW_LANG_C99, file: !311, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !312, globals: !313, splitDebugInlining: false, nameTableKind: None)
!311 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!312 = !{!185, !107, !152, !106}
!313 = !{!308, !314, !460}
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !316, file: !317, line: 198, type: !446, isLocal: true, isDefinition: true)
!316 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !317, file: !317, line: 175, type: !318, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !310, retainedNodes: !441)
!317 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!318 = !DISubroutineType(types: !319)
!319 = !{null, !320}
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 32)
!321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !323)
!322 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!323 = !{!324, !390, !403, !404, !405, !409, !410, !416, !436}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !321, file: !322, line: 247, baseType: !325, size: 384)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !326)
!326 = !{!327, !355, !363, !364, !365, !376, !377, !378}
!327 = !DIDerivedType(tag: DW_TAG_member, scope: !325, file: !322, line: 60, baseType: !328, size: 64)
!328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !325, file: !322, line: 60, size: 64, elements: !329)
!329 = !{!330, !346}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !328, file: !322, line: 61, baseType: !331, size: 64)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !333)
!332 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !334)
!334 = !{!335, !341}
!335 = !DIDerivedType(tag: DW_TAG_member, scope: !333, file: !332, line: 38, baseType: !336, size: 32)
!336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !333, file: !332, line: 38, size: 32, elements: !337)
!337 = !{!338, !340}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !336, file: !332, line: 39, baseType: !339, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !336, file: !332, line: 40, baseType: !339, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, scope: !333, file: !332, line: 42, baseType: !342, size: 32, offset: 32)
!342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !333, file: !332, line: 42, size: 32, elements: !343)
!343 = !{!344, !345}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !342, file: !332, line: 43, baseType: !339, size: 32)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !342, file: !332, line: 44, baseType: !339, size: 32)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !328, file: !322, line: 62, baseType: !347, size: 64)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !349)
!348 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !347, file: !348, line: 50, baseType: !351, size: 64)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !352, size: 64, elements: !353)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!353 = !{!354}
!354 = !DISubrange(count: 2)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !325, file: !322, line: 68, baseType: !356, size: 32, offset: 64)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 32)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !359)
!358 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !360)
!360 = !{!361}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !359, file: !358, line: 232, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !333)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !325, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !325, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!365 = !DIDerivedType(tag: DW_TAG_member, scope: !325, file: !322, line: 90, baseType: !366, size: 16, offset: 112)
!366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !325, file: !322, line: 90, size: 16, elements: !367)
!367 = !{!368, !375}
!368 = !DIDerivedType(tag: DW_TAG_member, scope: !366, file: !322, line: 91, baseType: !369, size: 16)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !366, file: !322, line: 91, size: 16, elements: !370)
!370 = !{!371, !374}
!371 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !369, file: !322, line: 96, baseType: !372, size: 8)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !373)
!373 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !369, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !366, file: !322, line: 100, baseType: !197, size: 16)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !325, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !325, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !325, file: !322, line: 131, baseType: !379, size: 192, offset: 192)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !380)
!380 = !{!381, !382, !388}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !379, file: !358, line: 245, baseType: !331, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !379, file: !358, line: 246, baseType: !383, size: 32, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !384)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DISubroutineType(types: !386)
!386 = !{null, !387}
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !379, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !191)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !321, file: !322, line: 250, baseType: !391, size: 288, offset: 384)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !393)
!392 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!393 = !{!394, !395, !396, !397, !398, !399, !400, !401, !402}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !391, file: !392, line: 26, baseType: !152, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !391, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !391, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !391, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !391, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !391, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !391, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !391, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !391, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !321, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !321, file: !322, line: 256, baseType: !357, size: 64, offset: 704)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !321, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !407)
!407 = !{!408}
!408 = !DISubrange(count: 32)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !321, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !321, file: !322, line: 300, baseType: !411, size: 96, offset: 1056)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !412)
!412 = !{!413, !414, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !411, file: !322, line: 153, baseType: !22, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !411, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !411, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !321, file: !322, line: 325, baseType: !417, size: 32, offset: 1152)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !420)
!419 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = !{!421, !430, !431}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !418, file: !419, line: 5074, baseType: !422, size: 96)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !424)
!423 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!424 = !{!425, !428, !429}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !422, file: !423, line: 57, baseType: !426, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 32)
!427 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !423, line: 57, flags: DIFlagFwdDecl)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !422, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !422, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !418, file: !419, line: 5075, baseType: !357, size: 64, offset: 96)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !418, file: !419, line: 5076, baseType: !432, size: 32, offset: 160)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !434)
!433 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!434 = !{!435}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !432, file: !433, line: 52, baseType: !22, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !321, file: !322, line: 343, baseType: !437, size: 64, offset: 1184)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !438)
!438 = !{!439, !440}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !437, file: !392, line: 63, baseType: !152, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !437, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!441 = !{!442, !443, !444, !445}
!442 = !DILocalVariable(name: "thread", arg: 1, scope: !316, file: !317, line: 175, type: !320)
!443 = !DILocalVariable(name: "region_num", scope: !316, file: !317, line: 200, type: !195)
!444 = !DILocalVariable(name: "guard_start", scope: !316, file: !317, line: 265, type: !22)
!445 = !DILocalVariable(name: "guard_size", scope: !316, file: !317, line: 266, type: !185)
!446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !447, size: 96, elements: !458)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !448, line: 52, size: 96, elements: !449)
!448 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!449 = !{!450, !451, !452}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !447, file: !448, line: 53, baseType: !22, size: 32)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !447, file: !448, line: 54, baseType: !185, size: 32, offset: 32)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !447, file: !448, line: 55, baseType: !453, size: 32, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !454, line: 151, baseType: !455)
!454 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !454, line: 149, size: 32, elements: !456)
!456 = !{!457}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !455, file: !454, line: 150, baseType: !152, size: 32)
!458 = !{!459}
!459 = !DISubrange(count: 1)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "static_regions", scope: !310, file: !317, line: 62, type: !462, isLocal: true, isDefinition: true)
!462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 96, elements: !458)
!463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !447)
!464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !465, file: !203, line: 17, baseType: !118, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !465, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!469 = !DIGlobalVariableExpression(var: !470, expr: !DIExpression())
!470 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !471, file: !504, line: 39, type: !195, isLocal: true, isDefinition: true)
!471 = distinct !DICompileUnit(language: DW_LANG_C99, file: !472, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !473, globals: !503, splitDebugInlining: false, nameTableKind: None)
!472 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!473 = !{!474, !106, !107, !491, !195}
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !476, line: 1168, baseType: !477)
!476 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 1155, size: 352, elements: !478)
!478 = !{!479, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !477, file: !476, line: 1157, baseType: !480, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !477, file: !476, line: 1158, baseType: !227, size: 32, offset: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !477, file: !476, line: 1159, baseType: !227, size: 32, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !477, file: !476, line: 1160, baseType: !227, size: 32, offset: 96)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !477, file: !476, line: 1161, baseType: !227, size: 32, offset: 128)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !477, file: !476, line: 1162, baseType: !227, size: 32, offset: 160)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !477, file: !476, line: 1163, baseType: !227, size: 32, offset: 192)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !477, file: !476, line: 1164, baseType: !227, size: 32, offset: 224)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !477, file: !476, line: 1165, baseType: !227, size: 32, offset: 256)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !477, file: !476, line: 1166, baseType: !227, size: 32, offset: 288)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !477, file: !476, line: 1167, baseType: !227, size: 32, offset: 320)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 32)
!492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !494, line: 27, size: 96, elements: !495)
!494 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!495 = !{!496, !497, !498}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !493, file: !494, line: 29, baseType: !152, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !493, file: !494, line: 31, baseType: !118, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !493, file: !494, line: 37, baseType: !499, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !454, line: 146, baseType: !500)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !454, line: 141, size: 32, elements: !501)
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !500, file: !454, line: 143, baseType: !152, size: 32)
!503 = !{!469}
!504 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !507, file: !514, line: 21, type: !213, isLocal: true, isDefinition: true)
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !509, globals: !513, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!509 = !{!510, !107, !106}
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !512, line: 22, baseType: !107)
!512 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!513 = !{!505}
!514 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!515 = !DIGlobalVariableExpression(var: !516, expr: !DIExpression())
!516 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !517, file: !522, line: 13, type: !539, isLocal: true, isDefinition: true)
!517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !518, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !519, splitDebugInlining: false, nameTableKind: None)
!518 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!519 = !{!520, !515}
!520 = !DIGlobalVariableExpression(var: !521, expr: !DIExpression())
!521 = distinct !DIGlobalVariable(name: "mpu_config", scope: !517, file: !522, line: 37, type: !523, isLocal: false, isDefinition: true)
!522 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !494, line: 41, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !524, file: !494, line: 43, baseType: !152, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !524, file: !494, line: 45, baseType: !528, size: 32, offset: 32)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !530)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !494, line: 27, size: 96, elements: !531)
!531 = !{!532, !533, !534}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !530, file: !494, line: 29, baseType: !152, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !530, file: !494, line: 31, baseType: !118, size: 32, offset: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !530, file: !494, line: 37, baseType: !535, size: 32, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !454, line: 146, baseType: !536)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !454, line: 141, size: 32, elements: !537)
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !536, file: !454, line: 143, baseType: !152, size: 32)
!539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 192, elements: !353)
!540 = !DIGlobalVariableExpression(var: !541, expr: !DIExpression())
!541 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !542, file: !639, line: 36, type: !640, isLocal: true, isDefinition: true, align: 32)
!542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !544, retainedTypes: !556, globals: !638, splitDebugInlining: false, nameTableKind: None)
!543 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!544 = !{!545, !551}
!545 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !546, line: 506, baseType: !32, size: 32, elements: !547)
!546 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!547 = !{!548, !549, !550}
!548 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!549 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!550 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!551 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !546, line: 512, baseType: !32, size: 32, elements: !552)
!552 = !{!553, !554, !555}
!553 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!554 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!555 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!556 = !{!557, !627, !632, !592, !551, !545, !637, !106}
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !546, line: 523, size: 288, elements: !560)
!560 = !{!561, !582, !588, !593, !597, !598, !599, !603, !623}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !559, file: !546, line: 524, baseType: !562, size: 32)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 32)
!563 = !DISubroutineType(types: !564)
!564 = !{!107, !565, !580, !581}
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !567)
!567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !568)
!568 = !{!569, !570, !571, !572, !578, !579}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !567, file: !260, line: 380, baseType: !118, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !567, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !567, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !567, file: !260, line: 386, baseType: !573, size: 32, offset: 96)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 32)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !575)
!575 = !{!576, !577}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !574, file: !260, line: 359, baseType: !195, size: 8)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !574, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !567, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !567, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !546, line: 237, baseType: !195)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !546, line: 257, baseType: !152)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !559, file: !546, line: 530, baseType: !583, size: 32, offset: 32)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 32)
!584 = !DISubroutineType(types: !585)
!585 = !{!107, !565, !586}
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !546, line: 229, baseType: !152)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !559, file: !546, line: 532, baseType: !589, size: 32, offset: 64)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 32)
!590 = !DISubroutineType(types: !591)
!591 = !{!107, !565, !592, !587}
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !546, line: 216, baseType: !152)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !559, file: !546, line: 535, baseType: !594, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 32)
!595 = !DISubroutineType(types: !596)
!596 = !{!107, !565, !592}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !559, file: !546, line: 537, baseType: !594, size: 32, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !559, file: !546, line: 539, baseType: !594, size: 32, offset: 160)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !559, file: !546, line: 541, baseType: !600, size: 32, offset: 192)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 32)
!601 = !DISubroutineType(types: !602)
!602 = !{!107, !565, !580, !545, !551}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !559, file: !546, line: 544, baseType: !604, size: 32, offset: 224)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 32)
!605 = !DISubroutineType(types: !606)
!606 = !{!107, !565, !607, !145}
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 32)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !546, line: 478, size: 96, elements: !609)
!609 = !{!610, !617, !622}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !608, file: !546, line: 482, baseType: !611, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !612, line: 33, baseType: !613)
!612 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !612, line: 29, size: 32, elements: !614)
!614 = !{!615}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !613, file: !612, line: 30, baseType: !616, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !608, file: !546, line: 485, baseType: !618, size: 32, offset: 32)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !546, line: 464, baseType: !619)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 32)
!620 = !DISubroutineType(types: !621)
!621 = !{null, !565, !607, !592}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !608, file: !546, line: 493, baseType: !592, size: 32, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !559, file: !546, line: 547, baseType: !624, size: 32, offset: 256)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 32)
!625 = !DISubroutineType(types: !626)
!626 = !{!152, !565}
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !629)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !546, line: 428, size: 32, elements: !630)
!630 = !{!631}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !629, file: !546, line: 434, baseType: !592, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !546, line: 441, size: 32, elements: !635)
!635 = !{!636}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !634, file: !546, line: 447, baseType: !592, size: 32)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 32)
!638 = !{!540}
!639 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !641)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !642)
!642 = !{!643, !647}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !641, file: !251, line: 60, baseType: !644, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 32)
!645 = !DISubroutineType(types: !646)
!646 = !{!107, !565}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !641, file: !251, line: 65, baseType: !565, size: 32, offset: 32)
!648 = !DIGlobalVariableExpression(var: !649, expr: !DIExpression())
!649 = distinct !DIGlobalVariable(name: "phase", scope: !650, file: !654, line: 61, type: !653, isLocal: false, isDefinition: true)
!650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !652, retainedTypes: !679, globals: !689, splitDebugInlining: false, nameTableKind: None)
!651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!652 = !{!653, !662, !670, !30, !675}
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_phase", file: !654, line: 40, baseType: !32, size: 32, elements: !655)
!654 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_new.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!655 = !{!656, !657, !658, !659, !660, !661}
!656 = !DIEnumerator(name: "TEST_PHASE_SETUP", value: 0)
!657 = !DIEnumerator(name: "TEST_PHASE_BEFORE", value: 1)
!658 = !DIEnumerator(name: "TEST_PHASE_TEST", value: 2)
!659 = !DIEnumerator(name: "TEST_PHASE_AFTER", value: 3)
!660 = !DIEnumerator(name: "TEST_PHASE_TEARDOWN", value: 4)
!661 = !DIEnumerator(name: "TEST_PHASE_FRAMEWORK", value: 5)
!662 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_result", file: !654, line: 226, baseType: !32, size: 32, elements: !663)
!663 = !{!664, !665, !666, !667, !668, !669}
!664 = !DIEnumerator(name: "ZTEST_RESULT_PENDING", value: 0)
!665 = !DIEnumerator(name: "ZTEST_RESULT_PASS", value: 1)
!666 = !DIEnumerator(name: "ZTEST_RESULT_FAIL", value: 2)
!667 = !DIEnumerator(name: "ZTEST_RESULT_SKIP", value: 3)
!668 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_SKIP", value: 4)
!669 = !DIEnumerator(name: "ZTEST_RESULT_SUITE_FAIL", value: 5)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_status", file: !654, line: 52, baseType: !32, size: 32, elements: !671)
!671 = !{!672, !673, !674}
!672 = !DIEnumerator(name: "ZTEST_STATUS_OK", value: 0)
!673 = !DIEnumerator(name: "ZTEST_STATUS_HAS_FAILURE", value: 1)
!674 = !DIEnumerator(name: "ZTEST_STATUS_CRITICAL_ERROR", value: 2)
!675 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ztest_expected_result", file: !114, line: 36, baseType: !32, size: 32, elements: !676)
!676 = !{!677, !678}
!677 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_FAIL", value: 0)
!678 = !DIEnumerator(name: "ZTEST_EXPECTED_RESULT_SKIP", value: 1)
!679 = !{!106, !107, !185, !680, !685, !152, !687}
!680 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !681, line: 46, baseType: !682)
!681 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 32)
!683 = !DISubroutineType(types: !684)
!684 = !{null, !106, !106, !106}
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !686, line: 46, baseType: !389)
!686 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!687 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !688)
!688 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!689 = !{!648, !690, !692, !694, !703, !705, !809, !812}
!690 = !DIGlobalVariableExpression(var: !691, expr: !DIExpression())
!691 = distinct !DIGlobalVariable(name: "test_result", scope: !650, file: !654, line: 234, type: !662, isLocal: true, isDefinition: true)
!692 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression())
!693 = distinct !DIGlobalVariable(name: "current_test_failed_assumption", scope: !650, file: !654, line: 294, type: !145, isLocal: true, isDefinition: true)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "ztest_thread_stack", scope: !650, file: !654, line: 430, type: !696, isLocal: false, isDefinition: true, align: 512)
!696 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 8704, elements: !701)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !698, line: 47, size: 8, elements: !699)
!698 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !{!700}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !697, file: !698, line: 48, baseType: !120, size: 8)
!701 = !{!702}
!702 = !DISubrange(count: 1088)
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "test_status", scope: !650, file: !654, line: 63, type: !670, isLocal: true, isDefinition: true)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "ztest_thread", scope: !650, file: !654, line: 17, type: !707, isLocal: true, isDefinition: true)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !708)
!708 = !{!709, !767, !779, !780, !781, !782, !783, !789, !804}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !707, file: !322, line: 247, baseType: !710, size: 384)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !711)
!711 = !{!712, !736, !743, !744, !745, !754, !755, !756}
!712 = !DIDerivedType(tag: DW_TAG_member, scope: !710, file: !322, line: 60, baseType: !713, size: 64)
!713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !710, file: !322, line: 60, size: 64, elements: !714)
!714 = !{!715, !730}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !713, file: !322, line: 61, baseType: !716, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !718)
!718 = !{!719, !725}
!719 = !DIDerivedType(tag: DW_TAG_member, scope: !717, file: !332, line: 38, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !332, line: 38, size: 32, elements: !721)
!721 = !{!722, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !720, file: !332, line: 39, baseType: !723, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !720, file: !332, line: 40, baseType: !723, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, scope: !717, file: !332, line: 42, baseType: !726, size: 32, offset: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !332, line: 42, size: 32, elements: !727)
!727 = !{!728, !729}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !726, file: !332, line: 43, baseType: !723, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !726, file: !332, line: 44, baseType: !723, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !713, file: !322, line: 62, baseType: !731, size: 64)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !732)
!732 = !{!733}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !731, file: !348, line: 50, baseType: !734, size: 64)
!734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !735, size: 64, elements: !353)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !710, file: !322, line: 68, baseType: !737, size: 32, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !739, file: !358, line: 232, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !717)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !710, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !710, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!745 = !DIDerivedType(tag: DW_TAG_member, scope: !710, file: !322, line: 90, baseType: !746, size: 16, offset: 112)
!746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !710, file: !322, line: 90, size: 16, elements: !747)
!747 = !{!748, !753}
!748 = !DIDerivedType(tag: DW_TAG_member, scope: !746, file: !322, line: 91, baseType: !749, size: 16)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !746, file: !322, line: 91, size: 16, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !749, file: !322, line: 96, baseType: !372, size: 8)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !749, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !746, file: !322, line: 100, baseType: !197, size: 16)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !710, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !710, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !710, file: !322, line: 131, baseType: !757, size: 192, offset: 192)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !758)
!758 = !{!759, !760, !766}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !757, file: !358, line: 245, baseType: !716, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !757, file: !358, line: 246, baseType: !761, size: 32, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 32)
!763 = !DISubroutineType(types: !764)
!764 = !{null, !765}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !757, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !707, file: !322, line: 250, baseType: !768, size: 288, offset: 384)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !769)
!769 = !{!770, !771, !772, !773, !774, !775, !776, !777, !778}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !768, file: !392, line: 26, baseType: !152, size: 32)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !768, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !768, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !768, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !768, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !768, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !768, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !768, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !768, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !707, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !707, file: !322, line: 256, baseType: !738, size: 64, offset: 704)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !707, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !707, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !707, file: !322, line: 300, baseType: !784, size: 96, offset: 1056)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !785)
!785 = !{!786, !787, !788}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !784, file: !322, line: 153, baseType: !22, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !784, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !784, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !707, file: !322, line: 325, baseType: !790, size: 32, offset: 1152)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 32)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !792)
!792 = !{!793, !799, !800}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !791, file: !419, line: 5074, baseType: !794, size: 96)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !795)
!795 = !{!796, !797, !798}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !794, file: !423, line: 57, baseType: !426, size: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !794, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !794, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !791, file: !419, line: 5075, baseType: !738, size: 64, offset: 96)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !791, file: !419, line: 5076, baseType: !801, size: 32, offset: 160)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !802)
!802 = !{!803}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !801, file: !433, line: 52, baseType: !22, size: 32)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !707, file: !322, line: 343, baseType: !805, size: 64, offset: 1184)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !806)
!806 = !{!807, !808}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !805, file: !392, line: 63, baseType: !152, size: 32)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !805, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "tc_start_time", scope: !650, file: !811, line: 95, type: !152, isLocal: true, isDefinition: true)
!811 = !DIFile(filename: "zephyr/subsys/testsuite/include/zephyr/tc_util.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!812 = !DIGlobalVariableExpression(var: !813, expr: !DIExpression())
!813 = distinct !DIGlobalVariable(name: "tc_spend_time", scope: !650, file: !811, line: 96, type: !152, isLocal: true, isDefinition: true)
!814 = !DIGlobalVariableExpression(var: !693, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "ztest_api", scope: !817, file: !820, line: 70, type: !821, isLocal: false, isDefinition: true)
!817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !818, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !819, splitDebugInlining: false, nameTableKind: None)
!818 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!819 = !{!815}
!820 = !DIFile(filename: "zephyr/subsys/testsuite/ztest/src/ztest_defaults.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !822)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_arch_api", file: !114, line: 499, size: 96, elements: !823)
!823 = !{!824, !825, !846}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "run_all", scope: !822, file: !114, line: 500, baseType: !16, size: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "should_suite_run", scope: !822, file: !114, line: 501, baseType: !826, size: 32, offset: 32)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 32)
!827 = !DISubroutineType(types: !828)
!828 = !{!145, !13, !829}
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 32)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !831)
!831 = !{!832, !833, !834, !835, !836, !837, !838}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !830, file: !114, line: 179, baseType: !117, size: 32)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !830, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !830, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !830, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !830, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !830, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !830, file: !114, line: 197, baseType: !839, size: 32, offset: 192)
!839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !840)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !842)
!842 = !{!843, !844, !845}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !841, file: !114, line: 116, baseType: !152, size: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !841, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !841, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "should_test_run", scope: !822, file: !114, line: 502, baseType: !847, size: 32, offset: 64)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DISubroutineType(types: !849)
!849 = !{!145, !118, !118}
!850 = !DIGlobalVariableExpression(var: !851, expr: !DIExpression())
!851 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !852, file: !924, line: 48, type: !1000, isLocal: true, isDefinition: true)
!852 = distinct !DICompileUnit(language: DW_LANG_C99, file: !853, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !854, retainedTypes: !910, globals: !921, splitDebugInlining: false, nameTableKind: None)
!853 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!854 = !{!30, !855}
!855 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !223, line: 69, baseType: !107, size: 32, elements: !856)
!856 = !{!857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!857 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!858 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!859 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!860 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!861 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!862 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!863 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!864 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!865 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!866 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!867 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!868 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!869 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!870 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!871 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!872 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!873 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!874 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!875 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!876 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!877 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!878 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!879 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!880 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!881 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!882 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!883 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!884 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!885 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!886 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!887 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!888 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!889 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!890 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!891 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!892 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!893 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!894 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!895 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!896 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!897 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!898 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!899 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!900 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!901 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!902 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!903 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!904 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!905 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!906 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!907 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!908 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!909 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!910 = !{!185, !107, !106, !911}
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !223, line: 270, baseType: !913)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 262, size: 192, elements: !914)
!914 = !{!915, !916, !917, !918, !919, !920}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !913, file: !223, line: 264, baseType: !227, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !913, file: !223, line: 265, baseType: !227, size: 32, offset: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !913, file: !223, line: 266, baseType: !227, size: 32, offset: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !913, file: !223, line: 267, baseType: !227, size: 32, offset: 96)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !913, file: !223, line: 268, baseType: !227, size: 32, offset: 128)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !913, file: !223, line: 269, baseType: !227, size: 32, offset: 160)
!921 = !{!922, !928, !944, !955, !972, !850, !974, !988, !990, !992, !994, !996, !998}
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !852, file: !924, line: 424, type: !925, isLocal: false, isDefinition: true, align: 16)
!924 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 64, elements: !926)
!926 = !{!927}
!927 = !DISubrange(count: 4)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !852, file: !924, line: 424, type: !930, isLocal: false, isDefinition: true, align: 32)
!930 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !932)
!932 = !{!933, !934, !935, !936, !942, !943}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !931, file: !260, line: 380, baseType: !118, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !931, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !931, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !931, file: !260, line: 386, baseType: !937, size: 32, offset: 96)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !939)
!939 = !{!940, !941}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !938, file: !260, line: 359, baseType: !195, size: 8)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !938, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !931, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !931, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !852, file: !924, line: 424, type: !946, isLocal: true, isDefinition: true, align: 32)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !948)
!948 = !{!949, !954}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !947, file: !251, line: 60, baseType: !950, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{!107, !953}
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !947, file: !251, line: 65, baseType: !953, size: 32, offset: 32)
!955 = !DIGlobalVariableExpression(var: !956, expr: !DIExpression())
!956 = distinct !DIGlobalVariable(name: "exti_data", scope: !852, file: !924, line: 423, type: !957, isLocal: true, isDefinition: true)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !924, line: 107, size: 1024, elements: !958)
!958 = !{!959}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !957, file: !924, line: 109, baseType: !960, size: 1024)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, size: 1024, elements: !970)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !924, line: 101, size: 64, elements: !962)
!962 = !{!963, !969}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !961, file: !924, line: 102, baseType: !964, size: 32)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !965, line: 63, baseType: !966)
!965 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = !DISubroutineType(types: !968)
!968 = !{null, !107, !106}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !961, file: !924, line: 103, baseType: !106, size: 32, offset: 32)
!970 = !{!971}
!971 = !DISubrange(count: 16)
!972 = !DIGlobalVariableExpression(var: !973, expr: !DIExpression())
!973 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !852, file: !924, line: 424, type: !938, isLocal: true, isDefinition: true, align: 8)
!974 = !DIGlobalVariableExpression(var: !975, expr: !DIExpression())
!975 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !976, file: !924, line: 493, type: !981, isLocal: true, isDefinition: true, align: 32)
!976 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !924, file: !924, line: 460, type: !977, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !979)
!977 = !DISubroutineType(types: !978)
!978 = !{null, !953}
!979 = !{!980}
!980 = !DILocalVariable(name: "dev", arg: 1, scope: !976, file: !924, line: 460, type: !953)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !982)
!982 = !{!983, !985, !986, !987}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !981, file: !10, line: 55, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !981, file: !10, line: 57, baseType: !984, size: 32, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !981, file: !10, line: 59, baseType: !106, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !981, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!988 = !DIGlobalVariableExpression(var: !989, expr: !DIExpression())
!989 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !976, file: !924, line: 497, type: !981, isLocal: true, isDefinition: true, align: 32)
!990 = !DIGlobalVariableExpression(var: !991, expr: !DIExpression())
!991 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !976, file: !924, line: 507, type: !981, isLocal: true, isDefinition: true, align: 32)
!992 = !DIGlobalVariableExpression(var: !993, expr: !DIExpression())
!993 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !976, file: !924, line: 512, type: !981, isLocal: true, isDefinition: true, align: 32)
!994 = !DIGlobalVariableExpression(var: !995, expr: !DIExpression())
!995 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !976, file: !924, line: 516, type: !981, isLocal: true, isDefinition: true, align: 32)
!996 = !DIGlobalVariableExpression(var: !997, expr: !DIExpression())
!997 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !976, file: !924, line: 523, type: !981, isLocal: true, isDefinition: true, align: 32)
!998 = !DIGlobalVariableExpression(var: !999, expr: !DIExpression())
!999 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !976, file: !924, line: 527, type: !981, isLocal: true, isDefinition: true, align: 32)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 512, elements: !970)
!1001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1002)
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !223, line: 127, baseType: !855)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !1005, file: !1010, line: 21, type: !1030, isLocal: false, isDefinition: true, align: 16)
!1005 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1006, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1007, splitDebugInlining: false, nameTableKind: None)
!1006 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1007 = !{!1008, !1003, !1014, !1016, !1018, !1020, !1022, !1024, !1026, !1028}
!1008 = !DIGlobalVariableExpression(var: !1009, expr: !DIExpression())
!1009 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1005, file: !1010, line: 16, type: !1011, isLocal: false, isDefinition: true, align: 16)
!1010 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 176, elements: !1012)
!1012 = !{!1013}
!1013 = !DISubrange(count: 11)
!1014 = !DIGlobalVariableExpression(var: !1015, expr: !DIExpression())
!1015 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1005, file: !1010, line: 28, type: !925, isLocal: false, isDefinition: true, align: 16)
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1005, file: !1010, line: 35, type: !925, isLocal: false, isDefinition: true, align: 16)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1019 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1005, file: !1010, line: 42, type: !925, isLocal: false, isDefinition: true, align: 16)
!1020 = !DIGlobalVariableExpression(var: !1021, expr: !DIExpression())
!1021 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1005, file: !1010, line: 49, type: !925, isLocal: false, isDefinition: true, align: 16)
!1022 = !DIGlobalVariableExpression(var: !1023, expr: !DIExpression())
!1023 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1005, file: !1010, line: 56, type: !925, isLocal: false, isDefinition: true, align: 16)
!1024 = !DIGlobalVariableExpression(var: !1025, expr: !DIExpression())
!1025 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1005, file: !1010, line: 63, type: !925, isLocal: false, isDefinition: true, align: 16)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1005, file: !1010, line: 70, type: !925, isLocal: false, isDefinition: true, align: 16)
!1028 = !DIGlobalVariableExpression(var: !1029, expr: !DIExpression())
!1029 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1005, file: !1010, line: 77, type: !925, isLocal: false, isDefinition: true, align: 16)
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 48, elements: !1031)
!1031 = !{!1032}
!1032 = !DISubrange(count: 3)
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !1035, file: !1079, line: 398, type: !1110, isLocal: true, isDefinition: true)
!1035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1036, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1037, retainedTypes: !1050, globals: !1076, splitDebugInlining: false, nameTableKind: None)
!1036 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1037 = !{!1038, !30, !1043}
!1038 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1039, line: 190, baseType: !32, size: 32, elements: !1040)
!1039 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1040 = !{!1041, !1042}
!1041 = !DIEnumerator(name: "SUCCESS", value: 0)
!1042 = !DIEnumerator(name: "ERROR", value: 1)
!1043 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !1044, line: 44, baseType: !32, size: 32, elements: !1045)
!1044 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1045 = !{!1046, !1047, !1048, !1049}
!1046 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!1047 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!1048 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!1049 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!1050 = !{!106, !107, !152, !1051, !1069, !1075}
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1053, file: !223, line: 372, baseType: !227, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1053, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1053, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1053, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1053, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1053, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1053, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1053, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1053, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1053, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1053, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1053, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1053, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1053, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 32)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1071, line: 343, size: 64, elements: !1072)
!1071 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1072 = !{!1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1070, file: !1071, line: 344, baseType: !152, size: 32)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1070, file: !1071, line: 345, baseType: !152, size: 32, offset: 32)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!1076 = !{!1077, !1081, !1097, !1108, !1033}
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !1035, file: !1079, line: 752, type: !1080, isLocal: false, isDefinition: true, align: 16)
!1079 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 512, elements: !407)
!1081 = !DIGlobalVariableExpression(var: !1082, expr: !DIExpression())
!1082 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !1035, file: !1079, line: 752, type: !1083, isLocal: false, isDefinition: true, align: 32)
!1083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1084)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1095, !1096}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1084, file: !260, line: 380, baseType: !118, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1084, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1084, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1084, file: !260, line: 386, baseType: !1090, size: 32, offset: 96)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1092)
!1092 = !{!1093, !1094}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1091, file: !260, line: 359, baseType: !195, size: 8)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1091, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1084, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1084, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1097 = !DIGlobalVariableExpression(var: !1098, expr: !DIExpression())
!1098 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !1035, file: !1079, line: 752, type: !1099, isLocal: true, isDefinition: true, align: 32)
!1099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1101)
!1101 = !{!1102, !1107}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1100, file: !251, line: 60, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 32)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!107, !1106}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1100, file: !251, line: 65, baseType: !1106, size: 32, offset: 32)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !1035, file: !1079, line: 752, type: !1091, isLocal: true, isDefinition: true, align: 8)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1044, line: 100, size: 224, elements: !1111)
!1111 = !{!1112, !1118, !1119, !1128, !1133, !1138, !1144}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1110, file: !1044, line: 101, baseType: !1113, size: 32)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1044, line: 76, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!107, !1106, !1117}
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !1044, line: 56, baseType: !106)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1110, file: !1044, line: 102, baseType: !1113, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1110, file: !1044, line: 103, baseType: !1120, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1044, line: 83, baseType: !1121)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 32)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!107, !1106, !1117, !1124, !106}
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1044, line: 72, baseType: !1125)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{null, !1106, !1117, !106}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1110, file: !1044, line: 104, baseType: !1129, size: 32, offset: 96)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1044, line: 79, baseType: !1130)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!107, !1106, !1117, !1075}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1110, file: !1044, line: 105, baseType: !1134, size: 32, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1044, line: 88, baseType: !1135)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 32)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!1043, !1106, !1117}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1110, file: !1044, line: 106, baseType: !1139, size: 32, offset: 160)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1044, line: 92, baseType: !1140)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!107, !1106, !1117, !1143}
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !1044, line: 64, baseType: !106)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1110, file: !1044, line: 107, baseType: !1145, size: 32, offset: 192)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1044, line: 96, baseType: !1146)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!107, !1106, !1117, !106}
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1151, file: !1208, line: 603, type: !1210, isLocal: true, isDefinition: true, align: 32)
!1151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1152, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !1153, globals: !1205, splitDebugInlining: false, nameTableKind: None)
!1152 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1153 = !{!106, !107, !1154}
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1157, line: 336, size: 160, elements: !1158)
!1157 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1158 = !{!1159, !1179, !1183, !1187, !1200}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1156, file: !1157, line: 365, baseType: !1160, size: 32)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 32)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!107, !1163, !1178}
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1166)
!1166 = !{!1167, !1168, !1169, !1170, !1176, !1177}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1165, file: !260, line: 380, baseType: !118, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1165, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1165, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1165, file: !260, line: 386, baseType: !1171, size: 32, offset: 96)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1173)
!1173 = !{!1174, !1175}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1172, file: !260, line: 359, baseType: !195, size: 8)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1172, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1165, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1165, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1156, file: !1157, line: 366, baseType: !1180, size: 32, offset: 32)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{null, !1163, !196}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1156, file: !1157, line: 374, baseType: !1184, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!107, !1163}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1156, file: !1157, line: 377, baseType: !1188, size: 32, offset: 96)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!107, !1163, !1191}
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1157, line: 122, size: 64, elements: !1194)
!1194 = !{!1195, !1196, !1197, !1198, !1199}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1193, file: !1157, line: 123, baseType: !152, size: 32)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1193, file: !1157, line: 124, baseType: !195, size: 8, offset: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1193, file: !1157, line: 125, baseType: !195, size: 8, offset: 40)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1193, file: !1157, line: 126, baseType: !195, size: 8, offset: 48)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1193, file: !1157, line: 127, baseType: !195, size: 8, offset: 56)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1156, file: !1157, line: 379, baseType: !1201, size: 32, offset: 128)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!107, !1163, !1204}
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 32)
!1205 = !{!1149, !1206}
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1151, file: !1208, line: 38, type: !1209, isLocal: true, isDefinition: true)
!1208 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1212)
!1212 = !{!1213, !1214}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1211, file: !251, line: 60, baseType: !1184, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1211, file: !251, line: 65, baseType: !1163, size: 32, offset: 32)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1217, file: !1367, line: 762, type: !1465, isLocal: true, isDefinition: true)
!1217 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1218, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1219, retainedTypes: !1226, globals: !1364, splitDebugInlining: false, nameTableKind: None)
!1218 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1219 = !{!30, !545, !551, !1220, !1043}
!1220 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !965, line: 43, baseType: !32, size: 32, elements: !1221)
!1221 = !{!1222, !1223, !1224, !1225}
!1222 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1223 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1224 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1225 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1226 = !{!106, !107, !1227, !1291, !1296, !592, !551, !545, !1301, !1302, !152, !1316, !1272, !193, !1324, !1325}
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !546, line: 523, size: 288, elements: !1230)
!1230 = !{!1231, !1250, !1254, !1258, !1262, !1263, !1264, !1268, !1287}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1229, file: !546, line: 524, baseType: !1232, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DISubroutineType(types: !1234)
!1234 = !{!107, !1235, !580, !581}
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 32)
!1236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1238)
!1238 = !{!1239, !1240, !1241, !1242, !1248, !1249}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1237, file: !260, line: 380, baseType: !118, size: 32)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1237, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1237, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1237, file: !260, line: 386, baseType: !1243, size: 32, offset: 96)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 32)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1245)
!1245 = !{!1246, !1247}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1244, file: !260, line: 359, baseType: !195, size: 8)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1244, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1237, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1237, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1229, file: !546, line: 530, baseType: !1251, size: 32, offset: 32)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{!107, !1235, !586}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1229, file: !546, line: 532, baseType: !1255, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 32)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!107, !1235, !592, !587}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1229, file: !546, line: 535, baseType: !1259, size: 32, offset: 96)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 32)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!107, !1235, !592}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1229, file: !546, line: 537, baseType: !1259, size: 32, offset: 128)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1229, file: !546, line: 539, baseType: !1259, size: 32, offset: 160)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1229, file: !546, line: 541, baseType: !1265, size: 32, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!107, !1235, !580, !545, !551}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1229, file: !546, line: 544, baseType: !1269, size: 32, offset: 224)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!107, !1235, !1272, !145}
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !546, line: 478, size: 96, elements: !1274)
!1274 = !{!1275, !1281, !1286}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1273, file: !546, line: 482, baseType: !1276, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !612, line: 33, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !612, line: 29, size: 32, elements: !1278)
!1278 = !{!1279}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1277, file: !612, line: 30, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1273, file: !546, line: 485, baseType: !1282, size: 32, offset: 32)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !546, line: 464, baseType: !1283)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 32)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{null, !1235, !1272, !592}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1273, file: !546, line: 493, baseType: !592, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1229, file: !546, line: 547, baseType: !1288, size: 32, offset: 256)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!152, !1235}
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 32)
!1292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !546, line: 428, size: 32, elements: !1294)
!1294 = !{!1295}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1293, file: !546, line: 434, baseType: !592, size: 32)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !546, line: 441, size: 32, elements: !1299)
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1298, file: !546, line: 447, baseType: !592, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 314, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 303, size: 320, elements: !1305)
!1305 = !{!1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1304, file: !223, line: 305, baseType: !227, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1304, file: !223, line: 306, baseType: !227, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1304, file: !223, line: 307, baseType: !227, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1304, file: !223, line: 308, baseType: !227, size: 32, offset: 96)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1304, file: !223, line: 309, baseType: !227, size: 32, offset: 128)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1304, file: !223, line: 310, baseType: !227, size: 32, offset: 160)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1304, file: !223, line: 311, baseType: !227, size: 32, offset: 192)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1304, file: !223, line: 312, baseType: !227, size: 32, offset: 224)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1304, file: !223, line: 313, baseType: !1315, size: 64, offset: 256)
!1315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 64, elements: !353)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 32)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !223, line: 325, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 320, size: 192, elements: !1319)
!1319 = !{!1320, !1321, !1322}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1318, file: !223, line: 322, baseType: !227, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1318, file: !223, line: 323, baseType: !227, size: 32, offset: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1318, file: !223, line: 324, baseType: !1323, size: 128, offset: 64)
!1323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !926)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1044, line: 100, size: 224, elements: !1328)
!1328 = !{!1329, !1334, !1335, !1344, !1349, !1354, !1359}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1327, file: !1044, line: 101, baseType: !1330, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1044, line: 76, baseType: !1331)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 32)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!107, !1235, !1117}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1327, file: !1044, line: 102, baseType: !1330, size: 32, offset: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1327, file: !1044, line: 103, baseType: !1336, size: 32, offset: 64)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1044, line: 83, baseType: !1337)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!107, !1235, !1117, !1340, !106}
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1044, line: 72, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{null, !1235, !1117, !106}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1327, file: !1044, line: 104, baseType: !1345, size: 32, offset: 96)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1044, line: 79, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 32)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{!107, !1235, !1117, !1075}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1327, file: !1044, line: 105, baseType: !1350, size: 32, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1044, line: 88, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 32)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!1043, !1235, !1117}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1327, file: !1044, line: 106, baseType: !1355, size: 32, offset: 160)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1044, line: 92, baseType: !1356)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 32)
!1357 = !DISubroutineType(types: !1358)
!1358 = !{!107, !1235, !1117, !1143}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1327, file: !1044, line: 107, baseType: !1360, size: 32, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1044, line: 96, baseType: !1361)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 32)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!107, !1235, !1117, !106}
!1364 = !{!1365, !1371, !1373, !1383, !1388, !1390, !1392, !1397, !1399, !1401, !1406, !1408, !1410, !1412, !1414, !1416, !1421, !1423, !1425, !1439, !1441, !1443, !1445, !1447, !1449, !1451, !1453, !1455, !1457, !1459, !1215, !1461, !1463, !1476, !1478, !1480, !1482}
!1365 = !DIGlobalVariableExpression(var: !1366, expr: !DIExpression())
!1366 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !1217, file: !1367, line: 762, type: !1368, isLocal: false, isDefinition: true, align: 16)
!1367 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 128, elements: !1369)
!1369 = !{!1370}
!1370 = !DISubrange(count: 8)
!1371 = !DIGlobalVariableExpression(var: !1372, expr: !DIExpression())
!1372 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !1217, file: !1367, line: 762, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1373 = !DIGlobalVariableExpression(var: !1374, expr: !DIExpression())
!1374 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !1217, file: !1367, line: 762, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1377)
!1377 = !{!1378, !1382}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1376, file: !251, line: 60, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!107, !1235}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1376, file: !251, line: 65, baseType: !1235, size: 32, offset: 32)
!1383 = !DIGlobalVariableExpression(var: !1384, expr: !DIExpression())
!1384 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !1217, file: !1367, line: 766, type: !1385, isLocal: false, isDefinition: true, align: 16)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 144, elements: !1386)
!1386 = !{!1387}
!1387 = !DISubrange(count: 9)
!1388 = !DIGlobalVariableExpression(var: !1389, expr: !DIExpression())
!1389 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !1217, file: !1367, line: 766, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1390 = !DIGlobalVariableExpression(var: !1391, expr: !DIExpression())
!1391 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !1217, file: !1367, line: 766, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1392 = !DIGlobalVariableExpression(var: !1393, expr: !DIExpression())
!1393 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !1217, file: !1367, line: 770, type: !1394, isLocal: false, isDefinition: true, align: 16)
!1394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 96, elements: !1395)
!1395 = !{!1396}
!1396 = !DISubrange(count: 6)
!1397 = !DIGlobalVariableExpression(var: !1398, expr: !DIExpression())
!1398 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !1217, file: !1367, line: 770, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !1217, file: !1367, line: 770, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !1217, file: !1367, line: 774, type: !1403, isLocal: false, isDefinition: true, align: 16)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 80, elements: !1404)
!1404 = !{!1405}
!1405 = !DISubrange(count: 5)
!1406 = !DIGlobalVariableExpression(var: !1407, expr: !DIExpression())
!1407 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !1217, file: !1367, line: 774, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1408 = !DIGlobalVariableExpression(var: !1409, expr: !DIExpression())
!1409 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !1217, file: !1367, line: 774, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !1217, file: !1367, line: 778, type: !1403, isLocal: false, isDefinition: true, align: 16)
!1412 = !DIGlobalVariableExpression(var: !1413, expr: !DIExpression())
!1413 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !1217, file: !1367, line: 778, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1414 = !DIGlobalVariableExpression(var: !1415, expr: !DIExpression())
!1415 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !1217, file: !1367, line: 778, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1416 = !DIGlobalVariableExpression(var: !1417, expr: !DIExpression())
!1417 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !1217, file: !1367, line: 790, type: !1418, isLocal: false, isDefinition: true, align: 16)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !274, size: 112, elements: !1419)
!1419 = !{!1420}
!1420 = !DISubrange(count: 7)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !1217, file: !1367, line: 790, type: !1236, isLocal: false, isDefinition: true, align: 32)
!1423 = !DIGlobalVariableExpression(var: !1424, expr: !DIExpression())
!1424 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !1217, file: !1367, line: 790, type: !1375, isLocal: true, isDefinition: true, align: 32)
!1425 = !DIGlobalVariableExpression(var: !1426, expr: !DIExpression())
!1426 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1217, file: !1367, line: 762, type: !1427, isLocal: true, isDefinition: true)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1428, line: 237, size: 128, elements: !1429)
!1428 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1429 = !{!1430, !1431, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1427, file: !1428, line: 239, baseType: !1298, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1427, file: !1428, line: 241, baseType: !1235, size: 32, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1427, file: !1428, line: 243, baseType: !1433, size: 64, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !612, line: 40, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !612, line: 35, size: 64, elements: !1435)
!1435 = !{!1436, !1438}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1434, file: !612, line: 36, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1434, file: !612, line: 37, baseType: !1437, size: 32, offset: 32)
!1439 = !DIGlobalVariableExpression(var: !1440, expr: !DIExpression())
!1440 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !1217, file: !1367, line: 762, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1441 = !DIGlobalVariableExpression(var: !1442, expr: !DIExpression())
!1442 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1217, file: !1367, line: 766, type: !1427, isLocal: true, isDefinition: true)
!1443 = !DIGlobalVariableExpression(var: !1444, expr: !DIExpression())
!1444 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !1217, file: !1367, line: 766, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1445 = !DIGlobalVariableExpression(var: !1446, expr: !DIExpression())
!1446 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1217, file: !1367, line: 770, type: !1427, isLocal: true, isDefinition: true)
!1447 = !DIGlobalVariableExpression(var: !1448, expr: !DIExpression())
!1448 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !1217, file: !1367, line: 770, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1449 = !DIGlobalVariableExpression(var: !1450, expr: !DIExpression())
!1450 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1217, file: !1367, line: 774, type: !1427, isLocal: true, isDefinition: true)
!1451 = !DIGlobalVariableExpression(var: !1452, expr: !DIExpression())
!1452 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !1217, file: !1367, line: 774, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1453 = !DIGlobalVariableExpression(var: !1454, expr: !DIExpression())
!1454 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1217, file: !1367, line: 778, type: !1427, isLocal: true, isDefinition: true)
!1455 = !DIGlobalVariableExpression(var: !1456, expr: !DIExpression())
!1456 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !1217, file: !1367, line: 778, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1457 = !DIGlobalVariableExpression(var: !1458, expr: !DIExpression())
!1458 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1217, file: !1367, line: 790, type: !1427, isLocal: true, isDefinition: true)
!1459 = !DIGlobalVariableExpression(var: !1460, expr: !DIExpression())
!1460 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !1217, file: !1367, line: 790, type: !1244, isLocal: true, isDefinition: true, align: 8)
!1461 = !DIGlobalVariableExpression(var: !1462, expr: !DIExpression())
!1462 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1217, file: !1367, line: 656, type: !1228, isLocal: true, isDefinition: true)
!1463 = !DIGlobalVariableExpression(var: !1464, expr: !DIExpression())
!1464 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1217, file: !1367, line: 766, type: !1465, isLocal: true, isDefinition: true)
!1465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1428, line: 224, size: 160, elements: !1467)
!1467 = !{!1468, !1469, !1470, !1471}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1466, file: !1428, line: 226, baseType: !1293, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1466, file: !1428, line: 228, baseType: !1075, size: 32, offset: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1466, file: !1428, line: 230, baseType: !107, size: 32, offset: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1466, file: !1428, line: 231, baseType: !1472, size: 64, offset: 96)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1071, line: 343, size: 64, elements: !1473)
!1473 = !{!1474, !1475}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1472, file: !1071, line: 344, baseType: !152, size: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1472, file: !1071, line: 345, baseType: !152, size: 32, offset: 32)
!1476 = !DIGlobalVariableExpression(var: !1477, expr: !DIExpression())
!1477 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1217, file: !1367, line: 770, type: !1465, isLocal: true, isDefinition: true)
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1217, file: !1367, line: 774, type: !1465, isLocal: true, isDefinition: true)
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1217, file: !1367, line: 778, type: !1465, isLocal: true, isDefinition: true)
!1482 = !DIGlobalVariableExpression(var: !1483, expr: !DIExpression())
!1483 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1217, file: !1367, line: 790, type: !1465, isLocal: true, isDefinition: true)
!1484 = !DIGlobalVariableExpression(var: !1485, expr: !DIExpression())
!1485 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1486, file: !1624, line: 44, type: !1719, isLocal: false, isDefinition: true)
!1486 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1487, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1488, retainedTypes: !1521, globals: !1621, splitDebugInlining: false, nameTableKind: None)
!1487 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1488 = !{!30, !1489, !1496, !1503, !1510, !1516, !1043}
!1489 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1157, line: 47, baseType: !32, size: 32, elements: !1490)
!1490 = !{!1491, !1492, !1493, !1494, !1495}
!1491 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1492 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1493 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1494 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1495 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1496 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1157, line: 75, baseType: !32, size: 32, elements: !1497)
!1497 = !{!1498, !1499, !1500, !1501, !1502}
!1498 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1499 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1500 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1501 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1502 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1503 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1157, line: 92, baseType: !32, size: 32, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1509}
!1505 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1506 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1507 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1508 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1509 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1510 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1157, line: 84, baseType: !32, size: 32, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515}
!1512 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1513 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1514 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1515 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1516 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1157, line: 107, baseType: !32, size: 32, elements: !1517)
!1517 = !{!1518, !1519, !1520}
!1518 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1519 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1520 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1521 = !{!106, !107, !1522, !196, !195, !1571, !152, !1117, !1582, !197}
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1524)
!1524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1157, line: 336, size: 160, elements: !1525)
!1525 = !{!1526, !1545, !1549, !1553, !1566}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1524, file: !1157, line: 365, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DISubroutineType(types: !1529)
!1529 = !{!107, !1530, !1178}
!1530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1537, !1543, !1544}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1532, file: !260, line: 380, baseType: !118, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1532, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1532, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1532, file: !260, line: 386, baseType: !1538, size: 32, offset: 96)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 32)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1540)
!1540 = !{!1541, !1542}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1539, file: !260, line: 359, baseType: !195, size: 8)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1539, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1532, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1532, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1524, file: !1157, line: 366, baseType: !1546, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 32)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{null, !1530, !196}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1524, file: !1157, line: 374, baseType: !1550, size: 32, offset: 64)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 32)
!1551 = !DISubroutineType(types: !1552)
!1552 = !{!107, !1530}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1524, file: !1157, line: 377, baseType: !1554, size: 32, offset: 96)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 32)
!1555 = !DISubroutineType(types: !1556)
!1556 = !{!107, !1530, !1557}
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1157, line: 122, size: 64, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1565}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1559, file: !1157, line: 123, baseType: !152, size: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1559, file: !1157, line: 124, baseType: !195, size: 8, offset: 32)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1559, file: !1157, line: 125, baseType: !195, size: 8, offset: 40)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1559, file: !1157, line: 126, baseType: !195, size: 8, offset: 48)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1559, file: !1157, line: 127, baseType: !195, size: 8, offset: 56)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1524, file: !1157, line: 379, baseType: !1567, size: 32, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 32)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!107, !1530, !1570}
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !223, line: 505, baseType: !1573)
!1573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 496, size: 224, elements: !1574)
!1574 = !{!1575, !1576, !1577, !1578, !1579, !1580, !1581}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1573, file: !223, line: 498, baseType: !227, size: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1573, file: !223, line: 499, baseType: !227, size: 32, offset: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1573, file: !223, line: 500, baseType: !227, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1573, file: !223, line: 501, baseType: !227, size: 32, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1573, file: !223, line: 502, baseType: !227, size: 32, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1573, file: !223, line: 503, baseType: !227, size: 32, offset: 160)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1573, file: !223, line: 504, baseType: !227, size: 32, offset: 192)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !1044, line: 100, size: 224, elements: !1585)
!1585 = !{!1586, !1591, !1592, !1601, !1606, !1611, !1616}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1584, file: !1044, line: 101, baseType: !1587, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !1044, line: 76, baseType: !1588)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 32)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{!107, !1530, !1117}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1584, file: !1044, line: 102, baseType: !1587, size: 32, offset: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1584, file: !1044, line: 103, baseType: !1593, size: 32, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !1044, line: 83, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!107, !1530, !1117, !1597, !106}
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !1044, line: 72, baseType: !1598)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 32)
!1599 = !DISubroutineType(types: !1600)
!1600 = !{null, !1530, !1117, !106}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1584, file: !1044, line: 104, baseType: !1602, size: 32, offset: 96)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !1044, line: 79, baseType: !1603)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!107, !1530, !1117, !1075}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1584, file: !1044, line: 105, baseType: !1607, size: 32, offset: 128)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !1044, line: 88, baseType: !1608)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 32)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{!1043, !1530, !1117}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1584, file: !1044, line: 106, baseType: !1612, size: 32, offset: 160)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !1044, line: 92, baseType: !1613)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DISubroutineType(types: !1615)
!1615 = !{!107, !1530, !1117, !1143}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1584, file: !1044, line: 107, baseType: !1617, size: 32, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !1044, line: 96, baseType: !1618)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!107, !1530, !1117, !106}
!1621 = !{!1484, !1622, !1625, !1627, !1634, !1636, !1638, !1640, !1642, !1644, !1688, !1691, !1693, !1696, !1699, !1701, !1707, !1709, !1711, !1713, !1715, !1717}
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1368, isLocal: false, isDefinition: true, align: 16)
!1624 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1625 = !DIGlobalVariableExpression(var: !1626, expr: !DIExpression())
!1626 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 32)
!1627 = !DIGlobalVariableExpression(var: !1628, expr: !DIExpression())
!1628 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1629, isLocal: true, isDefinition: true, align: 32)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1630, file: !251, line: 60, baseType: !1550, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1630, file: !251, line: 65, baseType: !1530, size: 32, offset: 32)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1368, isLocal: false, isDefinition: true, align: 16)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1531, isLocal: false, isDefinition: true, align: 32)
!1638 = !DIGlobalVariableExpression(var: !1639, expr: !DIExpression())
!1639 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1629, isLocal: true, isDefinition: true, align: 32)
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1539, isLocal: true, isDefinition: true, align: 8)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1539, isLocal: true, isDefinition: true, align: 8)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1486, file: !1624, line: 1914, type: !1646, isLocal: true, isDefinition: true)
!1646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1647)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1648, line: 22, size: 224, elements: !1649)
!1648 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1649 = !{!1650, !1651, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1647, file: !1648, line: 24, baseType: !1571, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1647, file: !1648, line: 26, baseType: !1652, size: 32, offset: 32)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1654)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1071, line: 343, size: 64, elements: !1655)
!1655 = !{!1656, !1657}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1654, file: !1071, line: 344, baseType: !152, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1654, file: !1071, line: 345, baseType: !152, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1647, file: !1648, line: 28, baseType: !185, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1647, file: !1648, line: 30, baseType: !145, size: 8, offset: 96)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1647, file: !1648, line: 32, baseType: !107, size: 32, offset: 128)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1647, file: !1648, line: 34, baseType: !145, size: 8, offset: 160)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1647, file: !1648, line: 36, baseType: !145, size: 8, offset: 168)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1647, file: !1648, line: 38, baseType: !145, size: 8, offset: 176)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1647, file: !1648, line: 40, baseType: !145, size: 8, offset: 184)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1647, file: !1648, line: 41, baseType: !1666, size: 32, offset: 192)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1669, line: 60, size: 64, elements: !1670)
!1669 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1670 = !{!1671, !1687}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1668, file: !1669, line: 69, baseType: !1672, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1669, line: 50, size: 64, elements: !1675)
!1675 = !{!1676, !1685, !1686}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1674, file: !1669, line: 52, baseType: !1677, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1680, line: 37, baseType: !1681)
!1680 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1680, line: 32, size: 64, elements: !1682)
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1681, file: !1680, line: 34, baseType: !152, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1681, file: !1680, line: 36, baseType: !152, size: 32, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1674, file: !1669, line: 54, baseType: !195, size: 8, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1674, file: !1669, line: 56, baseType: !195, size: 8, offset: 40)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1668, file: !1669, line: 71, baseType: !195, size: 8, offset: 32)
!1688 = !DIGlobalVariableExpression(var: !1689, expr: !DIExpression())
!1689 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1486, file: !1624, line: 1914, type: !1690, isLocal: true, isDefinition: true)
!1690 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1653, size: 64, elements: !458)
!1691 = !DIGlobalVariableExpression(var: !1692, expr: !DIExpression())
!1692 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1667, isLocal: true, isDefinition: true)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1695, isLocal: true, isDefinition: true)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1673, size: 64, elements: !458)
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1486, file: !1624, line: 1914, type: !1698, isLocal: true, isDefinition: true)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1678, size: 128, elements: !353)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1486, file: !1624, line: 1539, type: !1523, isLocal: true, isDefinition: true)
!1701 = !DIGlobalVariableExpression(var: !1702, expr: !DIExpression())
!1702 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1486, file: !1624, line: 1914, type: !1703, isLocal: true, isDefinition: true)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1648, line: 74, size: 64, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1703, file: !1648, line: 76, baseType: !152, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1703, file: !1648, line: 78, baseType: !1530, size: 32, offset: 32)
!1707 = !DIGlobalVariableExpression(var: !1708, expr: !DIExpression())
!1708 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1486, file: !1624, line: 1914, type: !1646, isLocal: true, isDefinition: true)
!1709 = !DIGlobalVariableExpression(var: !1710, expr: !DIExpression())
!1710 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1486, file: !1624, line: 1914, type: !1690, isLocal: true, isDefinition: true)
!1711 = !DIGlobalVariableExpression(var: !1712, expr: !DIExpression())
!1712 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1667, isLocal: true, isDefinition: true)
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1695, isLocal: true, isDefinition: true)
!1715 = !DIGlobalVariableExpression(var: !1716, expr: !DIExpression())
!1716 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1486, file: !1624, line: 1914, type: !1698, isLocal: true, isDefinition: true)
!1717 = !DIGlobalVariableExpression(var: !1718, expr: !DIExpression())
!1718 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1486, file: !1624, line: 1914, type: !1703, isLocal: true, isDefinition: true)
!1719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1720)
!1720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !1721)
!1721 = !{!1722, !1723}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1720, file: !203, line: 17, baseType: !118, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1720, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1726, file: !1804, line: 65, type: !227, isLocal: true, isDefinition: true)
!1726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1728, retainedTypes: !1729, globals: !1801, splitDebugInlining: false, nameTableKind: None)
!1727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1728 = !{!855}
!1729 = !{!685, !1730, !984, !195, !152, !1738, !1769}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !476, line: 712, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 706, size: 128, elements: !1733)
!1733 = !{!1734, !1735, !1736, !1737}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1732, file: !476, line: 708, baseType: !227, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1732, file: !476, line: 709, baseType: !227, size: 32, offset: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1732, file: !476, line: 710, baseType: !227, size: 32, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1732, file: !476, line: 711, baseType: !480, size: 32, offset: 96)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 360, baseType: !1740)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 345, size: 28704, elements: !1741)
!1741 = !{!1742, !1744, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1759, !1764, !1768}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1740, file: !476, line: 347, baseType: !1743, size: 256)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !1369)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1740, file: !476, line: 348, baseType: !1745, size: 768, offset: 256)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 768, elements: !1746)
!1746 = !{!1747}
!1747 = !DISubrange(count: 24)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1740, file: !476, line: 349, baseType: !1743, size: 256, offset: 1024)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1740, file: !476, line: 350, baseType: !1745, size: 768, offset: 1280)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1740, file: !476, line: 351, baseType: !1743, size: 256, offset: 2048)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1740, file: !476, line: 352, baseType: !1745, size: 768, offset: 2304)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1740, file: !476, line: 353, baseType: !1743, size: 256, offset: 3072)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1740, file: !476, line: 354, baseType: !1745, size: 768, offset: 3328)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1740, file: !476, line: 355, baseType: !1743, size: 256, offset: 4096)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1740, file: !476, line: 356, baseType: !1756, size: 1792, offset: 4352)
!1756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 1792, elements: !1757)
!1757 = !{!1758}
!1758 = !DISubrange(count: 56)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1740, file: !476, line: 357, baseType: !1760, size: 1920, offset: 6144)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1761, size: 1920, elements: !1762)
!1761 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!1762 = !{!1763}
!1763 = !DISubrange(count: 240)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1740, file: !476, line: 358, baseType: !1765, size: 20608, offset: 8064)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 20608, elements: !1766)
!1766 = !{!1767}
!1767 = !DISubrange(count: 644)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1740, file: !476, line: 359, baseType: !227, size: 32, offset: 28672)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !1772)
!1772 = !{!1773, !1774, !1775, !1776, !1777, !1778, !1779, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1792, !1793, !1794, !1796, !1798, !1800}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1771, file: !476, line: 381, baseType: !480, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1771, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1771, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1771, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1771, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1771, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1771, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1761, size: 96, elements: !1781)
!1781 = !{!1782}
!1782 = !DISubrange(count: 12)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1771, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1771, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1771, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1771, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1771, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1771, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1771, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1771, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!1791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 64, elements: !353)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1771, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1771, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1771, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!1795 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 128, elements: !926)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1771, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!1797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !480, size: 160, elements: !1404)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1771, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!1799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 160, elements: !1404)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1771, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!1801 = !{!1802, !1828, !1833, !1835, !1837, !1724}
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1726, file: !1804, line: 285, type: !1805, isLocal: true, isDefinition: true, align: 32)
!1804 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1806)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !1807)
!1807 = !{!1808, !1827}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1806, file: !251, line: 60, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1810 = !DISubroutineType(types: !1811)
!1811 = !{!107, !1812}
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1814)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1815)
!1815 = !{!1816, !1817, !1818, !1819, !1825, !1826}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1814, file: !260, line: 380, baseType: !118, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1814, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1814, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1814, file: !260, line: 386, baseType: !1820, size: 32, offset: 96)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 32)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1822)
!1822 = !{!1823, !1824}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1821, file: !260, line: 359, baseType: !195, size: 8)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1821, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1814, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1814, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1806, file: !251, line: 65, baseType: !1812, size: 32, offset: 32)
!1828 = !DIGlobalVariableExpression(var: !1829, expr: !DIExpression())
!1829 = distinct !DIGlobalVariable(name: "lock", scope: !1726, file: !1804, line: 34, type: !1830, isLocal: true, isDefinition: true)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !1831)
!1831 = !{!1832}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1830, file: !433, line: 52, baseType: !22, size: 32)
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "last_load", scope: !1726, file: !1804, line: 36, type: !152, isLocal: true, isDefinition: true)
!1835 = !DIGlobalVariableExpression(var: !1836, expr: !DIExpression())
!1836 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1726, file: !1804, line: 48, type: !152, isLocal: true, isDefinition: true)
!1837 = !DIGlobalVariableExpression(var: !1838, expr: !DIExpression())
!1838 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1726, file: !1804, line: 54, type: !152, isLocal: true, isDefinition: true)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1841, file: !1922, line: 22, type: !1924, isLocal: true, isDefinition: true)
!1841 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1842, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !544, retainedTypes: !1843, globals: !1919, splitDebugInlining: false, nameTableKind: None)
!1842 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1843 = !{!1844, !1908, !1913, !592, !551, !545, !1918, !106}
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !546, line: 523, size: 288, elements: !1847)
!1847 = !{!1848, !1867, !1871, !1875, !1879, !1880, !1881, !1885, !1904}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1846, file: !546, line: 524, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 32)
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!107, !1852, !580, !581}
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1854)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1859, !1865, !1866}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1854, file: !260, line: 380, baseType: !118, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1854, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1854, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1854, file: !260, line: 386, baseType: !1860, size: 32, offset: 96)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !1862)
!1862 = !{!1863, !1864}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1861, file: !260, line: 359, baseType: !195, size: 8)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1861, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1854, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1854, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1846, file: !546, line: 530, baseType: !1868, size: 32, offset: 32)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 32)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{!107, !1852, !586}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1846, file: !546, line: 532, baseType: !1872, size: 32, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 32)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!107, !1852, !592, !587}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1846, file: !546, line: 535, baseType: !1876, size: 32, offset: 96)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 32)
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!107, !1852, !592}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1846, file: !546, line: 537, baseType: !1876, size: 32, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1846, file: !546, line: 539, baseType: !1876, size: 32, offset: 160)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1846, file: !546, line: 541, baseType: !1882, size: 32, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 32)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!107, !1852, !580, !545, !551}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1846, file: !546, line: 544, baseType: !1886, size: 32, offset: 224)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!107, !1852, !1889, !145}
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !546, line: 478, size: 96, elements: !1891)
!1891 = !{!1892, !1898, !1903}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1890, file: !546, line: 482, baseType: !1893, size: 32)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !612, line: 33, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !612, line: 29, size: 32, elements: !1895)
!1895 = !{!1896}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1894, file: !612, line: 30, baseType: !1897, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1890, file: !546, line: 485, baseType: !1899, size: 32, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !546, line: 464, baseType: !1900)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 32)
!1901 = !DISubroutineType(types: !1902)
!1902 = !{null, !1852, !1889, !592}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1890, file: !546, line: 493, baseType: !592, size: 32, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1846, file: !546, line: 547, baseType: !1905, size: 32, offset: 256)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!152, !1852}
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !546, line: 428, size: 32, elements: !1911)
!1911 = !{!1912}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1910, file: !546, line: 434, baseType: !592, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !546, line: 441, size: 32, elements: !1916)
!1916 = !{!1917}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1915, file: !546, line: 447, baseType: !592, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1919 = !{!1920, !1839}
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1921 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1841, file: !1922, line: 37, type: !1923, isLocal: true, isDefinition: true)
!1922 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1925, size: 352, elements: !1012)
!1925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1928, file: !1952, line: 129, type: !1960, isLocal: false, isDefinition: true)
!1928 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1929, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1930, globals: !1949, splitDebugInlining: false, nameTableKind: None)
!1929 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1930 = !{!1931}
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 32)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !1933)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !1934)
!1934 = !{!1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1933, file: !223, line: 372, baseType: !227, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1933, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1933, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1933, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1933, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1933, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1933, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1933, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1933, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1933, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1933, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1933, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1933, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1933, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!1949 = !{!1950, !1953, !1957, !1926}
!1950 = !DIGlobalVariableExpression(var: !1951, expr: !DIExpression())
!1951 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1928, file: !1952, line: 126, type: !152, isLocal: false, isDefinition: true)
!1952 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1953 = !DIGlobalVariableExpression(var: !1954, expr: !DIExpression())
!1954 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1928, file: !1952, line: 127, type: !1955, isLocal: false, isDefinition: true)
!1955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 72, elements: !1386)
!1956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!1957 = !DIGlobalVariableExpression(var: !1958, expr: !DIExpression())
!1958 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1928, file: !1952, line: 128, type: !1959, isLocal: false, isDefinition: true)
!1959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 128, elements: !970)
!1960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1956, size: 64, elements: !1369)
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1963, file: !1966, line: 23, type: !1967, isLocal: false, isDefinition: true)
!1963 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1964, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, globals: !1965, splitDebugInlining: false, nameTableKind: None)
!1964 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1965 = !{!1961}
!1966 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!1968 = !DIGlobalVariableExpression(var: !1969, expr: !DIExpression())
!1969 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1970, file: !1974, line: 37, type: !2227, isLocal: false, isDefinition: true)
!1970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1971, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1972, retainedTypes: !1981, globals: !2054, splitDebugInlining: false, nameTableKind: None)
!1971 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!1972 = !{!1973, !30, !855}
!1973 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1974, line: 63, baseType: !32, size: 32, elements: !1975)
!1974 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1975 = !{!1976, !1977, !1978, !1979, !1980}
!1976 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1977 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1978 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1979 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1980 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1981 = !{!185, !106, !107, !1982, !193, !152, !2012, !984, !195, !2037}
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1985, line: 51, size: 64, elements: !1986)
!1985 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1986 = !{!1987, !2007}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1984, file: !1985, line: 52, baseType: !1988, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1985, line: 38, baseType: !1989)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 32)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!107, !1992, !194, !197}
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !1995)
!1995 = !{!1996, !1997, !1998, !1999, !2005, !2006}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1994, file: !260, line: 380, baseType: !118, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1994, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1994, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1994, file: !260, line: 386, baseType: !2000, size: 32, offset: 96)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 32)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !2002)
!2002 = !{!2003, !2004}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2001, file: !260, line: 359, baseType: !195, size: 8)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2001, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1994, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1994, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1984, file: !1985, line: 53, baseType: !2008, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1985, line: 47, baseType: !2009)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!107, !1992, !194, !197, !152}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2014, file: !476, line: 381, baseType: !480, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2014, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2014, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2014, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2014, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2014, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2014, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2014, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2014, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2014, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2014, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2014, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2014, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2014, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2014, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2014, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2014, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2014, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2014, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2014, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2014, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 360, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 345, size: 28704, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2039, file: !476, line: 347, baseType: !1743, size: 256)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2039, file: !476, line: 348, baseType: !1745, size: 768, offset: 256)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2039, file: !476, line: 349, baseType: !1743, size: 256, offset: 1024)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2039, file: !476, line: 350, baseType: !1745, size: 768, offset: 1280)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2039, file: !476, line: 351, baseType: !1743, size: 256, offset: 2048)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2039, file: !476, line: 352, baseType: !1745, size: 768, offset: 2304)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2039, file: !476, line: 353, baseType: !1743, size: 256, offset: 3072)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2039, file: !476, line: 354, baseType: !1745, size: 768, offset: 3328)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2039, file: !476, line: 355, baseType: !1743, size: 256, offset: 4096)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2039, file: !476, line: 356, baseType: !1756, size: 1792, offset: 4352)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2039, file: !476, line: 357, baseType: !1760, size: 1920, offset: 6144)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2039, file: !476, line: 358, baseType: !1765, size: 20608, offset: 8064)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2039, file: !476, line: 359, baseType: !227, size: 32, offset: 28672)
!2054 = !{!1968, !2055, !2181, !2187, !2189, !2192, !2197, !2199, !2204}
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "_kernel", scope: !1970, file: !1974, line: 40, type: !2057, isLocal: false, isDefinition: true)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !358, line: 158, size: 288, elements: !2058)
!2058 = !{!2059, !2176}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2057, file: !358, line: 159, baseType: !2060, size: 192)
!2060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2061, size: 192, elements: !458)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !358, line: 100, size: 192, elements: !2062)
!2062 = !{!2063, !2064, !2065, !2169, !2170, !2171, !2172}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2061, file: !358, line: 102, baseType: !152, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2061, file: !358, line: 105, baseType: !193, size: 32, offset: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2061, file: !358, line: 108, baseType: !2066, size: 32, offset: 64)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !2068)
!2068 = !{!2069, !2127, !2139, !2140, !2141, !2142, !2143, !2149, !2164}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2067, file: !322, line: 247, baseType: !2070, size: 384)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !2071)
!2071 = !{!2072, !2096, !2103, !2104, !2105, !2114, !2115, !2116}
!2072 = !DIDerivedType(tag: DW_TAG_member, scope: !2070, file: !322, line: 60, baseType: !2073, size: 64)
!2073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2070, file: !322, line: 60, size: 64, elements: !2074)
!2074 = !{!2075, !2090}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2073, file: !322, line: 61, baseType: !2076, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !2078)
!2078 = !{!2079, !2085}
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !332, line: 38, baseType: !2080, size: 32)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !332, line: 38, size: 32, elements: !2081)
!2081 = !{!2082, !2084}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2080, file: !332, line: 39, baseType: !2083, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2080, file: !332, line: 40, baseType: !2083, size: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, scope: !2077, file: !332, line: 42, baseType: !2086, size: 32, offset: 32)
!2086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2077, file: !332, line: 42, size: 32, elements: !2087)
!2087 = !{!2088, !2089}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2086, file: !332, line: 43, baseType: !2083, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2086, file: !332, line: 44, baseType: !2083, size: 32)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2073, file: !322, line: 62, baseType: !2091, size: 64)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !2092)
!2092 = !{!2093}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2091, file: !348, line: 50, baseType: !2094, size: 64)
!2094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2095, size: 64, elements: !353)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2070, file: !322, line: 68, baseType: !2097, size: 32, offset: 64)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !2099)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !2100)
!2100 = !{!2101}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2099, file: !358, line: 232, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !2077)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2070, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2070, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !2070, file: !322, line: 90, baseType: !2106, size: 16, offset: 112)
!2106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2070, file: !322, line: 90, size: 16, elements: !2107)
!2107 = !{!2108, !2113}
!2108 = !DIDerivedType(tag: DW_TAG_member, scope: !2106, file: !322, line: 91, baseType: !2109, size: 16)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2106, file: !322, line: 91, size: 16, elements: !2110)
!2110 = !{!2111, !2112}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2109, file: !322, line: 96, baseType: !372, size: 8)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2109, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2106, file: !322, line: 100, baseType: !197, size: 16)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2070, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2070, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2070, file: !322, line: 131, baseType: !2117, size: 192, offset: 192)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !2118)
!2118 = !{!2119, !2120, !2126}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2117, file: !358, line: 245, baseType: !2076, size: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2117, file: !358, line: 246, baseType: !2121, size: 32, offset: 64)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !2122)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{null, !2125}
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2117, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2067, file: !322, line: 250, baseType: !2128, size: 288, offset: 384)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2128, file: !392, line: 26, baseType: !152, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2128, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2128, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2128, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2128, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2128, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2128, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2128, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2128, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2067, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2067, file: !322, line: 256, baseType: !2098, size: 64, offset: 704)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2067, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2067, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2067, file: !322, line: 300, baseType: !2144, size: 96, offset: 1056)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !2145)
!2145 = !{!2146, !2147, !2148}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2144, file: !322, line: 153, baseType: !22, size: 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2144, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2144, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2067, file: !322, line: 325, baseType: !2150, size: 32, offset: 1152)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !2152)
!2152 = !{!2153, !2159, !2160}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2151, file: !419, line: 5074, baseType: !2154, size: 96)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !2155)
!2155 = !{!2156, !2157, !2158}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2154, file: !423, line: 57, baseType: !426, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2154, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2154, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2151, file: !419, line: 5075, baseType: !2098, size: 64, offset: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2151, file: !419, line: 5076, baseType: !2161, size: 32, offset: 160)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !2162)
!2162 = !{!2163}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2161, file: !433, line: 52, baseType: !22, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2067, file: !322, line: 343, baseType: !2165, size: 64, offset: 1184)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !2166)
!2166 = !{!2167, !2168}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2165, file: !392, line: 63, baseType: !152, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2165, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2061, file: !358, line: 111, baseType: !2066, size: 32, offset: 96)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2061, file: !358, line: 124, baseType: !107, size: 32, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2061, file: !358, line: 127, baseType: !195, size: 8, offset: 160)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2061, file: !358, line: 153, baseType: !2173, offset: 168)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2174, line: 33, elements: !2175)
!2174 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2175 = !{}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2057, file: !358, line: 170, baseType: !2177, size: 96, offset: 192)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !358, line: 83, size: 96, elements: !2178)
!2178 = !{!2179, !2180}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2177, file: !358, line: 86, baseType: !2066, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2177, file: !358, line: 90, baseType: !2102, size: 64, offset: 32)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1970, file: !1974, line: 43, type: !2183, isLocal: false, isDefinition: true, align: 512)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 8704, elements: !701)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !698, line: 47, size: 8, elements: !2185)
!2185 = !{!2186}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2184, file: !698, line: 48, baseType: !120, size: 8)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1970, file: !1974, line: 44, type: !2067, isLocal: false, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1970, file: !1974, line: 48, type: !2191, isLocal: false, isDefinition: true)
!2191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 1280, elements: !458)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1970, file: !1974, line: 86, type: !2194, isLocal: false, isDefinition: true, align: 512)
!2194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 16896, elements: !2195)
!2195 = !{!459, !2196}
!2196 = !DISubrange(count: 2112)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1970, file: !1974, line: 217, type: !145, isLocal: false, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1970, file: !1974, line: 50, type: !2201, isLocal: true, isDefinition: true, align: 512)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2184, size: 33280, elements: !2202)
!2202 = !{!459, !2203}
!2203 = !DISubrange(count: 4160)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "levels", scope: !2206, file: !1974, line: 232, type: !2226, isLocal: true, isDefinition: true)
!2206 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1974, file: !1974, line: 230, type: !2207, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2209)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !1973}
!2209 = !{!2210, !2211, !2221, !2225}
!2210 = !DILocalVariable(name: "level", arg: 1, scope: !2206, file: !1974, line: 230, type: !1973)
!2211 = !DILocalVariable(name: "entry", scope: !2206, file: !1974, line: 244, type: !2212)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !251, line: 51, size: 64, elements: !2215)
!2215 = !{!2216, !2220}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2214, file: !251, line: 60, baseType: !2217, size: 32)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!107, !1992}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2214, file: !251, line: 65, baseType: !1992, size: 32, offset: 32)
!2221 = !DILocalVariable(name: "dev", scope: !2222, file: !1974, line: 247, type: !1992)
!2222 = distinct !DILexicalBlock(scope: !2223, file: !1974, line: 246, column: 64)
!2223 = distinct !DILexicalBlock(scope: !2224, file: !1974, line: 246, column: 2)
!2224 = distinct !DILexicalBlock(scope: !2206, file: !1974, line: 246, column: 2)
!2225 = !DILocalVariable(name: "rc", scope: !2222, file: !1974, line: 248, type: !107)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2212, size: 192, elements: !1395)
!2227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !203, line: 16, size: 64, elements: !2229)
!2229 = !{!2230, !2231}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2228, file: !203, line: 17, baseType: !118, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2228, file: !203, line: 18, baseType: !195, size: 8, offset: 32)
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression())
!2233 = distinct !DIGlobalVariable(name: "states_str", scope: !2234, file: !2235, line: 276, type: !2359, isLocal: true, isDefinition: true)
!2234 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2235, file: !2235, line: 271, type: !2236, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2350)
!2235 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!118, !2238, !193, !185}
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !2239)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !2241)
!2241 = !{!2242, !2300, !2312, !2313, !2314, !2315, !2316, !2322, !2337}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2240, file: !322, line: 247, baseType: !2243, size: 384)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !2244)
!2244 = !{!2245, !2269, !2276, !2277, !2278, !2287, !2288, !2289}
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !322, line: 60, baseType: !2246, size: 64)
!2246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !322, line: 60, size: 64, elements: !2247)
!2247 = !{!2248, !2263}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2246, file: !322, line: 61, baseType: !2249, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !2250)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !2251)
!2251 = !{!2252, !2258}
!2252 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !332, line: 38, baseType: !2253, size: 32)
!2253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !332, line: 38, size: 32, elements: !2254)
!2254 = !{!2255, !2257}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2253, file: !332, line: 39, baseType: !2256, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2253, file: !332, line: 40, baseType: !2256, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !332, line: 42, baseType: !2259, size: 32, offset: 32)
!2259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !332, line: 42, size: 32, elements: !2260)
!2260 = !{!2261, !2262}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2259, file: !332, line: 43, baseType: !2256, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2259, file: !332, line: 44, baseType: !2256, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2246, file: !322, line: 62, baseType: !2264, size: 64)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !2265)
!2265 = !{!2266}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2264, file: !348, line: 50, baseType: !2267, size: 64)
!2267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2268, size: 64, elements: !353)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2243, file: !322, line: 68, baseType: !2270, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !2273)
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2272, file: !358, line: 232, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !2250)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2243, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2243, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!2278 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !322, line: 90, baseType: !2279, size: 16, offset: 112)
!2279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !322, line: 90, size: 16, elements: !2280)
!2280 = !{!2281, !2286}
!2281 = !DIDerivedType(tag: DW_TAG_member, scope: !2279, file: !322, line: 91, baseType: !2282, size: 16)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2279, file: !322, line: 91, size: 16, elements: !2283)
!2283 = !{!2284, !2285}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2282, file: !322, line: 96, baseType: !372, size: 8)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2282, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2279, file: !322, line: 100, baseType: !197, size: 16)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2243, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2243, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2243, file: !322, line: 131, baseType: !2290, size: 192, offset: 192)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !2291)
!2291 = !{!2292, !2293, !2299}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2290, file: !358, line: 245, baseType: !2249, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2290, file: !358, line: 246, baseType: !2294, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !2295)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{null, !2298}
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2290, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2240, file: !322, line: 250, baseType: !2301, size: 288, offset: 384)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !2302)
!2302 = !{!2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2301, file: !392, line: 26, baseType: !152, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2301, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2301, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2301, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2301, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2301, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2301, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2301, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2301, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2240, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2240, file: !322, line: 256, baseType: !2271, size: 64, offset: 704)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2240, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2240, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2240, file: !322, line: 300, baseType: !2317, size: 96, offset: 1056)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !2318)
!2318 = !{!2319, !2320, !2321}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2317, file: !322, line: 153, baseType: !22, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2317, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2317, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2240, file: !322, line: 325, baseType: !2323, size: 32, offset: 1152)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 32)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !2325)
!2325 = !{!2326, !2332, !2333}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2324, file: !419, line: 5074, baseType: !2327, size: 96)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !2328)
!2328 = !{!2329, !2330, !2331}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2327, file: !423, line: 57, baseType: !426, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2327, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2327, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2324, file: !419, line: 5075, baseType: !2271, size: 64, offset: 96)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2324, file: !419, line: 5076, baseType: !2334, size: 32, offset: 160)
!2334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !2335)
!2335 = !{!2336}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2334, file: !433, line: 52, baseType: !22, size: 32)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2240, file: !322, line: 343, baseType: !2338, size: 64, offset: 1184)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !2339)
!2339 = !{!2340, !2341}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2338, file: !392, line: 63, baseType: !152, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2338, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!2342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2343, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2344, globals: !2346, splitDebugInlining: false, nameTableKind: None)
!2343 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2344 = !{!106, !118, !685, !195, !22, !107, !2345, !24, !185, !193, !152, !687}
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 32)
!2346 = !{!2232, !2347}
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "states_sz", scope: !2234, file: !2235, line: 279, type: !2349, isLocal: true, isDefinition: true)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1923, size: 256, elements: !1369)
!2350 = !{!2351, !2352, !2353, !2354, !2355, !2356, !2357}
!2351 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2234, file: !2235, line: 271, type: !2238)
!2352 = !DILocalVariable(name: "buf", arg: 2, scope: !2234, file: !2235, line: 271, type: !193)
!2353 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2234, file: !2235, line: 271, type: !185)
!2354 = !DILocalVariable(name: "off", scope: !2234, file: !2235, line: 273, type: !185)
!2355 = !DILocalVariable(name: "bit", scope: !2234, file: !2235, line: 274, type: !195)
!2356 = !DILocalVariable(name: "thread_state", scope: !2234, file: !2235, line: 275, type: !195)
!2357 = !DILocalVariable(name: "index", scope: !2358, file: !2235, line: 293, type: !195)
!2358 = distinct !DILexicalBlock(scope: !2234, file: !2235, line: 293, column: 2)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 256, elements: !1369)
!2360 = !DIGlobalVariableExpression(var: !2361, expr: !DIExpression())
!2361 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2362, file: !2473, line: 56, type: !2460, isLocal: false, isDefinition: true)
!2362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2363, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2364, globals: !2470, splitDebugInlining: false, nameTableKind: None)
!2363 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2364 = !{!2365, !193, !106, !2468, !194, !685, !984, !107, !152, !687, !2469}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !2367)
!2367 = !{!2368, !2426, !2438, !2439, !2440, !2441, !2442, !2448, !2463}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2366, file: !322, line: 247, baseType: !2369, size: 384)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !2370)
!2370 = !{!2371, !2395, !2402, !2403, !2404, !2413, !2414, !2415}
!2371 = !DIDerivedType(tag: DW_TAG_member, scope: !2369, file: !322, line: 60, baseType: !2372, size: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2369, file: !322, line: 60, size: 64, elements: !2373)
!2373 = !{!2374, !2389}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2372, file: !322, line: 61, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !2376)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !2377)
!2377 = !{!2378, !2384}
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !332, line: 38, baseType: !2379, size: 32)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !332, line: 38, size: 32, elements: !2380)
!2380 = !{!2381, !2383}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2379, file: !332, line: 39, baseType: !2382, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2379, file: !332, line: 40, baseType: !2382, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, scope: !2376, file: !332, line: 42, baseType: !2385, size: 32, offset: 32)
!2385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2376, file: !332, line: 42, size: 32, elements: !2386)
!2386 = !{!2387, !2388}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2385, file: !332, line: 43, baseType: !2382, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2385, file: !332, line: 44, baseType: !2382, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2372, file: !322, line: 62, baseType: !2390, size: 64)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !2391)
!2391 = !{!2392}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2390, file: !348, line: 50, baseType: !2393, size: 64)
!2393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2394, size: 64, elements: !353)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2369, file: !322, line: 68, baseType: !2396, size: 32, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !2399)
!2399 = !{!2400}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2398, file: !358, line: 232, baseType: !2401, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !2376)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2369, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2369, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!2404 = !DIDerivedType(tag: DW_TAG_member, scope: !2369, file: !322, line: 90, baseType: !2405, size: 16, offset: 112)
!2405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2369, file: !322, line: 90, size: 16, elements: !2406)
!2406 = !{!2407, !2412}
!2407 = !DIDerivedType(tag: DW_TAG_member, scope: !2405, file: !322, line: 91, baseType: !2408, size: 16)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2405, file: !322, line: 91, size: 16, elements: !2409)
!2409 = !{!2410, !2411}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2408, file: !322, line: 96, baseType: !372, size: 8)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2408, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2405, file: !322, line: 100, baseType: !197, size: 16)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2369, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2369, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2369, file: !322, line: 131, baseType: !2416, size: 192, offset: 192)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !2417)
!2417 = !{!2418, !2419, !2425}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2416, file: !358, line: 245, baseType: !2375, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2416, file: !358, line: 246, baseType: !2420, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !2421)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{null, !2424}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2416, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2366, file: !322, line: 250, baseType: !2427, size: 288, offset: 384)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2427, file: !392, line: 26, baseType: !152, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2427, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2427, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2427, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2427, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2427, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2427, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2427, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2427, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2366, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2366, file: !322, line: 256, baseType: !2397, size: 64, offset: 704)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2366, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2366, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2366, file: !322, line: 300, baseType: !2443, size: 96, offset: 1056)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !2444)
!2444 = !{!2445, !2446, !2447}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2443, file: !322, line: 153, baseType: !22, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2443, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2443, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2366, file: !322, line: 325, baseType: !2449, size: 32, offset: 1152)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 32)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !2451)
!2451 = !{!2452, !2458, !2459}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2450, file: !419, line: 5074, baseType: !2453, size: 96)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !2454)
!2454 = !{!2455, !2456, !2457}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2453, file: !423, line: 57, baseType: !426, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2453, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2453, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2450, file: !419, line: 5075, baseType: !2397, size: 64, offset: 96)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2450, file: !419, line: 5076, baseType: !2460, size: 32, offset: 160)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !2461)
!2461 = !{!2462}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2460, file: !433, line: 52, baseType: !22, size: 32)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2366, file: !322, line: 343, baseType: !2464, size: 64, offset: 1184)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !2465)
!2465 = !{!2466, !2467}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2464, file: !392, line: 63, baseType: !152, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2464, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 32)
!2470 = !{!2360, !2471, !2474, !2476}
!2471 = !DIGlobalVariableExpression(var: !2472, expr: !DIExpression())
!2472 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2362, file: !2473, line: 404, type: !107, isLocal: true, isDefinition: true)
!2473 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2362, file: !2473, line: 405, type: !107, isLocal: true, isDefinition: true)
!2476 = !DIGlobalVariableExpression(var: !2477, expr: !DIExpression())
!2477 = distinct !DIGlobalVariable(name: "pending_current", scope: !2362, file: !2473, line: 425, type: !2365, isLocal: true, isDefinition: true)
!2478 = !DIGlobalVariableExpression(var: !2479, expr: !DIExpression())
!2479 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2480, file: !2510, line: 19, type: !2516, isLocal: true, isDefinition: true)
!2480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2482, globals: !2507, splitDebugInlining: false, nameTableKind: None)
!2481 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2482 = !{!685, !106, !984, !152, !687, !107, !2483, !193, !389}
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !2485)
!2485 = !{!2486, !2501, !2506}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2484, file: !358, line: 245, baseType: !2487, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !2488)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !2489)
!2489 = !{!2490, !2496}
!2490 = !DIDerivedType(tag: DW_TAG_member, scope: !2488, file: !332, line: 38, baseType: !2491, size: 32)
!2491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2488, file: !332, line: 38, size: 32, elements: !2492)
!2492 = !{!2493, !2495}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2491, file: !332, line: 39, baseType: !2494, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2491, file: !332, line: 40, baseType: !2494, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, scope: !2488, file: !332, line: 42, baseType: !2497, size: 32, offset: 32)
!2497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2488, file: !332, line: 42, size: 32, elements: !2498)
!2498 = !{!2499, !2500}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2497, file: !332, line: 43, baseType: !2494, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2497, file: !332, line: 44, baseType: !2494, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2484, file: !358, line: 246, baseType: !2502, size: 32, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !2503)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{null, !2483}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2484, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!2507 = !{!2508, !2478, !2511, !2513}
!2508 = !DIGlobalVariableExpression(var: !2509, expr: !DIExpression())
!2509 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2480, file: !2510, line: 15, type: !687, isLocal: true, isDefinition: true)
!2510 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2511 = !DIGlobalVariableExpression(var: !2512, expr: !DIExpression())
!2512 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2480, file: !2510, line: 25, type: !107, isLocal: true, isDefinition: true)
!2513 = !DIGlobalVariableExpression(var: !2514, expr: !DIExpression())
!2514 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2480, file: !2510, line: 17, type: !2515, isLocal: true, isDefinition: true)
!2515 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !2488)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !2517)
!2517 = !{!2518}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2516, file: !433, line: 52, baseType: !22, size: 32)
!2519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2522, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2522 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2524, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2525, retainedTypes: !2545, splitDebugInlining: false, nameTableKind: None)
!2524 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2525 = !{!2526, !2534}
!2526 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2527, line: 69, baseType: !32, size: 32, elements: !2528)
!2527 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2528 = !{!2529, !2530, !2531, !2532, !2533}
!2529 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2530 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2531 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2532 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2533 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2534 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2527, line: 56, baseType: !32, size: 32, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544}
!2536 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2537 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2538 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2539 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2540 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2541 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2542 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2543 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2544 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2545 = !{!107, !2526, !2534, !2546, !373, !277, !2548, !2549, !196, !198, !118, !185, !106, !22, !32, !187, !2551, !2552, !189, !188, !191, !190, !2547, !2553, !2554, !2555, !2556}
!2546 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2527, line: 31, baseType: !2547)
!2547 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !191)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !186, line: 329, baseType: !32)
!2549 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2527, line: 32, baseType: !2550)
!2550 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !688)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 32)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !186, line: 145, baseType: !107)
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 32)
!2557 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2558, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2558 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2560 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2561 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2562, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2563, splitDebugInlining: false, nameTableKind: None)
!2562 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2563 = !{!118, !196, !107, !32}
!2564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2565, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2566, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2565 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2566 = !{!2567, !30}
!2567 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2568, line: 27, baseType: !32, size: 32, elements: !2569)
!2568 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2569 = !{!2570, !2571, !2572, !2573, !2574}
!2570 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2571 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2572 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2573 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2574 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2577, retainedTypes: !2578, splitDebugInlining: false, nameTableKind: None)
!2576 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2577 = !{!855, !2567, !30}
!2578 = !{!1002, !2579, !106, !107, !984, !152, !195, !2596}
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 360, baseType: !2581)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 345, size: 28704, elements: !2582)
!2582 = !{!2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2581, file: !476, line: 347, baseType: !1743, size: 256)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2581, file: !476, line: 348, baseType: !1745, size: 768, offset: 256)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2581, file: !476, line: 349, baseType: !1743, size: 256, offset: 1024)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2581, file: !476, line: 350, baseType: !1745, size: 768, offset: 1280)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2581, file: !476, line: 351, baseType: !1743, size: 256, offset: 2048)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2581, file: !476, line: 352, baseType: !1745, size: 768, offset: 2304)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2581, file: !476, line: 353, baseType: !1743, size: 256, offset: 3072)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2581, file: !476, line: 354, baseType: !1745, size: 768, offset: 3328)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2581, file: !476, line: 355, baseType: !1743, size: 256, offset: 4096)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2581, file: !476, line: 356, baseType: !1756, size: 1792, offset: 4352)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2581, file: !476, line: 357, baseType: !1760, size: 1920, offset: 6144)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2581, file: !476, line: 358, baseType: !1765, size: 20608, offset: 8064)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2581, file: !476, line: 359, baseType: !227, size: 32, offset: 28672)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2598)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2599)
!2599 = !{!2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2598, file: !476, line: 381, baseType: !480, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2598, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2598, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2598, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2598, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2598, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2598, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2598, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2598, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2598, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2598, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2598, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2598, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2598, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2598, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2598, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2598, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2598, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2598, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2598, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2598, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!2622 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2625, splitDebugInlining: false, nameTableKind: None)
!2624 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2625 = !{!106, !107, !22, !2626}
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2628)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2629)
!2629 = !{!2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2628, file: !476, line: 381, baseType: !480, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2628, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2628, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2628, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2628, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2628, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2628, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2628, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2628, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2628, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2628, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2628, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2628, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2628, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2628, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2628, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2628, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2628, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2628, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2628, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2628, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2653, splitDebugInlining: false, nameTableKind: None)
!2652 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2653 = !{!2654, !106, !107}
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2656)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2657)
!2657 = !{!2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2656, file: !476, line: 381, baseType: !480, size: 32)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2656, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2656, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2656, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2656, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2656, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2656, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2656, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2656, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2656, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2656, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2656, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2656, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2656, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2656, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2656, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2656, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2656, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2656, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2656, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2656, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2679 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2680, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2681, splitDebugInlining: false, nameTableKind: None)
!2680 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2681 = !{!2682, !152, !106, !107}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 32)
!2683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2684, line: 98, size: 256, elements: !2685)
!2684 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2685 = !{!2686, !2691, !2696, !2701, !2706, !2711, !2716, !2721}
!2686 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 99, baseType: !2687, size: 32)
!2687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 99, size: 32, elements: !2688)
!2688 = !{!2689, !2690}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2687, file: !2684, line: 99, baseType: !152, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2687, file: !2684, line: 99, baseType: !152, size: 32)
!2691 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 100, baseType: !2692, size: 32, offset: 32)
!2692 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 100, size: 32, elements: !2693)
!2693 = !{!2694, !2695}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2692, file: !2684, line: 100, baseType: !152, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2692, file: !2684, line: 100, baseType: !152, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 101, baseType: !2697, size: 32, offset: 64)
!2697 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 101, size: 32, elements: !2698)
!2698 = !{!2699, !2700}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2697, file: !2684, line: 101, baseType: !152, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2697, file: !2684, line: 101, baseType: !152, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 102, baseType: !2702, size: 32, offset: 96)
!2702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 102, size: 32, elements: !2703)
!2703 = !{!2704, !2705}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2702, file: !2684, line: 102, baseType: !152, size: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2702, file: !2684, line: 102, baseType: !152, size: 32)
!2706 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 103, baseType: !2707, size: 32, offset: 128)
!2707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 103, size: 32, elements: !2708)
!2708 = !{!2709, !2710}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2707, file: !2684, line: 103, baseType: !152, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2707, file: !2684, line: 103, baseType: !152, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 104, baseType: !2712, size: 32, offset: 160)
!2712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 104, size: 32, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2712, file: !2684, line: 104, baseType: !152, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2712, file: !2684, line: 104, baseType: !152, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, scope: !2683, file: !2684, line: 105, baseType: !2717, size: 32, offset: 192)
!2717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2683, file: !2684, line: 105, size: 32, elements: !2718)
!2718 = !{!2719, !2720}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2717, file: !2684, line: 105, baseType: !152, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2717, file: !2684, line: 105, baseType: !152, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2683, file: !2684, line: 106, baseType: !152, size: 32, offset: 224)
!2722 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2723, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2566, retainedTypes: !2724, splitDebugInlining: false, nameTableKind: None)
!2723 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2724 = !{!2725, !106, !107, !2750, !2793, !152}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 32)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2727, file: !476, line: 381, baseType: !480, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2727, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2727, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2727, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2727, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2727, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2727, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2727, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2727, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2727, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2727, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2727, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2727, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2727, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2727, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2727, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2727, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2727, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2727, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2727, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2727, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 32)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2684, line: 141, baseType: !2752)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2684, line: 97, size: 256, elements: !2753)
!2753 = !{!2754}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2752, file: !2684, line: 107, baseType: !2755, size: 256)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2684, line: 98, size: 256, elements: !2756)
!2756 = !{!2757, !2762, !2767, !2772, !2777, !2782, !2787, !2792}
!2757 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 99, baseType: !2758, size: 32)
!2758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 99, size: 32, elements: !2759)
!2759 = !{!2760, !2761}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2758, file: !2684, line: 99, baseType: !152, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2758, file: !2684, line: 99, baseType: !152, size: 32)
!2762 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 100, baseType: !2763, size: 32, offset: 32)
!2763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 100, size: 32, elements: !2764)
!2764 = !{!2765, !2766}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2763, file: !2684, line: 100, baseType: !152, size: 32)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2763, file: !2684, line: 100, baseType: !152, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 101, baseType: !2768, size: 32, offset: 64)
!2768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 101, size: 32, elements: !2769)
!2769 = !{!2770, !2771}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2768, file: !2684, line: 101, baseType: !152, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2768, file: !2684, line: 101, baseType: !152, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 102, baseType: !2773, size: 32, offset: 96)
!2773 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 102, size: 32, elements: !2774)
!2774 = !{!2775, !2776}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2773, file: !2684, line: 102, baseType: !152, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2773, file: !2684, line: 102, baseType: !152, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 103, baseType: !2778, size: 32, offset: 128)
!2778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 103, size: 32, elements: !2779)
!2779 = !{!2780, !2781}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2778, file: !2684, line: 103, baseType: !152, size: 32)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2778, file: !2684, line: 103, baseType: !152, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 104, baseType: !2783, size: 32, offset: 160)
!2783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 104, size: 32, elements: !2784)
!2784 = !{!2785, !2786}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2783, file: !2684, line: 104, baseType: !152, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2783, file: !2684, line: 104, baseType: !152, size: 32)
!2787 = !DIDerivedType(tag: DW_TAG_member, scope: !2755, file: !2684, line: 105, baseType: !2788, size: 32, offset: 192)
!2788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2755, file: !2684, line: 105, size: 32, elements: !2789)
!2789 = !{!2790, !2791}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2788, file: !2684, line: 105, baseType: !152, size: 32)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2788, file: !2684, line: 105, baseType: !152, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2755, file: !2684, line: 106, baseType: !152, size: 32, offset: 224)
!2793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!2794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1728, retainedTypes: !2796, splitDebugInlining: false, nameTableKind: None)
!2795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2796 = !{!1002, !984, !195, !152, !2797, !2814}
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !476, line: 360, baseType: !2799)
!2799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 345, size: 28704, elements: !2800)
!2800 = !{!2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813}
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2799, file: !476, line: 347, baseType: !1743, size: 256)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2799, file: !476, line: 348, baseType: !1745, size: 768, offset: 256)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2799, file: !476, line: 349, baseType: !1743, size: 256, offset: 1024)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2799, file: !476, line: 350, baseType: !1745, size: 768, offset: 1280)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2799, file: !476, line: 351, baseType: !1743, size: 256, offset: 2048)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2799, file: !476, line: 352, baseType: !1745, size: 768, offset: 2304)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2799, file: !476, line: 353, baseType: !1743, size: 256, offset: 3072)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2799, file: !476, line: 354, baseType: !1745, size: 768, offset: 3328)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2799, file: !476, line: 355, baseType: !1743, size: 256, offset: 4096)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2799, file: !476, line: 356, baseType: !1756, size: 1792, offset: 4352)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2799, file: !476, line: 357, baseType: !1760, size: 1920, offset: 6144)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2799, file: !476, line: 358, baseType: !1765, size: 20608, offset: 8064)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2799, file: !476, line: 359, baseType: !227, size: 32, offset: 28672)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2816)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2817)
!2817 = !{!2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2816, file: !476, line: 381, baseType: !480, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2816, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2816, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2816, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2816, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2816, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2816, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2816, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2816, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2816, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2816, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2816, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2816, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2816, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2816, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2816, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2816, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2816, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2816, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2816, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2816, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2839 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2840, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2841, splitDebugInlining: false, nameTableKind: None)
!2840 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2841 = !{!2842, !106, !107}
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 32)
!2843 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !476, line: 402, baseType: !2844)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 379, size: 1120, elements: !2845)
!2845 = !{!2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2844, file: !476, line: 381, baseType: !480, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2844, file: !476, line: 382, baseType: !227, size: 32, offset: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2844, file: !476, line: 383, baseType: !227, size: 32, offset: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2844, file: !476, line: 384, baseType: !227, size: 32, offset: 96)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2844, file: !476, line: 385, baseType: !227, size: 32, offset: 128)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2844, file: !476, line: 386, baseType: !227, size: 32, offset: 160)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2844, file: !476, line: 387, baseType: !1780, size: 96, offset: 192)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2844, file: !476, line: 388, baseType: !227, size: 32, offset: 288)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2844, file: !476, line: 389, baseType: !227, size: 32, offset: 320)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2844, file: !476, line: 390, baseType: !227, size: 32, offset: 352)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2844, file: !476, line: 391, baseType: !227, size: 32, offset: 384)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2844, file: !476, line: 392, baseType: !227, size: 32, offset: 416)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2844, file: !476, line: 393, baseType: !227, size: 32, offset: 448)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2844, file: !476, line: 394, baseType: !227, size: 32, offset: 480)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2844, file: !476, line: 395, baseType: !1791, size: 64, offset: 512)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2844, file: !476, line: 396, baseType: !480, size: 32, offset: 576)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2844, file: !476, line: 397, baseType: !480, size: 32, offset: 608)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2844, file: !476, line: 398, baseType: !1795, size: 128, offset: 640)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2844, file: !476, line: 399, baseType: !1797, size: 160, offset: 768)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2844, file: !476, line: 400, baseType: !1799, size: 160, offset: 928)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2844, file: !476, line: 401, baseType: !227, size: 32, offset: 1088)
!2867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2868, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2869, splitDebugInlining: false, nameTableKind: None)
!2868 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2869 = !{!120, !193, !185, !1178, !2870, !196, !106}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!2872 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2873, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2874, splitDebugInlining: false, nameTableKind: None)
!2873 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2874 = !{!2875}
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !2877)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !2878)
!2878 = !{!2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2877, file: !223, line: 372, baseType: !227, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2877, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2877, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2877, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2877, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2877, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2877, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2877, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2877, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2877, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2877, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2877, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2877, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2877, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!2893 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2894, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2894 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2896, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2897, retainedTypes: !2913, splitDebugInlining: false, nameTableKind: None)
!2896 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2897 = !{!2898, !2905, !2909}
!2898 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2899, line: 39, baseType: !32, size: 32, elements: !2900)
!2899 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2900 = !{!2901, !2902, !2903, !2904}
!2901 = !DIEnumerator(name: "HAL_OK", value: 0)
!2902 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2903 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2904 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2905 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1039, line: 183, baseType: !32, size: 32, elements: !2906)
!2906 = !{!2907, !2908}
!2907 = !DIEnumerator(name: "DISABLE", value: 0)
!2908 = !DIEnumerator(name: "ENABLE", value: 1)
!2909 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1039, line: 177, baseType: !32, size: 32, elements: !2910)
!2910 = !{!2911, !2912}
!2911 = !DIEnumerator(name: "RESET", value: 0)
!2912 = !DIEnumerator(name: "SET", value: 1)
!2913 = !{!2914, !106, !152, !195, !2932, !2933, !2939, !197, !2952, !687, !2965}
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 32)
!2915 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !2916)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !2917)
!2917 = !{!2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2916, file: !223, line: 372, baseType: !227, size: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2916, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2916, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2916, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2916, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2916, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2916, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2916, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2916, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2916, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2916, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2916, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2916, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2916, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 364, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 64, elements: !2936)
!2936 = !{!2937, !2938}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2935, file: !223, line: 362, baseType: !227, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2935, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 286, baseType: !2941)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 275, size: 288, elements: !2942)
!2942 = !{!2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2941, file: !223, line: 277, baseType: !227, size: 32)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2941, file: !223, line: 278, baseType: !227, size: 32, offset: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2941, file: !223, line: 279, baseType: !227, size: 32, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2941, file: !223, line: 280, baseType: !227, size: 32, offset: 96)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2941, file: !223, line: 281, baseType: !227, size: 32, offset: 128)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2941, file: !223, line: 282, baseType: !227, size: 32, offset: 160)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2941, file: !223, line: 283, baseType: !227, size: 32, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2941, file: !223, line: 284, baseType: !227, size: 32, offset: 224)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2941, file: !223, line: 285, baseType: !227, size: 32, offset: 256)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 32)
!2953 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !223, line: 314, baseType: !2954)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 303, size: 320, elements: !2955)
!2955 = !{!2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2954, file: !223, line: 305, baseType: !227, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2954, file: !223, line: 306, baseType: !227, size: 32, offset: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2954, file: !223, line: 307, baseType: !227, size: 32, offset: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2954, file: !223, line: 308, baseType: !227, size: 32, offset: 96)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2954, file: !223, line: 309, baseType: !227, size: 32, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2954, file: !223, line: 310, baseType: !227, size: 32, offset: 160)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2954, file: !223, line: 311, baseType: !227, size: 32, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2954, file: !223, line: 312, baseType: !227, size: 32, offset: 224)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2954, file: !223, line: 313, baseType: !1315, size: 64, offset: 256)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 32)
!2966 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2967, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2968, retainedTypes: !2969, splitDebugInlining: false, nameTableKind: None)
!2967 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!2968 = !{!1038}
!2969 = !{!2970, !152, !2978, !2984, !2997}
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !476, line: 712, baseType: !2972)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !476, line: 706, size: 128, elements: !2973)
!2973 = !{!2974, !2975, !2976, !2977}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2972, file: !476, line: 708, baseType: !227, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2972, file: !476, line: 709, baseType: !227, size: 32, offset: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2972, file: !476, line: 710, baseType: !227, size: 32, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2972, file: !476, line: 711, baseType: !480, size: 32, offset: 96)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 32)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !223, line: 364, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 360, size: 64, elements: !2981)
!2981 = !{!2982, !2983}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2980, file: !223, line: 362, baseType: !227, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2980, file: !223, line: 363, baseType: !227, size: 32, offset: 32)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 32)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !223, line: 286, baseType: !2986)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 275, size: 288, elements: !2987)
!2987 = !{!2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2986, file: !223, line: 277, baseType: !227, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2986, file: !223, line: 278, baseType: !227, size: 32, offset: 32)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2986, file: !223, line: 279, baseType: !227, size: 32, offset: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2986, file: !223, line: 280, baseType: !227, size: 32, offset: 96)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2986, file: !223, line: 281, baseType: !227, size: 32, offset: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2986, file: !223, line: 282, baseType: !227, size: 32, offset: 160)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2986, file: !223, line: 283, baseType: !227, size: 32, offset: 192)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2986, file: !223, line: 284, baseType: !227, size: 32, offset: 224)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2986, file: !223, line: 285, baseType: !227, size: 32, offset: 256)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !223, line: 386, baseType: !2999)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !223, line: 370, size: 448, elements: !3000)
!3000 = !{!3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2999, file: !223, line: 372, baseType: !227, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2999, file: !223, line: 373, baseType: !227, size: 32, offset: 32)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2999, file: !223, line: 374, baseType: !227, size: 32, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2999, file: !223, line: 375, baseType: !227, size: 32, offset: 96)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2999, file: !223, line: 376, baseType: !227, size: 32, offset: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2999, file: !223, line: 377, baseType: !227, size: 32, offset: 160)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2999, file: !223, line: 378, baseType: !227, size: 32, offset: 192)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2999, file: !223, line: 379, baseType: !227, size: 32, offset: 224)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2999, file: !223, line: 380, baseType: !227, size: 32, offset: 256)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2999, file: !223, line: 381, baseType: !227, size: 32, offset: 288)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2999, file: !223, line: 382, baseType: !227, size: 32, offset: 320)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2999, file: !223, line: 383, baseType: !227, size: 32, offset: 352)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2999, file: !223, line: 384, baseType: !227, size: 32, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2999, file: !223, line: 385, baseType: !227, size: 32, offset: 416)
!3015 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3016, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3017, splitDebugInlining: false, nameTableKind: None)
!3016 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!3017 = !{!106, !185}
!3018 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3019, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3020, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3019 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!3020 = !{!3021, !3028, !2567, !30}
!3021 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3022, line: 14, baseType: !32, size: 32, elements: !3023)
!3022 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3023 = !{!3024, !3025, !3026, !3027}
!3024 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3025 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3026 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3027 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3028 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3022, line: 42, baseType: !32, size: 32, elements: !3029)
!3029 = !{!3030, !3031, !3032, !3033, !3034, !3035}
!3030 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3031 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3032 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3033 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3034 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3035 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3037, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3037 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!3038 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3039, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3040, splitDebugInlining: false, nameTableKind: None)
!3039 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!3040 = !{!22, !106, !107}
!3041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !105, splitDebugInlining: false, nameTableKind: None)
!3042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!3043 = !{!"Ubuntu clang version 14.0.6"}
!3044 = !{i32 7, !"Dwarf Version", i32 4}
!3045 = !{i32 2, !"Debug Info Version", i32 3}
!3046 = !{i32 1, !"wchar_size", i32 4}
!3047 = !{i32 1, !"min_enum_size", i32 4}
!3048 = !{i32 1, !"branch-target-enforcement", i32 0}
!3049 = !{i32 1, !"sign-return-address", i32 0}
!3050 = !{i32 1, !"sign-return-address-all", i32 0}
!3051 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3052 = !{i32 7, !"frame-pointer", i32 2}
!3053 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3054, file: !3054, line: 26, type: !3055, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2519, retainedNodes: !2175)
!3054 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3055 = !DISubroutineType(types: !3056)
!3056 = !{null}
!3057 = !DILocation(line: 28, column: 1, scope: !3053)
!3058 = !{i64 2152499316, i64 2152499336, i64 2152499399}
!3059 = !DILocation(line: 29, column: 1, scope: !3053)
!3060 = !{i64 2152499731, i64 2152499751, i64 2152499814}
!3061 = !DILocation(line: 30, column: 1, scope: !3053)
!3062 = !{i64 2152500150, i64 2152500170, i64 2152500233}
!3063 = !DILocation(line: 31, column: 1, scope: !3053)
!3064 = !{i64 2152500569, i64 2152500589, i64 2152500652}
!3065 = !DILocation(line: 33, column: 1, scope: !3053)
!3066 = !{i64 2152500861, i64 2152500881, i64 2152500944}
!3067 = !DILocation(line: 35, column: 1, scope: !3053)
!3068 = !{i64 2152501186, i64 2152501206, i64 2152501269}
!3069 = !DILocation(line: 50, column: 1, scope: !3053)
!3070 = !{i64 2152501613, i64 2152501633, i64 2152501696}
!3071 = !DILocation(line: 54, column: 1, scope: !3053)
!3072 = !{i64 2152502052, i64 2152502072, i64 2152502135}
!3073 = !DILocation(line: 61, column: 1, scope: !3053)
!3074 = !{i64 2152502369, i64 2152502389, i64 2152502452}
!3075 = !DILocation(line: 63, column: 1, scope: !3053)
!3076 = !{i64 2152502749, i64 2152502769, i64 2152502832}
!3077 = !DILocation(line: 64, column: 1, scope: !3053)
!3078 = !{i64 2152503271, i64 2152503291, i64 2152503354}
!3079 = !DILocation(line: 65, column: 1, scope: !3053)
!3080 = !{i64 2152503769, i64 2152503789, i64 2152503852}
!3081 = !DILocation(line: 66, column: 1, scope: !3053)
!3082 = !{i64 2152504251, i64 2152504271, i64 2152504334}
!3083 = !DILocation(line: 67, column: 1, scope: !3053)
!3084 = !{i64 2152504758, i64 2152504778, i64 2152504841}
!3085 = !DILocation(line: 68, column: 1, scope: !3053)
!3086 = !{i64 2152505246, i64 2152505266, i64 2152505329}
!3087 = !DILocation(line: 70, column: 1, scope: !3053)
!3088 = !{i64 2152505714, i64 2152505734, i64 2152505797}
!3089 = !DILocation(line: 71, column: 1, scope: !3053)
!3090 = !{i64 2152506156, i64 2152506176, i64 2152506239}
!3091 = !DILocation(line: 72, column: 1, scope: !3053)
!3092 = !{i64 2152506614, i64 2152506634, i64 2152506697}
!3093 = !DILocation(line: 79, column: 1, scope: !3053)
!3094 = !{i64 2152511129, i64 2152511149, i64 2152511212}
!3095 = !DILocation(line: 80, column: 1, scope: !3053)
!3096 = !{i64 2152511640, i64 2152511660, i64 2152511723}
!3097 = !DILocation(line: 82, column: 1, scope: !3053)
!3098 = !{i64 2152512131, i64 2152512151, i64 2152512214}
!3099 = !DILocation(line: 97, column: 1, scope: !3053)
!3100 = !{i64 2152512468, i64 2152512488, i64 2152512551}
!3101 = !DILocation(line: 99, column: 1, scope: !3053)
!3102 = !{i64 2152512686, i64 2152512706, i64 2152512769}
!3103 = !DILocation(line: 102, column: 1, scope: !3053)
!3104 = !{i64 2152512943, i64 2152512963, i64 2152513026}
!3105 = !DILocation(line: 105, column: 1, scope: !3053)
!3106 = !{i64 2152513183, i64 2152513203, i64 2152513266}
!3107 = !DILocation(line: 115, column: 1, scope: !3053)
!3108 = !{i64 2152513522, i64 2152513542, i64 2152513605}
!3109 = !DILocation(line: 118, column: 1, scope: !3053)
!3110 = !{i64 2152513866, i64 2152513886, i64 2152513949}
!3111 = !DILocation(line: 32, column: 1, scope: !3112)
!3112 = !DILexicalBlockFile(scope: !3053, file: !3113, discriminator: 0)
!3113 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3114 = !{i64 2152514222, i64 2152514242, i64 2152514305}
!3115 = !DILocation(line: 33, column: 1, scope: !3112)
!3116 = !{i64 2152514734, i64 2152514754, i64 2152514817}
!3117 = !DILocation(line: 53, column: 1, scope: !3112)
!3118 = !{i64 2152515242, i64 2152515262, i64 2152515325}
!3119 = !DILocation(line: 54, column: 1, scope: !3112)
!3120 = !{i64 2152515660, i64 2152515680, i64 2152515743}
!3121 = !DILocation(line: 55, column: 1, scope: !3112)
!3122 = !{i64 2152516078, i64 2152516098, i64 2152516161}
!3123 = !DILocation(line: 56, column: 1, scope: !3112)
!3124 = !{i64 2152516496, i64 2152516516, i64 2152516579}
!3125 = !DILocation(line: 57, column: 1, scope: !3112)
!3126 = !{i64 2152516914, i64 2152516934, i64 2152516997}
!3127 = !DILocation(line: 58, column: 1, scope: !3112)
!3128 = !{i64 2152517332, i64 2152517352, i64 2152517415}
!3129 = !DILocation(line: 59, column: 1, scope: !3112)
!3130 = !{i64 2152517750, i64 2152517770, i64 2152517833}
!3131 = !DILocation(line: 60, column: 1, scope: !3112)
!3132 = !{i64 2152518174, i64 2152518194, i64 2152518257}
!3133 = !DILocation(line: 61, column: 1, scope: !3112)
!3134 = !{i64 2152518491, i64 2152518511, i64 2152518574}
!3135 = !DILocation(line: 70, column: 1, scope: !3112)
!3136 = !{i64 2152518720, i64 2152518740, i64 2152518803}
!3137 = !DILocation(line: 72, column: 1, scope: !3112)
!3138 = !{i64 2152519052, i64 2152519072, i64 2152519135}
!3139 = !DILocation(line: 73, column: 1, scope: !3112)
!3140 = !{i64 2152519502, i64 2152519522, i64 2152519585}
!3141 = !DILocation(line: 74, column: 1, scope: !3112)
!3142 = !{i64 2152519952, i64 2152519972, i64 2152520035}
!3143 = !DILocation(line: 75, column: 1, scope: !3112)
!3144 = !{i64 2152520402, i64 2152520422, i64 2152520485}
!3145 = !DILocation(line: 76, column: 1, scope: !3112)
!3146 = !{i64 2152524913, i64 2152524933, i64 2152524996}
!3147 = !DILocation(line: 77, column: 1, scope: !3112)
!3148 = !{i64 2152525363, i64 2152525383, i64 2152525446}
!3149 = !DILocation(line: 78, column: 1, scope: !3112)
!3150 = !{i64 2152525813, i64 2152525833, i64 2152525896}
!3151 = !DILocation(line: 79, column: 1, scope: !3112)
!3152 = !{i64 2152526263, i64 2152526283, i64 2152526346}
!3153 = !DILocation(line: 80, column: 1, scope: !3112)
!3154 = !{i64 2152526716, i64 2152526736, i64 2152526799}
!3155 = !DILocation(line: 84, column: 1, scope: !3112)
!3156 = !{i64 2152527048, i64 2152527068, i64 2152527131}
!3157 = !DILocation(line: 91, column: 1, scope: !3112)
!3158 = !{i64 2152527445, i64 2152527465, i64 2152527528}
!3159 = !DILocation(line: 93, column: 1, scope: !3112)
!3160 = !{i64 2152527812, i64 2152527832, i64 2152527895}
!3161 = !DILocation(line: 106, column: 1, scope: !3112)
!3162 = !{i64 2152528082, i64 2152528102, i64 2152528165}
!3163 = !DILocation(line: 11, column: 1, scope: !3164)
!3164 = !DILexicalBlockFile(scope: !3053, file: !3165, discriminator: 0)
!3165 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3166 = distinct !DISubprogram(name: "_test_pytest_test_pytest_wrapper", scope: !111, file: !111, line: 10, type: !131, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3167)
!3167 = !{!3168}
!3168 = !DILocalVariable(name: "data", arg: 1, scope: !3166, file: !111, line: 10, type: !106)
!3169 = !DILocation(line: 0, scope: !3166)
!3170 = !DILocation(line: 10, column: 1, scope: !3166)
!3171 = distinct !DISubprogram(name: "test_pytest_test_pytest", scope: !111, file: !111, line: 10, type: !3055, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2175)
!3172 = !DILocation(line: 12, column: 2, scope: !3171)
!3173 = !DILocation(line: 13, column: 1, scope: !3171)
!3174 = distinct !DISubprogram(name: "cbvprintf_package", scope: !200, file: !200, line: 233, type: !3175, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3184)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!107, !106, !185, !152, !118, !3177}
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3178, line: 99, baseType: !3179)
!3178 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3178, line: 40, baseType: !3180)
!3180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !200, baseType: !3181)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3182)
!3182 = !{!3183}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3181, file: !200, line: 18, baseType: !106, size: 32)
!3184 = !{!3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3194, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3220, !3229, !3232, !3233, !3236, !3239, !3242, !3245, !3251}
!3185 = !DILocalVariable(name: "packaged", arg: 1, scope: !3174, file: !200, line: 233, type: !106)
!3186 = !DILocalVariable(name: "len", arg: 2, scope: !3174, file: !200, line: 233, type: !185)
!3187 = !DILocalVariable(name: "flags", arg: 3, scope: !3174, file: !200, line: 233, type: !152)
!3188 = !DILocalVariable(name: "fmt", arg: 4, scope: !3174, file: !200, line: 234, type: !118)
!3189 = !DILocalVariable(name: "ap", arg: 5, scope: !3174, file: !200, line: 234, type: !3177)
!3190 = !DILocalVariable(name: "buf0", scope: !3174, file: !200, line: 247, type: !194)
!3191 = !DILocalVariable(name: "buf", scope: !3174, file: !200, line: 248, type: !194)
!3192 = !DILocalVariable(name: "size", scope: !3174, file: !200, line: 249, type: !32)
!3193 = !DILocalVariable(name: "align", scope: !3174, file: !200, line: 250, type: !32)
!3194 = !DILocalVariable(name: "str_ptr_pos", scope: !3174, file: !200, line: 251, type: !3195)
!3195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !970)
!3196 = !DILocalVariable(name: "str_ptr_arg", scope: !3174, file: !200, line: 252, type: !3195)
!3197 = !DILocalVariable(name: "s_idx", scope: !3174, file: !200, line: 253, type: !32)
!3198 = !DILocalVariable(name: "s_rw_cnt", scope: !3174, file: !200, line: 254, type: !32)
!3199 = !DILocalVariable(name: "s_ro_cnt", scope: !3174, file: !200, line: 255, type: !32)
!3200 = !DILocalVariable(name: "arg_idx", scope: !3174, file: !200, line: 256, type: !107)
!3201 = !DILocalVariable(name: "i", scope: !3174, file: !200, line: 257, type: !32)
!3202 = !DILocalVariable(name: "s", scope: !3174, file: !200, line: 258, type: !118)
!3203 = !DILocalVariable(name: "parsing", scope: !3174, file: !200, line: 259, type: !145)
!3204 = !DILocalVariable(name: "rws_pos_en", scope: !3174, file: !200, line: 263, type: !145)
!3205 = !DILocalVariable(name: "fros_cnt", scope: !3174, file: !200, line: 268, type: !107)
!3206 = !DILocalVariable(name: "is_str_arg", scope: !3174, file: !200, line: 269, type: !145)
!3207 = !DILocalVariable(name: "pkg_hdr", scope: !3174, file: !200, line: 270, type: !3208)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 32)
!3209 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3210, line: 78, size: 32, elements: !3211)
!3210 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3211 = !{!3212, !3219}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3209, file: !3210, line: 80, baseType: !3213, size: 32)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3210, line: 45, size: 32, elements: !3214)
!3214 = !{!3215, !3216, !3217, !3218}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3213, file: !3210, line: 47, baseType: !195, size: 8)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3213, file: !3210, line: 50, baseType: !195, size: 8, offset: 8)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3213, file: !3210, line: 53, baseType: !195, size: 8, offset: 16)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3213, file: !3210, line: 56, baseType: !195, size: 8, offset: 24)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3209, file: !3210, line: 82, baseType: !106, size: 32)
!3220 = !DILocalVariable(name: "v", scope: !3221, file: !200, line: 567, type: !3225)
!3221 = distinct !DILexicalBlock(scope: !3222, file: !200, line: 562, column: 14)
!3222 = distinct !DILexicalBlock(scope: !3223, file: !200, line: 481, column: 18)
!3223 = distinct !DILexicalBlock(scope: !3224, file: !200, line: 466, column: 3)
!3224 = distinct !DILexicalBlock(scope: !3174, file: !200, line: 343, column: 15)
!3225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3174, file: !200, line: 567, size: 64, elements: !3226)
!3226 = !{!3227, !3228}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3225, file: !200, line: 567, baseType: !183, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3225, file: !200, line: 567, baseType: !181, size: 64)
!3229 = !DILocalVariable(name: "is_ro", scope: !3230, file: !200, line: 620, type: !145)
!3230 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 613, column: 19)
!3231 = distinct !DILexicalBlock(scope: !3224, file: !200, line: 613, column: 7)
!3232 = !DILocalVariable(name: "do_ro", scope: !3230, file: !200, line: 621, type: !145)
!3233 = !DILocalVariable(name: "s_ptr_idx", scope: !3234, file: !200, line: 626, type: !152)
!3234 = distinct !DILexicalBlock(scope: !3235, file: !200, line: 625, column: 11)
!3235 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 623, column: 8)
!3236 = !DILocalVariable(name: "v", scope: !3237, file: !200, line: 684, type: !107)
!3237 = distinct !DILexicalBlock(scope: !3238, file: !200, line: 683, column: 35)
!3238 = distinct !DILexicalBlock(scope: !3231, file: !200, line: 683, column: 14)
!3239 = !DILocalVariable(name: "v", scope: !3240, file: !200, line: 691, type: !189)
!3240 = distinct !DILexicalBlock(scope: !3241, file: !200, line: 690, column: 36)
!3241 = distinct !DILexicalBlock(scope: !3238, file: !200, line: 690, column: 14)
!3242 = !DILocalVariable(name: "v", scope: !3243, file: !200, line: 698, type: !191)
!3243 = distinct !DILexicalBlock(scope: !3244, file: !200, line: 697, column: 41)
!3244 = distinct !DILexicalBlock(scope: !3241, file: !200, line: 697, column: 14)
!3245 = !DILocalVariable(name: "pos", scope: !3246, file: !200, line: 762, type: !195)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !200, line: 757, column: 31)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !200, line: 757, column: 3)
!3248 = distinct !DILexicalBlock(scope: !3249, file: !200, line: 757, column: 3)
!3249 = distinct !DILexicalBlock(scope: !3250, file: !200, line: 756, column: 16)
!3250 = distinct !DILexicalBlock(scope: !3174, file: !200, line: 756, column: 6)
!3251 = !DILabel(scope: !3230, name: "process_string", file: !200, line: 615)
!3252 = !DILocation(line: 0, scope: !3174)
!3253 = !DILocation(line: 251, column: 2, scope: !3174)
!3254 = !DILocation(line: 251, column: 10, scope: !3174)
!3255 = !DILocation(line: 252, column: 2, scope: !3174)
!3256 = !DILocation(line: 252, column: 10, scope: !3174)
!3257 = !DILocation(line: 263, column: 29, scope: !3174)
!3258 = !DILocation(line: 263, column: 21, scope: !3174)
!3259 = !DILocation(line: 268, column: 21, scope: !3174)
!3260 = !DILocation(line: 268, column: 19, scope: !3174)
!3261 = !DILocation(line: 273, column: 6, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3174, file: !200, line: 273, column: 6)
!3263 = !DILocation(line: 273, column: 26, scope: !3262)
!3264 = !DILocation(line: 273, column: 6, scope: !3174)
!3265 = !DILocation(line: 297, column: 6, scope: !3174)
!3266 = !DILocation(line: 305, column: 11, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3174, file: !200, line: 305, column: 6)
!3268 = !DILocation(line: 305, column: 6, scope: !3174)
!3269 = !DILocation(line: 327, column: 19, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3174, file: !200, line: 327, column: 6)
!3271 = !DILocation(line: 327, column: 22, scope: !3270)
!3272 = !DILocation(line: 327, column: 33, scope: !3270)
!3273 = !DILocation(line: 327, column: 50, scope: !3270)
!3274 = !DILocation(line: 327, column: 6, scope: !3174)
!3275 = !DILocation(line: 338, column: 9, scope: !3174)
!3276 = !DILocation(line: 341, column: 2, scope: !3174)
!3277 = !DILocation(line: 472, column: 8, scope: !3223)
!3278 = !DILocation(line: 473, column: 14, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !200, line: 473, column: 9)
!3280 = distinct !DILexicalBlock(scope: !3281, file: !200, line: 472, column: 18)
!3281 = distinct !DILexicalBlock(scope: !3223, file: !200, line: 472, column: 8)
!3282 = !DILocation(line: 473, column: 9, scope: !3280)
!3283 = !DILocation(line: 479, column: 5, scope: !3280)
!3284 = !DILocation(line: 468, column: 9, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3223, file: !200, line: 468, column: 8)
!3286 = !DILocation(line: 468, column: 8, scope: !3285)
!3287 = !DILocation(line: 468, column: 15, scope: !3285)
!3288 = !DILocation(line: 468, column: 8, scope: !3223)
!3289 = distinct !{!3289, !3290, !3291}
!3290 = !DILocation(line: 343, column: 2, scope: !3174)
!3291 = !DILocation(line: 712, column: 2, scope: !3174)
!3292 = !DILocation(line: 481, column: 4, scope: !3223)
!3293 = !DILocation(line: 484, column: 12, scope: !3222)
!3294 = !DILocation(line: 485, column: 5, scope: !3222)
!3295 = !DILocation(line: 505, column: 5, scope: !3222)
!3296 = !DILocation(line: 518, column: 5, scope: !3222)
!3297 = !DILocation(line: 523, column: 5, scope: !3222)
!3298 = !DILocation(line: 532, column: 9, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3222, file: !200, line: 532, column: 9)
!3300 = !DILocation(line: 532, column: 17, scope: !3299)
!3301 = !DILocation(line: 532, column: 9, scope: !3222)
!3302 = !DILocation(line: 533, column: 10, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !200, line: 533, column: 10)
!3304 = distinct !DILexicalBlock(scope: !3299, file: !200, line: 532, column: 25)
!3305 = !DILocation(line: 533, column: 18, scope: !3303)
!3306 = !DILocation(line: 0, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3221, file: !200, line: 569, column: 9)
!3308 = !DILocation(line: 0, scope: !3221)
!3309 = !DILocation(line: 579, column: 20, scope: !3221)
!3310 = !DILocation(line: 579, column: 11, scope: !3221)
!3311 = !DILocation(line: 580, column: 9, scope: !3221)
!3312 = !DILocation(line: 582, column: 21, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3314, file: !200, line: 582, column: 10)
!3314 = distinct !DILexicalBlock(scope: !3315, file: !200, line: 580, column: 23)
!3315 = distinct !DILexicalBlock(scope: !3221, file: !200, line: 580, column: 9)
!3316 = !DILocation(line: 582, column: 28, scope: !3313)
!3317 = !DILocation(line: 582, column: 10, scope: !3314)
!3318 = !DILocation(line: 0, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3320, file: !200, line: 587, column: 17)
!3320 = distinct !DILexicalBlock(scope: !3314, file: !200, line: 585, column: 10)
!3321 = !DILocation(line: 593, column: 9, scope: !3221)
!3322 = !DILocation(line: 600, column: 5, scope: !3222)
!3323 = !DILocation(line: 605, column: 18, scope: !3224)
!3324 = !DILocation(line: 605, column: 9, scope: !3224)
!3325 = !DILocation(line: 608, column: 20, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3224, file: !200, line: 608, column: 7)
!3327 = !DILocation(line: 608, column: 23, scope: !3326)
!3328 = !DILocation(line: 608, column: 34, scope: !3326)
!3329 = !DILocation(line: 608, column: 41, scope: !3326)
!3330 = !DILocation(line: 608, column: 7, scope: !3224)
!3331 = !DILocation(line: 613, column: 7, scope: !3224)
!3332 = !DILocation(line: 614, column: 8, scope: !3230)
!3333 = !DILocation(line: 614, column: 4, scope: !3230)
!3334 = !DILocation(line: 256, column: 6, scope: !3174)
!3335 = !DILocation(line: 254, column: 15, scope: !3174)
!3336 = !DILocation(line: 320, column: 7, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3267, file: !200, line: 305, column: 20)
!3338 = !DILocation(line: 615, column: 1, scope: !3230)
!3339 = !DILocation(line: 616, column: 8, scope: !3230)
!3340 = !DILocation(line: 617, column: 5, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !200, line: 616, column: 22)
!3342 = distinct !DILexicalBlock(scope: !3230, file: !200, line: 616, column: 8)
!3343 = !DILocation(line: 617, column: 25, scope: !3341)
!3344 = !DILocation(line: 618, column: 4, scope: !3341)
!3345 = !DILocation(line: 620, column: 26, scope: !3230)
!3346 = !DILocation(line: 620, column: 29, scope: !3230)
!3347 = !DILocation(line: 620, column: 17, scope: !3230)
!3348 = !DILocation(line: 620, column: 43, scope: !3230)
!3349 = !DILocation(line: 0, scope: !3230)
!3350 = !DILocation(line: 623, column: 14, scope: !3235)
!3351 = !DILocation(line: 626, column: 26, scope: !3234)
!3352 = !DILocation(line: 626, column: 37, scope: !3234)
!3353 = !DILocation(line: 0, scope: !3234)
!3354 = !DILocation(line: 634, column: 15, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3234, file: !200, line: 634, column: 9)
!3356 = !DILocation(line: 635, column: 6, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3358, file: !200, line: 635, column: 6)
!3358 = distinct !DILexicalBlock(scope: !3359, file: !200, line: 635, column: 6)
!3359 = distinct !DILexicalBlock(scope: !3360, file: !200, line: 635, column: 6)
!3360 = distinct !DILexicalBlock(scope: !3355, file: !200, line: 634, column: 44)
!3361 = !DILocation(line: 639, column: 15, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3234, file: !200, line: 639, column: 9)
!3363 = !DILocation(line: 639, column: 9, scope: !3234)
!3364 = !DILocation(line: 640, column: 6, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3366, file: !200, line: 640, column: 6)
!3366 = distinct !DILexicalBlock(scope: !3367, file: !200, line: 640, column: 6)
!3367 = distinct !DILexicalBlock(scope: !3368, file: !200, line: 640, column: 6)
!3368 = distinct !DILexicalBlock(scope: !3362, file: !200, line: 639, column: 43)
!3369 = !DILocation(line: 644, column: 9, scope: !3234)
!3370 = !DILocation(line: 649, column: 27, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3372, file: !200, line: 644, column: 23)
!3372 = distinct !DILexicalBlock(scope: !3234, file: !200, line: 644, column: 9)
!3373 = !DILocation(line: 649, column: 6, scope: !3371)
!3374 = !DILocation(line: 649, column: 25, scope: !3371)
!3375 = !DILocation(line: 650, column: 27, scope: !3371)
!3376 = !DILocation(line: 650, column: 6, scope: !3371)
!3377 = !DILocation(line: 650, column: 25, scope: !3371)
!3378 = !DILocation(line: 651, column: 10, scope: !3371)
!3379 = !DILocation(line: 653, column: 26, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3381, file: !200, line: 651, column: 17)
!3381 = distinct !DILexicalBlock(scope: !3371, file: !200, line: 651, column: 10)
!3382 = !DILocation(line: 654, column: 15, scope: !3380)
!3383 = !DILocation(line: 655, column: 6, scope: !3380)
!3384 = !DILocation(line: 656, column: 15, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3381, file: !200, line: 655, column: 13)
!3386 = !DILocation(line: 658, column: 16, scope: !3372)
!3387 = !DILocation(line: 663, column: 10, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3389, file: !200, line: 658, column: 23)
!3389 = distinct !DILexicalBlock(scope: !3372, file: !200, line: 658, column: 16)
!3390 = !DILocation(line: 664, column: 5, scope: !3388)
!3391 = !DILocation(line: 664, column: 16, scope: !3389)
!3392 = !DILocation(line: 669, column: 10, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3394, file: !200, line: 664, column: 28)
!3394 = distinct !DILexicalBlock(scope: !3389, file: !200, line: 664, column: 16)
!3395 = !DILocation(line: 670, column: 5, scope: !3393)
!3396 = !DILocation(line: 675, column: 13, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3394, file: !200, line: 670, column: 12)
!3398 = !DILocation(line: 675, column: 27, scope: !3397)
!3399 = !DILocation(line: 675, column: 10, scope: !3397)
!3400 = !DILocation(line: 678, column: 10, scope: !3234)
!3401 = !DILocation(line: 680, column: 8, scope: !3230)
!3402 = !DILocation(line: 683, column: 14, scope: !3231)
!3403 = !DILocation(line: 684, column: 12, scope: !3237)
!3404 = !DILocation(line: 0, scope: !3237)
!3405 = !DILocation(line: 686, column: 8, scope: !3237)
!3406 = !DILocation(line: 687, column: 5, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3408, file: !200, line: 686, column: 22)
!3408 = distinct !DILexicalBlock(scope: !3237, file: !200, line: 686, column: 8)
!3409 = !DILocation(line: 687, column: 17, scope: !3407)
!3410 = !DILocation(line: 688, column: 4, scope: !3407)
!3411 = !DILocation(line: 698, column: 18, scope: !3243)
!3412 = !DILocation(line: 0, scope: !3243)
!3413 = !DILocation(line: 700, column: 8, scope: !3243)
!3414 = !DILocation(line: 704, column: 6, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !200, line: 703, column: 12)
!3416 = distinct !DILexicalBlock(scope: !3417, file: !200, line: 701, column: 9)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !200, line: 700, column: 22)
!3418 = distinct !DILexicalBlock(scope: !3243, file: !200, line: 700, column: 8)
!3419 = !DILocation(line: 704, column: 24, scope: !3415)
!3420 = !DILocation(line: 706, column: 4, scope: !3417)
!3421 = !DILocation(line: 709, column: 4, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !200, line: 709, column: 4)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !200, line: 709, column: 4)
!3424 = distinct !DILexicalBlock(scope: !3425, file: !200, line: 709, column: 4)
!3425 = distinct !DILexicalBlock(scope: !3244, file: !200, line: 708, column: 10)
!3426 = !DILocation(line: 0, scope: !3238)
!3427 = !DILocation(line: 0, scope: !3224)
!3428 = !DILocation(line: 720, column: 6, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3174, file: !200, line: 720, column: 6)
!3430 = !DILocation(line: 720, column: 17, scope: !3429)
!3431 = !DILocation(line: 720, column: 31, scope: !3429)
!3432 = !DILocation(line: 720, column: 6, scope: !3174)
!3433 = !DILocation(line: 721, column: 3, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !200, line: 721, column: 3)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !200, line: 721, column: 3)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !200, line: 721, column: 3)
!3437 = distinct !DILexicalBlock(scope: !3429, file: !200, line: 720, column: 38)
!3438 = !DILocation(line: 729, column: 6, scope: !3174)
!3439 = !DILocation(line: 730, column: 21, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !200, line: 729, column: 20)
!3441 = distinct !DILexicalBlock(scope: !3174, file: !200, line: 729, column: 6)
!3442 = !DILocation(line: 730, column: 27, scope: !3440)
!3443 = !DILocation(line: 730, column: 3, scope: !3440)
!3444 = !DILocation(line: 737, column: 22, scope: !3174)
!3445 = !DILocation(line: 737, column: 20, scope: !3174)
!3446 = !DILocation(line: 0, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3174, file: !200, line: 739, column: 6)
!3448 = !DILocation(line: 745, column: 17, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3447, file: !200, line: 743, column: 9)
!3450 = !DILocation(line: 745, column: 25, scope: !3449)
!3451 = !DILocation(line: 746, column: 17, scope: !3449)
!3452 = !DILocation(line: 746, column: 28, scope: !3449)
!3453 = !DILocation(line: 749, column: 29, scope: !3174)
!3454 = !DILocation(line: 749, column: 16, scope: !3174)
!3455 = !DILocation(line: 749, column: 27, scope: !3174)
!3456 = !DILocation(line: 756, column: 6, scope: !3250)
!3457 = !DILocation(line: 756, column: 6, scope: !3174)
!3458 = !DILocation(line: 757, column: 3, scope: !3248)
!3459 = !DILocation(line: 758, column: 10, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3246, file: !200, line: 758, column: 8)
!3461 = !DILocation(line: 758, column: 25, scope: !3460)
!3462 = !DILocation(line: 758, column: 8, scope: !3246)
!3463 = !DILocation(line: 0, scope: !3246)
!3464 = !DILocation(line: 765, column: 8, scope: !3465)
!3465 = distinct !DILexicalBlock(scope: !3246, file: !200, line: 765, column: 8)
!3466 = !DILocation(line: 765, column: 19, scope: !3465)
!3467 = !DILocation(line: 765, column: 23, scope: !3465)
!3468 = !DILocation(line: 765, column: 8, scope: !3246)
!3469 = !DILocation(line: 762, column: 33, scope: !3246)
!3470 = !DILocation(line: 769, column: 8, scope: !3246)
!3471 = !DILocation(line: 769, column: 11, scope: !3246)
!3472 = !DILocation(line: 757, column: 27, scope: !3247)
!3473 = !DILocation(line: 757, column: 17, scope: !3247)
!3474 = distinct !{!3474, !3458, !3475}
!3475 = !DILocation(line: 770, column: 3, scope: !3248)
!3476 = !DILocation(line: 774, column: 16, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3478, file: !200, line: 774, column: 2)
!3478 = distinct !DILexicalBlock(scope: !3174, file: !200, line: 774, column: 2)
!3479 = !DILocation(line: 774, column: 2, scope: !3478)
!3480 = !DILocation(line: 776, column: 16, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3482, file: !200, line: 776, column: 7)
!3482 = distinct !DILexicalBlock(scope: !3477, file: !200, line: 774, column: 30)
!3483 = !DILocation(line: 776, column: 19, scope: !3481)
!3484 = !DILocation(line: 776, column: 34, scope: !3481)
!3485 = !DILocation(line: 776, column: 7, scope: !3482)
!3486 = !DILocation(line: 780, column: 7, scope: !3482)
!3487 = !DILocation(line: 782, column: 13, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !200, line: 780, column: 19)
!3489 = distinct !DILexicalBlock(scope: !3482, file: !200, line: 780, column: 7)
!3490 = !DILocation(line: 782, column: 8, scope: !3488)
!3491 = !DILocation(line: 782, column: 11, scope: !3488)
!3492 = !DILocation(line: 783, column: 3, scope: !3488)
!3493 = !DILocation(line: 785, column: 26, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3489, file: !200, line: 783, column: 10)
!3495 = !DILocation(line: 785, column: 41, scope: !3494)
!3496 = !DILocation(line: 785, column: 24, scope: !3494)
!3497 = !DILocation(line: 785, column: 8, scope: !3494)
!3498 = !DILocation(line: 787, column: 52, scope: !3494)
!3499 = !DILocation(line: 789, column: 11, scope: !3494)
!3500 = !DILocation(line: 789, column: 21, scope: !3494)
!3501 = !DILocation(line: 0, scope: !3489)
!3502 = !DILocation(line: 793, column: 7, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3482, file: !200, line: 793, column: 7)
!3504 = !DILocation(line: 793, column: 18, scope: !3503)
!3505 = !DILocation(line: 793, column: 22, scope: !3503)
!3506 = !DILocation(line: 793, column: 29, scope: !3503)
!3507 = !DILocation(line: 793, column: 7, scope: !3482)
!3508 = !DILocation(line: 797, column: 12, scope: !3482)
!3509 = !DILocation(line: 797, column: 7, scope: !3482)
!3510 = !DILocation(line: 797, column: 10, scope: !3482)
!3511 = !DILocation(line: 799, column: 3, scope: !3482)
!3512 = !DILocation(line: 800, column: 7, scope: !3482)
!3513 = !DILocation(line: 801, column: 2, scope: !3482)
!3514 = !DILocation(line: 338, column: 4, scope: !3174)
!3515 = !DILocation(line: 774, column: 26, scope: !3477)
!3516 = distinct !{!3516, !3479, !3517}
!3517 = !DILocation(line: 801, column: 2, scope: !3478)
!3518 = !DILocation(line: 808, column: 9, scope: !3174)
!3519 = !DILocation(line: 808, column: 2, scope: !3174)
!3520 = !DILocation(line: 813, column: 1, scope: !3174)
!3521 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !200, file: !200, line: 33, type: !3522, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3524)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!145, !118}
!3524 = !{!3525}
!3525 = !DILocalVariable(name: "addr", arg: 1, scope: !3521, file: !200, line: 33, type: !118)
!3526 = !DILocation(line: 0, scope: !3521)
!3527 = !DILocation(line: 41, column: 9, scope: !3521)
!3528 = !DILocation(line: 41, column: 2, scope: !3521)
!3529 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3530, file: !3530, line: 24, type: !143, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3531)
!3530 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3531 = !{!3532}
!3532 = !DILocalVariable(name: "addr", arg: 1, scope: !3529, file: !3530, line: 24, type: !13)
!3533 = !DILocation(line: 0, scope: !3529)
!3534 = !DILocation(line: 49, column: 30, scope: !3529)
!3535 = !DILocation(line: 49, column: 57, scope: !3529)
!3536 = !DILocation(line: 49, column: 2, scope: !3529)
!3537 = distinct !DISubprogram(name: "cbprintf_package", scope: !200, file: !200, line: 815, type: !3538, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3540)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!107, !106, !185, !152, !118, null}
!3540 = !{!3541, !3542, !3543, !3544, !3545, !3546}
!3541 = !DILocalVariable(name: "packaged", arg: 1, scope: !3537, file: !200, line: 815, type: !106)
!3542 = !DILocalVariable(name: "len", arg: 2, scope: !3537, file: !200, line: 815, type: !185)
!3543 = !DILocalVariable(name: "flags", arg: 3, scope: !3537, file: !200, line: 815, type: !152)
!3544 = !DILocalVariable(name: "format", arg: 4, scope: !3537, file: !200, line: 816, type: !118)
!3545 = !DILocalVariable(name: "ap", scope: !3537, file: !200, line: 818, type: !3177)
!3546 = !DILocalVariable(name: "ret", scope: !3537, file: !200, line: 819, type: !107)
!3547 = !DILocation(line: 0, scope: !3537)
!3548 = !DILocation(line: 818, column: 2, scope: !3537)
!3549 = !DILocation(line: 818, column: 10, scope: !3537)
!3550 = !DILocation(line: 821, column: 2, scope: !3537)
!3551 = !DILocation(line: 822, column: 8, scope: !3537)
!3552 = !DILocation(line: 823, column: 2, scope: !3537)
!3553 = !DILocation(line: 825, column: 1, scope: !3537)
!3554 = !DILocation(line: 824, column: 2, scope: !3537)
!3555 = distinct !DISubprogram(name: "cbpprintf_external", scope: !200, file: !200, line: 827, type: !3556, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3566)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!107, !3558, !3562, !106, !106}
!3558 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3210, line: 297, baseType: !3559)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 32)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!107, null}
!3562 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3210, line: 328, baseType: !3563)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 32)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{!107, !3558, !106, !118, !3177}
!3566 = !{!3567, !3568, !3569, !3570, !3571, !3572, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585}
!3567 = !DILocalVariable(name: "out", arg: 1, scope: !3555, file: !200, line: 827, type: !3558)
!3568 = !DILocalVariable(name: "formatter", arg: 2, scope: !3555, file: !200, line: 828, type: !3562)
!3569 = !DILocalVariable(name: "ctx", arg: 3, scope: !3555, file: !200, line: 829, type: !106)
!3570 = !DILocalVariable(name: "packaged", arg: 4, scope: !3555, file: !200, line: 829, type: !106)
!3571 = !DILocalVariable(name: "buf", scope: !3555, file: !200, line: 831, type: !194)
!3572 = !DILocalVariable(name: "hdr", scope: !3555, file: !200, line: 832, type: !3573)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 32)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3210, line: 96, size: 64, elements: !3575)
!3575 = !{!3576, !3577}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3574, file: !3210, line: 98, baseType: !3209, size: 32)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3574, file: !3210, line: 101, baseType: !193, size: 32, offset: 32)
!3578 = !DILocalVariable(name: "s", scope: !3555, file: !200, line: 833, type: !193)
!3579 = !DILocalVariable(name: "ps", scope: !3555, file: !200, line: 833, type: !192)
!3580 = !DILocalVariable(name: "i", scope: !3555, file: !200, line: 834, type: !32)
!3581 = !DILocalVariable(name: "args_size", scope: !3555, file: !200, line: 834, type: !32)
!3582 = !DILocalVariable(name: "s_nbr", scope: !3555, file: !200, line: 834, type: !32)
!3583 = !DILocalVariable(name: "ros_nbr", scope: !3555, file: !200, line: 834, type: !32)
!3584 = !DILocalVariable(name: "rws_nbr", scope: !3555, file: !200, line: 834, type: !32)
!3585 = !DILocalVariable(name: "s_idx", scope: !3555, file: !200, line: 834, type: !32)
!3586 = !DILocation(line: 0, scope: !3555)
!3587 = !DILocation(line: 836, column: 10, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3555, file: !200, line: 836, column: 6)
!3589 = !DILocation(line: 836, column: 6, scope: !3555)
!3590 = !DILocation(line: 842, column: 28, scope: !3555)
!3591 = !DILocation(line: 842, column: 14, scope: !3555)
!3592 = !DILocation(line: 852, column: 16, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3594, file: !200, line: 852, column: 2)
!3594 = distinct !DILexicalBlock(scope: !3555, file: !200, line: 852, column: 2)
!3595 = !DILocation(line: 852, column: 2, scope: !3594)
!3596 = !DILocation(line: 841, column: 28, scope: !3555)
!3597 = !DILocation(line: 841, column: 14, scope: !3555)
!3598 = !DILocation(line: 841, column: 32, scope: !3555)
!3599 = !DILocation(line: 847, column: 19, scope: !3555)
!3600 = !DILocation(line: 843, column: 28, scope: !3555)
!3601 = !DILocation(line: 843, column: 14, scope: !3555)
!3602 = !DILocation(line: 847, column: 31, scope: !3555)
!3603 = !DILocation(line: 844, column: 28, scope: !3555)
!3604 = !DILocation(line: 844, column: 14, scope: !3555)
!3605 = !DILocation(line: 847, column: 45, scope: !3555)
!3606 = !DILocation(line: 847, column: 41, scope: !3555)
!3607 = !DILocation(line: 854, column: 24, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3593, file: !200, line: 852, column: 30)
!3609 = !DILocation(line: 854, column: 11, scope: !3608)
!3610 = !DILocation(line: 855, column: 30, scope: !3608)
!3611 = !DILocation(line: 855, column: 22, scope: !3608)
!3612 = !DILocation(line: 855, column: 8, scope: !3608)
!3613 = !DILocation(line: 857, column: 7, scope: !3608)
!3614 = !DILocation(line: 859, column: 8, scope: !3608)
!3615 = !DILocation(line: 859, column: 18, scope: !3608)
!3616 = !DILocation(line: 859, column: 5, scope: !3608)
!3617 = !DILocation(line: 852, column: 26, scope: !3593)
!3618 = distinct !{!3618, !3595, !3619}
!3619 = !DILocation(line: 860, column: 2, scope: !3594)
!3620 = !DILocation(line: 863, column: 6, scope: !3555)
!3621 = !DILocation(line: 866, column: 56, scope: !3555)
!3622 = !DILocation(line: 866, column: 9, scope: !3555)
!3623 = !DILocation(line: 866, column: 2, scope: !3555)
!3624 = !DILocation(line: 867, column: 1, scope: !3555)
!3625 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !200, file: !200, line: 179, type: !3626, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3628)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!107, !3558, !3562, !106, !118, !106}
!3628 = !{!3629, !3630, !3631, !3632, !3633, !3634}
!3629 = !DILocalVariable(name: "out", arg: 1, scope: !3625, file: !200, line: 179, type: !3558)
!3630 = !DILocalVariable(name: "formatter", arg: 2, scope: !3625, file: !200, line: 180, type: !3562)
!3631 = !DILocalVariable(name: "ctx", arg: 3, scope: !3625, file: !200, line: 181, type: !106)
!3632 = !DILocalVariable(name: "fmt", arg: 4, scope: !3625, file: !200, line: 182, type: !118)
!3633 = !DILocalVariable(name: "buf", arg: 5, scope: !3625, file: !200, line: 182, type: !106)
!3634 = !DILocalVariable(name: "u", scope: !3625, file: !200, line: 187, type: !3635)
!3635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3625, file: !200, line: 184, size: 32, elements: !3636)
!3636 = !{!3637, !3638}
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3635, file: !200, line: 185, baseType: !3177, size: 32)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3635, file: !200, line: 186, baseType: !106, size: 32)
!3639 = !DILocation(line: 0, scope: !3625)
!3640 = !DILocation(line: 191, column: 9, scope: !3625)
!3641 = !DILocation(line: 191, column: 2, scope: !3625)
!3642 = distinct !DISubprogram(name: "is_ptr", scope: !200, file: !200, line: 881, type: !3643, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3645)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{!145, !118, !107}
!3645 = !{!3646, !3647, !3648, !3649, !3650}
!3646 = !DILocalVariable(name: "fmt", arg: 1, scope: !3642, file: !200, line: 881, type: !118)
!3647 = !DILocalVariable(name: "n", arg: 2, scope: !3642, file: !200, line: 881, type: !107)
!3648 = !DILocalVariable(name: "c", scope: !3642, file: !200, line: 883, type: !120)
!3649 = !DILocalVariable(name: "mod", scope: !3642, file: !200, line: 884, type: !145)
!3650 = !DILocalVariable(name: "cnt", scope: !3642, file: !200, line: 885, type: !107)
!3651 = !DILocation(line: 0, scope: !3642)
!3652 = !DILocation(line: 887, column: 14, scope: !3642)
!3653 = !DILocation(line: 887, column: 22, scope: !3642)
!3654 = !DILocation(line: 887, column: 2, scope: !3642)
!3655 = !DILocation(line: 887, column: 18, scope: !3642)
!3656 = !DILocation(line: 888, column: 7, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3642, file: !200, line: 887, column: 31)
!3658 = !DILocation(line: 889, column: 12, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3660, file: !200, line: 889, column: 8)
!3660 = distinct !DILexicalBlock(scope: !3661, file: !200, line: 888, column: 12)
!3661 = distinct !DILexicalBlock(scope: !3657, file: !200, line: 888, column: 7)
!3662 = !DILocation(line: 889, column: 8, scope: !3660)
!3663 = !DILocation(line: 890, column: 11, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !200, line: 890, column: 9)
!3665 = distinct !DILexicalBlock(scope: !3659, file: !200, line: 889, column: 18)
!3666 = !DILocation(line: 890, column: 9, scope: !3665)
!3667 = !DILocation(line: 892, column: 16, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3664, file: !200, line: 892, column: 16)
!3669 = !DILocation(line: 892, column: 16, scope: !3664)
!3670 = !DILocation(line: 895, column: 15, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3659, file: !200, line: 895, column: 15)
!3672 = !DILocation(line: 895, column: 15, scope: !3659)
!3673 = !DILocation(line: 900, column: 9, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3657, file: !200, line: 900, column: 7)
!3675 = !DILocation(line: 900, column: 7, scope: !3657)
!3676 = distinct !{!3676, !3654, !3677}
!3677 = !DILocation(line: 903, column: 2, scope: !3642)
!3678 = !DILocation(line: 906, column: 1, scope: !3642)
!3679 = distinct !DISubprogram(name: "is_fmt_spec", scope: !200, file: !200, line: 873, type: !3680, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3682)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{!145, !120}
!3682 = !{!3683}
!3683 = !DILocalVariable(name: "c", arg: 1, scope: !3679, file: !200, line: 873, type: !120)
!3684 = !DILocation(line: 0, scope: !3679)
!3685 = !DILocation(line: 875, column: 19, scope: !3679)
!3686 = !DILocation(line: 875, column: 2, scope: !3679)
!3687 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !200, file: !200, line: 908, type: !3688, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !3694)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{!107, !106, !185, !3690, !106, !152, !2793, !185}
!3690 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3210, line: 308, baseType: !3691)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 32)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!107, !13, !185, !106}
!3694 = !{!3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3712, !3713, !3714, !3715, !3716, !3722, !3725, !3726, !3727, !3729, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3745, !3748, !3749, !3750, !3751, !3752, !3753, !3755, !3758, !3759, !3760}
!3695 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3687, file: !200, line: 908, type: !106)
!3696 = !DILocalVariable(name: "in_len", arg: 2, scope: !3687, file: !200, line: 909, type: !185)
!3697 = !DILocalVariable(name: "cb", arg: 3, scope: !3687, file: !200, line: 910, type: !3690)
!3698 = !DILocalVariable(name: "ctx", arg: 4, scope: !3687, file: !200, line: 911, type: !106)
!3699 = !DILocalVariable(name: "flags", arg: 5, scope: !3687, file: !200, line: 912, type: !152)
!3700 = !DILocalVariable(name: "strl", arg: 6, scope: !3687, file: !200, line: 913, type: !2793)
!3701 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3687, file: !200, line: 914, type: !185)
!3702 = !DILocalVariable(name: "buf", scope: !3687, file: !200, line: 918, type: !194)
!3703 = !DILocalVariable(name: "buf32", scope: !3687, file: !200, line: 919, type: !1075)
!3704 = !DILocalVariable(name: "args_size", scope: !3687, file: !200, line: 920, type: !32)
!3705 = !DILocalVariable(name: "ros_nbr", scope: !3687, file: !200, line: 920, type: !32)
!3706 = !DILocalVariable(name: "rws_nbr", scope: !3687, file: !200, line: 920, type: !32)
!3707 = !DILocalVariable(name: "fmt_present", scope: !3687, file: !200, line: 921, type: !145)
!3708 = !DILocalVariable(name: "rw_cpy", scope: !3687, file: !200, line: 922, type: !145)
!3709 = !DILocalVariable(name: "ro_cpy", scope: !3687, file: !200, line: 923, type: !145)
!3710 = !DILocalVariable(name: "in_desc", scope: !3687, file: !200, line: 924, type: !3711)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 32)
!3712 = !DILocalVariable(name: "out_len", scope: !3687, file: !200, line: 960, type: !107)
!3713 = !DILocalVariable(name: "fmt", scope: !3687, file: !200, line: 965, type: !118)
!3714 = !DILocalVariable(name: "str_pos", scope: !3687, file: !200, line: 966, type: !194)
!3715 = !DILocalVariable(name: "strl_cnt", scope: !3687, file: !200, line: 967, type: !185)
!3716 = !DILocalVariable(name: "i", scope: !3717, file: !200, line: 973, type: !107)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !200, line: 973, column: 4)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !200, line: 972, column: 15)
!3719 = distinct !DILexicalBlock(scope: !3720, file: !200, line: 972, column: 7)
!3720 = distinct !DILexicalBlock(scope: !3721, file: !200, line: 970, column: 18)
!3721 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 970, column: 6)
!3722 = !DILocalVariable(name: "str", scope: !3723, file: !200, line: 974, type: !118)
!3723 = distinct !DILexicalBlock(scope: !3724, file: !200, line: 973, column: 38)
!3724 = distinct !DILexicalBlock(scope: !3717, file: !200, line: 973, column: 4)
!3725 = !DILocalVariable(name: "len", scope: !3723, file: !200, line: 975, type: !107)
!3726 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3720, file: !200, line: 990, type: !145)
!3727 = !DILocalVariable(name: "i", scope: !3728, file: !200, line: 995, type: !107)
!3728 = distinct !DILexicalBlock(scope: !3720, file: !200, line: 995, column: 3)
!3729 = !DILocalVariable(name: "arg_idx", scope: !3730, file: !200, line: 996, type: !195)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !200, line: 995, column: 37)
!3731 = distinct !DILexicalBlock(scope: !3728, file: !200, line: 995, column: 3)
!3732 = !DILocalVariable(name: "arg_pos", scope: !3730, file: !200, line: 997, type: !195)
!3733 = !DILocalVariable(name: "str", scope: !3730, file: !200, line: 998, type: !118)
!3734 = !DILocalVariable(name: "is_ro", scope: !3730, file: !200, line: 999, type: !145)
!3735 = !DILocalVariable(name: "len", scope: !3730, file: !200, line: 1000, type: !107)
!3736 = !DILocalVariable(name: "out_desc", scope: !3687, file: !200, line: 1038, type: !3213)
!3737 = !DILocalVariable(name: "cpy_str_pos", scope: !3687, file: !200, line: 1040, type: !3195)
!3738 = !DILocalVariable(name: "keep_str_pos", scope: !3687, file: !200, line: 1042, type: !3195)
!3739 = !DILocalVariable(name: "scpy_cnt", scope: !3687, file: !200, line: 1043, type: !195)
!3740 = !DILocalVariable(name: "keep_cnt", scope: !3687, file: !200, line: 1044, type: !195)
!3741 = !DILocalVariable(name: "dst", scope: !3687, file: !200, line: 1045, type: !194)
!3742 = !DILocalVariable(name: "rv", scope: !3687, file: !200, line: 1046, type: !107)
!3743 = !DILocalVariable(name: "i", scope: !3744, file: !200, line: 1074, type: !107)
!3744 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 1074, column: 2)
!3745 = !DILocalVariable(name: "arg_idx", scope: !3746, file: !200, line: 1075, type: !195)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !200, line: 1074, column: 36)
!3747 = distinct !DILexicalBlock(scope: !3744, file: !200, line: 1074, column: 2)
!3748 = !DILocalVariable(name: "arg_pos", scope: !3746, file: !200, line: 1076, type: !195)
!3749 = !DILocalVariable(name: "str", scope: !3746, file: !200, line: 1077, type: !118)
!3750 = !DILocalVariable(name: "is_ro", scope: !3746, file: !200, line: 1078, type: !145)
!3751 = !DILocalVariable(name: "in_desc_backup", scope: !3687, file: !200, line: 1114, type: !3213)
!3752 = !DILocalVariable(name: "strs_len", scope: !3687, file: !200, line: 1134, type: !185)
!3753 = !DILocalVariable(name: "i", scope: !3754, file: !200, line: 1143, type: !107)
!3754 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 1143, column: 2)
!3755 = !DILocalVariable(name: "loc", scope: !3756, file: !200, line: 1144, type: !195)
!3756 = distinct !DILexicalBlock(scope: !3757, file: !200, line: 1143, column: 37)
!3757 = distinct !DILexicalBlock(scope: !3754, file: !200, line: 1143, column: 2)
!3758 = !DILocalVariable(name: "str", scope: !3756, file: !200, line: 1145, type: !118)
!3759 = !DILocalVariable(name: "str_len", scope: !3756, file: !200, line: 1146, type: !197)
!3760 = !DILabel(scope: !3761, name: "calculate_string_length", file: !200, line: 1021)
!3761 = distinct !DILexicalBlock(scope: !3762, file: !200, line: 1020, column: 56)
!3762 = distinct !DILexicalBlock(scope: !3763, file: !200, line: 1020, column: 15)
!3763 = distinct !DILexicalBlock(scope: !3730, file: !200, line: 1014, column: 8)
!3764 = !DILocation(line: 0, scope: !3687)
!3765 = !DILocation(line: 916, column: 2, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !200, line: 916, column: 2)
!3767 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 916, column: 2)
!3768 = !DILocation(line: 916, column: 2, scope: !3767)
!3769 = !DILocation(line: 916, column: 2, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3766, file: !200, line: 916, column: 2)
!3771 = !DILocation(line: 919, column: 20, scope: !3687)
!3772 = !DILocation(line: 921, column: 27, scope: !3687)
!3773 = !DILocation(line: 921, column: 21, scope: !3687)
!3774 = !DILocation(line: 926, column: 18, scope: !3687)
!3775 = !DILocation(line: 926, column: 11, scope: !3687)
!3776 = !DILocation(line: 926, column: 34, scope: !3687)
!3777 = !DILocation(line: 931, column: 21, scope: !3687)
!3778 = !DILocation(line: 931, column: 12, scope: !3687)
!3779 = !DILocation(line: 932, column: 11, scope: !3687)
!3780 = !DILocation(line: 932, column: 19, scope: !3687)
!3781 = !DILocation(line: 938, column: 21, scope: !3687)
!3782 = !DILocation(line: 938, column: 12, scope: !3687)
!3783 = !DILocation(line: 939, column: 19, scope: !3687)
!3784 = !DILocation(line: 939, column: 23, scope: !3687)
!3785 = !DILocation(line: 946, column: 14, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 946, column: 6)
!3787 = !DILocation(line: 947, column: 7, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3789, file: !200, line: 947, column: 7)
!3789 = distinct !DILexicalBlock(scope: !3786, file: !200, line: 946, column: 26)
!3790 = !DILocation(line: 947, column: 7, scope: !3789)
!3791 = !DILocation(line: 948, column: 4, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3788, file: !200, line: 947, column: 11)
!3793 = !DILocation(line: 949, column: 3, scope: !3792)
!3794 = !DILocation(line: 958, column: 23, scope: !3687)
!3795 = !DILocation(line: 958, column: 14, scope: !3687)
!3796 = !DILocation(line: 958, column: 27, scope: !3687)
!3797 = !DILocation(line: 965, column: 41, scope: !3687)
!3798 = !DILocation(line: 965, column: 20, scope: !3687)
!3799 = !DILocation(line: 966, column: 22, scope: !3687)
!3800 = !DILocation(line: 970, column: 9, scope: !3721)
!3801 = !DILocation(line: 970, column: 6, scope: !3687)
!3802 = !DILocation(line: 972, column: 7, scope: !3720)
!3803 = !DILocation(line: 0, scope: !3717)
!3804 = !DILocation(line: 973, column: 4, scope: !3717)
!3805 = !DILocation(line: 974, column: 46, scope: !3723)
!3806 = !DILocation(line: 974, column: 40, scope: !3723)
!3807 = !DILocation(line: 974, column: 23, scope: !3723)
!3808 = !DILocation(line: 0, scope: !3723)
!3809 = !DILocation(line: 975, column: 15, scope: !3723)
!3810 = !DILocation(line: 978, column: 14, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3723, file: !200, line: 978, column: 9)
!3812 = !DILocation(line: 979, column: 25, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3811, file: !200, line: 978, column: 38)
!3814 = !DILocation(line: 979, column: 19, scope: !3813)
!3815 = !DILocation(line: 979, column: 6, scope: !3813)
!3816 = !DILocation(line: 979, column: 23, scope: !3813)
!3817 = !DILocation(line: 980, column: 5, scope: !3813)
!3818 = !DILocation(line: 981, column: 13, scope: !3723)
!3819 = !DILocation(line: 982, column: 12, scope: !3723)
!3820 = !DILocation(line: 973, column: 34, scope: !3724)
!3821 = !DILocation(line: 973, column: 22, scope: !3724)
!3822 = distinct !{!3822, !3804, !3823}
!3823 = !DILocation(line: 983, column: 4, scope: !3717)
!3824 = !DILocation(line: 985, column: 16, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !200, line: 985, column: 8)
!3826 = distinct !DILexicalBlock(scope: !3719, file: !200, line: 984, column: 10)
!3827 = !DILocation(line: 967, column: 9, scope: !3687)
!3828 = !DILocation(line: 971, column: 11, scope: !3720)
!3829 = !DILocation(line: 0, scope: !3720)
!3830 = !DILocation(line: 0, scope: !3728)
!3831 = !DILocation(line: 995, column: 21, scope: !3731)
!3832 = !DILocation(line: 995, column: 3, scope: !3728)
!3833 = !DILocation(line: 990, column: 34, scope: !3720)
!3834 = !DILocation(line: 990, column: 26, scope: !3720)
!3835 = !DILocation(line: 996, column: 30, scope: !3730)
!3836 = !DILocation(line: 0, scope: !3730)
!3837 = !DILocation(line: 997, column: 30, scope: !3730)
!3838 = !DILocation(line: 997, column: 22, scope: !3730)
!3839 = !DILocation(line: 998, column: 39, scope: !3730)
!3840 = !DILocation(line: 998, column: 22, scope: !3730)
!3841 = !DILocation(line: 999, column: 17, scope: !3730)
!3842 = !DILocation(line: 1002, column: 20, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3730, file: !200, line: 1002, column: 8)
!3844 = !DILocation(line: 996, column: 22, scope: !3730)
!3845 = !DILocation(line: 1002, column: 35, scope: !3843)
!3846 = !DILocation(line: 1002, column: 23, scope: !3843)
!3847 = !DILocation(line: 1002, column: 8, scope: !3730)
!3848 = !DILocation(line: 1003, column: 5, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3850, file: !200, line: 1003, column: 5)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !200, line: 1003, column: 5)
!3851 = distinct !DILexicalBlock(scope: !3852, file: !200, line: 1003, column: 5)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !200, line: 1003, column: 5)
!3853 = distinct !DILexicalBlock(scope: !3843, file: !200, line: 1002, column: 45)
!3854 = !DILocation(line: 1010, column: 13, scope: !3853)
!3855 = !DILocation(line: 1011, column: 5, scope: !3853)
!3856 = !DILocation(line: 1014, column: 8, scope: !3730)
!3857 = !DILocation(line: 1015, column: 9, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3763, file: !200, line: 1014, column: 15)
!3859 = !DILocation(line: 1018, column: 14, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !200, line: 1017, column: 12)
!3861 = distinct !DILexicalBlock(scope: !3858, file: !200, line: 1015, column: 9)
!3862 = !DILocation(line: 1020, column: 4, scope: !3858)
!3863 = !DILocation(line: 1020, column: 15, scope: !3763)
!3864 = !DILocation(line: 1021, column: 1, scope: !3761)
!3865 = !DILocation(line: 1022, column: 11, scope: !3761)
!3866 = !DILocation(line: 1025, column: 14, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3761, file: !200, line: 1025, column: 9)
!3868 = !DILocation(line: 1026, column: 25, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3867, file: !200, line: 1025, column: 38)
!3870 = !DILocation(line: 1026, column: 19, scope: !3869)
!3871 = !DILocation(line: 1026, column: 6, scope: !3869)
!3872 = !DILocation(line: 1026, column: 23, scope: !3869)
!3873 = !DILocation(line: 1027, column: 5, scope: !3869)
!3874 = !DILocation(line: 1031, column: 21, scope: !3761)
!3875 = !DILocation(line: 1031, column: 13, scope: !3761)
!3876 = !DILocation(line: 1032, column: 4, scope: !3761)
!3877 = !DILocation(line: 995, column: 33, scope: !3731)
!3878 = distinct !{!3878, !3832, !3879}
!3879 = !DILocation(line: 1033, column: 3, scope: !3728)
!3880 = !DILocation(line: 1040, column: 10, scope: !3687)
!3881 = !DILocation(line: 1042, column: 10, scope: !3687)
!3882 = !DILocation(line: 1052, column: 6, scope: !3687)
!3883 = !DILocation(line: 1055, column: 9, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !200, line: 1052, column: 14)
!3885 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 1052, column: 6)
!3886 = !DILocation(line: 1056, column: 2, scope: !3884)
!3887 = !DILocation(line: 1056, column: 21, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3885, file: !200, line: 1056, column: 13)
!3889 = !DILocation(line: 1066, column: 3, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !200, line: 1065, column: 11)
!3891 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 1065, column: 6)
!3892 = !DILocation(line: 1067, column: 2, scope: !3890)
!3893 = !DILocation(line: 1068, column: 10, scope: !3687)
!3894 = !DILocation(line: 0, scope: !3744)
!3895 = !DILocation(line: 1074, column: 20, scope: !3747)
!3896 = !DILocation(line: 1074, column: 2, scope: !3744)
!3897 = !DILocation(line: 1110, column: 24, scope: !3687)
!3898 = !DILocation(line: 1053, column: 12, scope: !3884)
!3899 = !DILocation(line: 1054, column: 12, scope: !3884)
!3900 = !DILocation(line: 1108, column: 30, scope: !3687)
!3901 = !DILocation(line: 1108, column: 40, scope: !3687)
!3902 = !DILocation(line: 1108, column: 38, scope: !3687)
!3903 = !DILocation(line: 1109, column: 31, scope: !3687)
!3904 = !DILocation(line: 1109, column: 24, scope: !3687)
!3905 = !DILocation(line: 1110, column: 31, scope: !3687)
!3906 = !DILocation(line: 1114, column: 31, scope: !3687)
!3907 = !DILocation(line: 1114, column: 48, scope: !3687)
!3908 = !DILocation(line: 1115, column: 13, scope: !3687)
!3909 = !DILocation(line: 1118, column: 7, scope: !3687)
!3910 = !DILocation(line: 1119, column: 9, scope: !3911)
!3911 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 1119, column: 6)
!3912 = !DILocation(line: 1119, column: 6, scope: !3687)
!3913 = !DILocation(line: 1075, column: 29, scope: !3746)
!3914 = !DILocation(line: 1075, column: 21, scope: !3746)
!3915 = !DILocation(line: 0, scope: !3746)
!3916 = !DILocation(line: 1076, column: 29, scope: !3746)
!3917 = !DILocation(line: 1076, column: 21, scope: !3746)
!3918 = !DILocation(line: 1077, column: 38, scope: !3746)
!3919 = !DILocation(line: 1077, column: 21, scope: !3746)
!3920 = !DILocation(line: 1078, column: 16, scope: !3746)
!3921 = !DILocation(line: 1080, column: 19, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3746, file: !200, line: 1080, column: 7)
!3923 = !DILocation(line: 1080, column: 34, scope: !3922)
!3924 = !DILocation(line: 1080, column: 22, scope: !3922)
!3925 = !DILocation(line: 1080, column: 7, scope: !3746)
!3926 = !DILocation(line: 1084, column: 7, scope: !3746)
!3927 = !DILocation(line: 1085, column: 8, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !200, line: 1084, column: 14)
!3929 = distinct !DILexicalBlock(scope: !3746, file: !200, line: 1084, column: 7)
!3930 = !DILocation(line: 1086, column: 5, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !200, line: 1086, column: 5)
!3932 = distinct !DILexicalBlock(scope: !3933, file: !200, line: 1086, column: 5)
!3933 = distinct !DILexicalBlock(scope: !3934, file: !200, line: 1085, column: 49)
!3934 = distinct !DILexicalBlock(scope: !3928, file: !200, line: 1085, column: 8)
!3935 = !DILocation(line: 1086, column: 5, scope: !3932)
!3936 = !DILocation(line: 1086, column: 5, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3931, file: !200, line: 1086, column: 5)
!3938 = !DILocation(line: 1087, column: 25, scope: !3933)
!3939 = !DILocation(line: 1087, column: 5, scope: !3933)
!3940 = !DILocation(line: 1088, column: 4, scope: !3933)
!3941 = !DILocation(line: 1088, column: 15, scope: !3934)
!3942 = !DILocation(line: 1089, column: 5, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !200, line: 1089, column: 5)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !200, line: 1089, column: 5)
!3945 = distinct !DILexicalBlock(scope: !3946, file: !200, line: 1088, column: 61)
!3946 = distinct !DILexicalBlock(scope: !3934, file: !200, line: 1088, column: 15)
!3947 = !DILocation(line: 1089, column: 5, scope: !3944)
!3948 = !DILocation(line: 1089, column: 5, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3943, file: !200, line: 1089, column: 5)
!3950 = !DILocation(line: 1090, column: 26, scope: !3945)
!3951 = !DILocation(line: 1090, column: 5, scope: !3945)
!3952 = !DILocation(line: 1091, column: 4, scope: !3945)
!3953 = !DILocation(line: 1095, column: 8, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3929, file: !200, line: 1094, column: 10)
!3955 = !DILocation(line: 1096, column: 5, scope: !3956)
!3956 = distinct !DILexicalBlock(scope: !3957, file: !200, line: 1096, column: 5)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !200, line: 1096, column: 5)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !200, line: 1095, column: 49)
!3959 = distinct !DILexicalBlock(scope: !3954, file: !200, line: 1095, column: 8)
!3960 = !DILocation(line: 1096, column: 5, scope: !3957)
!3961 = !DILocation(line: 1096, column: 5, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3956, file: !200, line: 1096, column: 5)
!3963 = !DILocation(line: 1097, column: 25, scope: !3958)
!3964 = !DILocation(line: 1097, column: 5, scope: !3958)
!3965 = !DILocation(line: 1098, column: 4, scope: !3958)
!3966 = !DILocation(line: 1099, column: 5, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3968, file: !200, line: 1099, column: 5)
!3968 = distinct !DILexicalBlock(scope: !3969, file: !200, line: 1099, column: 5)
!3969 = distinct !DILexicalBlock(scope: !3959, file: !200, line: 1098, column: 11)
!3970 = !DILocation(line: 1099, column: 5, scope: !3968)
!3971 = !DILocation(line: 1099, column: 5, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3967, file: !200, line: 1099, column: 5)
!3973 = !DILocation(line: 1100, column: 26, scope: !3969)
!3974 = !DILocation(line: 1100, column: 5, scope: !3969)
!3975 = !DILocation(line: 1100, column: 30, scope: !3969)
!3976 = !DILocation(line: 1101, column: 26, scope: !3969)
!3977 = !DILocation(line: 1101, column: 5, scope: !3969)
!3978 = !DILocation(line: 0, scope: !3929)
!3979 = !DILocation(line: 1074, column: 32, scope: !3747)
!3980 = distinct !{!3980, !3896, !3981}
!3981 = !DILocation(line: 1104, column: 2, scope: !3744)
!3982 = !DILocation(line: 1124, column: 13, scope: !3687)
!3983 = !DILocation(line: 1127, column: 10, scope: !3687)
!3984 = !DILocation(line: 1127, column: 7, scope: !3687)
!3985 = !DILocation(line: 1128, column: 9, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 1128, column: 6)
!3987 = !DILocation(line: 1128, column: 6, scope: !3687)
!3988 = !DILocation(line: 1134, column: 27, scope: !3687)
!3989 = !DILocation(line: 1136, column: 7, scope: !3687)
!3990 = !DILocation(line: 1137, column: 9, scope: !3991)
!3991 = distinct !DILexicalBlock(scope: !3687, file: !200, line: 1137, column: 6)
!3992 = !DILocation(line: 1137, column: 6, scope: !3687)
!3993 = !DILocation(line: 1131, column: 10, scope: !3687)
!3994 = !DILocation(line: 1140, column: 10, scope: !3687)
!3995 = !DILocation(line: 0, scope: !3754)
!3996 = !DILocation(line: 1143, column: 20, scope: !3757)
!3997 = !DILocation(line: 1143, column: 2, scope: !3754)
!3998 = !DILocation(line: 1144, column: 3, scope: !3756)
!3999 = !DILocation(line: 1144, column: 17, scope: !3756)
!4000 = !DILocation(line: 0, scope: !3756)
!4001 = !DILocation(line: 1144, column: 11, scope: !3756)
!4002 = !DILocation(line: 1145, column: 38, scope: !3756)
!4003 = !DILocation(line: 1145, column: 21, scope: !3756)
!4004 = !DILocation(line: 1146, column: 22, scope: !3756)
!4005 = !DILocation(line: 1146, column: 29, scope: !3756)
!4006 = !DILocation(line: 1148, column: 8, scope: !3756)
!4007 = !DILocation(line: 1149, column: 10, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !3756, file: !200, line: 1149, column: 7)
!4009 = !DILocation(line: 1149, column: 7, scope: !3756)
!4010 = !DILocation(line: 1154, column: 8, scope: !3756)
!4011 = !DILocation(line: 1155, column: 10, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3756, file: !200, line: 1155, column: 7)
!4013 = !DILocation(line: 1155, column: 7, scope: !3756)
!4014 = !DILocation(line: 1159, column: 2, scope: !3757)
!4015 = !DILocation(line: 1152, column: 11, scope: !3756)
!4016 = !DILocation(line: 1158, column: 11, scope: !3756)
!4017 = !DILocation(line: 1143, column: 33, scope: !3757)
!4018 = distinct !{!4018, !3997, !4019}
!4019 = !DILocation(line: 1159, column: 2, scope: !3754)
!4020 = !DILocation(line: 1162, column: 8, scope: !3687)
!4021 = !DILocation(line: 1164, column: 2, scope: !3687)
!4022 = !DILocation(line: 1165, column: 1, scope: !3687)
!4023 = distinct !DISubprogram(name: "get_package_len", scope: !200, file: !200, line: 196, type: !4024, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4026)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!185, !106}
!4026 = !{!4027, !4028, !4029, !4030, !4031, !4032, !4033}
!4027 = !DILocalVariable(name: "packaged", arg: 1, scope: !4023, file: !200, line: 196, type: !106)
!4028 = !DILocalVariable(name: "buf", scope: !4023, file: !200, line: 200, type: !194)
!4029 = !DILocalVariable(name: "start", scope: !4023, file: !200, line: 201, type: !194)
!4030 = !DILocalVariable(name: "args_size", scope: !4023, file: !200, line: 202, type: !32)
!4031 = !DILocalVariable(name: "s_nbr", scope: !4023, file: !200, line: 202, type: !32)
!4032 = !DILocalVariable(name: "ros_nbr", scope: !4023, file: !200, line: 202, type: !32)
!4033 = !DILocalVariable(name: "i", scope: !4034, file: !200, line: 215, type: !107)
!4034 = distinct !DILexicalBlock(scope: !4023, file: !200, line: 215, column: 2)
!4035 = !DILocation(line: 0, scope: !4023)
!4036 = !DILocation(line: 198, column: 2, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4038, file: !200, line: 198, column: 2)
!4038 = distinct !DILexicalBlock(scope: !4023, file: !200, line: 198, column: 2)
!4039 = !DILocation(line: 198, column: 2, scope: !4038)
!4040 = !DILocation(line: 198, column: 2, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4037, file: !200, line: 198, column: 2)
!4042 = !DILocation(line: 204, column: 14, scope: !4023)
!4043 = !DILocation(line: 204, column: 21, scope: !4023)
!4044 = !DILocation(line: 205, column: 14, scope: !4023)
!4045 = !DILocation(line: 206, column: 14, scope: !4023)
!4046 = !DILocation(line: 209, column: 6, scope: !4023)
!4047 = !DILocation(line: 212, column: 6, scope: !4023)
!4048 = !DILocation(line: 0, scope: !4034)
!4049 = !DILocation(line: 215, column: 20, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4034, file: !200, line: 215, column: 2)
!4051 = !DILocation(line: 215, column: 2, scope: !4034)
!4052 = !DILocation(line: 220, column: 33, scope: !4023)
!4053 = !DILocation(line: 220, column: 2, scope: !4023)
!4054 = !DILocation(line: 216, column: 6, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4050, file: !200, line: 215, column: 34)
!4056 = !DILocation(line: 217, column: 10, scope: !4055)
!4057 = !DILocation(line: 217, column: 36, scope: !4055)
!4058 = !DILocation(line: 217, column: 7, scope: !4055)
!4059 = !DILocation(line: 215, column: 30, scope: !4050)
!4060 = distinct !{!4060, !4051, !4061}
!4061 = !DILocation(line: 218, column: 2, scope: !4034)
!4062 = distinct !DISubprogram(name: "append_string", scope: !200, file: !200, line: 223, type: !4063, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !177, retainedNodes: !4065)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!107, !3690, !106, !118, !197}
!4065 = !{!4066, !4067, !4068, !4069}
!4066 = !DILocalVariable(name: "cb", arg: 1, scope: !4062, file: !200, line: 223, type: !3690)
!4067 = !DILocalVariable(name: "ctx", arg: 2, scope: !4062, file: !200, line: 223, type: !106)
!4068 = !DILocalVariable(name: "str", arg: 3, scope: !4062, file: !200, line: 223, type: !118)
!4069 = !DILocalVariable(name: "strl", arg: 4, scope: !4062, file: !200, line: 223, type: !197)
!4070 = !DILocation(line: 0, scope: !4062)
!4071 = !DILocation(line: 225, column: 9, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4062, file: !200, line: 225, column: 6)
!4073 = !DILocation(line: 225, column: 6, scope: !4062)
!4074 = !DILocation(line: 226, column: 14, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4072, file: !200, line: 225, column: 18)
!4076 = !DILocation(line: 226, column: 12, scope: !4075)
!4077 = !DILocation(line: 226, column: 3, scope: !4075)
!4078 = !DILocation(line: 229, column: 14, scope: !4062)
!4079 = !DILocation(line: 229, column: 9, scope: !4062)
!4080 = !DILocation(line: 229, column: 27, scope: !4062)
!4081 = !DILocation(line: 229, column: 39, scope: !4062)
!4082 = !DILocation(line: 230, column: 17, scope: !4062)
!4083 = !DILocation(line: 230, column: 9, scope: !4062)
!4084 = !DILocation(line: 230, column: 2, scope: !4062)
!4085 = !DILocation(line: 231, column: 1, scope: !4062)
!4086 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !212, file: !212, line: 45, type: !214, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4087)
!4087 = !{!4088}
!4088 = !DILocalVariable(name: "c", arg: 1, scope: !4086, file: !212, line: 45, type: !107)
!4089 = !DILocation(line: 0, scope: !4086)
!4090 = !DILocation(line: 50, column: 2, scope: !4086)
!4091 = distinct !DISubprogram(name: "__printk_hook_install", scope: !212, file: !212, line: 63, type: !4092, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4094)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{null, !213}
!4094 = !{!4095}
!4095 = !DILocalVariable(name: "fn", arg: 1, scope: !4091, file: !212, line: 63, type: !213)
!4096 = !DILocation(line: 0, scope: !4091)
!4097 = !DILocation(line: 65, column: 12, scope: !4091)
!4098 = !DILocation(line: 66, column: 1, scope: !4091)
!4099 = distinct !DISubprogram(name: "__printk_get_hook", scope: !212, file: !212, line: 76, type: !125, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !2175)
!4100 = !DILocation(line: 78, column: 9, scope: !4099)
!4101 = !DILocation(line: 78, column: 2, scope: !4099)
!4102 = distinct !DISubprogram(name: "vprintk", scope: !212, file: !212, line: 113, type: !4103, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4111)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{null, !118, !4105}
!4105 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3178, line: 99, baseType: !4106)
!4106 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3178, line: 40, baseType: !4107)
!4107 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !212, baseType: !4108)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4109)
!4109 = !{!4110}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4108, file: !212, line: 79, baseType: !106, size: 32)
!4111 = !{!4112, !4113, !4114}
!4112 = !DILocalVariable(name: "fmt", arg: 1, scope: !4102, file: !212, line: 113, type: !118)
!4113 = !DILocalVariable(name: "ap", arg: 2, scope: !4102, file: !212, line: 113, type: !4105)
!4114 = !DILocalVariable(name: "ctx", scope: !4115, file: !212, line: 121, type: !4117)
!4115 = distinct !DILexicalBlock(scope: !4116, file: !212, line: 120, column: 27)
!4116 = distinct !DILexicalBlock(scope: !4102, file: !212, line: 120, column: 6)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !212, line: 81, size: 32, elements: !4118)
!4118 = !{!4119, !4120}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4117, file: !212, line: 85, baseType: !32, size: 32)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4117, file: !212, line: 86, baseType: !4121, offset: 32)
!4121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !4122)
!4122 = !{!4123}
!4123 = !DISubrange(count: 0)
!4124 = !DILocation(line: 0, scope: !4102)
!4125 = !DILocation(line: 148, column: 3, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4116, file: !212, line: 138, column: 9)
!4127 = !DILocation(line: 155, column: 1, scope: !4102)
!4128 = distinct !DISubprogram(name: "char_out", scope: !212, file: !212, line: 107, type: !4129, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4131)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!107, !107, !106}
!4131 = !{!4132, !4133}
!4132 = !DILocalVariable(name: "c", arg: 1, scope: !4128, file: !212, line: 107, type: !107)
!4133 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4128, file: !212, line: 107, type: !106)
!4134 = !DILocation(line: 0, scope: !4128)
!4135 = !DILocation(line: 110, column: 9, scope: !4128)
!4136 = !DILocation(line: 110, column: 2, scope: !4128)
!4137 = distinct !DISubprogram(name: "cbvprintf", scope: !3210, file: !3210, line: 739, type: !4138, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4140)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!107, !3558, !106, !118, !4105}
!4140 = !{!4141, !4142, !4143, !4144}
!4141 = !DILocalVariable(name: "out", arg: 1, scope: !4137, file: !3210, line: 739, type: !3558)
!4142 = !DILocalVariable(name: "ctx", arg: 2, scope: !4137, file: !3210, line: 739, type: !106)
!4143 = !DILocalVariable(name: "format", arg: 3, scope: !4137, file: !3210, line: 739, type: !118)
!4144 = !DILocalVariable(name: "ap", arg: 4, scope: !4137, file: !3210, line: 739, type: !4105)
!4145 = !DILocation(line: 0, scope: !4137)
!4146 = !DILocation(line: 741, column: 9, scope: !4137)
!4147 = !DILocation(line: 741, column: 2, scope: !4137)
!4148 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !212, file: !212, line: 157, type: !4149, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4151)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{null, !193, !185}
!4151 = !{!4152, !4153, !4154}
!4152 = !DILocalVariable(name: "c", arg: 1, scope: !4148, file: !212, line: 157, type: !193)
!4153 = !DILocalVariable(name: "n", arg: 2, scope: !4148, file: !212, line: 157, type: !185)
!4154 = !DILocalVariable(name: "i", scope: !4148, file: !212, line: 159, type: !185)
!4155 = !DILocation(line: 0, scope: !4148)
!4156 = !DILocation(line: 164, column: 16, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4158, file: !212, line: 164, column: 2)
!4158 = distinct !DILexicalBlock(scope: !4148, file: !212, line: 164, column: 2)
!4159 = !DILocation(line: 164, column: 2, scope: !4158)
!4160 = !DILocation(line: 165, column: 3, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4157, file: !212, line: 164, column: 26)
!4162 = !DILocation(line: 165, column: 13, scope: !4161)
!4163 = !DILocation(line: 164, column: 22, scope: !4157)
!4164 = distinct !{!4164, !4159, !4165}
!4165 = !DILocation(line: 166, column: 2, scope: !4158)
!4166 = !DILocation(line: 171, column: 1, scope: !4148)
!4167 = distinct !DISubprogram(name: "printk", scope: !212, file: !212, line: 203, type: !4168, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4170)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{null, !118, null}
!4170 = !{!4171, !4172}
!4171 = !DILocalVariable(name: "fmt", arg: 1, scope: !4167, file: !212, line: 203, type: !118)
!4172 = !DILocalVariable(name: "ap", scope: !4167, file: !212, line: 205, type: !4105)
!4173 = !DILocation(line: 0, scope: !4167)
!4174 = !DILocation(line: 205, column: 2, scope: !4167)
!4175 = !DILocation(line: 205, column: 10, scope: !4167)
!4176 = !DILocation(line: 207, column: 2, scope: !4167)
!4177 = !DILocation(line: 209, column: 2, scope: !4167)
!4178 = !DILocation(line: 211, column: 2, scope: !4167)
!4179 = !DILocation(line: 212, column: 1, scope: !4167)
!4180 = distinct !DISubprogram(name: "snprintk", scope: !212, file: !212, line: 239, type: !4181, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4183)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!107, !193, !185, !118, null}
!4183 = !{!4184, !4185, !4186, !4187, !4188}
!4184 = !DILocalVariable(name: "str", arg: 1, scope: !4180, file: !212, line: 239, type: !193)
!4185 = !DILocalVariable(name: "size", arg: 2, scope: !4180, file: !212, line: 239, type: !185)
!4186 = !DILocalVariable(name: "fmt", arg: 3, scope: !4180, file: !212, line: 239, type: !118)
!4187 = !DILocalVariable(name: "ap", scope: !4180, file: !212, line: 241, type: !4105)
!4188 = !DILocalVariable(name: "ret", scope: !4180, file: !212, line: 242, type: !107)
!4189 = !DILocation(line: 0, scope: !4180)
!4190 = !DILocation(line: 241, column: 2, scope: !4180)
!4191 = !DILocation(line: 241, column: 10, scope: !4180)
!4192 = !DILocation(line: 244, column: 2, scope: !4180)
!4193 = !DILocation(line: 245, column: 8, scope: !4180)
!4194 = !DILocation(line: 246, column: 2, scope: !4180)
!4195 = !DILocation(line: 249, column: 1, scope: !4180)
!4196 = !DILocation(line: 248, column: 2, scope: !4180)
!4197 = distinct !DISubprogram(name: "vsnprintk", scope: !212, file: !212, line: 251, type: !4198, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4200)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!107, !193, !185, !118, !4105}
!4200 = !{!4201, !4202, !4203, !4204, !4205}
!4201 = !DILocalVariable(name: "str", arg: 1, scope: !4197, file: !212, line: 251, type: !193)
!4202 = !DILocalVariable(name: "size", arg: 2, scope: !4197, file: !212, line: 251, type: !185)
!4203 = !DILocalVariable(name: "fmt", arg: 3, scope: !4197, file: !212, line: 251, type: !118)
!4204 = !DILocalVariable(name: "ap", arg: 4, scope: !4197, file: !212, line: 251, type: !4105)
!4205 = !DILocalVariable(name: "ctx", scope: !4197, file: !212, line: 253, type: !4206)
!4206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !212, line: 217, size: 96, elements: !4207)
!4207 = !{!4208, !4209, !4210}
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4206, file: !212, line: 218, baseType: !193, size: 32)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4206, file: !212, line: 219, baseType: !107, size: 32, offset: 32)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4206, file: !212, line: 220, baseType: !107, size: 32, offset: 64)
!4211 = !DILocation(line: 0, scope: !4197)
!4212 = !DILocation(line: 253, column: 2, scope: !4197)
!4213 = !DILocation(line: 253, column: 21, scope: !4197)
!4214 = !DILocation(line: 253, column: 27, scope: !4197)
!4215 = !DILocation(line: 255, column: 2, scope: !4197)
!4216 = !DILocation(line: 257, column: 10, scope: !4217)
!4217 = distinct !DILexicalBlock(scope: !4197, file: !212, line: 257, column: 6)
!4218 = !DILocation(line: 257, column: 22, scope: !4217)
!4219 = !DILocation(line: 257, column: 16, scope: !4217)
!4220 = !DILocation(line: 257, column: 6, scope: !4197)
!4221 = !DILocation(line: 258, column: 3, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4217, file: !212, line: 257, column: 27)
!4223 = !DILocation(line: 258, column: 18, scope: !4222)
!4224 = !DILocation(line: 259, column: 2, scope: !4222)
!4225 = !DILocation(line: 262, column: 1, scope: !4197)
!4226 = !DILocation(line: 261, column: 2, scope: !4197)
!4227 = distinct !DISubprogram(name: "str_out", scope: !212, file: !212, line: 223, type: !4228, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !209, retainedNodes: !4231)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!107, !107, !4230}
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4206, size: 32)
!4231 = !{!4232, !4233}
!4232 = !DILocalVariable(name: "c", arg: 1, scope: !4227, file: !212, line: 223, type: !107)
!4233 = !DILocalVariable(name: "ctx", arg: 2, scope: !4227, file: !212, line: 223, type: !4230)
!4234 = !DILocation(line: 0, scope: !4227)
!4235 = !DILocation(line: 225, column: 11, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4227, file: !212, line: 225, column: 6)
!4237 = !DILocation(line: 225, column: 15, scope: !4236)
!4238 = !DILocation(line: 0, scope: !4236)
!4239 = !DILocation(line: 225, column: 23, scope: !4236)
!4240 = !DILocation(line: 225, column: 45, scope: !4236)
!4241 = !DILocation(line: 225, column: 37, scope: !4236)
!4242 = !DILocation(line: 225, column: 6, scope: !4227)
!4243 = !DILocation(line: 226, column: 8, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4236, file: !212, line: 225, column: 50)
!4245 = !DILocation(line: 226, column: 13, scope: !4244)
!4246 = !DILocation(line: 227, column: 3, scope: !4244)
!4247 = !DILocation(line: 230, column: 29, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4227, file: !212, line: 230, column: 6)
!4249 = !DILocation(line: 230, column: 17, scope: !4248)
!4250 = !DILocation(line: 230, column: 6, scope: !4227)
!4251 = !DILocation(line: 231, column: 22, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4248, file: !212, line: 230, column: 34)
!4253 = !DILocation(line: 231, column: 3, scope: !4252)
!4254 = !DILocation(line: 231, column: 26, scope: !4252)
!4255 = !DILocation(line: 232, column: 2, scope: !4252)
!4256 = !DILocation(line: 233, column: 28, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4248, file: !212, line: 232, column: 9)
!4258 = !DILocation(line: 233, column: 22, scope: !4257)
!4259 = !DILocation(line: 233, column: 3, scope: !4257)
!4260 = !DILocation(line: 233, column: 26, scope: !4257)
!4261 = !DILocation(line: 237, column: 1, scope: !4227)
!4262 = distinct !DISubprogram(name: "z_thread_entry", scope: !4263, file: !4263, line: 30, type: !4264, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !4266)
!4263 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4264 = !DISubroutineType(types: !4265)
!4265 = !{null, !680, !106, !106, !106}
!4266 = !{!4267, !4268, !4269, !4270}
!4267 = !DILocalVariable(name: "entry", arg: 1, scope: !4262, file: !4263, line: 30, type: !680)
!4268 = !DILocalVariable(name: "p1", arg: 2, scope: !4262, file: !4263, line: 31, type: !106)
!4269 = !DILocalVariable(name: "p2", arg: 3, scope: !4262, file: !4263, line: 31, type: !106)
!4270 = !DILocalVariable(name: "p3", arg: 4, scope: !4262, file: !4263, line: 31, type: !106)
!4271 = !DILocation(line: 0, scope: !4262)
!4272 = !DILocation(line: 36, column: 2, scope: !4262)
!4273 = !DILocation(line: 38, column: 17, scope: !4262)
!4274 = !DILocation(line: 38, column: 2, scope: !4262)
!4275 = !DILocation(line: 45, column: 2, scope: !4262)
!4276 = distinct !DISubprogram(name: "k_current_get", scope: !419, file: !419, line: 530, type: !4277, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !2175)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!4279}
!4279 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !4280)
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4281, size: 32)
!4281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !4282)
!4282 = !{!4283, !4341, !4353, !4354, !4355, !4356, !4357, !4363, !4378}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4281, file: !322, line: 247, baseType: !4284, size: 384)
!4284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !4285)
!4285 = !{!4286, !4310, !4317, !4318, !4319, !4328, !4329, !4330}
!4286 = !DIDerivedType(tag: DW_TAG_member, scope: !4284, file: !322, line: 60, baseType: !4287, size: 64)
!4287 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4284, file: !322, line: 60, size: 64, elements: !4288)
!4288 = !{!4289, !4304}
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4287, file: !322, line: 61, baseType: !4290, size: 64)
!4290 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !4291)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !4292)
!4292 = !{!4293, !4299}
!4293 = !DIDerivedType(tag: DW_TAG_member, scope: !4291, file: !332, line: 38, baseType: !4294, size: 32)
!4294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4291, file: !332, line: 38, size: 32, elements: !4295)
!4295 = !{!4296, !4298}
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4294, file: !332, line: 39, baseType: !4297, size: 32)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 32)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4294, file: !332, line: 40, baseType: !4297, size: 32)
!4299 = !DIDerivedType(tag: DW_TAG_member, scope: !4291, file: !332, line: 42, baseType: !4300, size: 32, offset: 32)
!4300 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4291, file: !332, line: 42, size: 32, elements: !4301)
!4301 = !{!4302, !4303}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4300, file: !332, line: 43, baseType: !4297, size: 32)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4300, file: !332, line: 44, baseType: !4297, size: 32)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4287, file: !322, line: 62, baseType: !4305, size: 64)
!4305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !4306)
!4306 = !{!4307}
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4305, file: !348, line: 50, baseType: !4308, size: 64)
!4308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4309, size: 64, elements: !353)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 32)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4284, file: !322, line: 68, baseType: !4311, size: 32, offset: 64)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 32)
!4312 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !4313)
!4313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !4314)
!4314 = !{!4315}
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4313, file: !358, line: 232, baseType: !4316, size: 64)
!4316 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !4291)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4284, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4284, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!4319 = !DIDerivedType(tag: DW_TAG_member, scope: !4284, file: !322, line: 90, baseType: !4320, size: 16, offset: 112)
!4320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4284, file: !322, line: 90, size: 16, elements: !4321)
!4321 = !{!4322, !4327}
!4322 = !DIDerivedType(tag: DW_TAG_member, scope: !4320, file: !322, line: 91, baseType: !4323, size: 16)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4320, file: !322, line: 91, size: 16, elements: !4324)
!4324 = !{!4325, !4326}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4323, file: !322, line: 96, baseType: !372, size: 8)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4323, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4320, file: !322, line: 100, baseType: !197, size: 16)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4284, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4284, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4284, file: !322, line: 131, baseType: !4331, size: 192, offset: 192)
!4331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !4332)
!4332 = !{!4333, !4334, !4340}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4331, file: !358, line: 245, baseType: !4290, size: 64)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4331, file: !358, line: 246, baseType: !4335, size: 32, offset: 64)
!4335 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !4336)
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 32)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{null, !4339}
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4331, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4281, file: !322, line: 250, baseType: !4342, size: 288, offset: 384)
!4342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !4343)
!4343 = !{!4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4342, file: !392, line: 26, baseType: !152, size: 32)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4342, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4342, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4342, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4342, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4342, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4342, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4342, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4342, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4281, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4281, file: !322, line: 256, baseType: !4312, size: 64, offset: 704)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4281, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4281, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4281, file: !322, line: 300, baseType: !4358, size: 96, offset: 1056)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !4359)
!4359 = !{!4360, !4361, !4362}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4358, file: !322, line: 153, baseType: !22, size: 32)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4358, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4358, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4281, file: !322, line: 325, baseType: !4364, size: 32, offset: 1152)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 32)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !4366)
!4366 = !{!4367, !4373, !4374}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4365, file: !419, line: 5074, baseType: !4368, size: 96)
!4368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !4369)
!4369 = !{!4370, !4371, !4372}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4368, file: !423, line: 57, baseType: !426, size: 32)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4368, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4368, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4365, file: !419, line: 5075, baseType: !4312, size: 64, offset: 96)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4365, file: !419, line: 5076, baseType: !4375, size: 32, offset: 160)
!4375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !4376)
!4376 = !{!4377}
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4375, file: !433, line: 52, baseType: !22, size: 32)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4281, file: !322, line: 343, baseType: !4379, size: 64, offset: 1184)
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !4380)
!4380 = !{!4381, !4382}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4379, file: !392, line: 63, baseType: !152, size: 32)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4379, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!4383 = !DILocation(line: 535, column: 9, scope: !4276)
!4384 = !DILocation(line: 535, column: 2, scope: !4276)
!4385 = distinct !DISubprogram(name: "k_thread_abort", scope: !4386, file: !4386, line: 188, type: !4387, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !4389)
!4386 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!4387 = !DISubroutineType(types: !4388)
!4388 = !{null, !4279}
!4389 = !{!4390}
!4390 = !DILocalVariable(name: "thread", arg: 1, scope: !4385, file: !4386, line: 188, type: !4279)
!4391 = !DILocation(line: 0, scope: !4385)
!4392 = !DILocation(line: 197, column: 2, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4385, file: !4386, line: 197, column: 2)
!4394 = !{i64 2152221595}
!4395 = !DILocation(line: 198, column: 2, scope: !4385)
!4396 = !DILocation(line: 199, column: 1, scope: !4385)
!4397 = distinct !DISubprogram(name: "z_current_get", scope: !4386, file: !4386, line: 173, type: !4277, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2521, retainedNodes: !2175)
!4398 = !DILocation(line: 180, column: 2, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4397, file: !4386, line: 180, column: 2)
!4400 = !{i64 2152221527}
!4401 = !DILocation(line: 181, column: 9, scope: !4397)
!4402 = !DILocation(line: 181, column: 2, scope: !4397)
!4403 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2527, file: !2527, line: 1338, type: !4404, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4412)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!107, !3558, !106, !118, !4406, !152}
!4406 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3178, line: 99, baseType: !4407)
!4407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3178, line: 40, baseType: !4408)
!4408 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2527, baseType: !4409)
!4409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4410)
!4410 = !{!4411}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4409, file: !2527, baseType: !106, size: 32)
!4412 = !{!4413, !4414, !4415, !4416, !4417, !4418, !4422, !4423, !4424, !4426, !4431, !4474, !4477, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4489, !4490, !4491, !4495, !4498, !4500, !4503, !4504, !4505, !4510, !4516, !4519, !4523, !4529, !4533, !4536, !4538, !4541}
!4413 = !DILocalVariable(name: "out", arg: 1, scope: !4403, file: !2527, line: 1338, type: !3558)
!4414 = !DILocalVariable(name: "ctx", arg: 2, scope: !4403, file: !2527, line: 1338, type: !106)
!4415 = !DILocalVariable(name: "fp", arg: 3, scope: !4403, file: !2527, line: 1338, type: !118)
!4416 = !DILocalVariable(name: "ap", arg: 4, scope: !4403, file: !2527, line: 1339, type: !4406)
!4417 = !DILocalVariable(name: "flags", arg: 5, scope: !4403, file: !2527, line: 1339, type: !152)
!4418 = !DILocalVariable(name: "buf", scope: !4403, file: !2527, line: 1341, type: !4419)
!4419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 176, elements: !4420)
!4420 = !{!4421}
!4421 = !DISubrange(count: 22)
!4422 = !DILocalVariable(name: "count", scope: !4403, file: !2527, line: 1342, type: !185)
!4423 = !DILocalVariable(name: "sint", scope: !4403, file: !2527, line: 1343, type: !2546)
!4424 = !DILocalVariable(name: "tagged_ap", scope: !4403, file: !2527, line: 1345, type: !4425)
!4425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !145)
!4426 = !DILocalVariable(name: "rc", scope: !4427, file: !2527, line: 1377, type: !107)
!4427 = distinct !DILexicalBlock(scope: !4428, file: !2527, line: 1377, column: 4)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !2527, line: 1376, column: 19)
!4429 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1376, column: 7)
!4430 = distinct !DILexicalBlock(scope: !4403, file: !2527, line: 1375, column: 19)
!4431 = !DILocalVariable(name: "state", scope: !4430, file: !2527, line: 1395, type: !4432)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4403, file: !2527, line: 1392, size: 192, elements: !4433)
!4433 = !{!4434, !4442}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4432, file: !2527, line: 1393, baseType: !4435, size: 64)
!4435 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2527, line: 166, size: 64, elements: !4436)
!4436 = !{!4437, !4438, !4439, !4440, !4441}
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4435, file: !2527, line: 168, baseType: !2546, size: 64)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4435, file: !2527, line: 171, baseType: !2549, size: 64)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4435, file: !2527, line: 174, baseType: !183, size: 64)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4435, file: !2527, line: 177, baseType: !181, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4435, file: !2527, line: 180, baseType: !106, size: 32)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4432, file: !2527, line: 1394, baseType: !4443, size: 96, offset: 64)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2527, line: 189, size: 96, elements: !4444)
!4444 = !{!4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4469}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4443, file: !2527, line: 191, baseType: !145, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4443, file: !2527, line: 194, baseType: !145, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4443, file: !2527, line: 197, baseType: !145, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4443, file: !2527, line: 200, baseType: !145, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4443, file: !2527, line: 203, baseType: !145, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4443, file: !2527, line: 206, baseType: !145, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4443, file: !2527, line: 209, baseType: !145, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4443, file: !2527, line: 212, baseType: !145, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4443, file: !2527, line: 219, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4443, file: !2527, line: 222, baseType: !145, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4443, file: !2527, line: 229, baseType: !145, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4443, file: !2527, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4443, file: !2527, line: 238, baseType: !145, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4443, file: !2527, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4443, file: !2527, line: 244, baseType: !145, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4443, file: !2527, line: 247, baseType: !145, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4443, file: !2527, line: 252, baseType: !145, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4443, file: !2527, line: 257, baseType: !145, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4443, file: !2527, line: 260, baseType: !196, size: 8, offset: 24)
!4464 = !DIDerivedType(tag: DW_TAG_member, scope: !4443, file: !2527, line: 262, baseType: !4465, size: 32, offset: 32)
!4465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4443, file: !2527, line: 262, size: 32, elements: !4466)
!4466 = !{!4467, !4468}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4465, file: !2527, line: 267, baseType: !107, size: 32)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4465, file: !2527, line: 289, baseType: !107, size: 32)
!4469 = !DIDerivedType(tag: DW_TAG_member, scope: !4443, file: !2527, line: 292, baseType: !4470, size: 32, offset: 64)
!4470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4443, file: !2527, line: 292, size: 32, elements: !4471)
!4471 = !{!4472, !4473}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4470, file: !2527, line: 297, baseType: !107, size: 32)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4470, file: !2527, line: 306, baseType: !107, size: 32)
!4474 = !DILocalVariable(name: "conv", scope: !4430, file: !2527, line: 1400, type: !4475)
!4475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4476)
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 32)
!4477 = !DILocalVariable(name: "value", scope: !4430, file: !2527, line: 1401, type: !4478)
!4478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4479)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 32)
!4480 = !DILocalVariable(name: "sp", scope: !4430, file: !2527, line: 1402, type: !118)
!4481 = !DILocalVariable(name: "width", scope: !4430, file: !2527, line: 1403, type: !107)
!4482 = !DILocalVariable(name: "precision", scope: !4430, file: !2527, line: 1404, type: !107)
!4483 = !DILocalVariable(name: "bps", scope: !4430, file: !2527, line: 1405, type: !118)
!4484 = !DILocalVariable(name: "bpe", scope: !4430, file: !2527, line: 1406, type: !118)
!4485 = !DILocalVariable(name: "sign", scope: !4430, file: !2527, line: 1407, type: !120)
!4486 = !DILocalVariable(name: "arg", scope: !4487, file: !2527, line: 1432, type: !107)
!4487 = distinct !DILexicalBlock(scope: !4488, file: !2527, line: 1431, column: 24)
!4488 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1431, column: 7)
!4489 = !DILocalVariable(name: "specifier_cat", scope: !4430, file: !2527, line: 1468, type: !2526)
!4490 = !DILocalVariable(name: "length_mod", scope: !4430, file: !2527, line: 1470, type: !2534)
!4491 = !DILocalVariable(name: "rc", scope: !4492, file: !2527, line: 1575, type: !107)
!4492 = distinct !DILexicalBlock(scope: !4493, file: !2527, line: 1575, column: 4)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !2527, line: 1574, column: 43)
!4494 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1574, column: 7)
!4495 = !DILocalVariable(name: "rc", scope: !4496, file: !2527, line: 1584, type: !107)
!4496 = distinct !DILexicalBlock(scope: !4497, file: !2527, line: 1584, column: 4)
!4497 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1582, column: 28)
!4498 = !DILocalVariable(name: "len", scope: !4499, file: !2527, line: 1589, type: !185)
!4499 = distinct !DILexicalBlock(scope: !4497, file: !2527, line: 1586, column: 13)
!4500 = !DILocalVariable(name: "len", scope: !4501, file: !2527, line: 1641, type: !185)
!4501 = distinct !DILexicalBlock(scope: !4502, file: !2527, line: 1640, column: 24)
!4502 = distinct !DILexicalBlock(scope: !4497, file: !2527, line: 1640, column: 8)
!4503 = !DILocalVariable(name: "nj_len", scope: !4430, file: !2527, line: 1722, type: !185)
!4504 = !DILocalVariable(name: "pad_len", scope: !4430, file: !2527, line: 1723, type: !107)
!4505 = !DILocalVariable(name: "pad", scope: !4506, file: !2527, line: 1751, type: !120)
!4506 = distinct !DILexicalBlock(scope: !4507, file: !2527, line: 1750, column: 26)
!4507 = distinct !DILexicalBlock(scope: !4508, file: !2527, line: 1750, column: 8)
!4508 = distinct !DILexicalBlock(scope: !4509, file: !2527, line: 1747, column: 18)
!4509 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1747, column: 7)
!4510 = !DILocalVariable(name: "rc", scope: !4511, file: !2527, line: 1758, type: !107)
!4511 = distinct !DILexicalBlock(scope: !4512, file: !2527, line: 1758, column: 7)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !2527, line: 1757, column: 21)
!4513 = distinct !DILexicalBlock(scope: !4514, file: !2527, line: 1757, column: 10)
!4514 = distinct !DILexicalBlock(scope: !4515, file: !2527, line: 1756, column: 26)
!4515 = distinct !DILexicalBlock(scope: !4506, file: !2527, line: 1756, column: 9)
!4516 = !DILocalVariable(name: "rc", scope: !4517, file: !2527, line: 1765, type: !107)
!4517 = distinct !DILexicalBlock(scope: !4518, file: !2527, line: 1765, column: 6)
!4518 = distinct !DILexicalBlock(scope: !4506, file: !2527, line: 1764, column: 25)
!4519 = !DILocalVariable(name: "rc", scope: !4520, file: !2527, line: 1774, type: !107)
!4520 = distinct !DILexicalBlock(scope: !4521, file: !2527, line: 1774, column: 4)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !2527, line: 1773, column: 18)
!4522 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1773, column: 7)
!4523 = !DILocalVariable(name: "rc", scope: !4524, file: !2527, line: 1819, type: !107)
!4524 = distinct !DILexicalBlock(scope: !4525, file: !2527, line: 1819, column: 5)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !2527, line: 1818, column: 44)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !2527, line: 1818, column: 8)
!4527 = distinct !DILexicalBlock(scope: !4528, file: !2527, line: 1817, column: 10)
!4528 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1777, column: 7)
!4529 = !DILocalVariable(name: "rc", scope: !4530, file: !2527, line: 1823, type: !107)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !2527, line: 1823, column: 5)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !2527, line: 1822, column: 26)
!4532 = distinct !DILexicalBlock(scope: !4527, file: !2527, line: 1822, column: 8)
!4533 = !DILocalVariable(name: "rc", scope: !4534, file: !2527, line: 1828, type: !107)
!4534 = distinct !DILexicalBlock(scope: !4535, file: !2527, line: 1828, column: 5)
!4535 = distinct !DILexicalBlock(scope: !4527, file: !2527, line: 1827, column: 26)
!4536 = !DILocalVariable(name: "rc", scope: !4537, file: !2527, line: 1831, type: !107)
!4537 = distinct !DILexicalBlock(scope: !4527, file: !2527, line: 1831, column: 4)
!4538 = !DILocalVariable(name: "rc", scope: !4539, file: !2527, line: 1836, type: !107)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !2527, line: 1836, column: 4)
!4540 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1835, column: 21)
!4541 = !DILabel(scope: !4497, name: "prec_int_pad0", file: !2527, line: 1634)
!4542 = !DILocation(line: 0, scope: !4403)
!4543 = !DILocation(line: 1341, column: 2, scope: !4403)
!4544 = !DILocation(line: 1341, column: 7, scope: !4403)
!4545 = !DILocation(line: 1375, column: 2, scope: !4403)
!4546 = !DILocation(line: 1342, column: 9, scope: !4403)
!4547 = !DILocation(line: 1375, column: 9, scope: !4403)
!4548 = !DILocation(line: 1377, column: 4, scope: !4427)
!4549 = !DILocation(line: 0, scope: !4427)
!4550 = !DILocation(line: 1377, column: 4, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4427, file: !2527, line: 1377, column: 4)
!4552 = distinct !{!4552, !4545, !4553}
!4553 = !DILocation(line: 1839, column: 2, scope: !4403)
!4554 = !DILocation(line: 1392, column: 3, scope: !4430)
!4555 = !DILocation(line: 1395, column: 5, scope: !4430)
!4556 = !DILocation(line: 0, scope: !4430)
!4557 = !DILocation(line: 1409, column: 8, scope: !4430)
!4558 = !DILocation(line: 1414, column: 13, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1414, column: 7)
!4560 = !DILocation(line: 1414, column: 7, scope: !4430)
!4561 = !DILocation(line: 1415, column: 12, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4559, file: !2527, line: 1414, column: 25)
!4563 = !DILocation(line: 1417, column: 14, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4562, file: !2527, line: 1417, column: 8)
!4565 = !DILocation(line: 1417, column: 8, scope: !4562)
!4566 = !DILocation(line: 1418, column: 21, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4564, file: !2527, line: 1417, column: 19)
!4568 = !DILocation(line: 1419, column: 13, scope: !4567)
!4569 = !DILocation(line: 1420, column: 4, scope: !4567)
!4570 = !DILocation(line: 1421, column: 20, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4559, file: !2527, line: 1421, column: 14)
!4572 = !DILocation(line: 1421, column: 14, scope: !4559)
!4573 = !DILocation(line: 1431, column: 13, scope: !4488)
!4574 = !DILocation(line: 1431, column: 7, scope: !4430)
!4575 = !DILocation(line: 1432, column: 14, scope: !4487)
!4576 = !DILocation(line: 0, scope: !4487)
!4577 = !DILocation(line: 1434, column: 12, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4487, file: !2527, line: 1434, column: 8)
!4579 = !DILocation(line: 1434, column: 8, scope: !4487)
!4580 = !DILocation(line: 1435, column: 24, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4578, file: !2527, line: 1434, column: 17)
!4582 = !DILocation(line: 1436, column: 4, scope: !4581)
!4583 = !DILocation(line: 1439, column: 20, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4488, file: !2527, line: 1439, column: 14)
!4585 = !DILocation(line: 1439, column: 14, scope: !4488)
!4586 = !DILocation(line: 1469, column: 37, scope: !4430)
!4587 = !DILocation(line: 1448, column: 20, scope: !4430)
!4588 = !DILocation(line: 1449, column: 22, scope: !4430)
!4589 = !DILocation(line: 1471, column: 34, scope: !4430)
!4590 = !DILocation(line: 1478, column: 7, scope: !4430)
!4591 = !DILocation(line: 1479, column: 4, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4593, file: !2527, line: 1478, column: 40)
!4593 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1478, column: 7)
!4594 = !DILocation(line: 1484, column: 19, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4592, file: !2527, line: 1479, column: 24)
!4596 = !DILocation(line: 1484, column: 17, scope: !4595)
!4597 = !DILocation(line: 1485, column: 5, scope: !4595)
!4598 = !DILocation(line: 1492, column: 20, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !2527, line: 1491, column: 12)
!4600 = distinct !DILexicalBlock(scope: !4595, file: !2527, line: 1487, column: 9)
!4601 = !DILocation(line: 1492, column: 18, scope: !4599)
!4602 = !DILocation(line: 1494, column: 5, scope: !4595)
!4603 = !DILocation(line: 1497, column: 23, scope: !4595)
!4604 = !DILocation(line: 1496, column: 17, scope: !4595)
!4605 = !DILocation(line: 1498, column: 5, scope: !4595)
!4606 = !DILocation(line: 1501, column: 23, scope: !4595)
!4607 = !DILocation(line: 1500, column: 17, scope: !4595)
!4608 = !DILocation(line: 1502, column: 5, scope: !4595)
!4609 = !DILocation(line: 1513, column: 23, scope: !4595)
!4610 = !DILocation(line: 1513, column: 6, scope: !4595)
!4611 = !DILocation(line: 1512, column: 17, scope: !4595)
!4612 = !DILocation(line: 1514, column: 5, scope: !4595)
!4613 = !DILocation(line: 0, scope: !4595)
!4614 = !DILocation(line: 1516, column: 8, scope: !4592)
!4615 = !DILocation(line: 1517, column: 19, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4617, file: !2527, line: 1516, column: 33)
!4617 = distinct !DILexicalBlock(scope: !4592, file: !2527, line: 1516, column: 8)
!4618 = !DILocation(line: 1517, column: 17, scope: !4616)
!4619 = !DILocation(line: 1518, column: 4, scope: !4616)
!4620 = !DILocation(line: 1519, column: 19, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !2527, line: 1518, column: 39)
!4622 = distinct !DILexicalBlock(scope: !4617, file: !2527, line: 1518, column: 15)
!4623 = !DILocation(line: 1519, column: 17, scope: !4621)
!4624 = !DILocation(line: 1520, column: 4, scope: !4621)
!4625 = !DILocation(line: 1522, column: 4, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4627, file: !2527, line: 1521, column: 47)
!4627 = distinct !DILexicalBlock(scope: !4593, file: !2527, line: 1521, column: 14)
!4628 = !DILocation(line: 1527, column: 19, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4626, file: !2527, line: 1522, column: 24)
!4630 = !DILocation(line: 1527, column: 17, scope: !4629)
!4631 = !DILocation(line: 1528, column: 5, scope: !4629)
!4632 = !DILocation(line: 0, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4629, file: !2527, line: 1530, column: 9)
!4634 = !DILocation(line: 1540, column: 23, scope: !4629)
!4635 = !DILocation(line: 1539, column: 17, scope: !4629)
!4636 = !DILocation(line: 1542, column: 5, scope: !4629)
!4637 = !DILocation(line: 1545, column: 23, scope: !4629)
!4638 = !DILocation(line: 1544, column: 17, scope: !4629)
!4639 = !DILocation(line: 1547, column: 5, scope: !4629)
!4640 = !DILocation(line: 1551, column: 23, scope: !4629)
!4641 = !DILocation(line: 1551, column: 6, scope: !4629)
!4642 = !DILocation(line: 1550, column: 17, scope: !4629)
!4643 = !DILocation(line: 1552, column: 5, scope: !4629)
!4644 = !DILocation(line: 0, scope: !4629)
!4645 = !DILocation(line: 1554, column: 8, scope: !4626)
!4646 = !DILocation(line: 1555, column: 19, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !2527, line: 1554, column: 33)
!4648 = distinct !DILexicalBlock(scope: !4626, file: !2527, line: 1554, column: 8)
!4649 = !DILocation(line: 1555, column: 17, scope: !4647)
!4650 = !DILocation(line: 1556, column: 4, scope: !4647)
!4651 = !DILocation(line: 1557, column: 19, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !2527, line: 1556, column: 39)
!4653 = distinct !DILexicalBlock(scope: !4648, file: !2527, line: 1556, column: 15)
!4654 = !DILocation(line: 1557, column: 17, scope: !4652)
!4655 = !DILocation(line: 1558, column: 4, scope: !4652)
!4656 = !DILocation(line: 0, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2527, line: 1560, column: 8)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !2527, line: 1559, column: 45)
!4659 = distinct !DILexicalBlock(scope: !4627, file: !2527, line: 1559, column: 14)
!4660 = !DILocation(line: 1566, column: 17, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !2527, line: 1565, column: 46)
!4662 = distinct !DILexicalBlock(scope: !4659, file: !2527, line: 1565, column: 14)
!4663 = !DILocation(line: 1566, column: 15, scope: !4661)
!4664 = !DILocation(line: 1567, column: 3, scope: !4661)
!4665 = !DILocation(line: 1574, column: 21, scope: !4494)
!4666 = !DILocation(line: 1575, column: 4, scope: !4492)
!4667 = !DILocation(line: 0, scope: !4492)
!4668 = !DILocation(line: 1575, column: 4, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4492, file: !2527, line: 1575, column: 4)
!4670 = !DILocation(line: 1582, column: 17, scope: !4430)
!4671 = !DILocation(line: 1582, column: 3, scope: !4430)
!4672 = !DILocation(line: 1584, column: 4, scope: !4496)
!4673 = !DILocation(line: 0, scope: !4496)
!4674 = !DILocation(line: 1584, column: 4, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4496, file: !2527, line: 1584, column: 4)
!4676 = !DILocation(line: 1587, column: 31, scope: !4499)
!4677 = !DILocation(line: 1591, column: 18, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4499, file: !2527, line: 1591, column: 8)
!4679 = !DILocation(line: 1591, column: 8, scope: !4499)
!4680 = !DILocation(line: 1592, column: 11, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4678, file: !2527, line: 1591, column: 24)
!4682 = !DILocation(line: 0, scope: !4499)
!4683 = !DILocation(line: 1593, column: 4, scope: !4681)
!4684 = !DILocation(line: 1594, column: 11, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4678, file: !2527, line: 1593, column: 11)
!4686 = !DILocation(line: 1604, column: 51, scope: !4497)
!4687 = !DILocation(line: 1604, column: 13, scope: !4497)
!4688 = !DILocation(line: 1604, column: 11, scope: !4497)
!4689 = !DILocation(line: 1606, column: 4, scope: !4497)
!4690 = !DILocation(line: 1609, column: 14, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4497, file: !2527, line: 1609, column: 8)
!4692 = !DILocation(line: 1609, column: 8, scope: !4497)
!4693 = !DILocation(line: 1619, column: 18, scope: !4497)
!4694 = !DILocation(line: 1620, column: 13, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4497, file: !2527, line: 1620, column: 8)
!4696 = !DILocation(line: 1620, column: 8, scope: !4497)
!4697 = !DILocation(line: 1622, column: 36, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4695, file: !2527, line: 1620, column: 18)
!4699 = !DILocation(line: 1622, column: 17, scope: !4698)
!4700 = !DILocation(line: 1623, column: 4, scope: !4698)
!4701 = !DILocation(line: 1632, column: 29, scope: !4497)
!4702 = !DILocation(line: 1632, column: 10, scope: !4497)
!4703 = !DILocation(line: 1632, column: 4, scope: !4497)
!4704 = !DILocation(line: 1407, column: 8, scope: !4430)
!4705 = !DILocation(line: 0, scope: !4497)
!4706 = !DILocation(line: 1634, column: 3, scope: !4497)
!4707 = !DILocation(line: 1640, column: 18, scope: !4502)
!4708 = !DILocation(line: 1640, column: 8, scope: !4497)
!4709 = !DILocation(line: 1729, column: 13, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1729, column: 7)
!4711 = !DILocation(line: 1641, column: 22, scope: !4501)
!4712 = !DILocation(line: 0, scope: !4501)
!4713 = !DILocation(line: 1646, column: 21, scope: !4501)
!4714 = !DILocation(line: 1649, column: 13, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4501, file: !2527, line: 1649, column: 9)
!4716 = !DILocation(line: 1649, column: 9, scope: !4501)
!4717 = !DILocation(line: 1650, column: 35, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4715, file: !2527, line: 1649, column: 34)
!4719 = !DILocation(line: 1650, column: 23, scope: !4718)
!4720 = !DILocation(line: 1651, column: 5, scope: !4718)
!4721 = !DILocation(line: 1660, column: 15, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4497, file: !2527, line: 1660, column: 8)
!4723 = !DILocation(line: 1660, column: 19, scope: !4722)
!4724 = !DILocation(line: 1660, column: 8, scope: !4497)
!4725 = !DILocation(line: 1661, column: 23, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4722, file: !2527, line: 1660, column: 28)
!4727 = !DILocation(line: 1661, column: 11, scope: !4726)
!4728 = !DILocation(line: 1665, column: 22, scope: !4726)
!4729 = !DILocation(line: 1666, column: 21, scope: !4726)
!4730 = !DILocation(line: 1668, column: 5, scope: !4726)
!4731 = !DILocation(line: 1677, column: 30, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !2527, line: 1676, column: 49)
!4733 = distinct !DILexicalBlock(scope: !4497, file: !2527, line: 1676, column: 8)
!4734 = !DILocation(line: 1677, column: 5, scope: !4732)
!4735 = !DILocation(line: 1680, column: 4, scope: !4497)
!4736 = !DILocation(line: 0, scope: !4678)
!4737 = !DILocation(line: 1597, column: 14, scope: !4499)
!4738 = !DILocation(line: 1699, column: 11, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1699, column: 7)
!4740 = !DILocation(line: 1699, column: 7, scope: !4430)
!4741 = !DILocation(line: 1725, column: 7, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1725, column: 7)
!4743 = !DILocation(line: 1725, column: 12, scope: !4742)
!4744 = !DILocation(line: 1747, column: 13, scope: !4509)
!4745 = !DILocation(line: 1747, column: 7, scope: !4430)
!4746 = !DILocation(line: 1722, column: 24, scope: !4430)
!4747 = !DILocation(line: 1725, column: 7, scope: !4430)
!4748 = !DILocation(line: 1729, column: 7, scope: !4430)
!4749 = !DILocation(line: 1736, column: 13, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4430, file: !2527, line: 1736, column: 7)
!4751 = !DILocation(line: 1735, column: 19, scope: !4430)
!4752 = !DILocation(line: 1736, column: 7, scope: !4430)
!4753 = !DILocation(line: 1748, column: 10, scope: !4508)
!4754 = !DILocation(line: 1750, column: 15, scope: !4507)
!4755 = !DILocation(line: 1750, column: 8, scope: !4508)
!4756 = !DILocation(line: 0, scope: !4506)
!4757 = !DILocation(line: 1756, column: 15, scope: !4515)
!4758 = !DILocation(line: 1756, column: 9, scope: !4506)
!4759 = !DILocation(line: 1758, column: 7, scope: !4511)
!4760 = !DILocation(line: 0, scope: !4511)
!4761 = !DILocation(line: 1758, column: 7, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4511, file: !2527, line: 1758, column: 7)
!4763 = !DILocation(line: 1764, column: 5, scope: !4506)
!4764 = !DILocation(line: 0, scope: !4508)
!4765 = !DILocation(line: 1764, column: 20, scope: !4506)
!4766 = !DILocation(line: 1764, column: 17, scope: !4506)
!4767 = !DILocation(line: 1765, column: 6, scope: !4517)
!4768 = !DILocation(line: 0, scope: !4517)
!4769 = !DILocation(line: 1765, column: 6, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4517, file: !2527, line: 1765, column: 6)
!4771 = distinct !{!4771, !4763, !4772}
!4772 = !DILocation(line: 1766, column: 5, scope: !4506)
!4773 = !DILocation(line: 1773, column: 12, scope: !4522)
!4774 = !DILocation(line: 1773, column: 7, scope: !4430)
!4775 = !DILocation(line: 1773, column: 7, scope: !4522)
!4776 = !DILocation(line: 1774, column: 4, scope: !4520)
!4777 = !DILocation(line: 0, scope: !4520)
!4778 = !DILocation(line: 1774, column: 4, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4520, file: !2527, line: 1774, column: 4)
!4780 = !DILocation(line: 1818, column: 8, scope: !4526)
!4781 = !DILocation(line: 1818, column: 27, scope: !4526)
!4782 = !DILocation(line: 1818, column: 25, scope: !4526)
!4783 = !DILocation(line: 1818, column: 8, scope: !4527)
!4784 = !DILocation(line: 1819, column: 5, scope: !4524)
!4785 = !DILocation(line: 0, scope: !4524)
!4786 = !DILocation(line: 1819, column: 5, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4524, file: !2527, line: 1819, column: 5)
!4788 = !DILocation(line: 1822, column: 14, scope: !4532)
!4789 = !DILocation(line: 1822, column: 8, scope: !4527)
!4790 = !DILocation(line: 1823, column: 5, scope: !4530)
!4791 = !DILocation(line: 0, scope: !4530)
!4792 = !DILocation(line: 1823, column: 5, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4530, file: !2527, line: 1823, column: 5)
!4794 = !DILocation(line: 1826, column: 20, scope: !4527)
!4795 = !DILocation(line: 1827, column: 4, scope: !4527)
!4796 = !DILocation(line: 0, scope: !4527)
!4797 = !DILocation(line: 1827, column: 21, scope: !4527)
!4798 = !DILocation(line: 1827, column: 18, scope: !4527)
!4799 = !DILocation(line: 1828, column: 5, scope: !4534)
!4800 = !DILocation(line: 0, scope: !4534)
!4801 = !DILocation(line: 1828, column: 5, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4534, file: !2527, line: 1828, column: 5)
!4803 = distinct !{!4803, !4795, !4804}
!4804 = !DILocation(line: 1829, column: 4, scope: !4527)
!4805 = !DILocation(line: 1831, column: 4, scope: !4537)
!4806 = !DILocation(line: 0, scope: !4537)
!4807 = !DILocation(line: 1831, column: 4, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4537, file: !2527, line: 1831, column: 4)
!4809 = !DILocation(line: 1835, column: 16, scope: !4430)
!4810 = !DILocation(line: 1835, column: 3, scope: !4430)
!4811 = !DILocation(line: 1836, column: 4, scope: !4539)
!4812 = !DILocation(line: 0, scope: !4539)
!4813 = !DILocation(line: 1836, column: 4, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4539, file: !2527, line: 1836, column: 4)
!4815 = !DILocation(line: 1837, column: 4, scope: !4540)
!4816 = distinct !{!4816, !4810, !4817}
!4817 = !DILocation(line: 1838, column: 3, scope: !4430)
!4818 = !DILocation(line: 1844, column: 1, scope: !4403)
!4819 = distinct !DISubprogram(name: "extract_conversion", scope: !2527, file: !2527, line: 642, type: !4820, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4822)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{!118, !4476, !118}
!4822 = !{!4823, !4824}
!4823 = !DILocalVariable(name: "conv", arg: 1, scope: !4819, file: !2527, line: 642, type: !4476)
!4824 = !DILocalVariable(name: "sp", arg: 2, scope: !4819, file: !2527, line: 643, type: !118)
!4825 = !DILocation(line: 0, scope: !4819)
!4826 = !DILocation(line: 645, column: 10, scope: !4819)
!4827 = !DILocation(line: 653, column: 2, scope: !4819)
!4828 = !DILocation(line: 654, column: 6, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4819, file: !2527, line: 654, column: 6)
!4830 = !DILocation(line: 654, column: 10, scope: !4829)
!4831 = !DILocation(line: 654, column: 6, scope: !4819)
!4832 = !DILocation(line: 655, column: 24, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4829, file: !2527, line: 654, column: 18)
!4834 = !DILocation(line: 655, column: 19, scope: !4833)
!4835 = !DILocation(line: 656, column: 3, scope: !4833)
!4836 = !DILocation(line: 659, column: 7, scope: !4819)
!4837 = !DILocation(line: 660, column: 7, scope: !4819)
!4838 = !DILocation(line: 661, column: 7, scope: !4819)
!4839 = !DILocation(line: 662, column: 7, scope: !4819)
!4840 = !DILocation(line: 663, column: 7, scope: !4819)
!4841 = !DILocation(line: 665, column: 2, scope: !4819)
!4842 = !DILocation(line: 666, column: 1, scope: !4819)
!4843 = distinct !DISubprogram(name: "outs", scope: !2527, file: !2527, line: 1319, type: !4844, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4846)
!4844 = !DISubroutineType(types: !4845)
!4845 = !{!107, !3558, !106, !118, !118}
!4846 = !{!4847, !4848, !4849, !4850, !4851, !4852}
!4847 = !DILocalVariable(name: "out", arg: 1, scope: !4843, file: !2527, line: 1319, type: !3558)
!4848 = !DILocalVariable(name: "ctx", arg: 2, scope: !4843, file: !2527, line: 1320, type: !106)
!4849 = !DILocalVariable(name: "sp", arg: 3, scope: !4843, file: !2527, line: 1321, type: !118)
!4850 = !DILocalVariable(name: "ep", arg: 4, scope: !4843, file: !2527, line: 1322, type: !118)
!4851 = !DILocalVariable(name: "count", scope: !4843, file: !2527, line: 1324, type: !185)
!4852 = !DILocalVariable(name: "rc", scope: !4853, file: !2527, line: 1327, type: !107)
!4853 = distinct !DILexicalBlock(scope: !4843, file: !2527, line: 1326, column: 45)
!4854 = !DILocation(line: 0, scope: !4843)
!4855 = !DILocation(line: 1326, column: 2, scope: !4843)
!4856 = !DILocation(line: 1324, column: 9, scope: !4843)
!4857 = !DILocation(line: 1326, column: 13, scope: !4843)
!4858 = !DILocation(line: 1326, column: 19, scope: !4843)
!4859 = !DILocation(line: 1327, column: 21, scope: !4853)
!4860 = !DILocation(line: 1326, column: 36, scope: !4843)
!4861 = !DILocation(line: 1326, column: 39, scope: !4843)
!4862 = !DILocation(line: 1327, column: 24, scope: !4853)
!4863 = !DILocation(line: 1327, column: 16, scope: !4853)
!4864 = !DILocation(line: 1327, column: 12, scope: !4853)
!4865 = !DILocation(line: 0, scope: !4853)
!4866 = !DILocation(line: 1329, column: 10, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4853, file: !2527, line: 1329, column: 7)
!4868 = !DILocation(line: 1329, column: 7, scope: !4853)
!4869 = distinct !{!4869, !4855, !4870}
!4870 = !DILocation(line: 1333, column: 2, scope: !4843)
!4871 = !DILocation(line: 1336, column: 1, scope: !4843)
!4872 = distinct !DISubprogram(name: "encode_uint", scope: !2527, file: !2527, line: 788, type: !4873, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4875)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!193, !2549, !4476, !193, !118}
!4875 = !{!4876, !4877, !4878, !4879, !4880, !4881, !4883, !4884}
!4876 = !DILocalVariable(name: "value", arg: 1, scope: !4872, file: !2527, line: 788, type: !2549)
!4877 = !DILocalVariable(name: "conv", arg: 2, scope: !4872, file: !2527, line: 789, type: !4476)
!4878 = !DILocalVariable(name: "bps", arg: 3, scope: !4872, file: !2527, line: 790, type: !193)
!4879 = !DILocalVariable(name: "bpe", arg: 4, scope: !4872, file: !2527, line: 791, type: !118)
!4880 = !DILocalVariable(name: "upcase", scope: !4872, file: !2527, line: 793, type: !145)
!4881 = !DILocalVariable(name: "radix", scope: !4872, file: !2527, line: 794, type: !4882)
!4882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!4883 = !DILocalVariable(name: "bp", scope: !4872, file: !2527, line: 795, type: !193)
!4884 = !DILocalVariable(name: "lsv", scope: !4885, file: !2527, line: 798, type: !32)
!4885 = distinct !DILexicalBlock(scope: !4872, file: !2527, line: 797, column: 5)
!4886 = !DILocation(line: 0, scope: !4872)
!4887 = !DILocation(line: 793, column: 35, scope: !4872)
!4888 = !DILocation(line: 793, column: 24, scope: !4872)
!4889 = !DILocation(line: 793, column: 16, scope: !4872)
!4890 = !DILocation(line: 794, column: 29, scope: !4872)
!4891 = !DILocation(line: 795, column: 24, scope: !4872)
!4892 = !DILocation(line: 795, column: 17, scope: !4872)
!4893 = !DILocation(line: 797, column: 2, scope: !4872)
!4894 = !DILocation(line: 802, column: 9, scope: !4885)
!4895 = !DILocation(line: 798, column: 22, scope: !4885)
!4896 = !DILocation(line: 0, scope: !4885)
!4897 = !DILocation(line: 800, column: 16, scope: !4885)
!4898 = !DILocation(line: 800, column: 11, scope: !4885)
!4899 = !DILocation(line: 800, column: 4, scope: !4885)
!4900 = !DILocation(line: 800, column: 9, scope: !4885)
!4901 = !DILocation(line: 803, column: 18, scope: !4872)
!4902 = !DILocation(line: 803, column: 24, scope: !4872)
!4903 = !DILocation(line: 803, column: 2, scope: !4885)
!4904 = distinct !{!4904, !4893, !4905}
!4905 = !DILocation(line: 803, column: 37, scope: !4872)
!4906 = !DILocation(line: 808, column: 12, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4872, file: !2527, line: 808, column: 6)
!4908 = !DILocation(line: 808, column: 6, scope: !4872)
!4909 = !DILocation(line: 809, column: 7, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4907, file: !2527, line: 808, column: 23)
!4911 = !DILocation(line: 813, column: 3, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4913, file: !2527, line: 811, column: 27)
!4913 = distinct !DILexicalBlock(scope: !4914, file: !2527, line: 811, column: 14)
!4914 = distinct !DILexicalBlock(scope: !4910, file: !2527, line: 809, column: 7)
!4915 = !DILocation(line: 0, scope: !4914)
!4916 = !DILocation(line: 818, column: 2, scope: !4872)
!4917 = distinct !DISubprogram(name: "store_count", scope: !2527, file: !2527, line: 1280, type: !4918, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4922)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{null, !4920, !106, !107}
!4920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4921, size: 32)
!4921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4443)
!4922 = !{!4923, !4924, !4925}
!4923 = !DILocalVariable(name: "conv", arg: 1, scope: !4917, file: !2527, line: 1280, type: !4920)
!4924 = !DILocalVariable(name: "dp", arg: 2, scope: !4917, file: !2527, line: 1281, type: !106)
!4925 = !DILocalVariable(name: "count", arg: 3, scope: !4917, file: !2527, line: 1282, type: !107)
!4926 = !DILocation(line: 0, scope: !4917)
!4927 = !DILocation(line: 1284, column: 38, scope: !4917)
!4928 = !DILocation(line: 1284, column: 2, scope: !4917)
!4929 = !DILocation(line: 1286, column: 4, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4917, file: !2527, line: 1284, column: 50)
!4931 = !DILocation(line: 1286, column: 14, scope: !4930)
!4932 = !DILocation(line: 1287, column: 3, scope: !4930)
!4933 = !DILocation(line: 1289, column: 24, scope: !4930)
!4934 = !DILocation(line: 1289, column: 22, scope: !4930)
!4935 = !DILocation(line: 1290, column: 3, scope: !4930)
!4936 = !DILocation(line: 1292, column: 18, scope: !4930)
!4937 = !DILocation(line: 1292, column: 4, scope: !4930)
!4938 = !DILocation(line: 1292, column: 16, scope: !4930)
!4939 = !DILocation(line: 1293, column: 3, scope: !4930)
!4940 = !DILocation(line: 1295, column: 4, scope: !4930)
!4941 = !DILocation(line: 1295, column: 15, scope: !4930)
!4942 = !DILocation(line: 1296, column: 3, scope: !4930)
!4943 = !DILocation(line: 1298, column: 22, scope: !4930)
!4944 = !DILocation(line: 1298, column: 4, scope: !4930)
!4945 = !DILocation(line: 1298, column: 20, scope: !4930)
!4946 = !DILocation(line: 1299, column: 3, scope: !4930)
!4947 = !DILocation(line: 1301, column: 21, scope: !4930)
!4948 = !DILocation(line: 1301, column: 4, scope: !4930)
!4949 = !DILocation(line: 1301, column: 19, scope: !4930)
!4950 = !DILocation(line: 1302, column: 3, scope: !4930)
!4951 = !DILocation(line: 1304, column: 4, scope: !4930)
!4952 = !DILocation(line: 1304, column: 17, scope: !4930)
!4953 = !DILocation(line: 1305, column: 3, scope: !4930)
!4954 = !DILocation(line: 1307, column: 4, scope: !4930)
!4955 = !DILocation(line: 1307, column: 20, scope: !4930)
!4956 = !DILocation(line: 1308, column: 3, scope: !4930)
!4957 = !DILocation(line: 1316, column: 1, scope: !4917)
!4958 = distinct !DISubprogram(name: "isupper", scope: !4959, file: !4959, line: 16, type: !214, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4960)
!4959 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4960 = !{!4961}
!4961 = !DILocalVariable(name: "a", arg: 1, scope: !4958, file: !4959, line: 16, type: !107)
!4962 = !DILocation(line: 0, scope: !4958)
!4963 = !DILocation(line: 18, column: 29, scope: !4958)
!4964 = !DILocation(line: 18, column: 45, scope: !4958)
!4965 = !DILocation(line: 18, column: 2, scope: !4958)
!4966 = distinct !DISubprogram(name: "conversion_radix", scope: !2527, file: !2527, line: 761, type: !4967, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4969)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!185, !120}
!4969 = !{!4970}
!4970 = !DILocalVariable(name: "specifier", arg: 1, scope: !4966, file: !2527, line: 761, type: !120)
!4971 = !DILocation(line: 0, scope: !4966)
!4972 = !DILocation(line: 763, column: 2, scope: !4966)
!4973 = !DILocation(line: 770, column: 3, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4966, file: !2527, line: 763, column: 21)
!4975 = !DILocation(line: 774, column: 3, scope: !4974)
!4976 = !DILocation(line: 0, scope: !4974)
!4977 = !DILocation(line: 776, column: 1, scope: !4966)
!4978 = distinct !DISubprogram(name: "extract_flags", scope: !2527, file: !2527, line: 339, type: !4820, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !4979)
!4979 = !{!4980, !4981, !4982}
!4980 = !DILocalVariable(name: "conv", arg: 1, scope: !4978, file: !2527, line: 339, type: !4476)
!4981 = !DILocalVariable(name: "sp", arg: 2, scope: !4978, file: !2527, line: 340, type: !118)
!4982 = !DILocalVariable(name: "loop", scope: !4978, file: !2527, line: 342, type: !145)
!4983 = !DILocation(line: 0, scope: !4978)
!4984 = !DILocation(line: 344, column: 2, scope: !4978)
!4985 = !DILocation(line: 345, column: 11, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4978, file: !2527, line: 344, column: 5)
!4987 = !DILocation(line: 345, column: 3, scope: !4986)
!4988 = !DILocation(line: 351, column: 4, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4986, file: !2527, line: 345, column: 16)
!4990 = !DILocation(line: 354, column: 4, scope: !4989)
!4991 = !DILocation(line: 357, column: 4, scope: !4989)
!4992 = !DILocation(line: 360, column: 4, scope: !4989)
!4993 = !DILocation(line: 0, scope: !4989)
!4994 = !DILocation(line: 370, column: 12, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4978, file: !2527, line: 370, column: 6)
!4996 = !DILocation(line: 370, column: 22, scope: !4995)
!4997 = !DILocation(line: 371, column: 19, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4995, file: !2527, line: 370, column: 42)
!4999 = !DILocation(line: 372, column: 2, scope: !4998)
!5000 = !DILocation(line: 376, column: 2, scope: !4978)
!5001 = distinct !DISubprogram(name: "extract_width", scope: !2527, file: !2527, line: 388, type: !4820, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5002)
!5002 = !{!5003, !5004, !5005, !5006}
!5003 = !DILocalVariable(name: "conv", arg: 1, scope: !5001, file: !2527, line: 388, type: !4476)
!5004 = !DILocalVariable(name: "sp", arg: 2, scope: !5001, file: !2527, line: 389, type: !118)
!5005 = !DILocalVariable(name: "wp", scope: !5001, file: !2527, line: 398, type: !118)
!5006 = !DILocalVariable(name: "width", scope: !5001, file: !2527, line: 399, type: !185)
!5007 = !DILocation(line: 0, scope: !5001)
!5008 = !DILocation(line: 391, column: 8, scope: !5001)
!5009 = !DILocation(line: 391, column: 22, scope: !5001)
!5010 = !DILocation(line: 393, column: 6, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5001, file: !2527, line: 393, column: 6)
!5012 = !DILocation(line: 393, column: 10, scope: !5011)
!5013 = !DILocation(line: 393, column: 6, scope: !5001)
!5014 = !DILocation(line: 394, column: 20, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5011, file: !2527, line: 393, column: 18)
!5016 = !DILocation(line: 395, column: 10, scope: !5015)
!5017 = !DILocation(line: 395, column: 3, scope: !5015)
!5018 = !DILocation(line: 399, column: 17, scope: !5001)
!5019 = !DILocation(line: 401, column: 6, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5001, file: !2527, line: 401, column: 6)
!5021 = !DILocation(line: 401, column: 9, scope: !5020)
!5022 = !DILocation(line: 401, column: 6, scope: !5001)
!5023 = !DILocation(line: 402, column: 23, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5020, file: !2527, line: 401, column: 16)
!5025 = !DILocation(line: 403, column: 9, scope: !5024)
!5026 = !DILocation(line: 403, column: 21, scope: !5024)
!5027 = !DILocation(line: 405, column: 11, scope: !5024)
!5028 = !DILocation(line: 404, column: 21, scope: !5024)
!5029 = !DILocation(line: 406, column: 2, scope: !5024)
!5030 = !DILocation(line: 409, column: 1, scope: !5001)
!5031 = distinct !DISubprogram(name: "extract_prec", scope: !2527, file: !2527, line: 420, type: !4820, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5032)
!5032 = !{!5033, !5034, !5035}
!5033 = !DILocalVariable(name: "conv", arg: 1, scope: !5031, file: !2527, line: 420, type: !4476)
!5034 = !DILocalVariable(name: "sp", arg: 2, scope: !5031, file: !2527, line: 421, type: !118)
!5035 = !DILocalVariable(name: "prec", scope: !5031, file: !2527, line: 435, type: !185)
!5036 = !DILocation(line: 0, scope: !5031)
!5037 = !DILocation(line: 423, column: 24, scope: !5031)
!5038 = !DILocation(line: 423, column: 28, scope: !5031)
!5039 = !DILocation(line: 423, column: 8, scope: !5031)
!5040 = !DILocation(line: 423, column: 21, scope: !5031)
!5041 = !DILocation(line: 425, column: 6, scope: !5031)
!5042 = !DILocation(line: 428, column: 2, scope: !5031)
!5043 = !DILocation(line: 430, column: 6, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5031, file: !2527, line: 430, column: 6)
!5045 = !DILocation(line: 430, column: 10, scope: !5044)
!5046 = !DILocation(line: 430, column: 6, scope: !5031)
!5047 = !DILocation(line: 431, column: 19, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !2527, line: 430, column: 18)
!5049 = !DILocation(line: 432, column: 10, scope: !5048)
!5050 = !DILocation(line: 432, column: 3, scope: !5048)
!5051 = !DILocation(line: 435, column: 16, scope: !5031)
!5052 = !DILocation(line: 437, column: 8, scope: !5031)
!5053 = !DILocation(line: 437, column: 19, scope: !5031)
!5054 = !DILocation(line: 439, column: 10, scope: !5031)
!5055 = !DILocation(line: 438, column: 20, scope: !5031)
!5056 = !DILocation(line: 441, column: 9, scope: !5031)
!5057 = !DILocation(line: 442, column: 1, scope: !5031)
!5058 = distinct !DISubprogram(name: "extract_length", scope: !2527, file: !2527, line: 453, type: !4820, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5059)
!5059 = !{!5060, !5061}
!5060 = !DILocalVariable(name: "conv", arg: 1, scope: !5058, file: !2527, line: 453, type: !4476)
!5061 = !DILocalVariable(name: "sp", arg: 2, scope: !5058, file: !2527, line: 454, type: !118)
!5062 = !DILocation(line: 0, scope: !5058)
!5063 = !DILocation(line: 456, column: 10, scope: !5058)
!5064 = !DILocation(line: 456, column: 2, scope: !5058)
!5065 = !DILocation(line: 458, column: 8, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5067, file: !2527, line: 458, column: 7)
!5067 = distinct !DILexicalBlock(scope: !5058, file: !2527, line: 456, column: 15)
!5068 = !DILocation(line: 458, column: 7, scope: !5066)
!5069 = !DILocation(line: 458, column: 13, scope: !5066)
!5070 = !DILocation(line: 0, scope: !5066)
!5071 = !DILocation(line: 458, column: 7, scope: !5067)
!5072 = !DILocation(line: 459, column: 21, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5066, file: !2527, line: 458, column: 21)
!5074 = !DILocation(line: 460, column: 4, scope: !5073)
!5075 = !DILocation(line: 461, column: 3, scope: !5073)
!5076 = !DILocation(line: 462, column: 21, scope: !5077)
!5077 = distinct !DILexicalBlock(scope: !5066, file: !2527, line: 461, column: 10)
!5078 = !DILocation(line: 466, column: 8, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5067, file: !2527, line: 466, column: 7)
!5080 = !DILocation(line: 466, column: 7, scope: !5079)
!5081 = !DILocation(line: 466, column: 13, scope: !5079)
!5082 = !DILocation(line: 0, scope: !5079)
!5083 = !DILocation(line: 466, column: 7, scope: !5067)
!5084 = !DILocation(line: 467, column: 21, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5079, file: !2527, line: 466, column: 21)
!5086 = !DILocation(line: 468, column: 4, scope: !5085)
!5087 = !DILocation(line: 469, column: 3, scope: !5085)
!5088 = !DILocation(line: 470, column: 21, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5079, file: !2527, line: 469, column: 10)
!5090 = !DILocation(line: 474, column: 9, scope: !5067)
!5091 = !DILocation(line: 474, column: 20, scope: !5067)
!5092 = !DILocation(line: 475, column: 3, scope: !5067)
!5093 = !DILocation(line: 476, column: 3, scope: !5067)
!5094 = !DILocation(line: 478, column: 9, scope: !5067)
!5095 = !DILocation(line: 478, column: 20, scope: !5067)
!5096 = !DILocation(line: 479, column: 3, scope: !5067)
!5097 = !DILocation(line: 480, column: 3, scope: !5067)
!5098 = !DILocation(line: 482, column: 9, scope: !5067)
!5099 = !DILocation(line: 482, column: 20, scope: !5067)
!5100 = !DILocation(line: 483, column: 3, scope: !5067)
!5101 = !DILocation(line: 484, column: 3, scope: !5067)
!5102 = !DILocation(line: 486, column: 9, scope: !5067)
!5103 = !DILocation(line: 486, column: 20, scope: !5067)
!5104 = !DILocation(line: 487, column: 3, scope: !5067)
!5105 = !DILocation(line: 492, column: 21, scope: !5067)
!5106 = !DILocation(line: 493, column: 3, scope: !5067)
!5107 = !DILocation(line: 495, column: 9, scope: !5067)
!5108 = !DILocation(line: 495, column: 20, scope: !5067)
!5109 = !DILocation(line: 496, column: 3, scope: !5067)
!5110 = !DILocation(line: 498, column: 2, scope: !5058)
!5111 = distinct !DISubprogram(name: "extract_specifier", scope: !2527, file: !2527, line: 513, type: !4820, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5112)
!5112 = !{!5113, !5114, !5115, !5116}
!5113 = !DILocalVariable(name: "conv", arg: 1, scope: !5111, file: !2527, line: 513, type: !4476)
!5114 = !DILocalVariable(name: "sp", arg: 2, scope: !5111, file: !2527, line: 514, type: !118)
!5115 = !DILocalVariable(name: "unsupported", scope: !5111, file: !2527, line: 516, type: !145)
!5116 = !DILabel(scope: !5117, name: "int_conv", file: !2527, line: 526)
!5117 = distinct !DILexicalBlock(scope: !5111, file: !2527, line: 520, column: 27)
!5118 = !DILocation(line: 0, scope: !5111)
!5119 = !DILocation(line: 518, column: 20, scope: !5111)
!5120 = !DILocation(line: 518, column: 8, scope: !5111)
!5121 = !DILocation(line: 518, column: 18, scope: !5111)
!5122 = !DILocation(line: 520, column: 2, scope: !5111)
!5123 = !DILocation(line: 525, column: 3, scope: !5117)
!5124 = !DILocation(line: 0, scope: !5117)
!5125 = !DILocation(line: 526, column: 1, scope: !5117)
!5126 = !DILocation(line: 528, column: 24, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !5117, file: !2527, line: 528, column: 7)
!5128 = !DILocation(line: 528, column: 7, scope: !5117)
!5129 = !DILocation(line: 535, column: 23, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5117, file: !2527, line: 535, column: 7)
!5131 = !DILocation(line: 535, column: 7, scope: !5117)
!5132 = !DILocation(line: 536, column: 36, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5130, file: !2527, line: 535, column: 31)
!5134 = !DILocation(line: 537, column: 3, scope: !5133)
!5135 = !DILocation(line: 570, column: 9, scope: !5117)
!5136 = !DILocation(line: 570, column: 23, scope: !5117)
!5137 = !DILocation(line: 575, column: 4, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5139, file: !2527, line: 573, column: 48)
!5139 = distinct !DILexicalBlock(scope: !5117, file: !2527, line: 573, column: 7)
!5140 = !DILocation(line: 603, column: 9, scope: !5117)
!5141 = !DILocation(line: 603, column: 23, scope: !5117)
!5142 = !DILocation(line: 605, column: 24, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5117, file: !2527, line: 605, column: 7)
!5144 = !DILocation(line: 605, column: 7, scope: !5117)
!5145 = !DILocation(line: 612, column: 9, scope: !5117)
!5146 = !DILocation(line: 612, column: 23, scope: !5117)
!5147 = !DILocation(line: 619, column: 24, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5117, file: !2527, line: 619, column: 7)
!5149 = !DILocation(line: 619, column: 7, scope: !5117)
!5150 = !DILocation(line: 625, column: 9, scope: !5117)
!5151 = !DILocation(line: 625, column: 17, scope: !5117)
!5152 = !DILocation(line: 626, column: 3, scope: !5117)
!5153 = !DILocation(line: 629, column: 20, scope: !5111)
!5154 = !DILocation(line: 629, column: 8, scope: !5111)
!5155 = !DILocation(line: 518, column: 23, scope: !5111)
!5156 = !DILocation(line: 631, column: 2, scope: !5111)
!5157 = distinct !DISubprogram(name: "extract_decimal", scope: !2527, file: !2527, line: 318, type: !5158, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5160)
!5158 = !DISubroutineType(types: !5159)
!5159 = !{!185, !184}
!5160 = !{!5161, !5162, !5163}
!5161 = !DILocalVariable(name: "str", arg: 1, scope: !5157, file: !2527, line: 318, type: !184)
!5162 = !DILocalVariable(name: "sp", scope: !5157, file: !2527, line: 320, type: !118)
!5163 = !DILocalVariable(name: "val", scope: !5157, file: !2527, line: 321, type: !185)
!5164 = !DILocation(line: 0, scope: !5157)
!5165 = !DILocation(line: 320, column: 19, scope: !5157)
!5166 = !DILocation(line: 323, column: 37, scope: !5157)
!5167 = !DILocation(line: 323, column: 17, scope: !5157)
!5168 = !DILocation(line: 323, column: 9, scope: !5157)
!5169 = !DILocation(line: 323, column: 2, scope: !5157)
!5170 = !DILocation(line: 324, column: 13, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5157, file: !2527, line: 323, column: 43)
!5172 = !DILocation(line: 324, column: 24, scope: !5171)
!5173 = !DILocation(line: 324, column: 19, scope: !5171)
!5174 = !DILocation(line: 324, column: 27, scope: !5171)
!5175 = distinct !{!5175, !5169, !5176}
!5176 = !DILocation(line: 325, column: 2, scope: !5157)
!5177 = !DILocation(line: 326, column: 7, scope: !5157)
!5178 = !DILocation(line: 327, column: 2, scope: !5157)
!5179 = distinct !DISubprogram(name: "isdigit", scope: !4959, file: !4959, line: 43, type: !214, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2523, retainedNodes: !5180)
!5180 = !{!5181}
!5181 = !DILocalVariable(name: "a", arg: 1, scope: !5179, file: !4959, line: 43, type: !107)
!5182 = !DILocation(line: 0, scope: !5179)
!5183 = !DILocation(line: 45, column: 29, scope: !5179)
!5184 = !DILocation(line: 45, column: 45, scope: !5179)
!5185 = !DILocation(line: 45, column: 2, scope: !5179)
!5186 = distinct !DISubprogram(name: "assert_post_action", scope: !5187, file: !5187, line: 26, type: !5188, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !5190)
!5187 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5188 = !DISubroutineType(types: !5189)
!5189 = !{null, !118, !32}
!5190 = !{!5191, !5192}
!5191 = !DILocalVariable(name: "file", arg: 1, scope: !5186, file: !5187, line: 26, type: !118)
!5192 = !DILocalVariable(name: "line", arg: 2, scope: !5186, file: !5187, line: 26, type: !32)
!5193 = !DILocation(line: 0, scope: !5186)
!5194 = !DILocation(line: 43, column: 2, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5186, file: !5187, line: 43, column: 2)
!5196 = !{i64 2152226939, i64 2152226955, i64 2152226981, i64 2152227009, i64 2152227029}
!5197 = !DILocation(line: 44, column: 1, scope: !5186)
!5198 = distinct !DISubprogram(name: "assert_print", scope: !5187, file: !5187, line: 46, type: !4168, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2557, retainedNodes: !5199)
!5199 = !{!5200, !5201}
!5200 = !DILocalVariable(name: "fmt", arg: 1, scope: !5198, file: !5187, line: 46, type: !118)
!5201 = !DILocalVariable(name: "ap", scope: !5198, file: !5187, line: 48, type: !5202)
!5202 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3178, line: 99, baseType: !5203)
!5203 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3178, line: 40, baseType: !5204)
!5204 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5187, baseType: !5205)
!5205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5206)
!5206 = !{!5207}
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5205, file: !5187, line: 48, baseType: !106, size: 32)
!5208 = !DILocation(line: 0, scope: !5198)
!5209 = !DILocation(line: 48, column: 2, scope: !5198)
!5210 = !DILocation(line: 48, column: 10, scope: !5198)
!5211 = !DILocation(line: 50, column: 2, scope: !5198)
!5212 = !DILocation(line: 52, column: 2, scope: !5198)
!5213 = !DILocation(line: 54, column: 2, scope: !5198)
!5214 = !DILocation(line: 55, column: 1, scope: !5198)
!5215 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5216, file: !5216, line: 9, type: !3055, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2559, retainedNodes: !2175)
!5216 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!5217 = !DILocation(line: 11, column: 1, scope: !5215)
!5218 = !{i64 2147565906, i64 2147565949, i64 2147565989}
!5219 = !DILocation(line: 12, column: 1, scope: !5215)
!5220 = !{i64 2147570133, i64 2147570176, i64 2147570216}
!5221 = !DILocation(line: 13, column: 1, scope: !5215)
!5222 = !{i64 2147570342, i64 2147570385, i64 2147570425}
!5223 = !DILocation(line: 14, column: 1, scope: !5215)
!5224 = !{i64 2147570511, i64 2147570554, i64 2147570594}
!5225 = !DILocation(line: 15, column: 1, scope: !5215)
!5226 = !{i64 2147570674, i64 2147570717, i64 2147570757}
!5227 = !DILocation(line: 16, column: 1, scope: !5215)
!5228 = !{i64 2147570858, i64 2147570901, i64 2147570941}
!5229 = !DILocation(line: 17, column: 1, scope: !5215)
!5230 = !{i64 2147571037, i64 2147571080, i64 2147571120}
!5231 = !DILocation(line: 18, column: 1, scope: !5215)
!5232 = !{i64 2147571279, i64 2147571322, i64 2147571362}
!5233 = !DILocation(line: 19, column: 1, scope: !5215)
!5234 = !{i64 2147571514, i64 2147571557, i64 2147571597}
!5235 = !DILocation(line: 20, column: 1, scope: !5215)
!5236 = !{i64 2147571700, i64 2147571743, i64 2147571783}
!5237 = !DILocation(line: 21, column: 1, scope: !5215)
!5238 = !{i64 2147571916, i64 2147571959, i64 2147571999}
!5239 = !DILocation(line: 22, column: 1, scope: !5215)
!5240 = !{i64 2147572119, i64 2147572162, i64 2147572202}
!5241 = !DILocation(line: 23, column: 1, scope: !5215)
!5242 = !{i64 2147572322, i64 2147572365, i64 2147572405}
!5243 = !DILocation(line: 24, column: 1, scope: !5215)
!5244 = !{i64 2147572497, i64 2147572540, i64 2147572580}
!5245 = !DILocation(line: 25, column: 1, scope: !5215)
!5246 = !{i64 2147572705, i64 2147572748, i64 2147572788}
!5247 = !DILocation(line: 26, column: 1, scope: !5215)
!5248 = !{i64 2147572909, i64 2147572952, i64 2147572992}
!5249 = !DILocation(line: 27, column: 1, scope: !5215)
!5250 = !{i64 2147573102, i64 2147573145, i64 2147573185}
!5251 = !DILocation(line: 28, column: 1, scope: !5215)
!5252 = !{i64 2147573304, i64 2147573347, i64 2147573387}
!5253 = !DILocation(line: 29, column: 1, scope: !5215)
!5254 = !{i64 2147573503, i64 2147573546, i64 2147573586}
!5255 = !DILocation(line: 30, column: 1, scope: !5215)
!5256 = !{i64 2147573730, i64 2147573773, i64 2147573813}
!5257 = !DILocation(line: 31, column: 1, scope: !5215)
!5258 = !{i64 2147573932, i64 2147573975, i64 2147574015}
!5259 = !DILocation(line: 32, column: 1, scope: !5215)
!5260 = !{i64 2147574147, i64 2147574190, i64 2147574230}
!5261 = !DILocation(line: 33, column: 1, scope: !5215)
!5262 = !{i64 2147574364, i64 2147574407, i64 2147574447}
!5263 = !DILocation(line: 34, column: 1, scope: !5215)
!5264 = !{i64 2147574536, i64 2147574579, i64 2147574619}
!5265 = !DILocation(line: 35, column: 1, scope: !5215)
!5266 = !{i64 2147574738, i64 2147574781, i64 2147574821}
!5267 = !DILocation(line: 36, column: 1, scope: !5215)
!5268 = !{i64 2147574964, i64 2147575007, i64 2147575047}
!5269 = !DILocation(line: 37, column: 1, scope: !5215)
!5270 = !{i64 2147575163, i64 2147575206, i64 2147575246}
!5271 = !DILocation(line: 38, column: 1, scope: !5215)
!5272 = !{i64 2147575338, i64 2147575381, i64 2147575421}
!5273 = !DILocation(line: 39, column: 1, scope: !5215)
!5274 = !{i64 2147575591, i64 2147575634, i64 2147575674}
!5275 = !DILocation(line: 40, column: 1, scope: !5215)
!5276 = !{i64 2147575829, i64 2147575872, i64 2147575912}
!5277 = !DILocation(line: 41, column: 1, scope: !5215)
!5278 = !{i64 2147576064, i64 2147576107, i64 2147576147}
!5279 = !DILocation(line: 42, column: 1, scope: !5215)
!5280 = !{i64 2147576296, i64 2147576339, i64 2147576379}
!5281 = !DILocation(line: 43, column: 1, scope: !5215)
!5282 = !{i64 2147576522, i64 2147576565, i64 2147576605}
!5283 = !DILocation(line: 44, column: 1, scope: !5215)
!5284 = !{i64 2147576781, i64 2147576824, i64 2147576864}
!5285 = !DILocation(line: 45, column: 1, scope: !5215)
!5286 = !{i64 2147577007, i64 2147577050, i64 2147577090}
!5287 = !DILocation(line: 46, column: 1, scope: !5215)
!5288 = !{i64 2147577248, i64 2147577291, i64 2147577331}
!5289 = !DILocation(line: 47, column: 1, scope: !5215)
!5290 = !{i64 2147577492, i64 2147577535, i64 2147577575}
!5291 = !DILocation(line: 48, column: 1, scope: !5215)
!5292 = !{i64 2147577733, i64 2147577776, i64 2147577816}
!5293 = !DILocation(line: 49, column: 1, scope: !5215)
!5294 = !{i64 2147577968, i64 2147578011, i64 2147578051}
!5295 = !DILocation(line: 50, column: 1, scope: !5215)
!5296 = !{i64 2147578194, i64 2147578237, i64 2147578277}
!5297 = !DILocation(line: 51, column: 1, scope: !5215)
!5298 = !{i64 2147578420, i64 2147578463, i64 2147578503}
!5299 = !DILocation(line: 52, column: 1, scope: !5215)
!5300 = !{i64 2147578664, i64 2147578707, i64 2147578747}
!5301 = !DILocation(line: 53, column: 1, scope: !5215)
!5302 = !{i64 2147582963, i64 2147583006, i64 2147583046}
!5303 = !DILocation(line: 54, column: 1, scope: !5215)
!5304 = !{i64 2147583237, i64 2147583280, i64 2147583320}
!5305 = !DILocation(line: 55, column: 1, scope: !5215)
!5306 = !{i64 2147583475, i64 2147583518, i64 2147583558}
!5307 = !DILocation(line: 56, column: 1, scope: !5215)
!5308 = !{i64 2147583719, i64 2147583762, i64 2147583802}
!5309 = !DILocation(line: 57, column: 1, scope: !5215)
!5310 = !{i64 2147583969, i64 2147584012, i64 2147584052}
!5311 = !DILocation(line: 58, column: 1, scope: !5215)
!5312 = !{i64 2147584216, i64 2147584259, i64 2147584299}
!5313 = !DILocation(line: 59, column: 1, scope: !5215)
!5314 = !{i64 2147584451, i64 2147584494, i64 2147584534}
!5315 = !DILocation(line: 60, column: 1, scope: !5215)
!5316 = !{i64 2147584686, i64 2147584729, i64 2147584769}
!5317 = !DILocation(line: 61, column: 1, scope: !5215)
!5318 = !{i64 2147584921, i64 2147584964, i64 2147585004}
!5319 = !DILocation(line: 62, column: 1, scope: !5215)
!5320 = !{i64 2147585159, i64 2147585202, i64 2147585242}
!5321 = !DILocation(line: 63, column: 1, scope: !5215)
!5322 = !{i64 2147585400, i64 2147585443, i64 2147585483}
!5323 = !DILocation(line: 64, column: 1, scope: !5215)
!5324 = !{i64 2147585659, i64 2147585702, i64 2147585742}
!5325 = !DILocation(line: 65, column: 1, scope: !5215)
!5326 = !{i64 2147585939, i64 2147585982, i64 2147586022}
!5327 = !DILocation(line: 66, column: 1, scope: !5215)
!5328 = !{i64 2147586168, i64 2147586211, i64 2147586251}
!5329 = !DILocation(line: 67, column: 1, scope: !5215)
!5330 = !{i64 2147586376, i64 2147586419, i64 2147586459}
!5331 = !DILocation(line: 68, column: 1, scope: !5215)
!5332 = !{i64 2147586587, i64 2147586630, i64 2147586670}
!5333 = !DILocation(line: 69, column: 1, scope: !5215)
!5334 = !{i64 2147586822, i64 2147586865, i64 2147586905}
!5335 = !DILocation(line: 70, column: 1, scope: !5215)
!5336 = !{i64 2147587051, i64 2147587094, i64 2147587134}
!5337 = !DILocation(line: 71, column: 1, scope: !5215)
!5338 = !{i64 2147587268, i64 2147587311, i64 2147587351}
!5339 = !DILocation(line: 72, column: 1, scope: !5215)
!5340 = !{i64 2147587497, i64 2147587540, i64 2147587580}
!5341 = !DILocation(line: 73, column: 1, scope: !5215)
!5342 = !{i64 2147587735, i64 2147587778, i64 2147587818}
!5343 = !DILocation(line: 74, column: 1, scope: !5215)
!5344 = !{i64 2147587967, i64 2147588010, i64 2147588050}
!5345 = !DILocation(line: 75, column: 1, scope: !5215)
!5346 = !{i64 2147588193, i64 2147588236, i64 2147588276}
!5347 = !DILocation(line: 76, column: 1, scope: !5215)
!5348 = !{i64 2147588410, i64 2147588453, i64 2147588493}
!5349 = !DILocation(line: 77, column: 1, scope: !5215)
!5350 = !{i64 2147588642, i64 2147588685, i64 2147588725}
!5351 = !DILocation(line: 78, column: 1, scope: !5215)
!5352 = !{i64 2147588868, i64 2147588911, i64 2147588951}
!5353 = !DILocation(line: 79, column: 1, scope: !5215)
!5354 = !{i64 2147589082, i64 2147589125, i64 2147589165}
!5355 = !DILocation(line: 80, column: 1, scope: !5215)
!5356 = !{i64 2147589302, i64 2147589345, i64 2147589385}
!5357 = !DILocation(line: 81, column: 1, scope: !5215)
!5358 = !{i64 2147589534, i64 2147589577, i64 2147589617}
!5359 = !DILocation(line: 82, column: 1, scope: !5215)
!5360 = !{i64 2147589742, i64 2147589785, i64 2147589825}
!5361 = !DILocation(line: 83, column: 1, scope: !5215)
!5362 = !{i64 2147589947, i64 2147589990, i64 2147590030}
!5363 = !DILocation(line: 84, column: 1, scope: !5215)
!5364 = !{i64 2147590164, i64 2147590207, i64 2147590247}
!5365 = !DILocation(line: 85, column: 1, scope: !5215)
!5366 = !{i64 2147590378, i64 2147590421, i64 2147590461}
!5367 = !DILocation(line: 86, column: 1, scope: !5215)
!5368 = !{i64 2147590604, i64 2147590647, i64 2147590687}
!5369 = !DILocation(line: 87, column: 1, scope: !5215)
!5370 = !{i64 2147590824, i64 2147590867, i64 2147590907}
!5371 = !DILocation(line: 88, column: 1, scope: !5215)
!5372 = !{i64 2147591029, i64 2147591072, i64 2147591112}
!5373 = !DILocation(line: 89, column: 1, scope: !5215)
!5374 = !{i64 2147595322, i64 2147595365, i64 2147595405}
!5375 = !DILocation(line: 90, column: 1, scope: !5215)
!5376 = !{i64 2147595557, i64 2147595600, i64 2147595640}
!5377 = !DILocation(line: 91, column: 1, scope: !5215)
!5378 = !{i64 2147595807, i64 2147595850, i64 2147595890}
!5379 = !DILocation(line: 92, column: 1, scope: !5215)
!5380 = !{i64 2147596057, i64 2147596100, i64 2147596140}
!5381 = !DILocation(line: 93, column: 1, scope: !5215)
!5382 = !{i64 2147596295, i64 2147596338, i64 2147596378}
!5383 = !DILocation(line: 94, column: 1, scope: !5215)
!5384 = !{i64 2147596506, i64 2147596549, i64 2147596589}
!5385 = !DILocation(line: 95, column: 1, scope: !5215)
!5386 = !{i64 2147596723, i64 2147596766, i64 2147596806}
!5387 = !DILocation(line: 96, column: 1, scope: !5215)
!5388 = !{i64 2147596919, i64 2147596962, i64 2147597002}
!5389 = !DILocation(line: 97, column: 1, scope: !5215)
!5390 = !{i64 2147597121, i64 2147597164, i64 2147597204}
!5391 = !DILocation(line: 98, column: 1, scope: !5215)
!5392 = !{i64 2147597314, i64 2147597357, i64 2147597397}
!5393 = !DILocation(line: 99, column: 1, scope: !5215)
!5394 = !{i64 2147597522, i64 2147597565, i64 2147597605}
!5395 = !DILocation(line: 100, column: 1, scope: !5215)
!5396 = !{i64 2147597718, i64 2147597761, i64 2147597801}
!5397 = !DILocation(line: 101, column: 1, scope: !5215)
!5398 = !{i64 2147597923, i64 2147597966, i64 2147598006}
!5399 = !DILocation(line: 102, column: 1, scope: !5215)
!5400 = !{i64 2147598134, i64 2147598177, i64 2147598217}
!5401 = !DILocation(line: 103, column: 1, scope: !5215)
!5402 = !{i64 2147598333, i64 2147598376, i64 2147598416}
!5403 = !DILocation(line: 104, column: 1, scope: !5215)
!5404 = !{i64 2147598508, i64 2147598551, i64 2147598591}
!5405 = !DILocation(line: 105, column: 1, scope: !5215)
!5406 = !{i64 2147598692, i64 2147598735, i64 2147598775}
!5407 = !DILocation(line: 106, column: 1, scope: !5215)
!5408 = !{i64 2147598894, i64 2147598937, i64 2147598977}
!5409 = !DILocation(line: 107, column: 1, scope: !5215)
!5410 = !{i64 2147599096, i64 2147599139, i64 2147599179}
!5411 = !DILocation(line: 108, column: 1, scope: !5215)
!5412 = !{i64 2147599301, i64 2147599344, i64 2147599384}
!5413 = !DILocation(line: 109, column: 1, scope: !5215)
!5414 = !{i64 2147599494, i64 2147599537, i64 2147599577}
!5415 = !DILocation(line: 110, column: 1, scope: !5215)
!5416 = !{i64 2147599660, i64 2147599703, i64 2147599743}
!5417 = !DILocation(line: 111, column: 1, scope: !5215)
!5418 = !{i64 2147599844, i64 2147599887, i64 2147599927}
!5419 = !DILocation(line: 112, column: 1, scope: !5215)
!5420 = !{i64 2147600034, i64 2147600077, i64 2147600117}
!5421 = !DILocation(line: 113, column: 1, scope: !5215)
!5422 = !{i64 2147600218, i64 2147600261, i64 2147600301}
!5423 = !DILocation(line: 114, column: 1, scope: !5215)
!5424 = !{i64 2147600432, i64 2147600475, i64 2147600515}
!5425 = !DILocation(line: 115, column: 1, scope: !5215)
!5426 = !{i64 2147600643, i64 2147600686, i64 2147600726}
!5427 = !DILocation(line: 116, column: 1, scope: !5215)
!5428 = !{i64 2147600866, i64 2147600909, i64 2147600949}
!5429 = !DILocation(line: 117, column: 1, scope: !5215)
!5430 = !{i64 2147601050, i64 2147601093, i64 2147601133}
!5431 = !DILocation(line: 118, column: 1, scope: !5215)
!5432 = !{i64 2147601264, i64 2147601307, i64 2147601347}
!5433 = !DILocation(line: 119, column: 1, scope: !5215)
!5434 = !{i64 2147601430, i64 2147601473, i64 2147601513}
!5435 = !DILocation(line: 120, column: 1, scope: !5215)
!5436 = !{i64 2147601611, i64 2147601654, i64 2147601694}
!5437 = !DILocation(line: 121, column: 1, scope: !5215)
!5438 = !{i64 2147601804, i64 2147601847, i64 2147601887}
!5439 = !DILocation(line: 122, column: 1, scope: !5215)
!5440 = !{i64 2147602030, i64 2147602073, i64 2147602113}
!5441 = !DILocation(line: 123, column: 1, scope: !5215)
!5442 = !{i64 2147602244, i64 2147602287, i64 2147602327}
!5443 = !DILocation(line: 124, column: 1, scope: !5215)
!5444 = !{i64 2147602470, i64 2147602513, i64 2147602553}
!5445 = !DILocation(line: 125, column: 1, scope: !5215)
!5446 = !{i64 2147602687, i64 2147602730, i64 2147602770}
!5447 = !DILocation(line: 126, column: 1, scope: !5215)
!5448 = !{i64 2147602964, i64 2147603007, i64 2147603047}
!5449 = !DILocation(line: 127, column: 1, scope: !5215)
!5450 = !{i64 2147603190, i64 2147603233, i64 2147603273}
!5451 = !DILocation(line: 128, column: 1, scope: !5215)
!5452 = !{i64 2147603386, i64 2147603429, i64 2147603469}
!5453 = !DILocation(line: 129, column: 1, scope: !5215)
!5454 = !{i64 2147603651, i64 2147603694, i64 2147603734}
!5455 = !DILocation(line: 130, column: 1, scope: !5215)
!5456 = !{i64 2147603865, i64 2147603908, i64 2147603948}
!5457 = !DILocation(line: 131, column: 1, scope: !5215)
!5458 = !{i64 2147604040, i64 2147604083, i64 2147604123}
!5459 = !DILocation(line: 132, column: 1, scope: !5215)
!5460 = !{i64 2147608355, i64 2147608398, i64 2147608438}
!5461 = !DILocation(line: 133, column: 1, scope: !5215)
!5462 = !{i64 2147608554, i64 2147608597, i64 2147608637}
!5463 = !DILocation(line: 134, column: 1, scope: !5215)
!5464 = !{i64 2147608796, i64 2147608839, i64 2147608879}
!5465 = !DILocation(line: 135, column: 1, scope: !5215)
!5466 = !{i64 2147608959, i64 2147609002, i64 2147609042}
!5467 = !DILocation(line: 136, column: 1, scope: !5215)
!5468 = !{i64 2147609146, i64 2147609189, i64 2147609229}
!5469 = !DILocation(line: 137, column: 1, scope: !5215)
!5470 = !{i64 2147609354, i64 2147609397, i64 2147609437}
!5471 = !DILocation(line: 138, column: 1, scope: !5215)
!5472 = !{i64 2147609550, i64 2147609593, i64 2147609633}
!5473 = !DILocation(line: 139, column: 1, scope: !5215)
!5474 = !{i64 2147609743, i64 2147609786, i64 2147609826}
!5475 = !DILocation(line: 140, column: 1, scope: !5215)
!5476 = !{i64 2147609925, i64 2147609968, i64 2147610008}
!5477 = !DILocation(line: 141, column: 1, scope: !5215)
!5478 = !{i64 2147610139, i64 2147610182, i64 2147610222}
!5479 = !DILocation(line: 142, column: 1, scope: !5215)
!5480 = !{i64 2147610350, i64 2147610393, i64 2147610433}
!5481 = !DILocation(line: 143, column: 1, scope: !5215)
!5482 = !{i64 2147610570, i64 2147610613, i64 2147610653}
!5483 = !DILocation(line: 144, column: 1, scope: !5215)
!5484 = !{i64 2147610777, i64 2147610820, i64 2147610860}
!5485 = !DILocation(line: 145, column: 1, scope: !5215)
!5486 = !{i64 2147611050, i64 2147611093, i64 2147611133}
!5487 = !DILocation(line: 146, column: 1, scope: !5215)
!5488 = !{i64 2147611298, i64 2147611341, i64 2147611381}
!5489 = !DILocation(line: 147, column: 1, scope: !5215)
!5490 = !{i64 2147611497, i64 2147611540, i64 2147611580}
!5491 = !DILocation(line: 148, column: 1, scope: !5215)
!5492 = !{i64 2147611732, i64 2147611775, i64 2147611815}
!5493 = !DILocation(line: 149, column: 1, scope: !5215)
!5494 = !{i64 2147611982, i64 2147612025, i64 2147612065}
!5495 = !DILocation(line: 150, column: 1, scope: !5215)
!5496 = !{i64 2147612184, i64 2147612227, i64 2147612267}
!5497 = !DILocation(line: 151, column: 1, scope: !5215)
!5498 = !{i64 2147612407, i64 2147612450, i64 2147612490}
!5499 = !DILocation(line: 152, column: 1, scope: !5215)
!5500 = !{i64 2147612621, i64 2147612664, i64 2147612704}
!5501 = !DILocation(line: 153, column: 1, scope: !5215)
!5502 = !{i64 2147612865, i64 2147612908, i64 2147612948}
!5503 = !DILocation(line: 154, column: 1, scope: !5215)
!5504 = !{i64 2147613094, i64 2147613137, i64 2147613177}
!5505 = !DILocation(line: 155, column: 1, scope: !5215)
!5506 = !{i64 2147613323, i64 2147613366, i64 2147613406}
!5507 = !DILocation(line: 156, column: 1, scope: !5215)
!5508 = !{i64 2147613531, i64 2147613574, i64 2147613614}
!5509 = !DILocation(line: 157, column: 1, scope: !5215)
!5510 = !{i64 2147613769, i64 2147613812, i64 2147613852}
!5511 = !DILocation(line: 158, column: 1, scope: !5215)
!5512 = !{i64 2147613995, i64 2147614038, i64 2147614078}
!5513 = !DILocation(line: 159, column: 1, scope: !5215)
!5514 = !{i64 2147614254, i64 2147614297, i64 2147614337}
!5515 = !DILocation(line: 160, column: 1, scope: !5215)
!5516 = !{i64 2147614474, i64 2147614517, i64 2147614557}
!5517 = !DILocation(line: 161, column: 1, scope: !5215)
!5518 = !{i64 2147614706, i64 2147614749, i64 2147614789}
!5519 = !DILocation(line: 162, column: 1, scope: !5215)
!5520 = !{i64 2147614947, i64 2147614990, i64 2147615030}
!5521 = !DILocation(line: 163, column: 1, scope: !5215)
!5522 = !{i64 2147615188, i64 2147615231, i64 2147615271}
!5523 = !DILocation(line: 164, column: 1, scope: !5215)
!5524 = !{i64 2147615411, i64 2147615454, i64 2147615494}
!5525 = !DILocation(line: 165, column: 1, scope: !5215)
!5526 = !{i64 2147615628, i64 2147615671, i64 2147615711}
!5527 = !DILocation(line: 166, column: 1, scope: !5215)
!5528 = !{i64 2147615869, i64 2147615912, i64 2147615952}
!5529 = !DILocation(line: 167, column: 1, scope: !5215)
!5530 = !{i64 2147616056, i64 2147616099, i64 2147616139}
!5531 = !DILocation(line: 168, column: 1, scope: !5215)
!5532 = !{i64 2147616219, i64 2147616262, i64 2147616302}
!5533 = !DILocation(line: 169, column: 1, scope: !5215)
!5534 = !{i64 2147616424, i64 2147616467, i64 2147616507}
!5535 = !DILocation(line: 170, column: 1, scope: !5215)
!5536 = !{i64 2147616617, i64 2147616660, i64 2147616700}
!5537 = !DILocation(line: 171, column: 1, scope: !5215)
!5538 = !{i64 2147616876, i64 2147616919, i64 2147616959}
!5539 = !DILocation(line: 172, column: 1, scope: !5215)
!5540 = !{i64 2147621160, i64 2147621203, i64 2147621243}
!5541 = !DILocation(line: 173, column: 1, scope: !5215)
!5542 = !{i64 2147621389, i64 2147621432, i64 2147621472}
!5543 = !DILocation(line: 174, column: 1, scope: !5215)
!5544 = !{i64 2147621603, i64 2147621646, i64 2147621686}
!5545 = !DILocation(line: 175, column: 1, scope: !5215)
!5546 = !{i64 2147621805, i64 2147621848, i64 2147621888}
!5547 = !DILocation(line: 176, column: 1, scope: !5215)
!5548 = !{i64 2147622001, i64 2147622044, i64 2147622084}
!5549 = !DILocation(line: 177, column: 1, scope: !5215)
!5550 = !{i64 2147622213, i64 2147622256, i64 2147622296}
!5551 = !DILocation(line: 178, column: 1, scope: !5215)
!5552 = !{i64 2147622434, i64 2147622477, i64 2147622517}
!5553 = !DILocation(line: 179, column: 1, scope: !5215)
!5554 = !{i64 2147622648, i64 2147622691, i64 2147622731}
!5555 = !DILocation(line: 180, column: 1, scope: !5215)
!5556 = !{i64 2147622838, i64 2147622881, i64 2147622921}
!5557 = !DILocation(line: 181, column: 1, scope: !5215)
!5558 = !{i64 2147623037, i64 2147623080, i64 2147623120}
!5559 = !DILocation(line: 182, column: 1, scope: !5215)
!5560 = !{i64 2147623242, i64 2147623285, i64 2147623325}
!5561 = !DILocation(line: 183, column: 1, scope: !5215)
!5562 = !{i64 2147623462, i64 2147623505, i64 2147623545}
!5563 = !DILocation(line: 184, column: 1, scope: !5215)
!5564 = !{i64 2147623664, i64 2147623707, i64 2147623747}
!5565 = !DILocation(line: 185, column: 1, scope: !5215)
!5566 = !{i64 2147623863, i64 2147623906, i64 2147623946}
!5567 = !DILocation(line: 186, column: 1, scope: !5215)
!5568 = !{i64 2147624068, i64 2147624111, i64 2147624151}
!5569 = !DILocation(line: 187, column: 1, scope: !5215)
!5570 = !{i64 2147624237, i64 2147624280, i64 2147624320}
!5571 = !DILocation(line: 188, column: 1, scope: !5215)
!5572 = !{i64 2147624421, i64 2147624464, i64 2147624504}
!5573 = !DILocation(line: 189, column: 1, scope: !5215)
!5574 = !{i64 2147624605, i64 2147624648, i64 2147624688}
!5575 = !DILocation(line: 190, column: 1, scope: !5215)
!5576 = !{i64 2147624792, i64 2147624835, i64 2147624875}
!5577 = !DILocation(line: 191, column: 1, scope: !5215)
!5578 = !{i64 2147624976, i64 2147625019, i64 2147625059}
!5579 = !DILocation(line: 192, column: 1, scope: !5215)
!5580 = !{i64 2147625163, i64 2147625206, i64 2147625246}
!5581 = !DILocation(line: 193, column: 1, scope: !5215)
!5582 = !{i64 2147625375, i64 2147625418, i64 2147625458}
!5583 = !DILocation(line: 194, column: 1, scope: !5215)
!5584 = !{i64 2147625613, i64 2147625656, i64 2147625696}
!5585 = !DILocation(line: 195, column: 1, scope: !5215)
!5586 = !{i64 2147625843, i64 2147625886, i64 2147625926}
!5587 = !DILocation(line: 196, column: 1, scope: !5215)
!5588 = !{i64 2147626072, i64 2147626115, i64 2147626155}
!5589 = !DILocation(line: 197, column: 1, scope: !5215)
!5590 = !{i64 2147626259, i64 2147626302, i64 2147626342}
!5591 = !DILocation(line: 198, column: 1, scope: !5215)
!5592 = !{i64 2147626455, i64 2147626498, i64 2147626538}
!5593 = !DILocation(line: 199, column: 1, scope: !5215)
!5594 = !{i64 2147626663, i64 2147626706, i64 2147626746}
!5595 = !DILocation(line: 200, column: 1, scope: !5215)
!5596 = !{i64 2147626875, i64 2147626918, i64 2147626958}
!5597 = !DILocation(line: 201, column: 1, scope: !5215)
!5598 = !{i64 2147627074, i64 2147627117, i64 2147627157}
!5599 = !DILocation(line: 202, column: 1, scope: !5215)
!5600 = !{i64 2147627312, i64 2147627355, i64 2147627395}
!5601 = !DILocation(line: 203, column: 1, scope: !5215)
!5602 = !{i64 2147627508, i64 2147627551, i64 2147627591}
!5603 = !DILocation(line: 204, column: 1, scope: !5215)
!5604 = !{i64 2147627710, i64 2147627753, i64 2147627793}
!5605 = !DILocation(line: 205, column: 1, scope: !5215)
!5606 = !{i64 2147627903, i64 2147627946, i64 2147627986}
!5607 = !DILocation(line: 206, column: 1, scope: !5215)
!5608 = !{i64 2147628137, i64 2147628180, i64 2147628220}
!5609 = !DILocation(line: 207, column: 1, scope: !5215)
!5610 = !{i64 2147628300, i64 2147628343, i64 2147628383}
!5611 = !DILocation(line: 208, column: 1, scope: !5215)
!5612 = !{i64 2147628539, i64 2147628582, i64 2147628622}
!5613 = !DILocation(line: 209, column: 1, scope: !5215)
!5614 = !{i64 2147628778, i64 2147628821, i64 2147628861}
!5615 = !DILocation(line: 210, column: 1, scope: !5215)
!5616 = !{i64 2147629014, i64 2147629057, i64 2147629097}
!5617 = !DILocation(line: 211, column: 1, scope: !5215)
!5618 = !{i64 2147629244, i64 2147629287, i64 2147629327}
!5619 = !DILocation(line: 212, column: 1, scope: !5215)
!5620 = !{i64 2147629431, i64 2147629474, i64 2147629514}
!5621 = !DILocation(line: 213, column: 1, scope: !5215)
!5622 = !{i64 2147629630, i64 2147629673, i64 2147629713}
!5623 = !DILocation(line: 214, column: 1, scope: !5215)
!5624 = !{i64 2147629901, i64 2147629944, i64 2147629984}
!5625 = !DILocation(line: 215, column: 1, scope: !5215)
!5626 = !{i64 2147630076, i64 2147630119, i64 2147630159}
!5627 = !DILocation(line: 216, column: 1, scope: !5215)
!5628 = !{i64 2147634371, i64 2147634414, i64 2147634454}
!5629 = !DILocation(line: 217, column: 1, scope: !5215)
!5630 = !{i64 2147634579, i64 2147634622, i64 2147634662}
!5631 = !DILocation(line: 218, column: 1, scope: !5215)
!5632 = !{i64 2147634797, i64 2147634840, i64 2147634880}
!5633 = !DILocation(line: 219, column: 1, scope: !5215)
!5634 = !{i64 2147634987, i64 2147635030, i64 2147635070}
!5635 = !DILocation(line: 220, column: 1, scope: !5215)
!5636 = !{i64 2147635219, i64 2147635262, i64 2147635302}
!5637 = !DILocation(line: 221, column: 1, scope: !5215)
!5638 = !{i64 2147635439, i64 2147635482, i64 2147635522}
!5639 = !DILocation(line: 222, column: 1, scope: !5215)
!5640 = !{i64 2147635635, i64 2147635678, i64 2147635718}
!5641 = !DILocation(line: 223, column: 1, scope: !5215)
!5642 = !{i64 2147635841, i64 2147635884, i64 2147635924}
!5643 = !DILocation(line: 224, column: 1, scope: !5215)
!5644 = !{i64 2147636046, i64 2147636089, i64 2147636129}
!5645 = !DILocation(line: 225, column: 1, scope: !5215)
!5646 = !{i64 2147636272, i64 2147636315, i64 2147636355}
!5647 = !DILocation(line: 226, column: 1, scope: !5215)
!5648 = !{i64 2147636480, i64 2147636523, i64 2147636563}
!5649 = !DILocation(line: 227, column: 1, scope: !5215)
!5650 = !{i64 2147636676, i64 2147636719, i64 2147636759}
!5651 = !DILocation(line: 228, column: 1, scope: !5215)
!5652 = !{i64 2147636908, i64 2147636951, i64 2147636991}
!5653 = !DILocation(line: 229, column: 1, scope: !5215)
!5654 = !{i64 2147637092, i64 2147637135, i64 2147637175}
!5655 = !DILocation(line: 230, column: 1, scope: !5215)
!5656 = !{i64 2147637301, i64 2147637344, i64 2147637384}
!5657 = !DILocation(line: 231, column: 1, scope: !5215)
!5658 = !{i64 2147637509, i64 2147637552, i64 2147637592}
!5659 = !DILocation(line: 232, column: 1, scope: !5215)
!5660 = !{i64 2147637705, i64 2147637748, i64 2147637788}
!5661 = !DILocation(line: 233, column: 1, scope: !5215)
!5662 = !{i64 2147637889, i64 2147637932, i64 2147637972}
!5663 = !DILocation(line: 234, column: 1, scope: !5215)
!5664 = !{i64 2147638115, i64 2147638158, i64 2147638198}
!5665 = !DILocation(line: 235, column: 1, scope: !5215)
!5666 = !{i64 2147638341, i64 2147638384, i64 2147638424}
!5667 = !DILocation(line: 236, column: 1, scope: !5215)
!5668 = !{i64 2147638567, i64 2147638610, i64 2147638650}
!5669 = !DILocation(line: 237, column: 1, scope: !5215)
!5670 = !{i64 2147638793, i64 2147638836, i64 2147638876}
!5671 = !DILocation(line: 238, column: 1, scope: !5215)
!5672 = !{i64 2147639019, i64 2147639062, i64 2147639102}
!5673 = !DILocation(line: 239, column: 1, scope: !5215)
!5674 = !{i64 2147639251, i64 2147639294, i64 2147639334}
!5675 = !DILocation(line: 240, column: 1, scope: !5215)
!5676 = !{i64 2147639489, i64 2147639532, i64 2147639572}
!5677 = !DILocation(line: 241, column: 1, scope: !5215)
!5678 = !{i64 2147639721, i64 2147639764, i64 2147639804}
!5679 = !DILocation(line: 242, column: 1, scope: !5215)
!5680 = !{i64 2147639923, i64 2147639966, i64 2147640006}
!5681 = !DILocation(line: 243, column: 1, scope: !5215)
!5682 = !{i64 2147640173, i64 2147640216, i64 2147640256}
!5683 = !DILocation(line: 244, column: 1, scope: !5215)
!5684 = !{i64 2147640411, i64 2147640454, i64 2147640494}
!5685 = !DILocation(line: 245, column: 1, scope: !5215)
!5686 = !{i64 2147640619, i64 2147640662, i64 2147640702}
!5687 = !DILocation(line: 246, column: 1, scope: !5215)
!5688 = !{i64 2147640815, i64 2147640858, i64 2147640898}
!5689 = !DILocation(line: 247, column: 1, scope: !5215)
!5690 = !{i64 2147640999, i64 2147641042, i64 2147641082}
!5691 = !DILocation(line: 248, column: 1, scope: !5215)
!5692 = !{i64 2147641216, i64 2147641259, i64 2147641299}
!5693 = !DILocation(line: 249, column: 1, scope: !5215)
!5694 = !{i64 2147641421, i64 2147641464, i64 2147641504}
!5695 = !DILocation(line: 250, column: 1, scope: !5215)
!5696 = !{i64 2147641656, i64 2147641699, i64 2147641739}
!5697 = !DILocation(line: 251, column: 1, scope: !5215)
!5698 = !{i64 2147641879, i64 2147641922, i64 2147641962}
!5699 = !DILocation(line: 252, column: 1, scope: !5215)
!5700 = !{i64 2147642102, i64 2147642145, i64 2147642185}
!5701 = !DILocation(line: 253, column: 1, scope: !5215)
!5702 = !{i64 2147642340, i64 2147642383, i64 2147642423}
!5703 = !DILocation(line: 254, column: 1, scope: !5215)
!5704 = !{i64 2147642578, i64 2147642621, i64 2147642661}
!5705 = !DILocation(line: 255, column: 1, scope: !5215)
!5706 = !{i64 2147642795, i64 2147642838, i64 2147642878}
!5707 = !DILocation(line: 256, column: 1, scope: !5215)
!5708 = !{i64 2147647061, i64 2147647104, i64 2147647144}
!5709 = !DILocation(line: 257, column: 1, scope: !5215)
!5710 = !{i64 2147647254, i64 2147647297, i64 2147647337}
!5711 = !DILocation(line: 258, column: 1, scope: !5215)
!5712 = !{i64 2147647507, i64 2147647550, i64 2147647590}
!5713 = !DILocation(line: 259, column: 1, scope: !5215)
!5714 = !{i64 2147647715, i64 2147647758, i64 2147647798}
!5715 = !DILocation(line: 260, column: 1, scope: !5215)
!5716 = !{i64 2147647911, i64 2147647954, i64 2147647994}
!5717 = !DILocation(line: 261, column: 1, scope: !5215)
!5718 = !{i64 2147648125, i64 2147648168, i64 2147648208}
!5719 = !DILocation(line: 262, column: 1, scope: !5215)
!5720 = !{i64 2147648333, i64 2147648376, i64 2147648416}
!5721 = !DILocation(line: 263, column: 1, scope: !5215)
!5722 = !{i64 2147648523, i64 2147648566, i64 2147648606}
!5723 = !DILocation(line: 264, column: 1, scope: !5215)
!5724 = !{i64 2147648737, i64 2147648780, i64 2147648820}
!5725 = !DILocation(line: 265, column: 1, scope: !5215)
!5726 = !{i64 2147648999, i64 2147649042, i64 2147649082}
!5727 = !DILocation(line: 266, column: 1, scope: !5215)
!5728 = !{i64 2147649210, i64 2147649253, i64 2147649293}
!5729 = !DILocation(line: 267, column: 1, scope: !5215)
!5730 = !{i64 2147649454, i64 2147649497, i64 2147649537}
!5731 = !DILocation(line: 268, column: 1, scope: !5215)
!5732 = !{i64 2147649665, i64 2147649708, i64 2147649748}
!5733 = !DILocation(line: 269, column: 1, scope: !5215)
!5734 = !{i64 2147649894, i64 2147649937, i64 2147649977}
!5735 = !DILocation(line: 270, column: 1, scope: !5215)
!5736 = !{i64 2147650159, i64 2147650202, i64 2147650242}
!5737 = !DILocation(line: 271, column: 1, scope: !5215)
!5738 = !{i64 2147650364, i64 2147650407, i64 2147650447}
!5739 = !DILocation(line: 272, column: 1, scope: !5215)
!5740 = !{i64 2147650560, i64 2147650603, i64 2147650643}
!5741 = !DILocation(line: 273, column: 1, scope: !5215)
!5742 = !{i64 2147650783, i64 2147650826, i64 2147650866}
!5743 = !DILocation(line: 274, column: 1, scope: !5215)
!5744 = !{i64 2147650946, i64 2147650989, i64 2147651029}
!5745 = !DILocation(line: 275, column: 1, scope: !5215)
!5746 = !{i64 2147651151, i64 2147651194, i64 2147651234}
!5747 = !DILocation(line: 276, column: 1, scope: !5215)
!5748 = !{i64 2147651371, i64 2147651414, i64 2147651454}
!5749 = !DILocation(line: 277, column: 1, scope: !5215)
!5750 = !{i64 2147651585, i64 2147651628, i64 2147651668}
!5751 = !DILocation(line: 278, column: 1, scope: !5215)
!5752 = !{i64 2147651829, i64 2147651872, i64 2147651912}
!5753 = !DILocation(line: 279, column: 1, scope: !5215)
!5754 = !{i64 2147652061, i64 2147652104, i64 2147652144}
!5755 = !DILocation(line: 280, column: 1, scope: !5215)
!5756 = !{i64 2147652275, i64 2147652318, i64 2147652358}
!5757 = !DILocation(line: 281, column: 1, scope: !5215)
!5758 = !{i64 2147652486, i64 2147652529, i64 2147652569}
!5759 = !DILocation(line: 282, column: 1, scope: !5215)
!5760 = !{i64 2147652679, i64 2147652722, i64 2147652762}
!5761 = !DILocation(line: 283, column: 1, scope: !5215)
!5762 = !{i64 2147652878, i64 2147652921, i64 2147652961}
!5763 = !DILocation(line: 284, column: 1, scope: !5215)
!5764 = !{i64 2147653050, i64 2147653093, i64 2147653133}
!5765 = !DILocation(line: 285, column: 1, scope: !5215)
!5766 = !{i64 2147653243, i64 2147653286, i64 2147653326}
!5767 = !DILocation(line: 286, column: 1, scope: !5215)
!5768 = !{i64 2147653415, i64 2147653458, i64 2147653498}
!5769 = !DILocation(line: 287, column: 1, scope: !5215)
!5770 = !{i64 2147653605, i64 2147653648, i64 2147653688}
!5771 = !DILocation(line: 288, column: 1, scope: !5215)
!5772 = !{i64 2147653798, i64 2147653841, i64 2147653881}
!5773 = !DILocation(line: 289, column: 1, scope: !5215)
!5774 = !{i64 2147653994, i64 2147654037, i64 2147654077}
!5775 = !DILocation(line: 290, column: 1, scope: !5215)
!5776 = !{i64 2147654157, i64 2147654200, i64 2147654240}
!5777 = !DILocation(line: 291, column: 1, scope: !5215)
!5778 = !{i64 2147654359, i64 2147654402, i64 2147654442}
!5779 = !DILocation(line: 292, column: 1, scope: !5215)
!5780 = !{i64 2147654570, i64 2147654613, i64 2147654653}
!5781 = !DILocation(line: 293, column: 1, scope: !5215)
!5782 = !{i64 2147654775, i64 2147654818, i64 2147654858}
!5783 = !DILocation(line: 294, column: 1, scope: !5215)
!5784 = !{i64 2147654983, i64 2147655026, i64 2147655066}
!5785 = !DILocation(line: 295, column: 1, scope: !5215)
!5786 = !{i64 2147655176, i64 2147655219, i64 2147655259}
!5787 = !DILocation(line: 296, column: 1, scope: !5215)
!5788 = !{i64 2147655414, i64 2147655457, i64 2147655497}
!5789 = !DILocation(line: 297, column: 1, scope: !5215)
!5790 = !{i64 2147655601, i64 2147655644, i64 2147655684}
!5791 = !DILocation(line: 298, column: 1, scope: !5215)
!5792 = !{i64 2147655770, i64 2147655813, i64 2147655853}
!5793 = !DILocation(line: 299, column: 1, scope: !5215)
!5794 = !{i64 2147655963, i64 2147656006, i64 2147656046}
!5795 = !DILocation(line: 300, column: 1, scope: !5215)
!5796 = !{i64 2147660229, i64 2147660272, i64 2147660312}
!5797 = !DILocation(line: 301, column: 1, scope: !5215)
!5798 = !{i64 2147660440, i64 2147660483, i64 2147660523}
!5799 = !DILocation(line: 302, column: 1, scope: !5215)
!5800 = !{i64 2147660663, i64 2147660706, i64 2147660746}
!5801 = !DILocation(line: 303, column: 1, scope: !5215)
!5802 = !{i64 2147660877, i64 2147660920, i64 2147660960}
!5803 = !DILocation(line: 304, column: 1, scope: !5215)
!5804 = !{i64 2147661095, i64 2147661138, i64 2147661178}
!5805 = !DILocation(line: 305, column: 1, scope: !5215)
!5806 = !{i64 2147661309, i64 2147661352, i64 2147661392}
!5807 = !DILocation(line: 306, column: 1, scope: !5215)
!5808 = !{i64 2147661523, i64 2147661566, i64 2147661606}
!5809 = !DILocation(line: 307, column: 1, scope: !5215)
!5810 = !{i64 2147661740, i64 2147661783, i64 2147661823}
!5811 = !DILocation(line: 308, column: 1, scope: !5215)
!5812 = !{i64 2147661954, i64 2147661997, i64 2147662037}
!5813 = !DILocation(line: 309, column: 1, scope: !5215)
!5814 = !{i64 2147662195, i64 2147662238, i64 2147662278}
!5815 = !DILocation(line: 310, column: 1, scope: !5215)
!5816 = !{i64 2147662361, i64 2147662404, i64 2147662444}
!5817 = !DILocation(line: 311, column: 1, scope: !5215)
!5818 = !{i64 2147662588, i64 2147662631, i64 2147662671}
!5819 = !DILocation(line: 312, column: 1, scope: !5215)
!5820 = !{i64 2147662805, i64 2147662848, i64 2147662888}
!5821 = !DILocation(line: 313, column: 1, scope: !5215)
!5822 = !{i64 2147663031, i64 2147663074, i64 2147663114}
!5823 = !DILocation(line: 314, column: 1, scope: !5215)
!5824 = !{i64 2147663236, i64 2147663279, i64 2147663319}
!5825 = !DILocation(line: 315, column: 1, scope: !5215)
!5826 = !{i64 2147663453, i64 2147663496, i64 2147663536}
!5827 = !DILocation(line: 316, column: 1, scope: !5215)
!5828 = !{i64 2147663745, i64 2147663788, i64 2147663828}
!5829 = !DILocation(line: 317, column: 1, scope: !5215)
!5830 = !{i64 2147663977, i64 2147664020, i64 2147664060}
!5831 = !DILocation(line: 318, column: 1, scope: !5215)
!5832 = !{i64 2147664194, i64 2147664237, i64 2147664277}
!5833 = !DILocation(line: 319, column: 1, scope: !5215)
!5834 = !{i64 2147664401, i64 2147664444, i64 2147664484}
!5835 = !DILocation(line: 320, column: 1, scope: !5215)
!5836 = !{i64 2147664602, i64 2147664645, i64 2147664685}
!5837 = !DILocation(line: 321, column: 1, scope: !5215)
!5838 = !{i64 2147664834, i64 2147664877, i64 2147664917}
!5839 = !DILocation(line: 322, column: 1, scope: !5215)
!5840 = !{i64 2147665042, i64 2147665085, i64 2147665125}
!5841 = !DILocation(line: 323, column: 1, scope: !5215)
!5842 = !{i64 2147665232, i64 2147665275, i64 2147665315}
!5843 = !DILocation(line: 324, column: 1, scope: !5215)
!5844 = !{i64 2147665458, i64 2147665501, i64 2147665541}
!5845 = !DILocation(line: 325, column: 1, scope: !5215)
!5846 = !{i64 2147665647, i64 2147665690, i64 2147665730}
!5847 = !DILocation(line: 326, column: 1, scope: !5215)
!5848 = !{i64 2147665918, i64 2147665961, i64 2147666001}
!5849 = !DILocation(line: 327, column: 1, scope: !5215)
!5850 = !{i64 2147666138, i64 2147666181, i64 2147666221}
!5851 = !DILocation(line: 328, column: 1, scope: !5215)
!5852 = !{i64 2147666391, i64 2147666434, i64 2147666474}
!5853 = !DILocation(line: 329, column: 1, scope: !5215)
!5854 = !{i64 2147666599, i64 2147666642, i64 2147666682}
!5855 = !DILocation(line: 330, column: 1, scope: !5215)
!5856 = !{i64 2147666831, i64 2147666874, i64 2147666914}
!5857 = !DILocation(line: 331, column: 1, scope: !5215)
!5858 = !{i64 2147667042, i64 2147667085, i64 2147667125}
!5859 = !DILocation(line: 332, column: 1, scope: !5215)
!5860 = !{i64 2147667232, i64 2147667275, i64 2147667315}
!5861 = !DILocation(line: 333, column: 1, scope: !5215)
!5862 = !{i64 2147667446, i64 2147667489, i64 2147667529}
!5863 = !DILocation(line: 334, column: 1, scope: !5215)
!5864 = !{i64 2147667645, i64 2147667688, i64 2147667728}
!5865 = !DILocation(line: 335, column: 1, scope: !5215)
!5866 = !{i64 2147667832, i64 2147667875, i64 2147667915}
!5867 = !DILocation(line: 336, column: 1, scope: !5215)
!5868 = !{i64 2147668028, i64 2147668071, i64 2147668111}
!5869 = !DILocation(line: 337, column: 1, scope: !5215)
!5870 = !{i64 2147668236, i64 2147668279, i64 2147668319}
!5871 = !DILocation(line: 338, column: 1, scope: !5215)
!5872 = !{i64 2147668465, i64 2147668508, i64 2147668548}
!5873 = !DILocation(line: 339, column: 1, scope: !5215)
!5874 = !{i64 2147668667, i64 2147668710, i64 2147668750}
!5875 = !DILocation(line: 340, column: 1, scope: !5215)
!5876 = !{i64 2147668866, i64 2147668909, i64 2147668949}
!5877 = !DILocation(line: 341, column: 1, scope: !5215)
!5878 = !{i64 2147673144, i64 2147673187, i64 2147673227}
!5879 = !DILocation(line: 343, column: 1, scope: !5215)
!5880 = distinct !DISubprogram(name: "stm32l1_init", scope: !248, file: !248, line: 31, type: !255, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5881)
!5881 = !{!5882, !5883}
!5882 = !DILocalVariable(name: "arg", arg: 1, scope: !5880, file: !248, line: 31, type: !257)
!5883 = !DILocalVariable(name: "key", scope: !5880, file: !248, line: 33, type: !152)
!5884 = !DILocation(line: 0, scope: !5880)
!5885 = !DILocation(line: 55, column: 2, scope: !5886, inlinedAt: !5893)
!5886 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5887, file: !5887, line: 42, type: !5888, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5890)
!5887 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5888 = !DISubroutineType(types: !5889)
!5889 = !{!32}
!5890 = !{!5891, !5892}
!5891 = !DILocalVariable(name: "key", scope: !5886, file: !5887, line: 44, type: !32)
!5892 = !DILocalVariable(name: "tmp", scope: !5886, file: !5887, line: 53, type: !32)
!5893 = distinct !DILocation(line: 37, column: 8, scope: !5880)
!5894 = !{i64 1528652}
!5895 = !DILocation(line: 0, scope: !5886, inlinedAt: !5893)
!5896 = !DILocalVariable(name: "key", arg: 1, scope: !5897, file: !5887, line: 84, type: !32)
!5897 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5887, file: !5887, line: 84, type: !5898, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5900)
!5898 = !DISubroutineType(types: !5899)
!5899 = !{null, !32}
!5900 = !{!5896}
!5901 = !DILocation(line: 0, scope: !5897, inlinedAt: !5902)
!5902 = distinct !DILocation(line: 44, column: 2, scope: !5880)
!5903 = !DILocation(line: 95, column: 2, scope: !5897, inlinedAt: !5902)
!5904 = !{i64 1529469}
!5905 = !DILocation(line: 48, column: 18, scope: !5880)
!5906 = !DILocation(line: 54, column: 2, scope: !5880)
!5907 = !DILocation(line: 55, column: 2, scope: !5880)
!5908 = !DILocation(line: 57, column: 2, scope: !5880)
!5909 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !5910, file: !5910, line: 531, type: !5911, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5913)
!5910 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5911 = !DISubroutineType(types: !5912)
!5912 = !{null, !152}
!5913 = !{!5914, !5915}
!5914 = !DILocalVariable(name: "Periphs", arg: 1, scope: !5909, file: !5910, line: 531, type: !152)
!5915 = !DILocalVariable(name: "tmpreg", scope: !5909, file: !5910, line: 533, type: !227)
!5916 = !DILocation(line: 0, scope: !5909)
!5917 = !DILocation(line: 533, column: 3, scope: !5909)
!5918 = !DILocation(line: 533, column: 17, scope: !5909)
!5919 = !DILocation(line: 534, column: 3, scope: !5909)
!5920 = !DILocation(line: 536, column: 12, scope: !5909)
!5921 = !DILocation(line: 536, column: 10, scope: !5909)
!5922 = !DILocation(line: 537, column: 9, scope: !5909)
!5923 = !DILocation(line: 538, column: 1, scope: !5909)
!5924 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !5925, file: !5925, line: 272, type: !5911, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !218, retainedNodes: !5926)
!5925 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5926 = !{!5927}
!5927 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !5924, file: !5925, line: 272, type: !152)
!5928 = !DILocation(line: 0, scope: !5924)
!5929 = !DILocation(line: 274, column: 3, scope: !5924)
!5930 = !DILocation(line: 275, column: 1, scope: !5924)
!5931 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !284, file: !284, line: 26, type: !290, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !281, retainedNodes: !5932)
!5932 = !{!5933}
!5933 = !DILocalVariable(name: "dev", arg: 1, scope: !5931, file: !284, line: 26, type: !292)
!5934 = !DILocation(line: 0, scope: !5931)
!5935 = !DILocation(line: 68, column: 2, scope: !5931)
!5936 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !5937, file: !5937, line: 14, type: !4168, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5938)
!5937 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5938 = !{!5939, !5940}
!5939 = !DILocalVariable(name: "fmt", arg: 1, scope: !5936, file: !5937, line: 14, type: !118)
!5940 = !DILocalVariable(name: "ap", scope: !5936, file: !5937, line: 16, type: !5941)
!5941 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3178, line: 99, baseType: !5942)
!5942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3178, line: 40, baseType: !5943)
!5943 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5937, baseType: !5944)
!5944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5945)
!5945 = !{!5946}
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5944, file: !5937, line: 16, baseType: !106, size: 32)
!5947 = !DILocation(line: 0, scope: !5936)
!5948 = !DILocation(line: 16, column: 2, scope: !5936)
!5949 = !DILocation(line: 16, column: 10, scope: !5936)
!5950 = !DILocation(line: 18, column: 2, scope: !5936)
!5951 = !DILocation(line: 19, column: 2, scope: !5936)
!5952 = !DILocation(line: 20, column: 2, scope: !5936)
!5953 = !DILocation(line: 21, column: 1, scope: !5936)
!5954 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !5937, file: !5937, line: 23, type: !5955, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5957)
!5955 = !DISubroutineType(types: !5956)
!5956 = !{null, !118, !5941}
!5957 = !{!5958, !5959}
!5958 = !DILocalVariable(name: "fmt", arg: 1, scope: !5954, file: !5937, line: 23, type: !118)
!5959 = !DILocalVariable(name: "ap", arg: 2, scope: !5954, file: !5937, line: 23, type: !5941)
!5960 = !DILocation(line: 0, scope: !5954)
!5961 = !DILocation(line: 25, column: 2, scope: !5954)
!5962 = !DILocation(line: 26, column: 1, scope: !5954)
!5963 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !5937, file: !5937, line: 52, type: !5964, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5966)
!5964 = !DISubroutineType(types: !5965)
!5965 = !{null, !107, !13, !185}
!5966 = !{!5967, !5968, !5969, !5970}
!5967 = !DILocalVariable(name: "level", arg: 1, scope: !5963, file: !5937, line: 52, type: !107)
!5968 = !DILocalVariable(name: "data", arg: 2, scope: !5963, file: !5937, line: 52, type: !13)
!5969 = !DILocalVariable(name: "size", arg: 3, scope: !5963, file: !5937, line: 52, type: !185)
!5970 = !DILocalVariable(name: "data_buffer", scope: !5963, file: !5937, line: 54, type: !118)
!5971 = !DILocation(line: 0, scope: !5963)
!5972 = !DILocation(line: 55, column: 14, scope: !5963)
!5973 = !DILocation(line: 55, column: 2, scope: !5963)
!5974 = !DILocation(line: 56, column: 3, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5963, file: !5937, line: 55, column: 20)
!5976 = !DILocation(line: 57, column: 3, scope: !5975)
!5977 = !DILocation(line: 59, column: 7, scope: !5975)
!5978 = distinct !{!5978, !5973, !5979}
!5979 = !DILocation(line: 65, column: 2, scope: !5963)
!5980 = !DILocation(line: 66, column: 1, scope: !5963)
!5981 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5982, file: !5982, line: 175, type: !5983, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5985)
!5982 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5983 = !DISubroutineType(types: !5984)
!5984 = !{!120, !107}
!5985 = !{!5986}
!5986 = !DILocalVariable(name: "level", arg: 1, scope: !5981, file: !5982, line: 175, type: !107)
!5987 = !DILocation(line: 0, scope: !5981)
!5988 = !DILocation(line: 177, column: 2, scope: !5981)
!5989 = !DILocation(line: 189, column: 1, scope: !5981)
!5990 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !5937, file: !5937, line: 28, type: !5991, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !5993)
!5991 = !DISubroutineType(types: !5992)
!5992 = !{null, !118, !185}
!5993 = !{!5994, !5995, !5996, !5998, !6000}
!5994 = !DILocalVariable(name: "data", arg: 1, scope: !5990, file: !5937, line: 28, type: !118)
!5995 = !DILocalVariable(name: "length", arg: 2, scope: !5990, file: !5937, line: 28, type: !185)
!5996 = !DILocalVariable(name: "i", scope: !5997, file: !5937, line: 30, type: !185)
!5997 = distinct !DILexicalBlock(scope: !5990, file: !5937, line: 30, column: 2)
!5998 = !DILocalVariable(name: "i", scope: !5999, file: !5937, line: 40, type: !185)
!5999 = distinct !DILexicalBlock(scope: !5990, file: !5937, line: 40, column: 2)
!6000 = !DILocalVariable(name: "c", scope: !6001, file: !5937, line: 42, type: !196)
!6001 = distinct !DILexicalBlock(scope: !6002, file: !5937, line: 41, column: 19)
!6002 = distinct !DILexicalBlock(scope: !6003, file: !5937, line: 41, column: 7)
!6003 = distinct !DILexicalBlock(scope: !6004, file: !5937, line: 40, column: 54)
!6004 = distinct !DILexicalBlock(scope: !5999, file: !5937, line: 40, column: 2)
!6005 = !DILocation(line: 0, scope: !5990)
!6006 = !DILocation(line: 0, scope: !5997)
!6007 = !DILocation(line: 30, column: 2, scope: !5997)
!6008 = !DILocation(line: 38, column: 2, scope: !5990)
!6009 = !DILocation(line: 0, scope: !5999)
!6010 = !DILocation(line: 40, column: 2, scope: !5999)
!6011 = !DILocation(line: 31, column: 9, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !5937, line: 31, column: 7)
!6013 = distinct !DILexicalBlock(scope: !6014, file: !5937, line: 30, column: 54)
!6014 = distinct !DILexicalBlock(scope: !5997, file: !5937, line: 30, column: 2)
!6015 = !DILocation(line: 31, column: 7, scope: !6013)
!6016 = !DILocation(line: 32, column: 35, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6012, file: !5937, line: 31, column: 19)
!6018 = !DILocation(line: 32, column: 20, scope: !6017)
!6019 = !DILocation(line: 32, column: 4, scope: !6017)
!6020 = !DILocation(line: 33, column: 3, scope: !6017)
!6021 = !DILocation(line: 34, column: 4, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6012, file: !5937, line: 33, column: 10)
!6023 = !DILocation(line: 30, column: 50, scope: !6014)
!6024 = !DILocation(line: 30, column: 24, scope: !6014)
!6025 = distinct !{!6025, !6007, !6026}
!6026 = !DILocation(line: 36, column: 2, scope: !5997)
!6027 = !DILocation(line: 49, column: 2, scope: !5990)
!6028 = !DILocation(line: 50, column: 1, scope: !5990)
!6029 = !DILocation(line: 41, column: 9, scope: !6002)
!6030 = !DILocation(line: 41, column: 7, scope: !6003)
!6031 = !DILocation(line: 42, column: 22, scope: !6001)
!6032 = !DILocation(line: 0, scope: !6001)
!6033 = !DILocation(line: 44, column: 25, scope: !6001)
!6034 = !DILocation(line: 44, column: 17, scope: !6001)
!6035 = !DILocation(line: 44, column: 33, scope: !6001)
!6036 = !DILocation(line: 44, column: 4, scope: !6001)
!6037 = !DILocation(line: 45, column: 3, scope: !6001)
!6038 = !DILocation(line: 46, column: 4, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6002, file: !5937, line: 45, column: 10)
!6040 = !DILocation(line: 40, column: 50, scope: !6004)
!6041 = !DILocation(line: 40, column: 24, scope: !6004)
!6042 = distinct !{!6042, !6010, !6043}
!6043 = !DILocation(line: 48, column: 2, scope: !5999)
!6044 = distinct !DISubprogram(name: "isprint", scope: !4959, file: !4959, line: 37, type: !214, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2561, retainedNodes: !6045)
!6045 = !{!6046}
!6046 = !DILocalVariable(name: "c", arg: 1, scope: !6044, file: !4959, line: 37, type: !107)
!6047 = !DILocation(line: 0, scope: !6044)
!6048 = !DILocation(line: 39, column: 38, scope: !6044)
!6049 = !DILocation(line: 39, column: 2, scope: !6044)
!6050 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6051, file: !6051, line: 57, type: !6052, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !6098)
!6051 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6052 = !DISubroutineType(types: !6053)
!6053 = !{null, !32, !6054}
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 32)
!6055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6056)
!6056 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2684, line: 141, baseType: !6057)
!6057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2684, line: 97, size: 256, elements: !6058)
!6058 = !{!6059}
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6057, file: !2684, line: 107, baseType: !6060, size: 256)
!6060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2684, line: 98, size: 256, elements: !6061)
!6061 = !{!6062, !6067, !6072, !6077, !6082, !6087, !6092, !6097}
!6062 = !DIDerivedType(tag: DW_TAG_member, scope: !6060, file: !2684, line: 99, baseType: !6063, size: 32)
!6063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6060, file: !2684, line: 99, size: 32, elements: !6064)
!6064 = !{!6065, !6066}
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6063, file: !2684, line: 99, baseType: !152, size: 32)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6063, file: !2684, line: 99, baseType: !152, size: 32)
!6067 = !DIDerivedType(tag: DW_TAG_member, scope: !6060, file: !2684, line: 100, baseType: !6068, size: 32, offset: 32)
!6068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6060, file: !2684, line: 100, size: 32, elements: !6069)
!6069 = !{!6070, !6071}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6068, file: !2684, line: 100, baseType: !152, size: 32)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6068, file: !2684, line: 100, baseType: !152, size: 32)
!6072 = !DIDerivedType(tag: DW_TAG_member, scope: !6060, file: !2684, line: 101, baseType: !6073, size: 32, offset: 64)
!6073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6060, file: !2684, line: 101, size: 32, elements: !6074)
!6074 = !{!6075, !6076}
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6073, file: !2684, line: 101, baseType: !152, size: 32)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6073, file: !2684, line: 101, baseType: !152, size: 32)
!6077 = !DIDerivedType(tag: DW_TAG_member, scope: !6060, file: !2684, line: 102, baseType: !6078, size: 32, offset: 96)
!6078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6060, file: !2684, line: 102, size: 32, elements: !6079)
!6079 = !{!6080, !6081}
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6078, file: !2684, line: 102, baseType: !152, size: 32)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6078, file: !2684, line: 102, baseType: !152, size: 32)
!6082 = !DIDerivedType(tag: DW_TAG_member, scope: !6060, file: !2684, line: 103, baseType: !6083, size: 32, offset: 128)
!6083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6060, file: !2684, line: 103, size: 32, elements: !6084)
!6084 = !{!6085, !6086}
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6083, file: !2684, line: 103, baseType: !152, size: 32)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6083, file: !2684, line: 103, baseType: !152, size: 32)
!6087 = !DIDerivedType(tag: DW_TAG_member, scope: !6060, file: !2684, line: 104, baseType: !6088, size: 32, offset: 160)
!6088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6060, file: !2684, line: 104, size: 32, elements: !6089)
!6089 = !{!6090, !6091}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6088, file: !2684, line: 104, baseType: !152, size: 32)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6088, file: !2684, line: 104, baseType: !152, size: 32)
!6092 = !DIDerivedType(tag: DW_TAG_member, scope: !6060, file: !2684, line: 105, baseType: !6093, size: 32, offset: 192)
!6093 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6060, file: !2684, line: 105, size: 32, elements: !6094)
!6094 = !{!6095, !6096}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6093, file: !2684, line: 105, baseType: !152, size: 32)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6093, file: !2684, line: 105, baseType: !152, size: 32)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6060, file: !2684, line: 106, baseType: !152, size: 32, offset: 224)
!6098 = !{!6099, !6100}
!6099 = !DILocalVariable(name: "reason", arg: 1, scope: !6050, file: !6051, line: 57, type: !32)
!6100 = !DILocalVariable(name: "esf", arg: 2, scope: !6050, file: !6051, line: 57, type: !6054)
!6101 = !DILocation(line: 0, scope: !6050)
!6102 = !DILocation(line: 60, column: 10, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6050, file: !6051, line: 60, column: 6)
!6104 = !DILocation(line: 60, column: 6, scope: !6050)
!6105 = !DILocation(line: 61, column: 3, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6103, file: !6051, line: 60, column: 19)
!6107 = !DILocation(line: 62, column: 2, scope: !6106)
!6108 = !DILocation(line: 63, column: 2, scope: !6050)
!6109 = !DILocation(line: 64, column: 1, scope: !6050)
!6110 = distinct !DISubprogram(name: "esf_dump", scope: !6051, file: !6051, line: 20, type: !6111, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !6113)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{null, !6054}
!6113 = !{!6114}
!6114 = !DILocalVariable(name: "esf", arg: 1, scope: !6110, file: !6051, line: 20, type: !6054)
!6115 = !DILocation(line: 0, scope: !6110)
!6116 = !DILocation(line: 22, column: 2, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !6051, line: 22, column: 2)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !6051, line: 22, column: 2)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !6051, line: 22, column: 2)
!6120 = distinct !DILexicalBlock(scope: !6110, file: !6051, line: 22, column: 2)
!6121 = !DILocation(line: 24, column: 2, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6123, file: !6051, line: 24, column: 2)
!6123 = distinct !DILexicalBlock(scope: !6124, file: !6051, line: 24, column: 2)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !6051, line: 24, column: 2)
!6125 = distinct !DILexicalBlock(scope: !6110, file: !6051, line: 24, column: 2)
!6126 = !DILocation(line: 26, column: 2, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6128, file: !6051, line: 26, column: 2)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !6051, line: 26, column: 2)
!6129 = distinct !DILexicalBlock(scope: !6130, file: !6051, line: 26, column: 2)
!6130 = distinct !DILexicalBlock(scope: !6110, file: !6051, line: 26, column: 2)
!6131 = !DILocation(line: 53, column: 2, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !6051, line: 53, column: 2)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !6051, line: 53, column: 2)
!6134 = distinct !DILexicalBlock(scope: !6135, file: !6051, line: 53, column: 2)
!6135 = distinct !DILexicalBlock(scope: !6110, file: !6051, line: 53, column: 2)
!6136 = !DILocation(line: 55, column: 1, scope: !6110)
!6137 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6051, file: !6051, line: 82, type: !6138, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !6153)
!6138 = !DISubroutineType(types: !6139)
!6139 = !{null, !6054, !6140}
!6140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6141, size: 32)
!6141 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !392, line: 37, baseType: !6142)
!6142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !6143)
!6143 = !{!6144, !6145, !6146, !6147, !6148, !6149, !6150, !6151, !6152}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6142, file: !392, line: 26, baseType: !152, size: 32)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6142, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6142, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6142, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6142, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6142, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6142, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6142, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6142, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!6153 = !{!6154, !6155, !6156}
!6154 = !DILocalVariable(name: "esf", arg: 1, scope: !6137, file: !6051, line: 82, type: !6054)
!6155 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6137, file: !6051, line: 82, type: !6140)
!6156 = !DILocalVariable(name: "reason", scope: !6137, file: !6051, line: 88, type: !32)
!6157 = !DILocation(line: 0, scope: !6137)
!6158 = !DILocation(line: 88, column: 35, scope: !6137)
!6159 = !DILocation(line: 108, column: 2, scope: !6137)
!6160 = !DILocation(line: 131, column: 1, scope: !6137)
!6161 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6051, file: !6051, line: 133, type: !131, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2564, retainedNodes: !6162)
!6162 = !{!6163, !6164, !6165}
!6163 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6161, file: !6051, line: 133, type: !106)
!6164 = !DILocalVariable(name: "ssf_contents", scope: !6161, file: !6051, line: 135, type: !1075)
!6165 = !DILocalVariable(name: "oops_esf", scope: !6161, file: !6051, line: 136, type: !6056)
!6166 = !DILocation(line: 0, scope: !6161)
!6167 = !DILocation(line: 136, column: 2, scope: !6161)
!6168 = !DILocation(line: 136, column: 15, scope: !6161)
!6169 = !DILocation(line: 139, column: 22, scope: !6161)
!6170 = !DILocation(line: 139, column: 17, scope: !6161)
!6171 = !DILocation(line: 139, column: 20, scope: !6161)
!6172 = !DILocation(line: 141, column: 2, scope: !6161)
!6173 = !DILocation(line: 142, column: 2, scope: !6161)
!6174 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6175, file: !6175, line: 40, type: !5898, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6176)
!6175 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6176 = !{!6177}
!6177 = !DILocalVariable(name: "irq", arg: 1, scope: !6174, file: !6175, line: 40, type: !32)
!6178 = !DILocation(line: 0, scope: !6174)
!6179 = !DILocation(line: 42, column: 2, scope: !6174)
!6180 = !DILocation(line: 43, column: 1, scope: !6174)
!6181 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !476, file: !476, line: 1508, type: !6182, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6184)
!6182 = !DISubroutineType(types: !6183)
!6183 = !{null, !1002}
!6184 = !{!6185}
!6185 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6181, file: !476, line: 1508, type: !1002)
!6186 = !DILocation(line: 0, scope: !6181)
!6187 = !DILocation(line: 1510, column: 23, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6181, file: !476, line: 1510, column: 7)
!6189 = !DILocation(line: 1510, column: 7, scope: !6181)
!6190 = !DILocation(line: 1512, column: 5, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6188, file: !476, line: 1511, column: 3)
!6192 = !{i64 2149973715}
!6193 = !DILocation(line: 1513, column: 81, scope: !6191)
!6194 = !DILocation(line: 1513, column: 60, scope: !6191)
!6195 = !DILocation(line: 1513, column: 34, scope: !6191)
!6196 = !DILocation(line: 1513, column: 5, scope: !6191)
!6197 = !DILocation(line: 1513, column: 43, scope: !6191)
!6198 = !DILocation(line: 1514, column: 5, scope: !6191)
!6199 = !{i64 2149973829}
!6200 = !DILocation(line: 1515, column: 3, scope: !6191)
!6201 = !DILocation(line: 1516, column: 1, scope: !6181)
!6202 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6175, file: !6175, line: 45, type: !5898, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6203)
!6203 = !{!6204}
!6204 = !DILocalVariable(name: "irq", arg: 1, scope: !6202, file: !6175, line: 45, type: !32)
!6205 = !DILocation(line: 0, scope: !6202)
!6206 = !DILocation(line: 47, column: 2, scope: !6202)
!6207 = !DILocation(line: 48, column: 1, scope: !6202)
!6208 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !476, file: !476, line: 1546, type: !6182, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6209)
!6209 = !{!6210}
!6210 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6208, file: !476, line: 1546, type: !1002)
!6211 = !DILocation(line: 0, scope: !6208)
!6212 = !DILocation(line: 1548, column: 23, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6208, file: !476, line: 1548, column: 7)
!6214 = !DILocation(line: 1548, column: 7, scope: !6208)
!6215 = !DILocation(line: 1550, column: 81, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6213, file: !476, line: 1549, column: 3)
!6217 = !DILocation(line: 1550, column: 60, scope: !6216)
!6218 = !DILocation(line: 1550, column: 34, scope: !6216)
!6219 = !DILocation(line: 1550, column: 5, scope: !6216)
!6220 = !DILocation(line: 1550, column: 43, scope: !6216)
!6221 = !DILocation(line: 271, column: 3, scope: !6222, inlinedAt: !6224)
!6222 = distinct !DISubprogram(name: "__DSB", scope: !6223, file: !6223, line: 269, type: !3055, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !2175)
!6223 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6224 = distinct !DILocation(line: 1551, column: 5, scope: !6216)
!6225 = !{i64 2431217}
!6226 = !DILocation(line: 260, column: 3, scope: !6227, inlinedAt: !6228)
!6227 = distinct !DISubprogram(name: "__ISB", scope: !6223, file: !6223, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !2175)
!6228 = distinct !DILocation(line: 1552, column: 5, scope: !6216)
!6229 = !{i64 2430934}
!6230 = !DILocation(line: 1553, column: 3, scope: !6216)
!6231 = !DILocation(line: 1554, column: 1, scope: !6208)
!6232 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6175, file: !6175, line: 50, type: !6233, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6235)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{!107, !32}
!6235 = !{!6236}
!6236 = !DILocalVariable(name: "irq", arg: 1, scope: !6232, file: !6175, line: 50, type: !32)
!6237 = !DILocation(line: 0, scope: !6232)
!6238 = !DILocation(line: 52, column: 20, scope: !6232)
!6239 = !DILocation(line: 52, column: 9, scope: !6232)
!6240 = !DILocation(line: 52, column: 41, scope: !6232)
!6241 = !DILocation(line: 52, column: 39, scope: !6232)
!6242 = !DILocation(line: 52, column: 2, scope: !6232)
!6243 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6175, file: !6175, line: 64, type: !6244, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6246)
!6244 = !DISubroutineType(types: !6245)
!6245 = !{null, !32, !32, !152}
!6246 = !{!6247, !6248, !6249}
!6247 = !DILocalVariable(name: "irq", arg: 1, scope: !6243, file: !6175, line: 64, type: !32)
!6248 = !DILocalVariable(name: "prio", arg: 2, scope: !6243, file: !6175, line: 64, type: !32)
!6249 = !DILocalVariable(name: "flags", arg: 3, scope: !6243, file: !6175, line: 64, type: !152)
!6250 = !DILocation(line: 0, scope: !6243)
!6251 = !DILocation(line: 83, column: 8, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !6175, line: 82, column: 9)
!6253 = distinct !DILexicalBlock(scope: !6243, file: !6175, line: 76, column: 6)
!6254 = !DILocation(line: 91, column: 2, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6256, file: !6175, line: 91, column: 2)
!6256 = distinct !DILexicalBlock(scope: !6243, file: !6175, line: 91, column: 2)
!6257 = !DILocation(line: 91, column: 2, scope: !6256)
!6258 = !DILocation(line: 91, column: 2, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6255, file: !6175, line: 91, column: 2)
!6260 = !DILocation(line: 95, column: 2, scope: !6243)
!6261 = !DILocation(line: 96, column: 1, scope: !6243)
!6262 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !476, file: !476, line: 1638, type: !6263, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6265)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{null, !1002, !152}
!6265 = !{!6266, !6267}
!6266 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6262, file: !476, line: 1638, type: !1002)
!6267 = !DILocalVariable(name: "priority", arg: 2, scope: !6262, file: !476, line: 1638, type: !152)
!6268 = !DILocation(line: 0, scope: !6262)
!6269 = !DILocation(line: 0, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6262, file: !476, line: 1640, column: 7)
!6271 = !DILocation(line: 1640, column: 7, scope: !6262)
!6272 = !DILocation(line: 1648, column: 1, scope: !6262)
!6273 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6175, file: !6175, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6274)
!6274 = !{!6275}
!6275 = !DILocalVariable(name: "unused", arg: 1, scope: !6273, file: !6175, line: 155, type: !13)
!6276 = !DILocation(line: 0, scope: !6273)
!6277 = !DILocation(line: 159, column: 2, scope: !6273)
!6278 = !DILocation(line: 160, column: 1, scope: !6273)
!6279 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6280, file: !6280, line: 87, type: !3055, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !2175)
!6280 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6281 = !DILocation(line: 89, column: 2, scope: !6279)
!6282 = !DILocation(line: 90, column: 2, scope: !6279)
!6283 = !DILocation(line: 91, column: 1, scope: !6279)
!6284 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6280, file: !6280, line: 23, type: !3055, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!6285 = !DISubprogram(name: "z_arm_int_exit", scope: !6286, file: !6286, line: 153, type: !3055, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!6286 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6287 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6288, file: !6288, line: 256, type: !3055, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !2175)
!6288 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6289 = !DILocation(line: 258, column: 2, scope: !6287)
!6290 = !DILocation(line: 262, column: 2, scope: !6287)
!6291 = !DILocation(line: 263, column: 2, scope: !6287)
!6292 = !DILocation(line: 267, column: 2, scope: !6287)
!6293 = !DILocation(line: 268, column: 2, scope: !6287)
!6294 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6288, file: !6288, line: 53, type: !3055, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !2175)
!6295 = !DILocation(line: 55, column: 12, scope: !6294)
!6296 = !DILocation(line: 271, column: 3, scope: !6297, inlinedAt: !6298)
!6297 = distinct !DISubprogram(name: "__DSB", scope: !6223, file: !6223, line: 269, type: !3055, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !2175)
!6298 = distinct !DILocation(line: 56, column: 2, scope: !6294)
!6299 = !{i64 2429888}
!6300 = !DILocation(line: 260, column: 3, scope: !6301, inlinedAt: !6302)
!6301 = distinct !DISubprogram(name: "__ISB", scope: !6223, file: !6223, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !2175)
!6302 = distinct !DILocation(line: 57, column: 2, scope: !6294)
!6303 = !{i64 2429605}
!6304 = !DILocation(line: 58, column: 1, scope: !6294)
!6305 = distinct !DISubprogram(name: "arch_swap", scope: !6306, file: !6306, line: 33, type: !6233, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !6307)
!6306 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6307 = !{!6308}
!6308 = !DILocalVariable(name: "key", arg: 1, scope: !6305, file: !6306, line: 33, type: !32)
!6309 = !DILocation(line: 0, scope: !6305)
!6310 = !DILocation(line: 36, column: 2, scope: !6305)
!6311 = !DILocation(line: 36, column: 17, scope: !6305)
!6312 = !DILocation(line: 36, column: 25, scope: !6305)
!6313 = !DILocation(line: 37, column: 37, scope: !6305)
!6314 = !DILocation(line: 37, column: 17, scope: !6305)
!6315 = !DILocation(line: 37, column: 35, scope: !6305)
!6316 = !DILocation(line: 41, column: 12, scope: !6305)
!6317 = !DILocalVariable(name: "key", arg: 1, scope: !6318, file: !5887, line: 84, type: !32)
!6318 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5887, file: !5887, line: 84, type: !5898, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2651, retainedNodes: !6319)
!6319 = !{!6317}
!6320 = !DILocation(line: 0, scope: !6318, inlinedAt: !6321)
!6321 = distinct !DILocation(line: 44, column: 2, scope: !6305)
!6322 = !DILocation(line: 95, column: 2, scope: !6318, inlinedAt: !6321)
!6323 = !{i64 1652888}
!6324 = !DILocation(line: 53, column: 9, scope: !6305)
!6325 = !DILocation(line: 53, column: 24, scope: !6305)
!6326 = !DILocation(line: 53, column: 2, scope: !6305)
!6327 = distinct !DISubprogram(name: "arch_new_thread", scope: !6328, file: !6328, line: 56, type: !6329, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2679, retainedNodes: !6439)
!6328 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6329 = !DISubroutineType(types: !6330)
!6330 = !{null, !6331, !6434, !193, !680, !106, !106, !106}
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6332, size: 32)
!6332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !6333)
!6333 = !{!6334, !6392, !6404, !6405, !6406, !6407, !6408, !6414, !6429}
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6332, file: !322, line: 247, baseType: !6335, size: 384)
!6335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !6336)
!6336 = !{!6337, !6361, !6368, !6369, !6370, !6379, !6380, !6381}
!6337 = !DIDerivedType(tag: DW_TAG_member, scope: !6335, file: !322, line: 60, baseType: !6338, size: 64)
!6338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6335, file: !322, line: 60, size: 64, elements: !6339)
!6339 = !{!6340, !6355}
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6338, file: !322, line: 61, baseType: !6341, size: 64)
!6341 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !6342)
!6342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !6343)
!6343 = !{!6344, !6350}
!6344 = !DIDerivedType(tag: DW_TAG_member, scope: !6342, file: !332, line: 38, baseType: !6345, size: 32)
!6345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6342, file: !332, line: 38, size: 32, elements: !6346)
!6346 = !{!6347, !6349}
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6345, file: !332, line: 39, baseType: !6348, size: 32)
!6348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6342, size: 32)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6345, file: !332, line: 40, baseType: !6348, size: 32)
!6350 = !DIDerivedType(tag: DW_TAG_member, scope: !6342, file: !332, line: 42, baseType: !6351, size: 32, offset: 32)
!6351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6342, file: !332, line: 42, size: 32, elements: !6352)
!6352 = !{!6353, !6354}
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6351, file: !332, line: 43, baseType: !6348, size: 32)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6351, file: !332, line: 44, baseType: !6348, size: 32)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6338, file: !322, line: 62, baseType: !6356, size: 64)
!6356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !6357)
!6357 = !{!6358}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6356, file: !348, line: 50, baseType: !6359, size: 64)
!6359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6360, size: 64, elements: !353)
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6356, size: 32)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6335, file: !322, line: 68, baseType: !6362, size: 32, offset: 64)
!6362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6363, size: 32)
!6363 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !6364)
!6364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !6365)
!6365 = !{!6366}
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6364, file: !358, line: 232, baseType: !6367, size: 64)
!6367 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !6342)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6335, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6335, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!6370 = !DIDerivedType(tag: DW_TAG_member, scope: !6335, file: !322, line: 90, baseType: !6371, size: 16, offset: 112)
!6371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6335, file: !322, line: 90, size: 16, elements: !6372)
!6372 = !{!6373, !6378}
!6373 = !DIDerivedType(tag: DW_TAG_member, scope: !6371, file: !322, line: 91, baseType: !6374, size: 16)
!6374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6371, file: !322, line: 91, size: 16, elements: !6375)
!6375 = !{!6376, !6377}
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6374, file: !322, line: 96, baseType: !372, size: 8)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6374, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6371, file: !322, line: 100, baseType: !197, size: 16)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6335, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6335, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6335, file: !322, line: 131, baseType: !6382, size: 192, offset: 192)
!6382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !6383)
!6383 = !{!6384, !6385, !6391}
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6382, file: !358, line: 245, baseType: !6341, size: 64)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6382, file: !358, line: 246, baseType: !6386, size: 32, offset: 64)
!6386 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !6387)
!6387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6388, size: 32)
!6388 = !DISubroutineType(types: !6389)
!6389 = !{null, !6390}
!6390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6382, size: 32)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6382, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6332, file: !322, line: 250, baseType: !6393, size: 288, offset: 384)
!6393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !6394)
!6394 = !{!6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403}
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6393, file: !392, line: 26, baseType: !152, size: 32)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6393, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6393, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6393, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6393, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6393, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6393, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6393, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6393, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6332, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6332, file: !322, line: 256, baseType: !6363, size: 64, offset: 704)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6332, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6332, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6332, file: !322, line: 300, baseType: !6409, size: 96, offset: 1056)
!6409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !6410)
!6410 = !{!6411, !6412, !6413}
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6409, file: !322, line: 153, baseType: !22, size: 32)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6409, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6409, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6332, file: !322, line: 325, baseType: !6415, size: 32, offset: 1152)
!6415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6416, size: 32)
!6416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !6417)
!6417 = !{!6418, !6424, !6425}
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6416, file: !419, line: 5074, baseType: !6419, size: 96)
!6419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !6420)
!6420 = !{!6421, !6422, !6423}
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6419, file: !423, line: 57, baseType: !426, size: 32)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6419, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6419, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6416, file: !419, line: 5075, baseType: !6363, size: 64, offset: 96)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6416, file: !419, line: 5076, baseType: !6426, size: 32, offset: 160)
!6426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !6427)
!6427 = !{!6428}
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6426, file: !433, line: 52, baseType: !22, size: 32)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6332, file: !322, line: 343, baseType: !6430, size: 64, offset: 1184)
!6430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !6431)
!6431 = !{!6432, !6433}
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6430, file: !392, line: 63, baseType: !152, size: 32)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6430, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!6434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6435, size: 32)
!6435 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !681, line: 44, baseType: !6436)
!6436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !698, line: 47, size: 8, elements: !6437)
!6437 = !{!6438}
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6436, file: !698, line: 48, baseType: !120, size: 8)
!6439 = !{!6440, !6441, !6442, !6443, !6444, !6445, !6446, !6447}
!6440 = !DILocalVariable(name: "thread", arg: 1, scope: !6327, file: !6328, line: 56, type: !6331)
!6441 = !DILocalVariable(name: "stack", arg: 2, scope: !6327, file: !6328, line: 56, type: !6434)
!6442 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6327, file: !6328, line: 57, type: !193)
!6443 = !DILocalVariable(name: "entry", arg: 4, scope: !6327, file: !6328, line: 57, type: !680)
!6444 = !DILocalVariable(name: "p1", arg: 5, scope: !6327, file: !6328, line: 58, type: !106)
!6445 = !DILocalVariable(name: "p2", arg: 6, scope: !6327, file: !6328, line: 58, type: !106)
!6446 = !DILocalVariable(name: "p3", arg: 7, scope: !6327, file: !6328, line: 58, type: !106)
!6447 = !DILocalVariable(name: "iframe", scope: !6327, file: !6328, line: 60, type: !2682)
!6448 = !DILocation(line: 0, scope: !6327)
!6449 = !DILocation(line: 85, column: 11, scope: !6327)
!6450 = !DILocation(line: 93, column: 10, scope: !6327)
!6451 = !DILocation(line: 98, column: 13, scope: !6327)
!6452 = !DILocation(line: 100, column: 15, scope: !6327)
!6453 = !DILocation(line: 100, column: 10, scope: !6327)
!6454 = !DILocation(line: 100, column: 13, scope: !6327)
!6455 = !DILocation(line: 101, column: 15, scope: !6327)
!6456 = !DILocation(line: 101, column: 10, scope: !6327)
!6457 = !DILocation(line: 101, column: 13, scope: !6327)
!6458 = !DILocation(line: 102, column: 15, scope: !6327)
!6459 = !DILocation(line: 102, column: 10, scope: !6327)
!6460 = !DILocation(line: 102, column: 13, scope: !6327)
!6461 = !DILocation(line: 103, column: 15, scope: !6327)
!6462 = !DILocation(line: 103, column: 10, scope: !6327)
!6463 = !DILocation(line: 103, column: 13, scope: !6327)
!6464 = !DILocation(line: 106, column: 10, scope: !6327)
!6465 = !DILocation(line: 106, column: 15, scope: !6327)
!6466 = !DILocation(line: 122, column: 29, scope: !6327)
!6467 = !DILocation(line: 122, column: 23, scope: !6327)
!6468 = !DILocation(line: 122, column: 27, scope: !6327)
!6469 = !DILocation(line: 123, column: 15, scope: !6327)
!6470 = !DILocation(line: 123, column: 23, scope: !6327)
!6471 = !DILocation(line: 143, column: 1, scope: !6327)
!6472 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6328, file: !6328, line: 385, type: !6473, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2679, retainedNodes: !6476)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{!152, !6475, !6475}
!6475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !152)
!6476 = !{!6477, !6478, !6479, !6482}
!6477 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6472, file: !6328, line: 385, type: !6475)
!6478 = !DILocalVariable(name: "psp", arg: 2, scope: !6472, file: !6328, line: 385, type: !6475)
!6479 = !DILocalVariable(name: "thread", scope: !6472, file: !6328, line: 388, type: !6480)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 32)
!6481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6332)
!6482 = !DILocalVariable(name: "guard_len", scope: !6472, file: !6328, line: 405, type: !152)
!6483 = !DILocation(line: 0, scope: !6472)
!6484 = !DILocation(line: 388, column: 34, scope: !6472)
!6485 = !DILocation(line: 390, column: 13, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6472, file: !6328, line: 390, column: 6)
!6487 = !DILocation(line: 390, column: 6, scope: !6472)
!6488 = !DILocation(line: 438, column: 6, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6472, file: !6328, line: 438, column: 6)
!6490 = !DILocation(line: 438, column: 6, scope: !6472)
!6491 = !DILocation(line: 442, column: 3, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6489, file: !6328, line: 440, column: 22)
!6493 = !DILocation(line: 455, column: 1, scope: !6472)
!6494 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6328, file: !6328, line: 530, type: !6495, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2679, retainedNodes: !6497)
!6495 = !DISubroutineType(types: !6496)
!6496 = !{null, !6331, !193, !680}
!6497 = !{!6498, !6499, !6500}
!6498 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6494, file: !6328, line: 530, type: !6331)
!6499 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6494, file: !6328, line: 530, type: !193)
!6500 = !DILocalVariable(name: "_main", arg: 3, scope: !6494, file: !6328, line: 531, type: !680)
!6501 = !DILocation(line: 0, scope: !6494)
!6502 = !DILocation(line: 535, column: 11, scope: !6494)
!6503 = !DILocation(line: 560, column: 2, scope: !6494)
!6504 = !DILocation(line: 576, column: 2, scope: !6494)
!6505 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6506 = !DILocation(line: 603, column: 2, scope: !6494)
!6507 = distinct !DISubprogram(name: "z_arm_fault", scope: !6508, file: !6508, line: 1036, type: !6509, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6524)
!6508 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6509 = !DISubroutineType(types: !6510)
!6510 = !{null, !152, !152, !152, !6511}
!6511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6512, size: 32)
!6512 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !392, line: 37, baseType: !6513)
!6513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !6514)
!6514 = !{!6515, !6516, !6517, !6518, !6519, !6520, !6521, !6522, !6523}
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6513, file: !392, line: 26, baseType: !152, size: 32)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6513, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6513, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6513, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6513, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6513, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6513, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6513, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6513, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!6524 = !{!6525, !6526, !6527, !6528, !6529, !6530, !6531, !6532, !6533, !6534}
!6525 = !DILocalVariable(name: "msp", arg: 1, scope: !6507, file: !6508, line: 1036, type: !152)
!6526 = !DILocalVariable(name: "psp", arg: 2, scope: !6507, file: !6508, line: 1036, type: !152)
!6527 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6507, file: !6508, line: 1036, type: !152)
!6528 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6507, file: !6508, line: 1037, type: !6511)
!6529 = !DILocalVariable(name: "reason", scope: !6507, file: !6508, line: 1039, type: !152)
!6530 = !DILocalVariable(name: "fault", scope: !6507, file: !6508, line: 1040, type: !107)
!6531 = !DILocalVariable(name: "recoverable", scope: !6507, file: !6508, line: 1041, type: !145)
!6532 = !DILocalVariable(name: "nested_exc", scope: !6507, file: !6508, line: 1041, type: !145)
!6533 = !DILocalVariable(name: "esf", scope: !6507, file: !6508, line: 1042, type: !2750)
!6534 = !DILocalVariable(name: "esf_copy", scope: !6507, file: !6508, line: 1047, type: !2751)
!6535 = !DILocation(line: 0, scope: !6507)
!6536 = !DILocation(line: 1040, column: 19, scope: !6507)
!6537 = !DILocation(line: 1041, column: 2, scope: !6507)
!6538 = !DILocation(line: 1047, column: 2, scope: !6507)
!6539 = !DILocation(line: 1047, column: 15, scope: !6507)
!6540 = !DILocalVariable(name: "key", arg: 1, scope: !6541, file: !5887, line: 84, type: !32)
!6541 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5887, file: !5887, line: 84, type: !5898, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6542)
!6542 = !{!6540}
!6543 = !DILocation(line: 0, scope: !6541, inlinedAt: !6544)
!6544 = distinct !DILocation(line: 1050, column: 2, scope: !6507)
!6545 = !DILocation(line: 95, column: 2, scope: !6541, inlinedAt: !6544)
!6546 = !{i64 1686132}
!6547 = !DILocation(line: 1055, column: 9, scope: !6507)
!6548 = !DILocation(line: 1056, column: 2, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !6508, line: 1056, column: 2)
!6550 = distinct !DILexicalBlock(scope: !6507, file: !6508, line: 1056, column: 2)
!6551 = !DILocation(line: 1056, column: 2, scope: !6550)
!6552 = !DILocation(line: 1056, column: 2, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6549, file: !6508, line: 1056, column: 2)
!6554 = !DILocation(line: 1040, column: 24, scope: !6507)
!6555 = !DILocation(line: 1063, column: 11, scope: !6507)
!6556 = !DILocation(line: 1064, column: 6, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6507, file: !6508, line: 1064, column: 6)
!6558 = !{i8 0, i8 2}
!6559 = !DILocation(line: 1064, column: 6, scope: !6507)
!6560 = !DILocation(line: 1070, column: 20, scope: !6507)
!6561 = !DILocation(line: 1070, column: 2, scope: !6507)
!6562 = !DILocation(line: 1089, column: 6, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6507, file: !6508, line: 1089, column: 6)
!6564 = !DILocation(line: 0, scope: !6563)
!6565 = !DILocation(line: 1089, column: 6, scope: !6507)
!6566 = !DILocation(line: 1090, column: 28, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !6508, line: 1090, column: 7)
!6568 = distinct !DILexicalBlock(scope: !6563, file: !6508, line: 1089, column: 18)
!6569 = !DILocation(line: 1090, column: 44, scope: !6567)
!6570 = !DILocation(line: 1090, column: 7, scope: !6568)
!6571 = !DILocation(line: 1091, column: 24, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6567, file: !6508, line: 1090, column: 50)
!6573 = !DILocation(line: 1092, column: 3, scope: !6572)
!6574 = !DILocation(line: 1094, column: 23, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6563, file: !6508, line: 1093, column: 9)
!6576 = !DILocation(line: 1097, column: 2, scope: !6507)
!6577 = !DILocation(line: 1098, column: 1, scope: !6507)
!6578 = distinct !DISubprogram(name: "get_esf", scope: !6508, file: !6508, line: 894, type: !6579, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6582)
!6579 = !DISubroutineType(types: !6580)
!6580 = !{!2750, !152, !152, !152, !6581}
!6581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 32)
!6582 = !{!6583, !6584, !6585, !6586, !6587, !6588}
!6583 = !DILocalVariable(name: "msp", arg: 1, scope: !6578, file: !6508, line: 894, type: !152)
!6584 = !DILocalVariable(name: "psp", arg: 2, scope: !6578, file: !6508, line: 894, type: !152)
!6585 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6578, file: !6508, line: 894, type: !152)
!6586 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6578, file: !6508, line: 895, type: !6581)
!6587 = !DILocalVariable(name: "alternative_state_exc", scope: !6578, file: !6508, line: 897, type: !145)
!6588 = !DILocalVariable(name: "ptr_esf", scope: !6578, file: !6508, line: 898, type: !2750)
!6589 = !DILocation(line: 0, scope: !6578)
!6590 = !DILocation(line: 900, column: 14, scope: !6578)
!6591 = !DILocation(line: 902, column: 49, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6578, file: !6508, line: 902, column: 6)
!6593 = !DILocation(line: 902, column: 6, scope: !6578)
!6594 = !DILocation(line: 983, column: 44, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6578, file: !6508, line: 983, column: 6)
!6596 = !DILocation(line: 985, column: 3, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6598, file: !6508, line: 985, column: 3)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !6508, line: 985, column: 3)
!6599 = distinct !DILexicalBlock(scope: !6600, file: !6508, line: 985, column: 3)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !6508, line: 985, column: 3)
!6601 = distinct !DILexicalBlock(scope: !6595, file: !6508, line: 984, column: 47)
!6602 = !DILocation(line: 986, column: 3, scope: !6601)
!6603 = !DILocation(line: 983, column: 18, scope: !6595)
!6604 = !DILocation(line: 991, column: 7, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !6508, line: 990, column: 30)
!6606 = distinct !DILexicalBlock(scope: !6578, file: !6508, line: 990, column: 6)
!6607 = !DILocation(line: 998, column: 16, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6609, file: !6508, line: 995, column: 10)
!6609 = distinct !DILexicalBlock(scope: !6605, file: !6508, line: 991, column: 7)
!6610 = !DILocation(line: 1002, column: 2, scope: !6578)
!6611 = !DILocation(line: 1003, column: 1, scope: !6578)
!6612 = distinct !DISubprogram(name: "fault_handle", scope: !6508, file: !6508, line: 786, type: !6613, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6615)
!6613 = !DISubroutineType(types: !6614)
!6614 = !{!152, !2750, !107, !6581}
!6615 = !{!6616, !6617, !6618, !6619}
!6616 = !DILocalVariable(name: "esf", arg: 1, scope: !6612, file: !6508, line: 786, type: !2750)
!6617 = !DILocalVariable(name: "fault", arg: 2, scope: !6612, file: !6508, line: 786, type: !107)
!6618 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6612, file: !6508, line: 786, type: !6581)
!6619 = !DILocalVariable(name: "reason", scope: !6612, file: !6508, line: 788, type: !152)
!6620 = !DILocation(line: 0, scope: !6612)
!6621 = !DILocation(line: 790, column: 15, scope: !6612)
!6622 = !DILocation(line: 792, column: 2, scope: !6612)
!6623 = !DILocation(line: 794, column: 12, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6612, file: !6508, line: 792, column: 17)
!6625 = !DILocation(line: 795, column: 3, scope: !6624)
!6626 = !DILocation(line: 800, column: 12, scope: !6624)
!6627 = !DILocation(line: 801, column: 3, scope: !6624)
!6628 = !DILocation(line: 803, column: 12, scope: !6624)
!6629 = !DILocation(line: 804, column: 3, scope: !6624)
!6630 = !DILocation(line: 806, column: 12, scope: !6624)
!6631 = !DILocation(line: 807, column: 3, scope: !6624)
!6632 = !DILocation(line: 814, column: 3, scope: !6624)
!6633 = !DILocation(line: 815, column: 3, scope: !6624)
!6634 = !DILocation(line: 820, column: 3, scope: !6624)
!6635 = !DILocation(line: 821, column: 3, scope: !6624)
!6636 = !DILocation(line: 829, column: 2, scope: !6612)
!6637 = distinct !DISubprogram(name: "hard_fault", scope: !6508, file: !6508, line: 709, type: !6638, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6640)
!6638 = !DISubroutineType(types: !6639)
!6639 = !{!152, !2750, !6581}
!6640 = !{!6641, !6642, !6643}
!6641 = !DILocalVariable(name: "esf", arg: 1, scope: !6637, file: !6508, line: 709, type: !2750)
!6642 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6637, file: !6508, line: 709, type: !6581)
!6643 = !DILocalVariable(name: "reason", scope: !6637, file: !6508, line: 711, type: !152)
!6644 = !DILocation(line: 0, scope: !6637)
!6645 = !DILocation(line: 713, column: 2, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !6508, line: 713, column: 2)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !6508, line: 713, column: 2)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !6508, line: 713, column: 2)
!6649 = distinct !DILexicalBlock(scope: !6637, file: !6508, line: 713, column: 2)
!6650 = !DILocation(line: 732, column: 15, scope: !6637)
!6651 = !DILocation(line: 734, column: 12, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6637, file: !6508, line: 734, column: 6)
!6653 = !DILocation(line: 734, column: 17, scope: !6652)
!6654 = !DILocation(line: 734, column: 41, scope: !6652)
!6655 = !DILocation(line: 734, column: 6, scope: !6637)
!6656 = !DILocation(line: 735, column: 3, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !6508, line: 735, column: 3)
!6658 = distinct !DILexicalBlock(scope: !6659, file: !6508, line: 735, column: 3)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !6508, line: 735, column: 3)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !6508, line: 735, column: 3)
!6661 = distinct !DILexicalBlock(scope: !6652, file: !6508, line: 734, column: 47)
!6662 = !DILocation(line: 736, column: 2, scope: !6661)
!6663 = !DILocation(line: 736, column: 19, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6652, file: !6508, line: 736, column: 13)
!6665 = !DILocation(line: 736, column: 49, scope: !6664)
!6666 = !DILocation(line: 736, column: 13, scope: !6652)
!6667 = !DILocation(line: 737, column: 3, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !6508, line: 737, column: 3)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !6508, line: 737, column: 3)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !6508, line: 737, column: 3)
!6671 = distinct !DILexicalBlock(scope: !6672, file: !6508, line: 737, column: 3)
!6672 = distinct !DILexicalBlock(scope: !6664, file: !6508, line: 736, column: 55)
!6673 = !DILocation(line: 738, column: 2, scope: !6672)
!6674 = !DILocation(line: 738, column: 19, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6664, file: !6508, line: 738, column: 13)
!6676 = !DILocation(line: 738, column: 24, scope: !6675)
!6677 = !DILocation(line: 738, column: 47, scope: !6675)
!6678 = !DILocation(line: 738, column: 13, scope: !6664)
!6679 = !DILocation(line: 739, column: 3, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !6508, line: 739, column: 3)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !6508, line: 739, column: 3)
!6682 = distinct !DILexicalBlock(scope: !6683, file: !6508, line: 739, column: 3)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !6508, line: 739, column: 3)
!6684 = distinct !DILexicalBlock(scope: !6675, file: !6508, line: 738, column: 53)
!6685 = !DILocation(line: 740, column: 7, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6684, file: !6508, line: 740, column: 7)
!6687 = !DILocation(line: 740, column: 7, scope: !6684)
!6688 = !DILocation(line: 741, column: 4, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6690, file: !6508, line: 741, column: 4)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !6508, line: 741, column: 4)
!6691 = distinct !DILexicalBlock(scope: !6692, file: !6508, line: 741, column: 4)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !6508, line: 741, column: 4)
!6693 = distinct !DILexicalBlock(scope: !6686, file: !6508, line: 740, column: 38)
!6694 = !DILocation(line: 742, column: 24, scope: !6693)
!6695 = !DILocation(line: 743, column: 3, scope: !6693)
!6696 = !DILocation(line: 743, column: 20, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6686, file: !6508, line: 743, column: 14)
!6698 = !DILocation(line: 743, column: 25, scope: !6697)
!6699 = !DILocation(line: 743, column: 52, scope: !6697)
!6700 = !DILocation(line: 743, column: 14, scope: !6686)
!6701 = !DILocation(line: 744, column: 13, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6697, file: !6508, line: 743, column: 58)
!6703 = !DILocation(line: 745, column: 3, scope: !6702)
!6704 = !DILocation(line: 745, column: 20, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6697, file: !6508, line: 745, column: 14)
!6706 = !DILocation(line: 745, column: 25, scope: !6705)
!6707 = !DILocation(line: 745, column: 52, scope: !6705)
!6708 = !DILocation(line: 745, column: 14, scope: !6697)
!6709 = !DILocation(line: 746, column: 13, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6705, file: !6508, line: 745, column: 58)
!6711 = !DILocation(line: 747, column: 3, scope: !6710)
!6712 = !DILocation(line: 747, column: 20, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6705, file: !6508, line: 747, column: 14)
!6714 = !DILocation(line: 747, column: 52, scope: !6713)
!6715 = !DILocation(line: 747, column: 14, scope: !6705)
!6716 = !DILocation(line: 748, column: 13, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6713, file: !6508, line: 747, column: 58)
!6718 = !DILocation(line: 754, column: 4, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !6508, line: 754, column: 4)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !6508, line: 754, column: 4)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !6508, line: 754, column: 4)
!6722 = distinct !DILexicalBlock(scope: !6713, file: !6508, line: 753, column: 10)
!6723 = !DILocation(line: 758, column: 3, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6725, file: !6508, line: 758, column: 3)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !6508, line: 758, column: 3)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !6508, line: 758, column: 3)
!6727 = distinct !DILexicalBlock(scope: !6675, file: !6508, line: 757, column: 9)
!6728 = !DILocation(line: 766, column: 2, scope: !6637)
!6729 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6508, file: !6508, line: 229, type: !6613, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6730)
!6730 = !{!6731, !6732, !6733, !6734, !6735, !6736, !6739}
!6731 = !DILocalVariable(name: "esf", arg: 1, scope: !6729, file: !6508, line: 229, type: !2750)
!6732 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6729, file: !6508, line: 229, type: !107)
!6733 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6729, file: !6508, line: 230, type: !6581)
!6734 = !DILocalVariable(name: "reason", scope: !6729, file: !6508, line: 232, type: !152)
!6735 = !DILocalVariable(name: "mmfar", scope: !6729, file: !6508, line: 233, type: !152)
!6736 = !DILocalVariable(name: "temp", scope: !6737, file: !6508, line: 254, type: !152)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !6508, line: 244, column: 48)
!6738 = distinct !DILexicalBlock(scope: !6729, file: !6508, line: 244, column: 6)
!6739 = !DILocalVariable(name: "min_stack_ptr", scope: !6740, file: !6508, line: 309, type: !152)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !6508, line: 308, column: 43)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !6508, line: 308, column: 7)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !6508, line: 289, column: 40)
!6743 = distinct !DILexicalBlock(scope: !6729, file: !6508, line: 288, column: 6)
!6744 = !DILocation(line: 0, scope: !6729)
!6745 = !DILocation(line: 235, column: 2, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6747, file: !6508, line: 235, column: 2)
!6747 = distinct !DILexicalBlock(scope: !6748, file: !6508, line: 235, column: 2)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6508, line: 235, column: 2)
!6749 = distinct !DILexicalBlock(scope: !6729, file: !6508, line: 235, column: 2)
!6750 = !DILocation(line: 237, column: 12, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6729, file: !6508, line: 237, column: 6)
!6752 = !DILocation(line: 237, column: 17, scope: !6751)
!6753 = !DILocation(line: 237, column: 41, scope: !6751)
!6754 = !DILocation(line: 237, column: 6, scope: !6729)
!6755 = !DILocation(line: 238, column: 3, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !6508, line: 238, column: 3)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !6508, line: 238, column: 3)
!6758 = distinct !DILexicalBlock(scope: !6759, file: !6508, line: 238, column: 3)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !6508, line: 238, column: 3)
!6760 = distinct !DILexicalBlock(scope: !6751, file: !6508, line: 237, column: 47)
!6761 = !DILocation(line: 240, column: 2, scope: !6760)
!6762 = !DILocation(line: 241, column: 12, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6729, file: !6508, line: 241, column: 6)
!6764 = !DILocation(line: 241, column: 17, scope: !6763)
!6765 = !DILocation(line: 241, column: 43, scope: !6763)
!6766 = !DILocation(line: 241, column: 6, scope: !6729)
!6767 = !DILocation(line: 242, column: 3, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !6508, line: 242, column: 3)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !6508, line: 242, column: 3)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !6508, line: 242, column: 3)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !6508, line: 242, column: 3)
!6772 = distinct !DILexicalBlock(scope: !6763, file: !6508, line: 241, column: 49)
!6773 = !DILocation(line: 243, column: 2, scope: !6772)
!6774 = !DILocation(line: 244, column: 12, scope: !6738)
!6775 = !DILocation(line: 244, column: 17, scope: !6738)
!6776 = !DILocation(line: 244, column: 42, scope: !6738)
!6777 = !DILocation(line: 244, column: 6, scope: !6729)
!6778 = !DILocation(line: 245, column: 3, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !6508, line: 245, column: 3)
!6780 = distinct !DILexicalBlock(scope: !6781, file: !6508, line: 245, column: 3)
!6781 = distinct !DILexicalBlock(scope: !6782, file: !6508, line: 245, column: 3)
!6782 = distinct !DILexicalBlock(scope: !6737, file: !6508, line: 245, column: 3)
!6783 = !DILocation(line: 254, column: 24, scope: !6737)
!6784 = !DILocation(line: 0, scope: !6737)
!6785 = !DILocation(line: 256, column: 13, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6737, file: !6508, line: 256, column: 7)
!6787 = !DILocation(line: 256, column: 18, scope: !6786)
!6788 = !DILocation(line: 256, column: 44, scope: !6786)
!6789 = !DILocation(line: 256, column: 7, scope: !6737)
!6790 = !DILocation(line: 258, column: 4, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6508, line: 258, column: 4)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6508, line: 258, column: 4)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6508, line: 258, column: 4)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6508, line: 258, column: 4)
!6795 = distinct !DILexicalBlock(scope: !6786, file: !6508, line: 256, column: 50)
!6796 = !DILocation(line: 259, column: 24, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6795, file: !6508, line: 259, column: 8)
!6798 = !DILocation(line: 259, column: 8, scope: !6795)
!6799 = !DILocation(line: 261, column: 15, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6797, file: !6508, line: 259, column: 30)
!6801 = !DILocation(line: 262, column: 4, scope: !6800)
!6802 = !DILocation(line: 265, column: 12, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6729, file: !6508, line: 265, column: 6)
!6804 = !DILocation(line: 265, column: 17, scope: !6803)
!6805 = !DILocation(line: 265, column: 42, scope: !6803)
!6806 = !DILocation(line: 265, column: 6, scope: !6729)
!6807 = !DILocation(line: 266, column: 3, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6508, line: 266, column: 3)
!6809 = distinct !DILexicalBlock(scope: !6810, file: !6508, line: 266, column: 3)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !6508, line: 266, column: 3)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !6508, line: 266, column: 3)
!6812 = distinct !DILexicalBlock(scope: !6803, file: !6508, line: 265, column: 48)
!6813 = !DILocation(line: 267, column: 2, scope: !6812)
!6814 = !DILocation(line: 288, column: 12, scope: !6743)
!6815 = !DILocation(line: 288, column: 17, scope: !6743)
!6816 = !DILocation(line: 288, column: 41, scope: !6743)
!6817 = !DILocation(line: 289, column: 9, scope: !6743)
!6818 = !DILocation(line: 289, column: 14, scope: !6743)
!6819 = !DILocation(line: 288, column: 6, scope: !6729)
!6820 = !DILocation(line: 308, column: 12, scope: !6741)
!6821 = !DILocation(line: 308, column: 17, scope: !6741)
!6822 = !DILocation(line: 308, column: 7, scope: !6742)
!6823 = !DILocation(line: 310, column: 6, scope: !6740)
!6824 = !DILocation(line: 309, column: 29, scope: !6740)
!6825 = !DILocation(line: 0, scope: !6740)
!6826 = !DILocation(line: 312, column: 8, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6740, file: !6508, line: 312, column: 8)
!6828 = !DILocation(line: 312, column: 8, scope: !6740)
!6829 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6830, file: !6223, line: 1099, type: !152)
!6830 = distinct !DISubprogram(name: "__set_PSP", scope: !6223, file: !6223, line: 1099, type: !5911, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6831)
!6831 = !{!6829}
!6832 = !DILocation(line: 0, scope: !6830, inlinedAt: !6833)
!6833 = distinct !DILocation(line: 338, column: 5, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6827, file: !6508, line: 312, column: 23)
!6835 = !DILocation(line: 1101, column: 3, scope: !6830, inlinedAt: !6833)
!6836 = !{i64 2480857}
!6837 = !DILocation(line: 341, column: 4, scope: !6834)
!6838 = !DILocation(line: 342, column: 5, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6840, file: !6508, line: 342, column: 5)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !6508, line: 342, column: 5)
!6841 = distinct !DILexicalBlock(scope: !6827, file: !6508, line: 341, column: 11)
!6842 = !DILocation(line: 342, column: 5, scope: !6840)
!6843 = !DILocation(line: 342, column: 5, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6839, file: !6508, line: 342, column: 5)
!6845 = !DILocation(line: 366, column: 12, scope: !6729)
!6846 = !DILocation(line: 369, column: 15, scope: !6729)
!6847 = !DILocation(line: 371, column: 2, scope: !6729)
!6848 = distinct !DISubprogram(name: "bus_fault", scope: !6508, file: !6508, line: 383, type: !6849, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6851)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{!107, !2750, !107, !6581}
!6851 = !{!6852, !6853, !6854, !6855, !6856}
!6852 = !DILocalVariable(name: "esf", arg: 1, scope: !6848, file: !6508, line: 383, type: !2750)
!6853 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6848, file: !6508, line: 383, type: !107)
!6854 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6848, file: !6508, line: 383, type: !6581)
!6855 = !DILocalVariable(name: "reason", scope: !6848, file: !6508, line: 385, type: !152)
!6856 = !DILocalVariable(name: "bfar", scope: !6857, file: !6508, line: 405, type: !152)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !6508, line: 395, column: 42)
!6858 = distinct !DILexicalBlock(scope: !6848, file: !6508, line: 395, column: 6)
!6859 = !DILocation(line: 0, scope: !6848)
!6860 = !DILocation(line: 387, column: 2, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !6508, line: 387, column: 2)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !6508, line: 387, column: 2)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !6508, line: 387, column: 2)
!6864 = distinct !DILexicalBlock(scope: !6848, file: !6508, line: 387, column: 2)
!6865 = !DILocation(line: 389, column: 11, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6848, file: !6508, line: 389, column: 6)
!6867 = !DILocation(line: 389, column: 16, scope: !6866)
!6868 = !DILocation(line: 389, column: 6, scope: !6848)
!6869 = !DILocation(line: 390, column: 3, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6508, line: 390, column: 3)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6508, line: 390, column: 3)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6508, line: 390, column: 3)
!6873 = distinct !DILexicalBlock(scope: !6874, file: !6508, line: 390, column: 3)
!6874 = distinct !DILexicalBlock(scope: !6866, file: !6508, line: 389, column: 39)
!6875 = !DILocation(line: 391, column: 2, scope: !6874)
!6876 = !DILocation(line: 392, column: 11, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6848, file: !6508, line: 392, column: 6)
!6878 = !DILocation(line: 392, column: 16, scope: !6877)
!6879 = !DILocation(line: 392, column: 6, scope: !6848)
!6880 = !DILocation(line: 393, column: 3, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6508, line: 393, column: 3)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !6508, line: 393, column: 3)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !6508, line: 393, column: 3)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !6508, line: 393, column: 3)
!6885 = distinct !DILexicalBlock(scope: !6877, file: !6508, line: 392, column: 41)
!6886 = !DILocation(line: 394, column: 2, scope: !6885)
!6887 = !DILocation(line: 395, column: 11, scope: !6858)
!6888 = !DILocation(line: 395, column: 16, scope: !6858)
!6889 = !DILocation(line: 395, column: 6, scope: !6848)
!6890 = !DILocation(line: 396, column: 3, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !6508, line: 396, column: 3)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !6508, line: 396, column: 3)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !6508, line: 396, column: 3)
!6894 = distinct !DILexicalBlock(scope: !6857, file: !6508, line: 396, column: 3)
!6895 = !DILocation(line: 405, column: 3, scope: !6857)
!6896 = !DILocation(line: 0, scope: !6857)
!6897 = !DILocation(line: 407, column: 13, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6857, file: !6508, line: 407, column: 7)
!6899 = !DILocation(line: 407, column: 18, scope: !6898)
!6900 = !DILocation(line: 407, column: 44, scope: !6898)
!6901 = !DILocation(line: 407, column: 7, scope: !6857)
!6902 = !DILocation(line: 408, column: 4, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !6508, line: 408, column: 4)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6508, line: 408, column: 4)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6508, line: 408, column: 4)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6508, line: 408, column: 4)
!6907 = distinct !DILexicalBlock(scope: !6898, file: !6508, line: 407, column: 50)
!6908 = !DILocation(line: 409, column: 24, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6907, file: !6508, line: 409, column: 8)
!6910 = !DILocation(line: 409, column: 8, scope: !6907)
!6911 = !DILocation(line: 411, column: 15, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6909, file: !6508, line: 409, column: 30)
!6913 = !DILocation(line: 412, column: 4, scope: !6912)
!6914 = !DILocation(line: 415, column: 11, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6848, file: !6508, line: 415, column: 6)
!6916 = !DILocation(line: 415, column: 16, scope: !6915)
!6917 = !DILocation(line: 415, column: 6, scope: !6848)
!6918 = !DILocation(line: 416, column: 3, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !6508, line: 416, column: 3)
!6920 = distinct !DILexicalBlock(scope: !6921, file: !6508, line: 416, column: 3)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !6508, line: 416, column: 3)
!6922 = distinct !DILexicalBlock(scope: !6923, file: !6508, line: 416, column: 3)
!6923 = distinct !DILexicalBlock(scope: !6915, file: !6508, line: 415, column: 44)
!6924 = !DILocation(line: 417, column: 2, scope: !6923)
!6925 = !DILocation(line: 418, column: 12, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6848, file: !6508, line: 418, column: 6)
!6927 = !DILocation(line: 418, column: 17, scope: !6926)
!6928 = !DILocation(line: 418, column: 41, scope: !6926)
!6929 = !DILocation(line: 418, column: 6, scope: !6848)
!6930 = !DILocation(line: 419, column: 3, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6932, file: !6508, line: 419, column: 3)
!6932 = distinct !DILexicalBlock(scope: !6933, file: !6508, line: 419, column: 3)
!6933 = distinct !DILexicalBlock(scope: !6934, file: !6508, line: 419, column: 3)
!6934 = distinct !DILexicalBlock(scope: !6935, file: !6508, line: 419, column: 3)
!6935 = distinct !DILexicalBlock(scope: !6926, file: !6508, line: 418, column: 47)
!6936 = !DILocation(line: 421, column: 2, scope: !6935)
!6937 = !DILocation(line: 524, column: 12, scope: !6848)
!6938 = !DILocation(line: 526, column: 15, scope: !6848)
!6939 = !DILocation(line: 528, column: 2, scope: !6848)
!6940 = distinct !DISubprogram(name: "usage_fault", scope: !6508, file: !6508, line: 539, type: !6941, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !6945)
!6941 = !DISubroutineType(types: !6942)
!6942 = !{!152, !6943}
!6943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6944, size: 32)
!6944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2751)
!6945 = !{!6946, !6947}
!6946 = !DILocalVariable(name: "esf", arg: 1, scope: !6940, file: !6508, line: 539, type: !6943)
!6947 = !DILocalVariable(name: "reason", scope: !6940, file: !6508, line: 541, type: !152)
!6948 = !DILocation(line: 0, scope: !6940)
!6949 = !DILocation(line: 543, column: 2, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !6508, line: 543, column: 2)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !6508, line: 543, column: 2)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !6508, line: 543, column: 2)
!6953 = distinct !DILexicalBlock(scope: !6940, file: !6508, line: 543, column: 2)
!6954 = !DILocation(line: 546, column: 12, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6940, file: !6508, line: 546, column: 6)
!6956 = !DILocation(line: 546, column: 17, scope: !6955)
!6957 = !DILocation(line: 546, column: 43, scope: !6955)
!6958 = !DILocation(line: 546, column: 6, scope: !6940)
!6959 = !DILocation(line: 547, column: 3, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6961, file: !6508, line: 547, column: 3)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6508, line: 547, column: 3)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !6508, line: 547, column: 3)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !6508, line: 547, column: 3)
!6964 = distinct !DILexicalBlock(scope: !6955, file: !6508, line: 546, column: 49)
!6965 = !DILocation(line: 548, column: 2, scope: !6964)
!6966 = !DILocation(line: 549, column: 12, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6940, file: !6508, line: 549, column: 6)
!6968 = !DILocation(line: 549, column: 17, scope: !6967)
!6969 = !DILocation(line: 549, column: 43, scope: !6967)
!6970 = !DILocation(line: 549, column: 6, scope: !6940)
!6971 = !DILocation(line: 550, column: 3, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6508, line: 550, column: 3)
!6973 = distinct !DILexicalBlock(scope: !6974, file: !6508, line: 550, column: 3)
!6974 = distinct !DILexicalBlock(scope: !6975, file: !6508, line: 550, column: 3)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !6508, line: 550, column: 3)
!6976 = distinct !DILexicalBlock(scope: !6967, file: !6508, line: 549, column: 49)
!6977 = !DILocation(line: 551, column: 2, scope: !6976)
!6978 = !DILocation(line: 567, column: 12, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6940, file: !6508, line: 567, column: 6)
!6980 = !DILocation(line: 567, column: 17, scope: !6979)
!6981 = !DILocation(line: 567, column: 38, scope: !6979)
!6982 = !DILocation(line: 567, column: 6, scope: !6940)
!6983 = !DILocation(line: 568, column: 3, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !6508, line: 568, column: 3)
!6985 = distinct !DILexicalBlock(scope: !6986, file: !6508, line: 568, column: 3)
!6986 = distinct !DILexicalBlock(scope: !6987, file: !6508, line: 568, column: 3)
!6987 = distinct !DILexicalBlock(scope: !6988, file: !6508, line: 568, column: 3)
!6988 = distinct !DILexicalBlock(scope: !6979, file: !6508, line: 567, column: 44)
!6989 = !DILocation(line: 569, column: 2, scope: !6988)
!6990 = !DILocation(line: 570, column: 12, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6940, file: !6508, line: 570, column: 6)
!6992 = !DILocation(line: 570, column: 17, scope: !6991)
!6993 = !DILocation(line: 570, column: 39, scope: !6991)
!6994 = !DILocation(line: 570, column: 6, scope: !6940)
!6995 = !DILocation(line: 571, column: 3, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !6508, line: 571, column: 3)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !6508, line: 571, column: 3)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !6508, line: 571, column: 3)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !6508, line: 571, column: 3)
!7000 = distinct !DILexicalBlock(scope: !6991, file: !6508, line: 570, column: 45)
!7001 = !DILocation(line: 572, column: 2, scope: !7000)
!7002 = !DILocation(line: 573, column: 12, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6940, file: !6508, line: 573, column: 6)
!7004 = !DILocation(line: 573, column: 17, scope: !7003)
!7005 = !DILocation(line: 573, column: 42, scope: !7003)
!7006 = !DILocation(line: 573, column: 6, scope: !6940)
!7007 = !DILocation(line: 574, column: 3, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7009, file: !6508, line: 574, column: 3)
!7009 = distinct !DILexicalBlock(scope: !7010, file: !6508, line: 574, column: 3)
!7010 = distinct !DILexicalBlock(scope: !7011, file: !6508, line: 574, column: 3)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !6508, line: 574, column: 3)
!7012 = distinct !DILexicalBlock(scope: !7003, file: !6508, line: 573, column: 48)
!7013 = !DILocation(line: 575, column: 2, scope: !7012)
!7014 = !DILocation(line: 576, column: 12, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6940, file: !6508, line: 576, column: 6)
!7016 = !DILocation(line: 576, column: 17, scope: !7015)
!7017 = !DILocation(line: 576, column: 44, scope: !7015)
!7018 = !DILocation(line: 576, column: 6, scope: !6940)
!7019 = !DILocation(line: 577, column: 3, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !6508, line: 577, column: 3)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !6508, line: 577, column: 3)
!7022 = distinct !DILexicalBlock(scope: !7023, file: !6508, line: 577, column: 3)
!7023 = distinct !DILexicalBlock(scope: !7024, file: !6508, line: 577, column: 3)
!7024 = distinct !DILexicalBlock(scope: !7015, file: !6508, line: 576, column: 50)
!7025 = !DILocation(line: 578, column: 2, scope: !7024)
!7026 = !DILocation(line: 581, column: 12, scope: !6940)
!7027 = !DILocation(line: 583, column: 2, scope: !6940)
!7028 = distinct !DISubprogram(name: "debug_monitor", scope: !6508, file: !6508, line: 632, type: !7029, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7031)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{null, !2750, !6581}
!7031 = !{!7032, !7033}
!7032 = !DILocalVariable(name: "esf", arg: 1, scope: !7028, file: !6508, line: 632, type: !2750)
!7033 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7028, file: !6508, line: 632, type: !6581)
!7034 = !DILocation(line: 0, scope: !7028)
!7035 = !DILocation(line: 634, column: 15, scope: !7028)
!7036 = !DILocation(line: 636, column: 2, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !6508, line: 636, column: 2)
!7038 = distinct !DILexicalBlock(scope: !7039, file: !6508, line: 636, column: 2)
!7039 = distinct !DILexicalBlock(scope: !7040, file: !6508, line: 636, column: 2)
!7040 = distinct !DILexicalBlock(scope: !7028, file: !6508, line: 636, column: 2)
!7041 = !DILocation(line: 652, column: 1, scope: !7028)
!7042 = distinct !DISubprogram(name: "reserved_exception", scope: !6508, file: !6508, line: 776, type: !7043, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7045)
!7043 = !DISubroutineType(types: !7044)
!7044 = !{null, !6943, !107}
!7045 = !{!7046, !7047}
!7046 = !DILocalVariable(name: "esf", arg: 1, scope: !7042, file: !6508, line: 776, type: !6943)
!7047 = !DILocalVariable(name: "fault", arg: 2, scope: !7042, file: !6508, line: 776, type: !107)
!7048 = !DILocation(line: 0, scope: !7042)
!7049 = !DILocation(line: 780, column: 2, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !6508, line: 780, column: 2)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !6508, line: 780, column: 2)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !6508, line: 780, column: 2)
!7053 = distinct !DILexicalBlock(scope: !7042, file: !6508, line: 780, column: 2)
!7054 = !DILocation(line: 783, column: 1, scope: !7042)
!7055 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6508, file: !6508, line: 658, type: !7056, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !7058)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{!145, !2750}
!7058 = !{!7059, !7060, !7061}
!7059 = !DILocalVariable(name: "esf", arg: 1, scope: !7055, file: !6508, line: 658, type: !2750)
!7060 = !DILocalVariable(name: "ret_addr", scope: !7055, file: !6508, line: 660, type: !2793)
!7061 = !DILocalVariable(name: "fault_insn", scope: !7055, file: !6508, line: 686, type: !197)
!7062 = !DILocation(line: 0, scope: !7055)
!7063 = !DILocation(line: 660, column: 46, scope: !7055)
!7064 = !DILocation(line: 660, column: 23, scope: !7055)
!7065 = !DILocation(line: 682, column: 11, scope: !7055)
!7066 = !DILocation(line: 271, column: 3, scope: !7067, inlinedAt: !7068)
!7067 = distinct !DISubprogram(name: "__DSB", scope: !6223, file: !6223, line: 269, type: !3055, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !2175)
!7068 = distinct !DILocation(line: 683, column: 2, scope: !7055)
!7069 = !{i64 2456992}
!7070 = !DILocation(line: 260, column: 3, scope: !7071, inlinedAt: !7072)
!7071 = distinct !DISubprogram(name: "__ISB", scope: !6223, file: !6223, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !2175)
!7072 = distinct !DILocation(line: 684, column: 2, scope: !7055)
!7073 = !{i64 2456709}
!7074 = !DILocation(line: 686, column: 35, scope: !7055)
!7075 = !DILocation(line: 686, column: 24, scope: !7055)
!7076 = !DILocation(line: 688, column: 11, scope: !7055)
!7077 = !DILocation(line: 271, column: 3, scope: !7067, inlinedAt: !7078)
!7078 = distinct !DILocation(line: 689, column: 2, scope: !7055)
!7079 = !DILocation(line: 260, column: 3, scope: !7071, inlinedAt: !7080)
!7080 = distinct !DILocation(line: 690, column: 2, scope: !7055)
!7081 = !DILocation(line: 693, column: 45, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7055, file: !6508, line: 693, column: 6)
!7083 = !DILocation(line: 699, column: 1, scope: !7055)
!7084 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6508, file: !6508, line: 1107, type: !3055, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2722, retainedNodes: !2175)
!7085 = !DILocation(line: 1111, column: 11, scope: !7084)
!7086 = !DILocation(line: 1136, column: 1, scope: !7084)
!7087 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7088, file: !7088, line: 26, type: !3055, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !7089)
!7088 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7089 = !{!7090}
!7090 = !DILocalVariable(name: "irq", scope: !7087, file: !7088, line: 28, type: !107)
!7091 = !DILocation(line: 0, scope: !7087)
!7092 = !DILocation(line: 30, column: 2, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7087, file: !7088, line: 30, column: 2)
!7094 = !DILocation(line: 31, column: 3, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !7088, line: 30, column: 39)
!7096 = distinct !DILexicalBlock(scope: !7093, file: !7088, line: 30, column: 2)
!7097 = !DILocation(line: 30, column: 35, scope: !7096)
!7098 = !DILocation(line: 30, column: 13, scope: !7096)
!7099 = distinct !{!7099, !7092, !7100}
!7100 = !DILocation(line: 32, column: 2, scope: !7093)
!7101 = !DILocation(line: 33, column: 1, scope: !7087)
!7102 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !476, file: !476, line: 1638, type: !6263, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2794, retainedNodes: !7103)
!7103 = !{!7104, !7105}
!7104 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7102, file: !476, line: 1638, type: !1002)
!7105 = !DILocalVariable(name: "priority", arg: 2, scope: !7102, file: !476, line: 1638, type: !152)
!7106 = !DILocation(line: 0, scope: !7102)
!7107 = !DILocation(line: 1640, column: 7, scope: !7102)
!7108 = !DILocation(line: 0, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7102, file: !476, line: 1640, column: 7)
!7110 = !DILocation(line: 1648, column: 1, scope: !7102)
!7111 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7112, file: !7112, line: 27, type: !7113, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7219)
!7112 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7113 = !DISubroutineType(types: !7114)
!7114 = !{null, !7115}
!7115 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !7116)
!7116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7117, size: 32)
!7117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !7118)
!7118 = !{!7119, !7177, !7189, !7190, !7191, !7192, !7193, !7199, !7214}
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7117, file: !322, line: 247, baseType: !7120, size: 384)
!7120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !7121)
!7121 = !{!7122, !7146, !7153, !7154, !7155, !7164, !7165, !7166}
!7122 = !DIDerivedType(tag: DW_TAG_member, scope: !7120, file: !322, line: 60, baseType: !7123, size: 64)
!7123 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7120, file: !322, line: 60, size: 64, elements: !7124)
!7124 = !{!7125, !7140}
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7123, file: !322, line: 61, baseType: !7126, size: 64)
!7126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !7127)
!7127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !7128)
!7128 = !{!7129, !7135}
!7129 = !DIDerivedType(tag: DW_TAG_member, scope: !7127, file: !332, line: 38, baseType: !7130, size: 32)
!7130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7127, file: !332, line: 38, size: 32, elements: !7131)
!7131 = !{!7132, !7134}
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7130, file: !332, line: 39, baseType: !7133, size: 32)
!7133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7127, size: 32)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7130, file: !332, line: 40, baseType: !7133, size: 32)
!7135 = !DIDerivedType(tag: DW_TAG_member, scope: !7127, file: !332, line: 42, baseType: !7136, size: 32, offset: 32)
!7136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7127, file: !332, line: 42, size: 32, elements: !7137)
!7137 = !{!7138, !7139}
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7136, file: !332, line: 43, baseType: !7133, size: 32)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7136, file: !332, line: 44, baseType: !7133, size: 32)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7123, file: !322, line: 62, baseType: !7141, size: 64)
!7141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !7142)
!7142 = !{!7143}
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7141, file: !348, line: 50, baseType: !7144, size: 64)
!7144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7145, size: 64, elements: !353)
!7145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 32)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7120, file: !322, line: 68, baseType: !7147, size: 32, offset: 64)
!7147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7148, size: 32)
!7148 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !7149)
!7149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !7150)
!7150 = !{!7151}
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7149, file: !358, line: 232, baseType: !7152, size: 64)
!7152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !7127)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7120, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7120, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!7155 = !DIDerivedType(tag: DW_TAG_member, scope: !7120, file: !322, line: 90, baseType: !7156, size: 16, offset: 112)
!7156 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7120, file: !322, line: 90, size: 16, elements: !7157)
!7157 = !{!7158, !7163}
!7158 = !DIDerivedType(tag: DW_TAG_member, scope: !7156, file: !322, line: 91, baseType: !7159, size: 16)
!7159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7156, file: !322, line: 91, size: 16, elements: !7160)
!7160 = !{!7161, !7162}
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7159, file: !322, line: 96, baseType: !372, size: 8)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7159, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7156, file: !322, line: 100, baseType: !197, size: 16)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7120, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7120, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7120, file: !322, line: 131, baseType: !7167, size: 192, offset: 192)
!7167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !7168)
!7168 = !{!7169, !7170, !7176}
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7167, file: !358, line: 245, baseType: !7126, size: 64)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7167, file: !358, line: 246, baseType: !7171, size: 32, offset: 64)
!7171 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !7172)
!7172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7173, size: 32)
!7173 = !DISubroutineType(types: !7174)
!7174 = !{null, !7175}
!7175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7167, size: 32)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7167, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7117, file: !322, line: 250, baseType: !7178, size: 288, offset: 384)
!7178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !7179)
!7179 = !{!7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188}
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7178, file: !392, line: 26, baseType: !152, size: 32)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7178, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7178, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7178, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7178, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7178, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7178, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7178, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7178, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7117, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7117, file: !322, line: 256, baseType: !7148, size: 64, offset: 704)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7117, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7117, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7117, file: !322, line: 300, baseType: !7194, size: 96, offset: 1056)
!7194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !7195)
!7195 = !{!7196, !7197, !7198}
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7194, file: !322, line: 153, baseType: !22, size: 32)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7194, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7194, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7117, file: !322, line: 325, baseType: !7200, size: 32, offset: 1152)
!7200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7201, size: 32)
!7201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !7202)
!7202 = !{!7203, !7209, !7210}
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7201, file: !419, line: 5074, baseType: !7204, size: 96)
!7204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !7205)
!7205 = !{!7206, !7207, !7208}
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7204, file: !423, line: 57, baseType: !426, size: 32)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7204, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7204, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7201, file: !419, line: 5075, baseType: !7148, size: 64, offset: 96)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7201, file: !419, line: 5076, baseType: !7211, size: 32, offset: 160)
!7211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !7212)
!7212 = !{!7213}
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7211, file: !433, line: 52, baseType: !22, size: 32)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7117, file: !322, line: 343, baseType: !7215, size: 64, offset: 1184)
!7215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !7216)
!7216 = !{!7217, !7218}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7215, file: !392, line: 63, baseType: !152, size: 32)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7215, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!7219 = !{!7220}
!7220 = !DILocalVariable(name: "thread", arg: 1, scope: !7111, file: !7112, line: 27, type: !7115)
!7221 = !DILocation(line: 0, scope: !7111)
!7222 = !DILocation(line: 29, column: 6, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7111, file: !7112, line: 29, column: 6)
!7224 = !DILocation(line: 29, column: 15, scope: !7223)
!7225 = !DILocation(line: 29, column: 6, scope: !7111)
!7226 = !DILocation(line: 1031, column: 3, scope: !7227, inlinedAt: !7232)
!7227 = distinct !DISubprogram(name: "__get_IPSR", scope: !6223, file: !6223, line: 1027, type: !7228, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !7230)
!7228 = !DISubroutineType(types: !7229)
!7229 = !{!152}
!7230 = !{!7231}
!7231 = !DILocalVariable(name: "result", scope: !7227, file: !6223, line: 1029, type: !152)
!7232 = distinct !DILocation(line: 48, column: 10, scope: !7233, inlinedAt: !7237)
!7233 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7234, file: !7234, line: 46, type: !7235, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2839, retainedNodes: !2175)
!7234 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7235 = !DISubroutineType(types: !7236)
!7236 = !{!145}
!7237 = distinct !DILocation(line: 30, column: 7, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !7112, line: 30, column: 7)
!7239 = distinct !DILexicalBlock(scope: !7223, file: !7112, line: 29, column: 26)
!7240 = !{i64 2445840}
!7241 = !DILocation(line: 0, scope: !7227, inlinedAt: !7232)
!7242 = !DILocation(line: 48, column: 9, scope: !7233, inlinedAt: !7237)
!7243 = !DILocation(line: 30, column: 7, scope: !7239)
!7244 = !DILocation(line: 42, column: 14, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7238, file: !7112, line: 30, column: 25)
!7246 = !DILocation(line: 48, column: 15, scope: !7245)
!7247 = !DILocation(line: 49, column: 3, scope: !7245)
!7248 = !DILocation(line: 52, column: 2, scope: !7111)
!7249 = !DILocation(line: 53, column: 1, scope: !7111)
!7250 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !317, file: !317, line: 127, type: !3055, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !310, retainedNodes: !2175)
!7251 = !DILocation(line: 134, column: 2, scope: !7250)
!7252 = !DILocation(line: 156, column: 1, scope: !7250)
!7253 = !DILocation(line: 0, scope: !316)
!7254 = !DILocation(line: 289, column: 36, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !316, file: !317, line: 285, column: 2)
!7256 = !DILocation(line: 289, column: 42, scope: !7255)
!7257 = !DILocation(line: 300, column: 36, scope: !316)
!7258 = !DILocation(line: 301, column: 35, scope: !316)
!7259 = !DILocation(line: 302, column: 37, scope: !316)
!7260 = !DILocation(line: 311, column: 2, scope: !316)
!7261 = !DILocation(line: 316, column: 1, scope: !316)
!7262 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !504, file: !504, line: 180, type: !3055, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7263 = !DILocation(line: 188, column: 12, scope: !7262)
!7264 = !DILocation(line: 271, column: 3, scope: !7265, inlinedAt: !7266)
!7265 = distinct !DISubprogram(name: "__DSB", scope: !6223, file: !6223, line: 269, type: !3055, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7266 = distinct !DILocation(line: 192, column: 2, scope: !7262)
!7267 = !{i64 2604667}
!7268 = !DILocation(line: 260, column: 3, scope: !7269, inlinedAt: !7270)
!7269 = distinct !DISubprogram(name: "__ISB", scope: !6223, file: !6223, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7270 = distinct !DILocation(line: 193, column: 2, scope: !7262)
!7271 = !{i64 2604384}
!7272 = !DILocation(line: 194, column: 1, scope: !7262)
!7273 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !504, file: !504, line: 199, type: !3055, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7274 = !DILocation(line: 282, column: 3, scope: !7275, inlinedAt: !7276)
!7275 = distinct !DISubprogram(name: "__DMB", scope: !6223, file: !6223, line: 280, type: !3055, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !2175)
!7276 = distinct !DILocation(line: 202, column: 2, scope: !7273)
!7277 = !{i64 2604943}
!7278 = !DILocation(line: 205, column: 12, scope: !7273)
!7279 = !DILocation(line: 206, column: 1, scope: !7273)
!7280 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !504, file: !504, line: 275, type: !7281, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7294)
!7281 = !DISubroutineType(types: !7282)
!7282 = !{null, !7283, !1956, !6475, !6475}
!7283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7284, size: 32)
!7284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7285)
!7285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !448, line: 52, size: 96, elements: !7286)
!7286 = !{!7287, !7288, !7289}
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7285, file: !448, line: 53, baseType: !22, size: 32)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7285, file: !448, line: 54, baseType: !185, size: 32, offset: 32)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7285, file: !448, line: 55, baseType: !7290, size: 32, offset: 64)
!7290 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !454, line: 151, baseType: !7291)
!7291 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !454, line: 149, size: 32, elements: !7292)
!7292 = !{!7293}
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7291, file: !454, line: 150, baseType: !152, size: 32)
!7294 = !{!7295, !7296, !7297, !7298}
!7295 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7280, file: !504, line: 276, type: !7283)
!7296 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7280, file: !504, line: 276, type: !1956)
!7297 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7280, file: !504, line: 277, type: !6475)
!7298 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7280, file: !504, line: 277, type: !6475)
!7299 = !DILocation(line: 0, scope: !7280)
!7300 = !DILocation(line: 279, column: 6, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7280, file: !504, line: 279, column: 6)
!7302 = !DILocation(line: 280, column: 57, scope: !7301)
!7303 = !DILocation(line: 279, column: 6, scope: !7280)
!7304 = !DILocation(line: 282, column: 3, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !504, line: 282, column: 3)
!7306 = distinct !DILexicalBlock(scope: !7307, file: !504, line: 282, column: 3)
!7307 = distinct !DILexicalBlock(scope: !7308, file: !504, line: 282, column: 3)
!7308 = distinct !DILexicalBlock(scope: !7301, file: !504, line: 280, column: 69)
!7309 = !DILocation(line: 285, column: 1, scope: !7280)
!7310 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7311, file: !7311, line: 220, type: !7312, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7314)
!7311 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7312 = !DISubroutineType(types: !7313)
!7313 = !{!107, !7283, !1956, !6475, !6475}
!7314 = !{!7315, !7316, !7317, !7318, !7319}
!7315 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7310, file: !7311, line: 221, type: !7283)
!7316 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7310, file: !7311, line: 221, type: !1956)
!7317 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7310, file: !7311, line: 222, type: !6475)
!7318 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7310, file: !7311, line: 223, type: !6475)
!7319 = !DILocalVariable(name: "mpu_reg_index", scope: !7310, file: !7311, line: 225, type: !107)
!7320 = !DILocation(line: 0, scope: !7310)
!7321 = !DILocation(line: 225, column: 22, scope: !7310)
!7322 = !DILocation(line: 233, column: 18, scope: !7310)
!7323 = !DILocation(line: 236, column: 23, scope: !7310)
!7324 = !DILocation(line: 236, column: 21, scope: !7310)
!7325 = !DILocation(line: 238, column: 2, scope: !7310)
!7326 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !504, file: !504, line: 105, type: !7327, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7329)
!7327 = !DISubroutineType(types: !7328)
!7328 = !{!107, !7283, !195, !195, !145}
!7329 = !{!7330, !7331, !7332, !7333, !7334, !7335}
!7330 = !DILocalVariable(name: "regions", arg: 1, scope: !7326, file: !504, line: 106, type: !7283)
!7331 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7326, file: !504, line: 106, type: !195)
!7332 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7326, file: !504, line: 106, type: !195)
!7333 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7326, file: !504, line: 107, type: !145)
!7334 = !DILocalVariable(name: "i", scope: !7326, file: !504, line: 109, type: !107)
!7335 = !DILocalVariable(name: "reg_index", scope: !7326, file: !504, line: 110, type: !107)
!7336 = !DILocation(line: 0, scope: !7326)
!7337 = !DILocation(line: 110, column: 18, scope: !7326)
!7338 = !DILocation(line: 112, column: 16, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !504, line: 112, column: 2)
!7340 = distinct !DILexicalBlock(scope: !7326, file: !504, line: 112, column: 2)
!7341 = !DILocation(line: 112, column: 2, scope: !7340)
!7342 = !DILocation(line: 113, column: 7, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !504, line: 113, column: 7)
!7344 = distinct !DILexicalBlock(scope: !7339, file: !504, line: 112, column: 36)
!7345 = !DILocation(line: 113, column: 18, scope: !7343)
!7346 = !DILocation(line: 113, column: 23, scope: !7343)
!7347 = !DILocation(line: 113, column: 7, scope: !7344)
!7348 = !DILocation(line: 118, column: 23, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7344, file: !504, line: 118, column: 7)
!7350 = !DILocation(line: 119, column: 7, scope: !7349)
!7351 = !DILocation(line: 118, column: 7, scope: !7344)
!7352 = !DILocation(line: 120, column: 4, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7354, file: !504, line: 120, column: 4)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !504, line: 120, column: 4)
!7355 = distinct !DILexicalBlock(scope: !7356, file: !504, line: 120, column: 4)
!7356 = distinct !DILexicalBlock(scope: !7357, file: !504, line: 120, column: 4)
!7357 = distinct !DILexicalBlock(scope: !7349, file: !504, line: 119, column: 45)
!7358 = !DILocation(line: 121, column: 4, scope: !7357)
!7359 = !DILocation(line: 124, column: 36, scope: !7344)
!7360 = !DILocation(line: 124, column: 15, scope: !7344)
!7361 = !DILocation(line: 126, column: 17, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7344, file: !504, line: 126, column: 7)
!7363 = !DILocation(line: 126, column: 7, scope: !7344)
!7364 = !DILocation(line: 131, column: 12, scope: !7344)
!7365 = !DILocation(line: 132, column: 2, scope: !7344)
!7366 = !DILocation(line: 112, column: 32, scope: !7339)
!7367 = distinct !{!7367, !7341, !7368}
!7368 = !DILocation(line: 132, column: 2, scope: !7340)
!7369 = !DILocation(line: 135, column: 1, scope: !7326)
!7370 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7311, file: !7311, line: 63, type: !7371, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7373)
!7371 = !DISubroutineType(types: !7372)
!7372 = !{!107, !7283}
!7373 = !{!7374, !7375}
!7374 = !DILocalVariable(name: "part", arg: 1, scope: !7370, file: !7311, line: 63, type: !7283)
!7375 = !DILocalVariable(name: "partition_is_valid", scope: !7370, file: !7311, line: 70, type: !107)
!7376 = !DILocation(line: 0, scope: !7370)
!7377 = !DILocation(line: 71, column: 11, scope: !7370)
!7378 = !DILocation(line: 71, column: 37, scope: !7370)
!7379 = !{i32 0, i32 33}
!7380 = !DILocation(line: 72, column: 3, scope: !7370)
!7381 = !DILocation(line: 71, column: 30, scope: !7370)
!7382 = !DILocation(line: 75, column: 11, scope: !7370)
!7383 = !DILocation(line: 75, column: 17, scope: !7370)
!7384 = !DILocation(line: 75, column: 38, scope: !7370)
!7385 = !DILocation(line: 77, column: 2, scope: !7370)
!7386 = distinct !DISubprogram(name: "mpu_configure_region", scope: !504, file: !504, line: 79, type: !7387, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7389)
!7387 = !DISubroutineType(types: !7388)
!7388 = !{!107, !1956, !7283}
!7389 = !{!7390, !7391, !7392}
!7390 = !DILocalVariable(name: "index", arg: 1, scope: !7386, file: !504, line: 79, type: !1956)
!7391 = !DILocalVariable(name: "new_region", arg: 2, scope: !7386, file: !504, line: 80, type: !7283)
!7392 = !DILocalVariable(name: "region_conf", scope: !7386, file: !504, line: 82, type: !493)
!7393 = !DILocation(line: 0, scope: !7386)
!7394 = !DILocation(line: 82, column: 2, scope: !7386)
!7395 = !DILocation(line: 82, column: 24, scope: !7386)
!7396 = !DILocation(line: 87, column: 33, scope: !7386)
!7397 = !DILocation(line: 87, column: 14, scope: !7386)
!7398 = !DILocation(line: 87, column: 19, scope: !7386)
!7399 = !DILocation(line: 91, column: 55, scope: !7386)
!7400 = !DILocation(line: 92, column: 16, scope: !7386)
!7401 = !DILocation(line: 92, column: 53, scope: !7386)
!7402 = !DILocation(line: 91, column: 2, scope: !7386)
!7403 = !DILocation(line: 95, column: 9, scope: !7386)
!7404 = !DILocation(line: 97, column: 1, scope: !7386)
!7405 = !DILocation(line: 95, column: 2, scope: !7386)
!7406 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7311, file: !7311, line: 113, type: !7407, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7412)
!7407 = !DISubroutineType(types: !7408)
!7408 = !{null, !7409, !7410, !152, !152}
!7409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 32)
!7410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7411, size: 32)
!7411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7290)
!7412 = !{!7413, !7414, !7415, !7416}
!7413 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7406, file: !7311, line: 114, type: !7409)
!7414 = !DILocalVariable(name: "attr", arg: 2, scope: !7406, file: !7311, line: 115, type: !7410)
!7415 = !DILocalVariable(name: "base", arg: 3, scope: !7406, file: !7311, line: 115, type: !152)
!7416 = !DILocalVariable(name: "size", arg: 4, scope: !7406, file: !7311, line: 115, type: !152)
!7417 = !DILocation(line: 0, scope: !7406)
!7418 = !DILocation(line: 127, column: 23, scope: !7406)
!7419 = !DILocation(line: 127, column: 35, scope: !7406)
!7420 = !DILocation(line: 127, column: 33, scope: !7406)
!7421 = !DILocation(line: 127, column: 10, scope: !7406)
!7422 = !DILocation(line: 127, column: 15, scope: !7406)
!7423 = !DILocation(line: 129, column: 1, scope: !7406)
!7424 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !504, file: !504, line: 57, type: !7425, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7427)
!7425 = !DISubroutineType(types: !7426)
!7426 = !{!107, !1956, !491}
!7427 = !{!7428, !7429}
!7428 = !DILocalVariable(name: "index", arg: 1, scope: !7424, file: !504, line: 57, type: !1956)
!7429 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7424, file: !504, line: 58, type: !491)
!7430 = !DILocation(line: 0, scope: !7424)
!7431 = !DILocation(line: 61, column: 6, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7424, file: !504, line: 61, column: 6)
!7433 = !DILocation(line: 61, column: 12, scope: !7432)
!7434 = !DILocation(line: 61, column: 6, scope: !7424)
!7435 = !DILocation(line: 64, column: 3, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !504, line: 64, column: 3)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !504, line: 64, column: 3)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !504, line: 64, column: 3)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !504, line: 64, column: 3)
!7440 = distinct !DILexicalBlock(scope: !7432, file: !504, line: 61, column: 40)
!7441 = !DILocation(line: 65, column: 3, scope: !7440)
!7442 = !DILocation(line: 71, column: 2, scope: !7424)
!7443 = !DILocation(line: 73, column: 2, scope: !7424)
!7444 = !DILocation(line: 74, column: 1, scope: !7424)
!7445 = distinct !DISubprogram(name: "region_init", scope: !7311, file: !7311, line: 29, type: !7446, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7448)
!7446 = !DISubroutineType(types: !7447)
!7447 = !{null, !6475, !491}
!7448 = !{!7449, !7450}
!7449 = !DILocalVariable(name: "index", arg: 1, scope: !7445, file: !7311, line: 29, type: !6475)
!7450 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7445, file: !7311, line: 30, type: !491)
!7451 = !DILocation(line: 0, scope: !7445)
!7452 = !DILocation(line: 33, column: 2, scope: !7445)
!7453 = !DILocation(line: 47, column: 28, scope: !7445)
!7454 = !DILocation(line: 47, column: 33, scope: !7445)
!7455 = !DILocation(line: 48, column: 26, scope: !7445)
!7456 = !DILocation(line: 47, column: 12, scope: !7445)
!7457 = !DILocation(line: 49, column: 32, scope: !7445)
!7458 = !DILocation(line: 49, column: 37, scope: !7445)
!7459 = !DILocation(line: 49, column: 12, scope: !7445)
!7460 = !DILocation(line: 53, column: 1, scope: !7445)
!7461 = distinct !DISubprogram(name: "set_region_number", scope: !7462, file: !7462, line: 32, type: !5911, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7463)
!7462 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7463 = !{!7464}
!7464 = !DILocalVariable(name: "index", arg: 1, scope: !7461, file: !7462, line: 32, type: !152)
!7465 = !DILocation(line: 0, scope: !7461)
!7466 = !DILocation(line: 34, column: 11, scope: !7461)
!7467 = !DILocation(line: 35, column: 1, scope: !7461)
!7468 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7311, file: !7311, line: 88, type: !7469, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7471)
!7469 = !DISubroutineType(types: !7470)
!7470 = !{!152, !152}
!7471 = !{!7472}
!7472 = !DILocalVariable(name: "size", arg: 1, scope: !7468, file: !7311, line: 88, type: !152)
!7473 = !DILocation(line: 0, scope: !7468)
!7474 = !DILocation(line: 91, column: 11, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7468, file: !7311, line: 91, column: 6)
!7476 = !DILocation(line: 91, column: 6, scope: !7468)
!7477 = !DILocation(line: 100, column: 11, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7468, file: !7311, line: 100, column: 6)
!7479 = !DILocation(line: 100, column: 6, scope: !7468)
!7480 = !DILocation(line: 104, column: 35, scope: !7468)
!7481 = !DILocation(line: 104, column: 16, scope: !7468)
!7482 = !DILocation(line: 104, column: 50, scope: !7468)
!7483 = !DILocation(line: 104, column: 72, scope: !7468)
!7484 = !DILocation(line: 104, column: 2, scope: !7468)
!7485 = !DILocation(line: 106, column: 1, scope: !7468)
!7486 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !504, file: !504, line: 307, type: !7487, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7489)
!7487 = !DISubroutineType(types: !7488)
!7488 = !{null, !7283, !195}
!7489 = !{!7490, !7491}
!7490 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7486, file: !504, line: 308, type: !7283)
!7491 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7486, file: !504, line: 308, type: !195)
!7492 = !DILocation(line: 0, scope: !7486)
!7493 = !DILocation(line: 310, column: 6, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7486, file: !504, line: 310, column: 6)
!7495 = !DILocation(line: 311, column: 3, scope: !7494)
!7496 = !DILocation(line: 310, column: 6, scope: !7486)
!7497 = !DILocation(line: 313, column: 3, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7499, file: !504, line: 313, column: 3)
!7499 = distinct !DILexicalBlock(scope: !7500, file: !504, line: 313, column: 3)
!7500 = distinct !DILexicalBlock(scope: !7501, file: !504, line: 313, column: 3)
!7501 = distinct !DILexicalBlock(scope: !7494, file: !504, line: 311, column: 15)
!7502 = !DILocation(line: 316, column: 1, scope: !7486)
!7503 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7311, file: !7311, line: 249, type: !7504, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7506)
!7504 = !DISubroutineType(types: !7505)
!7505 = !{!107, !7283, !195}
!7506 = !{!7507, !7508, !7509, !7510}
!7507 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7503, file: !7311, line: 250, type: !7283)
!7508 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7503, file: !7311, line: 250, type: !195)
!7509 = !DILocalVariable(name: "mpu_reg_index", scope: !7503, file: !7311, line: 252, type: !107)
!7510 = !DILocalVariable(name: "i", scope: !7511, file: !7311, line: 264, type: !107)
!7511 = distinct !DILexicalBlock(scope: !7512, file: !7311, line: 264, column: 3)
!7512 = distinct !DILexicalBlock(scope: !7513, file: !7311, line: 261, column: 32)
!7513 = distinct !DILexicalBlock(scope: !7503, file: !7311, line: 261, column: 6)
!7514 = !DILocation(line: 0, scope: !7503)
!7515 = !DILocation(line: 252, column: 22, scope: !7503)
!7516 = !DILocation(line: 258, column: 18, scope: !7503)
!7517 = !DILocation(line: 261, column: 20, scope: !7513)
!7518 = !DILocation(line: 261, column: 6, scope: !7503)
!7519 = !DILocation(line: 0, scope: !7511)
!7520 = !DILocation(line: 265, column: 4, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7522, file: !7311, line: 264, column: 59)
!7522 = distinct !DILexicalBlock(scope: !7511, file: !7311, line: 264, column: 3)
!7523 = !DILocation(line: 264, column: 55, scope: !7522)
!7524 = !DILocation(line: 264, column: 33, scope: !7522)
!7525 = !DILocation(line: 264, column: 3, scope: !7511)
!7526 = distinct !{!7526, !7525, !7527}
!7527 = !DILocation(line: 266, column: 3, scope: !7511)
!7528 = !DILocation(line: 269, column: 2, scope: !7503)
!7529 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7530, file: !7530, line: 218, type: !5911, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7531)
!7530 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7531 = !{!7532}
!7532 = !DILocalVariable(name: "rnr", arg: 1, scope: !7529, file: !7530, line: 218, type: !152)
!7533 = !DILocation(line: 0, scope: !7529)
!7534 = !DILocation(line: 220, column: 12, scope: !7529)
!7535 = !DILocation(line: 221, column: 13, scope: !7529)
!7536 = !DILocation(line: 222, column: 1, scope: !7529)
!7537 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !504, file: !504, line: 326, type: !7538, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !471, retainedNodes: !7540)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{!107}
!7540 = !{!7541}
!7541 = !DILocalVariable(name: "r_index", scope: !7537, file: !504, line: 328, type: !152)
!7542 = !DILocation(line: 330, column: 17, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7537, file: !504, line: 330, column: 6)
!7544 = !DILocation(line: 330, column: 29, scope: !7543)
!7545 = !DILocation(line: 330, column: 6, scope: !7537)
!7546 = !DILocation(line: 337, column: 3, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !504, line: 337, column: 3)
!7548 = distinct !DILexicalBlock(scope: !7549, file: !504, line: 337, column: 3)
!7549 = distinct !DILexicalBlock(scope: !7550, file: !504, line: 337, column: 3)
!7550 = distinct !DILexicalBlock(scope: !7543, file: !504, line: 330, column: 50)
!7551 = !DILocation(line: 347, column: 2, scope: !7537)
!7552 = !DILocation(line: 0, scope: !7537)
!7553 = !DILocation(line: 364, column: 29, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !504, line: 364, column: 2)
!7555 = distinct !DILexicalBlock(scope: !7537, file: !504, line: 364, column: 2)
!7556 = !DILocation(line: 364, column: 2, scope: !7555)
!7557 = !DILocation(line: 365, column: 25, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7554, file: !504, line: 364, column: 66)
!7559 = !DILocation(line: 365, column: 3, scope: !7558)
!7560 = !DILocation(line: 364, column: 62, scope: !7554)
!7561 = distinct !{!7561, !7556, !7562}
!7562 = !DILocation(line: 366, column: 2, scope: !7555)
!7563 = !DILocation(line: 369, column: 23, scope: !7537)
!7564 = !DILocation(line: 369, column: 21, scope: !7537)
!7565 = !DILocation(line: 372, column: 2, scope: !7537)
!7566 = !DILocation(line: 433, column: 2, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7568, file: !504, line: 433, column: 2)
!7568 = distinct !DILexicalBlock(scope: !7537, file: !504, line: 433, column: 2)
!7569 = !DILocation(line: 433, column: 2, scope: !7568)
!7570 = !DILocation(line: 433, column: 2, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7567, file: !504, line: 433, column: 2)
!7572 = !DILocation(line: 444, column: 1, scope: !7537)
!7573 = distinct !DISubprogram(name: "strcpy", scope: !7574, file: !7574, line: 20, type: !7575, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7579)
!7574 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7575 = !DISubroutineType(types: !7576)
!7576 = !{!193, !7577, !7578}
!7577 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !193)
!7578 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !118)
!7579 = !{!7580, !7581, !7582}
!7580 = !DILocalVariable(name: "d", arg: 1, scope: !7573, file: !7574, line: 20, type: !7577)
!7581 = !DILocalVariable(name: "s", arg: 2, scope: !7573, file: !7574, line: 20, type: !7578)
!7582 = !DILocalVariable(name: "dest", scope: !7573, file: !7574, line: 22, type: !193)
!7583 = !DILocation(line: 0, scope: !7573)
!7584 = !DILocation(line: 24, column: 9, scope: !7573)
!7585 = !DILocation(line: 24, column: 12, scope: !7573)
!7586 = !DILocation(line: 24, column: 2, scope: !7573)
!7587 = !DILocation(line: 25, column: 6, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7573, file: !7574, line: 24, column: 21)
!7589 = !DILocation(line: 26, column: 4, scope: !7588)
!7590 = !DILocation(line: 27, column: 4, scope: !7588)
!7591 = distinct !{!7591, !7586, !7592}
!7592 = !DILocation(line: 28, column: 2, scope: !7573)
!7593 = !DILocation(line: 30, column: 5, scope: !7573)
!7594 = !DILocation(line: 32, column: 2, scope: !7573)
!7595 = distinct !DISubprogram(name: "strncpy", scope: !7574, file: !7574, line: 42, type: !7596, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7598)
!7596 = !DISubroutineType(types: !7597)
!7597 = !{!193, !7577, !7578, !185}
!7598 = !{!7599, !7600, !7601, !7602}
!7599 = !DILocalVariable(name: "d", arg: 1, scope: !7595, file: !7574, line: 42, type: !7577)
!7600 = !DILocalVariable(name: "s", arg: 2, scope: !7595, file: !7574, line: 42, type: !7578)
!7601 = !DILocalVariable(name: "n", arg: 3, scope: !7595, file: !7574, line: 42, type: !185)
!7602 = !DILocalVariable(name: "dest", scope: !7595, file: !7574, line: 44, type: !193)
!7603 = !DILocation(line: 0, scope: !7595)
!7604 = !DILocation(line: 46, column: 12, scope: !7595)
!7605 = !DILocation(line: 46, column: 17, scope: !7595)
!7606 = !DILocation(line: 46, column: 20, scope: !7595)
!7607 = !DILocation(line: 46, column: 23, scope: !7595)
!7608 = !DILocation(line: 46, column: 2, scope: !7595)
!7609 = !DILocation(line: 47, column: 6, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7595, file: !7574, line: 46, column: 32)
!7611 = !DILocation(line: 48, column: 4, scope: !7610)
!7612 = !DILocation(line: 49, column: 4, scope: !7610)
!7613 = !DILocation(line: 50, column: 4, scope: !7610)
!7614 = distinct !{!7614, !7608, !7615}
!7615 = !DILocation(line: 51, column: 2, scope: !7595)
!7616 = !DILocation(line: 54, column: 6, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7595, file: !7574, line: 53, column: 16)
!7618 = !DILocation(line: 55, column: 4, scope: !7617)
!7619 = !DILocation(line: 56, column: 4, scope: !7617)
!7620 = !DILocation(line: 53, column: 11, scope: !7595)
!7621 = !DILocation(line: 53, column: 2, scope: !7595)
!7622 = distinct !{!7622, !7621, !7623}
!7623 = !DILocation(line: 57, column: 2, scope: !7595)
!7624 = !DILocation(line: 59, column: 2, scope: !7595)
!7625 = distinct !DISubprogram(name: "strchr", scope: !7574, file: !7574, line: 69, type: !7626, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7628)
!7626 = !DISubroutineType(types: !7627)
!7627 = !{!193, !118, !107}
!7628 = !{!7629, !7630, !7631}
!7629 = !DILocalVariable(name: "s", arg: 1, scope: !7625, file: !7574, line: 69, type: !118)
!7630 = !DILocalVariable(name: "c", arg: 2, scope: !7625, file: !7574, line: 69, type: !107)
!7631 = !DILocalVariable(name: "tmp", scope: !7625, file: !7574, line: 71, type: !120)
!7632 = !DILocation(line: 0, scope: !7625)
!7633 = !DILocation(line: 73, column: 2, scope: !7625)
!7634 = !DILocation(line: 73, column: 10, scope: !7625)
!7635 = !DILocation(line: 73, column: 13, scope: !7625)
!7636 = !DILocation(line: 73, column: 21, scope: !7625)
!7637 = !DILocation(line: 74, column: 4, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7625, file: !7574, line: 73, column: 38)
!7639 = distinct !{!7639, !7633, !7640}
!7640 = !DILocation(line: 75, column: 2, scope: !7625)
!7641 = !DILocation(line: 77, column: 9, scope: !7625)
!7642 = !DILocation(line: 77, column: 2, scope: !7625)
!7643 = distinct !DISubprogram(name: "strrchr", scope: !7574, file: !7574, line: 87, type: !7626, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7644)
!7644 = !{!7645, !7646, !7647}
!7645 = !DILocalVariable(name: "s", arg: 1, scope: !7643, file: !7574, line: 87, type: !118)
!7646 = !DILocalVariable(name: "c", arg: 2, scope: !7643, file: !7574, line: 87, type: !107)
!7647 = !DILocalVariable(name: "match", scope: !7643, file: !7574, line: 89, type: !193)
!7648 = !DILocation(line: 0, scope: !7643)
!7649 = !DILocation(line: 91, column: 2, scope: !7643)
!7650 = !DILocation(line: 92, column: 7, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7652, file: !7574, line: 92, column: 7)
!7652 = distinct !DILexicalBlock(scope: !7643, file: !7574, line: 91, column: 5)
!7653 = !DILocation(line: 92, column: 10, scope: !7651)
!7654 = !DILocation(line: 92, column: 7, scope: !7652)
!7655 = !DILocation(line: 95, column: 13, scope: !7643)
!7656 = !DILocation(line: 95, column: 2, scope: !7652)
!7657 = distinct !{!7657, !7649, !7658}
!7658 = !DILocation(line: 95, column: 15, scope: !7643)
!7659 = !DILocation(line: 97, column: 2, scope: !7643)
!7660 = distinct !DISubprogram(name: "strlen", scope: !7574, file: !7574, line: 107, type: !7661, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7663)
!7661 = !DISubroutineType(types: !7662)
!7662 = !{!185, !118}
!7663 = !{!7664, !7665}
!7664 = !DILocalVariable(name: "s", arg: 1, scope: !7660, file: !7574, line: 107, type: !118)
!7665 = !DILocalVariable(name: "n", scope: !7660, file: !7574, line: 109, type: !185)
!7666 = !DILocation(line: 0, scope: !7660)
!7667 = !DILocation(line: 111, column: 9, scope: !7660)
!7668 = !DILocation(line: 111, column: 12, scope: !7660)
!7669 = !DILocation(line: 111, column: 2, scope: !7660)
!7670 = !DILocation(line: 112, column: 4, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7660, file: !7574, line: 111, column: 21)
!7672 = !DILocation(line: 113, column: 4, scope: !7671)
!7673 = distinct !{!7673, !7669, !7674}
!7674 = !DILocation(line: 114, column: 2, scope: !7660)
!7675 = !DILocation(line: 116, column: 2, scope: !7660)
!7676 = distinct !DISubprogram(name: "strnlen", scope: !7574, file: !7574, line: 126, type: !7677, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7679)
!7677 = !DISubroutineType(types: !7678)
!7678 = !{!185, !118, !185}
!7679 = !{!7680, !7681, !7682}
!7680 = !DILocalVariable(name: "s", arg: 1, scope: !7676, file: !7574, line: 126, type: !118)
!7681 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7676, file: !7574, line: 126, type: !185)
!7682 = !DILocalVariable(name: "n", scope: !7676, file: !7574, line: 128, type: !185)
!7683 = !DILocation(line: 0, scope: !7676)
!7684 = !DILocation(line: 130, column: 9, scope: !7676)
!7685 = !DILocation(line: 130, column: 12, scope: !7676)
!7686 = !DILocation(line: 130, column: 20, scope: !7676)
!7687 = !DILocation(line: 130, column: 2, scope: !7676)
!7688 = !DILocation(line: 131, column: 4, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7676, file: !7574, line: 130, column: 35)
!7690 = !DILocation(line: 132, column: 4, scope: !7689)
!7691 = distinct !{!7691, !7687, !7692}
!7692 = !DILocation(line: 133, column: 2, scope: !7676)
!7693 = !DILocation(line: 135, column: 2, scope: !7676)
!7694 = distinct !DISubprogram(name: "strcmp", scope: !7574, file: !7574, line: 145, type: !7695, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7697)
!7695 = !DISubroutineType(types: !7696)
!7696 = !{!107, !118, !118}
!7697 = !{!7698, !7699}
!7698 = !DILocalVariable(name: "s1", arg: 1, scope: !7694, file: !7574, line: 145, type: !118)
!7699 = !DILocalVariable(name: "s2", arg: 2, scope: !7694, file: !7574, line: 145, type: !118)
!7700 = !DILocation(line: 0, scope: !7694)
!7701 = !DILocation(line: 147, column: 10, scope: !7694)
!7702 = !DILocation(line: 147, column: 17, scope: !7694)
!7703 = !DILocation(line: 147, column: 14, scope: !7694)
!7704 = !DILocation(line: 147, column: 22, scope: !7694)
!7705 = !DILocation(line: 148, column: 5, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7694, file: !7574, line: 147, column: 40)
!7707 = !DILocation(line: 149, column: 5, scope: !7706)
!7708 = distinct !{!7708, !7709, !7710}
!7709 = !DILocation(line: 147, column: 2, scope: !7694)
!7710 = !DILocation(line: 150, column: 2, scope: !7694)
!7711 = !DILocation(line: 152, column: 9, scope: !7694)
!7712 = !DILocation(line: 152, column: 15, scope: !7694)
!7713 = !DILocation(line: 152, column: 13, scope: !7694)
!7714 = !DILocation(line: 152, column: 2, scope: !7694)
!7715 = distinct !DISubprogram(name: "strncmp", scope: !7574, file: !7574, line: 162, type: !7716, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7718)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!107, !118, !118, !185}
!7718 = !{!7719, !7720, !7721}
!7719 = !DILocalVariable(name: "s1", arg: 1, scope: !7715, file: !7574, line: 162, type: !118)
!7720 = !DILocalVariable(name: "s2", arg: 2, scope: !7715, file: !7574, line: 162, type: !118)
!7721 = !DILocalVariable(name: "n", arg: 3, scope: !7715, file: !7574, line: 162, type: !185)
!7722 = !DILocation(line: 0, scope: !7715)
!7723 = !DILocation(line: 164, column: 17, scope: !7715)
!7724 = !DILocation(line: 164, column: 21, scope: !7715)
!7725 = !DILocation(line: 164, column: 28, scope: !7715)
!7726 = !DILocation(line: 164, column: 25, scope: !7715)
!7727 = !DILocation(line: 164, column: 33, scope: !7715)
!7728 = !DILocation(line: 165, column: 5, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7715, file: !7574, line: 164, column: 51)
!7730 = !DILocation(line: 166, column: 5, scope: !7729)
!7731 = !DILocation(line: 167, column: 4, scope: !7729)
!7732 = distinct !{!7732, !7733, !7734}
!7733 = !DILocation(line: 164, column: 2, scope: !7715)
!7734 = !DILocation(line: 168, column: 2, scope: !7715)
!7735 = !DILocation(line: 170, column: 25, scope: !7715)
!7736 = !DILocation(line: 170, column: 31, scope: !7715)
!7737 = !DILocation(line: 170, column: 29, scope: !7715)
!7738 = !DILocation(line: 170, column: 9, scope: !7715)
!7739 = !DILocation(line: 170, column: 2, scope: !7715)
!7740 = distinct !DISubprogram(name: "strtok_r", scope: !7574, file: !7574, line: 180, type: !7741, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7743)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!193, !193, !118, !192}
!7743 = !{!7744, !7745, !7746, !7747, !7748}
!7744 = !DILocalVariable(name: "str", arg: 1, scope: !7740, file: !7574, line: 180, type: !193)
!7745 = !DILocalVariable(name: "sep", arg: 2, scope: !7740, file: !7574, line: 180, type: !118)
!7746 = !DILocalVariable(name: "state", arg: 3, scope: !7740, file: !7574, line: 180, type: !192)
!7747 = !DILocalVariable(name: "start", scope: !7740, file: !7574, line: 182, type: !193)
!7748 = !DILocalVariable(name: "end", scope: !7740, file: !7574, line: 182, type: !193)
!7749 = !DILocation(line: 0, scope: !7740)
!7750 = !DILocation(line: 184, column: 10, scope: !7740)
!7751 = !DILocation(line: 184, column: 22, scope: !7740)
!7752 = !DILocation(line: 187, column: 9, scope: !7740)
!7753 = !DILocation(line: 187, column: 16, scope: !7740)
!7754 = !DILocation(line: 187, column: 19, scope: !7740)
!7755 = !DILocation(line: 187, column: 2, scope: !7740)
!7756 = !DILocation(line: 188, column: 8, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7740, file: !7574, line: 187, column: 40)
!7758 = distinct !{!7758, !7755, !7759}
!7759 = !DILocation(line: 189, column: 2, scope: !7740)
!7760 = !DILocation(line: 198, column: 9, scope: !7740)
!7761 = !DILocation(line: 198, column: 18, scope: !7740)
!7762 = !DILocation(line: 198, column: 17, scope: !7740)
!7763 = !DILocation(line: 198, column: 2, scope: !7740)
!7764 = !DILocation(line: 199, column: 6, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7740, file: !7574, line: 198, column: 37)
!7766 = !DILocation(line: 198, column: 14, scope: !7740)
!7767 = distinct !{!7767, !7763, !7768}
!7768 = !DILocation(line: 200, column: 2, scope: !7740)
!7769 = !DILocation(line: 203, column: 8, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7574, line: 202, column: 20)
!7771 = distinct !DILexicalBlock(scope: !7740, file: !7574, line: 202, column: 6)
!7772 = !DILocation(line: 204, column: 16, scope: !7770)
!7773 = !DILocation(line: 205, column: 2, scope: !7770)
!7774 = !DILocation(line: 210, column: 1, scope: !7740)
!7775 = distinct !DISubprogram(name: "strcat", scope: !7574, file: !7574, line: 212, type: !7575, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7776)
!7776 = !{!7777, !7778}
!7777 = !DILocalVariable(name: "dest", arg: 1, scope: !7775, file: !7574, line: 212, type: !7577)
!7778 = !DILocalVariable(name: "src", arg: 2, scope: !7775, file: !7574, line: 212, type: !7578)
!7779 = !DILocation(line: 0, scope: !7775)
!7780 = !DILocation(line: 214, column: 16, scope: !7775)
!7781 = !DILocation(line: 214, column: 14, scope: !7775)
!7782 = !DILocation(line: 214, column: 2, scope: !7775)
!7783 = !DILocation(line: 215, column: 2, scope: !7775)
!7784 = distinct !DISubprogram(name: "strncat", scope: !7574, file: !7574, line: 218, type: !7596, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7785)
!7785 = !{!7786, !7787, !7788, !7789, !7790}
!7786 = !DILocalVariable(name: "dest", arg: 1, scope: !7784, file: !7574, line: 218, type: !7577)
!7787 = !DILocalVariable(name: "src", arg: 2, scope: !7784, file: !7574, line: 218, type: !7578)
!7788 = !DILocalVariable(name: "n", arg: 3, scope: !7784, file: !7574, line: 219, type: !185)
!7789 = !DILocalVariable(name: "orig_dest", scope: !7784, file: !7574, line: 221, type: !193)
!7790 = !DILocalVariable(name: "len", scope: !7784, file: !7574, line: 222, type: !185)
!7791 = !DILocation(line: 0, scope: !7784)
!7792 = !DILocation(line: 222, column: 15, scope: !7784)
!7793 = !DILocation(line: 224, column: 7, scope: !7784)
!7794 = !DILocation(line: 225, column: 14, scope: !7784)
!7795 = !DILocation(line: 225, column: 19, scope: !7784)
!7796 = !DILocation(line: 225, column: 11, scope: !7784)
!7797 = !DILocation(line: 225, column: 23, scope: !7784)
!7798 = !DILocation(line: 225, column: 28, scope: !7784)
!7799 = !DILocation(line: 225, column: 2, scope: !7784)
!7800 = !DILocation(line: 226, column: 17, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7784, file: !7574, line: 225, column: 38)
!7802 = !DILocation(line: 226, column: 8, scope: !7801)
!7803 = !DILocation(line: 226, column: 11, scope: !7801)
!7804 = distinct !{!7804, !7799, !7805}
!7805 = !DILocation(line: 227, column: 2, scope: !7784)
!7806 = !DILocation(line: 228, column: 8, scope: !7784)
!7807 = !DILocation(line: 230, column: 2, scope: !7784)
!7808 = distinct !DISubprogram(name: "memcmp", scope: !7574, file: !7574, line: 239, type: !7809, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7811)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{!107, !13, !13, !185}
!7811 = !{!7812, !7813, !7814, !7815, !7816}
!7812 = !DILocalVariable(name: "m1", arg: 1, scope: !7808, file: !7574, line: 239, type: !13)
!7813 = !DILocalVariable(name: "m2", arg: 2, scope: !7808, file: !7574, line: 239, type: !13)
!7814 = !DILocalVariable(name: "n", arg: 3, scope: !7808, file: !7574, line: 239, type: !185)
!7815 = !DILocalVariable(name: "c1", scope: !7808, file: !7574, line: 241, type: !118)
!7816 = !DILocalVariable(name: "c2", scope: !7808, file: !7574, line: 242, type: !118)
!7817 = !DILocation(line: 0, scope: !7808)
!7818 = !DILocation(line: 244, column: 7, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7808, file: !7574, line: 244, column: 6)
!7820 = !DILocation(line: 244, column: 6, scope: !7808)
!7821 = !DILocation(line: 248, column: 10, scope: !7808)
!7822 = !DILocation(line: 248, column: 14, scope: !7808)
!7823 = !DILocation(line: 248, column: 19, scope: !7808)
!7824 = !DILocation(line: 248, column: 2, scope: !7808)
!7825 = !DILocation(line: 248, column: 23, scope: !7808)
!7826 = !DILocation(line: 248, column: 30, scope: !7808)
!7827 = !DILocation(line: 248, column: 27, scope: !7808)
!7828 = !DILocation(line: 249, column: 5, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7808, file: !7574, line: 248, column: 36)
!7830 = !DILocation(line: 250, column: 5, scope: !7829)
!7831 = distinct !{!7831, !7824, !7832}
!7832 = !DILocation(line: 251, column: 2, scope: !7808)
!7833 = !DILocation(line: 253, column: 9, scope: !7808)
!7834 = !DILocation(line: 253, column: 15, scope: !7808)
!7835 = !DILocation(line: 253, column: 13, scope: !7808)
!7836 = !DILocation(line: 253, column: 2, scope: !7808)
!7837 = !DILocation(line: 254, column: 1, scope: !7808)
!7838 = distinct !DISubprogram(name: "memmove", scope: !7574, file: !7574, line: 263, type: !7839, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7841)
!7839 = !DISubroutineType(types: !7840)
!7840 = !{!106, !106, !13, !185}
!7841 = !{!7842, !7843, !7844, !7845, !7846}
!7842 = !DILocalVariable(name: "d", arg: 1, scope: !7838, file: !7574, line: 263, type: !106)
!7843 = !DILocalVariable(name: "s", arg: 2, scope: !7838, file: !7574, line: 263, type: !13)
!7844 = !DILocalVariable(name: "n", arg: 3, scope: !7838, file: !7574, line: 263, type: !185)
!7845 = !DILocalVariable(name: "dest", scope: !7838, file: !7574, line: 265, type: !193)
!7846 = !DILocalVariable(name: "src", scope: !7838, file: !7574, line: 266, type: !118)
!7847 = !DILocation(line: 0, scope: !7838)
!7848 = !DILocation(line: 268, column: 21, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7838, file: !7574, line: 268, column: 6)
!7850 = !DILocation(line: 268, column: 28, scope: !7849)
!7851 = !DILocation(line: 268, column: 6, scope: !7838)
!7852 = !DILocation(line: 280, column: 12, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7849, file: !7574, line: 278, column: 9)
!7854 = !DILocation(line: 280, column: 3, scope: !7853)
!7855 = !DILocation(line: 275, column: 5, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7857, file: !7574, line: 274, column: 17)
!7857 = distinct !DILexicalBlock(scope: !7849, file: !7574, line: 268, column: 33)
!7858 = !DILocation(line: 276, column: 14, scope: !7856)
!7859 = !DILocation(line: 276, column: 4, scope: !7856)
!7860 = !DILocation(line: 276, column: 12, scope: !7856)
!7861 = !DILocation(line: 274, column: 12, scope: !7857)
!7862 = !DILocation(line: 274, column: 3, scope: !7857)
!7863 = distinct !{!7863, !7862, !7864}
!7864 = !DILocation(line: 277, column: 3, scope: !7857)
!7865 = !DILocation(line: 281, column: 12, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7853, file: !7574, line: 280, column: 17)
!7867 = !DILocation(line: 281, column: 10, scope: !7866)
!7868 = !DILocation(line: 282, column: 8, scope: !7866)
!7869 = !DILocation(line: 283, column: 7, scope: !7866)
!7870 = !DILocation(line: 284, column: 5, scope: !7866)
!7871 = distinct !{!7871, !7854, !7872}
!7872 = !DILocation(line: 285, column: 3, scope: !7853)
!7873 = !DILocation(line: 288, column: 2, scope: !7838)
!7874 = distinct !DISubprogram(name: "memcpy", scope: !7574, file: !7574, line: 298, type: !7875, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7879)
!7875 = !DISubroutineType(types: !7876)
!7876 = !{!106, !7877, !7878, !185}
!7877 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !106)
!7878 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7879 = !{!7880, !7881, !7882, !7883, !7884}
!7880 = !DILocalVariable(name: "d", arg: 1, scope: !7874, file: !7574, line: 298, type: !7877)
!7881 = !DILocalVariable(name: "s", arg: 2, scope: !7874, file: !7574, line: 298, type: !7878)
!7882 = !DILocalVariable(name: "n", arg: 3, scope: !7874, file: !7574, line: 298, type: !185)
!7883 = !DILocalVariable(name: "d_byte", scope: !7874, file: !7574, line: 302, type: !1178)
!7884 = !DILocalVariable(name: "s_byte", scope: !7874, file: !7574, line: 303, type: !2870)
!7885 = !DILocation(line: 0, scope: !7874)
!7886 = !DILocation(line: 337, column: 11, scope: !7874)
!7887 = !DILocation(line: 337, column: 2, scope: !7874)
!7888 = !DILocation(line: 338, column: 25, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7874, file: !7574, line: 337, column: 16)
!7890 = !DILocation(line: 338, column: 17, scope: !7889)
!7891 = !DILocation(line: 338, column: 11, scope: !7889)
!7892 = !DILocation(line: 338, column: 15, scope: !7889)
!7893 = !DILocation(line: 339, column: 4, scope: !7889)
!7894 = distinct !{!7894, !7887, !7895}
!7895 = !DILocation(line: 340, column: 2, scope: !7874)
!7896 = !DILocation(line: 342, column: 2, scope: !7874)
!7897 = distinct !DISubprogram(name: "memset", scope: !7574, file: !7574, line: 352, type: !7898, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7900)
!7898 = !DISubroutineType(types: !7899)
!7899 = !{!106, !106, !107, !185}
!7900 = !{!7901, !7902, !7903, !7904, !7905}
!7901 = !DILocalVariable(name: "buf", arg: 1, scope: !7897, file: !7574, line: 352, type: !106)
!7902 = !DILocalVariable(name: "c", arg: 2, scope: !7897, file: !7574, line: 352, type: !107)
!7903 = !DILocalVariable(name: "n", arg: 3, scope: !7897, file: !7574, line: 352, type: !185)
!7904 = !DILocalVariable(name: "d_byte", scope: !7897, file: !7574, line: 356, type: !1178)
!7905 = !DILocalVariable(name: "c_byte", scope: !7897, file: !7574, line: 357, type: !196)
!7906 = !DILocation(line: 0, scope: !7897)
!7907 = !DILocation(line: 357, column: 25, scope: !7897)
!7908 = !DILocation(line: 389, column: 11, scope: !7897)
!7909 = !DILocation(line: 389, column: 2, scope: !7897)
!7910 = !DILocation(line: 390, column: 11, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7897, file: !7574, line: 389, column: 16)
!7912 = !DILocation(line: 390, column: 15, scope: !7911)
!7913 = !DILocation(line: 391, column: 4, scope: !7911)
!7914 = distinct !{!7914, !7909, !7915}
!7915 = !DILocation(line: 392, column: 2, scope: !7897)
!7916 = !DILocation(line: 394, column: 2, scope: !7897)
!7917 = distinct !DISubprogram(name: "memchr", scope: !7574, file: !7574, line: 404, type: !7918, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2867, retainedNodes: !7920)
!7918 = !DISubroutineType(types: !7919)
!7919 = !{!106, !13, !107, !185}
!7920 = !{!7921, !7922, !7923, !7924}
!7921 = !DILocalVariable(name: "s", arg: 1, scope: !7917, file: !7574, line: 404, type: !13)
!7922 = !DILocalVariable(name: "c", arg: 2, scope: !7917, file: !7574, line: 404, type: !107)
!7923 = !DILocalVariable(name: "n", arg: 3, scope: !7917, file: !7574, line: 404, type: !185)
!7924 = !DILocalVariable(name: "p", scope: !7925, file: !7574, line: 407, type: !2870)
!7925 = distinct !DILexicalBlock(scope: !7926, file: !7574, line: 406, column: 14)
!7926 = distinct !DILexicalBlock(scope: !7917, file: !7574, line: 406, column: 6)
!7927 = !DILocation(line: 0, scope: !7917)
!7928 = !DILocation(line: 406, column: 8, scope: !7926)
!7929 = !DILocation(line: 406, column: 6, scope: !7917)
!7930 = !DILocation(line: 409, column: 3, scope: !7925)
!7931 = !DILocation(line: 0, scope: !7925)
!7932 = !DILocation(line: 410, column: 8, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !7574, line: 410, column: 8)
!7934 = distinct !DILexicalBlock(scope: !7925, file: !7574, line: 409, column: 6)
!7935 = !DILocation(line: 410, column: 13, scope: !7933)
!7936 = !DILocation(line: 410, column: 8, scope: !7934)
!7937 = distinct !{!7937, !7930, !7938}
!7938 = !DILocation(line: 414, column: 20, scope: !7925)
!7939 = !DILocation(line: 417, column: 2, scope: !7917)
!7940 = !DILocation(line: 418, column: 1, scope: !7917)
!7941 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !514, file: !514, line: 23, type: !4092, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7942)
!7942 = !{!7943}
!7943 = !DILocalVariable(name: "hook", arg: 1, scope: !7941, file: !514, line: 23, type: !213)
!7944 = !DILocation(line: 0, scope: !7941)
!7945 = !DILocation(line: 25, column: 15, scope: !7941)
!7946 = !DILocation(line: 26, column: 1, scope: !7941)
!7947 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !514, file: !514, line: 14, type: !214, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7948)
!7948 = !{!7949}
!7949 = !DILocalVariable(name: "c", arg: 1, scope: !7947, file: !514, line: 14, type: !107)
!7950 = !DILocation(line: 0, scope: !7947)
!7951 = !DILocation(line: 18, column: 2, scope: !7947)
!7952 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !514, file: !514, line: 28, type: !7953, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7955)
!7953 = !DISubroutineType(types: !7954)
!7954 = !{!107, !107, !510}
!7955 = !{!7956, !7957}
!7956 = !DILocalVariable(name: "c", arg: 1, scope: !7952, file: !514, line: 28, type: !107)
!7957 = !DILocalVariable(name: "stream", arg: 2, scope: !7952, file: !514, line: 28, type: !510)
!7958 = !DILocation(line: 0, scope: !7952)
!7959 = !DILocation(line: 30, column: 27, scope: !7952)
!7960 = !DILocation(line: 30, column: 50, scope: !7952)
!7961 = !DILocation(line: 30, column: 9, scope: !7952)
!7962 = !DILocation(line: 30, column: 2, scope: !7952)
!7963 = distinct !DISubprogram(name: "fputc", scope: !514, file: !514, line: 41, type: !7953, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7964)
!7964 = !{!7965, !7966}
!7965 = !DILocalVariable(name: "c", arg: 1, scope: !7963, file: !514, line: 41, type: !107)
!7966 = !DILocalVariable(name: "stream", arg: 2, scope: !7963, file: !514, line: 41, type: !510)
!7967 = !DILocation(line: 0, scope: !7963)
!7968 = !DILocation(line: 43, column: 9, scope: !7963)
!7969 = !DILocation(line: 43, column: 2, scope: !7963)
!7970 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7971, file: !7971, line: 72, type: !7953, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7972)
!7971 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!7972 = !{!7973, !7974}
!7973 = !DILocalVariable(name: "c", arg: 1, scope: !7970, file: !7971, line: 72, type: !107)
!7974 = !DILocalVariable(name: "stream", arg: 2, scope: !7970, file: !7971, line: 72, type: !510)
!7975 = !DILocation(line: 0, scope: !7970)
!7976 = !DILocation(line: 81, column: 2, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7970, file: !7971, line: 81, column: 2)
!7978 = !{i64 2152287144}
!7979 = !DILocation(line: 82, column: 9, scope: !7970)
!7980 = !DILocation(line: 82, column: 2, scope: !7970)
!7981 = distinct !DISubprogram(name: "fputs", scope: !514, file: !514, line: 46, type: !7982, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7985)
!7982 = !DISubroutineType(types: !7983)
!7983 = !{!107, !7578, !7984}
!7984 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !510)
!7985 = !{!7986, !7987, !7988, !7989}
!7986 = !DILocalVariable(name: "s", arg: 1, scope: !7981, file: !514, line: 46, type: !7578)
!7987 = !DILocalVariable(name: "stream", arg: 2, scope: !7981, file: !514, line: 46, type: !7984)
!7988 = !DILocalVariable(name: "len", scope: !7981, file: !514, line: 48, type: !107)
!7989 = !DILocalVariable(name: "ret", scope: !7981, file: !514, line: 49, type: !107)
!7990 = !DILocation(line: 0, scope: !7981)
!7991 = !DILocation(line: 48, column: 12, scope: !7981)
!7992 = !DILocation(line: 51, column: 8, scope: !7981)
!7993 = !DILocation(line: 53, column: 13, scope: !7981)
!7994 = !DILocation(line: 53, column: 9, scope: !7981)
!7995 = !DILocation(line: 53, column: 2, scope: !7981)
!7996 = distinct !DISubprogram(name: "fwrite", scope: !514, file: !514, line: 99, type: !7997, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7999)
!7997 = !DISubroutineType(types: !7998)
!7998 = !{!185, !7878, !185, !185, !7984}
!7999 = !{!8000, !8001, !8002, !8003}
!8000 = !DILocalVariable(name: "ptr", arg: 1, scope: !7996, file: !514, line: 99, type: !7878)
!8001 = !DILocalVariable(name: "size", arg: 2, scope: !7996, file: !514, line: 99, type: !185)
!8002 = !DILocalVariable(name: "nitems", arg: 3, scope: !7996, file: !514, line: 99, type: !185)
!8003 = !DILocalVariable(name: "stream", arg: 4, scope: !7996, file: !514, line: 100, type: !7984)
!8004 = !DILocation(line: 0, scope: !7996)
!8005 = !DILocation(line: 102, column: 9, scope: !7996)
!8006 = !DILocation(line: 102, column: 2, scope: !7996)
!8007 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7971, file: !7971, line: 96, type: !7997, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !8008)
!8008 = !{!8009, !8010, !8011, !8012}
!8009 = !DILocalVariable(name: "ptr", arg: 1, scope: !8007, file: !7971, line: 96, type: !7878)
!8010 = !DILocalVariable(name: "size", arg: 2, scope: !8007, file: !7971, line: 96, type: !185)
!8011 = !DILocalVariable(name: "nitems", arg: 3, scope: !8007, file: !7971, line: 96, type: !185)
!8012 = !DILocalVariable(name: "stream", arg: 4, scope: !8007, file: !7971, line: 96, type: !7984)
!8013 = !DILocation(line: 0, scope: !8007)
!8014 = !DILocation(line: 107, column: 2, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8007, file: !7971, line: 107, column: 2)
!8016 = !{i64 2152287248}
!8017 = !DILocation(line: 108, column: 9, scope: !8007)
!8018 = !DILocation(line: 108, column: 2, scope: !8007)
!8019 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !514, file: !514, line: 56, type: !7997, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !8020)
!8020 = !{!8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028}
!8021 = !DILocalVariable(name: "ptr", arg: 1, scope: !8019, file: !514, line: 56, type: !7878)
!8022 = !DILocalVariable(name: "size", arg: 2, scope: !8019, file: !514, line: 56, type: !185)
!8023 = !DILocalVariable(name: "nitems", arg: 3, scope: !8019, file: !514, line: 57, type: !185)
!8024 = !DILocalVariable(name: "stream", arg: 4, scope: !8019, file: !514, line: 57, type: !7984)
!8025 = !DILocalVariable(name: "i", scope: !8019, file: !514, line: 59, type: !185)
!8026 = !DILocalVariable(name: "j", scope: !8019, file: !514, line: 60, type: !185)
!8027 = !DILocalVariable(name: "p", scope: !8019, file: !514, line: 61, type: !2870)
!8028 = !DILabel(scope: !8019, name: "done", file: !514, line: 82)
!8029 = !DILocation(line: 0, scope: !8019)
!8030 = !DILocation(line: 63, column: 14, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8019, file: !514, line: 63, column: 6)
!8032 = !DILocation(line: 63, column: 24, scope: !8031)
!8033 = !DILocation(line: 72, column: 3, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8019, file: !514, line: 70, column: 5)
!8035 = !DILocation(line: 0, scope: !8034)
!8036 = !DILocation(line: 73, column: 8, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8038, file: !514, line: 73, column: 8)
!8038 = distinct !DILexicalBlock(scope: !8034, file: !514, line: 72, column: 6)
!8039 = !DILocation(line: 73, column: 29, scope: !8037)
!8040 = !DILocation(line: 73, column: 27, scope: !8037)
!8041 = !DILocation(line: 73, column: 21, scope: !8037)
!8042 = !DILocation(line: 73, column: 33, scope: !8037)
!8043 = !DILocation(line: 73, column: 8, scope: !8038)
!8044 = !DILocation(line: 76, column: 5, scope: !8038)
!8045 = !DILocation(line: 77, column: 14, scope: !8034)
!8046 = !DILocation(line: 77, column: 3, scope: !8038)
!8047 = distinct !{!8047, !8033, !8048}
!8048 = !DILocation(line: 77, column: 17, scope: !8034)
!8049 = !DILocation(line: 79, column: 4, scope: !8034)
!8050 = !DILocation(line: 80, column: 13, scope: !8019)
!8051 = !DILocation(line: 80, column: 2, scope: !8034)
!8052 = distinct !{!8052, !8053, !8054}
!8053 = !DILocation(line: 70, column: 2, scope: !8019)
!8054 = !DILocation(line: 80, column: 16, scope: !8019)
!8055 = !DILocation(line: 82, column: 1, scope: !8019)
!8056 = !DILocation(line: 83, column: 17, scope: !8019)
!8057 = !DILocation(line: 83, column: 2, scope: !8019)
!8058 = !DILocation(line: 84, column: 1, scope: !8019)
!8059 = distinct !DISubprogram(name: "puts", scope: !514, file: !514, line: 106, type: !8060, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !8062)
!8060 = !DISubroutineType(types: !8061)
!8061 = !{!107, !118}
!8062 = !{!8063}
!8063 = !DILocalVariable(name: "s", arg: 1, scope: !8059, file: !514, line: 106, type: !118)
!8064 = !DILocation(line: 0, scope: !8059)
!8065 = !DILocation(line: 108, column: 6, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8059, file: !514, line: 108, column: 6)
!8067 = !DILocation(line: 108, column: 23, scope: !8066)
!8068 = !DILocation(line: 108, column: 6, scope: !8059)
!8069 = !DILocation(line: 112, column: 9, scope: !8059)
!8070 = !DILocation(line: 112, column: 29, scope: !8059)
!8071 = !DILocation(line: 112, column: 2, scope: !8059)
!8072 = !DILocation(line: 113, column: 1, scope: !8059)
!8073 = distinct !DISubprogram(name: "rf_init", scope: !639, file: !639, line: 10, type: !645, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8074)
!8074 = !{!8075, !8076, !8084, !8085}
!8075 = !DILocalVariable(name: "dev", arg: 1, scope: !8073, file: !639, line: 10, type: !565)
!8076 = !DILocalVariable(name: "rf1", scope: !8073, file: !639, line: 12, type: !8077)
!8077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8078)
!8078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !546, line: 271, size: 64, elements: !8079)
!8079 = !{!8080, !8081, !8082}
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8078, file: !546, line: 273, baseType: !565, size: 32)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !8078, file: !546, line: 275, baseType: !580, size: 8, offset: 32)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !8078, file: !546, line: 277, baseType: !8083, size: 16, offset: 48)
!8083 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !546, line: 249, baseType: !197)
!8084 = !DILocalVariable(name: "rf2", scope: !8073, file: !639, line: 14, type: !8077)
!8085 = !DILocalVariable(name: "rf3", scope: !8073, file: !639, line: 16, type: !8077)
!8086 = !DILocation(line: 0, scope: !8073)
!8087 = !DILocation(line: 12, column: 2, scope: !8073)
!8088 = !DILocation(line: 12, column: 28, scope: !8073)
!8089 = !DILocation(line: 14, column: 2, scope: !8073)
!8090 = !DILocation(line: 14, column: 28, scope: !8073)
!8091 = !DILocation(line: 16, column: 2, scope: !8073)
!8092 = !DILocation(line: 16, column: 28, scope: !8073)
!8093 = !DILocation(line: 22, column: 27, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8073, file: !639, line: 22, column: 6)
!8095 = !DILocation(line: 22, column: 7, scope: !8094)
!8096 = !DILocation(line: 22, column: 33, scope: !8094)
!8097 = !DILocation(line: 23, column: 7, scope: !8094)
!8098 = !DILocation(line: 23, column: 33, scope: !8094)
!8099 = !DILocation(line: 24, column: 7, scope: !8094)
!8100 = !DILocation(line: 22, column: 6, scope: !8073)
!8101 = !DILocation(line: 28, column: 8, scope: !8073)
!8102 = !DILocation(line: 29, column: 8, scope: !8073)
!8103 = !DILocation(line: 30, column: 8, scope: !8073)
!8104 = !DILocation(line: 32, column: 2, scope: !8073)
!8105 = !DILocation(line: 33, column: 1, scope: !8073)
!8106 = distinct !DISubprogram(name: "device_is_ready", scope: !8107, file: !8107, line: 47, type: !8108, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8110)
!8107 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!8108 = !DISubroutineType(types: !8109)
!8109 = !{!145, !565}
!8110 = !{!8111}
!8111 = !DILocalVariable(name: "dev", arg: 1, scope: !8106, file: !8107, line: 47, type: !565)
!8112 = !DILocation(line: 0, scope: !8106)
!8113 = !DILocation(line: 55, column: 2, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8106, file: !8107, line: 55, column: 2)
!8115 = !{i64 2148931062}
!8116 = !DILocation(line: 56, column: 9, scope: !8106)
!8117 = !DILocation(line: 56, column: 2, scope: !8106)
!8118 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !546, file: !546, line: 731, type: !8119, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8122)
!8119 = !DISubroutineType(types: !8120)
!8120 = !{!107, !8121, !581}
!8121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8077, size: 32)
!8122 = !{!8123, !8124}
!8123 = !DILocalVariable(name: "spec", arg: 1, scope: !8118, file: !546, line: 731, type: !8121)
!8124 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !8118, file: !546, line: 732, type: !581)
!8125 = !DILocation(line: 0, scope: !8118)
!8126 = !DILocation(line: 734, column: 34, scope: !8118)
!8127 = !DILocation(line: 735, column: 13, scope: !8118)
!8128 = !DILocation(line: 736, column: 13, scope: !8118)
!8129 = !DILocation(line: 736, column: 7, scope: !8118)
!8130 = !DILocation(line: 736, column: 22, scope: !8118)
!8131 = !DILocation(line: 734, column: 9, scope: !8118)
!8132 = !DILocation(line: 734, column: 2, scope: !8118)
!8133 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !8134, file: !8134, line: 49, type: !563, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8135)
!8134 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!8135 = !{!8136, !8137, !8138}
!8136 = !DILocalVariable(name: "port", arg: 1, scope: !8133, file: !8134, line: 49, type: !565)
!8137 = !DILocalVariable(name: "pin", arg: 2, scope: !8133, file: !8134, line: 49, type: !580)
!8138 = !DILocalVariable(name: "flags", arg: 3, scope: !8133, file: !8134, line: 49, type: !581)
!8139 = !DILocation(line: 0, scope: !8133)
!8140 = !DILocation(line: 59, column: 2, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8133, file: !8134, line: 59, column: 2)
!8142 = !{i64 2148981156}
!8143 = !DILocation(line: 60, column: 9, scope: !8133)
!8144 = !DILocation(line: 60, column: 2, scope: !8133)
!8145 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !546, file: !546, line: 667, type: !563, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8146)
!8146 = !{!8147, !8148, !8149, !8150, !8151, !8153}
!8147 = !DILocalVariable(name: "port", arg: 1, scope: !8145, file: !546, line: 667, type: !565)
!8148 = !DILocalVariable(name: "pin", arg: 2, scope: !8145, file: !546, line: 668, type: !580)
!8149 = !DILocalVariable(name: "flags", arg: 3, scope: !8145, file: !546, line: 669, type: !581)
!8150 = !DILocalVariable(name: "api", scope: !8145, file: !546, line: 671, type: !557)
!8151 = !DILocalVariable(name: "cfg", scope: !8145, file: !546, line: 673, type: !8152)
!8152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !627)
!8153 = !DILocalVariable(name: "data", scope: !8145, file: !546, line: 675, type: !637)
!8154 = !DILocation(line: 0, scope: !8145)
!8155 = !DILocation(line: 672, column: 41, scope: !8145)
!8156 = !DILocation(line: 674, column: 44, scope: !8145)
!8157 = !DILocation(line: 676, column: 36, scope: !8145)
!8158 = !DILocation(line: 678, column: 2, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8160, file: !546, line: 678, column: 2)
!8160 = distinct !DILexicalBlock(scope: !8145, file: !546, line: 678, column: 2)
!8161 = !DILocation(line: 678, column: 2, scope: !8160)
!8162 = !DILocation(line: 678, column: 2, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8159, file: !546, line: 678, column: 2)
!8164 = !DILocation(line: 681, column: 2, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !546, line: 681, column: 2)
!8166 = distinct !DILexicalBlock(scope: !8145, file: !546, line: 681, column: 2)
!8167 = !DILocation(line: 681, column: 2, scope: !8166)
!8168 = !DILocation(line: 681, column: 2, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8165, file: !546, line: 681, column: 2)
!8170 = !DILocation(line: 685, column: 2, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8172, file: !546, line: 685, column: 2)
!8172 = distinct !DILexicalBlock(scope: !8145, file: !546, line: 685, column: 2)
!8173 = !DILocation(line: 685, column: 2, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8171, file: !546, line: 685, column: 2)
!8175 = !DILocation(line: 689, column: 2, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8177, file: !546, line: 689, column: 2)
!8177 = distinct !DILexicalBlock(scope: !8145, file: !546, line: 689, column: 2)
!8178 = !DILocation(line: 689, column: 2, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8176, file: !546, line: 689, column: 2)
!8180 = !DILocation(line: 692, column: 2, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8182, file: !546, line: 692, column: 2)
!8182 = distinct !DILexicalBlock(scope: !8145, file: !546, line: 692, column: 2)
!8183 = !DILocation(line: 692, column: 2, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8181, file: !546, line: 692, column: 2)
!8185 = !DILocation(line: 696, column: 2, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8187, file: !546, line: 696, column: 2)
!8187 = distinct !DILexicalBlock(scope: !8145, file: !546, line: 696, column: 2)
!8188 = !DILocation(line: 696, column: 2, scope: !8187)
!8189 = !DILocation(line: 696, column: 2, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8186, file: !546, line: 696, column: 2)
!8191 = !DILocation(line: 701, column: 6, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8145, file: !546, line: 700, column: 6)
!8193 = !DILocation(line: 708, column: 2, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !546, line: 708, column: 2)
!8195 = distinct !DILexicalBlock(scope: !8145, file: !546, line: 708, column: 2)
!8196 = !DILocation(line: 708, column: 2, scope: !8195)
!8197 = !DILocation(line: 708, column: 2, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !546, line: 708, column: 2)
!8199 = !DILocation(line: 711, column: 13, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8145, file: !546, line: 711, column: 6)
!8201 = !DILocation(line: 711, column: 32, scope: !8200)
!8202 = !DILocation(line: 711, column: 6, scope: !8145)
!8203 = !DILocation(line: 712, column: 9, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8200, file: !546, line: 711, column: 38)
!8205 = !DILocation(line: 712, column: 16, scope: !8204)
!8206 = !DILocation(line: 713, column: 2, scope: !8204)
!8207 = !DILocation(line: 714, column: 19, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8200, file: !546, line: 713, column: 9)
!8209 = !DILocation(line: 714, column: 9, scope: !8208)
!8210 = !DILocation(line: 714, column: 16, scope: !8208)
!8211 = !DILocation(line: 706, column: 8, scope: !8145)
!8212 = !DILocation(line: 717, column: 14, scope: !8145)
!8213 = !DILocation(line: 717, column: 9, scope: !8145)
!8214 = !DILocation(line: 717, column: 2, scope: !8145)
!8215 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !8108, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !542, retainedNodes: !8216)
!8216 = !{!8217}
!8217 = !DILocalVariable(name: "dev", arg: 1, scope: !8215, file: !260, line: 730, type: !565)
!8218 = !DILocation(line: 0, scope: !8215)
!8219 = !DILocation(line: 732, column: 9, scope: !8215)
!8220 = !DILocation(line: 732, column: 2, scope: !8215)
!8221 = distinct !DISubprogram(name: "end_report", scope: !654, file: !654, line: 67, type: !3055, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8222 = !DILocation(line: 69, column: 6, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8221, file: !654, line: 69, column: 6)
!8224 = !DILocation(line: 0, scope: !8223)
!8225 = !DILocation(line: 74, column: 1, scope: !8221)
!8226 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_start", scope: !654, file: !654, line: 159, type: !3055, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8227 = !DILocation(line: 183, column: 1, scope: !8226)
!8228 = distinct !DISubprogram(name: "z_impl_z_test_1cpu_stop", scope: !654, file: !654, line: 185, type: !3055, scopeLine: 186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8229 = !DILocation(line: 196, column: 1, scope: !8228)
!8230 = distinct !DISubprogram(name: "ztest_skip_failed_assumption", scope: !654, file: !654, line: 295, type: !3055, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8231 = !DILocation(line: 298, column: 34, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !654, line: 297, column: 47)
!8233 = distinct !DILexicalBlock(scope: !8230, file: !654, line: 297, column: 6)
!8234 = !DILocation(line: 300, column: 2, scope: !8230)
!8235 = !DILocation(line: 301, column: 1, scope: !8230)
!8236 = distinct !DISubprogram(name: "ztest_test_skip", scope: !654, file: !654, line: 476, type: !3055, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8237 = !DILocation(line: 478, column: 10, scope: !8236)
!8238 = !DILocation(line: 478, column: 2, scope: !8236)
!8239 = !DILocation(line: 480, column: 15, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8236, file: !654, line: 478, column: 17)
!8241 = !DILocation(line: 481, column: 3, scope: !8240)
!8242 = !DILocation(line: 484, column: 15, scope: !8240)
!8243 = !DILocation(line: 485, column: 3, scope: !8240)
!8244 = !DILocation(line: 486, column: 3, scope: !8240)
!8245 = !DILocation(line: 489, column: 9, scope: !8240)
!8246 = !DILocation(line: 488, column: 3, scope: !8240)
!8247 = !DILocation(line: 490, column: 15, scope: !8240)
!8248 = !DILocation(line: 491, column: 3, scope: !8240)
!8249 = !DILocation(line: 493, column: 1, scope: !8236)
!8250 = distinct !DISubprogram(name: "test_finalize", scope: !654, file: !654, line: 432, type: !3055, scopeLine: 433, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8251 = !DILocation(line: 435, column: 3, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8253, file: !654, line: 434, column: 41)
!8253 = distinct !DILexicalBlock(scope: !8250, file: !654, line: 434, column: 6)
!8254 = !DILocation(line: 436, column: 18, scope: !8252)
!8255 = !DILocation(line: 436, column: 3, scope: !8252)
!8256 = !DILocation(line: 438, column: 1, scope: !8250)
!8257 = distinct !DISubprogram(name: "get_friendly_phase_name", scope: !654, file: !654, line: 274, type: !8258, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8260)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{!118, !653}
!8260 = !{!8261}
!8261 = !DILocalVariable(name: "phase", arg: 1, scope: !8257, file: !654, line: 274, type: !653)
!8262 = !DILocation(line: 0, scope: !8257)
!8263 = !DILocation(line: 276, column: 2, scope: !8257)
!8264 = !DILocation(line: 0, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8257, file: !654, line: 276, column: 17)
!8266 = !DILocation(line: 292, column: 1, scope: !8257)
!8267 = distinct !DISubprogram(name: "k_thread_abort", scope: !4386, file: !4386, line: 188, type: !8268, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8272)
!8268 = !DISubroutineType(types: !8269)
!8269 = !{null, !8270}
!8270 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !8271)
!8271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 32)
!8272 = !{!8273}
!8273 = !DILocalVariable(name: "thread", arg: 1, scope: !8267, file: !4386, line: 188, type: !8270)
!8274 = !DILocation(line: 0, scope: !8267)
!8275 = !DILocation(line: 197, column: 2, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8267, file: !4386, line: 197, column: 2)
!8277 = !{i64 2152248947}
!8278 = !DILocation(line: 198, column: 2, scope: !8267)
!8279 = !DILocation(line: 199, column: 1, scope: !8267)
!8280 = distinct !DISubprogram(name: "k_current_get", scope: !419, file: !419, line: 530, type: !8281, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8281 = !DISubroutineType(types: !8282)
!8282 = !{!8270}
!8283 = !DILocation(line: 535, column: 9, scope: !8280)
!8284 = !DILocation(line: 535, column: 2, scope: !8280)
!8285 = distinct !DISubprogram(name: "z_current_get", scope: !4386, file: !4386, line: 173, type: !8281, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8286 = !DILocation(line: 180, column: 2, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8285, file: !4386, line: 180, column: 2)
!8288 = !{i64 2152248879}
!8289 = !DILocation(line: 181, column: 9, scope: !8285)
!8290 = !DILocation(line: 181, column: 2, scope: !8285)
!8291 = distinct !DISubprogram(name: "ztest_test_fail", scope: !654, file: !654, line: 440, type: !3055, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8292 = !DILocation(line: 442, column: 10, scope: !8291)
!8293 = !DILocation(line: 442, column: 2, scope: !8291)
!8294 = !DILocation(line: 444, column: 15, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8291, file: !654, line: 442, column: 17)
!8296 = !DILocation(line: 445, column: 3, scope: !8295)
!8297 = !DILocation(line: 448, column: 15, scope: !8295)
!8298 = !DILocation(line: 449, column: 3, scope: !8295)
!8299 = !DILocation(line: 450, column: 3, scope: !8295)
!8300 = !DILocation(line: 453, column: 9, scope: !8295)
!8301 = !DILocation(line: 452, column: 3, scope: !8295)
!8302 = !DILocation(line: 454, column: 15, scope: !8295)
!8303 = !DILocation(line: 455, column: 3, scope: !8295)
!8304 = !DILocation(line: 457, column: 1, scope: !8291)
!8305 = distinct !DISubprogram(name: "ztest_test_pass", scope: !654, file: !654, line: 459, type: !3055, scopeLine: 460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8306 = !DILocation(line: 461, column: 10, scope: !8305)
!8307 = !DILocation(line: 461, column: 2, scope: !8305)
!8308 = !DILocation(line: 463, column: 15, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8305, file: !654, line: 461, column: 17)
!8310 = !DILocation(line: 465, column: 3, scope: !8309)
!8311 = !DILocation(line: 468, column: 9, scope: !8309)
!8312 = !DILocation(line: 467, column: 3, scope: !8309)
!8313 = !DILocation(line: 469, column: 15, scope: !8309)
!8314 = !DILocation(line: 470, column: 7, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8309, file: !654, line: 470, column: 7)
!8316 = !DILocation(line: 470, column: 13, scope: !8315)
!8317 = !DILocation(line: 470, column: 7, scope: !8309)
!8318 = !DILocation(line: 0, scope: !8309)
!8319 = !DILocation(line: 474, column: 1, scope: !8305)
!8320 = distinct !DISubprogram(name: "ztest_simple_1cpu_before", scope: !654, file: !654, line: 495, type: !131, scopeLine: 496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8321)
!8321 = !{!8322}
!8322 = !DILocalVariable(name: "data", arg: 1, scope: !8320, file: !654, line: 495, type: !106)
!8323 = !DILocation(line: 0, scope: !8320)
!8324 = !DILocation(line: 498, column: 2, scope: !8320)
!8325 = !DILocation(line: 499, column: 1, scope: !8320)
!8326 = distinct !DISubprogram(name: "z_test_1cpu_start", scope: !8327, file: !8327, line: 24, type: !3055, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8327 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!8328 = !DILocation(line: 32, column: 2, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8326, file: !8327, line: 32, column: 2)
!8330 = !{i64 2152371334}
!8331 = !DILocation(line: 34, column: 1, scope: !8326)
!8332 = distinct !DISubprogram(name: "ztest_simple_1cpu_after", scope: !654, file: !654, line: 501, type: !131, scopeLine: 502, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8333)
!8333 = !{!8334}
!8334 = !DILocalVariable(name: "data", arg: 1, scope: !8332, file: !654, line: 501, type: !106)
!8335 = !DILocation(line: 0, scope: !8332)
!8336 = !DILocation(line: 504, column: 2, scope: !8332)
!8337 = !DILocation(line: 505, column: 1, scope: !8332)
!8338 = distinct !DISubprogram(name: "z_test_1cpu_stop", scope: !8327, file: !8327, line: 47, type: !3055, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8339 = !DILocation(line: 55, column: 2, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8338, file: !8327, line: 55, column: 2)
!8341 = !{i64 2152371402}
!8342 = !DILocation(line: 57, column: 1, scope: !8338)
!8343 = distinct !DISubprogram(name: "z_ztest_get_next_test", scope: !654, file: !654, line: 617, type: !8344, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8363)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{!8346, !118, !8346}
!8346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8347, size: 32)
!8347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test", file: !114, line: 97, size: 160, elements: !8348)
!8348 = !{!8349, !8350, !8351, !8352, !8353}
!8349 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8347, file: !114, line: 98, baseType: !118, size: 32)
!8350 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8347, file: !114, line: 99, baseType: !118, size: 32, offset: 32)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !8347, file: !114, line: 100, baseType: !130, size: 32, offset: 64)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "thread_options", scope: !8347, file: !114, line: 101, baseType: !152, size: 32, offset: 96)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8347, file: !114, line: 104, baseType: !8354, size: 32, offset: 128)
!8354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8355)
!8355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8356, size: 32)
!8356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_unit_test_stats", file: !114, line: 123, size: 160, elements: !8357)
!8357 = !{!8358, !8359, !8360, !8361, !8362}
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8356, file: !114, line: 125, baseType: !152, size: 32)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8356, file: !114, line: 127, baseType: !152, size: 32, offset: 32)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8356, file: !114, line: 129, baseType: !152, size: 32, offset: 64)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "pass_count", scope: !8356, file: !114, line: 131, baseType: !152, size: 32, offset: 96)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "duration_worst_ms", scope: !8356, file: !114, line: 133, baseType: !152, size: 32, offset: 128)
!8363 = !{!8364, !8365, !8366}
!8364 = !DILocalVariable(name: "suite", arg: 1, scope: !8343, file: !654, line: 617, type: !118)
!8365 = !DILocalVariable(name: "prev", arg: 2, scope: !8343, file: !654, line: 617, type: !8346)
!8366 = !DILocalVariable(name: "test", scope: !8343, file: !654, line: 619, type: !8346)
!8367 = !DILocation(line: 0, scope: !8343)
!8368 = !DILocation(line: 619, column: 39, scope: !8343)
!8369 = !DILocation(line: 619, column: 33, scope: !8343)
!8370 = !DILocation(line: 621, column: 14, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !654, line: 621, column: 2)
!8372 = distinct !DILexicalBlock(scope: !8343, file: !654, line: 621, column: 2)
!8373 = !DILocation(line: 621, column: 2, scope: !8372)
!8374 = !DILocation(line: 622, column: 27, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8376, file: !654, line: 622, column: 7)
!8376 = distinct !DILexicalBlock(scope: !8371, file: !654, line: 621, column: 51)
!8377 = !DILocation(line: 622, column: 7, scope: !8375)
!8378 = !DILocation(line: 622, column: 44, scope: !8375)
!8379 = !DILocation(line: 622, column: 7, scope: !8376)
!8380 = !DILocation(line: 621, column: 43, scope: !8371)
!8381 = distinct !{!8381, !8373, !8382}
!8382 = !DILocation(line: 625, column: 2, scope: !8372)
!8383 = !DILocation(line: 627, column: 1, scope: !8343)
!8384 = distinct !DISubprogram(name: "z_ztest_run_test_suite", scope: !654, file: !654, line: 764, type: !8060, scopeLine: 765, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8385)
!8385 = !{!8386}
!8386 = !DILocalVariable(name: "name", arg: 1, scope: !8384, file: !654, line: 764, type: !118)
!8387 = !DILocation(line: 0, scope: !8384)
!8388 = !DILocation(line: 766, column: 36, scope: !8384)
!8389 = !DILocation(line: 766, column: 9, scope: !8384)
!8390 = !DILocation(line: 766, column: 2, scope: !8384)
!8391 = distinct !DISubprogram(name: "ztest_find_test_suite", scope: !654, file: !654, line: 604, type: !8392, scopeLine: 605, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8411)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{!8394, !118}
!8394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8395, size: 32)
!8395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_node", file: !114, line: 177, size: 224, elements: !8396)
!8396 = !{!8397, !8398, !8399, !8400, !8401, !8402, !8403}
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8395, file: !114, line: 179, baseType: !117, size: 32)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !8395, file: !114, line: 182, baseType: !122, size: 32, offset: 32)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "before", scope: !8395, file: !114, line: 185, baseType: !128, size: 32, offset: 64)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "after", scope: !8395, file: !114, line: 188, baseType: !134, size: 32, offset: 96)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "teardown", scope: !8395, file: !114, line: 191, baseType: !137, size: 32, offset: 128)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "predicate", scope: !8395, file: !114, line: 194, baseType: !140, size: 32, offset: 160)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8395, file: !114, line: 197, baseType: !8404, size: 32, offset: 192)
!8404 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8405)
!8405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8406, size: 32)
!8406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_suite_stats", file: !114, line: 114, size: 96, elements: !8407)
!8407 = !{!8408, !8409, !8410}
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "run_count", scope: !8406, file: !114, line: 116, baseType: !152, size: 32)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "skip_count", scope: !8406, file: !114, line: 118, baseType: !152, size: 32, offset: 32)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "fail_count", scope: !8406, file: !114, line: 120, baseType: !152, size: 32, offset: 64)
!8411 = !{!8412, !8413}
!8412 = !DILocalVariable(name: "name", arg: 1, scope: !8391, file: !654, line: 604, type: !118)
!8413 = !DILocalVariable(name: "node", scope: !8391, file: !654, line: 606, type: !8394)
!8414 = !DILocation(line: 0, scope: !8391)
!8415 = !DILocation(line: 608, column: 2, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8391, file: !654, line: 608, column: 2)
!8417 = !DILocation(line: 609, column: 26, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !654, line: 609, column: 7)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !654, line: 608, column: 87)
!8420 = distinct !DILexicalBlock(scope: !8416, file: !654, line: 608, column: 2)
!8421 = !DILocation(line: 609, column: 7, scope: !8418)
!8422 = !DILocation(line: 609, column: 32, scope: !8418)
!8423 = !DILocation(line: 609, column: 7, scope: !8419)
!8424 = !DILocation(line: 608, column: 79, scope: !8420)
!8425 = !DILocation(line: 608, column: 49, scope: !8420)
!8426 = distinct !{!8426, !8415, !8427}
!8427 = !DILocation(line: 612, column: 2, scope: !8416)
!8428 = !DILocation(line: 615, column: 1, scope: !8391)
!8429 = distinct !DISubprogram(name: "z_ztest_run_test_suite_ptr", scope: !654, file: !654, line: 652, type: !8430, scopeLine: 653, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8432)
!8430 = !DISubroutineType(types: !8431)
!8431 = !{!107, !8394}
!8432 = !{!8433, !8434, !8435, !8436, !8437, !8438}
!8433 = !DILocalVariable(name: "suite", arg: 1, scope: !8429, file: !654, line: 652, type: !8394)
!8434 = !DILocalVariable(name: "test", scope: !8429, file: !654, line: 654, type: !8346)
!8435 = !DILocalVariable(name: "data", scope: !8429, file: !654, line: 655, type: !106)
!8436 = !DILocalVariable(name: "fail", scope: !8429, file: !654, line: 656, type: !107)
!8437 = !DILocalVariable(name: "tc_result", scope: !8429, file: !654, line: 657, type: !107)
!8438 = !DILocalVariable(name: "i", scope: !8439, file: !654, line: 692, type: !107)
!8439 = distinct !DILexicalBlock(scope: !8429, file: !654, line: 692, column: 2)
!8440 = !DILocation(line: 0, scope: !8429)
!8441 = !DILocation(line: 663, column: 12, scope: !8442)
!8442 = distinct !DILexicalBlock(scope: !8429, file: !654, line: 663, column: 6)
!8443 = !DILocation(line: 663, column: 6, scope: !8429)
!8444 = !DILocation(line: 664, column: 15, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8442, file: !654, line: 663, column: 21)
!8446 = !DILocation(line: 665, column: 3, scope: !8445)
!8447 = !DILocation(line: 679, column: 2, scope: !8448)
!8448 = distinct !DILexicalBlock(scope: !8429, file: !654, line: 679, column: 2)
!8449 = !DILocation(line: 680, column: 33, scope: !8429)
!8450 = !DILocation(line: 681, column: 14, scope: !8429)
!8451 = !DILocation(line: 682, column: 8, scope: !8429)
!8452 = !DILocation(line: 688, column: 55, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8429, file: !654, line: 688, column: 6)
!8454 = !DILocation(line: 688, column: 61, scope: !8453)
!8455 = !DILocation(line: 688, column: 6, scope: !8429)
!8456 = !DILocation(line: 689, column: 10, scope: !8457)
!8457 = distinct !DILexicalBlock(scope: !8453, file: !654, line: 688, column: 70)
!8458 = !DILocation(line: 690, column: 2, scope: !8457)
!8459 = !DILocation(line: 0, scope: !8439)
!8460 = !DILocation(line: 727, column: 3, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !654, line: 692, column: 46)
!8462 = distinct !DILexicalBlock(scope: !8439, file: !654, line: 692, column: 2)
!8463 = !DILocation(line: 0, scope: !8461)
!8464 = !DILocation(line: 727, column: 48, scope: !8461)
!8465 = !DILocation(line: 727, column: 19, scope: !8461)
!8466 = !DILocation(line: 727, column: 61, scope: !8461)
!8467 = !DILocation(line: 728, column: 41, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !654, line: 728, column: 8)
!8469 = distinct !DILexicalBlock(scope: !8461, file: !654, line: 727, column: 71)
!8470 = !DILocation(line: 728, column: 53, scope: !8468)
!8471 = !DILocation(line: 728, column: 8, scope: !8468)
!8472 = !DILocation(line: 728, column: 8, scope: !8469)
!8473 = !DILocation(line: 729, column: 11, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8468, file: !654, line: 728, column: 60)
!8475 = !DILocation(line: 729, column: 18, scope: !8474)
!8476 = !DILocation(line: 729, column: 27, scope: !8474)
!8477 = !DILocation(line: 730, column: 17, scope: !8474)
!8478 = !DILocation(line: 731, column: 9, scope: !8474)
!8479 = !DILocation(line: 732, column: 12, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8481, file: !654, line: 731, column: 31)
!8481 = distinct !DILexicalBlock(scope: !8474, file: !654, line: 731, column: 9)
!8482 = !DILocation(line: 732, column: 19, scope: !8480)
!8483 = !DILocation(line: 733, column: 5, scope: !8480)
!8484 = !DILocation(line: 734, column: 12, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !654, line: 733, column: 38)
!8486 = distinct !DILexicalBlock(scope: !8481, file: !654, line: 733, column: 16)
!8487 = !DILocation(line: 734, column: 19, scope: !8485)
!8488 = !DILocation(line: 735, column: 5, scope: !8485)
!8489 = !DILocation(line: 736, column: 12, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8491, file: !654, line: 735, column: 38)
!8491 = distinct !DILexicalBlock(scope: !8486, file: !654, line: 735, column: 16)
!8492 = !DILocation(line: 736, column: 19, scope: !8490)
!8493 = !DILocation(line: 737, column: 5, scope: !8490)
!8494 = !DILocation(line: 0, scope: !8481)
!8495 = !DILocation(line: 739, column: 19, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8474, file: !654, line: 739, column: 9)
!8497 = !DILocation(line: 739, column: 9, scope: !8474)
!8498 = !DILocation(line: 744, column: 31, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8469, file: !654, line: 744, column: 8)
!8500 = !DILocation(line: 744, column: 43, scope: !8499)
!8501 = !DILocation(line: 744, column: 8, scope: !8469)
!8502 = distinct !{!8502, !8460, !8503}
!8503 = !DILocation(line: 747, column: 3, scope: !8461)
!8504 = !DILocation(line: 750, column: 7, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8461, file: !654, line: 750, column: 7)
!8506 = !DILocation(line: 750, column: 38, scope: !8505)
!8507 = !DILocation(line: 751, column: 16, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8505, file: !654, line: 750, column: 52)
!8509 = !DILocation(line: 752, column: 3, scope: !8508)
!8510 = !DILocation(line: 755, column: 2, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8512, file: !654, line: 755, column: 2)
!8512 = distinct !DILexicalBlock(scope: !8429, file: !654, line: 755, column: 2)
!8513 = !DILocation(line: 0, scope: !8511)
!8514 = !DILocation(line: 756, column: 8, scope: !8429)
!8515 = !DILocation(line: 757, column: 13, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8429, file: !654, line: 757, column: 6)
!8517 = !DILocation(line: 757, column: 22, scope: !8516)
!8518 = !DILocation(line: 757, column: 6, scope: !8429)
!8519 = !DILocation(line: 758, column: 3, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8516, file: !654, line: 757, column: 31)
!8521 = !DILocation(line: 759, column: 2, scope: !8520)
!8522 = !DILocation(line: 762, column: 1, scope: !8429)
!8523 = distinct !DISubprogram(name: "run_test", scope: !654, file: !654, line: 521, type: !8524, scopeLine: 522, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8526)
!8524 = !DISubroutineType(types: !8525)
!8525 = !{!107, !8394, !8346, !106}
!8526 = !{!8527, !8528, !8529, !8530}
!8527 = !DILocalVariable(name: "suite", arg: 1, scope: !8523, file: !654, line: 521, type: !8394)
!8528 = !DILocalVariable(name: "test", arg: 2, scope: !8523, file: !654, line: 521, type: !8346)
!8529 = !DILocalVariable(name: "data", arg: 3, scope: !8523, file: !654, line: 521, type: !106)
!8530 = !DILocalVariable(name: "ret", scope: !8523, file: !654, line: 523, type: !107)
!8531 = !DILocation(line: 0, scope: !8523)
!8532 = !DILocation(line: 528, column: 2, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8523, file: !654, line: 528, column: 2)
!8534 = !DILocation(line: 530, column: 8, scope: !8523)
!8535 = !DILocation(line: 536, column: 3, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8537, file: !654, line: 535, column: 41)
!8537 = distinct !DILexicalBlock(scope: !8523, file: !654, line: 535, column: 6)
!8538 = !DILocation(line: 539, column: 32, scope: !8536)
!8539 = !DILocation(line: 539, column: 39, scope: !8536)
!8540 = !DILocation(line: 541, column: 11, scope: !8536)
!8541 = !DILocation(line: 541, column: 26, scope: !8536)
!8542 = !DILocation(line: 537, column: 3, scope: !8536)
!8543 = !DILocation(line: 543, column: 3, scope: !8536)
!8544 = !DILocation(line: 544, column: 13, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8536, file: !654, line: 544, column: 7)
!8546 = !DILocation(line: 544, column: 18, scope: !8545)
!8547 = !DILocation(line: 544, column: 7, scope: !8536)
!8548 = !DILocation(line: 545, column: 4, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8545, file: !654, line: 544, column: 27)
!8550 = !DILocation(line: 546, column: 3, scope: !8549)
!8551 = !DILocation(line: 548, column: 7, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8536, file: !654, line: 548, column: 7)
!8553 = !DILocation(line: 548, column: 46, scope: !8552)
!8554 = !DILocation(line: 550, column: 4, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8552, file: !654, line: 549, column: 47)
!8556 = !DILocation(line: 551, column: 4, scope: !8555)
!8557 = !DILocation(line: 552, column: 3, scope: !8555)
!8558 = !DILocation(line: 564, column: 8, scope: !8523)
!8559 = !DILocation(line: 565, column: 13, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8523, file: !654, line: 565, column: 6)
!8561 = !DILocation(line: 565, column: 19, scope: !8560)
!8562 = !DILocation(line: 565, column: 6, scope: !8523)
!8563 = !DILocation(line: 566, column: 3, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8560, file: !654, line: 565, column: 28)
!8565 = !DILocation(line: 567, column: 2, scope: !8564)
!8566 = !DILocation(line: 568, column: 2, scope: !8523)
!8567 = !DILocation(line: 570, column: 2, scope: !8523)
!8568 = !DILocation(line: 571, column: 6, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8523, file: !654, line: 571, column: 6)
!8570 = !DILocation(line: 571, column: 28, scope: !8569)
!8571 = !DILocation(line: 571, column: 35, scope: !8569)
!8572 = !DILocation(line: 571, column: 20, scope: !8569)
!8573 = !DILocation(line: 571, column: 6, scope: !8523)
!8574 = !DILocation(line: 572, column: 34, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8569, file: !654, line: 571, column: 54)
!8576 = !DILocation(line: 573, column: 2, scope: !8575)
!8577 = !DILocation(line: 575, column: 8, scope: !8523)
!8578 = !DILocation(line: 583, column: 6, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8523, file: !654, line: 583, column: 6)
!8580 = !DILocation(line: 583, column: 39, scope: !8579)
!8581 = !DILocation(line: 585, column: 46, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8579, file: !654, line: 585, column: 13)
!8583 = !DILocation(line: 590, column: 10, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8585, file: !654, line: 589, column: 54)
!8585 = distinct !DILexicalBlock(scope: !8523, file: !654, line: 589, column: 6)
!8586 = !DILocation(line: 593, column: 8, scope: !8523)
!8587 = !DILocation(line: 594, column: 2, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8523, file: !654, line: 594, column: 2)
!8589 = !DILocation(line: 595, column: 10, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8523, file: !654, line: 595, column: 6)
!8591 = !DILocation(line: 595, column: 21, scope: !8590)
!8592 = !DILocation(line: 595, column: 24, scope: !8590)
!8593 = !DILocation(line: 595, column: 6, scope: !8523)
!8594 = !DILocation(line: 596, column: 15, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8590, file: !654, line: 595, column: 56)
!8596 = !DILocation(line: 597, column: 2, scope: !8595)
!8597 = !DILocation(line: 599, column: 2, scope: !8523)
!8598 = distinct !DISubprogram(name: "get_start_time_cyc", scope: !811, file: !811, line: 98, type: !3055, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8599 = !DILocation(line: 100, column: 18, scope: !8598)
!8600 = !DILocation(line: 100, column: 16, scope: !8598)
!8601 = !DILocation(line: 101, column: 1, scope: !8598)
!8602 = distinct !DISubprogram(name: "k_thread_create", scope: !4386, file: !4386, line: 24, type: !8603, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8611)
!8603 = !DISubroutineType(types: !8604)
!8604 = !{!8270, !8271, !8605, !185, !680, !106, !106, !106, !107, !152, !8607}
!8605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8606, size: 32)
!8606 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !681, line: 44, baseType: !697)
!8607 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !686, line: 67, baseType: !8608)
!8608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 65, size: 64, elements: !8609)
!8609 = !{!8610}
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !8608, file: !686, line: 66, baseType: !685, size: 64)
!8611 = !{!8612, !8613, !8614, !8615, !8616, !8617, !8618, !8619, !8620, !8621}
!8612 = !DILocalVariable(name: "new_thread", arg: 1, scope: !8602, file: !4386, line: 24, type: !8271)
!8613 = !DILocalVariable(name: "stack", arg: 2, scope: !8602, file: !4386, line: 24, type: !8605)
!8614 = !DILocalVariable(name: "stack_size", arg: 3, scope: !8602, file: !4386, line: 24, type: !185)
!8615 = !DILocalVariable(name: "entry", arg: 4, scope: !8602, file: !4386, line: 24, type: !680)
!8616 = !DILocalVariable(name: "p1", arg: 5, scope: !8602, file: !4386, line: 24, type: !106)
!8617 = !DILocalVariable(name: "p2", arg: 6, scope: !8602, file: !4386, line: 24, type: !106)
!8618 = !DILocalVariable(name: "p3", arg: 7, scope: !8602, file: !4386, line: 24, type: !106)
!8619 = !DILocalVariable(name: "prio", arg: 8, scope: !8602, file: !4386, line: 24, type: !107)
!8620 = !DILocalVariable(name: "options", arg: 9, scope: !8602, file: !4386, line: 24, type: !152)
!8621 = !DILocalVariable(name: "delay", arg: 10, scope: !8602, file: !4386, line: 24, type: !8607)
!8622 = !DILocation(line: 0, scope: !8602)
!8623 = !DILocation(line: 49, column: 2, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8602, file: !4386, line: 49, column: 2)
!8625 = !{i64 2152248335}
!8626 = !DILocation(line: 50, column: 9, scope: !8602)
!8627 = !DILocation(line: 50, column: 2, scope: !8602)
!8628 = distinct !DISubprogram(name: "k_object_access_grant", scope: !8629, file: !8629, line: 24, type: !8630, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8632)
!8629 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!8630 = !DISubroutineType(types: !8631)
!8631 = !{null, !13, !8271}
!8632 = !{!8633, !8634}
!8633 = !DILocalVariable(name: "object", arg: 1, scope: !8628, file: !8629, line: 24, type: !13)
!8634 = !DILocalVariable(name: "thread", arg: 2, scope: !8628, file: !8629, line: 24, type: !8271)
!8635 = !DILocation(line: 0, scope: !8628)
!8636 = !DILocation(line: 34, column: 2, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8628, file: !8629, line: 34, column: 2)
!8638 = !{i64 2151764755}
!8639 = !DILocation(line: 36, column: 1, scope: !8628)
!8640 = distinct !DISubprogram(name: "k_thread_name_set", scope: !4386, file: !4386, line: 391, type: !8641, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8643)
!8641 = !DISubroutineType(types: !8642)
!8642 = !{!107, !8270, !118}
!8643 = !{!8644, !8645}
!8644 = !DILocalVariable(name: "thread", arg: 1, scope: !8640, file: !4386, line: 391, type: !8270)
!8645 = !DILocalVariable(name: "str", arg: 2, scope: !8640, file: !4386, line: 391, type: !118)
!8646 = !DILocation(line: 0, scope: !8640)
!8647 = !DILocation(line: 400, column: 2, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8640, file: !4386, line: 400, column: 2)
!8649 = !{i64 2152249763}
!8650 = !DILocation(line: 401, column: 9, scope: !8640)
!8651 = !DILocation(line: 401, column: 2, scope: !8640)
!8652 = distinct !DISubprogram(name: "k_thread_start", scope: !4386, file: !4386, line: 205, type: !8268, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8653)
!8653 = !{!8654}
!8654 = !DILocalVariable(name: "thread", arg: 1, scope: !8652, file: !4386, line: 205, type: !8270)
!8655 = !DILocation(line: 0, scope: !8652)
!8656 = !DILocation(line: 214, column: 2, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8652, file: !4386, line: 214, column: 2)
!8658 = !{i64 2152249015}
!8659 = !DILocation(line: 215, column: 2, scope: !8652)
!8660 = !DILocation(line: 216, column: 1, scope: !8652)
!8661 = distinct !DISubprogram(name: "k_thread_join", scope: !4386, file: !4386, line: 74, type: !8662, scopeLine: 75, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8664)
!8662 = !DISubroutineType(types: !8663)
!8663 = !{!107, !8271, !8607}
!8664 = !{!8665, !8666}
!8665 = !DILocalVariable(name: "thread", arg: 1, scope: !8661, file: !4386, line: 74, type: !8271)
!8666 = !DILocalVariable(name: "timeout", arg: 2, scope: !8661, file: !4386, line: 74, type: !8607)
!8667 = !DILocation(line: 0, scope: !8661)
!8668 = !DILocation(line: 83, column: 2, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8661, file: !4386, line: 83, column: 2)
!8670 = !{i64 2152248471}
!8671 = !DILocation(line: 84, column: 9, scope: !8661)
!8672 = !DILocation(line: 84, column: 2, scope: !8661)
!8673 = distinct !DISubprogram(name: "run_test_rules", scope: !654, file: !654, line: 207, type: !8674, scopeLine: 208, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8676)
!8674 = !DISubroutineType(types: !8675)
!8675 = !{null, !145, !8346, !106}
!8676 = !{!8677, !8678, !8679, !8680}
!8677 = !DILocalVariable(name: "is_before", arg: 1, scope: !8673, file: !654, line: 207, type: !145)
!8678 = !DILocalVariable(name: "test", arg: 2, scope: !8673, file: !654, line: 207, type: !8346)
!8679 = !DILocalVariable(name: "data", arg: 3, scope: !8673, file: !654, line: 207, type: !106)
!8680 = !DILocalVariable(name: "rule", scope: !8681, file: !654, line: 209, type: !8682)
!8681 = distinct !DILexicalBlock(scope: !8673, file: !654, line: 209, column: 2)
!8682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8683, size: 32)
!8683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_test_rule", file: !114, line: 437, size: 64, elements: !8684)
!8684 = !{!8685, !8692}
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "before_each", scope: !8683, file: !114, line: 438, baseType: !8686, size: 32)
!8686 = !DIDerivedType(tag: DW_TAG_typedef, name: "ztest_rule_cb", file: !114, line: 434, baseType: !8687)
!8687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8688, size: 32)
!8688 = !DISubroutineType(types: !8689)
!8689 = !{null, !8690, !106}
!8690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8691, size: 32)
!8691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8347)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "after_each", scope: !8683, file: !114, line: 439, baseType: !8686, size: 32, offset: 32)
!8693 = !DILocation(line: 0, scope: !8673)
!8694 = !DILocation(line: 0, scope: !8681)
!8695 = !DILocation(line: 209, column: 2, scope: !8681)
!8696 = !DILocation(line: 217, column: 1, scope: !8673)
!8697 = !DILocation(line: 211, column: 17, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8699, file: !654, line: 211, column: 7)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !654, line: 210, column: 49)
!8700 = distinct !DILexicalBlock(scope: !8681, file: !654, line: 209, column: 2)
!8701 = !DILocation(line: 211, column: 26, scope: !8698)
!8702 = !DILocation(line: 211, column: 20, scope: !8698)
!8703 = !DILocation(line: 211, column: 7, scope: !8699)
!8704 = !DILocation(line: 213, column: 34, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8698, file: !654, line: 213, column: 14)
!8706 = !DILocation(line: 213, column: 28, scope: !8705)
!8707 = !DILocation(line: 213, column: 14, scope: !8698)
!8708 = !DILocation(line: 0, scope: !8698)
!8709 = !DILocation(line: 210, column: 41, scope: !8700)
!8710 = !DILocation(line: 210, column: 12, scope: !8700)
!8711 = distinct !{!8711, !8695, !8712}
!8712 = !DILocation(line: 216, column: 2, scope: !8681)
!8713 = distinct !DISubprogram(name: "get_test_duration_ms", scope: !811, file: !811, line: 103, type: !3055, scopeLine: 104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8714)
!8714 = !{!8715}
!8715 = !DILocalVariable(name: "spend_cycle", scope: !8713, file: !811, line: 105, type: !152)
!8716 = !DILocation(line: 105, column: 25, scope: !8713)
!8717 = !DILocation(line: 105, column: 44, scope: !8713)
!8718 = !DILocation(line: 105, column: 42, scope: !8713)
!8719 = !DILocation(line: 0, scope: !8713)
!8720 = !DILocation(line: 107, column: 18, scope: !8713)
!8721 = !DILocation(line: 107, column: 16, scope: !8713)
!8722 = !DILocation(line: 108, column: 1, scope: !8713)
!8723 = distinct !DISubprogram(name: "cleanup_test", scope: !654, file: !654, line: 76, type: !8724, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8726)
!8724 = !DISubroutineType(types: !8725)
!8725 = !{!107, !8346}
!8726 = !{!8727, !8728, !8729}
!8727 = !DILocalVariable(name: "test", arg: 1, scope: !8723, file: !654, line: 76, type: !8346)
!8728 = !DILocalVariable(name: "ret", scope: !8723, file: !654, line: 78, type: !107)
!8729 = !DILocalVariable(name: "mock_status", scope: !8723, file: !654, line: 79, type: !107)
!8730 = !DILocation(line: 0, scope: !8723)
!8731 = !DILocation(line: 89, column: 3, scope: !8732)
!8732 = distinct !DILexicalBlock(scope: !8733, file: !654, line: 88, column: 41)
!8733 = distinct !DILexicalBlock(scope: !8723, file: !654, line: 88, column: 6)
!8734 = !DILocation(line: 103, column: 2, scope: !8723)
!8735 = distinct !DISubprogram(name: "get_final_test_result", scope: !654, file: !654, line: 236, type: !8736, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8738)
!8736 = !DISubroutineType(types: !8737)
!8737 = !{!107, !8690, !107}
!8738 = !{!8739, !8740, !8741, !8742}
!8739 = !DILocalVariable(name: "test", arg: 1, scope: !8735, file: !654, line: 236, type: !8690)
!8740 = !DILocalVariable(name: "ret", arg: 2, scope: !8735, file: !654, line: 236, type: !107)
!8741 = !DILocalVariable(name: "expected_result", scope: !8735, file: !654, line: 238, type: !675)
!8742 = !DILocalVariable(name: "expectation", scope: !8743, file: !654, line: 240, type: !8744)
!8743 = distinct !DILexicalBlock(scope: !8735, file: !654, line: 240, column: 2)
!8744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8745, size: 32)
!8745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ztest_expected_result_entry", file: !114, line: 47, size: 96, elements: !8746)
!8746 = !{!8747, !8748, !8749}
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "test_suite_name", scope: !8745, file: !114, line: 48, baseType: !118, size: 32)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "test_name", scope: !8745, file: !114, line: 49, baseType: !118, size: 32, offset: 32)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "expected_result", scope: !8745, file: !114, line: 50, baseType: !675, size: 32, offset: 64)
!8750 = !DILocation(line: 0, scope: !8735)
!8751 = !DILocation(line: 0, scope: !8743)
!8752 = !DILocation(line: 240, column: 2, scope: !8743)
!8753 = !DILocation(line: 243, column: 27, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !654, line: 243, column: 7)
!8755 = distinct !DILexicalBlock(scope: !8756, file: !654, line: 242, column: 75)
!8756 = distinct !DILexicalBlock(scope: !8743, file: !654, line: 240, column: 2)
!8757 = !DILocation(line: 243, column: 44, scope: !8754)
!8758 = !DILocation(line: 243, column: 7, scope: !8754)
!8759 = !DILocation(line: 243, column: 50, scope: !8754)
!8760 = !DILocation(line: 243, column: 55, scope: !8754)
!8761 = !DILocation(line: 244, column: 27, scope: !8754)
!8762 = !DILocation(line: 244, column: 50, scope: !8754)
!8763 = !DILocation(line: 244, column: 7, scope: !8754)
!8764 = !DILocation(line: 244, column: 67, scope: !8754)
!8765 = !DILocation(line: 243, column: 7, scope: !8755)
!8766 = !DILocation(line: 242, column: 60, scope: !8756)
!8767 = !DILocation(line: 242, column: 19, scope: !8756)
!8768 = distinct !{!8768, !8752, !8769}
!8769 = !DILocation(line: 248, column: 2, scope: !8743)
!8770 = !DILocation(line: 245, column: 35, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8754, file: !654, line: 244, column: 73)
!8772 = !DILocation(line: 250, column: 6, scope: !8735)
!8773 = !DILocation(line: 255, column: 15, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8775, file: !654, line: 250, column: 53)
!8775 = distinct !DILexicalBlock(scope: !8735, file: !654, line: 250, column: 6)
!8776 = !DILocation(line: 255, column: 10, scope: !8774)
!8777 = !DILocation(line: 255, column: 3, scope: !8774)
!8778 = !DILocation(line: 262, column: 15, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !654, line: 257, column: 53)
!8780 = distinct !DILexicalBlock(scope: !8735, file: !654, line: 257, column: 6)
!8781 = !DILocation(line: 262, column: 10, scope: !8779)
!8782 = !DILocation(line: 262, column: 3, scope: !8779)
!8783 = !DILocation(line: 266, column: 1, scope: !8735)
!8784 = distinct !DISubprogram(name: "TC_RESULT_TO_STR", scope: !811, file: !811, line: 81, type: !8785, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8787)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{!118, !107}
!8787 = !{!8788}
!8788 = !DILocalVariable(name: "result", arg: 1, scope: !8784, file: !811, line: 81, type: !107)
!8789 = !DILocation(line: 0, scope: !8784)
!8790 = !DILocation(line: 83, column: 2, scope: !8784)
!8791 = !DILocation(line: 0, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8784, file: !811, line: 83, column: 18)
!8793 = !DILocation(line: 93, column: 1, scope: !8784)
!8794 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !419, file: !419, line: 1675, type: !7228, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8795 = !DILocation(line: 1677, column: 9, scope: !8794)
!8796 = !DILocation(line: 1677, column: 2, scope: !8794)
!8797 = distinct !DISubprogram(name: "k_cyc_to_ms_ceil32", scope: !8798, file: !8798, line: 809, type: !7469, scopeLine: 810, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8799)
!8798 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8799 = !{!8800}
!8800 = !DILocalVariable(name: "t", arg: 1, scope: !8797, file: !8798, line: 809, type: !152)
!8801 = !DILocation(line: 0, scope: !8797)
!8802 = !DILocation(line: 812, column: 17, scope: !8797)
!8803 = !DILocalVariable(name: "t", arg: 1, scope: !8804, file: !8798, line: 102, type: !687)
!8804 = distinct !DISubprogram(name: "z_tmcvt", scope: !8798, file: !8798, line: 102, type: !8805, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8807)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!687, !687, !152, !152, !145, !145, !145, !145}
!8807 = !{!8803, !8808, !8809, !8810, !8811, !8812, !8813, !8814, !8815, !8816, !8817}
!8808 = !DILocalVariable(name: "from_hz", arg: 2, scope: !8804, file: !8798, line: 102, type: !152)
!8809 = !DILocalVariable(name: "to_hz", arg: 3, scope: !8804, file: !8798, line: 103, type: !152)
!8810 = !DILocalVariable(name: "const_hz", arg: 4, scope: !8804, file: !8798, line: 103, type: !145)
!8811 = !DILocalVariable(name: "result32", arg: 5, scope: !8804, file: !8798, line: 104, type: !145)
!8812 = !DILocalVariable(name: "round_up", arg: 6, scope: !8804, file: !8798, line: 104, type: !145)
!8813 = !DILocalVariable(name: "round_off", arg: 7, scope: !8804, file: !8798, line: 105, type: !145)
!8814 = !DILocalVariable(name: "mul_ratio", scope: !8804, file: !8798, line: 107, type: !145)
!8815 = !DILocalVariable(name: "div_ratio", scope: !8804, file: !8798, line: 109, type: !145)
!8816 = !DILocalVariable(name: "off", scope: !8804, file: !8798, line: 116, type: !687)
!8817 = !DILocalVariable(name: "rdivisor", scope: !8818, file: !8798, line: 119, type: !152)
!8818 = distinct !DILexicalBlock(scope: !8819, file: !8798, line: 118, column: 18)
!8819 = distinct !DILexicalBlock(scope: !8804, file: !8798, line: 118, column: 6)
!8820 = !DILocation(line: 0, scope: !8804, inlinedAt: !8821)
!8821 = distinct !DILocation(line: 812, column: 9, scope: !8797)
!8822 = !DILocation(line: 135, column: 5, scope: !8823, inlinedAt: !8821)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !8798, line: 134, column: 17)
!8824 = distinct !DILexicalBlock(scope: !8804, file: !8798, line: 134, column: 6)
!8825 = !DILocation(line: 136, column: 16, scope: !8826, inlinedAt: !8821)
!8826 = distinct !DILexicalBlock(scope: !8823, file: !8798, line: 136, column: 7)
!8827 = !DILocation(line: 812, column: 9, scope: !8797)
!8828 = !DILocation(line: 812, column: 2, scope: !8797)
!8829 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8830, file: !8830, line: 24, type: !7228, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!8830 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8831 = !DILocation(line: 26, column: 9, scope: !8829)
!8832 = !DILocation(line: 26, column: 2, scope: !8829)
!8833 = distinct !DISubprogram(name: "test_cb", scope: !654, file: !654, line: 507, type: !683, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8834)
!8834 = !{!8835, !8836, !8837, !8838, !8839}
!8835 = !DILocalVariable(name: "a", arg: 1, scope: !8833, file: !654, line: 507, type: !106)
!8836 = !DILocalVariable(name: "b", arg: 2, scope: !8833, file: !654, line: 507, type: !106)
!8837 = !DILocalVariable(name: "c", arg: 3, scope: !8833, file: !654, line: 507, type: !106)
!8838 = !DILocalVariable(name: "suite", scope: !8833, file: !654, line: 509, type: !8394)
!8839 = !DILocalVariable(name: "test", scope: !8833, file: !654, line: 510, type: !8346)
!8840 = !DILocation(line: 0, scope: !8833)
!8841 = !DILocation(line: 510, column: 33, scope: !8833)
!8842 = !DILocation(line: 512, column: 14, scope: !8833)
!8843 = !DILocation(line: 513, column: 2, scope: !8833)
!8844 = !DILocation(line: 514, column: 13, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8833, file: !654, line: 514, column: 6)
!8846 = !DILocation(line: 514, column: 6, scope: !8845)
!8847 = !DILocation(line: 514, column: 6, scope: !8833)
!8848 = !DILocation(line: 515, column: 3, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8845, file: !654, line: 514, column: 21)
!8850 = !DILocation(line: 516, column: 2, scope: !8849)
!8851 = !DILocation(line: 517, column: 2, scope: !8833)
!8852 = !DILocation(line: 518, column: 14, scope: !8833)
!8853 = !DILocation(line: 519, column: 1, scope: !8833)
!8854 = distinct !DISubprogram(name: "run_test_functions", scope: !654, file: !654, line: 219, type: !8855, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8857)
!8855 = !DISubroutineType(types: !8856)
!8856 = !{null, !8394, !8346, !106}
!8857 = !{!8858, !8859, !8860}
!8858 = !DILocalVariable(name: "suite", arg: 1, scope: !8854, file: !654, line: 219, type: !8394)
!8859 = !DILocalVariable(name: "test", arg: 2, scope: !8854, file: !654, line: 219, type: !8346)
!8860 = !DILocalVariable(name: "data", arg: 3, scope: !8854, file: !654, line: 220, type: !106)
!8861 = !DILocation(line: 0, scope: !8854)
!8862 = !DILocation(line: 222, column: 8, scope: !8854)
!8863 = !DILocation(line: 223, column: 8, scope: !8854)
!8864 = !DILocation(line: 223, column: 2, scope: !8854)
!8865 = !DILocation(line: 224, column: 1, scope: !8854)
!8866 = distinct !DISubprogram(name: "z_impl_ztest_run_test_suites", scope: !654, file: !654, line: 929, type: !8867, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8869)
!8867 = !DISubroutineType(types: !8868)
!8868 = !{!107, !13}
!8869 = !{!8870, !8871, !8872}
!8870 = !DILocalVariable(name: "state", arg: 1, scope: !8866, file: !654, line: 929, type: !13)
!8871 = !DILocalVariable(name: "count", scope: !8866, file: !654, line: 931, type: !107)
!8872 = !DILocalVariable(name: "ptr", scope: !8873, file: !654, line: 954, type: !8394)
!8873 = distinct !DILexicalBlock(scope: !8866, file: !654, line: 954, column: 2)
!8874 = !DILocation(line: 0, scope: !8866)
!8875 = !DILocation(line: 933, column: 6, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8866, file: !654, line: 933, column: 6)
!8877 = !DILocation(line: 933, column: 18, scope: !8876)
!8878 = !DILocation(line: 933, column: 6, scope: !8866)
!8879 = !DILocation(line: 0, scope: !8873)
!8880 = !DILocation(line: 954, column: 2, scope: !8873)
!8881 = !DILocation(line: 956, column: 12, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !654, line: 955, column: 48)
!8883 = distinct !DILexicalBlock(scope: !8873, file: !654, line: 954, column: 2)
!8884 = !DILocation(line: 956, column: 9, scope: !8882)
!8885 = !DILocation(line: 960, column: 7, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8882, file: !654, line: 960, column: 7)
!8887 = !DILocation(line: 960, column: 19, scope: !8886)
!8888 = !DILocation(line: 955, column: 41, scope: !8883)
!8889 = !DILocation(line: 960, column: 50, scope: !8886)
!8890 = distinct !{!8890, !8880, !8891}
!8891 = !DILocation(line: 964, column: 2, scope: !8873)
!8892 = !DILocation(line: 967, column: 2, scope: !8866)
!8893 = !DILocation(line: 969, column: 2, scope: !8866)
!8894 = !DILocation(line: 970, column: 1, scope: !8866)
!8895 = distinct !DISubprogram(name: "__ztest_run_test_suite", scope: !654, file: !654, line: 907, type: !8896, scopeLine: 908, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8898)
!8896 = !DISubroutineType(types: !8897)
!8897 = !{!107, !8394, !13}
!8898 = !{!8899, !8900, !8901, !8902, !8903, !8905}
!8899 = !DILocalVariable(name: "ptr", arg: 1, scope: !8895, file: !654, line: 907, type: !8394)
!8900 = !DILocalVariable(name: "state", arg: 2, scope: !8895, file: !654, line: 907, type: !13)
!8901 = !DILocalVariable(name: "stats", scope: !8895, file: !654, line: 909, type: !8405)
!8902 = !DILocalVariable(name: "count", scope: !8895, file: !654, line: 910, type: !107)
!8903 = !DILocalVariable(name: "i", scope: !8904, file: !654, line: 914, type: !107)
!8904 = distinct !DILexicalBlock(scope: !8895, file: !654, line: 914, column: 2)
!8905 = !DILocalVariable(name: "fail", scope: !8906, file: !654, line: 916, type: !107)
!8906 = distinct !DILexicalBlock(scope: !8907, file: !654, line: 915, column: 47)
!8907 = distinct !DILexicalBlock(scope: !8908, file: !654, line: 915, column: 7)
!8908 = distinct !DILexicalBlock(scope: !8909, file: !654, line: 914, column: 47)
!8909 = distinct !DILexicalBlock(scope: !8904, file: !654, line: 914, column: 2)
!8910 = !DILocation(line: 0, scope: !8895)
!8911 = !DILocation(line: 909, column: 41, scope: !8895)
!8912 = !DILocation(line: 912, column: 2, scope: !8895)
!8913 = !DILocation(line: 0, scope: !8904)
!8914 = !DILocation(line: 915, column: 7, scope: !8907)
!8915 = !DILocation(line: 915, column: 7, scope: !8908)
!8916 = !DILocation(line: 916, column: 15, scope: !8906)
!8917 = !DILocation(line: 0, scope: !8906)
!8918 = !DILocation(line: 919, column: 20, scope: !8906)
!8919 = !DILocation(line: 920, column: 31, scope: !8906)
!8920 = !DILocation(line: 920, column: 25, scope: !8906)
!8921 = !DILocation(line: 921, column: 3, scope: !8906)
!8922 = !DILocation(line: 0, scope: !8907)
!8923 = !DILocation(line: 926, column: 2, scope: !8895)
!8924 = distinct !DISubprogram(name: "__ztest_show_suite_summary", scope: !654, file: !654, line: 886, type: !3055, scopeLine: 887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8925)
!8925 = !{!8926}
!8926 = !DILocalVariable(name: "ptr", scope: !8927, file: !654, line: 894, type: !8394)
!8927 = distinct !DILexicalBlock(scope: !8924, file: !654, line: 894, column: 2)
!8928 = !DILocation(line: 892, column: 2, scope: !8924)
!8929 = !DILocation(line: 0, scope: !8927)
!8930 = !DILocation(line: 894, column: 2, scope: !8927)
!8931 = !DILocation(line: 903, column: 2, scope: !8924)
!8932 = !DILocation(line: 905, column: 1, scope: !8924)
!8933 = !DILocation(line: 898, column: 3, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !654, line: 895, column: 48)
!8935 = distinct !DILexicalBlock(scope: !8927, file: !654, line: 894, column: 2)
!8936 = !DILocation(line: 895, column: 41, scope: !8935)
!8937 = !DILocation(line: 895, column: 11, scope: !8935)
!8938 = distinct !{!8938, !8930, !8939}
!8939 = !DILocation(line: 902, column: 2, scope: !8927)
!8940 = distinct !DISubprogram(name: "__ztest_show_suite_summary_verbose", scope: !654, file: !654, line: 852, type: !8941, scopeLine: 853, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8943)
!8941 = !DISubroutineType(types: !8942)
!8942 = !{null, !8394}
!8943 = !{!8944, !8945, !8946, !8947}
!8944 = !DILocalVariable(name: "suite", arg: 1, scope: !8940, file: !654, line: 852, type: !8394)
!8945 = !DILocalVariable(name: "test", scope: !8940, file: !654, line: 854, type: !8346)
!8946 = !DILocalVariable(name: "tc_result", scope: !8940, file: !654, line: 855, type: !107)
!8947 = !DILocalVariable(name: "flush_frequency", scope: !8940, file: !654, line: 856, type: !107)
!8948 = !DILocation(line: 0, scope: !8940)
!8949 = !DILocation(line: 858, column: 2, scope: !8940)
!8950 = !DILocation(line: 860, column: 47, scope: !8940)
!8951 = !DILocation(line: 860, column: 18, scope: !8940)
!8952 = !DILocation(line: 860, column: 60, scope: !8940)
!8953 = !DILocation(line: 860, column: 2, scope: !8940)
!8954 = !DILocation(line: 861, column: 13, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8956, file: !654, line: 861, column: 7)
!8956 = distinct !DILexicalBlock(scope: !8940, file: !654, line: 860, column: 70)
!8957 = !DILocation(line: 861, column: 20, scope: !8955)
!8958 = !DILocation(line: 861, column: 47, scope: !8955)
!8959 = !DILocation(line: 861, column: 31, scope: !8955)
!8960 = !DILocation(line: 861, column: 7, scope: !8956)
!8961 = !DILocation(line: 863, column: 27, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8955, file: !654, line: 863, column: 14)
!8963 = !DILocation(line: 863, column: 38, scope: !8962)
!8964 = !DILocation(line: 0, scope: !8955)
!8965 = !DILocation(line: 869, column: 3, scope: !8956)
!8966 = distinct !{!8966, !8953, !8967}
!8967 = !DILocation(line: 880, column: 2, scope: !8940)
!8968 = !DILocation(line: 881, column: 2, scope: !8940)
!8969 = !DILocation(line: 883, column: 1, scope: !8940)
!8970 = distinct !DISubprogram(name: "__ztest_show_suite_summary_oneline", scope: !654, file: !654, line: 801, type: !8941, scopeLine: 802, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !8971)
!8971 = !{!8972, !8973, !8974, !8975, !8976, !8977, !8978, !8979, !8980, !8981, !8982, !8983, !8984, !8985}
!8972 = !DILocalVariable(name: "suite", arg: 1, scope: !8970, file: !654, line: 801, type: !8394)
!8973 = !DILocalVariable(name: "distinct_pass", scope: !8970, file: !654, line: 803, type: !107)
!8974 = !DILocalVariable(name: "distinct_fail", scope: !8970, file: !654, line: 803, type: !107)
!8975 = !DILocalVariable(name: "distinct_skip", scope: !8970, file: !654, line: 803, type: !107)
!8976 = !DILocalVariable(name: "distinct_total", scope: !8970, file: !654, line: 803, type: !107)
!8977 = !DILocalVariable(name: "effective_total", scope: !8970, file: !654, line: 804, type: !107)
!8978 = !DILocalVariable(name: "expanded_pass", scope: !8970, file: !654, line: 805, type: !107)
!8979 = !DILocalVariable(name: "expanded_passrate", scope: !8970, file: !654, line: 805, type: !107)
!8980 = !DILocalVariable(name: "passrate_major", scope: !8970, file: !654, line: 806, type: !107)
!8981 = !DILocalVariable(name: "passrate_minor", scope: !8970, file: !654, line: 806, type: !107)
!8982 = !DILocalVariable(name: "passrate_tail", scope: !8970, file: !654, line: 806, type: !107)
!8983 = !DILocalVariable(name: "suite_result", scope: !8970, file: !654, line: 807, type: !107)
!8984 = !DILocalVariable(name: "test", scope: !8970, file: !654, line: 809, type: !8346)
!8985 = !DILocalVariable(name: "suite_duration_worst_ms", scope: !8970, file: !654, line: 810, type: !32)
!8986 = !DILocation(line: 0, scope: !8970)
!8987 = !DILocation(line: 813, column: 47, scope: !8970)
!8988 = !DILocation(line: 813, column: 18, scope: !8970)
!8989 = !DILocation(line: 813, column: 60, scope: !8970)
!8990 = !DILocation(line: 813, column: 2, scope: !8970)
!8991 = !DILocation(line: 814, column: 17, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8970, file: !654, line: 813, column: 70)
!8993 = !DILocation(line: 815, column: 36, scope: !8992)
!8994 = !DILocation(line: 815, column: 43, scope: !8992)
!8995 = !DILocation(line: 815, column: 27, scope: !8992)
!8996 = !DILocation(line: 816, column: 20, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8992, file: !654, line: 816, column: 7)
!8998 = !DILocation(line: 816, column: 47, scope: !8997)
!8999 = !DILocation(line: 816, column: 31, scope: !8997)
!9000 = !DILocation(line: 816, column: 7, scope: !8992)
!9001 = !DILocation(line: 817, column: 17, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8997, file: !654, line: 816, column: 58)
!9003 = !DILocation(line: 818, column: 3, scope: !9002)
!9004 = !DILocation(line: 818, column: 27, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8997, file: !654, line: 818, column: 14)
!9006 = !DILocation(line: 818, column: 38, scope: !9005)
!9007 = !DILocation(line: 818, column: 14, scope: !8997)
!9008 = !DILocation(line: 819, column: 17, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9005, file: !654, line: 818, column: 65)
!9010 = !DILocation(line: 820, column: 3, scope: !9009)
!9011 = !DILocation(line: 821, column: 17, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9005, file: !654, line: 820, column: 10)
!9013 = distinct !{!9013, !8990, !9014}
!9014 = !DILocation(line: 823, column: 2, scope: !8970)
!9015 = !DILocation(line: 825, column: 20, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !8970, file: !654, line: 825, column: 6)
!9017 = !DILocation(line: 825, column: 6, scope: !8970)
!9018 = !DILocation(line: 829, column: 33, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9016, file: !654, line: 828, column: 9)
!9020 = !DILocation(line: 829, column: 18, scope: !9019)
!9021 = !DILocation(line: 830, column: 36, scope: !9019)
!9022 = !DILocation(line: 831, column: 33, scope: !9019)
!9023 = !DILocation(line: 832, column: 37, scope: !9019)
!9024 = !DILocation(line: 833, column: 38, scope: !9019)
!9025 = !DILocation(line: 834, column: 56, scope: !9019)
!9026 = !DILocation(line: 834, column: 39, scope: !9019)
!9027 = !DILocation(line: 834, column: 64, scope: !9019)
!9028 = !DILocation(line: 835, column: 78, scope: !9019)
!9029 = !DILocation(line: 835, column: 61, scope: !9019)
!9030 = !DILocation(line: 836, column: 21, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9019, file: !654, line: 836, column: 7)
!9032 = !DILocation(line: 836, column: 7, scope: !9019)
!9033 = !DILocation(line: 0, scope: !9016)
!9034 = !DILocation(line: 841, column: 2, scope: !8970)
!9035 = !DILocation(line: 849, column: 1, scope: !8970)
!9036 = distinct !DISubprogram(name: "__ztest_init_unit_test_result_for_suite", scope: !654, file: !654, line: 773, type: !8941, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !9037)
!9037 = !{!9038, !9039}
!9038 = !DILocalVariable(name: "suite", arg: 1, scope: !9036, file: !654, line: 773, type: !8394)
!9039 = !DILocalVariable(name: "test", scope: !9036, file: !654, line: 775, type: !8346)
!9040 = !DILocation(line: 0, scope: !9036)
!9041 = !DILocation(line: 777, column: 47, scope: !9036)
!9042 = !DILocation(line: 777, column: 18, scope: !9036)
!9043 = !DILocation(line: 777, column: 60, scope: !9036)
!9044 = !DILocation(line: 777, column: 2, scope: !9036)
!9045 = !DILocation(line: 778, column: 9, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9036, file: !654, line: 777, column: 70)
!9047 = !DILocation(line: 778, column: 16, scope: !9046)
!9048 = !DILocation(line: 778, column: 26, scope: !9046)
!9049 = !DILocation(line: 779, column: 9, scope: !9046)
!9050 = !DILocation(line: 779, column: 16, scope: !9046)
!9051 = !DILocation(line: 779, column: 27, scope: !9046)
!9052 = !DILocation(line: 780, column: 9, scope: !9046)
!9053 = !DILocation(line: 780, column: 16, scope: !9046)
!9054 = !DILocation(line: 780, column: 27, scope: !9046)
!9055 = !DILocation(line: 781, column: 9, scope: !9046)
!9056 = !DILocation(line: 781, column: 16, scope: !9046)
!9057 = !DILocation(line: 781, column: 27, scope: !9046)
!9058 = !DILocation(line: 782, column: 9, scope: !9046)
!9059 = !DILocation(line: 782, column: 16, scope: !9046)
!9060 = !DILocation(line: 782, column: 34, scope: !9046)
!9061 = distinct !{!9061, !9044, !9062}
!9062 = !DILocation(line: 783, column: 2, scope: !9036)
!9063 = !DILocation(line: 784, column: 1, scope: !9036)
!9064 = distinct !DISubprogram(name: "ztest_verify_all_test_suites_ran", scope: !654, file: !654, line: 972, type: !3055, scopeLine: 973, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !9065)
!9065 = !{!9066, !9067, !9068}
!9066 = !DILocalVariable(name: "all_tests_run", scope: !9064, file: !654, line: 974, type: !145)
!9067 = !DILocalVariable(name: "suite", scope: !9064, file: !654, line: 975, type: !8394)
!9068 = !DILocalVariable(name: "test", scope: !9064, file: !654, line: 976, type: !8346)
!9069 = !DILocation(line: 0, scope: !9064)
!9070 = !DILocation(line: 979, column: 3, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9072, file: !654, line: 979, column: 3)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !654, line: 978, column: 47)
!9073 = distinct !DILexicalBlock(scope: !9064, file: !654, line: 978, column: 6)
!9074 = !DILocation(line: 987, column: 3, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9072, file: !654, line: 987, column: 3)
!9076 = !DILocation(line: 981, column: 15, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !654, line: 981, column: 8)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !654, line: 980, column: 17)
!9079 = distinct !DILexicalBlock(scope: !9071, file: !654, line: 979, column: 3)
!9080 = !DILocation(line: 981, column: 22, scope: !9077)
!9081 = !DILocation(line: 981, column: 32, scope: !9077)
!9082 = !DILocation(line: 981, column: 8, scope: !9078)
!9083 = !DILocation(line: 982, column: 59, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9077, file: !654, line: 981, column: 37)
!9085 = !DILocation(line: 982, column: 5, scope: !9084)
!9086 = !DILocation(line: 984, column: 4, scope: !9084)
!9087 = !DILocation(line: 980, column: 8, scope: !9079)
!9088 = !DILocation(line: 979, column: 52, scope: !9079)
!9089 = distinct !{!9089, !9070, !9090}
!9090 = !DILocation(line: 985, column: 3, scope: !9071)
!9091 = !DILocation(line: 988, column: 40, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9093, file: !654, line: 987, column: 86)
!9093 = distinct !DILexicalBlock(scope: !9075, file: !654, line: 987, column: 3)
!9094 = !DILocation(line: 988, column: 12, scope: !9092)
!9095 = !DILocation(line: 989, column: 14, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9092, file: !654, line: 989, column: 8)
!9097 = !DILocation(line: 989, column: 8, scope: !9092)
!9098 = !DILocation(line: 992, column: 17, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9096, file: !654, line: 989, column: 23)
!9100 = !DILocation(line: 992, column: 29, scope: !9099)
!9101 = !DILocation(line: 990, column: 5, scope: !9099)
!9102 = !DILocation(line: 994, column: 4, scope: !9099)
!9103 = !DILocation(line: 987, column: 78, scope: !9093)
!9104 = !DILocation(line: 987, column: 49, scope: !9093)
!9105 = distinct !{!9105, !9074, !9106}
!9106 = !DILocation(line: 995, column: 3, scope: !9075)
!9107 = !DILocation(line: 997, column: 7, scope: !9072)
!9108 = !DILocation(line: 998, column: 16, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !654, line: 997, column: 23)
!9110 = distinct !DILexicalBlock(scope: !9072, file: !654, line: 997, column: 7)
!9111 = !DILocation(line: 999, column: 3, scope: !9109)
!9112 = !DILocation(line: 1002, column: 2, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9064, file: !654, line: 1002, column: 2)
!9114 = !DILocation(line: 1003, column: 13, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9116, file: !654, line: 1003, column: 7)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !654, line: 1002, column: 85)
!9117 = distinct !DILexicalBlock(scope: !9113, file: !654, line: 1002, column: 2)
!9118 = !DILocation(line: 1003, column: 20, scope: !9115)
!9119 = !DILocation(line: 1003, column: 46, scope: !9115)
!9120 = !DILocation(line: 1003, column: 31, scope: !9115)
!9121 = !DILocation(line: 1003, column: 72, scope: !9115)
!9122 = !DILocation(line: 1003, column: 57, scope: !9115)
!9123 = !DILocation(line: 1004, column: 20, scope: !9115)
!9124 = !DILocation(line: 1003, column: 83, scope: !9115)
!9125 = !DILocation(line: 1003, column: 7, scope: !9116)
!9126 = !DILocation(line: 1005, column: 41, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9115, file: !654, line: 1004, column: 31)
!9128 = !DILocation(line: 1005, column: 64, scope: !9127)
!9129 = !DILocation(line: 1005, column: 4, scope: !9127)
!9130 = !DILocation(line: 1006, column: 16, scope: !9127)
!9131 = !DILocation(line: 1007, column: 3, scope: !9127)
!9132 = !DILocation(line: 1002, column: 77, scope: !9117)
!9133 = !DILocation(line: 1002, column: 48, scope: !9117)
!9134 = distinct !{!9134, !9112, !9135}
!9135 = !DILocation(line: 1008, column: 2, scope: !9113)
!9136 = !DILocation(line: 1009, column: 1, scope: !9064)
!9137 = distinct !DISubprogram(name: "ztest_run_all", scope: !654, file: !654, line: 1011, type: !17, scopeLine: 1011, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !9138)
!9138 = !{!9139}
!9139 = !DILocalVariable(name: "state", arg: 1, scope: !9137, file: !654, line: 1011, type: !13)
!9140 = !DILocation(line: 0, scope: !9137)
!9141 = !DILocation(line: 1011, column: 51, scope: !9137)
!9142 = !DILocation(line: 1011, column: 41, scope: !9137)
!9143 = !DILocation(line: 1011, column: 67, scope: !9137)
!9144 = distinct !DISubprogram(name: "test_main", scope: !654, file: !654, line: 1013, type: !3055, scopeLine: 1014, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!9145 = !DILocation(line: 1015, column: 2, scope: !9144)
!9146 = !DILocation(line: 1017, column: 2, scope: !9144)
!9147 = !DILocation(line: 1018, column: 1, scope: !9144)
!9148 = distinct !DISubprogram(name: "main", scope: !654, file: !654, line: 1030, type: !3055, scopeLine: 1031, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !650, retainedNodes: !2175)
!9149 = !DILocation(line: 1046, column: 2, scope: !9148)
!9150 = !DILocation(line: 1047, column: 2, scope: !9148)
!9151 = !DILocation(line: 1071, column: 1, scope: !9148)
!9152 = distinct !DISubprogram(name: "z_ztest_run_all", scope: !820, file: !820, line: 30, type: !17, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9153)
!9153 = !{!9154}
!9154 = !DILocalVariable(name: "state", arg: 1, scope: !9152, file: !820, line: 30, type: !13)
!9155 = !DILocation(line: 0, scope: !9152)
!9156 = !DILocation(line: 32, column: 2, scope: !9152)
!9157 = !DILocation(line: 33, column: 1, scope: !9152)
!9158 = distinct !DISubprogram(name: "z_ztest_should_suite_run", scope: !820, file: !820, line: 45, type: !827, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9159)
!9159 = !{!9160, !9161, !9162}
!9160 = !DILocalVariable(name: "state", arg: 1, scope: !9158, file: !820, line: 45, type: !13)
!9161 = !DILocalVariable(name: "suite", arg: 2, scope: !9158, file: !820, line: 45, type: !829)
!9162 = !DILocalVariable(name: "run_suite", scope: !9158, file: !820, line: 47, type: !145)
!9163 = !DILocation(line: 0, scope: !9158)
!9164 = !DILocation(line: 49, column: 13, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9158, file: !820, line: 49, column: 6)
!9166 = !DILocation(line: 49, column: 23, scope: !9165)
!9167 = !DILocation(line: 49, column: 6, scope: !9158)
!9168 = !DILocation(line: 50, column: 15, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9165, file: !820, line: 49, column: 32)
!9170 = !DILocation(line: 51, column: 2, scope: !9169)
!9171 = !DILocation(line: 53, column: 2, scope: !9158)
!9172 = distinct !DISubprogram(name: "z_ztest_should_test_run", scope: !820, file: !820, line: 65, type: !848, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9173)
!9173 = !{!9174, !9175}
!9174 = !DILocalVariable(name: "suite", arg: 1, scope: !9172, file: !820, line: 65, type: !118)
!9175 = !DILocalVariable(name: "test", arg: 2, scope: !9172, file: !820, line: 65, type: !118)
!9176 = !DILocation(line: 0, scope: !9172)
!9177 = !DILocation(line: 67, column: 2, scope: !9172)
!9178 = distinct !DISubprogram(name: "ztest_run_test_suites", scope: !9179, file: !9179, line: 24, type: !8867, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9180)
!9179 = !DIFile(filename: "zephyr/include/generated/syscalls/ztest_test_new.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!9180 = !{!9181}
!9181 = !DILocalVariable(name: "state", arg: 1, scope: !9178, file: !9179, line: 24, type: !13)
!9182 = !DILocation(line: 0, scope: !9178)
!9183 = !DILocation(line: 32, column: 2, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9178, file: !9179, line: 32, column: 2)
!9185 = !{i64 2152344086}
!9186 = !DILocation(line: 33, column: 9, scope: !9178)
!9187 = !DILocation(line: 33, column: 2, scope: !9178)
!9188 = distinct !DISubprogram(name: "ztest_relative_filename", scope: !820, file: !820, line: 20, type: !9189, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !817, retainedNodes: !9191)
!9189 = !DISubroutineType(types: !9190)
!9190 = !{!118, !118}
!9191 = !{!9192}
!9192 = !DILocalVariable(name: "file", arg: 1, scope: !9188, file: !820, line: 20, type: !118)
!9193 = !DILocation(line: 0, scope: !9188)
!9194 = !DILocation(line: 22, column: 2, scope: !9188)
!9195 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !924, file: !924, line: 368, type: !977, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9196)
!9196 = !{!9197}
!9197 = !DILocalVariable(name: "dev", arg: 1, scope: !9195, file: !924, line: 368, type: !953)
!9198 = !DILocation(line: 0, scope: !9195)
!9199 = !DILocation(line: 370, column: 2, scope: !9195)
!9200 = !DILocation(line: 371, column: 1, scope: !9195)
!9201 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !924, file: !924, line: 243, type: !9202, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9204)
!9202 = !DISubroutineType(types: !9203)
!9203 = !{null, !107, !107, !953}
!9204 = !{!9205, !9206, !9207, !9208, !9210}
!9205 = !DILocalVariable(name: "min", arg: 1, scope: !9201, file: !924, line: 243, type: !107)
!9206 = !DILocalVariable(name: "max", arg: 2, scope: !9201, file: !924, line: 243, type: !107)
!9207 = !DILocalVariable(name: "dev", arg: 3, scope: !9201, file: !924, line: 243, type: !953)
!9208 = !DILocalVariable(name: "data", scope: !9201, file: !924, line: 245, type: !9209)
!9209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 32)
!9210 = !DILocalVariable(name: "line", scope: !9201, file: !924, line: 246, type: !107)
!9211 = !DILocation(line: 0, scope: !9201)
!9212 = !DILocation(line: 245, column: 38, scope: !9201)
!9213 = !DILocation(line: 249, column: 24, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !924, line: 249, column: 2)
!9215 = distinct !DILexicalBlock(scope: !9201, file: !924, line: 249, column: 2)
!9216 = !DILocation(line: 249, column: 2, scope: !9215)
!9217 = !DILocation(line: 251, column: 7, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !924, line: 251, column: 7)
!9219 = distinct !DILexicalBlock(scope: !9214, file: !924, line: 249, column: 39)
!9220 = !DILocation(line: 251, column: 7, scope: !9219)
!9221 = !DILocation(line: 253, column: 4, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9218, file: !924, line: 251, column: 36)
!9223 = !DILocation(line: 256, column: 24, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9222, file: !924, line: 256, column: 8)
!9225 = !DILocation(line: 256, column: 9, scope: !9224)
!9226 = !DILocation(line: 256, column: 8, scope: !9222)
!9227 = !DILocation(line: 260, column: 43, scope: !9222)
!9228 = !DILocation(line: 260, column: 4, scope: !9222)
!9229 = !DILocation(line: 261, column: 3, scope: !9222)
!9230 = !DILocation(line: 249, column: 35, scope: !9214)
!9231 = distinct !{!9231, !9216, !9232}
!9232 = !DILocation(line: 262, column: 2, scope: !9215)
!9233 = !DILocation(line: 263, column: 1, scope: !9201)
!9234 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !924, file: !924, line: 158, type: !214, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9235)
!9235 = !{!9236}
!9236 = !DILocalVariable(name: "line", arg: 1, scope: !9234, file: !924, line: 158, type: !107)
!9237 = !DILocation(line: 0, scope: !9234)
!9238 = !DILocation(line: 170, column: 38, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9240, file: !924, line: 160, column: 17)
!9240 = distinct !DILexicalBlock(scope: !9234, file: !924, line: 160, column: 6)
!9241 = !DILocation(line: 170, column: 10, scope: !9239)
!9242 = !DILocation(line: 176, column: 1, scope: !9234)
!9243 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !924, file: !924, line: 183, type: !9244, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9246)
!9244 = !DISubroutineType(types: !9245)
!9245 = !{null, !107}
!9246 = !{!9247}
!9247 = !DILocalVariable(name: "line", arg: 1, scope: !9243, file: !924, line: 183, type: !107)
!9248 = !DILocation(line: 0, scope: !9243)
!9249 = !DILocation(line: 195, column: 28, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9251, file: !924, line: 185, column: 17)
!9251 = distinct !DILexicalBlock(scope: !9243, file: !924, line: 185, column: 6)
!9252 = !DILocation(line: 195, column: 3, scope: !9250)
!9253 = !DILocation(line: 200, column: 1, scope: !9243)
!9254 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !9255, file: !9255, line: 971, type: !5911, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9256)
!9255 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9256 = !{!9257}
!9257 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9254, file: !9255, line: 971, type: !152)
!9258 = !DILocation(line: 0, scope: !9254)
!9259 = !DILocation(line: 973, column: 3, scope: !9254)
!9260 = !DILocation(line: 974, column: 1, scope: !9254)
!9261 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !9255, file: !9255, line: 891, type: !7469, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9262)
!9262 = !{!9263}
!9263 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9261, file: !9255, line: 891, type: !152)
!9264 = !DILocation(line: 0, scope: !9261)
!9265 = !DILocation(line: 893, column: 11, scope: !9261)
!9266 = !DILocation(line: 893, column: 40, scope: !9261)
!9267 = !DILocation(line: 893, column: 3, scope: !9261)
!9268 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !924, file: !924, line: 304, type: !977, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9269)
!9269 = !{!9270}
!9270 = !DILocalVariable(name: "dev", arg: 1, scope: !9268, file: !924, line: 304, type: !953)
!9271 = !DILocation(line: 0, scope: !9268)
!9272 = !DILocation(line: 306, column: 2, scope: !9268)
!9273 = !DILocation(line: 307, column: 1, scope: !9268)
!9274 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !924, file: !924, line: 299, type: !977, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9275)
!9275 = !{!9276}
!9276 = !DILocalVariable(name: "dev", arg: 1, scope: !9274, file: !924, line: 299, type: !953)
!9277 = !DILocation(line: 0, scope: !9274)
!9278 = !DILocation(line: 301, column: 2, scope: !9274)
!9279 = !DILocation(line: 302, column: 1, scope: !9274)
!9280 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !924, file: !924, line: 294, type: !977, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9281)
!9281 = !{!9282}
!9282 = !DILocalVariable(name: "dev", arg: 1, scope: !9280, file: !924, line: 294, type: !953)
!9283 = !DILocation(line: 0, scope: !9280)
!9284 = !DILocation(line: 296, column: 2, scope: !9280)
!9285 = !DILocation(line: 297, column: 1, scope: !9280)
!9286 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !924, file: !924, line: 289, type: !977, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9287)
!9287 = !{!9288}
!9288 = !DILocalVariable(name: "dev", arg: 1, scope: !9286, file: !924, line: 289, type: !953)
!9289 = !DILocation(line: 0, scope: !9286)
!9290 = !DILocation(line: 291, column: 2, scope: !9286)
!9291 = !DILocation(line: 292, column: 1, scope: !9286)
!9292 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !924, file: !924, line: 373, type: !977, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9293)
!9293 = !{!9294}
!9294 = !DILocalVariable(name: "dev", arg: 1, scope: !9292, file: !924, line: 373, type: !953)
!9295 = !DILocation(line: 0, scope: !9292)
!9296 = !DILocation(line: 375, column: 2, scope: !9292)
!9297 = !DILocation(line: 376, column: 1, scope: !9292)
!9298 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !924, file: !924, line: 284, type: !977, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9299)
!9299 = !{!9300}
!9300 = !DILocalVariable(name: "dev", arg: 1, scope: !9298, file: !924, line: 284, type: !953)
!9301 = !DILocation(line: 0, scope: !9298)
!9302 = !DILocation(line: 286, column: 2, scope: !9298)
!9303 = !DILocation(line: 287, column: 1, scope: !9298)
!9304 = distinct !DISubprogram(name: "stm32_exti_init", scope: !924, file: !924, line: 416, type: !951, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9305)
!9305 = !{!9306}
!9306 = !DILocalVariable(name: "dev", arg: 1, scope: !9304, file: !924, line: 416, type: !953)
!9307 = !DILocation(line: 0, scope: !9304)
!9308 = !DILocation(line: 418, column: 2, scope: !9304)
!9309 = !DILocation(line: 420, column: 2, scope: !9304)
!9310 = !DILocation(line: 0, scope: !976)
!9311 = !DILocation(line: 493, column: 2, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !976, file: !924, line: 493, column: 2)
!9313 = !DILocation(line: 497, column: 2, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !976, file: !924, line: 497, column: 2)
!9315 = !DILocation(line: 507, column: 2, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !976, file: !924, line: 507, column: 2)
!9317 = !DILocation(line: 512, column: 2, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !976, file: !924, line: 512, column: 2)
!9319 = !DILocation(line: 516, column: 2, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !976, file: !924, line: 516, column: 2)
!9321 = !DILocation(line: 523, column: 2, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !976, file: !924, line: 523, column: 2)
!9323 = !DILocation(line: 527, column: 2, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !976, file: !924, line: 527, column: 2)
!9325 = !DILocation(line: 607, column: 1, scope: !976)
!9326 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !924, file: !924, line: 112, type: !9244, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9327)
!9327 = !{!9328, !9329}
!9328 = !DILocalVariable(name: "line", arg: 1, scope: !9326, file: !924, line: 112, type: !107)
!9329 = !DILocalVariable(name: "irqnum", scope: !9326, file: !924, line: 114, type: !107)
!9330 = !DILocation(line: 0, scope: !9326)
!9331 = !DILocation(line: 121, column: 11, scope: !9326)
!9332 = !DILocation(line: 130, column: 26, scope: !9326)
!9333 = !DILocation(line: 130, column: 2, scope: !9326)
!9334 = !DILocation(line: 134, column: 2, scope: !9326)
!9335 = !DILocation(line: 135, column: 1, scope: !9326)
!9336 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !9255, file: !9255, line: 274, type: !5911, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9337)
!9337 = !{!9338}
!9338 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9336, file: !9255, line: 274, type: !152)
!9339 = !DILocation(line: 0, scope: !9336)
!9340 = !DILocation(line: 276, column: 3, scope: !9336)
!9341 = !DILocation(line: 277, column: 1, scope: !9336)
!9342 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !924, file: !924, line: 137, type: !9244, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9343)
!9343 = !{!9344}
!9344 = !DILocalVariable(name: "line", arg: 1, scope: !9342, file: !924, line: 137, type: !107)
!9345 = !DILocation(line: 0, scope: !9342)
!9346 = !DILocation(line: 141, column: 11, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9342, file: !924, line: 141, column: 6)
!9348 = !DILocation(line: 141, column: 6, scope: !9342)
!9349 = !DILocation(line: 145, column: 28, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9347, file: !924, line: 141, column: 17)
!9351 = !DILocation(line: 145, column: 3, scope: !9350)
!9352 = !DILocation(line: 147, column: 2, scope: !9350)
!9353 = !DILocation(line: 151, column: 1, scope: !9342)
!9354 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !9255, file: !9255, line: 322, type: !5911, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9355)
!9355 = !{!9356}
!9356 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9354, file: !9255, line: 322, type: !152)
!9357 = !DILocation(line: 0, scope: !9354)
!9358 = !DILocation(line: 324, column: 3, scope: !9354)
!9359 = !DILocation(line: 325, column: 1, scope: !9354)
!9360 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !924, file: !924, line: 202, type: !9361, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9363)
!9361 = !DISubroutineType(types: !9362)
!9362 = !{null, !107, !107}
!9363 = !{!9364, !9365}
!9364 = !DILocalVariable(name: "line", arg: 1, scope: !9360, file: !924, line: 202, type: !107)
!9365 = !DILocalVariable(name: "trigger", arg: 2, scope: !9360, file: !924, line: 202, type: !107)
!9366 = !DILocation(line: 0, scope: !9360)
!9367 = !DILocation(line: 211, column: 2, scope: !9360)
!9368 = !DILocation(line: 213, column: 36, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9360, file: !924, line: 211, column: 19)
!9370 = !DILocation(line: 213, column: 3, scope: !9369)
!9371 = !DILocation(line: 214, column: 3, scope: !9369)
!9372 = !DILocation(line: 215, column: 3, scope: !9369)
!9373 = !DILocation(line: 217, column: 35, scope: !9369)
!9374 = !DILocation(line: 217, column: 3, scope: !9369)
!9375 = !DILocation(line: 218, column: 3, scope: !9369)
!9376 = !DILocation(line: 219, column: 3, scope: !9369)
!9377 = !DILocation(line: 221, column: 36, scope: !9369)
!9378 = !DILocation(line: 221, column: 3, scope: !9369)
!9379 = !DILocation(line: 222, column: 3, scope: !9369)
!9380 = !DILocation(line: 223, column: 3, scope: !9369)
!9381 = !DILocation(line: 225, column: 35, scope: !9369)
!9382 = !DILocation(line: 225, column: 3, scope: !9369)
!9383 = !DILocation(line: 226, column: 3, scope: !9369)
!9384 = !DILocation(line: 227, column: 3, scope: !9369)
!9385 = !DILocation(line: 232, column: 1, scope: !9360)
!9386 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !9255, file: !9255, line: 618, type: !5911, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9387)
!9387 = !{!9388}
!9388 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9386, file: !9255, line: 618, type: !152)
!9389 = !DILocation(line: 0, scope: !9386)
!9390 = !DILocation(line: 620, column: 3, scope: !9386)
!9391 = !DILocation(line: 622, column: 1, scope: !9386)
!9392 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !9255, file: !9255, line: 754, type: !5911, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9393)
!9393 = !{!9394}
!9394 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9392, file: !9255, line: 754, type: !152)
!9395 = !DILocation(line: 0, scope: !9392)
!9396 = !DILocation(line: 756, column: 3, scope: !9392)
!9397 = !DILocation(line: 757, column: 1, scope: !9392)
!9398 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !9255, file: !9255, line: 572, type: !5911, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9399)
!9399 = !{!9400}
!9400 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9398, file: !9255, line: 572, type: !152)
!9401 = !DILocation(line: 0, scope: !9398)
!9402 = !DILocation(line: 574, column: 3, scope: !9398)
!9403 = !DILocation(line: 576, column: 1, scope: !9398)
!9404 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !9255, file: !9255, line: 710, type: !5911, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9405)
!9405 = !{!9406}
!9406 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !9404, file: !9255, line: 710, type: !152)
!9407 = !DILocation(line: 0, scope: !9404)
!9408 = !DILocation(line: 712, column: 3, scope: !9404)
!9409 = !DILocation(line: 713, column: 1, scope: !9404)
!9410 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !924, file: !924, line: 433, type: !9411, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9413)
!9411 = !DISubroutineType(types: !9412)
!9412 = !{!107, !107, !964, !106}
!9413 = !{!9414, !9415, !9416, !9417, !9419}
!9414 = !DILocalVariable(name: "line", arg: 1, scope: !9410, file: !924, line: 433, type: !107)
!9415 = !DILocalVariable(name: "cb", arg: 2, scope: !9410, file: !924, line: 433, type: !964)
!9416 = !DILocalVariable(name: "arg", arg: 3, scope: !9410, file: !924, line: 433, type: !106)
!9417 = !DILocalVariable(name: "dev", scope: !9410, file: !924, line: 435, type: !9418)
!9418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!9419 = !DILocalVariable(name: "data", scope: !9410, file: !924, line: 436, type: !9209)
!9420 = !DILocation(line: 0, scope: !9410)
!9421 = !DILocation(line: 438, column: 21, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9410, file: !924, line: 438, column: 6)
!9423 = !DILocation(line: 438, column: 6, scope: !9422)
!9424 = !DILocation(line: 438, column: 6, scope: !9410)
!9425 = !DILocation(line: 442, column: 20, scope: !9410)
!9426 = !DILocation(line: 443, column: 17, scope: !9410)
!9427 = !DILocation(line: 443, column: 22, scope: !9410)
!9428 = !DILocation(line: 445, column: 2, scope: !9410)
!9429 = !DILocation(line: 446, column: 1, scope: !9410)
!9430 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !924, file: !924, line: 448, type: !9244, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !852, retainedNodes: !9431)
!9431 = !{!9432, !9433, !9434}
!9432 = !DILocalVariable(name: "line", arg: 1, scope: !9430, file: !924, line: 448, type: !107)
!9433 = !DILocalVariable(name: "dev", scope: !9430, file: !924, line: 450, type: !9418)
!9434 = !DILocalVariable(name: "data", scope: !9430, file: !924, line: 451, type: !9209)
!9435 = !DILocation(line: 0, scope: !9430)
!9436 = !DILocation(line: 453, column: 17, scope: !9430)
!9437 = !DILocation(line: 453, column: 20, scope: !9430)
!9438 = !DILocation(line: 454, column: 17, scope: !9430)
!9439 = !DILocation(line: 454, column: 22, scope: !9430)
!9440 = !DILocation(line: 455, column: 1, scope: !9430)
!9441 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1079, file: !1079, line: 183, type: !1115, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9442)
!9442 = !{!9443, !9444, !9445, !9446, !9447}
!9443 = !DILocalVariable(name: "dev", arg: 1, scope: !9441, file: !1079, line: 183, type: !1106)
!9444 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9441, file: !1079, line: 184, type: !1117)
!9445 = !DILocalVariable(name: "pclken", scope: !9441, file: !1079, line: 186, type: !1069)
!9446 = !DILocalVariable(name: "reg", scope: !9441, file: !1079, line: 187, type: !2932)
!9447 = !DILocalVariable(name: "reg_val", scope: !9441, file: !1079, line: 188, type: !152)
!9448 = !DILocation(line: 0, scope: !9441)
!9449 = !DILocation(line: 192, column: 6, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9441, file: !1079, line: 192, column: 6)
!9451 = !DILocation(line: 192, column: 6, scope: !9441)
!9452 = !DILocation(line: 197, column: 52, scope: !9441)
!9453 = !DILocation(line: 197, column: 8, scope: !9441)
!9454 = !DILocation(line: 198, column: 12, scope: !9441)
!9455 = !DILocation(line: 199, column: 21, scope: !9441)
!9456 = !DILocation(line: 199, column: 10, scope: !9441)
!9457 = !DILocation(line: 200, column: 7, scope: !9441)
!9458 = !DILocation(line: 202, column: 2, scope: !9441)
!9459 = !DILocation(line: 203, column: 1, scope: !9441)
!9460 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1079, file: !1079, line: 205, type: !1115, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9461)
!9461 = !{!9462, !9463, !9464, !9465, !9466}
!9462 = !DILocalVariable(name: "dev", arg: 1, scope: !9460, file: !1079, line: 205, type: !1106)
!9463 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9460, file: !1079, line: 206, type: !1117)
!9464 = !DILocalVariable(name: "pclken", scope: !9460, file: !1079, line: 208, type: !1069)
!9465 = !DILocalVariable(name: "reg", scope: !9460, file: !1079, line: 209, type: !2932)
!9466 = !DILocalVariable(name: "reg_val", scope: !9460, file: !1079, line: 210, type: !152)
!9467 = !DILocation(line: 0, scope: !9460)
!9468 = !DILocation(line: 214, column: 6, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9460, file: !1079, line: 214, column: 6)
!9470 = !DILocation(line: 214, column: 6, scope: !9460)
!9471 = !DILocation(line: 219, column: 52, scope: !9460)
!9472 = !DILocation(line: 219, column: 8, scope: !9460)
!9473 = !DILocation(line: 220, column: 12, scope: !9460)
!9474 = !DILocation(line: 221, column: 22, scope: !9460)
!9475 = !DILocation(line: 221, column: 13, scope: !9460)
!9476 = !DILocation(line: 221, column: 10, scope: !9460)
!9477 = !DILocation(line: 222, column: 7, scope: !9460)
!9478 = !DILocation(line: 224, column: 2, scope: !9460)
!9479 = !DILocation(line: 225, column: 1, scope: !9460)
!9480 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1079, file: !1079, line: 262, type: !1131, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9481)
!9481 = !{!9482, !9483, !9484, !9485, !9486, !9487, !9488}
!9482 = !DILocalVariable(name: "clock", arg: 1, scope: !9480, file: !1079, line: 262, type: !1106)
!9483 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9480, file: !1079, line: 263, type: !1117)
!9484 = !DILocalVariable(name: "rate", arg: 3, scope: !9480, file: !1079, line: 264, type: !1075)
!9485 = !DILocalVariable(name: "pclken", scope: !9480, file: !1079, line: 266, type: !1069)
!9486 = !DILocalVariable(name: "ahb_clock", scope: !9480, file: !1079, line: 273, type: !152)
!9487 = !DILocalVariable(name: "apb1_clock", scope: !9480, file: !1079, line: 274, type: !152)
!9488 = !DILocalVariable(name: "apb2_clock", scope: !9480, file: !1079, line: 276, type: !152)
!9489 = !DILocation(line: 0, scope: !9480)
!9490 = !DILocation(line: 273, column: 23, scope: !9480)
!9491 = !DILocation(line: 299, column: 18, scope: !9480)
!9492 = !DILocation(line: 299, column: 2, scope: !9480)
!9493 = !DILocation(line: 374, column: 3, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9480, file: !1079, line: 299, column: 23)
!9495 = !DILocation(line: 379, column: 3, scope: !9494)
!9496 = !DILocation(line: 389, column: 3, scope: !9494)
!9497 = !DILocation(line: 0, scope: !9494)
!9498 = !DILocation(line: 396, column: 1, scope: !9480)
!9499 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1079, file: !1079, line: 227, type: !1147, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9500)
!9500 = !{!9501, !9502, !9503, !9504, !9505, !9506, !9507, !9508}
!9501 = !DILocalVariable(name: "dev", arg: 1, scope: !9499, file: !1079, line: 227, type: !1106)
!9502 = !DILocalVariable(name: "sub_system", arg: 2, scope: !9499, file: !1079, line: 228, type: !1117)
!9503 = !DILocalVariable(name: "data", arg: 3, scope: !9499, file: !1079, line: 229, type: !106)
!9504 = !DILocalVariable(name: "pclken", scope: !9499, file: !1079, line: 233, type: !1069)
!9505 = !DILocalVariable(name: "reg", scope: !9499, file: !1079, line: 234, type: !2932)
!9506 = !DILocalVariable(name: "reg_val", scope: !9499, file: !1079, line: 235, type: !152)
!9507 = !DILocalVariable(name: "dt_val", scope: !9499, file: !1079, line: 235, type: !152)
!9508 = !DILocalVariable(name: "err", scope: !9499, file: !1079, line: 236, type: !107)
!9509 = !DILocation(line: 0, scope: !9499)
!9510 = !DILocation(line: 241, column: 30, scope: !9499)
!9511 = !DILocation(line: 241, column: 8, scope: !9499)
!9512 = !DILocation(line: 242, column: 10, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9499, file: !1079, line: 242, column: 6)
!9514 = !DILocation(line: 242, column: 6, scope: !9499)
!9515 = !DILocation(line: 247, column: 11, scope: !9499)
!9516 = !DILocation(line: 248, column: 6, scope: !9499)
!9517 = !DILocation(line: 247, column: 44, scope: !9499)
!9518 = !DILocation(line: 250, column: 6, scope: !9499)
!9519 = !DILocation(line: 249, column: 52, scope: !9499)
!9520 = !DILocation(line: 249, column: 8, scope: !9499)
!9521 = !DILocation(line: 251, column: 12, scope: !9499)
!9522 = !DILocation(line: 252, column: 10, scope: !9499)
!9523 = !DILocation(line: 253, column: 7, scope: !9499)
!9524 = !DILocation(line: 255, column: 2, scope: !9499)
!9525 = !DILocation(line: 260, column: 1, scope: !9499)
!9526 = distinct !DISubprogram(name: "enabled_clock", scope: !1079, file: !1079, line: 100, type: !9527, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9529)
!9527 = !DISubroutineType(types: !9528)
!9528 = !{!107, !152}
!9529 = !{!9530, !9531}
!9530 = !DILocalVariable(name: "src_clk", arg: 1, scope: !9526, file: !1079, line: 100, type: !152)
!9531 = !DILocalVariable(name: "r", scope: !9526, file: !1079, line: 102, type: !107)
!9532 = !DILocation(line: 0, scope: !9526)
!9533 = !DILocation(line: 104, column: 2, scope: !9526)
!9534 = !DILocation(line: 180, column: 2, scope: !9526)
!9535 = !DILocation(line: 181, column: 1, scope: !9526)
!9536 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1079, file: !1079, line: 641, type: !1104, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9537)
!9537 = !{!9538, !9539, !9540}
!9538 = !DILocalVariable(name: "dev", arg: 1, scope: !9536, file: !1079, line: 641, type: !1106)
!9539 = !DILocalVariable(name: "old_flash_freq", scope: !9536, file: !1079, line: 664, type: !152)
!9540 = !DILocalVariable(name: "new_flash_freq", scope: !9536, file: !1079, line: 665, type: !152)
!9541 = !DILocation(line: 0, scope: !9536)
!9542 = !DILocation(line: 646, column: 2, scope: !9536)
!9543 = !DILocation(line: 667, column: 19, scope: !9536)
!9544 = !DILocation(line: 674, column: 21, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9536, file: !1079, line: 674, column: 6)
!9546 = !DILocation(line: 674, column: 6, scope: !9536)
!9547 = !DILocation(line: 675, column: 3, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9545, file: !1079, line: 674, column: 59)
!9549 = !DILocation(line: 676, column: 2, scope: !9548)
!9550 = !DILocation(line: 680, column: 2, scope: !9536)
!9551 = !DILocation(line: 683, column: 2, scope: !9536)
!9552 = !DILocation(line: 690, column: 3, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9554, file: !1079, line: 689, column: 9)
!9554 = distinct !DILexicalBlock(scope: !9536, file: !1079, line: 685, column: 6)
!9555 = !DILocation(line: 695, column: 2, scope: !9536)
!9556 = !DILocation(line: 696, column: 2, scope: !9536)
!9557 = !DILocation(line: 696, column: 9, scope: !9536)
!9558 = !DILocation(line: 696, column: 34, scope: !9536)
!9559 = distinct !{!9559, !9556, !9560}
!9560 = !DILocation(line: 697, column: 2, scope: !9536)
!9561 = !DILocation(line: 720, column: 21, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9536, file: !1079, line: 720, column: 6)
!9563 = !DILocation(line: 720, column: 6, scope: !9536)
!9564 = !DILocation(line: 721, column: 3, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9562, file: !1079, line: 720, column: 60)
!9566 = !DILocation(line: 722, column: 2, scope: !9565)
!9567 = !DILocation(line: 725, column: 18, scope: !9536)
!9568 = !DILocation(line: 728, column: 2, scope: !9536)
!9569 = !DILocation(line: 730, column: 2, scope: !9536)
!9570 = !DILocation(line: 745, column: 2, scope: !9536)
!9571 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !9572, file: !9572, line: 995, type: !7228, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9572 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9573 = !DILocation(line: 997, column: 21, scope: !9571)
!9574 = !DILocation(line: 997, column: 3, scope: !9571)
!9575 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1079, file: !1079, line: 507, type: !3055, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9576 = !DILocation(line: 534, column: 7, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9578, file: !1079, line: 534, column: 7)
!9578 = distinct !DILexicalBlock(scope: !9579, file: !1079, line: 532, column: 37)
!9579 = distinct !DILexicalBlock(scope: !9575, file: !1079, line: 532, column: 6)
!9580 = !DILocation(line: 534, column: 28, scope: !9577)
!9581 = !DILocation(line: 534, column: 7, scope: !9578)
!9582 = !DILocation(line: 536, column: 4, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9577, file: !1079, line: 534, column: 34)
!9584 = !DILocation(line: 537, column: 4, scope: !9583)
!9585 = !DILocation(line: 537, column: 11, scope: !9583)
!9586 = !DILocation(line: 537, column: 32, scope: !9583)
!9587 = distinct !{!9587, !9584, !9588}
!9588 = !DILocation(line: 539, column: 4, scope: !9583)
!9589 = !DILocation(line: 583, column: 3, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9591, file: !1079, line: 577, column: 37)
!9591 = distinct !DILexicalBlock(scope: !9575, file: !1079, line: 577, column: 6)
!9592 = !DILocation(line: 584, column: 3, scope: !9590)
!9593 = !DILocation(line: 584, column: 10, scope: !9590)
!9594 = !DILocation(line: 584, column: 31, scope: !9590)
!9595 = distinct !{!9595, !9592, !9596}
!9596 = !DILocation(line: 585, column: 3, scope: !9590)
!9597 = !DILocation(line: 627, column: 1, scope: !9575)
!9598 = distinct !DISubprogram(name: "set_up_plls", scope: !1079, file: !1079, line: 448, type: !3055, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9599 = !DILocation(line: 460, column: 6, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9598, file: !1079, line: 460, column: 6)
!9601 = !DILocation(line: 460, column: 31, scope: !9600)
!9602 = !DILocation(line: 460, column: 6, scope: !9598)
!9603 = !DILocation(line: 461, column: 3, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9600, file: !1079, line: 460, column: 67)
!9605 = !DILocation(line: 462, column: 3, scope: !9604)
!9606 = !DILocation(line: 463, column: 2, scope: !9604)
!9607 = !DILocation(line: 464, column: 2, scope: !9598)
!9608 = !DILocation(line: 496, column: 2, scope: !9598)
!9609 = !DILocation(line: 499, column: 2, scope: !9598)
!9610 = !DILocation(line: 500, column: 2, scope: !9598)
!9611 = !DILocation(line: 500, column: 9, scope: !9598)
!9612 = !DILocation(line: 500, column: 30, scope: !9598)
!9613 = distinct !{!9613, !9610, !9614}
!9614 = !DILocation(line: 502, column: 2, scope: !9598)
!9615 = !DILocation(line: 505, column: 1, scope: !9598)
!9616 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9572, file: !9572, line: 944, type: !5911, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9617)
!9617 = !{!9618}
!9618 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9616, file: !9572, line: 944, type: !152)
!9619 = !DILocation(line: 0, scope: !9616)
!9620 = !DILocation(line: 946, column: 3, scope: !9616)
!9621 = !DILocation(line: 947, column: 1, scope: !9616)
!9622 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9572, file: !9572, line: 910, type: !5911, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9623)
!9623 = !{!9624}
!9624 = !DILocalVariable(name: "Source", arg: 1, scope: !9622, file: !9572, line: 910, type: !152)
!9625 = !DILocation(line: 0, scope: !9622)
!9626 = !DILocation(line: 912, column: 3, scope: !9622)
!9627 = !DILocation(line: 913, column: 1, scope: !9622)
!9628 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9572, file: !9572, line: 924, type: !7228, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9629 = !DILocation(line: 926, column: 21, scope: !9628)
!9630 = !DILocation(line: 926, column: 3, scope: !9628)
!9631 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9572, file: !9572, line: 960, type: !5911, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9632)
!9632 = !{!9633}
!9633 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9631, file: !9572, line: 960, type: !152)
!9634 = !DILocation(line: 0, scope: !9631)
!9635 = !DILocation(line: 962, column: 3, scope: !9631)
!9636 = !DILocation(line: 963, column: 1, scope: !9631)
!9637 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9572, file: !9572, line: 976, type: !5911, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !9638)
!9638 = !{!9639}
!9639 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !9637, file: !9572, line: 976, type: !152)
!9640 = !DILocation(line: 0, scope: !9637)
!9641 = !DILocation(line: 978, column: 3, scope: !9637)
!9642 = !DILocation(line: 979, column: 1, scope: !9637)
!9643 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1079, file: !1079, line: 409, type: !3055, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9644 = !DILocation(line: 412, column: 6, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9643, file: !1079, line: 412, column: 6)
!9646 = !DILocation(line: 412, column: 27, scope: !9645)
!9647 = !DILocation(line: 412, column: 6, scope: !9643)
!9648 = !DILocation(line: 414, column: 3, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9645, file: !1079, line: 412, column: 33)
!9650 = !DILocation(line: 415, column: 3, scope: !9649)
!9651 = !DILocation(line: 415, column: 10, scope: !9649)
!9652 = !DILocation(line: 415, column: 31, scope: !9649)
!9653 = distinct !{!9653, !9650, !9654}
!9654 = !DILocation(line: 417, column: 3, scope: !9649)
!9655 = !DILocation(line: 421, column: 2, scope: !9643)
!9656 = !DILocation(line: 422, column: 2, scope: !9643)
!9657 = !DILocation(line: 422, column: 9, scope: !9643)
!9658 = !DILocation(line: 422, column: 34, scope: !9643)
!9659 = distinct !{!9659, !9656, !9660}
!9660 = !DILocation(line: 423, column: 2, scope: !9643)
!9661 = !DILocation(line: 424, column: 1, scope: !9643)
!9662 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !9572, file: !9572, line: 1180, type: !3055, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9663 = !DILocation(line: 1182, column: 3, scope: !9662)
!9664 = !DILocation(line: 1183, column: 1, scope: !9662)
!9665 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9572, file: !9572, line: 1169, type: !3055, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9666 = !DILocation(line: 1171, column: 3, scope: !9665)
!9667 = !DILocation(line: 1172, column: 1, scope: !9665)
!9668 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9572, file: !9572, line: 1190, type: !7228, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9669 = !DILocation(line: 1192, column: 12, scope: !9668)
!9670 = !DILocation(line: 1192, column: 11, scope: !9668)
!9671 = !DILocation(line: 1192, column: 3, scope: !9668)
!9672 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9572, file: !9572, line: 612, type: !7228, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9673 = !DILocation(line: 614, column: 12, scope: !9672)
!9674 = !DILocation(line: 614, column: 11, scope: !9672)
!9675 = !DILocation(line: 614, column: 3, scope: !9672)
!9676 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9572, file: !9572, line: 592, type: !3055, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9677 = !DILocation(line: 594, column: 3, scope: !9676)
!9678 = !DILocation(line: 595, column: 1, scope: !9676)
!9679 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !9572, file: !9572, line: 760, type: !3055, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9680 = !DILocation(line: 762, column: 3, scope: !9679)
!9681 = !DILocation(line: 763, column: 1, scope: !9679)
!9682 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !9572, file: !9572, line: 780, type: !7228, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1035, retainedNodes: !2175)
!9683 = !DILocation(line: 782, column: 12, scope: !9682)
!9684 = !DILocation(line: 782, column: 11, scope: !9682)
!9685 = !DILocation(line: 782, column: 3, scope: !9682)
!9686 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !9687, file: !9687, line: 48, type: !7228, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !2175)
!9687 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9688 = !DILocation(line: 51, column: 3, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9690, file: !9687, line: 50, column: 37)
!9690 = distinct !DILexicalBlock(scope: !9686, file: !9687, line: 50, column: 6)
!9691 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !9687, file: !9687, line: 64, type: !3055, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !2175)
!9692 = !DILocation(line: 66, column: 2, scope: !9691)
!9693 = !DILocation(line: 69, column: 1, scope: !9691)
!9694 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9572, file: !9572, line: 1219, type: !9695, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !9697)
!9695 = !DISubroutineType(types: !9696)
!9696 = !{null, !152, !152, !152}
!9697 = !{!9698, !9699, !9700}
!9698 = !DILocalVariable(name: "Source", arg: 1, scope: !9694, file: !9572, line: 1219, type: !152)
!9699 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !9694, file: !9572, line: 1219, type: !152)
!9700 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !9694, file: !9572, line: 1219, type: !152)
!9701 = !DILocation(line: 0, scope: !9694)
!9702 = !DILocation(line: 1221, column: 3, scope: !9694)
!9703 = !DILocation(line: 1222, column: 1, scope: !9694)
!9704 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !9687, file: !9687, line: 75, type: !7228, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !2175)
!9705 = !DILocation(line: 77, column: 9, scope: !9704)
!9706 = !DILocation(line: 77, column: 2, scope: !9704)
!9707 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !9687, file: !9687, line: 87, type: !3055, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !2175)
!9708 = !DILocation(line: 93, column: 2, scope: !9707)
!9709 = !DILocation(line: 95, column: 1, scope: !9707)
!9710 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !5910, file: !5910, line: 895, type: !5911, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2872, retainedNodes: !9711)
!9711 = !{!9712, !9713}
!9712 = !DILocalVariable(name: "Periphs", arg: 1, scope: !9710, file: !5910, line: 895, type: !152)
!9713 = !DILocalVariable(name: "tmpreg", scope: !9710, file: !5910, line: 897, type: !227)
!9714 = !DILocation(line: 0, scope: !9710)
!9715 = !DILocation(line: 897, column: 3, scope: !9710)
!9716 = !DILocation(line: 897, column: 17, scope: !9710)
!9717 = !DILocation(line: 898, column: 3, scope: !9710)
!9718 = !DILocation(line: 900, column: 12, scope: !9710)
!9719 = !DILocation(line: 900, column: 10, scope: !9710)
!9720 = !DILocation(line: 901, column: 9, scope: !9710)
!9721 = !DILocation(line: 902, column: 1, scope: !9710)
!9722 = distinct !DISubprogram(name: "uart_console_init", scope: !1208, file: !1208, line: 588, type: !1185, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9723)
!9723 = !{!9724}
!9724 = !DILocalVariable(name: "arg", arg: 1, scope: !9722, file: !1208, line: 588, type: !1163)
!9725 = !DILocation(line: 0, scope: !9722)
!9726 = !DILocation(line: 593, column: 7, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9722, file: !1208, line: 593, column: 6)
!9728 = !DILocation(line: 593, column: 6, scope: !9722)
!9729 = !DILocation(line: 597, column: 2, scope: !9722)
!9730 = !DILocation(line: 599, column: 2, scope: !9722)
!9731 = !DILocation(line: 600, column: 1, scope: !9722)
!9732 = distinct !DISubprogram(name: "device_is_ready", scope: !8107, file: !8107, line: 47, type: !9733, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9735)
!9733 = !DISubroutineType(types: !9734)
!9734 = !{!145, !1163}
!9735 = !{!9736}
!9736 = !DILocalVariable(name: "dev", arg: 1, scope: !9732, file: !8107, line: 47, type: !1163)
!9737 = !DILocation(line: 0, scope: !9732)
!9738 = !DILocation(line: 55, column: 2, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9732, file: !8107, line: 55, column: 2)
!9740 = !{i64 2152425223}
!9741 = !DILocation(line: 56, column: 9, scope: !9732)
!9742 = !DILocation(line: 56, column: 2, scope: !9732)
!9743 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1208, file: !1208, line: 573, type: !3055, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !2175)
!9744 = !DILocation(line: 576, column: 2, scope: !9743)
!9745 = !DILocation(line: 579, column: 2, scope: !9743)
!9746 = !DILocation(line: 581, column: 1, scope: !9743)
!9747 = distinct !DISubprogram(name: "console_out", scope: !1208, file: !1208, line: 77, type: !214, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9748)
!9748 = !{!9749}
!9749 = !DILocalVariable(name: "c", arg: 1, scope: !9747, file: !1208, line: 77, type: !107)
!9750 = !DILocation(line: 0, scope: !9747)
!9751 = !DILocation(line: 89, column: 11, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9747, file: !1208, line: 89, column: 6)
!9753 = !DILocation(line: 89, column: 6, scope: !9747)
!9754 = !DILocation(line: 90, column: 3, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9752, file: !1208, line: 89, column: 17)
!9756 = !DILocation(line: 91, column: 2, scope: !9755)
!9757 = !DILocation(line: 92, column: 34, scope: !9747)
!9758 = !DILocation(line: 92, column: 2, scope: !9747)
!9759 = !DILocation(line: 94, column: 2, scope: !9747)
!9760 = distinct !DISubprogram(name: "uart_poll_out", scope: !9761, file: !9761, line: 95, type: !1181, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9762)
!9761 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_wistrio/pytest")
!9762 = !{!9763, !9764}
!9763 = !DILocalVariable(name: "dev", arg: 1, scope: !9760, file: !9761, line: 95, type: !1163)
!9764 = !DILocalVariable(name: "out_char", arg: 2, scope: !9760, file: !9761, line: 95, type: !196)
!9765 = !DILocation(line: 0, scope: !9760)
!9766 = !DILocation(line: 105, column: 2, scope: !9767)
!9767 = distinct !DILexicalBlock(scope: !9760, file: !9761, line: 105, column: 2)
!9768 = !{i64 2152508614}
!9769 = !DILocation(line: 106, column: 2, scope: !9760)
!9770 = !DILocation(line: 107, column: 1, scope: !9760)
!9771 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1157, file: !1157, line: 574, type: !1181, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9772)
!9772 = !{!9773, !9774, !9775}
!9773 = !DILocalVariable(name: "dev", arg: 1, scope: !9771, file: !1157, line: 574, type: !1163)
!9774 = !DILocalVariable(name: "out_char", arg: 2, scope: !9771, file: !1157, line: 575, type: !196)
!9775 = !DILocalVariable(name: "api", scope: !9771, file: !1157, line: 577, type: !1154)
!9776 = !DILocation(line: 0, scope: !9771)
!9777 = !DILocation(line: 578, column: 40, scope: !9771)
!9778 = !DILocation(line: 580, column: 7, scope: !9771)
!9779 = !DILocation(line: 580, column: 2, scope: !9771)
!9780 = !DILocation(line: 581, column: 1, scope: !9771)
!9781 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !9733, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9782)
!9782 = !{!9783}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9781, file: !260, line: 730, type: !1163)
!9784 = !DILocation(line: 0, scope: !9781)
!9785 = !DILocation(line: 732, column: 9, scope: !9781)
!9786 = !DILocation(line: 732, column: 2, scope: !9781)
!9787 = distinct !DISubprogram(name: "uart_register_input", scope: !1208, file: !1208, line: 560, type: !9788, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1151, retainedNodes: !9835)
!9788 = !DISubroutineType(types: !9789)
!9789 = !{null, !9790, !9790, !9832}
!9790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9791, size: 32)
!9791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !419, line: 2208, size: 160, elements: !9792)
!9792 = !{!9793}
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !9791, file: !419, line: 2209, baseType: !9794, size: 160)
!9794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !419, line: 1709, size: 160, elements: !9795)
!9795 = !{!9796, !9809, !9813}
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !9794, file: !419, line: 1710, baseType: !9797, size: 64)
!9797 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !9798, line: 46, baseType: !9799)
!9798 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !9798, line: 41, size: 64, elements: !9800)
!9800 = !{!9801, !9808}
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9799, file: !9798, line: 42, baseType: !9802, size: 32)
!9802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9803, size: 32)
!9803 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !9798, line: 39, baseType: !9804)
!9804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !9798, line: 35, size: 32, elements: !9805)
!9805 = !{!9806}
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9804, file: !9798, line: 36, baseType: !9807, size: 32)
!9807 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !9798, line: 32, baseType: !152)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9799, file: !9798, line: 43, baseType: !9802, size: 32, offset: 32)
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9794, file: !419, line: 1711, baseType: !9810, size: 32, offset: 64)
!9810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !9811)
!9811 = !{!9812}
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9810, file: !433, line: 52, baseType: !22, size: 32)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9794, file: !419, line: 1712, baseType: !9814, size: 64, offset: 96)
!9814 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !9815)
!9815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !9816)
!9816 = !{!9817}
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9815, file: !358, line: 232, baseType: !9818, size: 64)
!9818 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !9819)
!9819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !9820)
!9820 = !{!9821, !9827}
!9821 = !DIDerivedType(tag: DW_TAG_member, scope: !9819, file: !332, line: 38, baseType: !9822, size: 32)
!9822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9819, file: !332, line: 38, size: 32, elements: !9823)
!9823 = !{!9824, !9826}
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9822, file: !332, line: 39, baseType: !9825, size: 32)
!9825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9819, size: 32)
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9822, file: !332, line: 40, baseType: !9825, size: 32)
!9827 = !DIDerivedType(tag: DW_TAG_member, scope: !9819, file: !332, line: 42, baseType: !9828, size: 32, offset: 32)
!9828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9819, file: !332, line: 42, size: 32, elements: !9829)
!9829 = !{!9830, !9831}
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9828, file: !332, line: 43, baseType: !9825, size: 32)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9828, file: !332, line: 44, baseType: !9825, size: 32)
!9832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9833, size: 32)
!9833 = !DISubroutineType(types: !9834)
!9834 = !{!195, !193, !195}
!9835 = !{!9836, !9837, !9838}
!9836 = !DILocalVariable(name: "avail", arg: 1, scope: !9787, file: !1208, line: 560, type: !9790)
!9837 = !DILocalVariable(name: "lines", arg: 2, scope: !9787, file: !1208, line: 560, type: !9790)
!9838 = !DILocalVariable(name: "completion", arg: 3, scope: !9787, file: !1208, line: 561, type: !9832)
!9839 = !DILocation(line: 0, scope: !9787)
!9840 = !DILocation(line: 566, column: 1, scope: !9787)
!9841 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1367, file: !1367, line: 523, type: !1233, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9842)
!9842 = !{!9843, !9844, !9845, !9846, !9847}
!9843 = !DILocalVariable(name: "dev", arg: 1, scope: !9841, file: !1367, line: 523, type: !1235)
!9844 = !DILocalVariable(name: "pin", arg: 2, scope: !9841, file: !1367, line: 524, type: !580)
!9845 = !DILocalVariable(name: "flags", arg: 3, scope: !9841, file: !1367, line: 524, type: !581)
!9846 = !DILocalVariable(name: "err", scope: !9841, file: !1367, line: 526, type: !107)
!9847 = !DILocalVariable(name: "pincfg", scope: !9841, file: !1367, line: 527, type: !107)
!9848 = !DILocation(line: 0, scope: !9841)
!9849 = !DILocation(line: 527, column: 2, scope: !9841)
!9850 = !DILocation(line: 532, column: 8, scope: !9841)
!9851 = !DILocation(line: 533, column: 10, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9841, file: !1367, line: 533, column: 6)
!9853 = !DILocation(line: 533, column: 6, scope: !9841)
!9854 = !DILocation(line: 543, column: 13, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9841, file: !1367, line: 543, column: 6)
!9856 = !DILocation(line: 543, column: 28, scope: !9855)
!9857 = !DILocation(line: 543, column: 6, scope: !9841)
!9858 = !DILocation(line: 544, column: 14, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9860, file: !1367, line: 544, column: 7)
!9860 = distinct !DILexicalBlock(scope: !9855, file: !1367, line: 543, column: 34)
!9861 = !DILocation(line: 544, column: 39, scope: !9859)
!9862 = !DILocation(line: 544, column: 7, scope: !9860)
!9863 = !DILocation(line: 545, column: 38, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9859, file: !1367, line: 544, column: 45)
!9865 = !DILocation(line: 545, column: 4, scope: !9864)
!9866 = !DILocation(line: 546, column: 3, scope: !9864)
!9867 = !DILocation(line: 546, column: 21, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9859, file: !1367, line: 546, column: 14)
!9869 = !DILocation(line: 546, column: 45, scope: !9868)
!9870 = !DILocation(line: 546, column: 14, scope: !9859)
!9871 = !DILocation(line: 547, column: 40, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9868, file: !1367, line: 546, column: 51)
!9873 = !DILocation(line: 547, column: 4, scope: !9872)
!9874 = !DILocation(line: 548, column: 3, scope: !9872)
!9875 = !DILocation(line: 551, column: 32, scope: !9841)
!9876 = !DILocation(line: 551, column: 37, scope: !9841)
!9877 = !DILocation(line: 551, column: 2, scope: !9841)
!9878 = !DILocation(line: 554, column: 6, scope: !9841)
!9879 = !DILocation(line: 562, column: 1, scope: !9841)
!9880 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1367, file: !1367, line: 410, type: !9881, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9883)
!9881 = !DISubroutineType(types: !9882)
!9882 = !{!107, !1235, !1075}
!9883 = !{!9884, !9885, !9886, !9888}
!9884 = !DILocalVariable(name: "dev", arg: 1, scope: !9880, file: !1367, line: 410, type: !1235)
!9885 = !DILocalVariable(name: "value", arg: 2, scope: !9880, file: !1367, line: 410, type: !1075)
!9886 = !DILocalVariable(name: "cfg", scope: !9880, file: !1367, line: 412, type: !9887)
!9887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!9888 = !DILocalVariable(name: "gpio", scope: !9880, file: !1367, line: 413, type: !1302)
!9889 = !DILocation(line: 0, scope: !9880)
!9890 = !DILocation(line: 412, column: 45, scope: !9880)
!9891 = !DILocation(line: 413, column: 44, scope: !9880)
!9892 = !DILocation(line: 415, column: 11, scope: !9880)
!9893 = !DILocation(line: 415, column: 9, scope: !9880)
!9894 = !DILocation(line: 417, column: 2, scope: !9880)
!9895 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1367, file: !1367, line: 420, type: !1256, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9896)
!9896 = !{!9897, !9898, !9899, !9900, !9901, !9902}
!9897 = !DILocalVariable(name: "dev", arg: 1, scope: !9895, file: !1367, line: 420, type: !1235)
!9898 = !DILocalVariable(name: "mask", arg: 2, scope: !9895, file: !1367, line: 421, type: !592)
!9899 = !DILocalVariable(name: "value", arg: 3, scope: !9895, file: !1367, line: 422, type: !587)
!9900 = !DILocalVariable(name: "cfg", scope: !9895, file: !1367, line: 424, type: !9887)
!9901 = !DILocalVariable(name: "gpio", scope: !9895, file: !1367, line: 425, type: !1302)
!9902 = !DILocalVariable(name: "port_value", scope: !9895, file: !1367, line: 426, type: !152)
!9903 = !DILocation(line: 0, scope: !9895)
!9904 = !DILocation(line: 424, column: 45, scope: !9895)
!9905 = !DILocation(line: 425, column: 44, scope: !9895)
!9906 = !DILocation(line: 430, column: 15, scope: !9895)
!9907 = !DILocation(line: 431, column: 46, scope: !9895)
!9908 = !DILocation(line: 431, column: 44, scope: !9895)
!9909 = !DILocation(line: 431, column: 61, scope: !9895)
!9910 = !DILocation(line: 431, column: 53, scope: !9895)
!9911 = !DILocation(line: 431, column: 2, scope: !9895)
!9912 = !DILocation(line: 435, column: 2, scope: !9895)
!9913 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1367, file: !1367, line: 438, type: !1260, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9914)
!9914 = !{!9915, !9916, !9917, !9918}
!9915 = !DILocalVariable(name: "dev", arg: 1, scope: !9913, file: !1367, line: 438, type: !1235)
!9916 = !DILocalVariable(name: "pins", arg: 2, scope: !9913, file: !1367, line: 439, type: !592)
!9917 = !DILocalVariable(name: "cfg", scope: !9913, file: !1367, line: 441, type: !9887)
!9918 = !DILocalVariable(name: "gpio", scope: !9913, file: !1367, line: 442, type: !1302)
!9919 = !DILocation(line: 0, scope: !9913)
!9920 = !DILocation(line: 441, column: 45, scope: !9913)
!9921 = !DILocation(line: 442, column: 44, scope: !9913)
!9922 = !DILocation(line: 448, column: 2, scope: !9913)
!9923 = !DILocation(line: 450, column: 2, scope: !9913)
!9924 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1367, file: !1367, line: 453, type: !1260, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9925)
!9925 = !{!9926, !9927, !9928, !9929}
!9926 = !DILocalVariable(name: "dev", arg: 1, scope: !9924, file: !1367, line: 453, type: !1235)
!9927 = !DILocalVariable(name: "pins", arg: 2, scope: !9924, file: !1367, line: 454, type: !592)
!9928 = !DILocalVariable(name: "cfg", scope: !9924, file: !1367, line: 456, type: !9887)
!9929 = !DILocalVariable(name: "gpio", scope: !9924, file: !1367, line: 457, type: !1302)
!9930 = !DILocation(line: 0, scope: !9924)
!9931 = !DILocation(line: 456, column: 45, scope: !9924)
!9932 = !DILocation(line: 457, column: 44, scope: !9924)
!9933 = !DILocation(line: 467, column: 2, scope: !9924)
!9934 = !DILocation(line: 470, column: 2, scope: !9924)
!9935 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1367, file: !1367, line: 473, type: !1260, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9936)
!9936 = !{!9937, !9938, !9939, !9940}
!9937 = !DILocalVariable(name: "dev", arg: 1, scope: !9935, file: !1367, line: 473, type: !1235)
!9938 = !DILocalVariable(name: "pins", arg: 2, scope: !9935, file: !1367, line: 474, type: !592)
!9939 = !DILocalVariable(name: "cfg", scope: !9935, file: !1367, line: 476, type: !9887)
!9940 = !DILocalVariable(name: "gpio", scope: !9935, file: !1367, line: 477, type: !1302)
!9941 = !DILocation(line: 0, scope: !9935)
!9942 = !DILocation(line: 476, column: 45, scope: !9935)
!9943 = !DILocation(line: 477, column: 44, scope: !9935)
!9944 = !DILocation(line: 484, column: 2, scope: !9935)
!9945 = !DILocation(line: 487, column: 2, scope: !9935)
!9946 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1367, file: !1367, line: 594, type: !1266, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9947)
!9947 = !{!9948, !9949, !9950, !9951, !9952, !9953, !9955, !9956, !9957}
!9948 = !DILocalVariable(name: "dev", arg: 1, scope: !9946, file: !1367, line: 594, type: !1235)
!9949 = !DILocalVariable(name: "pin", arg: 2, scope: !9946, file: !1367, line: 595, type: !580)
!9950 = !DILocalVariable(name: "mode", arg: 3, scope: !9946, file: !1367, line: 596, type: !545)
!9951 = !DILocalVariable(name: "trig", arg: 4, scope: !9946, file: !1367, line: 597, type: !551)
!9952 = !DILocalVariable(name: "cfg", scope: !9946, file: !1367, line: 599, type: !9887)
!9953 = !DILocalVariable(name: "data", scope: !9946, file: !1367, line: 600, type: !9954)
!9954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!9955 = !DILocalVariable(name: "edge", scope: !9946, file: !1367, line: 601, type: !107)
!9956 = !DILocalVariable(name: "err", scope: !9946, file: !1367, line: 602, type: !107)
!9957 = !DILabel(scope: !9946, name: "exit", file: !1367, line: 643)
!9958 = !DILocation(line: 0, scope: !9946)
!9959 = !DILocation(line: 599, column: 45, scope: !9946)
!9960 = !DILocation(line: 604, column: 6, scope: !9946)
!9961 = !DILocation(line: 605, column: 34, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9963, file: !1367, line: 605, column: 7)
!9963 = distinct !DILexicalBlock(scope: !9964, file: !1367, line: 604, column: 38)
!9964 = distinct !DILexicalBlock(scope: !9946, file: !1367, line: 604, column: 6)
!9965 = !DILocation(line: 605, column: 7, scope: !9962)
!9966 = !DILocation(line: 605, column: 47, scope: !9962)
!9967 = !DILocation(line: 605, column: 39, scope: !9962)
!9968 = !DILocation(line: 605, column: 7, scope: !9963)
!9969 = !DILocation(line: 606, column: 4, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9962, file: !1367, line: 605, column: 53)
!9971 = !DILocation(line: 607, column: 4, scope: !9970)
!9972 = !DILocation(line: 608, column: 4, scope: !9970)
!9973 = !DILocation(line: 609, column: 3, scope: !9970)
!9974 = !DILocation(line: 600, column: 38, scope: !9946)
!9975 = !DILocation(line: 620, column: 30, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9946, file: !1367, line: 620, column: 6)
!9977 = !DILocation(line: 620, column: 6, scope: !9976)
!9978 = !DILocation(line: 620, column: 57, scope: !9976)
!9979 = !DILocation(line: 620, column: 6, scope: !9946)
!9980 = !DILocation(line: 625, column: 29, scope: !9946)
!9981 = !DILocation(line: 625, column: 2, scope: !9946)
!9982 = !DILocation(line: 627, column: 2, scope: !9946)
!9983 = !DILocation(line: 630, column: 3, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9946, file: !1367, line: 627, column: 16)
!9985 = !DILocation(line: 633, column: 3, scope: !9984)
!9986 = !DILocation(line: 636, column: 3, scope: !9984)
!9987 = !DILocation(line: 639, column: 2, scope: !9946)
!9988 = !DILocation(line: 641, column: 2, scope: !9946)
!9989 = !DILocation(line: 643, column: 1, scope: !9946)
!9990 = !DILocation(line: 644, column: 2, scope: !9946)
!9991 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1367, file: !1367, line: 647, type: !1270, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !9992)
!9992 = !{!9993, !9994, !9995, !9996}
!9993 = !DILocalVariable(name: "dev", arg: 1, scope: !9991, file: !1367, line: 647, type: !1235)
!9994 = !DILocalVariable(name: "callback", arg: 2, scope: !9991, file: !1367, line: 648, type: !1272)
!9995 = !DILocalVariable(name: "set", arg: 3, scope: !9991, file: !1367, line: 649, type: !145)
!9996 = !DILocalVariable(name: "data", scope: !9991, file: !1367, line: 651, type: !9954)
!9997 = !DILocation(line: 0, scope: !9991)
!9998 = !DILocation(line: 651, column: 38, scope: !9991)
!9999 = !DILocation(line: 653, column: 37, scope: !9991)
!10000 = !DILocation(line: 653, column: 9, scope: !9991)
!10001 = !DILocation(line: 653, column: 2, scope: !9991)
!10002 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !10003, file: !10003, line: 38, type: !10004, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10007)
!10003 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10004 = !DISubroutineType(types: !10005)
!10005 = !{!107, !10006, !1272, !145}
!10006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!10007 = !{!10008, !10009, !10010}
!10008 = !DILocalVariable(name: "callbacks", arg: 1, scope: !10002, file: !10003, line: 38, type: !10006)
!10009 = !DILocalVariable(name: "callback", arg: 2, scope: !10002, file: !10003, line: 39, type: !1272)
!10010 = !DILocalVariable(name: "set", arg: 3, scope: !10002, file: !10003, line: 40, type: !145)
!10011 = !DILocation(line: 0, scope: !10002)
!10012 = !DILocation(line: 42, column: 2, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10014, file: !10003, line: 42, column: 2)
!10014 = distinct !DILexicalBlock(scope: !10002, file: !10003, line: 42, column: 2)
!10015 = !DILocation(line: 42, column: 2, scope: !10014)
!10016 = !DILocation(line: 42, column: 2, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10013, file: !10003, line: 42, column: 2)
!10018 = !DILocation(line: 43, column: 2, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10020, file: !10003, line: 43, column: 2)
!10020 = distinct !DILexicalBlock(scope: !10002, file: !10003, line: 43, column: 2)
!10021 = !DILocation(line: 43, column: 2, scope: !10020)
!10022 = !DILocation(line: 43, column: 2, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10019, file: !10003, line: 43, column: 2)
!10024 = !DILocation(line: 45, column: 7, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10002, file: !10003, line: 45, column: 6)
!10026 = !DILocation(line: 45, column: 6, scope: !10002)
!10027 = !DILocation(line: 46, column: 56, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !10003, line: 46, column: 7)
!10029 = distinct !DILexicalBlock(scope: !10025, file: !10003, line: 45, column: 38)
!10030 = !DILocation(line: 46, column: 8, scope: !10028)
!10031 = !DILocation(line: 46, column: 7, scope: !10029)
!10032 = !DILocation(line: 51, column: 13, scope: !10025)
!10033 = !DILocation(line: 56, column: 43, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !10003, line: 55, column: 11)
!10035 = distinct !DILexicalBlock(scope: !10002, file: !10003, line: 55, column: 6)
!10036 = !DILocation(line: 56, column: 3, scope: !10034)
!10037 = !DILocation(line: 57, column: 2, scope: !10034)
!10038 = !DILocation(line: 60, column: 1, scope: !10002)
!10039 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !612, file: !612, line: 261, type: !10040, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10042)
!10040 = !DISubroutineType(types: !10041)
!10041 = !{!145, !10006}
!10042 = !{!10043}
!10043 = !DILocalVariable(name: "list", arg: 1, scope: !10039, file: !612, line: 261, type: !10006)
!10044 = !DILocation(line: 0, scope: !10039)
!10045 = !DILocation(line: 261, column: 1, scope: !10039)
!10046 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !612, file: !612, line: 417, type: !10047, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10049)
!10047 = !DISubroutineType(types: !10048)
!10048 = !{!145, !10006, !1437}
!10049 = !{!10050, !10051, !10052, !10053}
!10050 = !DILocalVariable(name: "list", arg: 1, scope: !10046, file: !612, line: 417, type: !10006)
!10051 = !DILocalVariable(name: "node", arg: 2, scope: !10046, file: !612, line: 417, type: !1437)
!10052 = !DILocalVariable(name: "prev", scope: !10046, file: !612, line: 417, type: !1437)
!10053 = !DILocalVariable(name: "test", scope: !10046, file: !612, line: 417, type: !1437)
!10054 = !DILocation(line: 0, scope: !10046)
!10055 = !DILocation(line: 417, column: 1, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10046, file: !612, line: 417, column: 1)
!10057 = !DILocation(line: 417, column: 1, scope: !10058)
!10058 = distinct !DILexicalBlock(scope: !10056, file: !612, line: 417, column: 1)
!10059 = !DILocation(line: 417, column: 1, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10061, file: !612, line: 417, column: 1)
!10061 = distinct !DILexicalBlock(scope: !10058, file: !612, line: 417, column: 1)
!10062 = !DILocation(line: 417, column: 1, scope: !10061)
!10063 = distinct !{!10063, !10055, !10055}
!10064 = !DILocation(line: 417, column: 1, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10060, file: !612, line: 417, column: 1)
!10066 = !DILocation(line: 417, column: 1, scope: !10046)
!10067 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !612, file: !612, line: 298, type: !10068, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10070)
!10068 = !DISubroutineType(types: !10069)
!10069 = !{null, !10006, !1437}
!10070 = !{!10071, !10072}
!10071 = !DILocalVariable(name: "list", arg: 1, scope: !10067, file: !612, line: 298, type: !10006)
!10072 = !DILocalVariable(name: "node", arg: 2, scope: !10067, file: !612, line: 298, type: !1437)
!10073 = !DILocation(line: 0, scope: !10067)
!10074 = !DILocation(line: 298, column: 1, scope: !10067)
!10075 = !DILocation(line: 298, column: 1, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10067, file: !612, line: 298, column: 1)
!10077 = !DILocation(line: 298, column: 1, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10076, file: !612, line: 298, column: 1)
!10079 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !612, file: !612, line: 231, type: !10080, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10082)
!10080 = !DISubroutineType(types: !10081)
!10081 = !{!1437, !10006}
!10082 = !{!10083}
!10083 = !DILocalVariable(name: "list", arg: 1, scope: !10079, file: !612, line: 231, type: !10006)
!10084 = !DILocation(line: 0, scope: !10079)
!10085 = !DILocation(line: 233, column: 15, scope: !10079)
!10086 = !DILocation(line: 233, column: 2, scope: !10079)
!10087 = distinct !DISubprogram(name: "z_snode_next_set", scope: !612, file: !612, line: 209, type: !10088, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10090)
!10088 = !DISubroutineType(types: !10089)
!10089 = !{null, !1437, !1437}
!10090 = !{!10091, !10092}
!10091 = !DILocalVariable(name: "parent", arg: 1, scope: !10087, file: !612, line: 209, type: !1437)
!10092 = !DILocalVariable(name: "child", arg: 2, scope: !10087, file: !612, line: 209, type: !1437)
!10093 = !DILocation(line: 0, scope: !10087)
!10094 = !DILocation(line: 211, column: 10, scope: !10087)
!10095 = !DILocation(line: 211, column: 15, scope: !10087)
!10096 = !DILocation(line: 212, column: 1, scope: !10087)
!10097 = distinct !DISubprogram(name: "z_slist_head_set", scope: !612, file: !612, line: 214, type: !10068, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10098)
!10098 = !{!10099, !10100}
!10099 = !DILocalVariable(name: "list", arg: 1, scope: !10097, file: !612, line: 214, type: !10006)
!10100 = !DILocalVariable(name: "node", arg: 2, scope: !10097, file: !612, line: 214, type: !1437)
!10101 = !DILocation(line: 0, scope: !10097)
!10102 = !DILocation(line: 216, column: 8, scope: !10097)
!10103 = !DILocation(line: 216, column: 13, scope: !10097)
!10104 = !DILocation(line: 217, column: 1, scope: !10097)
!10105 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !612, file: !612, line: 243, type: !10080, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10106)
!10106 = !{!10107}
!10107 = !DILocalVariable(name: "list", arg: 1, scope: !10105, file: !612, line: 243, type: !10006)
!10108 = !DILocation(line: 0, scope: !10105)
!10109 = !DILocation(line: 245, column: 15, scope: !10105)
!10110 = !DILocation(line: 245, column: 2, scope: !10105)
!10111 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !612, file: !612, line: 219, type: !10068, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10112)
!10112 = !{!10113, !10114}
!10113 = !DILocalVariable(name: "list", arg: 1, scope: !10111, file: !612, line: 219, type: !10006)
!10114 = !DILocalVariable(name: "node", arg: 2, scope: !10111, file: !612, line: 219, type: !1437)
!10115 = !DILocation(line: 0, scope: !10111)
!10116 = !DILocation(line: 221, column: 8, scope: !10111)
!10117 = !DILocation(line: 221, column: 13, scope: !10111)
!10118 = !DILocation(line: 222, column: 1, scope: !10111)
!10119 = distinct !DISubprogram(name: "sys_slist_remove", scope: !612, file: !612, line: 401, type: !10120, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10122)
!10120 = !DISubroutineType(types: !10121)
!10121 = !{null, !10006, !1437, !1437}
!10122 = !{!10123, !10124, !10125}
!10123 = !DILocalVariable(name: "list", arg: 1, scope: !10119, file: !612, line: 401, type: !10006)
!10124 = !DILocalVariable(name: "prev_node", arg: 2, scope: !10119, file: !612, line: 401, type: !1437)
!10125 = !DILocalVariable(name: "node", arg: 3, scope: !10119, file: !612, line: 401, type: !1437)
!10126 = !DILocation(line: 0, scope: !10119)
!10127 = !DILocation(line: 401, column: 1, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10119, file: !612, line: 401, column: 1)
!10129 = !DILocation(line: 0, scope: !10128)
!10130 = !DILocation(line: 401, column: 1, scope: !10119)
!10131 = !DILocation(line: 401, column: 1, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10128, file: !612, line: 401, column: 1)
!10133 = !DILocation(line: 401, column: 1, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10132, file: !612, line: 401, column: 1)
!10135 = !DILocation(line: 401, column: 1, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10134, file: !612, line: 401, column: 1)
!10137 = !DILocation(line: 401, column: 1, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10128, file: !612, line: 401, column: 1)
!10139 = !DILocation(line: 401, column: 1, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10138, file: !612, line: 401, column: 1)
!10141 = !DILocation(line: 401, column: 1, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10140, file: !612, line: 401, column: 1)
!10143 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !612, file: !612, line: 285, type: !10144, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10146)
!10144 = !DISubroutineType(types: !10145)
!10145 = !{!1437, !1437}
!10146 = !{!10147}
!10147 = !DILocalVariable(name: "node", arg: 1, scope: !10143, file: !612, line: 285, type: !1437)
!10148 = !DILocation(line: 0, scope: !10143)
!10149 = !DILocation(line: 285, column: 1, scope: !10143)
!10150 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !612, file: !612, line: 274, type: !10144, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10151)
!10151 = !{!10152}
!10152 = !DILocalVariable(name: "node", arg: 1, scope: !10150, file: !612, line: 274, type: !1437)
!10153 = !DILocation(line: 0, scope: !10150)
!10154 = !DILocation(line: 274, column: 1, scope: !10150)
!10155 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !612, file: !612, line: 204, type: !10144, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10156)
!10156 = !{!10157}
!10157 = !DILocalVariable(name: "node", arg: 1, scope: !10155, file: !612, line: 204, type: !1437)
!10158 = !DILocation(line: 0, scope: !10155)
!10159 = !DILocation(line: 206, column: 15, scope: !10155)
!10160 = !DILocation(line: 206, column: 2, scope: !10155)
!10161 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1367, file: !1367, line: 342, type: !214, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10162)
!10162 = !{!10163, !10164, !10165}
!10163 = !DILocalVariable(name: "pin", arg: 1, scope: !10161, file: !1367, line: 342, type: !107)
!10164 = !DILocalVariable(name: "line", scope: !10161, file: !1367, line: 344, type: !152)
!10165 = !DILocalVariable(name: "port", scope: !10161, file: !1367, line: 345, type: !107)
!10166 = !DILocation(line: 0, scope: !10161)
!10167 = !DILocation(line: 344, column: 18, scope: !10161)
!10168 = !{i32 983040, i32 0}
!10169 = !DILocation(line: 356, column: 9, scope: !10161)
!10170 = !DILocation(line: 370, column: 2, scope: !10161)
!10171 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1367, file: !1367, line: 37, type: !967, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10172)
!10172 = !{!10173, !10174, !10175}
!10173 = !DILocalVariable(name: "line", arg: 1, scope: !10171, file: !1367, line: 37, type: !107)
!10174 = !DILocalVariable(name: "arg", arg: 2, scope: !10171, file: !1367, line: 37, type: !106)
!10175 = !DILocalVariable(name: "data", scope: !10171, file: !1367, line: 39, type: !9954)
!10176 = !DILocation(line: 0, scope: !10171)
!10177 = !DILocation(line: 41, column: 29, scope: !10171)
!10178 = !DILocation(line: 41, column: 39, scope: !10171)
!10179 = !DILocation(line: 41, column: 44, scope: !10171)
!10180 = !DILocation(line: 41, column: 2, scope: !10171)
!10181 = !DILocation(line: 42, column: 1, scope: !10171)
!10182 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1367, file: !1367, line: 376, type: !10183, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10185)
!10183 = !DISubroutineType(types: !10184)
!10184 = !{!107, !107, !107}
!10185 = !{!10186, !10187, !10188, !10190, !10191}
!10186 = !DILocalVariable(name: "port", arg: 1, scope: !10182, file: !1367, line: 376, type: !107)
!10187 = !DILocalVariable(name: "pin", arg: 2, scope: !10182, file: !1367, line: 376, type: !107)
!10188 = !DILocalVariable(name: "clk", scope: !10182, file: !1367, line: 386, type: !10189)
!10189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1235)
!10190 = !DILocalVariable(name: "pclken", scope: !10182, file: !1367, line: 387, type: !1472)
!10191 = !DILocalVariable(name: "ret", scope: !10182, file: !1367, line: 396, type: !107)
!10192 = !DILocation(line: 0, scope: !10182)
!10193 = !DILocation(line: 387, column: 2, scope: !10182)
!10194 = !DILocation(line: 387, column: 22, scope: !10182)
!10195 = !DILocation(line: 399, column: 8, scope: !10182)
!10196 = !DILocation(line: 400, column: 10, scope: !10197)
!10197 = distinct !DILexicalBlock(scope: !10182, file: !1367, line: 400, column: 6)
!10198 = !DILocation(line: 400, column: 6, scope: !10182)
!10199 = !DILocation(line: 405, column: 2, scope: !10182)
!10200 = !DILocation(line: 407, column: 2, scope: !10182)
!10201 = !DILocation(line: 408, column: 1, scope: !10182)
!10202 = distinct !DISubprogram(name: "clock_control_on", scope: !1044, file: !1044, line: 123, type: !1332, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10203)
!10203 = !{!10204, !10205, !10206}
!10204 = !DILocalVariable(name: "dev", arg: 1, scope: !10202, file: !1044, line: 123, type: !1235)
!10205 = !DILocalVariable(name: "sys", arg: 2, scope: !10202, file: !1044, line: 124, type: !1117)
!10206 = !DILocalVariable(name: "api", scope: !10202, file: !1044, line: 126, type: !1325)
!10207 = !DILocation(line: 0, scope: !10202)
!10208 = !DILocation(line: 127, column: 49, scope: !10202)
!10209 = !DILocation(line: 129, column: 14, scope: !10202)
!10210 = !DILocation(line: 129, column: 9, scope: !10202)
!10211 = !DILocation(line: 129, column: 2, scope: !10202)
!10212 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1367, file: !1367, line: 311, type: !9361, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10213)
!10213 = !{!10214, !10215, !10216}
!10214 = !DILocalVariable(name: "port", arg: 1, scope: !10212, file: !1367, line: 311, type: !107)
!10215 = !DILocalVariable(name: "pin", arg: 2, scope: !10212, file: !1367, line: 311, type: !107)
!10216 = !DILocalVariable(name: "line", scope: !10212, file: !1367, line: 313, type: !152)
!10217 = !DILocation(line: 0, scope: !10212)
!10218 = !DILocation(line: 313, column: 18, scope: !10212)
!10219 = !DILocation(line: 337, column: 2, scope: !10212)
!10220 = !DILocation(line: 340, column: 1, scope: !10212)
!10221 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1367, file: !1367, line: 295, type: !10222, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10224)
!10222 = !DISubroutineType(types: !10223)
!10223 = !{!152, !107}
!10224 = !{!10225}
!10225 = !DILocalVariable(name: "pin", arg: 1, scope: !10221, file: !1367, line: 295, type: !107)
!10226 = !DILocation(line: 0, scope: !10221)
!10227 = !DILocation(line: 307, column: 46, scope: !10221)
!10228 = !DILocation(line: 307, column: 27, scope: !10221)
!10229 = !DILocation(line: 307, column: 32, scope: !10221)
!10230 = !DILocation(line: 307, column: 14, scope: !10221)
!10231 = !DILocation(line: 307, column: 39, scope: !10221)
!10232 = !DILocation(line: 307, column: 2, scope: !10221)
!10233 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !10234, file: !10234, line: 621, type: !10235, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10237)
!10234 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10235 = !DISubroutineType(types: !10236)
!10236 = !{null, !152, !152}
!10237 = !{!10238, !10239}
!10238 = !DILocalVariable(name: "Port", arg: 1, scope: !10233, file: !10234, line: 621, type: !152)
!10239 = !DILocalVariable(name: "Line", arg: 2, scope: !10233, file: !10234, line: 621, type: !152)
!10240 = !DILocation(line: 0, scope: !10233)
!10241 = !DILocation(line: 623, column: 3, scope: !10233)
!10242 = !DILocalVariable(name: "value", arg: 1, scope: !10243, file: !6223, line: 373, type: !152)
!10243 = distinct !DISubprogram(name: "__RBIT", scope: !6223, file: !6223, line: 373, type: !7469, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10244)
!10244 = !{!10242, !10245}
!10245 = !DILocalVariable(name: "result", scope: !10243, file: !6223, line: 375, type: !152)
!10246 = !DILocation(line: 0, scope: !10243, inlinedAt: !10247)
!10247 = distinct !DILocation(line: 623, column: 3, scope: !10233)
!10248 = !DILocation(line: 380, column: 4, scope: !10243, inlinedAt: !10247)
!10249 = !{i64 2453140}
!10250 = !DILocalVariable(name: "value", arg: 1, scope: !10251, file: !6223, line: 403, type: !152)
!10251 = distinct !DISubprogram(name: "__CLZ", scope: !6223, file: !6223, line: 403, type: !10252, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10254)
!10252 = !DISubroutineType(types: !10253)
!10253 = !{!195, !152}
!10254 = !{!10250}
!10255 = !DILocation(line: 0, scope: !10251, inlinedAt: !10256)
!10256 = distinct !DILocation(line: 623, column: 3, scope: !10233)
!10257 = !DILocation(line: 414, column: 7, scope: !10251, inlinedAt: !10256)
!10258 = !DILocation(line: 624, column: 1, scope: !10233)
!10259 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !10003, file: !10003, line: 69, type: !10260, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10262)
!10260 = !DISubroutineType(types: !10261)
!10261 = !{null, !10006, !1235, !152}
!10262 = !{!10263, !10264, !10265, !10266, !10267}
!10263 = !DILocalVariable(name: "list", arg: 1, scope: !10259, file: !10003, line: 69, type: !10006)
!10264 = !DILocalVariable(name: "port", arg: 2, scope: !10259, file: !10003, line: 70, type: !1235)
!10265 = !DILocalVariable(name: "pins", arg: 3, scope: !10259, file: !10003, line: 71, type: !152)
!10266 = !DILocalVariable(name: "cb", scope: !10259, file: !10003, line: 73, type: !1272)
!10267 = !DILocalVariable(name: "tmp", scope: !10259, file: !10003, line: 73, type: !1272)
!10268 = !DILocation(line: 0, scope: !10259)
!10269 = !DILocation(line: 75, column: 2, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10259, file: !10003, line: 75, column: 2)
!10271 = !DILocation(line: 0, scope: !10270)
!10272 = !DILocation(line: 76, column: 11, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10274, file: !10003, line: 76, column: 7)
!10274 = distinct !DILexicalBlock(scope: !10275, file: !10003, line: 75, column: 57)
!10275 = distinct !DILexicalBlock(scope: !10270, file: !10003, line: 75, column: 2)
!10276 = !DILocation(line: 76, column: 20, scope: !10273)
!10277 = !DILocation(line: 76, column: 7, scope: !10274)
!10278 = !DILocation(line: 77, column: 4, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !10003, line: 77, column: 4)
!10280 = distinct !DILexicalBlock(scope: !10281, file: !10003, line: 77, column: 4)
!10281 = distinct !DILexicalBlock(scope: !10273, file: !10003, line: 76, column: 28)
!10282 = !DILocation(line: 77, column: 4, scope: !10280)
!10283 = !DILocation(line: 77, column: 4, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10279, file: !10003, line: 77, column: 4)
!10285 = !DILocation(line: 78, column: 4, scope: !10281)
!10286 = !DILocation(line: 79, column: 3, scope: !10281)
!10287 = !DILocation(line: 75, column: 2, scope: !10275)
!10288 = !DILocation(line: 81, column: 1, scope: !10259)
!10289 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !10234, file: !10234, line: 721, type: !7469, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10290)
!10290 = !{!10291}
!10291 = !DILocalVariable(name: "Line", arg: 1, scope: !10289, file: !10234, line: 721, type: !152)
!10292 = !DILocation(line: 0, scope: !10289)
!10293 = !DILocation(line: 723, column: 21, scope: !10289)
!10294 = !DILocation(line: 0, scope: !10243, inlinedAt: !10295)
!10295 = distinct !DILocation(line: 723, column: 76, scope: !10289)
!10296 = !DILocation(line: 380, column: 4, scope: !10243, inlinedAt: !10295)
!10297 = !DILocation(line: 0, scope: !10251, inlinedAt: !10298)
!10298 = distinct !DILocation(line: 723, column: 76, scope: !10289)
!10299 = !DILocation(line: 414, column: 7, scope: !10251, inlinedAt: !10298)
!10300 = !DILocation(line: 723, column: 73, scope: !10289)
!10301 = !DILocation(line: 723, column: 3, scope: !10289)
!10302 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !10303, file: !10303, line: 913, type: !10304, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10306)
!10303 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10304 = !DISubroutineType(types: !10305)
!10305 = !{null, !1302, !152}
!10306 = !{!10307, !10308}
!10307 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10302, file: !10303, line: 913, type: !1302)
!10308 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10302, file: !10303, line: 913, type: !152)
!10309 = !DILocation(line: 0, scope: !10302)
!10310 = !DILocation(line: 918, column: 3, scope: !10302)
!10311 = !DILocation(line: 920, column: 1, scope: !10302)
!10312 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !10303, file: !10303, line: 825, type: !10313, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10315)
!10313 = !DISubroutineType(types: !10314)
!10314 = !{!152, !1302}
!10315 = !{!10316}
!10316 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10312, file: !10303, line: 825, type: !1302)
!10317 = !DILocation(line: 0, scope: !10312)
!10318 = !DILocation(line: 827, column: 21, scope: !10312)
!10319 = !DILocation(line: 827, column: 3, scope: !10312)
!10320 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !10303, file: !10303, line: 814, type: !10304, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10321)
!10321 = !{!10322, !10323}
!10322 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10320, file: !10303, line: 814, type: !1302)
!10323 = !DILocalVariable(name: "PortValue", arg: 2, scope: !10320, file: !10303, line: 814, type: !152)
!10324 = !DILocation(line: 0, scope: !10320)
!10325 = !DILocation(line: 816, column: 3, scope: !10320)
!10326 = !DILocation(line: 817, column: 1, scope: !10320)
!10327 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !10303, file: !10303, line: 773, type: !10313, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10328)
!10328 = !{!10329}
!10329 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10327, file: !10303, line: 773, type: !1302)
!10330 = !DILocation(line: 0, scope: !10327)
!10331 = !DILocation(line: 775, column: 21, scope: !10327)
!10332 = !DILocation(line: 775, column: 3, scope: !10327)
!10333 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1367, file: !1367, line: 47, type: !10334, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10336)
!10334 = !DISubroutineType(types: !10335)
!10335 = !{!107, !581, !187}
!10336 = !{!10337, !10338}
!10337 = !DILocalVariable(name: "flags", arg: 1, scope: !10333, file: !1367, line: 47, type: !581)
!10338 = !DILocalVariable(name: "pincfg", arg: 2, scope: !10333, file: !1367, line: 47, type: !187)
!10339 = !DILocation(line: 0, scope: !10333)
!10340 = !DILocation(line: 50, column: 13, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10333, file: !1367, line: 50, column: 6)
!10342 = !DILocation(line: 50, column: 28, scope: !10341)
!10343 = !DILocation(line: 50, column: 6, scope: !10333)
!10344 = !DILocation(line: 53, column: 11, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10341, file: !1367, line: 50, column: 34)
!10346 = !DILocation(line: 55, column: 14, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10345, file: !1367, line: 55, column: 7)
!10348 = !DILocation(line: 55, column: 35, scope: !10347)
!10349 = !DILocation(line: 55, column: 7, scope: !10345)
!10350 = !DILocation(line: 56, column: 14, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10352, file: !1367, line: 56, column: 8)
!10352 = distinct !DILexicalBlock(scope: !10347, file: !1367, line: 55, column: 41)
!10353 = !DILocation(line: 56, column: 8, scope: !10352)
!10354 = !DILocation(line: 0, scope: !10347)
!10355 = !DILocation(line: 66, column: 14, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10345, file: !1367, line: 66, column: 7)
!10357 = !DILocation(line: 66, column: 30, scope: !10356)
!10358 = !DILocation(line: 66, column: 7, scope: !10345)
!10359 = !DILocation(line: 67, column: 12, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10356, file: !1367, line: 66, column: 36)
!10361 = !DILocation(line: 68, column: 3, scope: !10360)
!10362 = !DILocation(line: 68, column: 21, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10356, file: !1367, line: 68, column: 14)
!10364 = !DILocation(line: 68, column: 39, scope: !10363)
!10365 = !DILocation(line: 68, column: 14, scope: !10356)
!10366 = !DILocation(line: 69, column: 12, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10363, file: !1367, line: 68, column: 45)
!10368 = !DILocation(line: 70, column: 3, scope: !10367)
!10369 = !DILocation(line: 72, column: 21, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10341, file: !1367, line: 72, column: 14)
!10371 = !DILocation(line: 72, column: 35, scope: !10370)
!10372 = !DILocation(line: 72, column: 14, scope: !10341)
!10373 = !DILocation(line: 77, column: 14, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10375, file: !1367, line: 77, column: 7)
!10375 = distinct !DILexicalBlock(scope: !10370, file: !1367, line: 72, column: 41)
!10376 = !DILocation(line: 77, column: 30, scope: !10374)
!10377 = !DILocation(line: 77, column: 7, scope: !10375)
!10378 = !DILocation(line: 0, scope: !10341)
!10379 = !DILocation(line: 90, column: 1, scope: !10333)
!10380 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1367, file: !1367, line: 157, type: !10381, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10383)
!10381 = !DISubroutineType(types: !10382)
!10382 = !{null, !1235, !107, !107, !107}
!10383 = !{!10384, !10385, !10386, !10387, !10388, !10389, !10390, !10391, !10392, !10393, !10394}
!10384 = !DILocalVariable(name: "dev", arg: 1, scope: !10380, file: !1367, line: 157, type: !1235)
!10385 = !DILocalVariable(name: "pin", arg: 2, scope: !10380, file: !1367, line: 157, type: !107)
!10386 = !DILocalVariable(name: "conf", arg: 3, scope: !10380, file: !1367, line: 158, type: !107)
!10387 = !DILocalVariable(name: "func", arg: 4, scope: !10380, file: !1367, line: 158, type: !107)
!10388 = !DILocalVariable(name: "cfg", scope: !10380, file: !1367, line: 160, type: !9887)
!10389 = !DILocalVariable(name: "gpio", scope: !10380, file: !1367, line: 161, type: !1302)
!10390 = !DILocalVariable(name: "pin_ll", scope: !10380, file: !1367, line: 163, type: !107)
!10391 = !DILocalVariable(name: "mode", scope: !10380, file: !1367, line: 227, type: !32)
!10392 = !DILocalVariable(name: "otype", scope: !10380, file: !1367, line: 227, type: !32)
!10393 = !DILocalVariable(name: "ospeed", scope: !10380, file: !1367, line: 227, type: !32)
!10394 = !DILocalVariable(name: "pupd", scope: !10380, file: !1367, line: 227, type: !32)
!10395 = !DILocation(line: 0, scope: !10380)
!10396 = !DILocation(line: 160, column: 45, scope: !10380)
!10397 = !DILocation(line: 161, column: 44, scope: !10380)
!10398 = !DILocation(line: 163, column: 15, scope: !10380)
!10399 = !DILocation(line: 229, column: 14, scope: !10380)
!10400 = !DILocation(line: 246, column: 47, scope: !10380)
!10401 = !DILocation(line: 246, column: 2, scope: !10380)
!10402 = !DILocation(line: 248, column: 43, scope: !10380)
!10403 = !DILocation(line: 248, column: 2, scope: !10380)
!10404 = !DILocation(line: 250, column: 40, scope: !10380)
!10405 = !DILocation(line: 250, column: 2, scope: !10380)
!10406 = !DILocation(line: 252, column: 11, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10380, file: !1367, line: 252, column: 6)
!10408 = !DILocation(line: 252, column: 6, scope: !10380)
!10409 = !DILocation(line: 253, column: 11, scope: !10410)
!10410 = distinct !DILexicalBlock(scope: !10411, file: !1367, line: 253, column: 7)
!10411 = distinct !DILexicalBlock(scope: !10407, file: !1367, line: 252, column: 36)
!10412 = !DILocation(line: 253, column: 7, scope: !10411)
!10413 = !DILocation(line: 254, column: 4, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10410, file: !1367, line: 253, column: 16)
!10415 = !DILocation(line: 255, column: 3, scope: !10414)
!10416 = !DILocation(line: 256, column: 4, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10410, file: !1367, line: 255, column: 10)
!10418 = !DILocation(line: 260, column: 40, scope: !10380)
!10419 = !DILocation(line: 260, column: 2, scope: !10380)
!10420 = !DILocation(line: 265, column: 1, scope: !10380)
!10421 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1367, file: !1367, line: 137, type: !10222, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10422)
!10422 = !{!10423, !10424}
!10423 = !DILocalVariable(name: "pin", arg: 1, scope: !10421, file: !1367, line: 137, type: !107)
!10424 = !DILocalVariable(name: "pinval", scope: !10421, file: !1367, line: 139, type: !152)
!10425 = !DILocation(line: 0, scope: !10421)
!10426 = !DILocation(line: 149, column: 13, scope: !10421)
!10427 = !DILocation(line: 151, column: 2, scope: !10421)
!10428 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !10303, file: !10303, line: 343, type: !10429, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10431)
!10429 = !DISubroutineType(types: !10430)
!10430 = !{null, !1302, !152, !152}
!10431 = !{!10432, !10433, !10434}
!10432 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10428, file: !10303, line: 343, type: !1302)
!10433 = !DILocalVariable(name: "PinMask", arg: 2, scope: !10428, file: !10303, line: 343, type: !152)
!10434 = !DILocalVariable(name: "OutputType", arg: 3, scope: !10428, file: !10303, line: 343, type: !152)
!10435 = !DILocation(line: 0, scope: !10428)
!10436 = !DILocation(line: 345, column: 3, scope: !10428)
!10437 = !DILocation(line: 346, column: 1, scope: !10428)
!10438 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !10303, file: !10303, line: 414, type: !10429, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10439)
!10439 = !{!10440, !10441, !10442}
!10440 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10438, file: !10303, line: 414, type: !1302)
!10441 = !DILocalVariable(name: "Pin", arg: 2, scope: !10438, file: !10303, line: 414, type: !152)
!10442 = !DILocalVariable(name: "Speed", arg: 3, scope: !10438, file: !10303, line: 414, type: !152)
!10443 = !DILocation(line: 0, scope: !10438)
!10444 = !DILocation(line: 416, column: 3, scope: !10438)
!10445 = !DILocation(line: 0, scope: !10243, inlinedAt: !10446)
!10446 = distinct !DILocation(line: 416, column: 3, scope: !10438)
!10447 = !DILocation(line: 380, column: 4, scope: !10243, inlinedAt: !10446)
!10448 = !DILocation(line: 0, scope: !10251, inlinedAt: !10449)
!10449 = distinct !DILocation(line: 416, column: 3, scope: !10438)
!10450 = !DILocation(line: 414, column: 7, scope: !10251, inlinedAt: !10449)
!10451 = !DILocation(line: 0, scope: !10243, inlinedAt: !10452)
!10452 = distinct !DILocation(line: 416, column: 3, scope: !10438)
!10453 = !DILocation(line: 0, scope: !10251, inlinedAt: !10454)
!10454 = distinct !DILocation(line: 416, column: 3, scope: !10438)
!10455 = !DILocation(line: 418, column: 1, scope: !10438)
!10456 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !10303, file: !10303, line: 485, type: !10429, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10457)
!10457 = !{!10458, !10459, !10460}
!10458 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10456, file: !10303, line: 485, type: !1302)
!10459 = !DILocalVariable(name: "Pin", arg: 2, scope: !10456, file: !10303, line: 485, type: !152)
!10460 = !DILocalVariable(name: "Pull", arg: 3, scope: !10456, file: !10303, line: 485, type: !152)
!10461 = !DILocation(line: 0, scope: !10456)
!10462 = !DILocation(line: 487, column: 3, scope: !10456)
!10463 = !DILocation(line: 0, scope: !10243, inlinedAt: !10464)
!10464 = distinct !DILocation(line: 487, column: 3, scope: !10456)
!10465 = !DILocation(line: 380, column: 4, scope: !10243, inlinedAt: !10464)
!10466 = !DILocation(line: 0, scope: !10251, inlinedAt: !10467)
!10467 = distinct !DILocation(line: 487, column: 3, scope: !10456)
!10468 = !DILocation(line: 414, column: 7, scope: !10251, inlinedAt: !10467)
!10469 = !DILocation(line: 0, scope: !10243, inlinedAt: !10470)
!10470 = distinct !DILocation(line: 487, column: 3, scope: !10456)
!10471 = !DILocation(line: 0, scope: !10251, inlinedAt: !10472)
!10472 = distinct !DILocation(line: 487, column: 3, scope: !10456)
!10473 = !DILocation(line: 488, column: 1, scope: !10456)
!10474 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !10303, file: !10303, line: 557, type: !10429, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10475)
!10475 = !{!10476, !10477, !10478}
!10476 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10474, file: !10303, line: 557, type: !1302)
!10477 = !DILocalVariable(name: "Pin", arg: 2, scope: !10474, file: !10303, line: 557, type: !152)
!10478 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10474, file: !10303, line: 557, type: !152)
!10479 = !DILocation(line: 0, scope: !10474)
!10480 = !DILocation(line: 559, column: 3, scope: !10474)
!10481 = !DILocation(line: 0, scope: !10243, inlinedAt: !10482)
!10482 = distinct !DILocation(line: 559, column: 3, scope: !10474)
!10483 = !DILocation(line: 380, column: 4, scope: !10243, inlinedAt: !10482)
!10484 = !DILocation(line: 0, scope: !10251, inlinedAt: !10485)
!10485 = distinct !DILocation(line: 559, column: 3, scope: !10474)
!10486 = !DILocation(line: 414, column: 7, scope: !10251, inlinedAt: !10485)
!10487 = !DILocation(line: 0, scope: !10243, inlinedAt: !10488)
!10488 = distinct !DILocation(line: 559, column: 3, scope: !10474)
!10489 = !DILocation(line: 0, scope: !10251, inlinedAt: !10490)
!10490 = distinct !DILocation(line: 559, column: 3, scope: !10474)
!10491 = !DILocation(line: 561, column: 1, scope: !10474)
!10492 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !10303, file: !10303, line: 634, type: !10429, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10493)
!10493 = !{!10494, !10495, !10496}
!10494 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10492, file: !10303, line: 634, type: !1302)
!10495 = !DILocalVariable(name: "Pin", arg: 2, scope: !10492, file: !10303, line: 634, type: !152)
!10496 = !DILocalVariable(name: "Alternate", arg: 3, scope: !10492, file: !10303, line: 634, type: !152)
!10497 = !DILocation(line: 0, scope: !10492)
!10498 = !DILocation(line: 636, column: 3, scope: !10492)
!10499 = !DILocation(line: 0, scope: !10243, inlinedAt: !10500)
!10500 = distinct !DILocation(line: 636, column: 3, scope: !10492)
!10501 = !DILocation(line: 380, column: 4, scope: !10243, inlinedAt: !10500)
!10502 = !DILocation(line: 0, scope: !10251, inlinedAt: !10503)
!10503 = distinct !DILocation(line: 636, column: 3, scope: !10492)
!10504 = !DILocation(line: 414, column: 7, scope: !10251, inlinedAt: !10503)
!10505 = !DILocation(line: 0, scope: !10243, inlinedAt: !10506)
!10506 = distinct !DILocation(line: 636, column: 3, scope: !10492)
!10507 = !DILocation(line: 0, scope: !10251, inlinedAt: !10508)
!10508 = distinct !DILocation(line: 636, column: 3, scope: !10492)
!10509 = !DILocation(line: 638, column: 1, scope: !10492)
!10510 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !10303, file: !10303, line: 274, type: !10429, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10511)
!10511 = !{!10512, !10513, !10514}
!10512 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !10510, file: !10303, line: 274, type: !1302)
!10513 = !DILocalVariable(name: "Pin", arg: 2, scope: !10510, file: !10303, line: 274, type: !152)
!10514 = !DILocalVariable(name: "Mode", arg: 3, scope: !10510, file: !10303, line: 274, type: !152)
!10515 = !DILocation(line: 0, scope: !10510)
!10516 = !DILocation(line: 276, column: 3, scope: !10510)
!10517 = !DILocation(line: 0, scope: !10243, inlinedAt: !10518)
!10518 = distinct !DILocation(line: 276, column: 3, scope: !10510)
!10519 = !DILocation(line: 380, column: 4, scope: !10243, inlinedAt: !10518)
!10520 = !DILocation(line: 0, scope: !10251, inlinedAt: !10521)
!10521 = distinct !DILocation(line: 276, column: 3, scope: !10510)
!10522 = !DILocation(line: 414, column: 7, scope: !10251, inlinedAt: !10521)
!10523 = !DILocation(line: 0, scope: !10243, inlinedAt: !10524)
!10524 = distinct !DILocation(line: 276, column: 3, scope: !10510)
!10525 = !DILocation(line: 0, scope: !10251, inlinedAt: !10526)
!10526 = distinct !DILocation(line: 276, column: 3, scope: !10510)
!10527 = !DILocation(line: 277, column: 1, scope: !10510)
!10528 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1367, file: !1367, line: 698, type: !1380, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10529)
!10529 = !{!10530, !10531, !10532}
!10530 = !DILocalVariable(name: "dev", arg: 1, scope: !10528, file: !1367, line: 698, type: !1235)
!10531 = !DILocalVariable(name: "data", scope: !10528, file: !1367, line: 700, type: !9954)
!10532 = !DILocalVariable(name: "ret", scope: !10528, file: !1367, line: 701, type: !107)
!10533 = !DILocation(line: 0, scope: !10528)
!10534 = !DILocation(line: 700, column: 38, scope: !10528)
!10535 = !DILocation(line: 703, column: 8, scope: !10528)
!10536 = !DILocation(line: 703, column: 12, scope: !10528)
!10537 = !DILocation(line: 705, column: 7, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10528, file: !1367, line: 705, column: 6)
!10539 = !DILocation(line: 705, column: 6, scope: !10528)
!10540 = !DILocation(line: 722, column: 8, scope: !10528)
!10541 = !DILocation(line: 723, column: 10, scope: !10542)
!10542 = distinct !DILexicalBlock(scope: !10528, file: !1367, line: 723, column: 6)
!10543 = !DILocation(line: 723, column: 6, scope: !10528)
!10544 = !DILocation(line: 731, column: 1, scope: !10528)
!10545 = distinct !DISubprogram(name: "device_is_ready", scope: !8107, file: !8107, line: 47, type: !10546, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10548)
!10546 = !DISubroutineType(types: !10547)
!10547 = !{!145, !1235}
!10548 = !{!10549}
!10549 = !DILocalVariable(name: "dev", arg: 1, scope: !10545, file: !8107, line: 47, type: !1235)
!10550 = !DILocation(line: 0, scope: !10545)
!10551 = !DILocation(line: 55, column: 2, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10545, file: !8107, line: 55, column: 2)
!10553 = !{i64 2152416430}
!10554 = !DILocation(line: 56, column: 9, scope: !10545)
!10555 = !DILocation(line: 56, column: 2, scope: !10545)
!10556 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1367, file: !1367, line: 270, type: !10557, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10559)
!10557 = !DISubroutineType(types: !10558)
!10558 = !{!107, !1235, !145}
!10559 = !{!10560, !10561, !10562, !10563, !10564}
!10560 = !DILocalVariable(name: "dev", arg: 1, scope: !10556, file: !1367, line: 270, type: !1235)
!10561 = !DILocalVariable(name: "on", arg: 2, scope: !10556, file: !1367, line: 270, type: !145)
!10562 = !DILocalVariable(name: "cfg", scope: !10556, file: !1367, line: 272, type: !9887)
!10563 = !DILocalVariable(name: "ret", scope: !10556, file: !1367, line: 273, type: !107)
!10564 = !DILocalVariable(name: "clk", scope: !10556, file: !1367, line: 278, type: !10189)
!10565 = !DILocation(line: 0, scope: !10556)
!10566 = !DILocation(line: 272, column: 45, scope: !10556)
!10567 = !DILocation(line: 282, column: 38, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10569, file: !1367, line: 280, column: 10)
!10569 = distinct !DILexicalBlock(scope: !10556, file: !1367, line: 280, column: 6)
!10570 = !DILocation(line: 282, column: 6, scope: !10568)
!10571 = !DILocation(line: 281, column: 9, scope: !10568)
!10572 = !DILocation(line: 293, column: 1, scope: !10556)
!10573 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !10546, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10574)
!10574 = !{!10575}
!10575 = !DILocalVariable(name: "dev", arg: 1, scope: !10573, file: !260, line: 730, type: !1235)
!10576 = !DILocation(line: 0, scope: !10573)
!10577 = !DILocation(line: 732, column: 9, scope: !10573)
!10578 = !DILocation(line: 732, column: 2, scope: !10573)
!10579 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1367, file: !1367, line: 496, type: !10580, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1217, retainedNodes: !10582)
!10580 = !DISubroutineType(types: !10581)
!10581 = !{!107, !1235, !107, !107, !107}
!10582 = !{!10583, !10584, !10585, !10586, !10587, !10588}
!10583 = !DILocalVariable(name: "dev", arg: 1, scope: !10579, file: !1367, line: 496, type: !1235)
!10584 = !DILocalVariable(name: "pin", arg: 2, scope: !10579, file: !1367, line: 496, type: !107)
!10585 = !DILocalVariable(name: "conf", arg: 3, scope: !10579, file: !1367, line: 496, type: !107)
!10586 = !DILocalVariable(name: "func", arg: 4, scope: !10579, file: !1367, line: 496, type: !107)
!10587 = !DILocalVariable(name: "ret", scope: !10579, file: !1367, line: 498, type: !107)
!10588 = !DILocalVariable(name: "gpio_out", scope: !10589, file: !1367, line: 508, type: !152)
!10589 = distinct !DILexicalBlock(scope: !10590, file: !1367, line: 507, column: 27)
!10590 = distinct !DILexicalBlock(scope: !10579, file: !1367, line: 507, column: 6)
!10591 = !DILocation(line: 0, scope: !10579)
!10592 = !DILocation(line: 505, column: 2, scope: !10579)
!10593 = !DILocation(line: 507, column: 11, scope: !10590)
!10594 = !DILocation(line: 507, column: 6, scope: !10579)
!10595 = !DILocation(line: 508, column: 28, scope: !10589)
!10596 = !DILocation(line: 0, scope: !10589)
!10597 = !DILocation(line: 510, column: 16, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10589, file: !1367, line: 510, column: 7)
!10599 = !DILocation(line: 0, scope: !10598)
!10600 = !DILocation(line: 510, column: 7, scope: !10589)
!10601 = !DILocation(line: 511, column: 4, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10598, file: !1367, line: 510, column: 32)
!10603 = !DILocation(line: 512, column: 3, scope: !10602)
!10604 = !DILocation(line: 513, column: 4, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10606, file: !1367, line: 512, column: 39)
!10606 = distinct !DILexicalBlock(scope: !10598, file: !1367, line: 512, column: 14)
!10607 = !DILocation(line: 514, column: 3, scope: !10605)
!10608 = !DILocation(line: 518, column: 1, scope: !10579)
!10609 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1624, file: !1624, line: 526, type: !1528, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10610)
!10610 = !{!10611, !10612, !10613}
!10611 = !DILocalVariable(name: "dev", arg: 1, scope: !10609, file: !1624, line: 526, type: !1530)
!10612 = !DILocalVariable(name: "c", arg: 2, scope: !10609, file: !1624, line: 526, type: !1178)
!10613 = !DILocalVariable(name: "config", scope: !10609, file: !1624, line: 528, type: !10614)
!10614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!10615 = !DILocation(line: 0, scope: !10609)
!10616 = !DILocation(line: 528, column: 48, scope: !10609)
!10617 = !DILocation(line: 531, column: 40, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10609, file: !1624, line: 531, column: 6)
!10619 = !DILocation(line: 531, column: 6, scope: !10618)
!10620 = !DILocation(line: 531, column: 6, scope: !10609)
!10621 = !DILocation(line: 532, column: 34, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10618, file: !1624, line: 531, column: 48)
!10623 = !DILocation(line: 532, column: 3, scope: !10622)
!10624 = !DILocation(line: 533, column: 2, scope: !10622)
!10625 = !DILocation(line: 539, column: 42, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10609, file: !1624, line: 539, column: 6)
!10627 = !DILocation(line: 539, column: 7, scope: !10626)
!10628 = !DILocation(line: 539, column: 6, scope: !10609)
!10629 = !DILocation(line: 543, column: 52, scope: !10609)
!10630 = !DILocation(line: 543, column: 22, scope: !10609)
!10631 = !DILocation(line: 543, column: 5, scope: !10609)
!10632 = !DILocation(line: 545, column: 2, scope: !10609)
!10633 = !DILocation(line: 546, column: 1, scope: !10609)
!10634 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1624, file: !1624, line: 548, type: !1547, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10635)
!10635 = !{!10636, !10637, !10638, !10639}
!10636 = !DILocalVariable(name: "dev", arg: 1, scope: !10634, file: !1624, line: 548, type: !1530)
!10637 = !DILocalVariable(name: "c", arg: 2, scope: !10634, file: !1624, line: 549, type: !196)
!10638 = !DILocalVariable(name: "config", scope: !10634, file: !1624, line: 551, type: !10614)
!10639 = !DILocalVariable(name: "key", scope: !10634, file: !1624, line: 555, type: !32)
!10640 = !DILocation(line: 0, scope: !10634)
!10641 = !DILocation(line: 551, column: 48, scope: !10634)
!10642 = !DILocation(line: 562, column: 2, scope: !10634)
!10643 = !DILocation(line: 563, column: 41, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10645, file: !1624, line: 563, column: 7)
!10645 = distinct !DILexicalBlock(scope: !10634, file: !1624, line: 562, column: 12)
!10646 = !DILocation(line: 563, column: 7, scope: !10644)
!10647 = !DILocation(line: 563, column: 7, scope: !10645)
!10648 = !DILocation(line: 55, column: 2, scope: !10649, inlinedAt: !10653)
!10649 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5887, file: !5887, line: 42, type: !5888, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10650)
!10650 = !{!10651, !10652}
!10651 = !DILocalVariable(name: "key", scope: !10649, file: !5887, line: 44, type: !32)
!10652 = !DILocalVariable(name: "tmp", scope: !10649, file: !5887, line: 53, type: !32)
!10653 = distinct !DILocation(line: 564, column: 10, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10644, file: !1624, line: 563, column: 49)
!10655 = !{i64 1702489}
!10656 = !DILocation(line: 0, scope: !10649, inlinedAt: !10653)
!10657 = !DILocation(line: 565, column: 42, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10654, file: !1624, line: 565, column: 8)
!10659 = !DILocation(line: 565, column: 8, scope: !10658)
!10660 = !DILocation(line: 565, column: 8, scope: !10654)
!10661 = !DILocalVariable(name: "key", arg: 1, scope: !10662, file: !5887, line: 84, type: !32)
!10662 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5887, file: !5887, line: 84, type: !5898, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10663)
!10663 = !{!10661}
!10664 = !DILocation(line: 0, scope: !10662, inlinedAt: !10665)
!10665 = distinct !DILocation(line: 568, column: 4, scope: !10654)
!10666 = !DILocation(line: 95, column: 2, scope: !10662, inlinedAt: !10665)
!10667 = !{i64 1703306}
!10668 = !DILocation(line: 569, column: 3, scope: !10654)
!10669 = distinct !{!10669, !10642, !10670}
!10670 = !DILocation(line: 570, column: 2, scope: !10634)
!10671 = !DILocation(line: 592, column: 33, scope: !10634)
!10672 = !DILocation(line: 592, column: 2, scope: !10634)
!10673 = !DILocation(line: 0, scope: !10662, inlinedAt: !10674)
!10674 = distinct !DILocation(line: 593, column: 2, scope: !10634)
!10675 = !DILocation(line: 95, column: 2, scope: !10662, inlinedAt: !10674)
!10676 = !DILocation(line: 594, column: 1, scope: !10634)
!10677 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1624, file: !1624, line: 596, type: !1551, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10678)
!10678 = !{!10679, !10680, !10681}
!10679 = !DILocalVariable(name: "dev", arg: 1, scope: !10677, file: !1624, line: 596, type: !1530)
!10680 = !DILocalVariable(name: "config", scope: !10677, file: !1624, line: 598, type: !10614)
!10681 = !DILocalVariable(name: "err", scope: !10677, file: !1624, line: 599, type: !152)
!10682 = !DILocation(line: 0, scope: !10677)
!10683 = !DILocation(line: 598, column: 48, scope: !10677)
!10684 = !DILocation(line: 606, column: 40, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10677, file: !1624, line: 606, column: 6)
!10686 = !DILocation(line: 606, column: 6, scope: !10685)
!10687 = !DILocation(line: 606, column: 6, scope: !10677)
!10688 = !DILocation(line: 610, column: 39, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10677, file: !1624, line: 610, column: 6)
!10690 = !DILocation(line: 610, column: 6, scope: !10689)
!10691 = !DILocation(line: 610, column: 6, scope: !10677)
!10692 = !DILocation(line: 614, column: 39, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10677, file: !1624, line: 614, column: 6)
!10694 = !DILocation(line: 614, column: 6, scope: !10693)
!10695 = !DILocation(line: 614, column: 6, scope: !10677)
!10696 = !DILocation(line: 619, column: 40, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10677, file: !1624, line: 619, column: 6)
!10698 = !DILocation(line: 619, column: 6, scope: !10697)
!10699 = !DILocation(line: 619, column: 6, scope: !10677)
!10700 = !DILocation(line: 623, column: 10, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10677, file: !1624, line: 623, column: 6)
!10702 = !DILocation(line: 623, column: 6, scope: !10677)
!10703 = !DILocation(line: 624, column: 34, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10701, file: !1624, line: 623, column: 24)
!10705 = !DILocation(line: 624, column: 3, scope: !10704)
!10706 = !DILocation(line: 625, column: 2, scope: !10704)
!10707 = !DILocation(line: 632, column: 10, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10677, file: !1624, line: 632, column: 6)
!10709 = !DILocation(line: 632, column: 6, scope: !10677)
!10710 = !DILocation(line: 633, column: 34, scope: !10711)
!10711 = distinct !DILexicalBlock(scope: !10708, file: !1624, line: 632, column: 32)
!10712 = !DILocation(line: 633, column: 3, scope: !10711)
!10713 = !DILocation(line: 634, column: 2, scope: !10711)
!10714 = !DILocation(line: 636, column: 10, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10677, file: !1624, line: 636, column: 6)
!10716 = !DILocation(line: 636, column: 6, scope: !10677)
!10717 = !DILocation(line: 637, column: 33, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10715, file: !1624, line: 636, column: 31)
!10719 = !DILocation(line: 637, column: 3, scope: !10718)
!10720 = !DILocation(line: 638, column: 2, scope: !10718)
!10721 = !DILocation(line: 640, column: 10, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10677, file: !1624, line: 640, column: 6)
!10723 = !DILocation(line: 640, column: 6, scope: !10677)
!10724 = !DILocation(line: 641, column: 33, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10722, file: !1624, line: 640, column: 32)
!10726 = !DILocation(line: 641, column: 3, scope: !10725)
!10727 = !DILocation(line: 642, column: 2, scope: !10725)
!10728 = !DILocation(line: 646, column: 32, scope: !10677)
!10729 = !DILocation(line: 646, column: 2, scope: !10677)
!10730 = !DILocation(line: 648, column: 2, scope: !10677)
!10731 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1624, file: !1624, line: 419, type: !1555, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10732)
!10732 = !{!10733, !10734, !10735, !10736, !10738, !10739, !10740, !10741}
!10733 = !DILocalVariable(name: "dev", arg: 1, scope: !10731, file: !1624, line: 419, type: !1530)
!10734 = !DILocalVariable(name: "cfg", arg: 2, scope: !10731, file: !1624, line: 420, type: !1557)
!10735 = !DILocalVariable(name: "config", scope: !10731, file: !1624, line: 422, type: !10614)
!10736 = !DILocalVariable(name: "data", scope: !10731, file: !1624, line: 423, type: !10737)
!10737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!10738 = !DILocalVariable(name: "parity", scope: !10731, file: !1624, line: 424, type: !6475)
!10739 = !DILocalVariable(name: "stopbits", scope: !10731, file: !1624, line: 425, type: !6475)
!10740 = !DILocalVariable(name: "databits", scope: !10731, file: !1624, line: 426, type: !6475)
!10741 = !DILocalVariable(name: "flowctrl", scope: !10731, file: !1624, line: 428, type: !6475)
!10742 = !DILocation(line: 0, scope: !10731)
!10743 = !DILocation(line: 422, column: 48, scope: !10731)
!10744 = !DILocation(line: 423, column: 38, scope: !10731)
!10745 = !DILocation(line: 424, column: 56, scope: !10731)
!10746 = !DILocation(line: 424, column: 51, scope: !10731)
!10747 = !DILocation(line: 424, column: 26, scope: !10731)
!10748 = !DILocation(line: 425, column: 60, scope: !10731)
!10749 = !DILocation(line: 425, column: 55, scope: !10731)
!10750 = !DILocation(line: 425, column: 28, scope: !10731)
!10751 = !DILocation(line: 426, column: 60, scope: !10731)
!10752 = !DILocation(line: 426, column: 55, scope: !10731)
!10753 = !DILocation(line: 426, column: 28, scope: !10731)
!10754 = !DILocation(line: 428, column: 58, scope: !10731)
!10755 = !DILocation(line: 428, column: 53, scope: !10731)
!10756 = !DILocation(line: 428, column: 28, scope: !10731)
!10757 = !DILocation(line: 431, column: 44, scope: !10758)
!10758 = distinct !DILexicalBlock(scope: !10731, file: !1624, line: 431, column: 6)
!10759 = !DILocation(line: 438, column: 22, scope: !10760)
!10760 = distinct !DILexicalBlock(scope: !10731, file: !1624, line: 437, column: 6)
!10761 = !DILocation(line: 437, column: 6, scope: !10731)
!10762 = !DILocation(line: 448, column: 6, scope: !10731)
!10763 = !DILocation(line: 465, column: 47, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10731, file: !1624, line: 465, column: 6)
!10765 = !DILocation(line: 475, column: 21, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10731, file: !1624, line: 475, column: 6)
!10767 = !DILocation(line: 475, column: 6, scope: !10731)
!10768 = !DILocation(line: 476, column: 8, scope: !10769)
!10769 = distinct !DILexicalBlock(scope: !10770, file: !1624, line: 476, column: 7)
!10770 = distinct !DILexicalBlock(scope: !10766, file: !1624, line: 475, column: 49)
!10771 = !DILocation(line: 477, column: 34, scope: !10769)
!10772 = !DILocation(line: 476, column: 7, scope: !10770)
!10773 = !DILocation(line: 482, column: 27, scope: !10731)
!10774 = !DILocation(line: 482, column: 2, scope: !10731)
!10775 = !DILocation(line: 484, column: 16, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10731, file: !1624, line: 484, column: 6)
!10777 = !DILocation(line: 484, column: 13, scope: !10776)
!10778 = !DILocation(line: 484, column: 6, scope: !10731)
!10779 = !DILocation(line: 485, column: 3, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10776, file: !1624, line: 484, column: 44)
!10781 = !DILocation(line: 486, column: 2, scope: !10780)
!10782 = !DILocation(line: 488, column: 18, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10731, file: !1624, line: 488, column: 6)
!10784 = !DILocation(line: 488, column: 15, scope: !10783)
!10785 = !DILocation(line: 488, column: 6, scope: !10731)
!10786 = !DILocation(line: 489, column: 3, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10783, file: !1624, line: 488, column: 48)
!10788 = !DILocation(line: 490, column: 2, scope: !10787)
!10789 = !DILocation(line: 492, column: 18, scope: !10790)
!10790 = distinct !DILexicalBlock(scope: !10731, file: !1624, line: 492, column: 6)
!10791 = !DILocation(line: 492, column: 15, scope: !10790)
!10792 = !DILocation(line: 492, column: 6, scope: !10731)
!10793 = !DILocation(line: 493, column: 3, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10790, file: !1624, line: 492, column: 48)
!10795 = !DILocation(line: 494, column: 2, scope: !10794)
!10796 = !DILocation(line: 496, column: 18, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10731, file: !1624, line: 496, column: 6)
!10798 = !DILocation(line: 496, column: 15, scope: !10797)
!10799 = !DILocation(line: 496, column: 6, scope: !10731)
!10800 = !DILocation(line: 497, column: 3, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10797, file: !1624, line: 496, column: 46)
!10802 = !DILocation(line: 498, column: 2, scope: !10801)
!10803 = !DILocation(line: 500, column: 11, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10731, file: !1624, line: 500, column: 6)
!10805 = !DILocation(line: 500, column: 29, scope: !10804)
!10806 = !DILocation(line: 500, column: 20, scope: !10804)
!10807 = !DILocation(line: 500, column: 6, scope: !10731)
!10808 = !DILocation(line: 501, column: 3, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10804, file: !1624, line: 500, column: 40)
!10810 = !DILocation(line: 502, column: 26, scope: !10809)
!10811 = !DILocation(line: 502, column: 19, scope: !10809)
!10812 = !DILocation(line: 503, column: 2, scope: !10809)
!10813 = !DILocation(line: 505, column: 26, scope: !10731)
!10814 = !DILocation(line: 505, column: 2, scope: !10731)
!10815 = !DILocation(line: 506, column: 2, scope: !10731)
!10816 = !DILocation(line: 507, column: 1, scope: !10731)
!10817 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1624, file: !1624, line: 509, type: !1568, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10818)
!10818 = !{!10819, !10820, !10821}
!10819 = !DILocalVariable(name: "dev", arg: 1, scope: !10817, file: !1624, line: 509, type: !1530)
!10820 = !DILocalVariable(name: "cfg", arg: 2, scope: !10817, file: !1624, line: 510, type: !1570)
!10821 = !DILocalVariable(name: "data", scope: !10817, file: !1624, line: 512, type: !10737)
!10822 = !DILocation(line: 0, scope: !10817)
!10823 = !DILocation(line: 512, column: 38, scope: !10817)
!10824 = !DILocation(line: 514, column: 24, scope: !10817)
!10825 = !DILocation(line: 514, column: 7, scope: !10817)
!10826 = !DILocation(line: 514, column: 16, scope: !10817)
!10827 = !DILocation(line: 515, column: 41, scope: !10817)
!10828 = !{i32 0, i32 1537}
!10829 = !DILocation(line: 515, column: 16, scope: !10817)
!10830 = !DILocation(line: 515, column: 7, scope: !10817)
!10831 = !DILocation(line: 515, column: 14, scope: !10817)
!10832 = !DILocation(line: 517, column: 3, scope: !10817)
!10833 = !{i32 0, i32 12289}
!10834 = !DILocation(line: 516, column: 19, scope: !10817)
!10835 = !DILocation(line: 516, column: 7, scope: !10817)
!10836 = !DILocation(line: 516, column: 17, scope: !10817)
!10837 = !DILocation(line: 519, column: 3, scope: !10817)
!10838 = !DILocation(line: 519, column: 33, scope: !10817)
!10839 = !DILocation(line: 518, column: 19, scope: !10817)
!10840 = !DILocation(line: 518, column: 7, scope: !10817)
!10841 = !DILocation(line: 518, column: 17, scope: !10817)
!10842 = !DILocation(line: 521, column: 3, scope: !10817)
!10843 = !{i32 0, i32 769}
!10844 = !DILocation(line: 520, column: 19, scope: !10817)
!10845 = !DILocation(line: 520, column: 7, scope: !10817)
!10846 = !DILocation(line: 520, column: 17, scope: !10817)
!10847 = !DILocation(line: 522, column: 2, scope: !10817)
!10848 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1624, file: !1624, line: 205, type: !10849, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10851)
!10849 = !DISubroutineType(types: !10850)
!10850 = !{!152, !1530}
!10851 = !{!10852, !10853}
!10852 = !DILocalVariable(name: "dev", arg: 1, scope: !10848, file: !1624, line: 205, type: !1530)
!10853 = !DILocalVariable(name: "config", scope: !10848, file: !1624, line: 207, type: !10614)
!10854 = !DILocation(line: 0, scope: !10848)
!10855 = !DILocation(line: 207, column: 48, scope: !10848)
!10856 = !DILocation(line: 209, column: 36, scope: !10848)
!10857 = !DILocation(line: 209, column: 9, scope: !10848)
!10858 = !DILocation(line: 209, column: 2, scope: !10848)
!10859 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1624, file: !1624, line: 270, type: !10860, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10862)
!10860 = !DISubroutineType(types: !10861)
!10861 = !{!1496, !152}
!10862 = !{!10863}
!10863 = !DILocalVariable(name: "parity", arg: 1, scope: !10859, file: !1624, line: 270, type: !152)
!10864 = !DILocation(line: 0, scope: !10859)
!10865 = !DILocation(line: 272, column: 2, scope: !10859)
!10866 = !DILocation(line: 281, column: 1, scope: !10859)
!10867 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1624, file: !1624, line: 220, type: !10849, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10868)
!10868 = !{!10869, !10870}
!10869 = !DILocalVariable(name: "dev", arg: 1, scope: !10867, file: !1624, line: 220, type: !1530)
!10870 = !DILocalVariable(name: "config", scope: !10867, file: !1624, line: 222, type: !10614)
!10871 = !DILocation(line: 0, scope: !10867)
!10872 = !DILocation(line: 222, column: 48, scope: !10867)
!10873 = !DILocation(line: 224, column: 44, scope: !10867)
!10874 = !DILocation(line: 224, column: 9, scope: !10867)
!10875 = !DILocation(line: 224, column: 2, scope: !10867)
!10876 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1624, file: !1624, line: 304, type: !10877, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10879)
!10877 = !DISubroutineType(types: !10878)
!10878 = !{!1510, !152}
!10879 = !{!10880}
!10880 = !DILocalVariable(name: "sb", arg: 1, scope: !10876, file: !1624, line: 304, type: !152)
!10881 = !DILocation(line: 0, scope: !10876)
!10882 = !DILocation(line: 306, column: 2, scope: !10876)
!10883 = !DILocation(line: 0, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10876, file: !1624, line: 306, column: 14)
!10885 = !DILocation(line: 323, column: 1, scope: !10876)
!10886 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1624, file: !1624, line: 235, type: !10849, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10887)
!10887 = !{!10888, !10889}
!10888 = !DILocalVariable(name: "dev", arg: 1, scope: !10886, file: !1624, line: 235, type: !1530)
!10889 = !DILocalVariable(name: "config", scope: !10886, file: !1624, line: 237, type: !10614)
!10890 = !DILocation(line: 0, scope: !10886)
!10891 = !DILocation(line: 237, column: 48, scope: !10886)
!10892 = !DILocation(line: 239, column: 39, scope: !10886)
!10893 = !DILocation(line: 239, column: 9, scope: !10886)
!10894 = !DILocation(line: 239, column: 2, scope: !10886)
!10895 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1624, file: !1624, line: 355, type: !10896, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10898)
!10896 = !DISubroutineType(types: !10897)
!10897 = !{!1503, !152, !152}
!10898 = !{!10899, !10900}
!10899 = !DILocalVariable(name: "db", arg: 1, scope: !10895, file: !1624, line: 355, type: !152)
!10900 = !DILocalVariable(name: "p", arg: 2, scope: !10895, file: !1624, line: 356, type: !152)
!10901 = !DILocation(line: 0, scope: !10895)
!10902 = !DILocation(line: 358, column: 2, scope: !10895)
!10903 = !DILocation(line: 384, column: 1, scope: !10895)
!10904 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1624, file: !1624, line: 250, type: !10849, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10905)
!10905 = !{!10906, !10907}
!10906 = !DILocalVariable(name: "dev", arg: 1, scope: !10904, file: !1624, line: 250, type: !1530)
!10907 = !DILocalVariable(name: "config", scope: !10904, file: !1624, line: 252, type: !10614)
!10908 = !DILocation(line: 0, scope: !10904)
!10909 = !DILocation(line: 252, column: 48, scope: !10904)
!10910 = !DILocation(line: 254, column: 40, scope: !10904)
!10911 = !DILocation(line: 254, column: 9, scope: !10904)
!10912 = !DILocation(line: 254, column: 2, scope: !10904)
!10913 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1624, file: !1624, line: 409, type: !10914, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10916)
!10914 = !DISubroutineType(types: !10915)
!10915 = !{!1516, !152}
!10916 = !{!10917}
!10917 = !DILocalVariable(name: "fc", arg: 1, scope: !10913, file: !1624, line: 409, type: !152)
!10918 = !DILocation(line: 0, scope: !10913)
!10919 = !DILocation(line: 411, column: 9, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10913, file: !1624, line: 411, column: 6)
!10921 = !DILocation(line: 416, column: 1, scope: !10913)
!10922 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10923, file: !10923, line: 966, type: !10924, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10926)
!10923 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10924 = !DISubroutineType(types: !10925)
!10925 = !{!152, !1571}
!10926 = !{!10927}
!10927 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10922, file: !10923, line: 966, type: !1571)
!10928 = !DILocation(line: 0, scope: !10922)
!10929 = !DILocation(line: 968, column: 21, scope: !10922)
!10930 = !DILocation(line: 968, column: 3, scope: !10922)
!10931 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10923, file: !10923, line: 600, type: !10924, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10932)
!10932 = !{!10933}
!10933 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10931, file: !10923, line: 600, type: !1571)
!10934 = !DILocation(line: 0, scope: !10931)
!10935 = !DILocation(line: 602, column: 21, scope: !10931)
!10936 = !DILocation(line: 602, column: 3, scope: !10931)
!10937 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10923, file: !10923, line: 819, type: !10924, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10938)
!10938 = !{!10939}
!10939 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10937, file: !10923, line: 819, type: !1571)
!10940 = !DILocation(line: 0, scope: !10937)
!10941 = !DILocation(line: 821, column: 21, scope: !10937)
!10942 = !DILocation(line: 821, column: 3, scope: !10937)
!10943 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10923, file: !10923, line: 546, type: !10924, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10944)
!10944 = !{!10945}
!10945 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10943, file: !10923, line: 546, type: !1571)
!10946 = !DILocation(line: 0, scope: !10943)
!10947 = !DILocation(line: 548, column: 21, scope: !10943)
!10948 = !DILocation(line: 548, column: 3, scope: !10943)
!10949 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1624, file: !1624, line: 257, type: !10950, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10952)
!10950 = !DISubroutineType(types: !10951)
!10951 = !{!152, !1496}
!10952 = !{!10953}
!10953 = !DILocalVariable(name: "parity", arg: 1, scope: !10949, file: !1624, line: 257, type: !1496)
!10954 = !DILocation(line: 0, scope: !10949)
!10955 = !DILocation(line: 259, column: 2, scope: !10949)
!10956 = !DILocation(line: 268, column: 1, scope: !10949)
!10957 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1624, file: !1624, line: 283, type: !10958, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10960)
!10958 = !DISubroutineType(types: !10959)
!10959 = !{!152, !1510}
!10960 = !{!10961}
!10961 = !DILocalVariable(name: "sb", arg: 1, scope: !10957, file: !1624, line: 283, type: !1510)
!10962 = !DILocation(line: 0, scope: !10957)
!10963 = !DILocation(line: 285, column: 2, scope: !10957)
!10964 = !DILocation(line: 0, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10957, file: !1624, line: 285, column: 14)
!10966 = !DILocation(line: 302, column: 1, scope: !10957)
!10967 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1624, file: !1624, line: 325, type: !10968, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10970)
!10968 = !DISubroutineType(types: !10969)
!10969 = !{!152, !1503, !1496}
!10970 = !{!10971, !10972}
!10971 = !DILocalVariable(name: "db", arg: 1, scope: !10967, file: !1624, line: 325, type: !1503)
!10972 = !DILocalVariable(name: "p", arg: 2, scope: !10967, file: !1624, line: 326, type: !1496)
!10973 = !DILocation(line: 0, scope: !10967)
!10974 = !DILocation(line: 328, column: 2, scope: !10967)
!10975 = !DILocation(line: 353, column: 1, scope: !10967)
!10976 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1624, file: !1624, line: 393, type: !10977, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10979)
!10977 = !DISubroutineType(types: !10978)
!10978 = !{!152, !1516}
!10979 = !{!10980}
!10980 = !DILocalVariable(name: "fc", arg: 1, scope: !10976, file: !1624, line: 393, type: !1516)
!10981 = !DILocation(line: 0, scope: !10976)
!10982 = !DILocation(line: 395, column: 9, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10976, file: !1624, line: 395, column: 6)
!10984 = !DILocation(line: 400, column: 1, scope: !10976)
!10985 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10923, file: !10923, line: 423, type: !10986, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10988)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{null, !1571}
!10988 = !{!10989}
!10989 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10985, file: !10923, line: 423, type: !1571)
!10990 = !DILocation(line: 0, scope: !10985)
!10991 = !DILocation(line: 425, column: 3, scope: !10985)
!10992 = !DILocation(line: 426, column: 1, scope: !10985)
!10993 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1624, file: !1624, line: 197, type: !10994, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !10996)
!10994 = !DISubroutineType(types: !10995)
!10995 = !{null, !1530, !152}
!10996 = !{!10997, !10998, !10999}
!10997 = !DILocalVariable(name: "dev", arg: 1, scope: !10993, file: !1624, line: 197, type: !1530)
!10998 = !DILocalVariable(name: "parity", arg: 2, scope: !10993, file: !1624, line: 198, type: !152)
!10999 = !DILocalVariable(name: "config", scope: !10993, file: !1624, line: 200, type: !10614)
!11000 = !DILocation(line: 0, scope: !10993)
!11001 = !DILocation(line: 200, column: 48, scope: !10993)
!11002 = !DILocation(line: 202, column: 29, scope: !10993)
!11003 = !DILocation(line: 202, column: 2, scope: !10993)
!11004 = !DILocation(line: 203, column: 1, scope: !10993)
!11005 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1624, file: !1624, line: 212, type: !10994, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11006)
!11006 = !{!11007, !11008, !11009}
!11007 = !DILocalVariable(name: "dev", arg: 1, scope: !11005, file: !1624, line: 212, type: !1530)
!11008 = !DILocalVariable(name: "stopbits", arg: 2, scope: !11005, file: !1624, line: 213, type: !152)
!11009 = !DILocalVariable(name: "config", scope: !11005, file: !1624, line: 215, type: !10614)
!11010 = !DILocation(line: 0, scope: !11005)
!11011 = !DILocation(line: 215, column: 48, scope: !11005)
!11012 = !DILocation(line: 217, column: 37, scope: !11005)
!11013 = !DILocation(line: 217, column: 2, scope: !11005)
!11014 = !DILocation(line: 218, column: 1, scope: !11005)
!11015 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1624, file: !1624, line: 227, type: !10994, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11016)
!11016 = !{!11017, !11018, !11019}
!11017 = !DILocalVariable(name: "dev", arg: 1, scope: !11015, file: !1624, line: 227, type: !1530)
!11018 = !DILocalVariable(name: "databits", arg: 2, scope: !11015, file: !1624, line: 228, type: !152)
!11019 = !DILocalVariable(name: "config", scope: !11015, file: !1624, line: 230, type: !10614)
!11020 = !DILocation(line: 0, scope: !11015)
!11021 = !DILocation(line: 230, column: 48, scope: !11015)
!11022 = !DILocation(line: 232, column: 32, scope: !11015)
!11023 = !DILocation(line: 232, column: 2, scope: !11015)
!11024 = !DILocation(line: 233, column: 1, scope: !11015)
!11025 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1624, file: !1624, line: 242, type: !10994, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11026)
!11026 = !{!11027, !11028, !11029}
!11027 = !DILocalVariable(name: "dev", arg: 1, scope: !11025, file: !1624, line: 242, type: !1530)
!11028 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !11025, file: !1624, line: 243, type: !152)
!11029 = !DILocalVariable(name: "config", scope: !11025, file: !1624, line: 245, type: !10614)
!11030 = !DILocation(line: 0, scope: !11025)
!11031 = !DILocation(line: 245, column: 48, scope: !11025)
!11032 = !DILocation(line: 247, column: 33, scope: !11025)
!11033 = !DILocation(line: 247, column: 2, scope: !11025)
!11034 = !DILocation(line: 248, column: 1, scope: !11025)
!11035 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1624, file: !1624, line: 107, type: !10994, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11036)
!11036 = !{!11037, !11038, !11039, !11040, !11041}
!11037 = !DILocalVariable(name: "dev", arg: 1, scope: !11035, file: !1624, line: 107, type: !1530)
!11038 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !11035, file: !1624, line: 107, type: !152)
!11039 = !DILocalVariable(name: "config", scope: !11035, file: !1624, line: 109, type: !10614)
!11040 = !DILocalVariable(name: "data", scope: !11035, file: !1624, line: 110, type: !10737)
!11041 = !DILocalVariable(name: "clock_rate", scope: !11035, file: !1624, line: 112, type: !152)
!11042 = !DILocation(line: 0, scope: !11035)
!11043 = !DILocation(line: 109, column: 48, scope: !11035)
!11044 = !DILocation(line: 110, column: 38, scope: !11035)
!11045 = !DILocation(line: 112, column: 2, scope: !11035)
!11046 = !DILocation(line: 123, column: 36, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11048, file: !1624, line: 123, column: 7)
!11048 = distinct !DILexicalBlock(scope: !11049, file: !1624, line: 122, column: 9)
!11049 = distinct !DILexicalBlock(scope: !11035, file: !1624, line: 115, column: 6)
!11050 = !DILocation(line: 124, column: 42, scope: !11047)
!11051 = !DILocation(line: 123, column: 7, scope: !11047)
!11052 = !DILocation(line: 125, column: 22, scope: !11047)
!11053 = !DILocation(line: 123, column: 7, scope: !11048)
!11054 = !DILocation(line: 126, column: 4, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !1624, line: 126, column: 4)
!11056 = distinct !DILexicalBlock(scope: !11057, file: !1624, line: 126, column: 4)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !1624, line: 126, column: 4)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !1624, line: 126, column: 4)
!11059 = distinct !DILexicalBlock(scope: !11047, file: !1624, line: 125, column: 27)
!11060 = !DILocation(line: 127, column: 4, scope: !11059)
!11061 = !DILocation(line: 176, column: 36, scope: !11035)
!11062 = !DILocation(line: 176, column: 3, scope: !11035)
!11063 = !DILocation(line: 179, column: 32, scope: !11035)
!11064 = !DILocation(line: 180, column: 10, scope: !11035)
!11065 = !DILocation(line: 179, column: 3, scope: !11035)
!11066 = !DILocation(line: 189, column: 3, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !1624, line: 189, column: 3)
!11068 = distinct !DILexicalBlock(scope: !11035, file: !1624, line: 189, column: 3)
!11069 = !DILocation(line: 189, column: 3, scope: !11068)
!11070 = !DILocation(line: 189, column: 3, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11067, file: !1624, line: 189, column: 3)
!11072 = !DILocation(line: 195, column: 1, scope: !11035)
!11073 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10923, file: !10923, line: 409, type: !10986, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11074)
!11074 = !{!11075}
!11075 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11073, file: !10923, line: 409, type: !1571)
!11076 = !DILocation(line: 0, scope: !11073)
!11077 = !DILocation(line: 411, column: 3, scope: !11073)
!11078 = !DILocation(line: 412, column: 1, scope: !11073)
!11079 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !1044, file: !1044, line: 216, type: !1604, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11080)
!11080 = !{!11081, !11082, !11083, !11084}
!11081 = !DILocalVariable(name: "dev", arg: 1, scope: !11079, file: !1044, line: 216, type: !1530)
!11082 = !DILocalVariable(name: "sys", arg: 2, scope: !11079, file: !1044, line: 217, type: !1117)
!11083 = !DILocalVariable(name: "rate", arg: 3, scope: !11079, file: !1044, line: 218, type: !1075)
!11084 = !DILocalVariable(name: "api", scope: !11079, file: !1044, line: 220, type: !1582)
!11085 = !DILocation(line: 0, scope: !11079)
!11086 = !DILocation(line: 221, column: 49, scope: !11079)
!11087 = !DILocation(line: 223, column: 11, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11079, file: !1044, line: 223, column: 6)
!11089 = !DILocation(line: 223, column: 20, scope: !11088)
!11090 = !DILocation(line: 223, column: 6, scope: !11079)
!11091 = !DILocation(line: 227, column: 9, scope: !11079)
!11092 = !DILocation(line: 227, column: 2, scope: !11079)
!11093 = !DILocation(line: 228, column: 1, scope: !11079)
!11094 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !5982, file: !5982, line: 175, type: !5983, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11095)
!11095 = !{!11096}
!11096 = !DILocalVariable(name: "level", arg: 1, scope: !11094, file: !5982, line: 175, type: !107)
!11097 = !DILocation(line: 0, scope: !11094)
!11098 = !DILocation(line: 177, column: 2, scope: !11094)
!11099 = !DILocation(line: 189, column: 1, scope: !11094)
!11100 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10923, file: !10923, line: 614, type: !11101, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11103)
!11101 = !DISubroutineType(types: !11102)
!11102 = !{null, !1571, !152}
!11103 = !{!11104, !11105}
!11104 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11100, file: !10923, line: 614, type: !1571)
!11105 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !11100, file: !10923, line: 614, type: !152)
!11106 = !DILocation(line: 0, scope: !11100)
!11107 = !DILocation(line: 616, column: 3, scope: !11100)
!11108 = !DILocation(line: 617, column: 1, scope: !11100)
!11109 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10923, file: !10923, line: 1019, type: !11110, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11112)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{null, !1571, !152, !152, !152}
!11112 = !{!11113, !11114, !11115, !11116}
!11113 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11109, file: !10923, line: 1019, type: !1571)
!11114 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !11109, file: !10923, line: 1019, type: !152)
!11115 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !11109, file: !10923, line: 1019, type: !152)
!11116 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !11109, file: !10923, line: 1020, type: !152)
!11117 = !DILocation(line: 0, scope: !11109)
!11118 = !DILocation(line: 1028, column: 30, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11120, file: !10923, line: 1027, column: 3)
!11120 = distinct !DILexicalBlock(scope: !11109, file: !10923, line: 1022, column: 7)
!11121 = !DILocation(line: 1028, column: 19, scope: !11119)
!11122 = !DILocation(line: 1028, column: 13, scope: !11119)
!11123 = !DILocation(line: 1028, column: 17, scope: !11119)
!11124 = !DILocation(line: 1030, column: 1, scope: !11109)
!11125 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10923, file: !10923, line: 948, type: !11101, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11126)
!11126 = !{!11127, !11128}
!11127 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11125, file: !10923, line: 948, type: !1571)
!11128 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !11125, file: !10923, line: 948, type: !152)
!11129 = !DILocation(line: 0, scope: !11125)
!11130 = !DILocation(line: 950, column: 3, scope: !11125)
!11131 = !DILocation(line: 951, column: 1, scope: !11125)
!11132 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10923, file: !10923, line: 587, type: !11101, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11133)
!11133 = !{!11134, !11135}
!11134 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11132, file: !10923, line: 587, type: !1571)
!11135 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11132, file: !10923, line: 587, type: !152)
!11136 = !DILocation(line: 0, scope: !11132)
!11137 = !DILocation(line: 589, column: 3, scope: !11132)
!11138 = !DILocation(line: 590, column: 1, scope: !11132)
!11139 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10923, file: !10923, line: 804, type: !11101, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11140)
!11140 = !{!11141, !11142}
!11141 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11139, file: !10923, line: 804, type: !1571)
!11142 = !DILocalVariable(name: "StopBits", arg: 2, scope: !11139, file: !10923, line: 804, type: !152)
!11143 = !DILocation(line: 0, scope: !11139)
!11144 = !DILocation(line: 806, column: 3, scope: !11139)
!11145 = !DILocation(line: 807, column: 1, scope: !11139)
!11146 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10923, file: !10923, line: 531, type: !11101, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11147)
!11147 = !{!11148, !11149}
!11148 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11146, file: !10923, line: 531, type: !1571)
!11149 = !DILocalVariable(name: "Parity", arg: 2, scope: !11146, file: !10923, line: 531, type: !152)
!11150 = !DILocation(line: 0, scope: !11146)
!11151 = !DILocation(line: 533, column: 3, scope: !11146)
!11152 = !DILocation(line: 534, column: 1, scope: !11146)
!11153 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10923, file: !10923, line: 1769, type: !10924, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11154)
!11154 = !{!11155}
!11155 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11153, file: !10923, line: 1769, type: !1571)
!11156 = !DILocation(line: 0, scope: !11153)
!11157 = !DILocation(line: 1771, column: 11, scope: !11153)
!11158 = !DILocation(line: 1771, column: 46, scope: !11153)
!11159 = !DILocation(line: 1771, column: 3, scope: !11153)
!11160 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10923, file: !10923, line: 1736, type: !10924, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11161)
!11161 = !{!11162}
!11162 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11160, file: !10923, line: 1736, type: !1571)
!11163 = !DILocation(line: 0, scope: !11160)
!11164 = !DILocation(line: 1738, column: 11, scope: !11160)
!11165 = !DILocation(line: 1738, column: 3, scope: !11160)
!11166 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10923, file: !10923, line: 1747, type: !10924, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11167)
!11167 = !{!11168}
!11168 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11166, file: !10923, line: 1747, type: !1571)
!11169 = !DILocation(line: 0, scope: !11166)
!11170 = !DILocation(line: 1749, column: 11, scope: !11166)
!11171 = !DILocation(line: 1749, column: 45, scope: !11166)
!11172 = !DILocation(line: 1749, column: 3, scope: !11166)
!11173 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10923, file: !10923, line: 1826, type: !10924, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11174)
!11174 = !{!11175}
!11175 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11173, file: !10923, line: 1826, type: !1571)
!11176 = !DILocation(line: 0, scope: !11173)
!11177 = !DILocation(line: 1828, column: 11, scope: !11173)
!11178 = !DILocation(line: 1828, column: 46, scope: !11173)
!11179 = !DILocation(line: 1828, column: 3, scope: !11173)
!11180 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10923, file: !10923, line: 1991, type: !10986, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11181)
!11181 = !{!11182}
!11182 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11180, file: !10923, line: 1991, type: !1571)
!11183 = !DILocation(line: 0, scope: !11180)
!11184 = !DILocation(line: 1993, column: 3, scope: !11180)
!11185 = !DILocation(line: 1994, column: 1, scope: !11180)
!11186 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10923, file: !10923, line: 1933, type: !10986, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11187)
!11187 = !{!11188, !11189}
!11188 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11186, file: !10923, line: 1933, type: !1571)
!11189 = !DILocalVariable(name: "tmpreg", scope: !11186, file: !10923, line: 1935, type: !227)
!11190 = !DILocation(line: 0, scope: !11186)
!11191 = !DILocation(line: 1935, column: 3, scope: !11186)
!11192 = !DILocation(line: 1935, column: 17, scope: !11186)
!11193 = !DILocation(line: 1936, column: 20, scope: !11186)
!11194 = !DILocation(line: 1936, column: 10, scope: !11186)
!11195 = !DILocation(line: 1937, column: 10, scope: !11186)
!11196 = !DILocation(line: 1938, column: 20, scope: !11186)
!11197 = !DILocation(line: 1938, column: 10, scope: !11186)
!11198 = !DILocation(line: 1939, column: 10, scope: !11186)
!11199 = !DILocation(line: 1940, column: 1, scope: !11186)
!11200 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10923, file: !10923, line: 1876, type: !10986, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11201)
!11201 = !{!11202, !11203}
!11202 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11200, file: !10923, line: 1876, type: !1571)
!11203 = !DILocalVariable(name: "tmpreg", scope: !11200, file: !10923, line: 1878, type: !227)
!11204 = !DILocation(line: 0, scope: !11200)
!11205 = !DILocation(line: 1878, column: 3, scope: !11200)
!11206 = !DILocation(line: 1878, column: 17, scope: !11200)
!11207 = !DILocation(line: 1879, column: 20, scope: !11200)
!11208 = !DILocation(line: 1879, column: 10, scope: !11200)
!11209 = !DILocation(line: 1880, column: 10, scope: !11200)
!11210 = !DILocation(line: 1881, column: 20, scope: !11200)
!11211 = !DILocation(line: 1881, column: 10, scope: !11200)
!11212 = !DILocation(line: 1882, column: 10, scope: !11200)
!11213 = !DILocation(line: 1883, column: 1, scope: !11200)
!11214 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10923, file: !10923, line: 1895, type: !10986, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11215)
!11215 = !{!11216, !11217}
!11216 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11214, file: !10923, line: 1895, type: !1571)
!11217 = !DILocalVariable(name: "tmpreg", scope: !11214, file: !10923, line: 1897, type: !227)
!11218 = !DILocation(line: 0, scope: !11214)
!11219 = !DILocation(line: 1897, column: 3, scope: !11214)
!11220 = !DILocation(line: 1897, column: 17, scope: !11214)
!11221 = !DILocation(line: 1898, column: 20, scope: !11214)
!11222 = !DILocation(line: 1898, column: 10, scope: !11214)
!11223 = !DILocation(line: 1899, column: 10, scope: !11214)
!11224 = !DILocation(line: 1900, column: 20, scope: !11214)
!11225 = !DILocation(line: 1900, column: 10, scope: !11214)
!11226 = !DILocation(line: 1901, column: 10, scope: !11214)
!11227 = !DILocation(line: 1902, column: 1, scope: !11214)
!11228 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10923, file: !10923, line: 1914, type: !10986, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11229)
!11229 = !{!11230, !11231}
!11230 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11228, file: !10923, line: 1914, type: !1571)
!11231 = !DILocalVariable(name: "tmpreg", scope: !11228, file: !10923, line: 1916, type: !227)
!11232 = !DILocation(line: 0, scope: !11228)
!11233 = !DILocation(line: 1916, column: 3, scope: !11228)
!11234 = !DILocation(line: 1916, column: 17, scope: !11228)
!11235 = !DILocation(line: 1917, column: 20, scope: !11228)
!11236 = !DILocation(line: 1917, column: 10, scope: !11228)
!11237 = !DILocation(line: 1918, column: 10, scope: !11228)
!11238 = !DILocation(line: 1919, column: 20, scope: !11228)
!11239 = !DILocation(line: 1919, column: 10, scope: !11228)
!11240 = !DILocation(line: 1920, column: 10, scope: !11228)
!11241 = !DILocation(line: 1921, column: 1, scope: !11228)
!11242 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10923, file: !10923, line: 1813, type: !10924, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11243)
!11243 = !{!11244}
!11244 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11242, file: !10923, line: 1813, type: !1571)
!11245 = !DILocation(line: 0, scope: !11242)
!11246 = !DILocation(line: 1815, column: 11, scope: !11242)
!11247 = !DILocation(line: 1815, column: 46, scope: !11242)
!11248 = !DILocation(line: 1815, column: 3, scope: !11242)
!11249 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10923, file: !10923, line: 2425, type: !11250, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11252)
!11250 = !DISubroutineType(types: !11251)
!11251 = !{null, !1571, !195}
!11252 = !{!11253, !11254}
!11253 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11249, file: !10923, line: 2425, type: !1571)
!11254 = !DILocalVariable(name: "Value", arg: 2, scope: !11249, file: !10923, line: 2425, type: !195)
!11255 = !DILocation(line: 0, scope: !11249)
!11256 = !DILocation(line: 2427, column: 16, scope: !11249)
!11257 = !DILocation(line: 2427, column: 11, scope: !11249)
!11258 = !DILocation(line: 2427, column: 14, scope: !11249)
!11259 = !DILocation(line: 2428, column: 1, scope: !11249)
!11260 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10923, file: !10923, line: 1791, type: !10924, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11261)
!11261 = !{!11262}
!11262 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11260, file: !10923, line: 1791, type: !1571)
!11263 = !DILocation(line: 0, scope: !11260)
!11264 = !DILocation(line: 1793, column: 11, scope: !11260)
!11265 = !DILocation(line: 1793, column: 47, scope: !11260)
!11266 = !DILocation(line: 1793, column: 3, scope: !11260)
!11267 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10923, file: !10923, line: 2402, type: !11268, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11270)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{!195, !1571}
!11270 = !{!11271}
!11271 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11267, file: !10923, line: 2402, type: !1571)
!11272 = !DILocation(line: 0, scope: !11267)
!11273 = !DILocation(line: 2404, column: 20, scope: !11267)
!11274 = !DILocation(line: 2404, column: 10, scope: !11267)
!11275 = !DILocation(line: 2404, column: 3, scope: !11267)
!11276 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1624, file: !1624, line: 1583, type: !1551, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11277)
!11277 = !{!11278, !11279, !11280, !11281, !11282, !11283}
!11278 = !DILocalVariable(name: "dev", arg: 1, scope: !11276, file: !1624, line: 1583, type: !1530)
!11279 = !DILocalVariable(name: "config", scope: !11276, file: !1624, line: 1585, type: !10614)
!11280 = !DILocalVariable(name: "data", scope: !11276, file: !1624, line: 1586, type: !10737)
!11281 = !DILocalVariable(name: "ll_parity", scope: !11276, file: !1624, line: 1587, type: !152)
!11282 = !DILocalVariable(name: "ll_datawidth", scope: !11276, file: !1624, line: 1588, type: !152)
!11283 = !DILocalVariable(name: "err", scope: !11276, file: !1624, line: 1589, type: !107)
!11284 = !DILocation(line: 0, scope: !11276)
!11285 = !DILocation(line: 1585, column: 48, scope: !11276)
!11286 = !DILocation(line: 1586, column: 38, scope: !11276)
!11287 = !DILocation(line: 1591, column: 2, scope: !11276)
!11288 = !DILocation(line: 1593, column: 29, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11276, file: !1624, line: 1593, column: 6)
!11290 = !DILocation(line: 1593, column: 7, scope: !11289)
!11291 = !DILocation(line: 1593, column: 6, scope: !11276)
!11292 = !DILocation(line: 1594, column: 3, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11294, file: !1624, line: 1594, column: 3)
!11294 = distinct !DILexicalBlock(scope: !11295, file: !1624, line: 1594, column: 3)
!11295 = distinct !DILexicalBlock(scope: !11296, file: !1624, line: 1594, column: 3)
!11296 = distinct !DILexicalBlock(scope: !11297, file: !1624, line: 1594, column: 3)
!11297 = distinct !DILexicalBlock(scope: !11289, file: !1624, line: 1593, column: 37)
!11298 = !DILocation(line: 1595, column: 3, scope: !11297)
!11299 = !DILocation(line: 1599, column: 31, scope: !11276)
!11300 = !DILocation(line: 1599, column: 71, scope: !11276)
!11301 = !DILocation(line: 1599, column: 8, scope: !11276)
!11302 = !DILocation(line: 1600, column: 10, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11276, file: !1624, line: 1600, column: 6)
!11304 = !DILocation(line: 1600, column: 6, scope: !11276)
!11305 = !DILocation(line: 1601, column: 3, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11307, file: !1624, line: 1601, column: 3)
!11307 = distinct !DILexicalBlock(scope: !11308, file: !1624, line: 1601, column: 3)
!11308 = distinct !DILexicalBlock(scope: !11309, file: !1624, line: 1601, column: 3)
!11309 = distinct !DILexicalBlock(scope: !11310, file: !1624, line: 1601, column: 3)
!11310 = distinct !DILexicalBlock(scope: !11303, file: !1624, line: 1600, column: 16)
!11311 = !DILocation(line: 1602, column: 3, scope: !11310)
!11312 = !DILocation(line: 1616, column: 36, scope: !11276)
!11313 = !DILocation(line: 1616, column: 8, scope: !11276)
!11314 = !DILocation(line: 1617, column: 10, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11276, file: !1624, line: 1617, column: 6)
!11316 = !DILocation(line: 1617, column: 6, scope: !11276)
!11317 = !DILocation(line: 1621, column: 27, scope: !11276)
!11318 = !DILocation(line: 1621, column: 2, scope: !11276)
!11319 = !DILocation(line: 1624, column: 40, scope: !11276)
!11320 = !DILocation(line: 1624, column: 2, scope: !11276)
!11321 = !DILocation(line: 1630, column: 14, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11276, file: !1624, line: 1630, column: 6)
!11323 = !DILocation(line: 1630, column: 6, scope: !11276)
!11324 = !DILocation(line: 1640, column: 4, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11326, file: !1624, line: 1640, column: 4)
!11326 = distinct !DILexicalBlock(scope: !11327, file: !1624, line: 1640, column: 4)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !1624, line: 1640, column: 4)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !1624, line: 1640, column: 4)
!11329 = distinct !DILexicalBlock(scope: !11330, file: !1624, line: 1639, column: 28)
!11330 = distinct !DILexicalBlock(scope: !11331, file: !1624, line: 1639, column: 7)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !1624, line: 1638, column: 9)
!11332 = distinct !DILexicalBlock(scope: !11322, file: !1624, line: 1634, column: 13)
!11333 = !DILocation(line: 0, scope: !11322)
!11334 = !DILocation(line: 1649, column: 35, scope: !11276)
!11335 = !DILocation(line: 1649, column: 2, scope: !11276)
!11336 = !DILocation(line: 1654, column: 14, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11276, file: !1624, line: 1654, column: 6)
!11338 = !DILocation(line: 1654, column: 6, scope: !11276)
!11339 = !DILocation(line: 1655, column: 3, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11337, file: !1624, line: 1654, column: 31)
!11341 = !DILocation(line: 1656, column: 2, scope: !11340)
!11342 = !DILocation(line: 1659, column: 37, scope: !11276)
!11343 = !DILocation(line: 1659, column: 2, scope: !11276)
!11344 = !DILocation(line: 1662, column: 14, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11276, file: !1624, line: 1662, column: 6)
!11346 = !DILocation(line: 1662, column: 6, scope: !11276)
!11347 = !DILocation(line: 1663, column: 37, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11345, file: !1624, line: 1662, column: 27)
!11349 = !DILocation(line: 1663, column: 3, scope: !11348)
!11350 = !DILocation(line: 1664, column: 2, scope: !11348)
!11351 = !DILocation(line: 1684, column: 26, scope: !11276)
!11352 = !DILocation(line: 1684, column: 2, scope: !11276)
!11353 = !DILocation(line: 1722, column: 2, scope: !11276)
!11354 = !DILocation(line: 1724, column: 1, scope: !11276)
!11355 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1624, file: !1624, line: 651, type: !11356, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11358)
!11356 = !DISubroutineType(types: !11357)
!11357 = !{null, !1530}
!11358 = !{!11359, !11360, !11361}
!11359 = !DILocalVariable(name: "dev", arg: 1, scope: !11355, file: !1624, line: 651, type: !1530)
!11360 = !DILocalVariable(name: "data", scope: !11355, file: !1624, line: 653, type: !10737)
!11361 = !DILocalVariable(name: "clk", scope: !11355, file: !1624, line: 654, type: !11362)
!11362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1530)
!11363 = !DILocation(line: 0, scope: !11355)
!11364 = !DILocation(line: 653, column: 38, scope: !11355)
!11365 = !DILocation(line: 656, column: 8, scope: !11355)
!11366 = !DILocation(line: 656, column: 14, scope: !11355)
!11367 = !DILocation(line: 657, column: 1, scope: !11355)
!11368 = distinct !DISubprogram(name: "device_is_ready", scope: !8107, file: !8107, line: 47, type: !11369, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11371)
!11369 = !DISubroutineType(types: !11370)
!11370 = !{!145, !1530}
!11371 = !{!11372}
!11372 = !DILocalVariable(name: "dev", arg: 1, scope: !11368, file: !8107, line: 47, type: !1530)
!11373 = !DILocation(line: 0, scope: !11368)
!11374 = !DILocation(line: 55, column: 2, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11368, file: !8107, line: 55, column: 2)
!11376 = !{i64 2152507593}
!11377 = !DILocation(line: 56, column: 9, scope: !11368)
!11378 = !DILocation(line: 56, column: 2, scope: !11368)
!11379 = distinct !DISubprogram(name: "clock_control_on", scope: !1044, file: !1044, line: 123, type: !1589, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11380)
!11380 = !{!11381, !11382, !11383}
!11381 = !DILocalVariable(name: "dev", arg: 1, scope: !11379, file: !1044, line: 123, type: !1530)
!11382 = !DILocalVariable(name: "sys", arg: 2, scope: !11379, file: !1044, line: 124, type: !1117)
!11383 = !DILocalVariable(name: "api", scope: !11379, file: !1044, line: 126, type: !1582)
!11384 = !DILocation(line: 0, scope: !11379)
!11385 = !DILocation(line: 127, column: 49, scope: !11379)
!11386 = !DILocation(line: 129, column: 14, scope: !11379)
!11387 = !DILocation(line: 129, column: 9, scope: !11379)
!11388 = !DILocation(line: 129, column: 2, scope: !11379)
!11389 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1669, file: !1669, line: 342, type: !11390, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11392)
!11390 = !DISubroutineType(types: !11391)
!11391 = !{!107, !1666, !195}
!11392 = !{!11393, !11394, !11395, !11396}
!11393 = !DILocalVariable(name: "config", arg: 1, scope: !11389, file: !1669, line: 342, type: !1666)
!11394 = !DILocalVariable(name: "id", arg: 2, scope: !11389, file: !1669, line: 343, type: !195)
!11395 = !DILocalVariable(name: "ret", scope: !11389, file: !1669, line: 345, type: !107)
!11396 = !DILocalVariable(name: "state", scope: !11389, file: !1669, line: 346, type: !1672)
!11397 = !DILocation(line: 0, scope: !11389)
!11398 = !DILocation(line: 346, column: 2, scope: !11389)
!11399 = !DILocation(line: 348, column: 8, scope: !11389)
!11400 = !DILocation(line: 349, column: 10, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11389, file: !1669, line: 349, column: 6)
!11402 = !DILocation(line: 349, column: 6, scope: !11389)
!11403 = !DILocation(line: 353, column: 44, scope: !11389)
!11404 = !DILocation(line: 353, column: 9, scope: !11389)
!11405 = !DILocation(line: 353, column: 2, scope: !11389)
!11406 = !DILocation(line: 354, column: 1, scope: !11389)
!11407 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10923, file: !10923, line: 496, type: !11101, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11408)
!11408 = !{!11409, !11410}
!11409 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11407, file: !10923, line: 496, type: !1571)
!11410 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !11407, file: !10923, line: 496, type: !152)
!11411 = !DILocation(line: 0, scope: !11407)
!11412 = !DILocation(line: 498, column: 3, scope: !11407)
!11413 = !DILocation(line: 499, column: 1, scope: !11407)
!11414 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10923, file: !10923, line: 849, type: !11110, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11415)
!11415 = !{!11416, !11417, !11418, !11419}
!11416 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11414, file: !10923, line: 849, type: !1571)
!11417 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !11414, file: !10923, line: 849, type: !152)
!11418 = !DILocalVariable(name: "Parity", arg: 3, scope: !11414, file: !10923, line: 849, type: !152)
!11419 = !DILocalVariable(name: "StopBits", arg: 4, scope: !11414, file: !10923, line: 850, type: !152)
!11420 = !DILocation(line: 0, scope: !11414)
!11421 = !DILocation(line: 852, column: 3, scope: !11414)
!11422 = !DILocation(line: 853, column: 3, scope: !11414)
!11423 = !DILocation(line: 854, column: 1, scope: !11414)
!11424 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10923, file: !10923, line: 1336, type: !10986, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11425)
!11425 = !{!11426}
!11426 = !DILocalVariable(name: "USARTx", arg: 1, scope: !11424, file: !10923, line: 1336, type: !1571)
!11427 = !DILocation(line: 0, scope: !11424)
!11428 = !DILocation(line: 1338, column: 3, scope: !11424)
!11429 = !DILocation(line: 1339, column: 1, scope: !11424)
!11430 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1669, file: !1669, line: 316, type: !11431, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11433)
!11431 = !DISubroutineType(types: !11432)
!11432 = !{!107, !1666, !1672}
!11433 = !{!11434, !11435, !11436}
!11434 = !DILocalVariable(name: "config", arg: 1, scope: !11430, file: !1669, line: 317, type: !1666)
!11435 = !DILocalVariable(name: "state", arg: 2, scope: !11430, file: !1669, line: 318, type: !1672)
!11436 = !DILocalVariable(name: "reg", scope: !11430, file: !1669, line: 320, type: !22)
!11437 = !DILocation(line: 0, scope: !11430)
!11438 = !DILocation(line: 329, column: 39, scope: !11430)
!11439 = !DILocation(line: 329, column: 52, scope: !11430)
!11440 = !DILocation(line: 329, column: 9, scope: !11430)
!11441 = !DILocation(line: 329, column: 2, scope: !11430)
!11442 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !11369, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1486, retainedNodes: !11443)
!11443 = !{!11444}
!11444 = !DILocalVariable(name: "dev", arg: 1, scope: !11442, file: !260, line: 730, type: !1530)
!11445 = !DILocation(line: 0, scope: !11442)
!11446 = !DILocation(line: 732, column: 9, scope: !11442)
!11447 = !DILocation(line: 732, column: 2, scope: !11442)
!11448 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1804, file: !1804, line: 270, type: !1810, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11449)
!11449 = !{!11450}
!11450 = !DILocalVariable(name: "dev", arg: 1, scope: !11448, file: !1804, line: 270, type: !1812)
!11451 = !DILocation(line: 0, scope: !11448)
!11452 = !DILocation(line: 274, column: 2, scope: !11448)
!11453 = !DILocation(line: 275, column: 12, scope: !11448)
!11454 = !DILocation(line: 276, column: 15, scope: !11448)
!11455 = !DILocation(line: 277, column: 16, scope: !11448)
!11456 = !DILocation(line: 278, column: 15, scope: !11448)
!11457 = !DILocation(line: 279, column: 16, scope: !11448)
!11458 = !DILocation(line: 282, column: 2, scope: !11448)
!11459 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !476, file: !476, line: 1638, type: !6263, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11460)
!11460 = !{!11461, !11462}
!11461 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11459, file: !476, line: 1638, type: !1002)
!11462 = !DILocalVariable(name: "priority", arg: 2, scope: !11459, file: !476, line: 1638, type: !152)
!11463 = !DILocation(line: 0, scope: !11459)
!11464 = !DILocation(line: 1646, column: 46, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11466, file: !476, line: 1645, column: 3)
!11466 = distinct !DILexicalBlock(scope: !11459, file: !476, line: 1640, column: 7)
!11467 = !DILocation(line: 1648, column: 1, scope: !11459)
!11468 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1804, file: !1804, line: 118, type: !131, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11469)
!11469 = !{!11470, !11471}
!11470 = !DILocalVariable(name: "arg", arg: 1, scope: !11468, file: !1804, line: 118, type: !106)
!11471 = !DILocalVariable(name: "dticks", scope: !11468, file: !1804, line: 121, type: !152)
!11472 = !DILocation(line: 0, scope: !11468)
!11473 = !DILocation(line: 124, column: 2, scope: !11468)
!11474 = !DILocation(line: 129, column: 17, scope: !11468)
!11475 = !DILocation(line: 129, column: 14, scope: !11468)
!11476 = !DILocation(line: 130, column: 15, scope: !11468)
!11477 = !DILocation(line: 145, column: 27, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !1804, line: 132, column: 16)
!11479 = distinct !DILexicalBlock(scope: !11468, file: !1804, line: 132, column: 6)
!11480 = !DILocation(line: 145, column: 25, scope: !11478)
!11481 = !DILocation(line: 145, column: 45, scope: !11478)
!11482 = !DILocation(line: 146, column: 30, scope: !11478)
!11483 = !DILocation(line: 146, column: 20, scope: !11478)
!11484 = !DILocation(line: 147, column: 3, scope: !11478)
!11485 = !DILocation(line: 151, column: 2, scope: !11468)
!11486 = !DILocation(line: 152, column: 1, scope: !11468)
!11487 = distinct !DISubprogram(name: "elapsed", scope: !1804, file: !1804, line: 85, type: !7228, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11488)
!11488 = !{!11489, !11490, !11491}
!11489 = !DILocalVariable(name: "val1", scope: !11487, file: !1804, line: 87, type: !152)
!11490 = !DILocalVariable(name: "ctrl", scope: !11487, file: !1804, line: 88, type: !152)
!11491 = !DILocalVariable(name: "val2", scope: !11487, file: !1804, line: 89, type: !152)
!11492 = !DILocation(line: 87, column: 27, scope: !11487)
!11493 = !DILocation(line: 0, scope: !11487)
!11494 = !DILocation(line: 88, column: 27, scope: !11487)
!11495 = !DILocation(line: 89, column: 27, scope: !11487)
!11496 = !DILocation(line: 105, column: 12, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11487, file: !1804, line: 105, column: 6)
!11498 = !DILocation(line: 106, column: 6, scope: !11497)
!11499 = !DILocation(line: 107, column: 16, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11497, file: !1804, line: 106, column: 24)
!11501 = !DILocation(line: 111, column: 18, scope: !11500)
!11502 = !DILocation(line: 112, column: 2, scope: !11500)
!11503 = !DILocation(line: 114, column: 20, scope: !11487)
!11504 = !DILocation(line: 114, column: 30, scope: !11487)
!11505 = !DILocation(line: 114, column: 28, scope: !11487)
!11506 = !DILocation(line: 114, column: 2, scope: !11487)
!11507 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1804, file: !1804, line: 154, type: !11508, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11510)
!11508 = !DISubroutineType(types: !11509)
!11509 = !{null, !984, !145}
!11510 = !{!11511, !11512, !11513, !11514, !11515, !11516, !11517, !11522, !11523}
!11511 = !DILocalVariable(name: "ticks", arg: 1, scope: !11507, file: !1804, line: 154, type: !984)
!11512 = !DILocalVariable(name: "idle", arg: 2, scope: !11507, file: !1804, line: 154, type: !145)
!11513 = !DILocalVariable(name: "delay", scope: !11507, file: !1804, line: 169, type: !152)
!11514 = !DILocalVariable(name: "val1", scope: !11507, file: !1804, line: 170, type: !152)
!11515 = !DILocalVariable(name: "val2", scope: !11507, file: !1804, line: 170, type: !152)
!11516 = !DILocalVariable(name: "last_load_", scope: !11507, file: !1804, line: 171, type: !152)
!11517 = !DILocalVariable(name: "key", scope: !11507, file: !1804, line: 176, type: !11518)
!11518 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !433, line: 106, baseType: !11519)
!11519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !433, line: 32, size: 32, elements: !11520)
!11520 = !{!11521}
!11521 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11519, file: !433, line: 33, baseType: !107, size: 32)
!11522 = !DILocalVariable(name: "pending", scope: !11507, file: !1804, line: 178, type: !152)
!11523 = !DILocalVariable(name: "unannounced", scope: !11507, file: !1804, line: 185, type: !152)
!11524 = !DILocation(line: 0, scope: !11507)
!11525 = !DILocation(line: 162, column: 49, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11507, file: !1804, line: 162, column: 6)
!11527 = !DILocation(line: 163, column: 17, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11526, file: !1804, line: 162, column: 78)
!11529 = !DILocation(line: 164, column: 13, scope: !11528)
!11530 = !DILocation(line: 165, column: 3, scope: !11528)
!11531 = !DILocation(line: 171, column: 24, scope: !11507)
!11532 = !DILocation(line: 173, column: 10, scope: !11507)
!11533 = !DILocation(line: 174, column: 10, scope: !11507)
!11534 = !DILocalVariable(name: "l", arg: 1, scope: !11535, file: !433, line: 136, type: !11538)
!11535 = distinct !DISubprogram(name: "k_spin_lock", scope: !433, file: !433, line: 136, type: !11536, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11539)
!11536 = !DISubroutineType(types: !11537)
!11537 = !{!11518, !11538}
!11538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!11539 = !{!11534, !11540}
!11540 = !DILocalVariable(name: "k", scope: !11535, file: !433, line: 139, type: !11518)
!11541 = !DILocation(line: 0, scope: !11535, inlinedAt: !11542)
!11542 = distinct !DILocation(line: 176, column: 25, scope: !11507)
!11543 = !DILocation(line: 55, column: 2, scope: !11544, inlinedAt: !11548)
!11544 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5887, file: !5887, line: 42, type: !5888, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11545)
!11545 = !{!11546, !11547}
!11546 = !DILocalVariable(name: "key", scope: !11544, file: !5887, line: 44, type: !32)
!11547 = !DILocalVariable(name: "tmp", scope: !11544, file: !5887, line: 53, type: !32)
!11548 = distinct !DILocation(line: 145, column: 10, scope: !11535, inlinedAt: !11542)
!11549 = !{i64 1622781}
!11550 = !DILocation(line: 0, scope: !11544, inlinedAt: !11548)
!11551 = !DILocation(line: 148, column: 2, scope: !11552, inlinedAt: !11542)
!11552 = distinct !DILexicalBlock(scope: !11553, file: !433, line: 148, column: 2)
!11553 = distinct !DILexicalBlock(scope: !11535, file: !433, line: 148, column: 2)
!11554 = !DILocation(line: 148, column: 2, scope: !11553, inlinedAt: !11542)
!11555 = !DILocation(line: 148, column: 2, scope: !11556, inlinedAt: !11542)
!11556 = distinct !DILexicalBlock(scope: !11552, file: !433, line: 148, column: 2)
!11557 = !DILocation(line: 160, column: 2, scope: !11535, inlinedAt: !11542)
!11558 = !DILocation(line: 178, column: 21, scope: !11507)
!11559 = !DILocation(line: 180, column: 18, scope: !11507)
!11560 = !DILocation(line: 182, column: 14, scope: !11507)
!11561 = !DILocation(line: 183, column: 15, scope: !11507)
!11562 = !DILocation(line: 185, column: 39, scope: !11507)
!11563 = !DILocation(line: 185, column: 37, scope: !11507)
!11564 = !DILocation(line: 187, column: 27, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11507, file: !1804, line: 187, column: 6)
!11566 = !DILocation(line: 187, column: 6, scope: !11507)
!11567 = !DILocation(line: 202, column: 27, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11565, file: !1804, line: 195, column: 9)
!11569 = !DILocation(line: 202, column: 48, scope: !11568)
!11570 = !DILocation(line: 203, column: 9, scope: !11568)
!11571 = !DILocation(line: 204, column: 11, scope: !11568)
!11572 = !DILocation(line: 205, column: 13, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11568, file: !1804, line: 205, column: 7)
!11574 = !DILocation(line: 205, column: 7, scope: !11568)
!11575 = !DILocation(line: 0, scope: !11565)
!11576 = !DILocation(line: 212, column: 18, scope: !11507)
!11577 = !DILocation(line: 214, column: 28, scope: !11507)
!11578 = !DILocation(line: 214, column: 16, scope: !11507)
!11579 = !DILocation(line: 215, column: 15, scope: !11507)
!11580 = !DILocation(line: 227, column: 11, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11507, file: !1804, line: 227, column: 6)
!11582 = !DILocation(line: 227, column: 6, scope: !11507)
!11583 = !DILocation(line: 228, column: 15, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11581, file: !1804, line: 227, column: 19)
!11585 = !DILocation(line: 228, column: 38, scope: !11584)
!11586 = !DILocation(line: 228, column: 24, scope: !11584)
!11587 = !DILocation(line: 229, column: 2, scope: !11584)
!11588 = !DILocation(line: 230, column: 24, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11581, file: !1804, line: 229, column: 9)
!11590 = !DILocation(line: 230, column: 15, scope: !11589)
!11591 = !DILocation(line: 0, scope: !11581)
!11592 = !DILocalVariable(name: "key", arg: 2, scope: !11593, file: !433, line: 190, type: !11518)
!11593 = distinct !DISubprogram(name: "k_spin_unlock", scope: !433, file: !433, line: 189, type: !11594, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11596)
!11594 = !DISubroutineType(types: !11595)
!11595 = !{null, !11538, !11518}
!11596 = !{!11597, !11592}
!11597 = !DILocalVariable(name: "l", arg: 1, scope: !11593, file: !433, line: 189, type: !11538)
!11598 = !DILocation(line: 0, scope: !11593, inlinedAt: !11599)
!11599 = distinct !DILocation(line: 232, column: 2, scope: !11507)
!11600 = !DILocation(line: 194, column: 2, scope: !11601, inlinedAt: !11599)
!11601 = distinct !DILexicalBlock(scope: !11602, file: !433, line: 194, column: 2)
!11602 = distinct !DILexicalBlock(scope: !11593, file: !433, line: 194, column: 2)
!11603 = !DILocation(line: 194, column: 2, scope: !11602, inlinedAt: !11599)
!11604 = !DILocation(line: 194, column: 2, scope: !11605, inlinedAt: !11599)
!11605 = distinct !DILexicalBlock(scope: !11601, file: !433, line: 194, column: 2)
!11606 = !DILocalVariable(name: "key", arg: 1, scope: !11607, file: !5887, line: 84, type: !32)
!11607 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5887, file: !5887, line: 84, type: !5898, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11608)
!11608 = !{!11606}
!11609 = !DILocation(line: 0, scope: !11607, inlinedAt: !11610)
!11610 = distinct !DILocation(line: 215, column: 2, scope: !11593, inlinedAt: !11599)
!11611 = !DILocation(line: 95, column: 2, scope: !11607, inlinedAt: !11610)
!11612 = !{i64 1623598}
!11613 = !DILocation(line: 234, column: 1, scope: !11507)
!11614 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1804, file: !1804, line: 236, type: !7228, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11615)
!11615 = !{!11616, !11617}
!11616 = !DILocalVariable(name: "key", scope: !11614, file: !1804, line: 242, type: !11518)
!11617 = !DILocalVariable(name: "cyc", scope: !11614, file: !1804, line: 243, type: !152)
!11618 = !DILocation(line: 0, scope: !11535, inlinedAt: !11619)
!11619 = distinct !DILocation(line: 242, column: 25, scope: !11614)
!11620 = !DILocation(line: 55, column: 2, scope: !11544, inlinedAt: !11621)
!11621 = distinct !DILocation(line: 145, column: 10, scope: !11535, inlinedAt: !11619)
!11622 = !DILocation(line: 0, scope: !11544, inlinedAt: !11621)
!11623 = !DILocation(line: 148, column: 2, scope: !11552, inlinedAt: !11619)
!11624 = !DILocation(line: 148, column: 2, scope: !11553, inlinedAt: !11619)
!11625 = !DILocation(line: 148, column: 2, scope: !11556, inlinedAt: !11619)
!11626 = !DILocation(line: 160, column: 2, scope: !11535, inlinedAt: !11619)
!11627 = !DILocation(line: 0, scope: !11614)
!11628 = !DILocation(line: 243, column: 17, scope: !11614)
!11629 = !DILocation(line: 243, column: 29, scope: !11614)
!11630 = !DILocation(line: 243, column: 43, scope: !11614)
!11631 = !DILocation(line: 0, scope: !11593, inlinedAt: !11632)
!11632 = distinct !DILocation(line: 245, column: 2, scope: !11614)
!11633 = !DILocation(line: 194, column: 2, scope: !11601, inlinedAt: !11632)
!11634 = !DILocation(line: 194, column: 2, scope: !11602, inlinedAt: !11632)
!11635 = !DILocation(line: 194, column: 2, scope: !11605, inlinedAt: !11632)
!11636 = !DILocation(line: 243, column: 27, scope: !11614)
!11637 = !DILocation(line: 243, column: 41, scope: !11614)
!11638 = !DILocation(line: 0, scope: !11607, inlinedAt: !11639)
!11639 = distinct !DILocation(line: 215, column: 2, scope: !11593, inlinedAt: !11632)
!11640 = !DILocation(line: 95, column: 2, scope: !11607, inlinedAt: !11639)
!11641 = !DILocation(line: 246, column: 13, scope: !11614)
!11642 = !DILocation(line: 246, column: 2, scope: !11614)
!11643 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1804, file: !1804, line: 249, type: !7228, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !11644)
!11644 = !{!11645, !11646}
!11645 = !DILocalVariable(name: "key", scope: !11643, file: !1804, line: 251, type: !11518)
!11646 = !DILocalVariable(name: "ret", scope: !11643, file: !1804, line: 252, type: !152)
!11647 = !DILocation(line: 0, scope: !11535, inlinedAt: !11648)
!11648 = distinct !DILocation(line: 251, column: 25, scope: !11643)
!11649 = !DILocation(line: 55, column: 2, scope: !11544, inlinedAt: !11650)
!11650 = distinct !DILocation(line: 145, column: 10, scope: !11535, inlinedAt: !11648)
!11651 = !DILocation(line: 0, scope: !11544, inlinedAt: !11650)
!11652 = !DILocation(line: 148, column: 2, scope: !11552, inlinedAt: !11648)
!11653 = !DILocation(line: 148, column: 2, scope: !11553, inlinedAt: !11648)
!11654 = !DILocation(line: 148, column: 2, scope: !11556, inlinedAt: !11648)
!11655 = !DILocation(line: 160, column: 2, scope: !11535, inlinedAt: !11648)
!11656 = !DILocation(line: 0, scope: !11643)
!11657 = !DILocation(line: 252, column: 17, scope: !11643)
!11658 = !DILocation(line: 252, column: 29, scope: !11643)
!11659 = !DILocation(line: 0, scope: !11593, inlinedAt: !11660)
!11660 = distinct !DILocation(line: 254, column: 2, scope: !11643)
!11661 = !DILocation(line: 194, column: 2, scope: !11601, inlinedAt: !11660)
!11662 = !DILocation(line: 194, column: 2, scope: !11602, inlinedAt: !11660)
!11663 = !DILocation(line: 194, column: 2, scope: !11605, inlinedAt: !11660)
!11664 = !DILocation(line: 252, column: 27, scope: !11643)
!11665 = !DILocation(line: 0, scope: !11607, inlinedAt: !11666)
!11666 = distinct !DILocation(line: 215, column: 2, scope: !11593, inlinedAt: !11660)
!11667 = !DILocation(line: 95, column: 2, scope: !11607, inlinedAt: !11666)
!11668 = !DILocation(line: 255, column: 2, scope: !11643)
!11669 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1804, file: !1804, line: 258, type: !3055, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !2175)
!11670 = !DILocation(line: 260, column: 6, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11669, file: !1804, line: 260, column: 6)
!11672 = !DILocation(line: 260, column: 16, scope: !11671)
!11673 = !DILocation(line: 260, column: 6, scope: !11669)
!11674 = !DILocation(line: 261, column: 17, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11671, file: !1804, line: 260, column: 34)
!11676 = !DILocation(line: 262, column: 2, scope: !11675)
!11677 = !DILocation(line: 263, column: 1, scope: !11669)
!11678 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1804, file: !1804, line: 265, type: !3055, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1726, retainedNodes: !2175)
!11679 = !DILocation(line: 267, column: 16, scope: !11678)
!11680 = !DILocation(line: 268, column: 1, scope: !11678)
!11681 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !11682, file: !11682, line: 9, type: !11683, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2893, retainedNodes: !11706)
!11682 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11683 = !DISubroutineType(types: !11684)
!11684 = !{!107, !11685, !195, !11705}
!11685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11686, size: 32)
!11686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11687)
!11687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1669, line: 60, size: 64, elements: !11688)
!11688 = !{!11689, !11704}
!11689 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !11687, file: !1669, line: 69, baseType: !11690, size: 32)
!11690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11691, size: 32)
!11691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11692)
!11692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1669, line: 50, size: 64, elements: !11693)
!11693 = !{!11694, !11702, !11703}
!11694 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !11692, file: !1669, line: 52, baseType: !11695, size: 32)
!11695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11696, size: 32)
!11696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11697)
!11697 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1680, line: 37, baseType: !11698)
!11698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1680, line: 32, size: 64, elements: !11699)
!11699 = !{!11700, !11701}
!11700 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11698, file: !1680, line: 34, baseType: !152, size: 32)
!11701 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11698, file: !1680, line: 36, baseType: !152, size: 32, offset: 32)
!11702 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !11692, file: !1669, line: 54, baseType: !195, size: 8, offset: 32)
!11703 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11692, file: !1669, line: 56, baseType: !195, size: 8, offset: 40)
!11704 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !11687, file: !1669, line: 71, baseType: !195, size: 8, offset: 32)
!11705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11690, size: 32)
!11706 = !{!11707, !11708, !11709}
!11707 = !DILocalVariable(name: "config", arg: 1, scope: !11681, file: !11682, line: 9, type: !11685)
!11708 = !DILocalVariable(name: "id", arg: 2, scope: !11681, file: !11682, line: 9, type: !195)
!11709 = !DILocalVariable(name: "state", arg: 3, scope: !11681, file: !11682, line: 10, type: !11705)
!11710 = !DILocation(line: 0, scope: !11681)
!11711 = !DILocation(line: 12, column: 20, scope: !11681)
!11712 = !DILocation(line: 13, column: 27, scope: !11681)
!11713 = !DILocation(line: 13, column: 42, scope: !11681)
!11714 = !DILocation(line: 13, column: 19, scope: !11681)
!11715 = !DILocation(line: 13, column: 16, scope: !11681)
!11716 = !DILocation(line: 13, column: 2, scope: !11681)
!11717 = distinct !{!11717, !11716, !11718}
!11718 = !DILocation(line: 19, column: 2, scope: !11681)
!11719 = !DILocation(line: 14, column: 23, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11721, file: !11682, line: 14, column: 7)
!11721 = distinct !DILexicalBlock(scope: !11681, file: !11682, line: 13, column: 54)
!11722 = !DILocation(line: 14, column: 10, scope: !11720)
!11723 = !DILocation(line: 18, column: 11, scope: !11721)
!11724 = !DILocation(line: 14, column: 7, scope: !11721)
!11725 = !DILocation(line: 22, column: 1, scope: !11681)
!11726 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1922, file: !1922, line: 193, type: !11727, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !11736)
!11727 = !DISubroutineType(types: !11728)
!11728 = !{!107, !11729, !195, !22}
!11729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11730, size: 32)
!11730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11731)
!11731 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1680, line: 37, baseType: !11732)
!11732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1680, line: 32, size: 64, elements: !11733)
!11733 = !{!11734, !11735}
!11734 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !11732, file: !1680, line: 34, baseType: !152, size: 32)
!11735 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !11732, file: !1680, line: 36, baseType: !152, size: 32, offset: 32)
!11736 = !{!11737, !11738, !11739, !11740, !11741, !11742, !11743, !11744, !11746}
!11737 = !DILocalVariable(name: "pins", arg: 1, scope: !11726, file: !1922, line: 193, type: !11729)
!11738 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !11726, file: !1922, line: 193, type: !195)
!11739 = !DILocalVariable(name: "reg", arg: 3, scope: !11726, file: !1922, line: 194, type: !22)
!11740 = !DILocalVariable(name: "pin", scope: !11726, file: !1922, line: 196, type: !152)
!11741 = !DILocalVariable(name: "mux", scope: !11726, file: !1922, line: 196, type: !152)
!11742 = !DILocalVariable(name: "pin_cgf", scope: !11726, file: !1922, line: 197, type: !152)
!11743 = !DILocalVariable(name: "ret", scope: !11726, file: !1922, line: 198, type: !107)
!11744 = !DILocalVariable(name: "i", scope: !11745, file: !1922, line: 209, type: !195)
!11745 = distinct !DILexicalBlock(scope: !11726, file: !1922, line: 209, column: 2)
!11746 = !DILocalVariable(name: "gpio_out", scope: !11747, file: !1922, line: 239, type: !152)
!11747 = distinct !DILexicalBlock(scope: !11748, file: !1922, line: 238, column: 55)
!11748 = distinct !DILexicalBlock(scope: !11749, file: !1922, line: 238, column: 14)
!11749 = distinct !DILexicalBlock(scope: !11750, file: !1922, line: 236, column: 14)
!11750 = distinct !DILexicalBlock(scope: !11751, file: !1922, line: 234, column: 7)
!11751 = distinct !DILexicalBlock(scope: !11752, file: !1922, line: 209, column: 41)
!11752 = distinct !DILexicalBlock(scope: !11745, file: !1922, line: 209, column: 2)
!11753 = !DILocation(line: 0, scope: !11726)
!11754 = !DILocation(line: 0, scope: !11745)
!11755 = !DILocation(line: 209, column: 25, scope: !11752)
!11756 = !DILocation(line: 209, column: 2, scope: !11745)
!11757 = distinct !{!11757, !11756, !11758}
!11758 = !DILocation(line: 259, column: 2, scope: !11745)
!11759 = !DILocation(line: 210, column: 17, scope: !11751)
!11760 = !DILocation(line: 234, column: 7, scope: !11750)
!11761 = !DILocation(line: 234, column: 33, scope: !11750)
!11762 = !DILocation(line: 234, column: 7, scope: !11751)
!11763 = !DILocation(line: 235, column: 22, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11750, file: !1922, line: 234, column: 49)
!11765 = !DILocation(line: 235, column: 29, scope: !11764)
!11766 = !DILocation(line: 236, column: 3, scope: !11764)
!11767 = !DILocation(line: 236, column: 14, scope: !11750)
!11768 = !DILocation(line: 239, column: 32, scope: !11747)
!11769 = !DILocation(line: 0, scope: !11747)
!11770 = !DILocation(line: 241, column: 8, scope: !11747)
!11771 = !DILocation(line: 246, column: 3, scope: !11747)
!11772 = !DILocation(line: 252, column: 9, scope: !11751)
!11773 = !DILocation(line: 255, column: 9, scope: !11751)
!11774 = !DILocation(line: 256, column: 11, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11751, file: !1922, line: 256, column: 7)
!11776 = !DILocation(line: 209, column: 37, scope: !11752)
!11777 = !DILocation(line: 256, column: 7, scope: !11751)
!11778 = !DILocation(line: 262, column: 1, scope: !11726)
!11779 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1922, file: !1922, line: 176, type: !11780, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{!107, !152, !152, !152}
!11782 = !{!11783, !11784, !11785, !11786}
!11783 = !DILocalVariable(name: "pin", arg: 1, scope: !11779, file: !1922, line: 176, type: !152)
!11784 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11779, file: !1922, line: 176, type: !152)
!11785 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11779, file: !1922, line: 176, type: !152)
!11786 = !DILocalVariable(name: "port_device", scope: !11779, file: !1922, line: 178, type: !1852)
!11787 = !DILocation(line: 0, scope: !11779)
!11788 = !DILocation(line: 180, column: 22, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11779, file: !1922, line: 180, column: 6)
!11790 = !DILocation(line: 180, column: 6, scope: !11779)
!11791 = !DILocation(line: 180, column: 6, scope: !11789)
!11792 = !DILocation(line: 184, column: 16, scope: !11779)
!11793 = !DILocation(line: 186, column: 19, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11779, file: !1922, line: 186, column: 6)
!11795 = !DILocation(line: 186, column: 28, scope: !11794)
!11796 = !DILocation(line: 186, column: 33, scope: !11794)
!11797 = !DILocation(line: 186, column: 6, scope: !11779)
!11798 = !DILocation(line: 190, column: 43, scope: !11779)
!11799 = !DILocation(line: 190, column: 9, scope: !11779)
!11800 = !DILocation(line: 190, column: 2, scope: !11779)
!11801 = !DILocation(line: 191, column: 1, scope: !11779)
!11802 = distinct !DISubprogram(name: "device_is_ready", scope: !8107, file: !8107, line: 47, type: !11803, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !11805)
!11803 = !DISubroutineType(types: !11804)
!11804 = !{!145, !1852}
!11805 = !{!11806}
!11806 = !DILocalVariable(name: "dev", arg: 1, scope: !11802, file: !8107, line: 47, type: !1852)
!11807 = !DILocation(line: 0, scope: !11802)
!11808 = !DILocation(line: 55, column: 2, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11802, file: !8107, line: 55, column: 2)
!11810 = !{i64 2148856790}
!11811 = !DILocation(line: 56, column: 9, scope: !11802)
!11812 = !DILocation(line: 56, column: 2, scope: !11802)
!11813 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !260, file: !260, line: 730, type: !11803, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !11814)
!11814 = !{!11815}
!11815 = !DILocalVariable(name: "dev", arg: 1, scope: !11813, file: !260, line: 730, type: !1852)
!11816 = !DILocation(line: 0, scope: !11813)
!11817 = !DILocation(line: 732, column: 9, scope: !11813)
!11818 = !DILocation(line: 732, column: 2, scope: !11813)
!11819 = distinct !DISubprogram(name: "SystemInit", scope: !1952, file: !1952, line: 160, type: !3055, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1928, retainedNodes: !2175)
!11820 = !DILocation(line: 170, column: 1, scope: !11819)
!11821 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1952, file: !1952, line: 210, type: !3055, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1928, retainedNodes: !11822)
!11822 = !{!11823, !11824, !11825, !11826, !11827}
!11823 = !DILocalVariable(name: "tmp", scope: !11821, file: !1952, line: 212, type: !152)
!11824 = !DILocalVariable(name: "pllmul", scope: !11821, file: !1952, line: 212, type: !152)
!11825 = !DILocalVariable(name: "plldiv", scope: !11821, file: !1952, line: 212, type: !152)
!11826 = !DILocalVariable(name: "pllsource", scope: !11821, file: !1952, line: 212, type: !152)
!11827 = !DILocalVariable(name: "msirange", scope: !11821, file: !1952, line: 212, type: !152)
!11828 = !DILocation(line: 0, scope: !11821)
!11829 = !DILocation(line: 215, column: 14, scope: !11821)
!11830 = !DILocation(line: 217, column: 3, scope: !11821)
!11831 = !DILocation(line: 220, column: 24, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11821, file: !1952, line: 218, column: 3)
!11833 = !DILocation(line: 220, column: 52, scope: !11832)
!11834 = !DILocation(line: 221, column: 32, scope: !11832)
!11835 = !DILocation(line: 222, column: 7, scope: !11832)
!11836 = !DILocation(line: 228, column: 7, scope: !11832)
!11837 = !DILocation(line: 231, column: 21, scope: !11832)
!11838 = !DILocation(line: 232, column: 21, scope: !11832)
!11839 = !DILocation(line: 233, column: 36, scope: !11832)
!11840 = !DILocation(line: 233, column: 16, scope: !11832)
!11841 = !DILocation(line: 234, column: 24, scope: !11832)
!11842 = !DILocation(line: 234, column: 31, scope: !11832)
!11843 = !DILocation(line: 236, column: 24, scope: !11832)
!11844 = !DILocation(line: 236, column: 29, scope: !11832)
!11845 = !DILocation(line: 238, column: 21, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11832, file: !1952, line: 238, column: 11)
!11847 = !DILocation(line: 238, column: 11, scope: !11832)
!11848 = !DILocation(line: 241, column: 41, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11846, file: !1952, line: 239, column: 7)
!11850 = !DILocation(line: 241, column: 51, scope: !11849)
!11851 = !DILocation(line: 242, column: 7, scope: !11849)
!11852 = !DILocation(line: 246, column: 41, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11846, file: !1952, line: 244, column: 7)
!11854 = !DILocation(line: 246, column: 51, scope: !11853)
!11855 = !DILocation(line: 0, scope: !11832)
!11856 = !DILocation(line: 256, column: 30, scope: !11821)
!11857 = !DILocation(line: 256, column: 52, scope: !11821)
!11858 = !DILocation(line: 256, column: 9, scope: !11821)
!11859 = !DILocation(line: 258, column: 19, scope: !11821)
!11860 = !DILocation(line: 259, column: 1, scope: !11821)
!11861 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11862, file: !11862, line: 228, type: !11863, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !11866)
!11862 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11863 = !DISubroutineType(types: !11864)
!11864 = !{!11865}
!11865 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2899, line: 45, baseType: !2898)
!11866 = !{!11867, !11868}
!11867 = !DILocalVariable(name: "tickstart", scope: !11861, file: !11862, line: 230, type: !152)
!11868 = !DILocalVariable(name: "status", scope: !11861, file: !11862, line: 231, type: !11865)
!11869 = !DILocation(line: 234, column: 3, scope: !11861)
!11870 = !DILocation(line: 238, column: 3, scope: !11861)
!11871 = !DILocation(line: 241, column: 15, scope: !11861)
!11872 = !DILocation(line: 0, scope: !11861)
!11873 = !DILocation(line: 244, column: 3, scope: !11861)
!11874 = !DILocation(line: 244, column: 10, scope: !11861)
!11875 = !DILocation(line: 244, column: 43, scope: !11861)
!11876 = !DILocation(line: 246, column: 10, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !11862, line: 246, column: 9)
!11878 = distinct !DILexicalBlock(scope: !11861, file: !11862, line: 245, column: 3)
!11879 = !DILocation(line: 246, column: 24, scope: !11877)
!11880 = !DILocation(line: 246, column: 37, scope: !11877)
!11881 = !DILocation(line: 246, column: 9, scope: !11878)
!11882 = distinct !{!11882, !11873, !11883}
!11883 = !DILocation(line: 250, column: 3, scope: !11861)
!11884 = !DILocation(line: 253, column: 3, scope: !11861)
!11885 = !DILocation(line: 256, column: 3, scope: !11861)
!11886 = !DILocation(line: 256, column: 10, scope: !11861)
!11887 = !DILocation(line: 256, column: 44, scope: !11861)
!11888 = !DILocation(line: 258, column: 10, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11890, file: !11862, line: 258, column: 9)
!11890 = distinct !DILexicalBlock(scope: !11861, file: !11862, line: 257, column: 3)
!11891 = !DILocation(line: 258, column: 24, scope: !11889)
!11892 = !DILocation(line: 258, column: 37, scope: !11889)
!11893 = !DILocation(line: 258, column: 9, scope: !11890)
!11894 = distinct !{!11894, !11885, !11895}
!11895 = !DILocation(line: 262, column: 3, scope: !11861)
!11896 = !DILocation(line: 265, column: 19, scope: !11861)
!11897 = !DILocation(line: 268, column: 25, scope: !11861)
!11898 = !DILocation(line: 268, column: 12, scope: !11861)
!11899 = !DILocation(line: 269, column: 13, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11861, file: !11862, line: 269, column: 6)
!11901 = !DILocation(line: 269, column: 6, scope: !11861)
!11902 = !DILocation(line: 275, column: 3, scope: !11861)
!11903 = !DILocation(line: 277, column: 3, scope: !11861)
!11904 = !DILocation(line: 280, column: 15, scope: !11861)
!11905 = !DILocation(line: 283, column: 3, scope: !11861)
!11906 = !DILocation(line: 283, column: 10, scope: !11861)
!11907 = !DILocation(line: 283, column: 43, scope: !11861)
!11908 = !DILocation(line: 285, column: 10, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11910, file: !11862, line: 285, column: 9)
!11910 = distinct !DILexicalBlock(scope: !11861, file: !11862, line: 284, column: 3)
!11911 = !DILocation(line: 285, column: 24, scope: !11909)
!11912 = !DILocation(line: 285, column: 37, scope: !11909)
!11913 = !DILocation(line: 285, column: 9, scope: !11910)
!11914 = distinct !{!11914, !11905, !11915}
!11915 = !DILocation(line: 289, column: 3, scope: !11861)
!11916 = !DILocation(line: 292, column: 3, scope: !11861)
!11917 = !DILocation(line: 295, column: 3, scope: !11861)
!11918 = !DILocation(line: 299, column: 3, scope: !11861)
!11919 = !DILocation(line: 305, column: 3, scope: !11861)
!11920 = !DILocation(line: 307, column: 3, scope: !11861)
!11921 = !DILocation(line: 308, column: 1, scope: !11861)
!11922 = !DISubprogram(name: "HAL_GetTick", scope: !11923, file: !11923, line: 945, type: !7228, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!11923 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11924 = !DISubprogram(name: "HAL_InitTick", scope: !11923, file: !11923, line: 932, type: !11925, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!11925 = !DISubroutineType(types: !11926)
!11926 = !{!11865, !152}
!11927 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11862, file: !11862, line: 324, type: !11928, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !11952)
!11928 = !DISubroutineType(types: !11929)
!11929 = !{!11865, !11930}
!11930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11931, size: 32)
!11931 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11932, line: 283, baseType: !11933)
!11932 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11932, line: 252, size: 416, elements: !11934)
!11934 = !{!11935, !11936, !11937, !11938, !11939, !11940, !11941, !11942, !11943, !11944}
!11935 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11933, file: !11932, line: 254, baseType: !152, size: 32)
!11936 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11933, file: !11932, line: 257, baseType: !152, size: 32, offset: 32)
!11937 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11933, file: !11932, line: 260, baseType: !152, size: 32, offset: 64)
!11938 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11933, file: !11932, line: 263, baseType: !152, size: 32, offset: 96)
!11939 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11933, file: !11932, line: 266, baseType: !152, size: 32, offset: 128)
!11940 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11933, file: !11932, line: 269, baseType: !152, size: 32, offset: 160)
!11941 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !11933, file: !11932, line: 272, baseType: !152, size: 32, offset: 192)
!11942 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !11933, file: !11932, line: 275, baseType: !152, size: 32, offset: 224)
!11943 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !11933, file: !11932, line: 278, baseType: !152, size: 32, offset: 256)
!11944 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11933, file: !11932, line: 281, baseType: !11945, size: 128, offset: 288)
!11945 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11932, line: 247, baseType: !11946)
!11946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11932, line: 234, size: 128, elements: !11947)
!11947 = !{!11948, !11949, !11950, !11951}
!11948 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11946, file: !11932, line: 236, baseType: !152, size: 32)
!11949 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11946, file: !11932, line: 239, baseType: !152, size: 32, offset: 32)
!11950 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !11946, file: !11932, line: 242, baseType: !152, size: 32, offset: 64)
!11951 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !11946, file: !11932, line: 245, baseType: !152, size: 32, offset: 96)
!11952 = !{!11953, !11954, !11955, !11956, !11957, !11958, !11962}
!11953 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11927, file: !11862, line: 324, type: !11930)
!11954 = !DILocalVariable(name: "tickstart", scope: !11927, file: !11862, line: 326, type: !152)
!11955 = !DILocalVariable(name: "status", scope: !11927, file: !11862, line: 327, type: !11865)
!11956 = !DILocalVariable(name: "sysclk_source", scope: !11927, file: !11862, line: 328, type: !152)
!11957 = !DILocalVariable(name: "pll_config", scope: !11927, file: !11862, line: 328, type: !152)
!11958 = !DILocalVariable(name: "pwrclkchanged", scope: !11959, file: !11862, line: 613, type: !11961)
!11959 = distinct !DILexicalBlock(scope: !11960, file: !11862, line: 612, column: 3)
!11960 = distinct !DILexicalBlock(scope: !11927, file: !11862, line: 611, column: 6)
!11961 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !1039, line: 181, baseType: !2909)
!11962 = !DILocalVariable(name: "tmpreg", scope: !11963, file: !11862, line: 622, type: !227)
!11963 = distinct !DILexicalBlock(scope: !11964, file: !11862, line: 622, column: 7)
!11964 = distinct !DILexicalBlock(scope: !11965, file: !11862, line: 621, column: 5)
!11965 = distinct !DILexicalBlock(scope: !11959, file: !11862, line: 620, column: 8)
!11966 = !DILocation(line: 0, scope: !11927)
!11967 = !DILocation(line: 331, column: 24, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11927, file: !11862, line: 331, column: 6)
!11969 = !DILocation(line: 331, column: 6, scope: !11927)
!11970 = !DILocation(line: 338, column: 19, scope: !11927)
!11971 = !DILocation(line: 339, column: 16, scope: !11927)
!11972 = !DILocation(line: 342, column: 27, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11927, file: !11862, line: 342, column: 6)
!11974 = !DILocation(line: 342, column: 43, scope: !11973)
!11975 = !DILocation(line: 342, column: 69, scope: !11973)
!11976 = !DILocation(line: 342, column: 6, scope: !11927)
!11977 = !DILocation(line: 348, column: 23, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11979, file: !11862, line: 348, column: 8)
!11979 = distinct !DILexicalBlock(scope: !11973, file: !11862, line: 343, column: 3)
!11980 = !DILocation(line: 349, column: 8, scope: !11978)
!11981 = !DILocation(line: 349, column: 27, scope: !11978)
!11982 = !DILocation(line: 349, column: 62, scope: !11978)
!11983 = !DILocation(line: 351, column: 11, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11985, file: !11862, line: 351, column: 10)
!11985 = distinct !DILexicalBlock(scope: !11978, file: !11862, line: 350, column: 5)
!11986 = !DILocation(line: 351, column: 47, scope: !11984)
!11987 = !DILocation(line: 351, column: 54, scope: !11984)
!11988 = !DILocation(line: 351, column: 77, scope: !11984)
!11989 = !DILocation(line: 351, column: 86, scope: !11984)
!11990 = !DILocation(line: 351, column: 10, scope: !11985)
!11991 = !DILocation(line: 359, column: 7, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !11862, line: 359, column: 7)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !11862, line: 359, column: 7)
!11994 = distinct !DILexicalBlock(scope: !11978, file: !11862, line: 357, column: 5)
!11995 = !DILocation(line: 359, column: 7, scope: !11993)
!11996 = !DILocation(line: 359, column: 7, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11992, file: !11862, line: 359, column: 7)
!11998 = !DILocation(line: 359, column: 7, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !12000, file: !11862, line: 359, column: 7)
!12000 = distinct !DILexicalBlock(scope: !11992, file: !11862, line: 359, column: 7)
!12001 = !DILocation(line: 359, column: 7, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !12003, file: !11862, line: 359, column: 7)
!12003 = distinct !DILexicalBlock(scope: !12000, file: !11862, line: 359, column: 7)
!12004 = !DILocation(line: 359, column: 7, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12003, file: !11862, line: 359, column: 7)
!12006 = !DILocation(line: 0, scope: !11992)
!12007 = !DILocation(line: 362, column: 29, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11994, file: !11862, line: 362, column: 10)
!12009 = !DILocation(line: 362, column: 38, scope: !12008)
!12010 = !DILocation(line: 0, scope: !12008)
!12011 = !DILocation(line: 362, column: 10, scope: !11994)
!12012 = !DILocation(line: 368, column: 15, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12008, file: !11862, line: 363, column: 7)
!12014 = !DILocation(line: 368, column: 51, scope: !12013)
!12015 = !DILocation(line: 368, column: 9, scope: !12013)
!12016 = !DILocation(line: 370, column: 15, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !11862, line: 370, column: 14)
!12018 = distinct !DILexicalBlock(scope: !12013, file: !11862, line: 369, column: 9)
!12019 = !DILocation(line: 370, column: 29, scope: !12017)
!12020 = !DILocation(line: 370, column: 43, scope: !12017)
!12021 = !DILocation(line: 370, column: 14, scope: !12018)
!12022 = distinct !{!12022, !12015, !12023}
!12023 = !DILocation(line: 374, column: 9, scope: !12013)
!12024 = !DILocation(line: 382, column: 15, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12008, file: !11862, line: 377, column: 7)
!12026 = !DILocation(line: 382, column: 51, scope: !12025)
!12027 = !DILocation(line: 382, column: 9, scope: !12025)
!12028 = !DILocation(line: 384, column: 16, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !11862, line: 384, column: 15)
!12030 = distinct !DILexicalBlock(scope: !12025, file: !11862, line: 383, column: 9)
!12031 = !DILocation(line: 384, column: 30, scope: !12029)
!12032 = !DILocation(line: 384, column: 44, scope: !12029)
!12033 = !DILocation(line: 384, column: 15, scope: !12030)
!12034 = distinct !{!12034, !12027, !12035}
!12035 = !DILocation(line: 388, column: 9, scope: !12025)
!12036 = !DILocation(line: 393, column: 27, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !11927, file: !11862, line: 393, column: 6)
!12038 = !DILocation(line: 393, column: 43, scope: !12037)
!12039 = !DILocation(line: 393, column: 69, scope: !12037)
!12040 = !DILocation(line: 393, column: 6, scope: !11927)
!12041 = !DILocation(line: 400, column: 23, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !11862, line: 400, column: 8)
!12043 = distinct !DILexicalBlock(scope: !12037, file: !11862, line: 394, column: 3)
!12044 = !DILocation(line: 401, column: 8, scope: !12042)
!12045 = !DILocation(line: 401, column: 27, scope: !12042)
!12046 = !DILocation(line: 401, column: 62, scope: !12042)
!12047 = !DILocation(line: 404, column: 11, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12049, file: !11862, line: 404, column: 10)
!12049 = distinct !DILexicalBlock(scope: !12042, file: !11862, line: 402, column: 5)
!12050 = !DILocation(line: 404, column: 47, scope: !12048)
!12051 = !DILocation(line: 404, column: 54, scope: !12048)
!12052 = !DILocation(line: 404, column: 77, scope: !12048)
!12053 = !DILocation(line: 404, column: 86, scope: !12048)
!12054 = !DILocation(line: 404, column: 10, scope: !12049)
!12055 = !DILocation(line: 418, column: 29, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12057, file: !11862, line: 418, column: 10)
!12057 = distinct !DILexicalBlock(scope: !12042, file: !11862, line: 416, column: 5)
!12058 = !DILocation(line: 418, column: 38, scope: !12056)
!12059 = !DILocation(line: 418, column: 10, scope: !12057)
!12060 = !DILocation(line: 421, column: 9, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12056, file: !11862, line: 419, column: 7)
!12062 = !DILocation(line: 424, column: 21, scope: !12061)
!12063 = !DILocation(line: 427, column: 9, scope: !12061)
!12064 = !DILocation(line: 427, column: 15, scope: !12061)
!12065 = !DILocation(line: 427, column: 51, scope: !12061)
!12066 = !DILocation(line: 429, column: 15, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12068, file: !11862, line: 429, column: 14)
!12068 = distinct !DILexicalBlock(scope: !12061, file: !11862, line: 428, column: 9)
!12069 = !DILocation(line: 429, column: 29, scope: !12067)
!12070 = !DILocation(line: 429, column: 43, scope: !12067)
!12071 = !DILocation(line: 429, column: 14, scope: !12068)
!12072 = distinct !{!12072, !12063, !12073}
!12073 = !DILocation(line: 433, column: 9, scope: !12061)
!12074 = !DILocation(line: 441, column: 9, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12056, file: !11862, line: 439, column: 7)
!12076 = !DILocation(line: 444, column: 21, scope: !12075)
!12077 = !DILocation(line: 447, column: 9, scope: !12075)
!12078 = !DILocation(line: 447, column: 15, scope: !12075)
!12079 = !DILocation(line: 447, column: 51, scope: !12075)
!12080 = !DILocation(line: 449, column: 15, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12082, file: !11862, line: 449, column: 14)
!12082 = distinct !DILexicalBlock(scope: !12075, file: !11862, line: 448, column: 9)
!12083 = !DILocation(line: 449, column: 29, scope: !12081)
!12084 = !DILocation(line: 449, column: 43, scope: !12081)
!12085 = !DILocation(line: 449, column: 14, scope: !12082)
!12086 = distinct !{!12086, !12077, !12087}
!12087 = !DILocation(line: 453, column: 9, scope: !12075)
!12088 = !DILocation(line: 0, scope: !12042)
!12089 = !DILocation(line: 458, column: 27, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !11927, file: !11862, line: 458, column: 6)
!12091 = !DILocation(line: 458, column: 43, scope: !12090)
!12092 = !DILocation(line: 458, column: 69, scope: !12090)
!12093 = !DILocation(line: 458, column: 6, scope: !11927)
!12094 = !DILocation(line: 461, column: 22, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12096, file: !11862, line: 461, column: 8)
!12096 = distinct !DILexicalBlock(scope: !12090, file: !11862, line: 459, column: 3)
!12097 = !DILocation(line: 461, column: 8, scope: !12096)
!12098 = !DILocation(line: 463, column: 11, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12100, file: !11862, line: 463, column: 10)
!12100 = distinct !DILexicalBlock(scope: !12095, file: !11862, line: 462, column: 5)
!12101 = !DILocation(line: 463, column: 47, scope: !12099)
!12102 = !DILocation(line: 463, column: 54, scope: !12099)
!12103 = !DILocation(line: 463, column: 77, scope: !12099)
!12104 = !DILocation(line: 463, column: 86, scope: !12099)
!12105 = !DILocation(line: 463, column: 10, scope: !12100)
!12106 = !DILocation(line: 477, column: 31, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !12108, file: !11862, line: 477, column: 12)
!12108 = distinct !DILexicalBlock(scope: !12099, file: !11862, line: 469, column: 7)
!12109 = !DILocation(line: 477, column: 47, scope: !12107)
!12110 = !DILocation(line: 477, column: 45, scope: !12107)
!12111 = !DILocation(line: 477, column: 12, scope: !12108)
!12112 = !DILocation(line: 480, column: 14, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12114, file: !11862, line: 480, column: 14)
!12114 = distinct !DILexicalBlock(scope: !12107, file: !11862, line: 478, column: 9)
!12115 = !DILocation(line: 480, column: 80, scope: !12113)
!12116 = !DILocation(line: 480, column: 14, scope: !12114)
!12117 = !DILocation(line: 486, column: 11, scope: !12114)
!12118 = !DILocation(line: 488, column: 11, scope: !12114)
!12119 = !DILocation(line: 489, column: 9, scope: !12114)
!12120 = !DILocation(line: 494, column: 11, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12107, file: !11862, line: 491, column: 9)
!12122 = !DILocation(line: 496, column: 11, scope: !12121)
!12123 = !DILocation(line: 499, column: 65, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12121, file: !11862, line: 499, column: 14)
!12125 = !DILocation(line: 499, column: 14, scope: !12124)
!12126 = !DILocation(line: 499, column: 80, scope: !12124)
!12127 = !DILocation(line: 499, column: 14, scope: !12121)
!12128 = !DILocation(line: 506, column: 67, scope: !12108)
!12129 = !DILocation(line: 506, column: 81, scope: !12108)
!12130 = !DILocation(line: 506, column: 36, scope: !12108)
!12131 = !DILocation(line: 507, column: 52, scope: !12108)
!12132 = !DILocation(line: 507, column: 74, scope: !12108)
!12133 = !DILocation(line: 507, column: 31, scope: !12108)
!12134 = !DILocation(line: 507, column: 28, scope: !12108)
!12135 = !DILocation(line: 506, column: 25, scope: !12108)
!12136 = !DILocation(line: 510, column: 31, scope: !12108)
!12137 = !DILocation(line: 510, column: 18, scope: !12108)
!12138 = !DILocation(line: 511, column: 19, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12108, file: !11862, line: 511, column: 12)
!12140 = !DILocation(line: 511, column: 12, scope: !12108)
!12141 = !DILocation(line: 523, column: 29, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12143, file: !11862, line: 523, column: 10)
!12143 = distinct !DILexicalBlock(scope: !12095, file: !11862, line: 518, column: 5)
!12144 = !DILocation(line: 523, column: 38, scope: !12142)
!12145 = !DILocation(line: 523, column: 10, scope: !12143)
!12146 = !DILocation(line: 526, column: 9, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12142, file: !11862, line: 524, column: 7)
!12148 = !DILocation(line: 529, column: 21, scope: !12147)
!12149 = !DILocation(line: 532, column: 9, scope: !12147)
!12150 = !DILocation(line: 532, column: 15, scope: !12147)
!12151 = !DILocation(line: 532, column: 51, scope: !12147)
!12152 = !DILocation(line: 534, column: 15, scope: !12153)
!12153 = distinct !DILexicalBlock(scope: !12154, file: !11862, line: 534, column: 14)
!12154 = distinct !DILexicalBlock(scope: !12147, file: !11862, line: 533, column: 9)
!12155 = !DILocation(line: 534, column: 29, scope: !12153)
!12156 = !DILocation(line: 534, column: 42, scope: !12153)
!12157 = !DILocation(line: 534, column: 14, scope: !12154)
!12158 = distinct !{!12158, !12149, !12159}
!12159 = !DILocation(line: 538, column: 9, scope: !12147)
!12160 = !DILocation(line: 544, column: 9, scope: !12147)
!12161 = !DILocation(line: 546, column: 9, scope: !12147)
!12162 = !DILocation(line: 548, column: 7, scope: !12147)
!12163 = !DILocation(line: 552, column: 9, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12142, file: !11862, line: 550, column: 7)
!12165 = !DILocation(line: 555, column: 21, scope: !12164)
!12166 = !DILocation(line: 558, column: 9, scope: !12164)
!12167 = !DILocation(line: 558, column: 15, scope: !12164)
!12168 = !DILocation(line: 558, column: 51, scope: !12164)
!12169 = !DILocation(line: 560, column: 15, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !11862, line: 560, column: 14)
!12171 = distinct !DILexicalBlock(scope: !12164, file: !11862, line: 559, column: 9)
!12172 = !DILocation(line: 560, column: 29, scope: !12170)
!12173 = !DILocation(line: 560, column: 42, scope: !12170)
!12174 = !DILocation(line: 560, column: 14, scope: !12171)
!12175 = distinct !{!12175, !12166, !12176}
!12176 = !DILocation(line: 564, column: 9, scope: !12164)
!12177 = !DILocation(line: 569, column: 27, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !11927, file: !11862, line: 569, column: 6)
!12179 = !DILocation(line: 569, column: 43, scope: !12178)
!12180 = !DILocation(line: 569, column: 69, scope: !12178)
!12181 = !DILocation(line: 569, column: 6, scope: !11927)
!12182 = !DILocation(line: 575, column: 27, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12184, file: !11862, line: 575, column: 8)
!12184 = distinct !DILexicalBlock(scope: !12178, file: !11862, line: 570, column: 3)
!12185 = !DILocation(line: 575, column: 36, scope: !12183)
!12186 = !DILocation(line: 575, column: 8, scope: !12184)
!12187 = !DILocation(line: 578, column: 7, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12183, file: !11862, line: 576, column: 5)
!12189 = !DILocation(line: 581, column: 19, scope: !12188)
!12190 = !DILocation(line: 584, column: 7, scope: !12188)
!12191 = !DILocation(line: 584, column: 13, scope: !12188)
!12192 = !DILocation(line: 584, column: 49, scope: !12188)
!12193 = !DILocation(line: 586, column: 13, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12195, file: !11862, line: 586, column: 12)
!12195 = distinct !DILexicalBlock(scope: !12188, file: !11862, line: 585, column: 7)
!12196 = !DILocation(line: 586, column: 27, scope: !12194)
!12197 = !DILocation(line: 586, column: 41, scope: !12194)
!12198 = !DILocation(line: 586, column: 12, scope: !12195)
!12199 = distinct !{!12199, !12190, !12200}
!12200 = !DILocation(line: 590, column: 7, scope: !12188)
!12201 = !DILocation(line: 595, column: 7, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12183, file: !11862, line: 593, column: 5)
!12203 = !DILocation(line: 598, column: 19, scope: !12202)
!12204 = !DILocation(line: 601, column: 7, scope: !12202)
!12205 = !DILocation(line: 601, column: 13, scope: !12202)
!12206 = !DILocation(line: 601, column: 49, scope: !12202)
!12207 = !DILocation(line: 603, column: 13, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12209, file: !11862, line: 603, column: 12)
!12209 = distinct !DILexicalBlock(scope: !12202, file: !11862, line: 602, column: 7)
!12210 = !DILocation(line: 603, column: 27, scope: !12208)
!12211 = !DILocation(line: 603, column: 41, scope: !12208)
!12212 = !DILocation(line: 603, column: 12, scope: !12209)
!12213 = distinct !{!12213, !12204, !12214}
!12214 = !DILocation(line: 607, column: 7, scope: !12202)
!12215 = !DILocation(line: 611, column: 27, scope: !11960)
!12216 = !DILocation(line: 611, column: 43, scope: !11960)
!12217 = !DILocation(line: 611, column: 69, scope: !11960)
!12218 = !DILocation(line: 611, column: 6, scope: !11927)
!12219 = !DILocation(line: 0, scope: !11959)
!12220 = !DILocation(line: 620, column: 8, scope: !11965)
!12221 = !DILocation(line: 620, column: 8, scope: !11959)
!12222 = !DILocation(line: 622, column: 7, scope: !11963)
!12223 = !DILocation(line: 622, column: 7, scope: !11964)
!12224 = !DILocation(line: 624, column: 5, scope: !11964)
!12225 = !DILocation(line: 626, column: 8, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !11959, file: !11862, line: 626, column: 8)
!12227 = !DILocation(line: 626, column: 8, scope: !11959)
!12228 = !DILocation(line: 629, column: 7, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12226, file: !11862, line: 627, column: 5)
!12230 = !DILocation(line: 632, column: 19, scope: !12229)
!12231 = !DILocation(line: 634, column: 7, scope: !12229)
!12232 = !DILocation(line: 634, column: 13, scope: !12229)
!12233 = !DILocation(line: 636, column: 13, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12235, file: !11862, line: 636, column: 12)
!12235 = distinct !DILexicalBlock(scope: !12229, file: !11862, line: 635, column: 7)
!12236 = !DILocation(line: 636, column: 27, scope: !12234)
!12237 = !DILocation(line: 636, column: 40, scope: !12234)
!12238 = !DILocation(line: 636, column: 12, scope: !12235)
!12239 = distinct !{!12239, !12231, !12240}
!12240 = !DILocation(line: 640, column: 7, scope: !12229)
!12241 = !DILocation(line: 644, column: 5, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !11862, line: 644, column: 5)
!12243 = distinct !DILexicalBlock(scope: !11959, file: !11862, line: 644, column: 5)
!12244 = !DILocation(line: 644, column: 5, scope: !12243)
!12245 = !DILocation(line: 644, column: 5, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12242, file: !11862, line: 644, column: 5)
!12247 = !DILocation(line: 644, column: 5, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12249, file: !11862, line: 644, column: 5)
!12249 = distinct !DILexicalBlock(scope: !12242, file: !11862, line: 644, column: 5)
!12250 = !DILocation(line: 644, column: 5, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12252, file: !11862, line: 644, column: 5)
!12252 = distinct !DILexicalBlock(scope: !12249, file: !11862, line: 644, column: 5)
!12253 = !DILocation(line: 644, column: 5, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12252, file: !11862, line: 644, column: 5)
!12255 = !DILocation(line: 0, scope: !12242)
!12256 = !DILocation(line: 646, column: 27, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !11959, file: !11862, line: 646, column: 8)
!12258 = !DILocation(line: 646, column: 36, scope: !12257)
!12259 = !DILocation(line: 0, scope: !12257)
!12260 = !DILocation(line: 646, column: 8, scope: !11959)
!12261 = !DILocation(line: 652, column: 13, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12257, file: !11862, line: 647, column: 5)
!12263 = !DILocation(line: 652, column: 49, scope: !12262)
!12264 = !DILocation(line: 652, column: 7, scope: !12262)
!12265 = !DILocation(line: 654, column: 13, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12267, file: !11862, line: 654, column: 12)
!12267 = distinct !DILexicalBlock(scope: !12262, file: !11862, line: 653, column: 7)
!12268 = !DILocation(line: 654, column: 27, scope: !12266)
!12269 = !DILocation(line: 654, column: 41, scope: !12266)
!12270 = !DILocation(line: 654, column: 12, scope: !12267)
!12271 = distinct !{!12271, !12264, !12272}
!12272 = !DILocation(line: 658, column: 7, scope: !12262)
!12273 = !DILocation(line: 666, column: 13, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12257, file: !11862, line: 661, column: 5)
!12275 = !DILocation(line: 666, column: 49, scope: !12274)
!12276 = !DILocation(line: 666, column: 7, scope: !12274)
!12277 = !DILocation(line: 668, column: 13, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12279, file: !11862, line: 668, column: 12)
!12279 = distinct !DILexicalBlock(scope: !12274, file: !11862, line: 667, column: 7)
!12280 = !DILocation(line: 668, column: 27, scope: !12278)
!12281 = !DILocation(line: 668, column: 41, scope: !12278)
!12282 = !DILocation(line: 668, column: 12, scope: !12279)
!12283 = distinct !{!12283, !12276, !12284}
!12284 = !DILocation(line: 672, column: 7, scope: !12274)
!12285 = !DILocation(line: 676, column: 8, scope: !11959)
!12286 = !DILocation(line: 678, column: 7, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12288, file: !11862, line: 677, column: 5)
!12288 = distinct !DILexicalBlock(scope: !11959, file: !11862, line: 676, column: 8)
!12289 = !DILocation(line: 679, column: 5, scope: !12287)
!12290 = !DILocation(line: 685, column: 31, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !11927, file: !11862, line: 685, column: 7)
!12292 = !DILocation(line: 685, column: 41, scope: !12291)
!12293 = !DILocation(line: 685, column: 7, scope: !11927)
!12294 = !DILocation(line: 688, column: 22, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !11862, line: 688, column: 8)
!12296 = distinct !DILexicalBlock(scope: !12291, file: !11862, line: 686, column: 3)
!12297 = !DILocation(line: 688, column: 8, scope: !12296)
!12298 = !DILocation(line: 690, column: 44, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12300, file: !11862, line: 690, column: 10)
!12300 = distinct !DILexicalBlock(scope: !12295, file: !11862, line: 689, column: 5)
!12301 = !DILocation(line: 0, scope: !12299)
!12302 = !DILocation(line: 690, column: 10, scope: !12300)
!12303 = !DILocation(line: 704, column: 15, scope: !12304)
!12304 = distinct !DILexicalBlock(scope: !12299, file: !11862, line: 691, column: 7)
!12305 = !DILocation(line: 704, column: 51, scope: !12304)
!12306 = !DILocation(line: 704, column: 9, scope: !12304)
!12307 = !DILocation(line: 706, column: 15, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12309, file: !11862, line: 706, column: 14)
!12309 = distinct !DILexicalBlock(scope: !12304, file: !11862, line: 705, column: 9)
!12310 = !DILocation(line: 706, column: 29, scope: !12308)
!12311 = !DILocation(line: 706, column: 43, scope: !12308)
!12312 = !DILocation(line: 706, column: 14, scope: !12309)
!12313 = distinct !{!12313, !12306, !12314}
!12314 = !DILocation(line: 710, column: 9, scope: !12304)
!12315 = !DILocation(line: 713, column: 9, scope: !12304)
!12316 = !DILocation(line: 717, column: 9, scope: !12304)
!12317 = !DILocation(line: 720, column: 21, scope: !12304)
!12318 = !DILocation(line: 723, column: 9, scope: !12304)
!12319 = !DILocation(line: 723, column: 15, scope: !12304)
!12320 = !DILocation(line: 723, column: 51, scope: !12304)
!12321 = !DILocation(line: 725, column: 15, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !11862, line: 725, column: 14)
!12323 = distinct !DILexicalBlock(scope: !12304, file: !11862, line: 724, column: 9)
!12324 = !DILocation(line: 725, column: 29, scope: !12322)
!12325 = !DILocation(line: 725, column: 43, scope: !12322)
!12326 = !DILocation(line: 725, column: 14, scope: !12323)
!12327 = distinct !{!12327, !12318, !12328}
!12328 = !DILocation(line: 729, column: 9, scope: !12304)
!12329 = !DILocation(line: 740, column: 15, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12299, file: !11862, line: 732, column: 7)
!12331 = !DILocation(line: 740, column: 51, scope: !12330)
!12332 = !DILocation(line: 740, column: 9, scope: !12330)
!12333 = !DILocation(line: 742, column: 15, scope: !12334)
!12334 = distinct !DILexicalBlock(scope: !12335, file: !11862, line: 742, column: 14)
!12335 = distinct !DILexicalBlock(scope: !12330, file: !11862, line: 741, column: 9)
!12336 = !DILocation(line: 742, column: 29, scope: !12334)
!12337 = !DILocation(line: 742, column: 43, scope: !12334)
!12338 = !DILocation(line: 742, column: 14, scope: !12335)
!12339 = distinct !{!12339, !12332, !12340}
!12340 = !DILocation(line: 746, column: 9, scope: !12330)
!12341 = !DILocation(line: 752, column: 44, scope: !12342)
!12342 = distinct !DILexicalBlock(scope: !12343, file: !11862, line: 752, column: 10)
!12343 = distinct !DILexicalBlock(scope: !12295, file: !11862, line: 750, column: 5)
!12344 = !DILocation(line: 752, column: 10, scope: !12343)
!12345 = !DILocation(line: 759, column: 27, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12342, file: !11862, line: 757, column: 7)
!12347 = !DILocation(line: 760, column: 13, scope: !12348)
!12348 = distinct !DILexicalBlock(scope: !12346, file: !11862, line: 760, column: 12)
!12349 = !DILocation(line: 760, column: 77, scope: !12348)
!12350 = !DILocation(line: 760, column: 51, scope: !12348)
!12351 = !DILocation(line: 760, column: 88, scope: !12348)
!12352 = !DILocation(line: 761, column: 13, scope: !12348)
!12353 = !DILocation(line: 761, column: 77, scope: !12348)
!12354 = !DILocation(line: 761, column: 51, scope: !12348)
!12355 = !DILocation(line: 761, column: 85, scope: !12348)
!12356 = !DILocation(line: 762, column: 13, scope: !12348)
!12357 = !DILocation(line: 762, column: 77, scope: !12348)
!12358 = !DILocation(line: 762, column: 51, scope: !12348)
!12359 = !DILocation(line: 760, column: 12, scope: !12346)
!12360 = !DILocation(line: 770, column: 3, scope: !11927)
!12361 = !DILocation(line: 771, column: 1, scope: !11927)
!12362 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !11862, file: !11862, line: 1343, type: !11925, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12363)
!12363 = !{!12364, !12365, !12366, !12367}
!12364 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !12362, file: !11862, line: 1343, type: !152)
!12365 = !DILocalVariable(name: "vos", scope: !12362, file: !11862, line: 1345, type: !152)
!12366 = !DILocalVariable(name: "latency", scope: !12362, file: !11862, line: 1346, type: !152)
!12367 = !DILocalVariable(name: "tmpreg", scope: !12368, file: !11862, line: 1357, type: !227)
!12368 = distinct !DILexicalBlock(scope: !12369, file: !11862, line: 1357, column: 7)
!12369 = distinct !DILexicalBlock(scope: !12370, file: !11862, line: 1356, column: 5)
!12370 = distinct !DILexicalBlock(scope: !12371, file: !11862, line: 1351, column: 8)
!12371 = distinct !DILexicalBlock(scope: !12372, file: !11862, line: 1350, column: 3)
!12372 = distinct !DILexicalBlock(scope: !12362, file: !11862, line: 1349, column: 7)
!12373 = !DILocation(line: 0, scope: !12362)
!12374 = !DILocation(line: 1349, column: 7, scope: !12372)
!12375 = !DILocation(line: 1349, column: 42, scope: !12372)
!12376 = !DILocation(line: 1349, column: 7, scope: !12362)
!12377 = !DILocation(line: 1351, column: 8, scope: !12370)
!12378 = !DILocation(line: 1351, column: 8, scope: !12371)
!12379 = !DILocation(line: 1353, column: 13, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12370, file: !11862, line: 1352, column: 5)
!12381 = !DILocation(line: 1354, column: 5, scope: !12380)
!12382 = !DILocation(line: 1357, column: 7, scope: !12368)
!12383 = !DILocation(line: 1357, column: 7, scope: !12369)
!12384 = !DILocation(line: 1358, column: 13, scope: !12369)
!12385 = !DILocation(line: 1359, column: 7, scope: !12369)
!12386 = !DILocation(line: 0, scope: !12370)
!12387 = !DILocation(line: 1363, column: 13, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12371, file: !11862, line: 1363, column: 8)
!12389 = !DILocation(line: 1363, column: 46, scope: !12388)
!12390 = !DILocation(line: 1369, column: 3, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12362, file: !11862, line: 1369, column: 3)
!12392 = !DILocation(line: 1369, column: 3, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !11862, line: 1369, column: 3)
!12394 = distinct !DILexicalBlock(scope: !12391, file: !11862, line: 1369, column: 3)
!12395 = !DILocation(line: 1373, column: 6, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12362, file: !11862, line: 1373, column: 6)
!12397 = !DILocation(line: 1379, column: 1, scope: !12362)
!12398 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11862, file: !11862, line: 799, type: !12399, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12410)
!12399 = !DISubroutineType(types: !12400)
!12400 = !{!11865, !12401, !152}
!12401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12402, size: 32)
!12402 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11932, line: 304, baseType: !12403)
!12403 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11932, line: 288, size: 160, elements: !12404)
!12404 = !{!12405, !12406, !12407, !12408, !12409}
!12405 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !12403, file: !11932, line: 290, baseType: !152, size: 32)
!12406 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !12403, file: !11932, line: 293, baseType: !152, size: 32, offset: 32)
!12407 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12403, file: !11932, line: 296, baseType: !152, size: 32, offset: 64)
!12408 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12403, file: !11932, line: 299, baseType: !152, size: 32, offset: 96)
!12409 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12403, file: !11932, line: 302, baseType: !152, size: 32, offset: 128)
!12410 = !{!12411, !12412, !12413, !12414}
!12411 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12398, file: !11862, line: 799, type: !12401)
!12412 = !DILocalVariable(name: "FLatency", arg: 2, scope: !12398, file: !11862, line: 799, type: !152)
!12413 = !DILocalVariable(name: "tickstart", scope: !12398, file: !11862, line: 801, type: !152)
!12414 = !DILocalVariable(name: "status", scope: !12398, file: !11862, line: 802, type: !11865)
!12415 = !DILocation(line: 0, scope: !12398)
!12416 = !DILocation(line: 805, column: 24, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12398, file: !11862, line: 805, column: 6)
!12418 = !DILocation(line: 805, column: 6, scope: !12398)
!12419 = !DILocation(line: 817, column: 17, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12398, file: !11862, line: 817, column: 6)
!12421 = !DILocation(line: 817, column: 15, scope: !12420)
!12422 = !DILocation(line: 817, column: 6, scope: !12398)
!12423 = !DILocation(line: 820, column: 5, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12425, file: !11862, line: 820, column: 5)
!12425 = distinct !DILexicalBlock(scope: !12426, file: !11862, line: 820, column: 5)
!12426 = distinct !DILexicalBlock(scope: !12420, file: !11862, line: 818, column: 3)
!12427 = !DILocation(line: 820, column: 5, scope: !12425)
!12428 = !DILocation(line: 820, column: 5, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12424, file: !11862, line: 820, column: 5)
!12430 = !DILocation(line: 824, column: 8, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12426, file: !11862, line: 824, column: 8)
!12432 = !DILocation(line: 824, column: 34, scope: !12431)
!12433 = !DILocation(line: 824, column: 8, scope: !12426)
!12434 = !DILocation(line: 831, column: 27, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12398, file: !11862, line: 831, column: 6)
!12436 = !DILocation(line: 831, column: 38, scope: !12435)
!12437 = !DILocation(line: 831, column: 60, scope: !12435)
!12438 = !DILocation(line: 831, column: 6, scope: !12398)
!12439 = !DILocation(line: 834, column: 5, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12435, file: !11862, line: 832, column: 3)
!12441 = !DILocation(line: 838, column: 27, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12398, file: !11862, line: 838, column: 6)
!12443 = !DILocation(line: 835, column: 3, scope: !12440)
!12444 = !DILocation(line: 838, column: 38, scope: !12442)
!12445 = !DILocation(line: 838, column: 62, scope: !12442)
!12446 = !DILocation(line: 838, column: 6, scope: !12398)
!12447 = !DILocation(line: 843, column: 27, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12449, file: !11862, line: 843, column: 8)
!12449 = distinct !DILexicalBlock(scope: !12442, file: !11862, line: 839, column: 3)
!12450 = !DILocation(line: 843, column: 8, scope: !12449)
!12451 = !DILocation(line: 846, column: 10, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12453, file: !11862, line: 846, column: 10)
!12453 = distinct !DILexicalBlock(scope: !12448, file: !11862, line: 844, column: 5)
!12454 = !DILocation(line: 846, column: 46, scope: !12452)
!12455 = !DILocation(line: 846, column: 10, scope: !12453)
!12456 = !DILocation(line: 855, column: 10, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12458, file: !11862, line: 855, column: 10)
!12458 = distinct !DILexicalBlock(scope: !12459, file: !11862, line: 853, column: 5)
!12459 = distinct !DILexicalBlock(scope: !12448, file: !11862, line: 852, column: 13)
!12460 = !DILocation(line: 855, column: 46, scope: !12457)
!12461 = !DILocation(line: 855, column: 10, scope: !12458)
!12462 = !DILocation(line: 864, column: 10, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12464, file: !11862, line: 864, column: 10)
!12464 = distinct !DILexicalBlock(scope: !12465, file: !11862, line: 862, column: 5)
!12465 = distinct !DILexicalBlock(scope: !12459, file: !11862, line: 861, column: 13)
!12466 = !DILocation(line: 864, column: 46, scope: !12463)
!12467 = !DILocation(line: 864, column: 10, scope: !12464)
!12468 = !DILocation(line: 873, column: 10, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12470, file: !11862, line: 873, column: 10)
!12470 = distinct !DILexicalBlock(scope: !12465, file: !11862, line: 871, column: 5)
!12471 = !DILocation(line: 873, column: 46, scope: !12469)
!12472 = !DILocation(line: 873, column: 10, scope: !12470)
!12473 = !DILocation(line: 878, column: 5, scope: !12449)
!12474 = !DILocation(line: 881, column: 17, scope: !12449)
!12475 = !DILocation(line: 883, column: 27, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12449, file: !11862, line: 883, column: 8)
!12477 = !DILocation(line: 883, column: 8, scope: !12449)
!12478 = !DILocation(line: 885, column: 14, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12476, file: !11862, line: 884, column: 5)
!12480 = !DILocation(line: 885, column: 44, scope: !12479)
!12481 = !DILocation(line: 885, column: 7, scope: !12479)
!12482 = !DILocation(line: 887, column: 13, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12484, file: !11862, line: 887, column: 12)
!12484 = distinct !DILexicalBlock(scope: !12479, file: !11862, line: 886, column: 7)
!12485 = !DILocation(line: 887, column: 27, scope: !12483)
!12486 = !DILocation(line: 887, column: 41, scope: !12483)
!12487 = !DILocation(line: 887, column: 12, scope: !12484)
!12488 = distinct !{!12488, !12481, !12489}
!12489 = !DILocation(line: 891, column: 7, scope: !12479)
!12490 = !DILocation(line: 895, column: 14, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12492, file: !11862, line: 894, column: 5)
!12492 = distinct !DILexicalBlock(scope: !12476, file: !11862, line: 893, column: 13)
!12493 = !DILocation(line: 895, column: 44, scope: !12491)
!12494 = !DILocation(line: 895, column: 7, scope: !12491)
!12495 = !DILocation(line: 897, column: 13, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12497, file: !11862, line: 897, column: 12)
!12497 = distinct !DILexicalBlock(scope: !12491, file: !11862, line: 896, column: 7)
!12498 = !DILocation(line: 897, column: 27, scope: !12496)
!12499 = !DILocation(line: 897, column: 41, scope: !12496)
!12500 = !DILocation(line: 897, column: 12, scope: !12497)
!12501 = distinct !{!12501, !12494, !12502}
!12502 = !DILocation(line: 901, column: 7, scope: !12491)
!12503 = !DILocation(line: 905, column: 14, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12505, file: !11862, line: 904, column: 5)
!12505 = distinct !DILexicalBlock(scope: !12492, file: !11862, line: 903, column: 13)
!12506 = !DILocation(line: 905, column: 44, scope: !12504)
!12507 = !DILocation(line: 905, column: 7, scope: !12504)
!12508 = !DILocation(line: 907, column: 13, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12510, file: !11862, line: 907, column: 12)
!12510 = distinct !DILexicalBlock(scope: !12504, file: !11862, line: 906, column: 7)
!12511 = !DILocation(line: 907, column: 27, scope: !12509)
!12512 = !DILocation(line: 907, column: 41, scope: !12509)
!12513 = !DILocation(line: 907, column: 12, scope: !12510)
!12514 = distinct !{!12514, !12507, !12515}
!12515 = !DILocation(line: 911, column: 7, scope: !12504)
!12516 = !DILocation(line: 915, column: 13, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12505, file: !11862, line: 914, column: 5)
!12518 = !DILocation(line: 915, column: 43, scope: !12517)
!12519 = !DILocation(line: 915, column: 7, scope: !12517)
!12520 = !DILocation(line: 917, column: 13, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12522, file: !11862, line: 917, column: 12)
!12522 = distinct !DILexicalBlock(scope: !12517, file: !11862, line: 916, column: 7)
!12523 = !DILocation(line: 917, column: 27, scope: !12521)
!12524 = !DILocation(line: 917, column: 41, scope: !12521)
!12525 = !DILocation(line: 917, column: 12, scope: !12522)
!12526 = distinct !{!12526, !12519, !12527}
!12527 = !DILocation(line: 921, column: 7, scope: !12517)
!12528 = !DILocation(line: 925, column: 17, scope: !12529)
!12529 = distinct !DILexicalBlock(scope: !12398, file: !11862, line: 925, column: 6)
!12530 = !DILocation(line: 925, column: 15, scope: !12529)
!12531 = !DILocation(line: 925, column: 6, scope: !12398)
!12532 = !DILocation(line: 928, column: 5, scope: !12533)
!12533 = distinct !DILexicalBlock(scope: !12534, file: !11862, line: 928, column: 5)
!12534 = distinct !DILexicalBlock(scope: !12529, file: !11862, line: 926, column: 3)
!12535 = !DILocation(line: 932, column: 8, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12534, file: !11862, line: 932, column: 8)
!12537 = !DILocation(line: 932, column: 34, scope: !12536)
!12538 = !DILocation(line: 932, column: 8, scope: !12534)
!12539 = !DILocation(line: 939, column: 27, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12398, file: !11862, line: 939, column: 6)
!12541 = !DILocation(line: 939, column: 38, scope: !12540)
!12542 = !DILocation(line: 939, column: 61, scope: !12540)
!12543 = !DILocation(line: 939, column: 6, scope: !12398)
!12544 = !DILocation(line: 942, column: 5, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12540, file: !11862, line: 940, column: 3)
!12546 = !DILocation(line: 946, column: 27, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12398, file: !11862, line: 946, column: 6)
!12548 = !DILocation(line: 943, column: 3, scope: !12545)
!12549 = !DILocation(line: 946, column: 38, scope: !12547)
!12550 = !DILocation(line: 946, column: 61, scope: !12547)
!12551 = !DILocation(line: 946, column: 6, scope: !12398)
!12552 = !DILocation(line: 949, column: 5, scope: !12553)
!12553 = distinct !DILexicalBlock(scope: !12547, file: !11862, line: 947, column: 3)
!12554 = !DILocation(line: 950, column: 3, scope: !12553)
!12555 = !DILocation(line: 953, column: 21, scope: !12398)
!12556 = !DILocation(line: 953, column: 70, scope: !12398)
!12557 = !DILocation(line: 953, column: 91, scope: !12398)
!12558 = !DILocation(line: 953, column: 50, scope: !12398)
!12559 = !DILocation(line: 953, column: 47, scope: !12398)
!12560 = !DILocation(line: 953, column: 19, scope: !12398)
!12561 = !DILocation(line: 956, column: 25, scope: !12398)
!12562 = !DILocation(line: 956, column: 12, scope: !12398)
!12563 = !DILocation(line: 958, column: 3, scope: !12398)
!12564 = !DILocation(line: 959, column: 1, scope: !12398)
!12565 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11862, file: !11862, line: 1083, type: !7228, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12566)
!12566 = !{!12567, !12568, !12569, !12570, !12571, !12572}
!12567 = !DILocalVariable(name: "tmpreg", scope: !12565, file: !11862, line: 1085, type: !152)
!12568 = !DILocalVariable(name: "pllm", scope: !12565, file: !11862, line: 1085, type: !152)
!12569 = !DILocalVariable(name: "plld", scope: !12565, file: !11862, line: 1085, type: !152)
!12570 = !DILocalVariable(name: "pllvco", scope: !12565, file: !11862, line: 1085, type: !152)
!12571 = !DILocalVariable(name: "msiclkrange", scope: !12565, file: !11862, line: 1085, type: !152)
!12572 = !DILocalVariable(name: "sysclockfreq", scope: !12565, file: !11862, line: 1085, type: !152)
!12573 = !DILocation(line: 1087, column: 17, scope: !12565)
!12574 = !DILocation(line: 0, scope: !12565)
!12575 = !DILocation(line: 1090, column: 3, scope: !12565)
!12576 = !DILocation(line: 1100, column: 7, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12578, file: !11862, line: 1098, column: 5)
!12578 = distinct !DILexicalBlock(scope: !12565, file: !11862, line: 1091, column: 3)
!12579 = !DILocation(line: 1104, column: 63, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12578, file: !11862, line: 1103, column: 5)
!12581 = !DILocation(line: 1104, column: 14, scope: !12580)
!12582 = !DILocation(line: 1105, column: 52, scope: !12580)
!12583 = !DILocation(line: 1105, column: 76, scope: !12580)
!12584 = !DILocation(line: 1106, column: 11, scope: !12585)
!12585 = distinct !DILexicalBlock(scope: !12580, file: !11862, line: 1106, column: 11)
!12586 = !DILocation(line: 1106, column: 41, scope: !12585)
!12587 = !DILocation(line: 1106, column: 11, scope: !12580)
!12588 = !DILocation(line: 0, scope: !12585)
!12589 = !DILocation(line: 1117, column: 7, scope: !12580)
!12590 = !DILocation(line: 1122, column: 27, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12578, file: !11862, line: 1121, column: 5)
!12592 = !DILocation(line: 1122, column: 56, scope: !12591)
!12593 = !DILocation(line: 1123, column: 30, scope: !12591)
!12594 = !DILocation(line: 1124, column: 7, scope: !12591)
!12595 = !DILocation(line: 0, scope: !12578)
!12596 = !DILocation(line: 1127, column: 3, scope: !12565)
!12597 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11862, file: !11862, line: 1005, type: !9695, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12598)
!12598 = !{!12599, !12600, !12601, !12602, !12612}
!12599 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !12597, file: !11862, line: 1005, type: !152)
!12600 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !12597, file: !11862, line: 1005, type: !152)
!12601 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !12597, file: !11862, line: 1005, type: !152)
!12602 = !DILocalVariable(name: "gpio", scope: !12597, file: !11862, line: 1007, type: !12603)
!12603 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !12604, line: 64, baseType: !12605)
!12604 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12604, line: 48, size: 160, elements: !12606)
!12606 = !{!12607, !12608, !12609, !12610, !12611}
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !12605, file: !12604, line: 50, baseType: !152, size: 32)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !12605, file: !12604, line: 53, baseType: !152, size: 32, offset: 32)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !12605, file: !12604, line: 56, baseType: !152, size: 32, offset: 64)
!12610 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !12605, file: !12604, line: 59, baseType: !152, size: 32, offset: 96)
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !12605, file: !12604, line: 62, baseType: !152, size: 32, offset: 128)
!12612 = !DILocalVariable(name: "tmpreg", scope: !12613, file: !11862, line: 1022, type: !227)
!12613 = distinct !DILexicalBlock(scope: !12597, file: !11862, line: 1022, column: 3)
!12614 = !DILocation(line: 0, scope: !12597)
!12615 = !DILocation(line: 1007, column: 3, scope: !12597)
!12616 = !DILocation(line: 1007, column: 20, scope: !12597)
!12617 = !DILocation(line: 1015, column: 8, scope: !12597)
!12618 = !DILocation(line: 1015, column: 18, scope: !12597)
!12619 = !DILocation(line: 1016, column: 8, scope: !12597)
!12620 = !DILocation(line: 1016, column: 18, scope: !12597)
!12621 = !DILocation(line: 1017, column: 8, scope: !12597)
!12622 = !DILocation(line: 1017, column: 18, scope: !12597)
!12623 = !DILocation(line: 1018, column: 8, scope: !12597)
!12624 = !DILocation(line: 1018, column: 18, scope: !12597)
!12625 = !DILocation(line: 1019, column: 8, scope: !12597)
!12626 = !DILocation(line: 1019, column: 18, scope: !12597)
!12627 = !DILocation(line: 1022, column: 3, scope: !12613)
!12628 = !DILocation(line: 1022, column: 3, scope: !12597)
!12629 = !DILocation(line: 1024, column: 3, scope: !12597)
!12630 = !DILocation(line: 1027, column: 3, scope: !12597)
!12631 = !DILocation(line: 1028, column: 1, scope: !12597)
!12632 = !DISubprogram(name: "HAL_GPIO_Init", scope: !12604, file: !12604, line: 293, type: !12633, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!12633 = !DISubroutineType(types: !12634)
!12634 = !{null, !2952, !12635}
!12635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12603, size: 32)
!12636 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11862, file: !11862, line: 1039, type: !3055, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12637 = !DILocation(line: 1041, column: 38, scope: !12636)
!12638 = !DILocation(line: 1042, column: 1, scope: !12636)
!12639 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11862, file: !11862, line: 1048, type: !3055, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12640 = !DILocation(line: 1050, column: 38, scope: !12639)
!12641 = !DILocation(line: 1051, column: 1, scope: !12639)
!12642 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11862, file: !11862, line: 1139, type: !7228, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12643 = !DILocation(line: 1141, column: 10, scope: !12642)
!12644 = !DILocation(line: 1141, column: 3, scope: !12642)
!12645 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11862, file: !11862, line: 1150, type: !7228, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12646 = !DILocation(line: 1153, column: 11, scope: !12645)
!12647 = !DILocation(line: 1153, column: 56, scope: !12645)
!12648 = !DILocation(line: 1153, column: 79, scope: !12645)
!12649 = !DILocation(line: 1153, column: 36, scope: !12645)
!12650 = !DILocation(line: 1153, column: 33, scope: !12645)
!12651 = !DILocation(line: 1153, column: 3, scope: !12645)
!12652 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11862, file: !11862, line: 1162, type: !7228, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12653 = !DILocation(line: 1165, column: 11, scope: !12652)
!12654 = !DILocation(line: 1165, column: 55, scope: !12652)
!12655 = !DILocation(line: 1165, column: 78, scope: !12652)
!12656 = !DILocation(line: 1165, column: 35, scope: !12652)
!12657 = !DILocation(line: 1165, column: 32, scope: !12652)
!12658 = !DILocation(line: 1165, column: 3, scope: !12652)
!12659 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11862, file: !11862, line: 1175, type: !12660, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12662)
!12660 = !DISubroutineType(types: !12661)
!12661 = !{null, !11930}
!12662 = !{!12663}
!12663 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12659, file: !11862, line: 1175, type: !11930)
!12664 = !DILocation(line: 0, scope: !12659)
!12665 = !DILocation(line: 1181, column: 22, scope: !12659)
!12666 = !DILocation(line: 1181, column: 37, scope: !12659)
!12667 = !DILocation(line: 1186, column: 12, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12659, file: !11862, line: 1186, column: 6)
!12669 = !DILocation(line: 1186, column: 15, scope: !12668)
!12670 = !DILocation(line: 1186, column: 31, scope: !12668)
!12671 = !DILocation(line: 1186, column: 6, scope: !12659)
!12672 = !DILocation(line: 1188, column: 24, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12668, file: !11862, line: 1187, column: 3)
!12674 = !DILocation(line: 1188, column: 33, scope: !12673)
!12675 = !DILocation(line: 1189, column: 3, scope: !12673)
!12676 = !DILocation(line: 1190, column: 17, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12668, file: !11862, line: 1190, column: 11)
!12678 = !DILocation(line: 1190, column: 20, scope: !12677)
!12679 = !DILocation(line: 1190, column: 35, scope: !12677)
!12680 = !DILocation(line: 0, scope: !12677)
!12681 = !DILocation(line: 1190, column: 11, scope: !12668)
!12682 = !DILocation(line: 1192, column: 33, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12677, file: !11862, line: 1191, column: 3)
!12684 = !DILocation(line: 1193, column: 3, scope: !12683)
!12685 = !DILocation(line: 1196, column: 33, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12677, file: !11862, line: 1195, column: 3)
!12687 = !DILocation(line: 1200, column: 12, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12659, file: !11862, line: 1200, column: 6)
!12689 = !DILocation(line: 1200, column: 15, scope: !12688)
!12690 = !DILocation(line: 1206, column: 24, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12688, file: !11862, line: 1205, column: 3)
!12692 = !DILocation(line: 1206, column: 33, scope: !12691)
!12693 = !DILocation(line: 1209, column: 61, scope: !12659)
!12694 = !DILocation(line: 1209, column: 88, scope: !12659)
!12695 = !DILocation(line: 1209, column: 22, scope: !12659)
!12696 = !DILocation(line: 1209, column: 42, scope: !12659)
!12697 = !DILocation(line: 1212, column: 12, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12659, file: !11862, line: 1212, column: 6)
!12699 = !DILocation(line: 1212, column: 6, scope: !12659)
!12700 = !DILocation(line: 1218, column: 24, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12698, file: !11862, line: 1217, column: 3)
!12702 = !DILocation(line: 1218, column: 33, scope: !12701)
!12703 = !DILocation(line: 1221, column: 61, scope: !12659)
!12704 = !DILocation(line: 1221, column: 88, scope: !12659)
!12705 = !DILocation(line: 1221, column: 22, scope: !12659)
!12706 = !DILocation(line: 1221, column: 42, scope: !12659)
!12707 = !DILocation(line: 1222, column: 55, scope: !12659)
!12708 = !DILocation(line: 1222, column: 61, scope: !12659)
!12709 = !DILocation(line: 1222, column: 22, scope: !12659)
!12710 = !DILocation(line: 1222, column: 36, scope: !12659)
!12711 = !DILocation(line: 1225, column: 12, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12659, file: !11862, line: 1225, column: 6)
!12713 = !DILocation(line: 1225, column: 16, scope: !12712)
!12714 = !DILocation(line: 1225, column: 33, scope: !12712)
!12715 = !DILocation(line: 1225, column: 6, scope: !12659)
!12716 = !DILocation(line: 1227, column: 24, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12712, file: !11862, line: 1226, column: 3)
!12718 = !DILocation(line: 1227, column: 33, scope: !12717)
!12719 = !DILocation(line: 1228, column: 3, scope: !12717)
!12720 = !DILocation(line: 1229, column: 17, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12712, file: !11862, line: 1229, column: 11)
!12722 = !DILocation(line: 1229, column: 21, scope: !12721)
!12723 = !DILocation(line: 1229, column: 37, scope: !12721)
!12724 = !DILocation(line: 0, scope: !12721)
!12725 = !DILocation(line: 1229, column: 11, scope: !12712)
!12726 = !DILocation(line: 1231, column: 33, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12721, file: !11862, line: 1230, column: 3)
!12728 = !DILocation(line: 1232, column: 3, scope: !12727)
!12729 = !DILocation(line: 1235, column: 33, scope: !12730)
!12730 = distinct !DILexicalBlock(scope: !12721, file: !11862, line: 1234, column: 3)
!12731 = !DILocation(line: 1239, column: 12, scope: !12732)
!12732 = distinct !DILexicalBlock(scope: !12659, file: !11862, line: 1239, column: 6)
!12733 = !DILocation(line: 1239, column: 16, scope: !12732)
!12734 = !DILocation(line: 1245, column: 24, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12732, file: !11862, line: 1244, column: 3)
!12736 = !DILocation(line: 1245, column: 33, scope: !12735)
!12737 = !DILocation(line: 1250, column: 12, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12659, file: !11862, line: 1250, column: 6)
!12739 = !DILocation(line: 1250, column: 15, scope: !12738)
!12740 = !DILocation(line: 1250, column: 30, scope: !12738)
!12741 = !DILocation(line: 1250, column: 6, scope: !12659)
!12742 = !DILocation(line: 1256, column: 28, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12738, file: !11862, line: 1255, column: 3)
!12744 = !DILocation(line: 1256, column: 37, scope: !12743)
!12745 = !DILocation(line: 1258, column: 54, scope: !12659)
!12746 = !DILocation(line: 1258, column: 59, scope: !12659)
!12747 = !DILocation(line: 1258, column: 26, scope: !12659)
!12748 = !DILocation(line: 1258, column: 36, scope: !12659)
!12749 = !DILocation(line: 1259, column: 51, scope: !12659)
!12750 = !DILocation(line: 1259, column: 56, scope: !12659)
!12751 = !DILocation(line: 1259, column: 26, scope: !12659)
!12752 = !DILocation(line: 1259, column: 33, scope: !12659)
!12753 = !DILocation(line: 1260, column: 51, scope: !12659)
!12754 = !DILocation(line: 1260, column: 56, scope: !12659)
!12755 = !DILocation(line: 1260, column: 26, scope: !12659)
!12756 = !DILocation(line: 1260, column: 33, scope: !12659)
!12757 = !DILocation(line: 1261, column: 1, scope: !12659)
!12758 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11862, file: !11862, line: 1271, type: !12759, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !12761)
!12759 = !DISubroutineType(types: !12760)
!12760 = !{null, !12401, !1075}
!12761 = !{!12762, !12763}
!12762 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !12758, file: !11862, line: 1271, type: !12401)
!12763 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !12758, file: !11862, line: 1271, type: !1075)
!12764 = !DILocation(line: 0, scope: !12758)
!12765 = !DILocation(line: 1278, column: 22, scope: !12758)
!12766 = !DILocation(line: 1278, column: 32, scope: !12758)
!12767 = !DILocation(line: 1281, column: 53, scope: !12758)
!12768 = !DILocation(line: 1281, column: 58, scope: !12758)
!12769 = !DILocation(line: 1281, column: 22, scope: !12758)
!12770 = !DILocation(line: 1281, column: 35, scope: !12758)
!12771 = !DILocation(line: 1284, column: 54, scope: !12758)
!12772 = !DILocation(line: 1284, column: 59, scope: !12758)
!12773 = !DILocation(line: 1284, column: 22, scope: !12758)
!12774 = !DILocation(line: 1284, column: 36, scope: !12758)
!12775 = !DILocation(line: 1287, column: 55, scope: !12758)
!12776 = !DILocation(line: 1287, column: 60, scope: !12758)
!12777 = !DILocation(line: 1287, column: 22, scope: !12758)
!12778 = !DILocation(line: 1287, column: 37, scope: !12758)
!12779 = !DILocation(line: 1290, column: 56, scope: !12758)
!12780 = !DILocation(line: 1290, column: 79, scope: !12758)
!12781 = !DILocation(line: 1290, column: 22, scope: !12758)
!12782 = !DILocation(line: 1290, column: 37, scope: !12758)
!12783 = !DILocation(line: 1293, column: 16, scope: !12758)
!12784 = !DILocation(line: 1293, column: 14, scope: !12758)
!12785 = !DILocation(line: 1294, column: 1, scope: !12758)
!12786 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11862, file: !11862, line: 1301, type: !3055, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12787 = !DILocation(line: 1304, column: 6, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12786, file: !11862, line: 1304, column: 6)
!12789 = !DILocation(line: 1304, column: 6, scope: !12786)
!12790 = !DILocation(line: 1307, column: 5, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12788, file: !11862, line: 1305, column: 3)
!12792 = !DILocation(line: 1310, column: 5, scope: !12791)
!12793 = !DILocation(line: 1311, column: 3, scope: !12791)
!12794 = !DILocation(line: 1312, column: 1, scope: !12786)
!12795 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11862, file: !11862, line: 1318, type: !3055, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2895, retainedNodes: !2175)
!12796 = !DILocation(line: 1323, column: 1, scope: !12795)
!12797 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12798, file: !12798, line: 147, type: !5911, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12799)
!12798 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12799 = !{!12800}
!12800 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12797, file: !12798, line: 147, type: !152)
!12801 = !DILocation(line: 0, scope: !12797)
!12802 = !DILocation(line: 150, column: 3, scope: !12797)
!12803 = !DILocation(line: 151, column: 1, scope: !12797)
!12804 = distinct !DISubprogram(name: "LL_InitTick", scope: !12805, file: !12805, line: 222, type: !10235, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12806)
!12805 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12806 = !{!12807, !12808}
!12807 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12804, file: !12805, line: 222, type: !152)
!12808 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12804, file: !12805, line: 222, type: !152)
!12809 = !DILocation(line: 0, scope: !12804)
!12810 = !DILocation(line: 225, column: 46, scope: !12804)
!12811 = !DILocation(line: 225, column: 55, scope: !12804)
!12812 = !DILocation(line: 225, column: 18, scope: !12804)
!12813 = !DILocation(line: 226, column: 18, scope: !12804)
!12814 = !DILocation(line: 227, column: 18, scope: !12804)
!12815 = !DILocation(line: 229, column: 1, scope: !12804)
!12816 = distinct !DISubprogram(name: "LL_mDelay", scope: !12798, file: !12798, line: 163, type: !5911, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12817)
!12817 = !{!12818, !12819, !12820}
!12818 = !DILocalVariable(name: "Delay", arg: 1, scope: !12816, file: !12798, line: 163, type: !152)
!12819 = !DILocalVariable(name: "tmp", scope: !12816, file: !12798, line: 165, type: !227)
!12820 = !DILocalVariable(name: "tmpDelay", scope: !12816, file: !12798, line: 166, type: !152)
!12821 = !DILocation(line: 0, scope: !12816)
!12822 = !DILocation(line: 165, column: 3, scope: !12816)
!12823 = !DILocation(line: 165, column: 18, scope: !12816)
!12824 = !DILocation(line: 165, column: 33, scope: !12816)
!12825 = !DILocation(line: 169, column: 10, scope: !12816)
!12826 = !DILocation(line: 172, column: 15, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12816, file: !12798, line: 172, column: 6)
!12828 = !DILocation(line: 177, column: 3, scope: !12816)
!12829 = !DILocation(line: 179, column: 18, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12831, file: !12798, line: 179, column: 8)
!12831 = distinct !DILexicalBlock(scope: !12816, file: !12798, line: 178, column: 3)
!12832 = !DILocation(line: 177, column: 19, scope: !12816)
!12833 = !DILocation(line: 184, column: 1, scope: !12816)
!12834 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12798, file: !12798, line: 227, type: !5911, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12835)
!12835 = !{!12836}
!12836 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12834, file: !12798, line: 227, type: !152)
!12837 = !DILocation(line: 0, scope: !12834)
!12838 = !DILocation(line: 230, column: 19, scope: !12834)
!12839 = !DILocation(line: 231, column: 1, scope: !12834)
!12840 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12798, file: !12798, line: 242, type: !12841, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12844)
!12841 = !DISubroutineType(types: !12842)
!12842 = !{!12843, !152}
!12843 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !1039, line: 194, baseType: !1038)
!12844 = !{!12845, !12846, !12847}
!12845 = !DILocalVariable(name: "Frequency", arg: 1, scope: !12840, file: !12798, line: 242, type: !152)
!12846 = !DILocalVariable(name: "status", scope: !12840, file: !12798, line: 244, type: !12843)
!12847 = !DILocalVariable(name: "latency", scope: !12840, file: !12798, line: 246, type: !152)
!12848 = !DILocation(line: 0, scope: !12840)
!12849 = !DILocation(line: 249, column: 25, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12840, file: !12798, line: 249, column: 7)
!12851 = !DILocation(line: 255, column: 9, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !12798, line: 255, column: 9)
!12853 = distinct !DILexicalBlock(scope: !12850, file: !12798, line: 254, column: 3)
!12854 = !DILocation(line: 255, column: 41, scope: !12852)
!12855 = !DILocation(line: 255, column: 9, scope: !12853)
!12856 = !DILocation(line: 257, column: 21, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12858, file: !12798, line: 257, column: 11)
!12858 = distinct !DILexicalBlock(scope: !12852, file: !12798, line: 256, column: 5)
!12859 = !DILocation(line: 284, column: 9, scope: !12853)
!12860 = !DILocation(line: 264, column: 14, scope: !12861)
!12861 = distinct !DILexicalBlock(scope: !12852, file: !12798, line: 264, column: 14)
!12862 = !DILocation(line: 264, column: 46, scope: !12861)
!12863 = !DILocation(line: 264, column: 14, scope: !12852)
!12864 = !DILocation(line: 266, column: 21, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12866, file: !12798, line: 266, column: 11)
!12866 = distinct !DILexicalBlock(scope: !12861, file: !12798, line: 265, column: 5)
!12867 = !DILocation(line: 275, column: 21, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12869, file: !12798, line: 275, column: 11)
!12869 = distinct !DILexicalBlock(scope: !12861, file: !12798, line: 274, column: 5)
!12870 = !DILocation(line: 286, column: 7, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12872, file: !12798, line: 285, column: 5)
!12872 = distinct !DILexicalBlock(scope: !12853, file: !12798, line: 284, column: 9)
!12873 = !DILocation(line: 287, column: 5, scope: !12871)
!12874 = !DILocation(line: 289, column: 5, scope: !12853)
!12875 = !DILocation(line: 293, column: 9, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12853, file: !12798, line: 293, column: 9)
!12877 = !DILocation(line: 293, column: 31, scope: !12876)
!12878 = !DILocation(line: 293, column: 9, scope: !12853)
!12879 = !DILocation(line: 298, column: 3, scope: !12840)
!12880 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !5925, file: !5925, line: 285, type: !7228, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12881 = !DILocation(line: 287, column: 21, scope: !12880)
!12882 = !DILocation(line: 287, column: 3, scope: !12880)
!12883 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !10234, file: !10234, line: 1897, type: !3055, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12884 = !DILocation(line: 1899, column: 3, scope: !12883)
!12885 = !DILocation(line: 1900, column: 1, scope: !12883)
!12886 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !10234, file: !10234, line: 1843, type: !5911, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12887)
!12887 = !{!12888}
!12888 = !DILocalVariable(name: "Latency", arg: 1, scope: !12886, file: !10234, line: 1843, type: !152)
!12889 = !DILocation(line: 0, scope: !12886)
!12890 = !DILocation(line: 1845, column: 3, scope: !12886)
!12891 = !DILocation(line: 1846, column: 1, scope: !12886)
!12892 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !10234, file: !10234, line: 1855, type: !7228, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12893 = !DILocation(line: 1857, column: 21, scope: !12892)
!12894 = !DILocation(line: 1857, column: 3, scope: !12892)
!12895 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12798, file: !12798, line: 323, type: !12896, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12911)
!12896 = !DISubroutineType(types: !12897)
!12897 = !{!12843, !12898, !12904}
!12898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12899, size: 32)
!12899 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12805, line: 103, baseType: !12900)
!12900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12805, line: 90, size: 64, elements: !12901)
!12901 = !{!12902, !12903}
!12902 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !12900, file: !12805, line: 92, baseType: !152, size: 32)
!12903 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !12900, file: !12805, line: 98, baseType: !152, size: 32, offset: 32)
!12904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12905, size: 32)
!12905 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12805, line: 128, baseType: !12906)
!12906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12805, line: 108, size: 96, elements: !12907)
!12907 = !{!12908, !12909, !12910}
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12906, file: !12805, line: 110, baseType: !152, size: 32)
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12906, file: !12805, line: 116, baseType: !152, size: 32, offset: 32)
!12910 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12906, file: !12805, line: 122, baseType: !152, size: 32, offset: 64)
!12911 = !{!12912, !12913, !12914, !12915}
!12912 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12895, file: !12798, line: 323, type: !12898)
!12913 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12895, file: !12798, line: 324, type: !12904)
!12914 = !DILocalVariable(name: "status", scope: !12895, file: !12798, line: 326, type: !12843)
!12915 = !DILocalVariable(name: "pllfreq", scope: !12895, file: !12798, line: 327, type: !152)
!12916 = !DILocation(line: 0, scope: !12895)
!12917 = !DILocation(line: 330, column: 7, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12895, file: !12798, line: 330, column: 7)
!12919 = !DILocation(line: 330, column: 26, scope: !12918)
!12920 = !DILocation(line: 330, column: 7, scope: !12895)
!12921 = !DILocation(line: 333, column: 15, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12918, file: !12798, line: 331, column: 3)
!12923 = !DILocation(line: 336, column: 9, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12922, file: !12798, line: 336, column: 9)
!12925 = !DILocation(line: 336, column: 30, scope: !12924)
!12926 = !DILocation(line: 336, column: 9, scope: !12922)
!12927 = !DILocation(line: 338, column: 7, scope: !12928)
!12928 = distinct !DILexicalBlock(scope: !12924, file: !12798, line: 337, column: 5)
!12929 = !DILocation(line: 339, column: 7, scope: !12928)
!12930 = !DILocation(line: 339, column: 14, scope: !12928)
!12931 = !DILocation(line: 339, column: 35, scope: !12928)
!12932 = distinct !{!12932, !12929, !12933}
!12933 = !DILocation(line: 342, column: 7, scope: !12928)
!12934 = !DILocation(line: 346, column: 76, scope: !12922)
!12935 = !DILocation(line: 346, column: 105, scope: !12922)
!12936 = !DILocation(line: 346, column: 5, scope: !12922)
!12937 = !DILocation(line: 349, column: 14, scope: !12922)
!12938 = !DILocation(line: 350, column: 3, scope: !12922)
!12939 = !DILocation(line: 0, scope: !12918)
!12940 = !DILocation(line: 357, column: 3, scope: !12895)
!12941 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12798, file: !12798, line: 487, type: !12942, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12944)
!12942 = !DISubroutineType(types: !12943)
!12943 = !{!12843}
!12944 = !{!12945}
!12945 = !DILocalVariable(name: "status", scope: !12941, file: !12798, line: 489, type: !12843)
!12946 = !DILocation(line: 0, scope: !12941)
!12947 = !DILocation(line: 492, column: 7, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12941, file: !12798, line: 492, column: 7)
!12949 = !DILocation(line: 492, column: 28, scope: !12948)
!12950 = !DILocation(line: 492, column: 7, scope: !12941)
!12951 = !DILocation(line: 498, column: 3, scope: !12941)
!12952 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12798, file: !12798, line: 457, type: !12953, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12955)
!12953 = !DISubroutineType(types: !12954)
!12954 = !{!152, !152, !12898}
!12955 = !{!12956, !12957, !12958}
!12956 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12952, file: !12798, line: 457, type: !152)
!12957 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12952, file: !12798, line: 457, type: !12898)
!12958 = !DILocalVariable(name: "pllfreq", scope: !12952, file: !12798, line: 459, type: !152)
!12959 = !DILocation(line: 0, scope: !12952)
!12960 = !DILocation(line: 470, column: 68, scope: !12952)
!12961 = !DILocation(line: 470, column: 75, scope: !12952)
!12962 = !DILocation(line: 470, column: 35, scope: !12952)
!12963 = !DILocation(line: 470, column: 34, scope: !12952)
!12964 = !DILocation(line: 470, column: 32, scope: !12952)
!12965 = !DILocation(line: 475, column: 46, scope: !12952)
!12966 = !DILocation(line: 475, column: 53, scope: !12952)
!12967 = !DILocation(line: 475, column: 76, scope: !12952)
!12968 = !DILocation(line: 475, column: 21, scope: !12952)
!12969 = !DILocation(line: 478, column: 3, scope: !12952)
!12970 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !9572, file: !9572, line: 612, type: !7228, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12971 = !DILocation(line: 614, column: 12, scope: !12970)
!12972 = !DILocation(line: 614, column: 11, scope: !12970)
!12973 = !DILocation(line: 614, column: 3, scope: !12970)
!12974 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !9572, file: !9572, line: 592, type: !3055, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!12975 = !DILocation(line: 594, column: 3, scope: !12974)
!12976 = !DILocation(line: 595, column: 1, scope: !12974)
!12977 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !9572, file: !9572, line: 1219, type: !9695, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12978)
!12978 = !{!12979, !12980, !12981}
!12979 = !DILocalVariable(name: "Source", arg: 1, scope: !12977, file: !9572, line: 1219, type: !152)
!12980 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !12977, file: !9572, line: 1219, type: !152)
!12981 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !12977, file: !9572, line: 1219, type: !152)
!12982 = !DILocation(line: 0, scope: !12977)
!12983 = !DILocation(line: 1221, column: 3, scope: !12977)
!12984 = !DILocation(line: 1222, column: 1, scope: !12977)
!12985 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12798, file: !12798, line: 510, type: !12986, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !12988)
!12986 = !DISubroutineType(types: !12987)
!12987 = !{!12843, !152, !12904}
!12988 = !{!12989, !12990, !12991, !12992}
!12989 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12985, file: !12798, line: 510, type: !152)
!12990 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12985, file: !12798, line: 510, type: !12904)
!12991 = !DILocalVariable(name: "status", scope: !12985, file: !12798, line: 512, type: !12843)
!12992 = !DILocalVariable(name: "hclk_frequency", scope: !12985, file: !12798, line: 513, type: !152)
!12993 = !DILocation(line: 0, scope: !12985)
!12994 = !DILocation(line: 520, column: 20, scope: !12985)
!12995 = !DILocation(line: 523, column: 7, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12985, file: !12798, line: 523, column: 7)
!12997 = !DILocation(line: 523, column: 23, scope: !12996)
!12998 = !DILocation(line: 523, column: 7, scope: !12985)
!12999 = !DILocation(line: 526, column: 14, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12996, file: !12798, line: 524, column: 3)
!13001 = !DILocation(line: 530, column: 14, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12985, file: !12798, line: 530, column: 7)
!13003 = !DILocation(line: 530, column: 7, scope: !12985)
!13004 = !DILocation(line: 533, column: 5, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !13002, file: !12798, line: 531, column: 3)
!13006 = !DILocation(line: 534, column: 5, scope: !13005)
!13007 = !DILocation(line: 534, column: 12, scope: !13005)
!13008 = !DILocation(line: 534, column: 33, scope: !13005)
!13009 = distinct !{!13009, !13006, !13010}
!13010 = !DILocation(line: 537, column: 5, scope: !13005)
!13011 = !DILocation(line: 540, column: 49, scope: !13005)
!13012 = !DILocation(line: 540, column: 5, scope: !13005)
!13013 = !DILocation(line: 541, column: 5, scope: !13005)
!13014 = !DILocation(line: 542, column: 5, scope: !13005)
!13015 = !DILocation(line: 542, column: 12, scope: !13005)
!13016 = !DILocation(line: 542, column: 37, scope: !13005)
!13017 = distinct !{!13017, !13014, !13018}
!13018 = !DILocation(line: 545, column: 5, scope: !13005)
!13019 = !DILocation(line: 548, column: 50, scope: !13005)
!13020 = !DILocation(line: 548, column: 5, scope: !13005)
!13021 = !DILocation(line: 549, column: 50, scope: !13005)
!13022 = !DILocation(line: 549, column: 5, scope: !13005)
!13023 = !DILocation(line: 550, column: 3, scope: !13005)
!13024 = !DILocation(line: 553, column: 7, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !12985, file: !12798, line: 553, column: 7)
!13026 = !DILocation(line: 553, column: 23, scope: !13025)
!13027 = !DILocation(line: 553, column: 7, scope: !12985)
!13028 = !DILocation(line: 556, column: 14, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13025, file: !12798, line: 554, column: 3)
!13030 = !DILocation(line: 557, column: 3, scope: !13029)
!13031 = !DILocation(line: 560, column: 14, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !12985, file: !12798, line: 560, column: 7)
!13033 = !DILocation(line: 560, column: 7, scope: !12985)
!13034 = !DILocation(line: 562, column: 5, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13032, file: !12798, line: 561, column: 3)
!13036 = !DILocation(line: 563, column: 3, scope: !13035)
!13037 = !DILocation(line: 565, column: 3, scope: !12985)
!13038 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !9572, file: !9572, line: 1169, type: !3055, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13039 = !DILocation(line: 1171, column: 3, scope: !13038)
!13040 = !DILocation(line: 1172, column: 1, scope: !13038)
!13041 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !9572, file: !9572, line: 1190, type: !7228, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13042 = !DILocation(line: 1192, column: 12, scope: !13041)
!13043 = !DILocation(line: 1192, column: 11, scope: !13041)
!13044 = !DILocation(line: 1192, column: 3, scope: !13041)
!13045 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !9572, file: !9572, line: 944, type: !5911, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13046)
!13046 = !{!13047}
!13047 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13045, file: !9572, line: 944, type: !152)
!13048 = !DILocation(line: 0, scope: !13045)
!13049 = !DILocation(line: 946, column: 3, scope: !13045)
!13050 = !DILocation(line: 947, column: 1, scope: !13045)
!13051 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !9572, file: !9572, line: 910, type: !5911, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13052)
!13052 = !{!13053}
!13053 = !DILocalVariable(name: "Source", arg: 1, scope: !13051, file: !9572, line: 910, type: !152)
!13054 = !DILocation(line: 0, scope: !13051)
!13055 = !DILocation(line: 912, column: 3, scope: !13051)
!13056 = !DILocation(line: 913, column: 1, scope: !13051)
!13057 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !9572, file: !9572, line: 924, type: !7228, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13058 = !DILocation(line: 926, column: 21, scope: !13057)
!13059 = !DILocation(line: 926, column: 3, scope: !13057)
!13060 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !9572, file: !9572, line: 960, type: !5911, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13061)
!13061 = !{!13062}
!13062 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13060, file: !9572, line: 960, type: !152)
!13063 = !DILocation(line: 0, scope: !13060)
!13064 = !DILocation(line: 962, column: 3, scope: !13060)
!13065 = !DILocation(line: 963, column: 1, scope: !13060)
!13066 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !9572, file: !9572, line: 976, type: !5911, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13067)
!13067 = !{!13068}
!13068 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !13066, file: !9572, line: 976, type: !152)
!13069 = !DILocation(line: 0, scope: !13066)
!13070 = !DILocation(line: 978, column: 3, scope: !13066)
!13071 = !DILocation(line: 979, column: 1, scope: !13066)
!13072 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12798, file: !12798, line: 385, type: !13073, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !13075)
!13073 = !DISubroutineType(types: !13074)
!13074 = !{!12843, !152, !152, !12898, !12904}
!13075 = !{!13076, !13077, !13078, !13079, !13080, !13081}
!13076 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !13072, file: !12798, line: 385, type: !152)
!13077 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !13072, file: !12798, line: 385, type: !152)
!13078 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !13072, file: !12798, line: 386, type: !12898)
!13079 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !13072, file: !12798, line: 386, type: !12904)
!13080 = !DILocalVariable(name: "status", scope: !13072, file: !12798, line: 388, type: !12843)
!13081 = !DILocalVariable(name: "pllfreq", scope: !13072, file: !12798, line: 389, type: !152)
!13082 = !DILocation(line: 0, scope: !13072)
!13083 = !DILocation(line: 396, column: 7, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13072, file: !12798, line: 396, column: 7)
!13085 = !DILocation(line: 396, column: 26, scope: !13084)
!13086 = !DILocation(line: 396, column: 7, scope: !13072)
!13087 = !DILocation(line: 400, column: 15, scope: !13088)
!13088 = distinct !DILexicalBlock(scope: !13084, file: !12798, line: 397, column: 3)
!13089 = !DILocation(line: 403, column: 9, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13088, file: !12798, line: 403, column: 9)
!13091 = !DILocation(line: 403, column: 30, scope: !13090)
!13092 = !DILocation(line: 403, column: 9, scope: !13088)
!13093 = !DILocation(line: 406, column: 21, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13095, file: !12798, line: 406, column: 11)
!13095 = distinct !DILexicalBlock(scope: !13090, file: !12798, line: 404, column: 5)
!13096 = !DILocation(line: 406, column: 11, scope: !13095)
!13097 = !DILocation(line: 408, column: 9, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13094, file: !12798, line: 407, column: 7)
!13099 = !DILocation(line: 409, column: 7, scope: !13098)
!13100 = !DILocation(line: 412, column: 9, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13094, file: !12798, line: 411, column: 7)
!13102 = !DILocation(line: 416, column: 7, scope: !13095)
!13103 = !DILocation(line: 417, column: 7, scope: !13095)
!13104 = !DILocation(line: 417, column: 14, scope: !13095)
!13105 = !DILocation(line: 417, column: 35, scope: !13095)
!13106 = distinct !{!13106, !13103, !13107}
!13107 = !DILocation(line: 420, column: 7, scope: !13095)
!13108 = !DILocation(line: 424, column: 78, scope: !13088)
!13109 = !DILocation(line: 424, column: 107, scope: !13088)
!13110 = !DILocation(line: 424, column: 7, scope: !13088)
!13111 = !DILocation(line: 427, column: 14, scope: !13088)
!13112 = !DILocation(line: 428, column: 3, scope: !13088)
!13113 = !DILocation(line: 0, scope: !13084)
!13114 = !DILocation(line: 435, column: 3, scope: !13072)
!13115 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !9572, file: !9572, line: 545, type: !7228, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13116 = !DILocation(line: 547, column: 12, scope: !13115)
!13117 = !DILocation(line: 547, column: 11, scope: !13115)
!13118 = !DILocation(line: 547, column: 3, scope: !13115)
!13119 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !9572, file: !9572, line: 505, type: !3055, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13120 = !DILocation(line: 507, column: 3, scope: !13119)
!13121 = !DILocation(line: 508, column: 1, scope: !13119)
!13122 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !9572, file: !9572, line: 515, type: !3055, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13123 = !DILocation(line: 517, column: 3, scope: !13122)
!13124 = !DILocation(line: 518, column: 1, scope: !13122)
!13125 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !9572, file: !9572, line: 525, type: !3055, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2966, retainedNodes: !2175)
!13126 = !DILocation(line: 527, column: 3, scope: !13125)
!13127 = !DILocation(line: 528, column: 1, scope: !13125)
!13128 = distinct !DISubprogram(name: "z_device_state_init", scope: !13129, file: !13129, line: 23, type: !3055, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13130)
!13129 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13130 = !{!13131}
!13131 = !DILocalVariable(name: "dev", scope: !13128, file: !13129, line: 25, type: !13132)
!13132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13133, size: 32)
!13133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13134)
!13134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !260, line: 378, size: 192, elements: !13135)
!13135 = !{!13136, !13137, !13138, !13139, !13145, !13146}
!13136 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13134, file: !260, line: 380, baseType: !118, size: 32)
!13137 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !13134, file: !260, line: 382, baseType: !13, size: 32, offset: 32)
!13138 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !13134, file: !260, line: 384, baseType: !13, size: 32, offset: 64)
!13139 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13134, file: !260, line: 386, baseType: !13140, size: 32, offset: 96)
!13140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13141, size: 32)
!13141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !260, line: 351, size: 16, elements: !13142)
!13142 = !{!13143, !13144}
!13143 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !13141, file: !260, line: 359, baseType: !195, size: 8)
!13144 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !13141, file: !260, line: 364, baseType: !145, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!13145 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13134, file: !260, line: 388, baseType: !106, size: 32, offset: 128)
!13146 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !13134, file: !260, line: 396, baseType: !273, size: 32, offset: 160)
!13147 = !DILocation(line: 0, scope: !13128)
!13148 = !DILocation(line: 31, column: 1, scope: !13128)
!13149 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !13129, file: !13129, line: 33, type: !13150, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13152)
!13150 = !DISubroutineType(types: !13151)
!13151 = !{!13132, !118}
!13152 = !{!13153, !13154}
!13153 = !DILocalVariable(name: "name", arg: 1, scope: !13149, file: !13129, line: 33, type: !118)
!13154 = !DILocalVariable(name: "dev", scope: !13149, file: !13129, line: 35, type: !13132)
!13155 = !DILocation(line: 0, scope: !13149)
!13156 = !DILocation(line: 40, column: 12, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13149, file: !13129, line: 40, column: 6)
!13158 = !DILocation(line: 40, column: 21, scope: !13157)
!13159 = !DILocation(line: 40, column: 25, scope: !13157)
!13160 = !DILocation(line: 40, column: 33, scope: !13157)
!13161 = !DILocation(line: 40, column: 6, scope: !13149)
!13162 = !DILocation(line: 55, column: 2, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13149, file: !13129, line: 55, column: 2)
!13164 = !DILocation(line: 50, column: 7, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13166, file: !13129, line: 50, column: 7)
!13166 = distinct !DILexicalBlock(scope: !13167, file: !13129, line: 49, column: 57)
!13167 = distinct !DILexicalBlock(scope: !13168, file: !13129, line: 49, column: 2)
!13168 = distinct !DILexicalBlock(scope: !13149, file: !13129, line: 49, column: 2)
!13169 = !DILocation(line: 50, column: 30, scope: !13165)
!13170 = !DILocation(line: 50, column: 39, scope: !13165)
!13171 = !DILocation(line: 50, column: 44, scope: !13165)
!13172 = !DILocation(line: 50, column: 7, scope: !13166)
!13173 = !DILocation(line: 49, column: 53, scope: !13167)
!13174 = !DILocation(line: 49, column: 33, scope: !13167)
!13175 = !DILocation(line: 49, column: 2, scope: !13168)
!13176 = distinct !{!13176, !13175, !13177}
!13177 = !DILocation(line: 53, column: 2, scope: !13168)
!13178 = !DILocation(line: 56, column: 7, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13180, file: !13129, line: 56, column: 7)
!13180 = distinct !DILexicalBlock(scope: !13181, file: !13129, line: 55, column: 57)
!13181 = distinct !DILexicalBlock(scope: !13163, file: !13129, line: 55, column: 2)
!13182 = !DILocation(line: 56, column: 30, scope: !13179)
!13183 = !DILocation(line: 56, column: 52, scope: !13179)
!13184 = !DILocation(line: 56, column: 34, scope: !13179)
!13185 = !DILocation(line: 56, column: 58, scope: !13179)
!13186 = !DILocation(line: 56, column: 7, scope: !13180)
!13187 = !DILocation(line: 55, column: 53, scope: !13181)
!13188 = !DILocation(line: 55, column: 33, scope: !13181)
!13189 = distinct !{!13189, !13162, !13190}
!13190 = !DILocation(line: 59, column: 2, scope: !13163)
!13191 = !DILocation(line: 62, column: 1, scope: !13149)
!13192 = distinct !DISubprogram(name: "z_device_is_ready", scope: !13129, file: !13129, line: 93, type: !13193, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13195)
!13193 = !DISubroutineType(types: !13194)
!13194 = !{!145, !13132}
!13195 = !{!13196}
!13196 = !DILocalVariable(name: "dev", arg: 1, scope: !13192, file: !13129, line: 93, type: !13132)
!13197 = !DILocation(line: 0, scope: !13192)
!13198 = !DILocation(line: 99, column: 10, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13192, file: !13129, line: 99, column: 6)
!13200 = !DILocation(line: 99, column: 6, scope: !13192)
!13201 = !DILocation(line: 103, column: 14, scope: !13192)
!13202 = !DILocation(line: 103, column: 21, scope: !13192)
!13203 = !DILocation(line: 103, column: 33, scope: !13192)
!13204 = !DILocation(line: 103, column: 49, scope: !13192)
!13205 = !DILocation(line: 103, column: 58, scope: !13192)
!13206 = !DILocation(line: 104, column: 1, scope: !13192)
!13207 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !13129, file: !13129, line: 87, type: !13208, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13211)
!13208 = !DISubroutineType(types: !13209)
!13209 = !{!185, !13210}
!13210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13132, size: 32)
!13211 = !{!13212}
!13212 = !DILocalVariable(name: "devices", arg: 1, scope: !13207, file: !13129, line: 87, type: !13210)
!13213 = !DILocation(line: 0, scope: !13207)
!13214 = !DILocation(line: 89, column: 11, scope: !13207)
!13215 = !DILocation(line: 90, column: 2, scope: !13207)
!13216 = distinct !DISubprogram(name: "device_required_foreach", scope: !13129, file: !13129, line: 125, type: !13217, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13223)
!13217 = !DISubroutineType(types: !13218)
!13218 = !{!107, !13132, !13219, !106}
!13219 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !260, line: 471, baseType: !13220)
!13220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13221, size: 32)
!13221 = !DISubroutineType(types: !13222)
!13222 = !{!107, !13132, !106}
!13223 = !{!13224, !13225, !13226, !13227, !13228}
!13224 = !DILocalVariable(name: "dev", arg: 1, scope: !13216, file: !13129, line: 125, type: !13132)
!13225 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13216, file: !13129, line: 126, type: !13219)
!13226 = !DILocalVariable(name: "context", arg: 3, scope: !13216, file: !13129, line: 127, type: !106)
!13227 = !DILocalVariable(name: "handle_count", scope: !13216, file: !13129, line: 129, type: !185)
!13228 = !DILocalVariable(name: "handles", scope: !13216, file: !13129, line: 130, type: !273)
!13229 = !DILocation(line: 0, scope: !13216)
!13230 = !DILocation(line: 129, column: 2, scope: !13216)
!13231 = !DILocation(line: 129, column: 9, scope: !13216)
!13232 = !DILocation(line: 130, column: 35, scope: !13216)
!13233 = !DILocation(line: 132, column: 33, scope: !13216)
!13234 = !DILocation(line: 132, column: 9, scope: !13216)
!13235 = !DILocation(line: 133, column: 1, scope: !13216)
!13236 = !DILocation(line: 132, column: 2, scope: !13216)
!13237 = distinct !DISubprogram(name: "device_required_handles_get", scope: !260, file: !260, line: 493, type: !13238, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13240)
!13238 = !DISubroutineType(types: !13239)
!13239 = !{!273, !13132, !2554}
!13240 = !{!13241, !13242, !13243, !13244}
!13241 = !DILocalVariable(name: "dev", arg: 1, scope: !13237, file: !260, line: 493, type: !13132)
!13242 = !DILocalVariable(name: "count", arg: 2, scope: !13237, file: !260, line: 493, type: !2554)
!13243 = !DILocalVariable(name: "rv", scope: !13237, file: !260, line: 495, type: !273)
!13244 = !DILocalVariable(name: "i", scope: !13245, file: !260, line: 498, type: !185)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !260, line: 497, column: 18)
!13246 = distinct !DILexicalBlock(scope: !13237, file: !260, line: 497, column: 6)
!13247 = !DILocation(line: 0, scope: !13237)
!13248 = !DILocation(line: 495, column: 35, scope: !13237)
!13249 = !DILocation(line: 497, column: 9, scope: !13246)
!13250 = !DILocation(line: 497, column: 6, scope: !13237)
!13251 = !DILocation(line: 0, scope: !13245)
!13252 = !DILocation(line: 500, column: 11, scope: !13245)
!13253 = !DILocation(line: 500, column: 40, scope: !13245)
!13254 = !DILocation(line: 502, column: 4, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13245, file: !260, line: 501, column: 40)
!13256 = distinct !{!13256, !13257, !13258}
!13257 = !DILocation(line: 500, column: 3, scope: !13245)
!13258 = !DILocation(line: 503, column: 3, scope: !13245)
!13259 = !DILocation(line: 504, column: 10, scope: !13245)
!13260 = !DILocation(line: 505, column: 2, scope: !13245)
!13261 = !DILocation(line: 507, column: 2, scope: !13237)
!13262 = distinct !DISubprogram(name: "device_visitor", scope: !13129, file: !13129, line: 106, type: !13263, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13265)
!13263 = !DISubroutineType(types: !13264)
!13264 = !{!107, !273, !185, !13219, !106}
!13265 = !{!13266, !13267, !13268, !13269, !13270, !13272, !13275, !13276}
!13266 = !DILocalVariable(name: "handles", arg: 1, scope: !13262, file: !13129, line: 106, type: !273)
!13267 = !DILocalVariable(name: "handle_count", arg: 2, scope: !13262, file: !13129, line: 107, type: !185)
!13268 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !13262, file: !13129, line: 108, type: !13219)
!13269 = !DILocalVariable(name: "context", arg: 4, scope: !13262, file: !13129, line: 109, type: !106)
!13270 = !DILocalVariable(name: "i", scope: !13271, file: !13129, line: 112, type: !185)
!13271 = distinct !DILexicalBlock(scope: !13262, file: !13129, line: 112, column: 2)
!13272 = !DILocalVariable(name: "dh", scope: !13273, file: !13129, line: 113, type: !275)
!13273 = distinct !DILexicalBlock(scope: !13274, file: !13129, line: 112, column: 44)
!13274 = distinct !DILexicalBlock(scope: !13271, file: !13129, line: 112, column: 2)
!13275 = !DILocalVariable(name: "rdev", scope: !13273, file: !13129, line: 114, type: !13132)
!13276 = !DILocalVariable(name: "rc", scope: !13273, file: !13129, line: 115, type: !107)
!13277 = !DILocation(line: 0, scope: !13262)
!13278 = !DILocation(line: 0, scope: !13271)
!13279 = !DILocation(line: 112, column: 23, scope: !13274)
!13280 = !DILocation(line: 112, column: 2, scope: !13271)
!13281 = distinct !{!13281, !13280, !13282}
!13282 = !DILocation(line: 120, column: 2, scope: !13271)
!13283 = !DILocation(line: 113, column: 24, scope: !13273)
!13284 = !DILocation(line: 0, scope: !13273)
!13285 = !DILocation(line: 114, column: 31, scope: !13273)
!13286 = !DILocation(line: 115, column: 12, scope: !13273)
!13287 = !DILocation(line: 117, column: 10, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13273, file: !13129, line: 117, column: 7)
!13289 = !DILocation(line: 112, column: 39, scope: !13274)
!13290 = !DILocation(line: 123, column: 1, scope: !13262)
!13291 = distinct !DISubprogram(name: "device_from_handle", scope: !260, file: !260, line: 439, type: !13292, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13294)
!13292 = !DISubroutineType(types: !13293)
!13293 = !{!13132, !275}
!13294 = !{!13295, !13296, !13297}
!13295 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !13291, file: !260, line: 439, type: !275)
!13296 = !DILocalVariable(name: "dev", scope: !13291, file: !260, line: 443, type: !13132)
!13297 = !DILocalVariable(name: "numdev", scope: !13291, file: !260, line: 444, type: !185)
!13298 = !DILocation(line: 0, scope: !13291)
!13299 = !DILocation(line: 446, column: 7, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13291, file: !260, line: 446, column: 6)
!13301 = !DILocation(line: 446, column: 18, scope: !13300)
!13302 = !DILocation(line: 446, column: 23, scope: !13300)
!13303 = !DILocation(line: 450, column: 2, scope: !13291)
!13304 = distinct !DISubprogram(name: "device_supported_foreach", scope: !13129, file: !13129, line: 135, type: !13217, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13305)
!13305 = !{!13306, !13307, !13308, !13309, !13310}
!13306 = !DILocalVariable(name: "dev", arg: 1, scope: !13304, file: !13129, line: 135, type: !13132)
!13307 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !13304, file: !13129, line: 136, type: !13219)
!13308 = !DILocalVariable(name: "context", arg: 3, scope: !13304, file: !13129, line: 137, type: !106)
!13309 = !DILocalVariable(name: "handle_count", scope: !13304, file: !13129, line: 139, type: !185)
!13310 = !DILocalVariable(name: "handles", scope: !13304, file: !13129, line: 140, type: !273)
!13311 = !DILocation(line: 0, scope: !13304)
!13312 = !DILocation(line: 139, column: 2, scope: !13304)
!13313 = !DILocation(line: 139, column: 9, scope: !13304)
!13314 = !DILocation(line: 140, column: 35, scope: !13304)
!13315 = !DILocation(line: 142, column: 33, scope: !13304)
!13316 = !DILocation(line: 142, column: 9, scope: !13304)
!13317 = !DILocation(line: 143, column: 1, scope: !13304)
!13318 = !DILocation(line: 142, column: 2, scope: !13304)
!13319 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !260, file: !260, line: 573, type: !13238, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3015, retainedNodes: !13320)
!13320 = !{!13321, !13322, !13323, !13324, !13325}
!13321 = !DILocalVariable(name: "dev", arg: 1, scope: !13319, file: !260, line: 573, type: !13132)
!13322 = !DILocalVariable(name: "count", arg: 2, scope: !13319, file: !260, line: 573, type: !2554)
!13323 = !DILocalVariable(name: "rv", scope: !13319, file: !260, line: 575, type: !273)
!13324 = !DILocalVariable(name: "region", scope: !13319, file: !260, line: 576, type: !185)
!13325 = !DILocalVariable(name: "i", scope: !13319, file: !260, line: 577, type: !185)
!13326 = !DILocation(line: 0, scope: !13319)
!13327 = !DILocation(line: 575, column: 35, scope: !13319)
!13328 = !DILocation(line: 579, column: 9, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13319, file: !260, line: 579, column: 6)
!13330 = !DILocation(line: 579, column: 6, scope: !13319)
!13331 = !DILocation(line: 582, column: 8, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13333, file: !260, line: 582, column: 8)
!13333 = distinct !DILexicalBlock(scope: !13334, file: !260, line: 581, column: 23)
!13334 = distinct !DILexicalBlock(scope: !13329, file: !260, line: 579, column: 18)
!13335 = !DILocation(line: 582, column: 12, scope: !13332)
!13336 = !DILocation(line: 585, column: 6, scope: !13333)
!13337 = !DILocation(line: 0, scope: !13334)
!13338 = !DILocation(line: 581, column: 17, scope: !13334)
!13339 = !DILocation(line: 581, column: 3, scope: !13334)
!13340 = !DILocation(line: 588, column: 10, scope: !13334)
!13341 = !DILocation(line: 588, column: 16, scope: !13334)
!13342 = !DILocation(line: 589, column: 4, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13334, file: !260, line: 588, column: 39)
!13344 = !DILocation(line: 588, column: 3, scope: !13334)
!13345 = distinct !{!13345, !13344, !13346}
!13346 = !DILocation(line: 590, column: 3, scope: !13334)
!13347 = !DILocation(line: 591, column: 10, scope: !13334)
!13348 = !DILocation(line: 592, column: 2, scope: !13334)
!13349 = !DILocation(line: 575, column: 25, scope: !13319)
!13350 = !DILocation(line: 594, column: 2, scope: !13319)
!13351 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1966, file: !1966, line: 49, type: !13352, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1963, retainedNodes: !2175)
!13352 = !DISubroutineType(types: !13353)
!13353 = !{!187}
!13354 = !DILocation(line: 51, column: 10, scope: !13351)
!13355 = !DILocation(line: 51, column: 20, scope: !13351)
!13356 = !DILocation(line: 51, column: 2, scope: !13351)
!13357 = distinct !DISubprogram(name: "coredump", scope: !3022, file: !3022, line: 209, type: !13358, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13507)
!13358 = !DISubroutineType(types: !13359)
!13359 = !{null, !32, !13360, !13404}
!13360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13361, size: 32)
!13361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13362)
!13362 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2684, line: 141, baseType: !13363)
!13363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2684, line: 97, size: 256, elements: !13364)
!13364 = !{!13365}
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !13363, file: !2684, line: 107, baseType: !13366, size: 256)
!13366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2684, line: 98, size: 256, elements: !13367)
!13367 = !{!13368, !13373, !13378, !13383, !13388, !13393, !13398, !13403}
!13368 = !DIDerivedType(tag: DW_TAG_member, scope: !13366, file: !2684, line: 99, baseType: !13369, size: 32)
!13369 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13366, file: !2684, line: 99, size: 32, elements: !13370)
!13370 = !{!13371, !13372}
!13371 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !13369, file: !2684, line: 99, baseType: !152, size: 32)
!13372 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !13369, file: !2684, line: 99, baseType: !152, size: 32)
!13373 = !DIDerivedType(tag: DW_TAG_member, scope: !13366, file: !2684, line: 100, baseType: !13374, size: 32, offset: 32)
!13374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13366, file: !2684, line: 100, size: 32, elements: !13375)
!13375 = !{!13376, !13377}
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !13374, file: !2684, line: 100, baseType: !152, size: 32)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !13374, file: !2684, line: 100, baseType: !152, size: 32)
!13378 = !DIDerivedType(tag: DW_TAG_member, scope: !13366, file: !2684, line: 101, baseType: !13379, size: 32, offset: 64)
!13379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13366, file: !2684, line: 101, size: 32, elements: !13380)
!13380 = !{!13381, !13382}
!13381 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !13379, file: !2684, line: 101, baseType: !152, size: 32)
!13382 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !13379, file: !2684, line: 101, baseType: !152, size: 32)
!13383 = !DIDerivedType(tag: DW_TAG_member, scope: !13366, file: !2684, line: 102, baseType: !13384, size: 32, offset: 96)
!13384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13366, file: !2684, line: 102, size: 32, elements: !13385)
!13385 = !{!13386, !13387}
!13386 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !13384, file: !2684, line: 102, baseType: !152, size: 32)
!13387 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !13384, file: !2684, line: 102, baseType: !152, size: 32)
!13388 = !DIDerivedType(tag: DW_TAG_member, scope: !13366, file: !2684, line: 103, baseType: !13389, size: 32, offset: 128)
!13389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13366, file: !2684, line: 103, size: 32, elements: !13390)
!13390 = !{!13391, !13392}
!13391 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !13389, file: !2684, line: 103, baseType: !152, size: 32)
!13392 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !13389, file: !2684, line: 103, baseType: !152, size: 32)
!13393 = !DIDerivedType(tag: DW_TAG_member, scope: !13366, file: !2684, line: 104, baseType: !13394, size: 32, offset: 160)
!13394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13366, file: !2684, line: 104, size: 32, elements: !13395)
!13395 = !{!13396, !13397}
!13396 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !13394, file: !2684, line: 104, baseType: !152, size: 32)
!13397 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !13394, file: !2684, line: 104, baseType: !152, size: 32)
!13398 = !DIDerivedType(tag: DW_TAG_member, scope: !13366, file: !2684, line: 105, baseType: !13399, size: 32, offset: 192)
!13399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13366, file: !2684, line: 105, size: 32, elements: !13400)
!13400 = !{!13401, !13402}
!13401 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !13399, file: !2684, line: 105, baseType: !152, size: 32)
!13402 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !13399, file: !2684, line: 105, baseType: !152, size: 32)
!13403 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !13366, file: !2684, line: 106, baseType: !152, size: 32, offset: 224)
!13404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13405, size: 32)
!13405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !322, line: 245, size: 1280, elements: !13406)
!13406 = !{!13407, !13465, !13477, !13478, !13479, !13480, !13481, !13487, !13502}
!13407 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !13405, file: !322, line: 247, baseType: !13408, size: 384)
!13408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !322, line: 57, size: 384, elements: !13409)
!13409 = !{!13410, !13434, !13441, !13442, !13443, !13452, !13453, !13454}
!13410 = !DIDerivedType(tag: DW_TAG_member, scope: !13408, file: !322, line: 60, baseType: !13411, size: 64)
!13411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13408, file: !322, line: 60, size: 64, elements: !13412)
!13412 = !{!13413, !13428}
!13413 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !13411, file: !322, line: 61, baseType: !13414, size: 64)
!13414 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !332, line: 49, baseType: !13415)
!13415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !332, line: 37, size: 64, elements: !13416)
!13416 = !{!13417, !13423}
!13417 = !DIDerivedType(tag: DW_TAG_member, scope: !13415, file: !332, line: 38, baseType: !13418, size: 32)
!13418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13415, file: !332, line: 38, size: 32, elements: !13419)
!13419 = !{!13420, !13422}
!13420 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13418, file: !332, line: 39, baseType: !13421, size: 32)
!13421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13415, size: 32)
!13422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13418, file: !332, line: 40, baseType: !13421, size: 32)
!13423 = !DIDerivedType(tag: DW_TAG_member, scope: !13415, file: !332, line: 42, baseType: !13424, size: 32, offset: 32)
!13424 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13415, file: !332, line: 42, size: 32, elements: !13425)
!13425 = !{!13426, !13427}
!13426 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13424, file: !332, line: 43, baseType: !13421, size: 32)
!13427 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13424, file: !332, line: 44, baseType: !13421, size: 32)
!13428 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !13411, file: !322, line: 62, baseType: !13429, size: 64)
!13429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !348, line: 49, size: 64, elements: !13430)
!13430 = !{!13431}
!13431 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !13429, file: !348, line: 50, baseType: !13432, size: 64)
!13432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13433, size: 64, elements: !353)
!13433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13429, size: 32)
!13434 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !13408, file: !322, line: 68, baseType: !13435, size: 32, offset: 64)
!13435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13436, size: 32)
!13436 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !358, line: 233, baseType: !13437)
!13437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !358, line: 231, size: 64, elements: !13438)
!13438 = !{!13439}
!13439 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !13437, file: !358, line: 232, baseType: !13440, size: 64)
!13440 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !332, line: 48, baseType: !13415)
!13441 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !13408, file: !322, line: 71, baseType: !195, size: 8, offset: 96)
!13442 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !13408, file: !322, line: 74, baseType: !195, size: 8, offset: 104)
!13443 = !DIDerivedType(tag: DW_TAG_member, scope: !13408, file: !322, line: 90, baseType: !13444, size: 16, offset: 112)
!13444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13408, file: !322, line: 90, size: 16, elements: !13445)
!13445 = !{!13446, !13451}
!13446 = !DIDerivedType(tag: DW_TAG_member, scope: !13444, file: !322, line: 91, baseType: !13447, size: 16)
!13447 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13444, file: !322, line: 91, size: 16, elements: !13448)
!13448 = !{!13449, !13450}
!13449 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !13447, file: !322, line: 96, baseType: !372, size: 8)
!13450 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !13447, file: !322, line: 97, baseType: !195, size: 8, offset: 8)
!13451 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !13444, file: !322, line: 100, baseType: !197, size: 16)
!13452 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !13408, file: !322, line: 107, baseType: !152, size: 32, offset: 128)
!13453 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !13408, file: !322, line: 127, baseType: !106, size: 32, offset: 160)
!13454 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13408, file: !322, line: 131, baseType: !13455, size: 192, offset: 192)
!13455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !358, line: 244, size: 192, elements: !13456)
!13456 = !{!13457, !13458, !13464}
!13457 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !13455, file: !358, line: 245, baseType: !13414, size: 64)
!13458 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !13455, file: !358, line: 246, baseType: !13459, size: 32, offset: 64)
!13459 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !358, line: 242, baseType: !13460)
!13460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13461, size: 32)
!13461 = !DISubroutineType(types: !13462)
!13462 = !{null, !13463}
!13463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13455, size: 32)
!13464 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !13455, file: !358, line: 249, baseType: !389, size: 64, offset: 128)
!13465 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !13405, file: !322, line: 250, baseType: !13466, size: 288, offset: 384)
!13466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !392, line: 25, size: 288, elements: !13467)
!13467 = !{!13468, !13469, !13470, !13471, !13472, !13473, !13474, !13475, !13476}
!13468 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !13466, file: !392, line: 26, baseType: !152, size: 32)
!13469 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !13466, file: !392, line: 27, baseType: !152, size: 32, offset: 32)
!13470 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !13466, file: !392, line: 28, baseType: !152, size: 32, offset: 64)
!13471 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !13466, file: !392, line: 29, baseType: !152, size: 32, offset: 96)
!13472 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !13466, file: !392, line: 30, baseType: !152, size: 32, offset: 128)
!13473 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !13466, file: !392, line: 31, baseType: !152, size: 32, offset: 160)
!13474 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !13466, file: !392, line: 32, baseType: !152, size: 32, offset: 192)
!13475 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !13466, file: !392, line: 33, baseType: !152, size: 32, offset: 224)
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !13466, file: !392, line: 34, baseType: !152, size: 32, offset: 256)
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !13405, file: !322, line: 253, baseType: !106, size: 32, offset: 672)
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !13405, file: !322, line: 256, baseType: !13436, size: 64, offset: 704)
!13479 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13405, file: !322, line: 279, baseType: !406, size: 256, offset: 768)
!13480 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !13405, file: !322, line: 294, baseType: !107, size: 32, offset: 1024)
!13481 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !13405, file: !322, line: 300, baseType: !13482, size: 96, offset: 1056)
!13482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !322, line: 149, size: 96, elements: !13483)
!13483 = !{!13484, !13485, !13486}
!13484 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !13482, file: !322, line: 153, baseType: !22, size: 32)
!13485 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13482, file: !322, line: 162, baseType: !185, size: 32, offset: 32)
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !13482, file: !322, line: 168, baseType: !185, size: 32, offset: 64)
!13487 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !13405, file: !322, line: 325, baseType: !13488, size: 32, offset: 1152)
!13488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13489, size: 32)
!13489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !419, line: 5073, size: 192, elements: !13490)
!13490 = !{!13491, !13497, !13498}
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13489, file: !419, line: 5074, baseType: !13492, size: 96)
!13492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !423, line: 56, size: 96, elements: !13493)
!13493 = !{!13494, !13495, !13496}
!13494 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !13492, file: !423, line: 57, baseType: !426, size: 32)
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !13492, file: !423, line: 58, baseType: !106, size: 32, offset: 32)
!13496 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !13492, file: !423, line: 59, baseType: !185, size: 32, offset: 64)
!13497 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13489, file: !419, line: 5075, baseType: !13436, size: 64, offset: 96)
!13498 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13489, file: !419, line: 5076, baseType: !13499, size: 32, offset: 160)
!13499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !433, line: 43, size: 32, elements: !13500)
!13500 = !{!13501}
!13501 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !13499, file: !433, line: 52, baseType: !22, size: 32)
!13502 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !13405, file: !322, line: 343, baseType: !13503, size: 64, offset: 1184)
!13503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !392, line: 60, size: 64, elements: !13504)
!13504 = !{!13505, !13506}
!13505 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !13503, file: !392, line: 63, baseType: !152, size: 32)
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !13503, file: !392, line: 66, baseType: !152, size: 32, offset: 32)
!13507 = !{!13508, !13509, !13510}
!13508 = !DILocalVariable(name: "reason", arg: 1, scope: !13357, file: !3022, line: 209, type: !32)
!13509 = !DILocalVariable(name: "esf", arg: 2, scope: !13357, file: !3022, line: 209, type: !13360)
!13510 = !DILocalVariable(name: "thread", arg: 3, scope: !13357, file: !3022, line: 210, type: !13404)
!13511 = !DILocation(line: 0, scope: !13357)
!13512 = !DILocation(line: 212, column: 1, scope: !13357)
!13513 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3022, file: !3022, line: 214, type: !13514, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13516)
!13514 = !DISubroutineType(types: !13515)
!13515 = !{null, !22, !22}
!13516 = !{!13517, !13518}
!13517 = !DILocalVariable(name: "start_addr", arg: 1, scope: !13513, file: !3022, line: 214, type: !22)
!13518 = !DILocalVariable(name: "end_addr", arg: 2, scope: !13513, file: !3022, line: 214, type: !22)
!13519 = !DILocation(line: 0, scope: !13513)
!13520 = !DILocation(line: 216, column: 1, scope: !13513)
!13521 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3022, file: !3022, line: 218, type: !13522, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13524)
!13522 = !DISubroutineType(types: !13523)
!13523 = !{null, !194, !185}
!13524 = !{!13525, !13526}
!13525 = !DILocalVariable(name: "buf", arg: 1, scope: !13521, file: !3022, line: 218, type: !194)
!13526 = !DILocalVariable(name: "buflen", arg: 2, scope: !13521, file: !3022, line: 218, type: !185)
!13527 = !DILocation(line: 0, scope: !13521)
!13528 = !DILocation(line: 220, column: 1, scope: !13521)
!13529 = distinct !DISubprogram(name: "coredump_query", scope: !3022, file: !3022, line: 222, type: !13530, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13532)
!13530 = !DISubroutineType(types: !13531)
!13531 = !{!107, !3021, !106}
!13532 = !{!13533, !13534}
!13533 = !DILocalVariable(name: "query_id", arg: 1, scope: !13529, file: !3022, line: 222, type: !3021)
!13534 = !DILocalVariable(name: "arg", arg: 2, scope: !13529, file: !3022, line: 222, type: !106)
!13535 = !DILocation(line: 0, scope: !13529)
!13536 = !DILocation(line: 224, column: 2, scope: !13529)
!13537 = distinct !DISubprogram(name: "coredump_cmd", scope: !3022, file: !3022, line: 227, type: !13538, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13540)
!13538 = !DISubroutineType(types: !13539)
!13539 = !{!107, !3028, !106}
!13540 = !{!13541, !13542}
!13541 = !DILocalVariable(name: "query_id", arg: 1, scope: !13537, file: !3022, line: 227, type: !3028)
!13542 = !DILocalVariable(name: "arg", arg: 2, scope: !13537, file: !3022, line: 227, type: !106)
!13543 = !DILocation(line: 0, scope: !13537)
!13544 = !DILocation(line: 229, column: 2, scope: !13537)
!13545 = distinct !DISubprogram(name: "arch_system_halt", scope: !13546, file: !13546, line: 23, type: !5898, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13547)
!13546 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13547 = !{!13548}
!13548 = !DILocalVariable(name: "reason", arg: 1, scope: !13545, file: !13546, line: 23, type: !32)
!13549 = !DILocation(line: 0, scope: !13545)
!13550 = !DILocation(line: 55, column: 2, scope: !13551, inlinedAt: !13555)
!13551 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5887, file: !5887, line: 42, type: !5888, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13552)
!13552 = !{!13553, !13554}
!13553 = !DILocalVariable(name: "key", scope: !13551, file: !5887, line: 44, type: !32)
!13554 = !DILocalVariable(name: "tmp", scope: !13551, file: !5887, line: 53, type: !32)
!13555 = distinct !DILocation(line: 31, column: 8, scope: !13545)
!13556 = !{i64 1655049}
!13557 = !DILocation(line: 0, scope: !13551, inlinedAt: !13555)
!13558 = !DILocation(line: 32, column: 2, scope: !13545)
!13559 = !DILocation(line: 32, column: 2, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13561, file: !13546, line: 32, column: 2)
!13561 = distinct !DILexicalBlock(scope: !13545, file: !13546, line: 32, column: 2)
!13562 = distinct !{!13562, !13563, !13564}
!13563 = !DILocation(line: 32, column: 2, scope: !13561)
!13564 = !DILocation(line: 34, column: 2, scope: !13561)
!13565 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !13546, file: !13546, line: 39, type: !13566, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13568)
!13566 = !DISubroutineType(types: !13567)
!13567 = !{null, !32, !13360}
!13568 = !{!13569, !13570}
!13569 = !DILocalVariable(name: "reason", arg: 1, scope: !13565, file: !13546, line: 39, type: !32)
!13570 = !DILocalVariable(name: "esf", arg: 2, scope: !13565, file: !13546, line: 40, type: !13360)
!13571 = !DILocation(line: 0, scope: !13565)
!13572 = !DILocation(line: 45, column: 2, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13574, file: !13546, line: 45, column: 2)
!13574 = distinct !DILexicalBlock(scope: !13575, file: !13546, line: 45, column: 2)
!13575 = distinct !DILexicalBlock(scope: !13576, file: !13546, line: 45, column: 2)
!13576 = distinct !DILexicalBlock(scope: !13565, file: !13546, line: 45, column: 2)
!13577 = !DILocation(line: 46, column: 2, scope: !13565)
!13578 = distinct !DISubprogram(name: "k_fatal_halt", scope: !13546, file: !13546, line: 81, type: !5898, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13579)
!13579 = !{!13580}
!13580 = !DILocalVariable(name: "reason", arg: 1, scope: !13578, file: !13546, line: 81, type: !32)
!13581 = !DILocation(line: 0, scope: !13578)
!13582 = !DILocation(line: 83, column: 2, scope: !13578)
!13583 = distinct !DISubprogram(name: "z_fatal_error", scope: !13546, file: !13546, line: 96, type: !13566, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13584)
!13584 = !{!13585, !13586, !13587, !13588}
!13585 = !DILocalVariable(name: "reason", arg: 1, scope: !13583, file: !13546, line: 96, type: !32)
!13586 = !DILocalVariable(name: "esf", arg: 2, scope: !13583, file: !13546, line: 96, type: !13360)
!13587 = !DILocalVariable(name: "key", scope: !13583, file: !13546, line: 102, type: !32)
!13588 = !DILocalVariable(name: "thread", scope: !13583, file: !13546, line: 103, type: !13404)
!13589 = !DILocation(line: 0, scope: !13583)
!13590 = !DILocation(line: 55, column: 2, scope: !13551, inlinedAt: !13591)
!13591 = distinct !DILocation(line: 102, column: 21, scope: !13583)
!13592 = !DILocation(line: 0, scope: !13551, inlinedAt: !13591)
!13593 = !DILocation(line: 104, column: 4, scope: !13583)
!13594 = !DILocation(line: 109, column: 2, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13596, file: !13546, line: 109, column: 2)
!13596 = distinct !DILexicalBlock(scope: !13597, file: !13546, line: 109, column: 2)
!13597 = distinct !DILexicalBlock(scope: !13598, file: !13546, line: 109, column: 2)
!13598 = distinct !DILexicalBlock(scope: !13583, file: !13546, line: 109, column: 2)
!13599 = !DILocation(line: 119, column: 11, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13583, file: !13546, line: 119, column: 6)
!13601 = !DILocation(line: 119, column: 20, scope: !13600)
!13602 = !DILocalVariable(name: "esf", arg: 1, scope: !13603, file: !7234, line: 71, type: !13360)
!13603 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7234, file: !7234, line: 71, type: !13604, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13606)
!13604 = !DISubroutineType(types: !13605)
!13605 = !{!145, !13360}
!13606 = !{!13602}
!13607 = !DILocation(line: 0, scope: !13603, inlinedAt: !13608)
!13608 = distinct !DILocation(line: 119, column: 23, scope: !13600)
!13609 = !DILocation(line: 73, column: 21, scope: !13603, inlinedAt: !13608)
!13610 = !DILocation(line: 73, column: 26, scope: !13603, inlinedAt: !13608)
!13611 = !DILocation(line: 73, column: 9, scope: !13603, inlinedAt: !13608)
!13612 = !DILocation(line: 119, column: 6, scope: !13583)
!13613 = !DILocation(line: 120, column: 3, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13615, file: !13546, line: 120, column: 3)
!13615 = distinct !DILexicalBlock(scope: !13616, file: !13546, line: 120, column: 3)
!13616 = distinct !DILexicalBlock(scope: !13617, file: !13546, line: 120, column: 3)
!13617 = distinct !DILexicalBlock(scope: !13618, file: !13546, line: 120, column: 3)
!13618 = distinct !DILexicalBlock(scope: !13600, file: !13546, line: 119, column: 57)
!13619 = !DILocation(line: 121, column: 2, scope: !13618)
!13620 = !DILocation(line: 124, column: 2, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13622, file: !13546, line: 124, column: 2)
!13622 = distinct !DILexicalBlock(scope: !13623, file: !13546, line: 124, column: 2)
!13623 = distinct !DILexicalBlock(scope: !13624, file: !13546, line: 124, column: 2)
!13624 = distinct !DILexicalBlock(scope: !13583, file: !13546, line: 124, column: 2)
!13625 = !DILocation(line: 131, column: 2, scope: !13583)
!13626 = !DILocation(line: 0, scope: !13603, inlinedAt: !13627)
!13627 = distinct !DILocation(line: 163, column: 24, scope: !13628)
!13628 = distinct !DILexicalBlock(scope: !13629, file: !13546, line: 163, column: 7)
!13629 = distinct !DILexicalBlock(scope: !13630, file: !13546, line: 160, column: 9)
!13630 = distinct !DILexicalBlock(scope: !13583, file: !13546, line: 146, column: 6)
!13631 = !DILocation(line: 73, column: 21, scope: !13603, inlinedAt: !13627)
!13632 = !DILocation(line: 73, column: 26, scope: !13603, inlinedAt: !13627)
!13633 = !DILocation(line: 73, column: 9, scope: !13603, inlinedAt: !13627)
!13634 = !DILocation(line: 163, column: 7, scope: !13629)
!13635 = !DILocalVariable(name: "key", arg: 1, scope: !13636, file: !5887, line: 84, type: !32)
!13636 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5887, file: !5887, line: 84, type: !5898, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13637)
!13637 = !{!13635}
!13638 = !DILocation(line: 0, scope: !13636, inlinedAt: !13639)
!13639 = distinct !DILocation(line: 171, column: 4, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13628, file: !13546, line: 163, column: 58)
!13641 = !DILocation(line: 95, column: 2, scope: !13636, inlinedAt: !13639)
!13642 = !{i64 1655866}
!13643 = !DILocation(line: 172, column: 4, scope: !13640)
!13644 = !DILocation(line: 163, column: 21, scope: !13628)
!13645 = !DILocation(line: 178, column: 15, scope: !13646)
!13646 = distinct !DILexicalBlock(scope: !13647, file: !13546, line: 178, column: 8)
!13647 = distinct !DILexicalBlock(scope: !13628, file: !13546, line: 174, column: 10)
!13648 = !DILocation(line: 0, scope: !13636, inlinedAt: !13649)
!13649 = distinct !DILocation(line: 179, column: 5, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13646, file: !13546, line: 178, column: 38)
!13651 = !DILocation(line: 0, scope: !13636, inlinedAt: !13652)
!13652 = distinct !DILocation(line: 186, column: 2, scope: !13583)
!13653 = !DILocation(line: 178, column: 8, scope: !13647)
!13654 = !DILocation(line: 189, column: 3, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13656, file: !13546, line: 188, column: 41)
!13656 = distinct !DILexicalBlock(scope: !13583, file: !13546, line: 188, column: 6)
!13657 = !DILocation(line: 191, column: 1, scope: !13583)
!13658 = distinct !DISubprogram(name: "k_current_get", scope: !419, file: !419, line: 530, type: !13659, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !2175)
!13659 = !DISubroutineType(types: !13660)
!13660 = !{!13661}
!13661 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !13404)
!13662 = !DILocation(line: 535, column: 9, scope: !13658)
!13663 = !DILocation(line: 535, column: 2, scope: !13658)
!13664 = distinct !DISubprogram(name: "reason_to_str", scope: !13546, file: !13546, line: 62, type: !13665, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13667)
!13665 = !DISubroutineType(types: !13666)
!13666 = !{!118, !32}
!13667 = !{!13668}
!13668 = !DILocalVariable(name: "reason", arg: 1, scope: !13664, file: !13546, line: 62, type: !32)
!13669 = !DILocation(line: 0, scope: !13664)
!13670 = !DILocation(line: 64, column: 2, scope: !13664)
!13671 = !DILocation(line: 0, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13664, file: !13546, line: 64, column: 18)
!13673 = !DILocation(line: 78, column: 1, scope: !13664)
!13674 = distinct !DISubprogram(name: "thread_name_get", scope: !13546, file: !13546, line: 51, type: !13675, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13677)
!13675 = !DISubroutineType(types: !13676)
!13676 = !{!118, !13404}
!13677 = !{!13678, !13679}
!13678 = !DILocalVariable(name: "thread", arg: 1, scope: !13674, file: !13546, line: 51, type: !13404)
!13679 = !DILocalVariable(name: "thread_name", scope: !13674, file: !13546, line: 53, type: !118)
!13680 = !DILocation(line: 0, scope: !13674)
!13681 = !DILocation(line: 53, column: 36, scope: !13674)
!13682 = !DILocation(line: 53, column: 28, scope: !13674)
!13683 = !DILocation(line: 53, column: 47, scope: !13674)
!13684 = !DILocation(line: 55, column: 19, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13674, file: !13546, line: 55, column: 6)
!13686 = !DILocation(line: 55, column: 28, scope: !13685)
!13687 = !DILocation(line: 55, column: 32, scope: !13685)
!13688 = !DILocation(line: 55, column: 47, scope: !13685)
!13689 = !DILocation(line: 55, column: 6, scope: !13674)
!13690 = !DILocation(line: 57, column: 2, scope: !13691)
!13691 = distinct !DILexicalBlock(scope: !13685, file: !13546, line: 55, column: 57)
!13692 = !DILocation(line: 59, column: 2, scope: !13674)
!13693 = distinct !DISubprogram(name: "k_thread_abort", scope: !4386, file: !4386, line: 188, type: !13694, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !13696)
!13694 = !DISubroutineType(types: !13695)
!13695 = !{null, !13661}
!13696 = !{!13697}
!13697 = !DILocalVariable(name: "thread", arg: 1, scope: !13693, file: !4386, line: 188, type: !13661)
!13698 = !DILocation(line: 0, scope: !13693)
!13699 = !DILocation(line: 197, column: 2, scope: !13700)
!13700 = distinct !DILexicalBlock(scope: !13693, file: !4386, line: 197, column: 2)
!13701 = !{i64 2152225300}
!13702 = !DILocation(line: 198, column: 2, scope: !13693)
!13703 = !DILocation(line: 199, column: 1, scope: !13693)
!13704 = distinct !DISubprogram(name: "z_current_get", scope: !4386, file: !4386, line: 173, type: !13659, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3018, retainedNodes: !2175)
!13705 = !DILocation(line: 180, column: 2, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13704, file: !4386, line: 180, column: 2)
!13707 = !{i64 2152225232}
!13708 = !DILocation(line: 181, column: 9, scope: !13704)
!13709 = !DILocation(line: 181, column: 2, scope: !13704)
!13710 = distinct !DISubprogram(name: "z_early_memset", scope: !1974, file: !1974, line: 108, type: !13711, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13713)
!13711 = !DISubroutineType(types: !13712)
!13712 = !{null, !106, !107, !185}
!13713 = !{!13714, !13715, !13716}
!13714 = !DILocalVariable(name: "dst", arg: 1, scope: !13710, file: !1974, line: 108, type: !106)
!13715 = !DILocalVariable(name: "c", arg: 2, scope: !13710, file: !1974, line: 108, type: !107)
!13716 = !DILocalVariable(name: "n", arg: 3, scope: !13710, file: !1974, line: 108, type: !185)
!13717 = !DILocation(line: 0, scope: !13710)
!13718 = !DILocation(line: 110, column: 9, scope: !13710)
!13719 = !DILocation(line: 111, column: 1, scope: !13710)
!13720 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1974, file: !1974, line: 121, type: !13721, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13723)
!13721 = !DISubroutineType(types: !13722)
!13722 = !{null, !106, !13, !185}
!13723 = !{!13724, !13725, !13726}
!13724 = !DILocalVariable(name: "dst", arg: 1, scope: !13720, file: !1974, line: 121, type: !106)
!13725 = !DILocalVariable(name: "src", arg: 2, scope: !13720, file: !1974, line: 121, type: !13)
!13726 = !DILocalVariable(name: "n", arg: 3, scope: !13720, file: !1974, line: 121, type: !185)
!13727 = !DILocation(line: 0, scope: !13720)
!13728 = !DILocation(line: 123, column: 9, scope: !13720)
!13729 = !DILocation(line: 124, column: 1, scope: !13720)
!13730 = distinct !DISubprogram(name: "z_bss_zero", scope: !1974, file: !1974, line: 132, type: !3055, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2175)
!13731 = !DILocation(line: 143, column: 2, scope: !13730)
!13732 = !DILocation(line: 168, column: 1, scope: !13730)
!13733 = distinct !DISubprogram(name: "z_init_cpu", scope: !1974, file: !1974, line: 372, type: !9244, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13734)
!13734 = !{!13735}
!13735 = !DILocalVariable(name: "id", arg: 1, scope: !13733, file: !1974, line: 372, type: !107)
!13736 = !DILocation(line: 0, scope: !13733)
!13737 = !DILocation(line: 374, column: 2, scope: !13733)
!13738 = !DILocation(line: 375, column: 34, scope: !13733)
!13739 = !DILocation(line: 375, column: 19, scope: !13733)
!13740 = !DILocation(line: 375, column: 31, scope: !13733)
!13741 = !DILocation(line: 376, column: 24, scope: !13733)
!13742 = !DILocation(line: 376, column: 19, scope: !13733)
!13743 = !DILocation(line: 376, column: 22, scope: !13733)
!13744 = !DILocation(line: 378, column: 26, scope: !13733)
!13745 = !DILocation(line: 378, column: 4, scope: !13733)
!13746 = !DILocation(line: 378, column: 50, scope: !13733)
!13747 = !DILocation(line: 377, column: 19, scope: !13733)
!13748 = !DILocation(line: 377, column: 29, scope: !13733)
!13749 = !DILocation(line: 384, column: 1, scope: !13733)
!13750 = distinct !DISubprogram(name: "init_idle_thread", scope: !1974, file: !1974, line: 343, type: !9244, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13751)
!13751 = !{!13752, !13753, !13754, !13757}
!13752 = !DILocalVariable(name: "i", arg: 1, scope: !13750, file: !1974, line: 343, type: !107)
!13753 = !DILocalVariable(name: "thread", scope: !13750, file: !1974, line: 345, type: !2066)
!13754 = !DILocalVariable(name: "stack", scope: !13750, file: !1974, line: 346, type: !13755)
!13755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13756, size: 32)
!13756 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !681, line: 44, baseType: !2184)
!13757 = !DILocalVariable(name: "tname", scope: !13750, file: !1974, line: 354, type: !193)
!13758 = !DILocation(line: 0, scope: !13750)
!13759 = !DILocation(line: 345, column: 29, scope: !13750)
!13760 = !DILocation(line: 346, column: 28, scope: !13750)
!13761 = !DILocation(line: 362, column: 37, scope: !13750)
!13762 = !DILocation(line: 362, column: 36, scope: !13750)
!13763 = !DILocation(line: 361, column: 2, scope: !13750)
!13764 = !DILocation(line: 365, column: 2, scope: !13750)
!13765 = !DILocation(line: 370, column: 1, scope: !13750)
!13766 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !698, file: !698, line: 331, type: !13767, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13769)
!13767 = !DISubroutineType(types: !13768)
!13768 = !{!193, !13755}
!13769 = !{!13770}
!13770 = !DILocalVariable(name: "sym", arg: 1, scope: !13766, file: !698, line: 331, type: !13755)
!13771 = !DILocation(line: 0, scope: !13766)
!13772 = !DILocation(line: 333, column: 21, scope: !13766)
!13773 = !DILocation(line: 333, column: 2, scope: !13766)
!13774 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13775, file: !13775, line: 155, type: !13776, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13778)
!13775 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13776 = !DISubroutineType(types: !13777)
!13777 = !{null, !2066}
!13778 = !{!13779}
!13779 = !DILocalVariable(name: "thread", arg: 1, scope: !13774, file: !13775, line: 155, type: !2066)
!13780 = !DILocation(line: 0, scope: !13774)
!13781 = !DILocation(line: 157, column: 15, scope: !13774)
!13782 = !DILocation(line: 157, column: 28, scope: !13774)
!13783 = !DILocation(line: 158, column: 1, scope: !13774)
!13784 = distinct !DISubprogram(name: "z_cstart", scope: !1974, file: !1974, line: 501, type: !3055, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13785)
!13785 = !{!13786}
!13786 = !DILocalVariable(name: "dummy_thread", scope: !13784, file: !1974, line: 518, type: !2067)
!13787 = !DILocation(line: 507, column: 2, scope: !13784)
!13788 = !DILocation(line: 43, column: 14, scope: !13789, inlinedAt: !13793)
!13789 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13790, file: !13790, line: 40, type: !3055, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13791)
!13790 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13791 = !{!13792}
!13792 = !DILocalVariable(name: "msp", scope: !13789, file: !13790, line: 42, type: !152)
!13793 = distinct !DILocation(line: 44, column: 2, scope: !13794, inlinedAt: !13796)
!13794 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13795, file: !13795, line: 42, type: !3055, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2175)
!13795 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13796 = distinct !DILocation(line: 510, column: 2, scope: !13784)
!13797 = !DILocation(line: 43, column: 3, scope: !13789, inlinedAt: !13793)
!13798 = !DILocation(line: 43, column: 60, scope: !13789, inlinedAt: !13793)
!13799 = !DILocation(line: 0, scope: !13789, inlinedAt: !13793)
!13800 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13801, file: !6223, line: 1153, type: !152)
!13801 = distinct !DISubprogram(name: "__set_MSP", scope: !6223, file: !6223, line: 1153, type: !5911, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13802)
!13802 = !{!13800}
!13803 = !DILocation(line: 0, scope: !13801, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 46, column: 2, scope: !13789, inlinedAt: !13793)
!13805 = !DILocation(line: 1155, column: 3, scope: !13801, inlinedAt: !13804)
!13806 = !{i64 2468489}
!13807 = !DILocation(line: 62, column: 11, scope: !13789, inlinedAt: !13793)
!13808 = !DILocation(line: 102, column: 2, scope: !13809, inlinedAt: !13810)
!13809 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7234, file: !7234, line: 97, type: !3055, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2175)
!13810 = distinct !DILocation(line: 45, column: 2, scope: !13794, inlinedAt: !13796)
!13811 = !DILocation(line: 108, column: 2, scope: !13809, inlinedAt: !13810)
!13812 = !DILocation(line: 112, column: 2, scope: !13809, inlinedAt: !13810)
!13813 = !DILocation(line: 113, column: 2, scope: !13809, inlinedAt: !13810)
!13814 = !DILocation(line: 114, column: 2, scope: !13809, inlinedAt: !13810)
!13815 = !DILocation(line: 116, column: 2, scope: !13809, inlinedAt: !13810)
!13816 = !DILocation(line: 123, column: 13, scope: !13809, inlinedAt: !13810)
!13817 = !DILocation(line: 46, column: 2, scope: !13794, inlinedAt: !13796)
!13818 = !DILocation(line: 47, column: 2, scope: !13794, inlinedAt: !13796)
!13819 = !DILocation(line: 174, column: 12, scope: !13820, inlinedAt: !13821)
!13820 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7234, file: !7234, line: 169, type: !3055, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !2175)
!13821 = distinct !DILocation(line: 48, column: 2, scope: !13794, inlinedAt: !13796)
!13822 = !DILocation(line: 179, column: 12, scope: !13820, inlinedAt: !13821)
!13823 = !DILocation(line: 50, column: 2, scope: !13794, inlinedAt: !13796)
!13824 = !DILocation(line: 57, column: 2, scope: !13794, inlinedAt: !13796)
!13825 = !DILocation(line: 518, column: 2, scope: !13784)
!13826 = !DILocation(line: 518, column: 18, scope: !13784)
!13827 = !DILocation(line: 520, column: 2, scope: !13784)
!13828 = !DILocation(line: 523, column: 2, scope: !13784)
!13829 = !DILocation(line: 526, column: 2, scope: !13784)
!13830 = !DILocation(line: 527, column: 2, scope: !13784)
!13831 = !DILocation(line: 543, column: 24, scope: !13784)
!13832 = !DILocation(line: 543, column: 2, scope: !13784)
!13833 = !DILocation(line: 0, scope: !2206)
!13834 = !DILocation(line: 246, column: 15, scope: !2224)
!13835 = !DILocation(line: 246, column: 36, scope: !2223)
!13836 = !DILocation(line: 246, column: 2, scope: !2224)
!13837 = !DILocation(line: 247, column: 37, scope: !2222)
!13838 = !DILocation(line: 0, scope: !2222)
!13839 = !DILocation(line: 248, column: 19, scope: !2222)
!13840 = !DILocation(line: 248, column: 12, scope: !2222)
!13841 = !DILocation(line: 250, column: 11, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !2222, file: !1974, line: 250, column: 7)
!13843 = !DILocation(line: 250, column: 7, scope: !2222)
!13844 = !DILocation(line: 254, column: 11, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13846, file: !1974, line: 254, column: 8)
!13846 = distinct !DILexicalBlock(scope: !13842, file: !1974, line: 250, column: 20)
!13847 = !DILocation(line: 254, column: 8, scope: !13846)
!13848 = !DILocation(line: 255, column: 9, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13845, file: !1974, line: 254, column: 17)
!13850 = !DILocation(line: 258, column: 9, scope: !13849)
!13851 = !DILocation(line: 261, column: 28, scope: !13849)
!13852 = !DILocation(line: 261, column: 10, scope: !13849)
!13853 = !DILocation(line: 261, column: 17, scope: !13849)
!13854 = !DILocation(line: 261, column: 26, scope: !13849)
!13855 = !DILocation(line: 262, column: 4, scope: !13849)
!13856 = !DILocation(line: 263, column: 9, scope: !13846)
!13857 = !DILocation(line: 263, column: 16, scope: !13846)
!13858 = !DILocation(line: 263, column: 28, scope: !13846)
!13859 = !DILocation(line: 264, column: 3, scope: !13846)
!13860 = !DILocation(line: 246, column: 60, scope: !2223)
!13861 = distinct !{!13861, !13836, !13862}
!13862 = !DILocation(line: 265, column: 2, scope: !2224)
!13863 = !DILocation(line: 266, column: 1, scope: !2206)
!13864 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !476, file: !476, line: 1638, type: !6263, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13865)
!13865 = !{!13866, !13867}
!13866 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13864, file: !476, line: 1638, type: !1002)
!13867 = !DILocalVariable(name: "priority", arg: 2, scope: !13864, file: !476, line: 1638, type: !152)
!13868 = !DILocation(line: 0, scope: !13864)
!13869 = !DILocation(line: 1646, column: 48, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13871, file: !476, line: 1645, column: 3)
!13871 = distinct !DILexicalBlock(scope: !13864, file: !476, line: 1640, column: 7)
!13872 = !DILocation(line: 1646, column: 32, scope: !13870)
!13873 = !DILocation(line: 1646, column: 40, scope: !13870)
!13874 = !DILocation(line: 1646, column: 5, scope: !13870)
!13875 = !DILocation(line: 1646, column: 46, scope: !13870)
!13876 = !DILocation(line: 1648, column: 1, scope: !13864)
!13877 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13795, file: !13795, line: 32, type: !3055, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!13878 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13879, file: !13879, line: 215, type: !13776, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13880)
!13879 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13880 = !{!13881}
!13881 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13878, file: !13879, line: 215, type: !2066)
!13882 = !DILocation(line: 0, scope: !13878)
!13883 = !DILocation(line: 217, column: 21, scope: !13878)
!13884 = !DILocation(line: 217, column: 34, scope: !13878)
!13885 = !DILocation(line: 221, column: 21, scope: !13878)
!13886 = !DILocation(line: 221, column: 34, scope: !13878)
!13887 = !DILocation(line: 223, column: 27, scope: !13878)
!13888 = !DILocation(line: 223, column: 33, scope: !13878)
!13889 = !DILocation(line: 224, column: 27, scope: !13878)
!13890 = !DILocation(line: 224, column: 32, scope: !13878)
!13891 = !DILocation(line: 232, column: 16, scope: !13878)
!13892 = !DILocation(line: 232, column: 30, scope: !13878)
!13893 = !DILocation(line: 239, column: 24, scope: !13878)
!13894 = !DILocation(line: 240, column: 1, scope: !13878)
!13895 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1974, file: !1974, line: 399, type: !13896, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13898)
!13896 = !DISubroutineType(types: !13897)
!13897 = !{!193}
!13898 = !{!13899}
!13899 = !DILocalVariable(name: "stack_ptr", scope: !13895, file: !1974, line: 401, type: !193)
!13900 = !DILocation(line: 404, column: 2, scope: !13895)
!13901 = !DILocation(line: 416, column: 24, scope: !13895)
!13902 = !DILocation(line: 418, column: 14, scope: !13895)
!13903 = !DILocation(line: 0, scope: !13895)
!13904 = !DILocation(line: 423, column: 2, scope: !13895)
!13905 = !DILocation(line: 424, column: 2, scope: !13895)
!13906 = !DILocation(line: 426, column: 2, scope: !13895)
!13907 = !DILocation(line: 428, column: 2, scope: !13895)
!13908 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1974, file: !1974, line: 432, type: !13909, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13911)
!13909 = !DISubroutineType(types: !13910)
!13910 = !{null, !193}
!13911 = !{!13912}
!13912 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13908, file: !1974, line: 432, type: !193)
!13913 = !DILocation(line: 0, scope: !13908)
!13914 = !DILocation(line: 435, column: 2, scope: !13908)
!13915 = !DILocation(line: 445, column: 2, scope: !13908)
!13916 = distinct !DISubprogram(name: "bg_thread_main", scope: !1974, file: !1974, line: 277, type: !683, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1970, retainedNodes: !13917)
!13917 = !{!13918, !13919, !13920}
!13918 = !DILocalVariable(name: "unused1", arg: 1, scope: !13916, file: !1974, line: 277, type: !106)
!13919 = !DILocalVariable(name: "unused2", arg: 2, scope: !13916, file: !1974, line: 277, type: !106)
!13920 = !DILocalVariable(name: "unused3", arg: 3, scope: !13916, file: !1974, line: 277, type: !106)
!13921 = !DILocation(line: 0, scope: !13916)
!13922 = !DILocation(line: 291, column: 20, scope: !13916)
!13923 = !DILocation(line: 293, column: 2, scope: !13916)
!13924 = !DILocation(line: 297, column: 2, scope: !13916)
!13925 = !DILocation(line: 305, column: 2, scope: !13916)
!13926 = !DILocation(line: 307, column: 2, scope: !13916)
!13927 = !DILocation(line: 330, column: 8, scope: !13916)
!13928 = !DILocation(line: 333, column: 34, scope: !13916)
!13929 = !DILocation(line: 339, column: 1, scope: !13916)
!13930 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2235, file: !2235, line: 45, type: !13931, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13939)
!13931 = !DISubroutineType(types: !13932)
!13932 = !{null, !13933, !106}
!13933 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !419, line: 103, baseType: !13934)
!13934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13935, size: 32)
!13935 = !DISubroutineType(types: !13936)
!13936 = !{null, !13937, !106}
!13937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13938, size: 32)
!13938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2240)
!13939 = !{!13940, !13941}
!13940 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13930, file: !2235, line: 45, type: !13933)
!13941 = !DILocalVariable(name: "user_data", arg: 2, scope: !13930, file: !2235, line: 45, type: !106)
!13942 = !DILocation(line: 0, scope: !13930)
!13943 = !DILocation(line: 71, column: 1, scope: !13930)
!13944 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2235, file: !2235, line: 73, type: !13931, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13945)
!13945 = !{!13946, !13947}
!13946 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13944, file: !2235, line: 73, type: !13933)
!13947 = !DILocalVariable(name: "user_data", arg: 2, scope: !13944, file: !2235, line: 73, type: !106)
!13948 = !DILocation(line: 0, scope: !13944)
!13949 = !DILocation(line: 95, column: 1, scope: !13944)
!13950 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2235, file: !2235, line: 97, type: !7235, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13951 = !DILocation(line: 1031, column: 3, scope: !13952, inlinedAt: !13955)
!13952 = distinct !DISubprogram(name: "__get_IPSR", scope: !6223, file: !6223, line: 1027, type: !7228, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13953)
!13953 = !{!13954}
!13954 = !DILocalVariable(name: "result", scope: !13952, file: !6223, line: 1029, type: !152)
!13955 = distinct !DILocation(line: 48, column: 10, scope: !13956, inlinedAt: !13957)
!13956 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7234, file: !7234, line: 46, type: !7235, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13957 = distinct !DILocation(line: 99, column: 9, scope: !13950)
!13958 = !{i64 2474140}
!13959 = !DILocation(line: 0, scope: !13952, inlinedAt: !13955)
!13960 = !DILocation(line: 48, column: 9, scope: !13956, inlinedAt: !13957)
!13961 = !DILocation(line: 99, column: 2, scope: !13950)
!13962 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2235, file: !2235, line: 106, type: !3055, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13963 = !DILocation(line: 108, column: 2, scope: !13962)
!13964 = !DILocation(line: 108, column: 17, scope: !13962)
!13965 = !DILocation(line: 108, column: 30, scope: !13962)
!13966 = !DILocation(line: 109, column: 1, scope: !13962)
!13967 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2235, file: !2235, line: 116, type: !3055, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13968 = !DILocation(line: 118, column: 2, scope: !13967)
!13969 = !DILocation(line: 118, column: 17, scope: !13967)
!13970 = !DILocation(line: 118, column: 30, scope: !13967)
!13971 = !DILocation(line: 119, column: 1, scope: !13967)
!13972 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2235, file: !2235, line: 126, type: !7235, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !2175)
!13973 = !DILocation(line: 128, column: 10, scope: !13972)
!13974 = !DILocation(line: 128, column: 25, scope: !13972)
!13975 = !DILocation(line: 128, column: 38, scope: !13972)
!13976 = !DILocation(line: 128, column: 53, scope: !13972)
!13977 = !DILocation(line: 128, column: 2, scope: !13972)
!13978 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2235, file: !2235, line: 187, type: !13979, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13981)
!13979 = !DISubroutineType(types: !13980)
!13980 = !{!107, !2239, !118}
!13981 = !{!13982, !13983}
!13982 = !DILocalVariable(name: "thread", arg: 1, scope: !13978, file: !2235, line: 187, type: !2239)
!13983 = !DILocalVariable(name: "value", arg: 2, scope: !13978, file: !2235, line: 187, type: !118)
!13984 = !DILocation(line: 0, scope: !13978)
!13985 = !DILocation(line: 190, column: 13, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13978, file: !2235, line: 190, column: 6)
!13987 = !DILocation(line: 190, column: 6, scope: !13978)
!13988 = !DILocation(line: 194, column: 10, scope: !13978)
!13989 = !DILocation(line: 194, column: 2, scope: !13978)
!13990 = !DILocation(line: 195, column: 2, scope: !13978)
!13991 = !DILocation(line: 195, column: 47, scope: !13978)
!13992 = !DILocation(line: 199, column: 2, scope: !13978)
!13993 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2235, file: !2235, line: 238, type: !13994, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !13996)
!13994 = !DISubroutineType(types: !13995)
!13995 = !{!118, !2239}
!13996 = !{!13997}
!13997 = !DILocalVariable(name: "thread", arg: 1, scope: !13993, file: !2235, line: 238, type: !2239)
!13998 = !DILocation(line: 0, scope: !13993)
!13999 = !DILocation(line: 241, column: 23, scope: !13993)
!14000 = !DILocation(line: 241, column: 2, scope: !13993)
!14001 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2235, file: !2235, line: 248, type: !14002, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14004)
!14002 = !DISubroutineType(types: !14003)
!14003 = !{!107, !2238, !193, !185}
!14004 = !{!14005, !14006, !14007}
!14005 = !DILocalVariable(name: "thread", arg: 1, scope: !14001, file: !2235, line: 248, type: !2238)
!14006 = !DILocalVariable(name: "buf", arg: 2, scope: !14001, file: !2235, line: 248, type: !193)
!14007 = !DILocalVariable(name: "size", arg: 3, scope: !14001, file: !2235, line: 248, type: !185)
!14008 = !DILocation(line: 0, scope: !14001)
!14009 = !DILocation(line: 251, column: 15, scope: !14001)
!14010 = !DILocation(line: 251, column: 2, scope: !14001)
!14011 = !DILocation(line: 252, column: 2, scope: !14001)
!14012 = !DILocation(line: 0, scope: !2234)
!14013 = !DILocation(line: 281, column: 11, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !2234, file: !2235, line: 281, column: 6)
!14015 = !DILocation(line: 281, column: 20, scope: !14014)
!14016 = !DILocation(line: 275, column: 45, scope: !2234)
!14017 = !DILocation(line: 285, column: 10, scope: !2234)
!14018 = !DILocation(line: 0, scope: !2358)
!14019 = !DILocation(line: 293, column: 39, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !2358, file: !2235, line: 293, column: 2)
!14021 = !DILocation(line: 293, column: 2, scope: !2358)
!14022 = !DILocation(line: 273, column: 14, scope: !2234)
!14023 = !DILocation(line: 309, column: 2, scope: !2234)
!14024 = !DILocation(line: 309, column: 11, scope: !2234)
!14025 = !DILocation(line: 311, column: 2, scope: !2234)
!14026 = !DILocation(line: 293, column: 26, scope: !14020)
!14027 = !DILocation(line: 294, column: 9, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14020, file: !2235, line: 293, column: 54)
!14029 = !DILocation(line: 295, column: 21, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14028, file: !2235, line: 295, column: 7)
!14031 = !DILocation(line: 295, column: 28, scope: !14030)
!14032 = !DILocation(line: 295, column: 7, scope: !14028)
!14033 = !DILocation(line: 299, column: 25, scope: !14028)
!14034 = !DILocation(line: 299, column: 41, scope: !14028)
!14035 = !DILocation(line: 300, column: 7, scope: !14028)
!14036 = !DILocation(line: 300, column: 26, scope: !14028)
!14037 = !DILocation(line: 299, column: 10, scope: !14028)
!14038 = !DILocation(line: 299, column: 7, scope: !14028)
!14039 = !DILocation(line: 302, column: 16, scope: !14028)
!14040 = !DILocation(line: 304, column: 20, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14028, file: !2235, line: 304, column: 7)
!14042 = !DILocation(line: 304, column: 7, scope: !14028)
!14043 = !DILocation(line: 305, column: 26, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !14041, file: !2235, line: 304, column: 26)
!14045 = !DILocation(line: 305, column: 42, scope: !14044)
!14046 = !DILocation(line: 305, column: 11, scope: !14044)
!14047 = !DILocation(line: 305, column: 8, scope: !14044)
!14048 = !DILocation(line: 306, column: 3, scope: !14044)
!14049 = !DILocation(line: 293, column: 50, scope: !14020)
!14050 = !DILocation(line: 312, column: 1, scope: !2234)
!14051 = distinct !DISubprogram(name: "copy_bytes", scope: !2235, file: !2235, line: 261, type: !14052, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14054)
!14052 = !DISubroutineType(types: !14053)
!14053 = !{!185, !193, !185, !118, !185}
!14054 = !{!14055, !14056, !14057, !14058, !14059}
!14055 = !DILocalVariable(name: "dest", arg: 1, scope: !14051, file: !2235, line: 261, type: !193)
!14056 = !DILocalVariable(name: "dest_size", arg: 2, scope: !14051, file: !2235, line: 261, type: !185)
!14057 = !DILocalVariable(name: "src", arg: 3, scope: !14051, file: !2235, line: 261, type: !118)
!14058 = !DILocalVariable(name: "src_size", arg: 4, scope: !14051, file: !2235, line: 261, type: !185)
!14059 = !DILocalVariable(name: "bytes_to_copy", scope: !14051, file: !2235, line: 263, type: !185)
!14060 = !DILocation(line: 0, scope: !14051)
!14061 = !DILocation(line: 265, column: 18, scope: !14051)
!14062 = !DILocation(line: 266, column: 2, scope: !14051)
!14063 = !DILocation(line: 268, column: 2, scope: !14051)
!14064 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2235, file: !2235, line: 383, type: !14065, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14067)
!14065 = !DISubroutineType(types: !14066)
!14066 = !{null, !2239}
!14067 = !{!14068}
!14068 = !DILocalVariable(name: "thread", arg: 1, scope: !14064, file: !2235, line: 383, type: !2239)
!14069 = !DILocation(line: 0, scope: !14064)
!14070 = !DILocation(line: 387, column: 2, scope: !14064)
!14071 = !DILocation(line: 388, column: 1, scope: !14064)
!14072 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2235, file: !2235, line: 528, type: !14073, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14080)
!14073 = !DISubroutineType(types: !14074)
!14074 = !{!193, !2239, !14075, !185, !680, !106, !106, !106, !107, !152, !118}
!14075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14076, size: 32)
!14076 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !681, line: 44, baseType: !14077)
!14077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !698, line: 47, size: 8, elements: !14078)
!14078 = !{!14079}
!14079 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14077, file: !698, line: 48, baseType: !120, size: 8)
!14080 = !{!14081, !14082, !14083, !14084, !14085, !14086, !14087, !14088, !14089, !14090, !14091}
!14081 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14072, file: !2235, line: 528, type: !2239)
!14082 = !DILocalVariable(name: "stack", arg: 2, scope: !14072, file: !2235, line: 529, type: !14075)
!14083 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14072, file: !2235, line: 529, type: !185)
!14084 = !DILocalVariable(name: "entry", arg: 4, scope: !14072, file: !2235, line: 530, type: !680)
!14085 = !DILocalVariable(name: "p1", arg: 5, scope: !14072, file: !2235, line: 531, type: !106)
!14086 = !DILocalVariable(name: "p2", arg: 6, scope: !14072, file: !2235, line: 531, type: !106)
!14087 = !DILocalVariable(name: "p3", arg: 7, scope: !14072, file: !2235, line: 531, type: !106)
!14088 = !DILocalVariable(name: "prio", arg: 8, scope: !14072, file: !2235, line: 532, type: !107)
!14089 = !DILocalVariable(name: "options", arg: 9, scope: !14072, file: !2235, line: 532, type: !152)
!14090 = !DILocalVariable(name: "name", arg: 10, scope: !14072, file: !2235, line: 532, type: !118)
!14091 = !DILocalVariable(name: "stack_ptr", scope: !14072, file: !2235, line: 534, type: !193)
!14092 = !DILocation(line: 0, scope: !14072)
!14093 = !DILocation(line: 536, column: 2, scope: !14094)
!14094 = distinct !DILexicalBlock(scope: !14095, file: !2235, line: 536, column: 2)
!14095 = distinct !DILexicalBlock(scope: !14096, file: !2235, line: 536, column: 2)
!14096 = distinct !DILexicalBlock(scope: !14072, file: !2235, line: 536, column: 2)
!14097 = !DILocation(line: 536, column: 2, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14094, file: !2235, line: 536, column: 2)
!14099 = !DILocation(line: 550, column: 28, scope: !14072)
!14100 = !DILocation(line: 550, column: 2, scope: !14072)
!14101 = !DILocation(line: 553, column: 34, scope: !14072)
!14102 = !DILocation(line: 553, column: 2, scope: !14072)
!14103 = !DILocation(line: 554, column: 14, scope: !14072)
!14104 = !DILocation(line: 564, column: 2, scope: !14072)
!14105 = !DILocation(line: 567, column: 14, scope: !14072)
!14106 = !DILocation(line: 567, column: 24, scope: !14072)
!14107 = !DILocation(line: 594, column: 11, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14072, file: !2235, line: 594, column: 6)
!14109 = !DILocation(line: 0, scope: !14108)
!14110 = !DILocation(line: 594, column: 6, scope: !14072)
!14111 = !DILocation(line: 595, column: 3, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14108, file: !2235, line: 594, column: 20)
!14113 = !DILocation(line: 598, column: 3, scope: !14112)
!14114 = !DILocation(line: 598, column: 52, scope: !14112)
!14115 = !DILocation(line: 599, column: 2, scope: !14112)
!14116 = !DILocation(line: 600, column: 23, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14108, file: !2235, line: 599, column: 9)
!14118 = !DILocation(line: 612, column: 7, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14072, file: !2235, line: 612, column: 6)
!14120 = !DILocation(line: 612, column: 6, scope: !14072)
!14121 = !DILocation(line: 627, column: 40, scope: !14072)
!14122 = !DILocation(line: 637, column: 2, scope: !14072)
!14123 = !DILocation(line: 613, column: 15, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14119, file: !2235, line: 612, column: 17)
!14125 = !DILocation(line: 613, column: 29, scope: !14124)
!14126 = !DILocation(line: 638, column: 1, scope: !14072)
!14127 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !13775, file: !13775, line: 78, type: !14128, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14130)
!14128 = !DISubroutineType(types: !14129)
!14129 = !{!145, !106}
!14130 = !{!14131}
!14131 = !DILocalVariable(name: "entry_point", arg: 1, scope: !14127, file: !13775, line: 78, type: !106)
!14132 = !DILocation(line: 0, scope: !14127)
!14133 = !DILocation(line: 80, column: 21, scope: !14127)
!14134 = !DILocation(line: 80, column: 2, scope: !14127)
!14135 = distinct !DISubprogram(name: "z_waitq_init", scope: !14136, file: !14136, line: 47, type: !14137, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14139)
!14136 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14137 = !DISubroutineType(types: !14138)
!14138 = !{null, !2270}
!14139 = !{!14140}
!14140 = !DILocalVariable(name: "w", arg: 1, scope: !14135, file: !14136, line: 47, type: !2270)
!14141 = !DILocation(line: 0, scope: !14135)
!14142 = !DILocation(line: 49, column: 21, scope: !14135)
!14143 = !DILocation(line: 49, column: 2, scope: !14135)
!14144 = !DILocation(line: 50, column: 1, scope: !14135)
!14145 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2235, file: !2235, line: 791, type: !14146, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14149)
!14146 = !DISubroutineType(types: !14147)
!14147 = !{null, !14148, !107, !152, !32}
!14148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!14149 = !{!14150, !14151, !14152, !14153}
!14150 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14145, file: !2235, line: 791, type: !14148)
!14151 = !DILocalVariable(name: "priority", arg: 2, scope: !14145, file: !2235, line: 791, type: !107)
!14152 = !DILocalVariable(name: "initial_state", arg: 3, scope: !14145, file: !2235, line: 792, type: !152)
!14153 = !DILocalVariable(name: "options", arg: 4, scope: !14145, file: !2235, line: 792, type: !32)
!14154 = !DILocation(line: 0, scope: !14145)
!14155 = !DILocation(line: 795, column: 15, scope: !14145)
!14156 = !DILocation(line: 795, column: 25, scope: !14145)
!14157 = !DILocation(line: 796, column: 30, scope: !14145)
!14158 = !DILocation(line: 796, column: 15, scope: !14145)
!14159 = !DILocation(line: 796, column: 28, scope: !14145)
!14160 = !DILocation(line: 797, column: 30, scope: !14145)
!14161 = !DILocation(line: 797, column: 15, scope: !14145)
!14162 = !DILocation(line: 797, column: 28, scope: !14145)
!14163 = !DILocation(line: 799, column: 22, scope: !14145)
!14164 = !DILocation(line: 799, column: 15, scope: !14145)
!14165 = !DILocation(line: 799, column: 20, scope: !14145)
!14166 = !DILocation(line: 801, column: 15, scope: !14145)
!14167 = !DILocation(line: 801, column: 28, scope: !14145)
!14168 = !DILocation(line: 814, column: 2, scope: !14145)
!14169 = !DILocation(line: 815, column: 1, scope: !14145)
!14170 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2235, file: !2235, line: 449, type: !14171, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14173)
!14171 = !DISubroutineType(types: !14172)
!14172 = !{!193, !2239, !14075, !185}
!14173 = !{!14174, !14175, !14176, !14177, !14178, !14179, !14180, !14181}
!14174 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14170, file: !2235, line: 449, type: !2239)
!14175 = !DILocalVariable(name: "stack", arg: 2, scope: !14170, file: !2235, line: 450, type: !14075)
!14176 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14170, file: !2235, line: 450, type: !185)
!14177 = !DILocalVariable(name: "stack_obj_size", scope: !14170, file: !2235, line: 452, type: !185)
!14178 = !DILocalVariable(name: "stack_buf_size", scope: !14170, file: !2235, line: 452, type: !185)
!14179 = !DILocalVariable(name: "stack_ptr", scope: !14170, file: !2235, line: 453, type: !193)
!14180 = !DILocalVariable(name: "stack_buf_start", scope: !14170, file: !2235, line: 453, type: !193)
!14181 = !DILocalVariable(name: "delta", scope: !14170, file: !2235, line: 454, type: !185)
!14182 = !DILocation(line: 0, scope: !14170)
!14183 = !DILocation(line: 465, column: 20, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14170, file: !2235, line: 463, column: 2)
!14185 = !DILocation(line: 466, column: 21, scope: !14184)
!14186 = !DILocation(line: 473, column: 28, scope: !14170)
!14187 = !DILocation(line: 514, column: 33, scope: !14170)
!14188 = !DILocation(line: 514, column: 25, scope: !14170)
!14189 = !DILocation(line: 514, column: 31, scope: !14170)
!14190 = !DILocation(line: 515, column: 25, scope: !14170)
!14191 = !DILocation(line: 515, column: 30, scope: !14170)
!14192 = !DILocation(line: 516, column: 25, scope: !14170)
!14193 = !DILocation(line: 516, column: 31, scope: !14170)
!14194 = !DILocation(line: 520, column: 2, scope: !14170)
!14195 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !698, file: !698, line: 331, type: !14196, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14198)
!14196 = !DISubroutineType(types: !14197)
!14197 = !{!193, !14075}
!14198 = !{!14199}
!14199 = !DILocalVariable(name: "sym", arg: 1, scope: !14195, file: !698, line: 331, type: !14075)
!14200 = !DILocation(line: 0, scope: !14195)
!14201 = !DILocation(line: 333, column: 21, scope: !14195)
!14202 = !DILocation(line: 333, column: 2, scope: !14195)
!14203 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !14204, file: !14204, line: 40, type: !14205, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14207)
!14204 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14205 = !DISubroutineType(types: !14206)
!14206 = !{null, !14148}
!14207 = !{!14208}
!14208 = !DILocalVariable(name: "thread_base", arg: 1, scope: !14203, file: !14204, line: 40, type: !14148)
!14209 = !DILocation(line: 0, scope: !14203)
!14210 = !DILocation(line: 42, column: 31, scope: !14203)
!14211 = !DILocation(line: 42, column: 2, scope: !14203)
!14212 = !DILocation(line: 43, column: 1, scope: !14203)
!14213 = distinct !DISubprogram(name: "z_init_timeout", scope: !14204, file: !14204, line: 25, type: !2296, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14214)
!14214 = !{!14215}
!14215 = !DILocalVariable(name: "to", arg: 1, scope: !14213, file: !14204, line: 25, type: !2298)
!14216 = !DILocation(line: 0, scope: !14213)
!14217 = !DILocation(line: 27, column: 22, scope: !14213)
!14218 = !DILocation(line: 27, column: 2, scope: !14213)
!14219 = !DILocation(line: 28, column: 1, scope: !14213)
!14220 = distinct !DISubprogram(name: "sys_dnode_init", scope: !332, file: !332, line: 211, type: !14221, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14223)
!14221 = !DISubroutineType(types: !14222)
!14222 = !{null, !2345}
!14223 = !{!14224}
!14224 = !DILocalVariable(name: "node", arg: 1, scope: !14220, file: !332, line: 211, type: !2345)
!14225 = !DILocation(line: 0, scope: !14220)
!14226 = !DILocation(line: 213, column: 8, scope: !14220)
!14227 = !DILocation(line: 213, column: 13, scope: !14220)
!14228 = !DILocation(line: 214, column: 8, scope: !14220)
!14229 = !DILocation(line: 214, column: 13, scope: !14220)
!14230 = !DILocation(line: 215, column: 1, scope: !14220)
!14231 = distinct !DISubprogram(name: "sys_dlist_init", scope: !332, file: !332, line: 197, type: !14232, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14235)
!14232 = !DISubroutineType(types: !14233)
!14233 = !{null, !14234}
!14234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!14235 = !{!14236}
!14236 = !DILocalVariable(name: "list", arg: 1, scope: !14231, file: !332, line: 197, type: !14234)
!14237 = !DILocation(line: 0, scope: !14231)
!14238 = !DILocation(line: 199, column: 8, scope: !14231)
!14239 = !DILocation(line: 199, column: 13, scope: !14231)
!14240 = !DILocation(line: 200, column: 8, scope: !14231)
!14241 = !DILocation(line: 200, column: 13, scope: !14231)
!14242 = !DILocation(line: 201, column: 1, scope: !14231)
!14243 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2235, file: !2235, line: 641, type: !14244, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14250)
!14244 = !DISubroutineType(types: !14245)
!14245 = !{!2238, !2239, !14075, !185, !680, !106, !106, !106, !107, !152, !14246}
!14246 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !686, line: 67, baseType: !14247)
!14247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 65, size: 64, elements: !14248)
!14248 = !{!14249}
!14249 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14247, file: !686, line: 66, baseType: !685, size: 64)
!14250 = !{!14251, !14252, !14253, !14254, !14255, !14256, !14257, !14258, !14259, !14260}
!14251 = !DILocalVariable(name: "new_thread", arg: 1, scope: !14243, file: !2235, line: 641, type: !2239)
!14252 = !DILocalVariable(name: "stack", arg: 2, scope: !14243, file: !2235, line: 642, type: !14075)
!14253 = !DILocalVariable(name: "stack_size", arg: 3, scope: !14243, file: !2235, line: 643, type: !185)
!14254 = !DILocalVariable(name: "entry", arg: 4, scope: !14243, file: !2235, line: 643, type: !680)
!14255 = !DILocalVariable(name: "p1", arg: 5, scope: !14243, file: !2235, line: 644, type: !106)
!14256 = !DILocalVariable(name: "p2", arg: 6, scope: !14243, file: !2235, line: 644, type: !106)
!14257 = !DILocalVariable(name: "p3", arg: 7, scope: !14243, file: !2235, line: 644, type: !106)
!14258 = !DILocalVariable(name: "prio", arg: 8, scope: !14243, file: !2235, line: 645, type: !107)
!14259 = !DILocalVariable(name: "options", arg: 9, scope: !14243, file: !2235, line: 645, type: !152)
!14260 = !DILocalVariable(name: "delay", arg: 10, scope: !14243, file: !2235, line: 645, type: !14246)
!14261 = !DILocation(line: 0, scope: !14243)
!14262 = !DILocation(line: 1031, column: 3, scope: !13952, inlinedAt: !14263)
!14263 = distinct !DILocation(line: 48, column: 10, scope: !13956, inlinedAt: !14264)
!14264 = distinct !DILocation(line: 647, column: 2, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14266, file: !2235, line: 647, column: 2)
!14266 = distinct !DILexicalBlock(scope: !14243, file: !2235, line: 647, column: 2)
!14267 = !DILocation(line: 0, scope: !13952, inlinedAt: !14263)
!14268 = !DILocation(line: 48, column: 9, scope: !13956, inlinedAt: !14264)
!14269 = !DILocation(line: 647, column: 2, scope: !14266)
!14270 = !DILocation(line: 647, column: 2, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14265, file: !2235, line: 647, column: 2)
!14272 = !DILocation(line: 649, column: 2, scope: !14243)
!14273 = !DILocation(line: 652, column: 7, scope: !14274)
!14274 = distinct !DILexicalBlock(scope: !14243, file: !2235, line: 652, column: 6)
!14275 = !DILocation(line: 652, column: 6, scope: !14243)
!14276 = !DILocation(line: 653, column: 3, scope: !14277)
!14277 = distinct !DILexicalBlock(scope: !14274, file: !2235, line: 652, column: 39)
!14278 = !DILocation(line: 654, column: 2, scope: !14277)
!14279 = !DILocation(line: 656, column: 2, scope: !14243)
!14280 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2235, file: !2235, line: 401, type: !14281, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14283)
!14281 = !DISubroutineType(types: !14282)
!14282 = !{null, !2239, !14246}
!14283 = !{!14284, !14285}
!14284 = !DILocalVariable(name: "thread", arg: 1, scope: !14280, file: !2235, line: 401, type: !2239)
!14285 = !DILocalVariable(name: "delay", arg: 2, scope: !14280, file: !2235, line: 401, type: !14246)
!14286 = !DILocation(line: 0, scope: !14280)
!14287 = !DILocation(line: 404, column: 6, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14280, file: !2235, line: 404, column: 6)
!14289 = !DILocation(line: 404, column: 6, scope: !14280)
!14290 = !DILocation(line: 405, column: 3, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14288, file: !2235, line: 404, column: 38)
!14292 = !DILocation(line: 406, column: 2, scope: !14291)
!14293 = !DILocation(line: 407, column: 3, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14288, file: !2235, line: 406, column: 9)
!14295 = !DILocation(line: 413, column: 1, scope: !14280)
!14296 = distinct !DISubprogram(name: "k_thread_start", scope: !4386, file: !4386, line: 205, type: !14297, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14299)
!14297 = !DISubroutineType(types: !14298)
!14298 = !{null, !2238}
!14299 = !{!14300}
!14300 = !DILocalVariable(name: "thread", arg: 1, scope: !14296, file: !4386, line: 205, type: !2238)
!14301 = !DILocation(line: 0, scope: !14296)
!14302 = !DILocation(line: 214, column: 2, scope: !14303)
!14303 = distinct !DILexicalBlock(scope: !14296, file: !4386, line: 214, column: 2)
!14304 = !{i64 2152250524}
!14305 = !DILocation(line: 215, column: 2, scope: !14296)
!14306 = !DILocation(line: 216, column: 1, scope: !14296)
!14307 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14204, file: !14204, line: 47, type: !14281, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14308)
!14308 = !{!14309, !14310}
!14309 = !DILocalVariable(name: "thread", arg: 1, scope: !14307, file: !14204, line: 47, type: !2239)
!14310 = !DILocalVariable(name: "ticks", arg: 2, scope: !14307, file: !14204, line: 47, type: !14246)
!14311 = !DILocation(line: 0, scope: !14307)
!14312 = !DILocation(line: 49, column: 30, scope: !14307)
!14313 = !DILocation(line: 49, column: 2, scope: !14307)
!14314 = !DILocation(line: 50, column: 1, scope: !14307)
!14315 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2235, file: !2235, line: 748, type: !3055, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14316)
!14316 = !{!14317, !14335}
!14317 = !DILocalVariable(name: "thread_data", scope: !14318, file: !2235, line: 750, type: !14319)
!14318 = distinct !DILexicalBlock(scope: !14315, file: !2235, line: 750, column: 2)
!14319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14320, size: 32)
!14320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !419, line: 620, size: 384, elements: !14321)
!14321 = !{!14322, !14323, !14324, !14325, !14326, !14327, !14328, !14329, !14330, !14331, !14332, !14334}
!14322 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !14320, file: !419, line: 621, baseType: !2239, size: 32)
!14323 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !14320, file: !419, line: 622, baseType: !14075, size: 32, offset: 32)
!14324 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !14320, file: !419, line: 623, baseType: !32, size: 32, offset: 64)
!14325 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !14320, file: !419, line: 624, baseType: !680, size: 32, offset: 96)
!14326 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !14320, file: !419, line: 625, baseType: !106, size: 32, offset: 128)
!14327 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !14320, file: !419, line: 626, baseType: !106, size: 32, offset: 160)
!14328 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !14320, file: !419, line: 627, baseType: !106, size: 32, offset: 192)
!14329 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !14320, file: !419, line: 628, baseType: !107, size: 32, offset: 224)
!14330 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !14320, file: !419, line: 629, baseType: !152, size: 32, offset: 256)
!14331 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !14320, file: !419, line: 630, baseType: !984, size: 32, offset: 288)
!14332 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !14320, file: !419, line: 631, baseType: !14333, size: 32, offset: 320)
!14333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 32)
!14334 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !14320, file: !419, line: 632, baseType: !118, size: 32, offset: 352)
!14335 = !DILocalVariable(name: "thread_data", scope: !14336, file: !2235, line: 781, type: !14319)
!14336 = distinct !DILexicalBlock(scope: !14315, file: !2235, line: 781, column: 2)
!14337 = !DILocation(line: 0, scope: !14318)
!14338 = !DILocation(line: 750, column: 2, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14340, file: !2235, line: 750, column: 2)
!14340 = distinct !DILexicalBlock(scope: !14341, file: !2235, line: 750, column: 2)
!14341 = distinct !DILexicalBlock(scope: !14318, file: !2235, line: 750, column: 2)
!14342 = !DILocation(line: 750, column: 2, scope: !14343)
!14343 = distinct !DILexicalBlock(scope: !14344, file: !2235, line: 750, column: 2)
!14344 = distinct !DILexicalBlock(scope: !14339, file: !2235, line: 750, column: 2)
!14345 = !DILocation(line: 750, column: 2, scope: !14340)
!14346 = !DILocation(line: 750, column: 2, scope: !14318)
!14347 = !DILocation(line: 780, column: 2, scope: !14315)
!14348 = !DILocation(line: 0, scope: !14336)
!14349 = !DILocation(line: 781, column: 2, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14351, file: !2235, line: 781, column: 2)
!14351 = distinct !DILexicalBlock(scope: !14352, file: !2235, line: 781, column: 2)
!14352 = distinct !DILexicalBlock(scope: !14336, file: !2235, line: 781, column: 2)
!14353 = !DILocation(line: 752, column: 17, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14341, file: !2235, line: 750, column: 38)
!14355 = !DILocation(line: 753, column: 17, scope: !14354)
!14356 = !DILocation(line: 754, column: 17, scope: !14354)
!14357 = !DILocation(line: 755, column: 17, scope: !14354)
!14358 = !DILocation(line: 756, column: 17, scope: !14354)
!14359 = !DILocation(line: 757, column: 17, scope: !14354)
!14360 = !DILocation(line: 758, column: 17, scope: !14354)
!14361 = !DILocation(line: 759, column: 17, scope: !14354)
!14362 = !DILocation(line: 760, column: 17, scope: !14354)
!14363 = !DILocation(line: 761, column: 17, scope: !14354)
!14364 = !DILocation(line: 751, column: 3, scope: !14354)
!14365 = !DILocation(line: 763, column: 16, scope: !14354)
!14366 = !DILocation(line: 763, column: 29, scope: !14354)
!14367 = !DILocation(line: 763, column: 39, scope: !14354)
!14368 = !DILocation(line: 750, column: 2, scope: !14341)
!14369 = !DILocation(line: 750, column: 2, scope: !14344)
!14370 = distinct !{!14370, !14346, !14371}
!14371 = !DILocation(line: 764, column: 2, scope: !14318)
!14372 = !DILocation(line: 781, column: 2, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14374, file: !2235, line: 781, column: 2)
!14374 = distinct !DILexicalBlock(scope: !14350, file: !2235, line: 781, column: 2)
!14375 = !DILocation(line: 781, column: 2, scope: !14351)
!14376 = !DILocation(line: 781, column: 2, scope: !14336)
!14377 = !DILocation(line: 787, column: 2, scope: !14315)
!14378 = !DILocation(line: 788, column: 1, scope: !14315)
!14379 = !DILocation(line: 782, column: 20, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14381, file: !2235, line: 782, column: 7)
!14381 = distinct !DILexicalBlock(scope: !14352, file: !2235, line: 781, column: 38)
!14382 = !DILocation(line: 782, column: 31, scope: !14380)
!14383 = !DILocation(line: 782, column: 7, scope: !14381)
!14384 = !DILocation(line: 783, column: 37, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14380, file: !2235, line: 782, column: 51)
!14386 = !DILocation(line: 784, column: 10, scope: !14385)
!14387 = !DILocation(line: 783, column: 4, scope: !14385)
!14388 = !DILocation(line: 785, column: 3, scope: !14385)
!14389 = !DILocation(line: 781, column: 2, scope: !14352)
!14390 = !DILocation(line: 781, column: 2, scope: !14374)
!14391 = distinct !{!14391, !14376, !14392}
!14392 = !DILocation(line: 786, column: 2, scope: !14336)
!14393 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !8798, file: !8798, line: 403, type: !14394, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14396)
!14394 = !DISubroutineType(types: !14395)
!14395 = !{!687, !687}
!14396 = !{!14397}
!14397 = !DILocalVariable(name: "t", arg: 1, scope: !14393, file: !8798, line: 403, type: !687)
!14398 = !DILocation(line: 0, scope: !14393)
!14399 = !DILocalVariable(name: "t", arg: 1, scope: !14400, file: !8798, line: 102, type: !687)
!14400 = distinct !DISubprogram(name: "z_tmcvt", scope: !8798, file: !8798, line: 102, type: !8805, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14401)
!14401 = !{!14399, !14402, !14403, !14404, !14405, !14406, !14407, !14408, !14409, !14410, !14411}
!14402 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14400, file: !8798, line: 102, type: !152)
!14403 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14400, file: !8798, line: 103, type: !152)
!14404 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14400, file: !8798, line: 103, type: !145)
!14405 = !DILocalVariable(name: "result32", arg: 5, scope: !14400, file: !8798, line: 104, type: !145)
!14406 = !DILocalVariable(name: "round_up", arg: 6, scope: !14400, file: !8798, line: 104, type: !145)
!14407 = !DILocalVariable(name: "round_off", arg: 7, scope: !14400, file: !8798, line: 105, type: !145)
!14408 = !DILocalVariable(name: "mul_ratio", scope: !14400, file: !8798, line: 107, type: !145)
!14409 = !DILocalVariable(name: "div_ratio", scope: !14400, file: !8798, line: 109, type: !145)
!14410 = !DILocalVariable(name: "off", scope: !14400, file: !8798, line: 116, type: !687)
!14411 = !DILocalVariable(name: "rdivisor", scope: !14412, file: !8798, line: 119, type: !152)
!14412 = distinct !DILexicalBlock(scope: !14413, file: !8798, line: 118, column: 18)
!14413 = distinct !DILexicalBlock(scope: !14400, file: !8798, line: 118, column: 6)
!14414 = !DILocation(line: 0, scope: !14400, inlinedAt: !14415)
!14415 = distinct !DILocation(line: 406, column: 9, scope: !14393)
!14416 = !DILocation(line: 145, column: 13, scope: !14417, inlinedAt: !14415)
!14417 = distinct !DILexicalBlock(scope: !14418, file: !8798, line: 144, column: 10)
!14418 = distinct !DILexicalBlock(scope: !14419, file: !8798, line: 142, column: 7)
!14419 = distinct !DILexicalBlock(scope: !14420, file: !8798, line: 141, column: 24)
!14420 = distinct !DILexicalBlock(scope: !14421, file: !8798, line: 141, column: 13)
!14421 = distinct !DILexicalBlock(scope: !14400, file: !8798, line: 134, column: 6)
!14422 = !DILocation(line: 406, column: 2, scope: !14393)
!14423 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2235, file: !2235, line: 817, type: !4264, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14424)
!14424 = !{!14425, !14426, !14427, !14428}
!14425 = !DILocalVariable(name: "entry", arg: 1, scope: !14423, file: !2235, line: 817, type: !680)
!14426 = !DILocalVariable(name: "p1", arg: 2, scope: !14423, file: !2235, line: 818, type: !106)
!14427 = !DILocalVariable(name: "p2", arg: 3, scope: !14423, file: !2235, line: 818, type: !106)
!14428 = !DILocalVariable(name: "p3", arg: 4, scope: !14423, file: !2235, line: 818, type: !106)
!14429 = !DILocation(line: 0, scope: !14423)
!14430 = !DILocation(line: 822, column: 2, scope: !14423)
!14431 = !DILocation(line: 822, column: 17, scope: !14423)
!14432 = !DILocation(line: 822, column: 30, scope: !14423)
!14433 = !DILocation(line: 823, column: 2, scope: !14423)
!14434 = !DILocation(line: 845, column: 2, scope: !14423)
!14435 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2235, file: !2235, line: 853, type: !14436, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14439)
!14436 = !DISubroutineType(types: !14437)
!14437 = !{!145, !14438}
!14438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 32)
!14439 = !{!14440, !14441}
!14440 = !DILocalVariable(name: "l", arg: 1, scope: !14435, file: !2235, line: 853, type: !14438)
!14441 = !DILocalVariable(name: "thread_cpu", scope: !14435, file: !2235, line: 855, type: !22)
!14442 = !DILocation(line: 0, scope: !14435)
!14443 = !DILocation(line: 855, column: 28, scope: !14435)
!14444 = !DILocation(line: 857, column: 17, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14435, file: !2235, line: 857, column: 6)
!14446 = !DILocation(line: 857, column: 6, scope: !14435)
!14447 = !DILocation(line: 858, column: 19, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14449, file: !2235, line: 858, column: 7)
!14449 = distinct !DILexicalBlock(scope: !14445, file: !2235, line: 857, column: 24)
!14450 = !DILocation(line: 858, column: 42, scope: !14448)
!14451 = !DILocation(line: 858, column: 28, scope: !14448)
!14452 = !DILocation(line: 858, column: 25, scope: !14448)
!14453 = !DILocation(line: 858, column: 7, scope: !14449)
!14454 = !DILocation(line: 862, column: 2, scope: !14435)
!14455 = !DILocation(line: 863, column: 1, scope: !14435)
!14456 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2235, file: !2235, line: 865, type: !14436, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14457)
!14457 = !{!14458}
!14458 = !DILocalVariable(name: "l", arg: 1, scope: !14456, file: !2235, line: 865, type: !14438)
!14459 = !DILocation(line: 0, scope: !14456)
!14460 = !DILocation(line: 867, column: 9, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14456, file: !2235, line: 867, column: 6)
!14462 = !DILocation(line: 867, column: 38, scope: !14461)
!14463 = !DILocation(line: 867, column: 24, scope: !14461)
!14464 = !DILocation(line: 867, column: 54, scope: !14461)
!14465 = !DILocation(line: 867, column: 43, scope: !14461)
!14466 = !DILocation(line: 867, column: 41, scope: !14461)
!14467 = !DILocation(line: 867, column: 20, scope: !14461)
!14468 = !DILocation(line: 867, column: 6, scope: !14456)
!14469 = !DILocation(line: 870, column: 16, scope: !14456)
!14470 = !DILocation(line: 871, column: 2, scope: !14456)
!14471 = !DILocation(line: 872, column: 1, scope: !14456)
!14472 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2235, file: !2235, line: 874, type: !14473, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14475)
!14473 = !DISubroutineType(types: !14474)
!14474 = !{null, !14438}
!14475 = !{!14476}
!14476 = !DILocalVariable(name: "l", arg: 1, scope: !14472, file: !2235, line: 874, type: !14438)
!14477 = !DILocation(line: 0, scope: !14472)
!14478 = !DILocation(line: 876, column: 32, scope: !14472)
!14479 = !DILocation(line: 876, column: 18, scope: !14472)
!14480 = !DILocation(line: 876, column: 48, scope: !14472)
!14481 = !DILocation(line: 876, column: 37, scope: !14472)
!14482 = !DILocation(line: 876, column: 35, scope: !14472)
!14483 = !DILocation(line: 876, column: 5, scope: !14472)
!14484 = !DILocation(line: 876, column: 16, scope: !14472)
!14485 = !DILocation(line: 877, column: 1, scope: !14472)
!14486 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2235, file: !2235, line: 888, type: !14487, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14489)
!14487 = !DISubroutineType(types: !14488)
!14488 = !{!107, !2239}
!14489 = !{!14490}
!14490 = !DILocalVariable(name: "thread", arg: 1, scope: !14486, file: !2235, line: 888, type: !2239)
!14491 = !DILocation(line: 0, scope: !14486)
!14492 = !DILocation(line: 893, column: 2, scope: !14486)
!14493 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2235, file: !2235, line: 897, type: !14494, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14496)
!14494 = !DISubroutineType(types: !14495)
!14495 = !{!107, !2239, !32}
!14496 = !{!14497, !14498}
!14497 = !DILocalVariable(name: "thread", arg: 1, scope: !14493, file: !2235, line: 897, type: !2239)
!14498 = !DILocalVariable(name: "options", arg: 2, scope: !14493, file: !2235, line: 897, type: !32)
!14499 = !DILocation(line: 0, scope: !14493)
!14500 = !DILocation(line: 902, column: 2, scope: !14493)
!14501 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2235, file: !2235, line: 1072, type: !14502, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14507)
!14502 = !DISubroutineType(types: !14503)
!14503 = !{!107, !2238, !14504}
!14504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14505, size: 32)
!14505 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !322, line: 234, baseType: !14506)
!14506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !322, line: 192, elements: !2175)
!14507 = !{!14508, !14509}
!14508 = !DILocalVariable(name: "thread", arg: 1, scope: !14501, file: !2235, line: 1072, type: !2238)
!14509 = !DILocalVariable(name: "stats", arg: 2, scope: !14501, file: !2235, line: 1073, type: !14504)
!14510 = !DILocation(line: 0, scope: !14501)
!14511 = !DILocation(line: 1075, column: 14, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14501, file: !2235, line: 1075, column: 6)
!14513 = !DILocation(line: 1075, column: 23, scope: !14512)
!14514 = !DILocation(line: 1086, column: 1, scope: !14501)
!14515 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2235, file: !2235, line: 1088, type: !14516, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2342, retainedNodes: !14518)
!14516 = !DISubroutineType(types: !14517)
!14517 = !{!107, !14504}
!14518 = !{!14519}
!14519 = !DILocalVariable(name: "stats", arg: 1, scope: !14515, file: !2235, line: 1088, type: !14504)
!14520 = !DILocation(line: 0, scope: !14515)
!14521 = !DILocation(line: 1094, column: 12, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14515, file: !2235, line: 1094, column: 6)
!14523 = !DILocation(line: 1120, column: 1, scope: !14515)
!14524 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !14525, file: !14525, line: 20, type: !3055, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2175)
!14525 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14526 = !DILocation(line: 30, column: 2, scope: !14524)
!14527 = !DILocation(line: 31, column: 1, scope: !14524)
!14528 = distinct !DISubprogram(name: "idle", scope: !14525, file: !14525, line: 33, type: !683, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !14529)
!14529 = !{!14530, !14531, !14532}
!14530 = !DILocalVariable(name: "unused1", arg: 1, scope: !14528, file: !14525, line: 33, type: !106)
!14531 = !DILocalVariable(name: "unused2", arg: 2, scope: !14528, file: !14525, line: 33, type: !106)
!14532 = !DILocalVariable(name: "unused3", arg: 3, scope: !14528, file: !14525, line: 33, type: !106)
!14533 = !DILocation(line: 0, scope: !14528)
!14534 = !DILocation(line: 39, column: 2, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14536, file: !14525, line: 39, column: 2)
!14536 = distinct !DILexicalBlock(scope: !14528, file: !14525, line: 39, column: 2)
!14537 = !DILocation(line: 39, column: 2, scope: !14536)
!14538 = !DILocation(line: 39, column: 2, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14535, file: !14525, line: 39, column: 2)
!14540 = !DILocation(line: 55, column: 2, scope: !14541, inlinedAt: !14545)
!14541 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5887, file: !5887, line: 42, type: !5888, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !14542)
!14542 = !{!14543, !14544}
!14543 = !DILocalVariable(name: "key", scope: !14541, file: !5887, line: 44, type: !32)
!14544 = !DILocalVariable(name: "tmp", scope: !14541, file: !5887, line: 53, type: !32)
!14545 = distinct !DILocation(line: 62, column: 10, scope: !14546)
!14546 = distinct !DILexicalBlock(scope: !14528, file: !14525, line: 41, column: 15)
!14547 = !{i64 1653391}
!14548 = !DILocation(line: 0, scope: !14541, inlinedAt: !14545)
!14549 = !DILocation(line: 86, column: 3, scope: !14546)
!14550 = !DILocation(line: 41, column: 2, scope: !14528)
!14551 = distinct !{!14551, !14550, !14552}
!14552 = !DILocation(line: 105, column: 2, scope: !14528)
!14553 = distinct !DISubprogram(name: "k_cpu_idle", scope: !419, file: !419, line: 5627, type: !3055, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3036, retainedNodes: !2175)
!14554 = !DILocation(line: 5629, column: 2, scope: !14553)
!14555 = !DILocation(line: 5630, column: 1, scope: !14553)
!14556 = !DISubprogram(name: "arch_cpu_idle", scope: !681, file: !681, line: 167, type: !3055, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!14557 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2473, file: !2473, line: 93, type: !14558, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14560)
!14558 = !DISubroutineType(types: !14559)
!14559 = !{!984, !2365, !2365}
!14560 = !{!14561, !14562, !14563, !14564}
!14561 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14557, file: !2473, line: 93, type: !2365)
!14562 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14557, file: !2473, line: 94, type: !2365)
!14563 = !DILocalVariable(name: "b1", scope: !14557, file: !2473, line: 97, type: !984)
!14564 = !DILocalVariable(name: "b2", scope: !14557, file: !2473, line: 98, type: !984)
!14565 = !DILocation(line: 0, scope: !14557)
!14566 = !DILocation(line: 97, column: 30, scope: !14557)
!14567 = !DILocation(line: 98, column: 30, scope: !14557)
!14568 = !DILocation(line: 100, column: 9, scope: !14569)
!14569 = distinct !DILexicalBlock(scope: !14557, file: !2473, line: 100, column: 6)
!14570 = !DILocation(line: 100, column: 6, scope: !14557)
!14571 = !DILocation(line: 125, column: 1, scope: !14557)
!14572 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2473, file: !2473, line: 428, type: !14573, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14575)
!14573 = !DISubroutineType(types: !14574)
!14574 = !{null, !2365}
!14575 = !{!14576}
!14576 = !DILocalVariable(name: "curr", arg: 1, scope: !14572, file: !2473, line: 428, type: !2365)
!14577 = !DILocation(line: 0, scope: !14572)
!14578 = !DILocation(line: 434, column: 6, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14572, file: !2473, line: 434, column: 6)
!14580 = !DILocation(line: 434, column: 23, scope: !14579)
!14581 = !DILocation(line: 434, column: 6, scope: !14572)
!14582 = !DILocation(line: 435, column: 50, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14579, file: !2473, line: 434, column: 29)
!14584 = !DILocation(line: 435, column: 48, scope: !14583)
!14585 = !DILocation(line: 435, column: 29, scope: !14583)
!14586 = !DILocation(line: 436, column: 24, scope: !14583)
!14587 = !DILocation(line: 436, column: 3, scope: !14583)
!14588 = !DILocation(line: 437, column: 2, scope: !14583)
!14589 = !DILocation(line: 438, column: 1, scope: !14572)
!14590 = distinct !DISubprogram(name: "slice_time", scope: !2473, file: !2473, line: 407, type: !14591, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14593)
!14591 = !DISubroutineType(types: !14592)
!14592 = !{!107, !2365}
!14593 = !{!14594, !14595}
!14594 = !DILocalVariable(name: "curr", arg: 1, scope: !14590, file: !2473, line: 407, type: !2365)
!14595 = !DILocalVariable(name: "ret", scope: !14590, file: !2473, line: 409, type: !107)
!14596 = !DILocation(line: 0, scope: !14590)
!14597 = !DILocation(line: 409, column: 12, scope: !14590)
!14598 = !DILocation(line: 416, column: 2, scope: !14590)
!14599 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2473, file: !2473, line: 440, type: !14600, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14602)
!14600 = !DISubroutineType(types: !14601)
!14601 = !{null, !984, !107}
!14602 = !{!14603, !14604, !14605, !14611}
!14603 = !DILocalVariable(name: "slice", arg: 1, scope: !14599, file: !2473, line: 440, type: !984)
!14604 = !DILocalVariable(name: "prio", arg: 2, scope: !14599, file: !2473, line: 440, type: !107)
!14605 = !DILocalVariable(name: "__i", scope: !14606, file: !2473, line: 442, type: !14607)
!14606 = distinct !DILexicalBlock(scope: !14599, file: !2473, line: 442, column: 2)
!14607 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !433, line: 106, baseType: !14608)
!14608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !433, line: 32, size: 32, elements: !14609)
!14609 = !{!14610}
!14610 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14608, file: !433, line: 33, baseType: !107, size: 32)
!14611 = !DILocalVariable(name: "__key", scope: !14606, file: !2473, line: 442, type: !14607)
!14612 = !DILocation(line: 0, scope: !14599)
!14613 = !DILocation(line: 0, scope: !14606)
!14614 = !DILocalVariable(name: "l", arg: 1, scope: !14615, file: !433, line: 136, type: !14618)
!14615 = distinct !DISubprogram(name: "k_spin_lock", scope: !433, file: !433, line: 136, type: !14616, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14619)
!14616 = !DISubroutineType(types: !14617)
!14617 = !{!14607, !14618}
!14618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!14619 = !{!14614, !14620}
!14620 = !DILocalVariable(name: "k", scope: !14615, file: !433, line: 139, type: !14607)
!14621 = !DILocation(line: 0, scope: !14615, inlinedAt: !14622)
!14622 = distinct !DILocation(line: 442, column: 2, scope: !14606)
!14623 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !14628)
!14624 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5887, file: !5887, line: 42, type: !5888, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14625)
!14625 = !{!14626, !14627}
!14626 = !DILocalVariable(name: "key", scope: !14624, file: !5887, line: 44, type: !32)
!14627 = !DILocalVariable(name: "tmp", scope: !14624, file: !5887, line: 53, type: !32)
!14628 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !14622)
!14629 = !{i64 1697362}
!14630 = !DILocation(line: 0, scope: !14624, inlinedAt: !14628)
!14631 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !14622)
!14632 = distinct !DILexicalBlock(scope: !14633, file: !433, line: 148, column: 2)
!14633 = distinct !DILexicalBlock(scope: !14615, file: !433, line: 148, column: 2)
!14634 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !14622)
!14635 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !14622)
!14636 = distinct !DILexicalBlock(scope: !14632, file: !433, line: 148, column: 2)
!14637 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !14622)
!14638 = !DILocation(line: 443, column: 29, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14640, file: !2473, line: 442, column: 26)
!14640 = distinct !DILexicalBlock(scope: !14606, file: !2473, line: 442, column: 2)
!14641 = !DILocation(line: 444, column: 17, scope: !14639)
!14642 = !DILocation(line: 445, column: 51, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14639, file: !2473, line: 445, column: 7)
!14644 = !DILocation(line: 445, column: 7, scope: !14639)
!14645 = !DILocation(line: 0, scope: !14639)
!14646 = !DILocation(line: 451, column: 18, scope: !14639)
!14647 = !DILocation(line: 452, column: 3, scope: !14639)
!14648 = !DILocalVariable(name: "key", arg: 2, scope: !14649, file: !433, line: 190, type: !14607)
!14649 = distinct !DISubprogram(name: "k_spin_unlock", scope: !433, file: !433, line: 189, type: !14650, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14652)
!14650 = !DISubroutineType(types: !14651)
!14651 = !{null, !14618, !14607}
!14652 = !{!14653, !14648}
!14653 = !DILocalVariable(name: "l", arg: 1, scope: !14649, file: !433, line: 189, type: !14618)
!14654 = !DILocation(line: 0, scope: !14649, inlinedAt: !14655)
!14655 = distinct !DILocation(line: 442, column: 2, scope: !14640)
!14656 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !14655)
!14657 = distinct !DILexicalBlock(scope: !14658, file: !433, line: 194, column: 2)
!14658 = distinct !DILexicalBlock(scope: !14649, file: !433, line: 194, column: 2)
!14659 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !14655)
!14660 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !14655)
!14661 = distinct !DILexicalBlock(scope: !14657, file: !433, line: 194, column: 2)
!14662 = !DILocalVariable(name: "key", arg: 1, scope: !14663, file: !5887, line: 84, type: !32)
!14663 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5887, file: !5887, line: 84, type: !5898, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14664)
!14664 = !{!14662}
!14665 = !DILocation(line: 0, scope: !14663, inlinedAt: !14666)
!14666 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !14655)
!14667 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !14666)
!14668 = !{i64 1698179}
!14669 = !DILocation(line: 454, column: 1, scope: !14599)
!14670 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !8798, file: !8798, line: 389, type: !7469, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14671)
!14671 = !{!14672}
!14672 = !DILocalVariable(name: "t", arg: 1, scope: !14670, file: !8798, line: 389, type: !152)
!14673 = !DILocation(line: 0, scope: !14670)
!14674 = !DILocalVariable(name: "t", arg: 1, scope: !14675, file: !8798, line: 102, type: !687)
!14675 = distinct !DISubprogram(name: "z_tmcvt", scope: !8798, file: !8798, line: 102, type: !8805, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14676)
!14676 = !{!14674, !14677, !14678, !14679, !14680, !14681, !14682, !14683, !14684, !14685, !14686}
!14677 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14675, file: !8798, line: 102, type: !152)
!14678 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14675, file: !8798, line: 103, type: !152)
!14679 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14675, file: !8798, line: 103, type: !145)
!14680 = !DILocalVariable(name: "result32", arg: 5, scope: !14675, file: !8798, line: 104, type: !145)
!14681 = !DILocalVariable(name: "round_up", arg: 6, scope: !14675, file: !8798, line: 104, type: !145)
!14682 = !DILocalVariable(name: "round_off", arg: 7, scope: !14675, file: !8798, line: 105, type: !145)
!14683 = !DILocalVariable(name: "mul_ratio", scope: !14675, file: !8798, line: 107, type: !145)
!14684 = !DILocalVariable(name: "div_ratio", scope: !14675, file: !8798, line: 109, type: !145)
!14685 = !DILocalVariable(name: "off", scope: !14675, file: !8798, line: 116, type: !687)
!14686 = !DILocalVariable(name: "rdivisor", scope: !14687, file: !8798, line: 119, type: !152)
!14687 = distinct !DILexicalBlock(scope: !14688, file: !8798, line: 118, column: 18)
!14688 = distinct !DILexicalBlock(scope: !14675, file: !8798, line: 118, column: 6)
!14689 = !DILocation(line: 0, scope: !14675, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 392, column: 9, scope: !14670)
!14691 = !DILocation(line: 143, column: 25, scope: !14692, inlinedAt: !14690)
!14692 = distinct !DILexicalBlock(scope: !14693, file: !8798, line: 142, column: 17)
!14693 = distinct !DILexicalBlock(scope: !14694, file: !8798, line: 142, column: 7)
!14694 = distinct !DILexicalBlock(scope: !14695, file: !8798, line: 141, column: 24)
!14695 = distinct !DILexicalBlock(scope: !14696, file: !8798, line: 141, column: 13)
!14696 = distinct !DILexicalBlock(scope: !14675, file: !8798, line: 134, column: 6)
!14697 = !DILocation(line: 392, column: 2, scope: !14670)
!14698 = distinct !DISubprogram(name: "z_time_slice", scope: !2473, file: !2473, line: 502, type: !9244, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14699)
!14699 = !{!14700, !14701}
!14700 = !DILocalVariable(name: "ticks", arg: 1, scope: !14698, file: !2473, line: 502, type: !107)
!14701 = !DILocalVariable(name: "key", scope: !14698, file: !2473, line: 511, type: !14607)
!14702 = !DILocation(line: 0, scope: !14698)
!14703 = !DILocation(line: 0, scope: !14615, inlinedAt: !14704)
!14704 = distinct !DILocation(line: 511, column: 25, scope: !14698)
!14705 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !14706)
!14706 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !14704)
!14707 = !DILocation(line: 0, scope: !14624, inlinedAt: !14706)
!14708 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !14704)
!14709 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !14704)
!14710 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !14704)
!14711 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !14704)
!14712 = !DILocation(line: 514, column: 6, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14698, file: !2473, line: 514, column: 6)
!14714 = !DILocation(line: 514, column: 25, scope: !14713)
!14715 = !DILocation(line: 514, column: 22, scope: !14713)
!14716 = !DILocation(line: 514, column: 6, scope: !14698)
!14717 = !DILocation(line: 515, column: 3, scope: !14718)
!14718 = distinct !DILexicalBlock(scope: !14713, file: !2473, line: 514, column: 35)
!14719 = !DILocation(line: 0, scope: !14649, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 516, column: 3, scope: !14718)
!14721 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !14720)
!14722 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !14720)
!14723 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !14720)
!14724 = !DILocation(line: 0, scope: !14663, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !14720)
!14726 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !14725)
!14727 = !DILocation(line: 517, column: 3, scope: !14718)
!14728 = !DILocation(line: 519, column: 18, scope: !14698)
!14729 = !DILocation(line: 522, column: 6, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14698, file: !2473, line: 522, column: 6)
!14731 = !DILocation(line: 522, column: 27, scope: !14730)
!14732 = !DILocation(line: 522, column: 30, scope: !14730)
!14733 = !DILocation(line: 522, column: 6, scope: !14698)
!14734 = !DILocation(line: 523, column: 30, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14736, file: !2473, line: 523, column: 7)
!14736 = distinct !DILexicalBlock(scope: !14730, file: !2473, line: 522, column: 51)
!14737 = !DILocation(line: 523, column: 13, scope: !14735)
!14738 = !DILocation(line: 523, column: 7, scope: !14736)
!14739 = !DILocation(line: 530, column: 10, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14735, file: !2473, line: 523, column: 43)
!14741 = !DILocation(line: 531, column: 3, scope: !14740)
!14742 = !DILocation(line: 532, column: 30, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14735, file: !2473, line: 531, column: 10)
!14744 = !DILocation(line: 535, column: 29, scope: !14745)
!14745 = distinct !DILexicalBlock(scope: !14730, file: !2473, line: 534, column: 9)
!14746 = !DILocation(line: 0, scope: !14649, inlinedAt: !14747)
!14747 = distinct !DILocation(line: 537, column: 2, scope: !14698)
!14748 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !14747)
!14749 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !14747)
!14750 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !14747)
!14751 = !DILocation(line: 0, scope: !14663, inlinedAt: !14752)
!14752 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !14747)
!14753 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !14752)
!14754 = !DILocation(line: 538, column: 1, scope: !14698)
!14755 = distinct !DISubprogram(name: "sliceable", scope: !2473, file: !2473, line: 468, type: !14756, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14758)
!14756 = !DISubroutineType(types: !14757)
!14757 = !{!145, !2365}
!14758 = !{!14759, !14760}
!14759 = !DILocalVariable(name: "thread", arg: 1, scope: !14755, file: !2473, line: 468, type: !2365)
!14760 = !DILocalVariable(name: "ret", scope: !14755, file: !2473, line: 470, type: !145)
!14761 = !DILocation(line: 0, scope: !14755)
!14762 = !DILocation(line: 470, column: 13, scope: !14755)
!14763 = !DILocation(line: 471, column: 3, scope: !14755)
!14764 = !DILocation(line: 471, column: 7, scope: !14755)
!14765 = !DILocation(line: 472, column: 3, scope: !14755)
!14766 = !DILocation(line: 472, column: 37, scope: !14755)
!14767 = !DILocation(line: 472, column: 24, scope: !14755)
!14768 = !DILocation(line: 472, column: 43, scope: !14755)
!14769 = !DILocation(line: 472, column: 7, scope: !14755)
!14770 = !DILocation(line: 473, column: 3, scope: !14755)
!14771 = !DILocation(line: 473, column: 7, scope: !14755)
!14772 = !DILocation(line: 473, column: 6, scope: !14755)
!14773 = !DILocation(line: 479, column: 2, scope: !14755)
!14774 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2473, file: !2473, line: 482, type: !14775, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14777)
!14775 = !DISubroutineType(types: !14776)
!14776 = !{!14607, !14607}
!14777 = !{!14778, !14779}
!14778 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14774, file: !2473, line: 482, type: !14607)
!14779 = !DILocalVariable(name: "curr", scope: !14774, file: !2473, line: 484, type: !2365)
!14780 = !DILocation(line: 0, scope: !14774)
!14781 = !DILocation(line: 484, column: 26, scope: !14774)
!14782 = !DILocation(line: 493, column: 7, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14774, file: !2473, line: 493, column: 6)
!14784 = !DILocation(line: 493, column: 6, scope: !14774)
!14785 = !DILocation(line: 494, column: 3, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14783, file: !2473, line: 493, column: 49)
!14787 = !DILocation(line: 495, column: 2, scope: !14786)
!14788 = !DILocation(line: 496, column: 2, scope: !14774)
!14789 = !DILocation(line: 499, column: 1, scope: !14774)
!14790 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13775, file: !13775, line: 106, type: !14756, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14791)
!14791 = !{!14792, !14793}
!14792 = !DILocalVariable(name: "thread", arg: 1, scope: !14790, file: !13775, line: 106, type: !2365)
!14793 = !DILocalVariable(name: "state", scope: !14790, file: !13775, line: 108, type: !195)
!14794 = !DILocation(line: 0, scope: !14790)
!14795 = !DILocation(line: 108, column: 31, scope: !14790)
!14796 = !DILocation(line: 110, column: 16, scope: !14790)
!14797 = !DILocation(line: 111, column: 41, scope: !14790)
!14798 = !DILocation(line: 110, column: 2, scope: !14790)
!14799 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2473, file: !2473, line: 393, type: !14573, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14800)
!14800 = !{!14801}
!14801 = !DILocalVariable(name: "thread", arg: 1, scope: !14799, file: !2473, line: 393, type: !2365)
!14802 = !DILocation(line: 0, scope: !14799)
!14803 = !DILocation(line: 395, column: 6, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14799, file: !2473, line: 395, column: 6)
!14805 = !DILocation(line: 395, column: 6, scope: !14799)
!14806 = !DILocalVariable(name: "thread", arg: 1, scope: !14807, file: !2473, line: 264, type: !2365)
!14807 = distinct !DISubprogram(name: "dequeue_thread", scope: !2473, file: !2473, line: 264, type: !14573, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14808)
!14808 = !{!14806}
!14809 = !DILocation(line: 0, scope: !14807, inlinedAt: !14810)
!14810 = distinct !DILocation(line: 396, column: 3, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14804, file: !2473, line: 395, column: 34)
!14812 = !DILocation(line: 266, column: 15, scope: !14807, inlinedAt: !14810)
!14813 = !DILocation(line: 266, column: 28, scope: !14807, inlinedAt: !14810)
!14814 = !DILocalVariable(name: "thread", arg: 1, scope: !14815, file: !2473, line: 232, type: !2365)
!14815 = distinct !DISubprogram(name: "runq_remove", scope: !2473, file: !2473, line: 232, type: !14573, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14816)
!14816 = !{!14814}
!14817 = !DILocation(line: 0, scope: !14815, inlinedAt: !14818)
!14818 = distinct !DILocation(line: 268, column: 3, scope: !14819, inlinedAt: !14810)
!14819 = distinct !DILexicalBlock(scope: !14820, file: !2473, line: 267, column: 35)
!14820 = distinct !DILexicalBlock(scope: !14807, file: !2473, line: 267, column: 6)
!14821 = !DILocation(line: 234, column: 2, scope: !14815, inlinedAt: !14818)
!14822 = !DILocation(line: 397, column: 2, scope: !14811)
!14823 = !DILocalVariable(name: "thread", arg: 1, scope: !14824, file: !2473, line: 250, type: !2365)
!14824 = distinct !DISubprogram(name: "queue_thread", scope: !2473, file: !2473, line: 250, type: !14573, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14825)
!14825 = !{!14823}
!14826 = !DILocation(line: 0, scope: !14824, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 398, column: 2, scope: !14799)
!14828 = !DILocation(line: 252, column: 15, scope: !14824, inlinedAt: !14827)
!14829 = !DILocation(line: 252, column: 28, scope: !14824, inlinedAt: !14827)
!14830 = !DILocalVariable(name: "thread", arg: 1, scope: !14831, file: !2473, line: 227, type: !2365)
!14831 = distinct !DISubprogram(name: "runq_add", scope: !2473, file: !2473, line: 227, type: !14573, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14832)
!14832 = !{!14830}
!14833 = !DILocation(line: 0, scope: !14831, inlinedAt: !14834)
!14834 = distinct !DILocation(line: 254, column: 3, scope: !14835, inlinedAt: !14827)
!14835 = distinct !DILexicalBlock(scope: !14836, file: !2473, line: 253, column: 35)
!14836 = distinct !DILexicalBlock(scope: !14824, file: !2473, line: 253, column: 6)
!14837 = !DILocalVariable(name: "pq", arg: 1, scope: !14838, file: !2473, line: 181, type: !14841)
!14838 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2473, file: !2473, line: 181, type: !14839, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14842)
!14839 = !DISubroutineType(types: !14840)
!14840 = !{null, !14841, !2365}
!14841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!14842 = !{!14837, !14843, !14844}
!14843 = !DILocalVariable(name: "thread", arg: 2, scope: !14838, file: !2473, line: 182, type: !2365)
!14844 = !DILocalVariable(name: "t", scope: !14838, file: !2473, line: 184, type: !2365)
!14845 = !DILocation(line: 0, scope: !14838, inlinedAt: !14846)
!14846 = distinct !DILocation(line: 229, column: 2, scope: !14831, inlinedAt: !14834)
!14847 = !DILocation(line: 186, column: 2, scope: !14848, inlinedAt: !14846)
!14848 = distinct !DILexicalBlock(scope: !14849, file: !2473, line: 186, column: 2)
!14849 = distinct !DILexicalBlock(scope: !14838, file: !2473, line: 186, column: 2)
!14850 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !14846)
!14851 = !DILocation(line: 186, column: 2, scope: !14852, inlinedAt: !14846)
!14852 = distinct !DILexicalBlock(scope: !14848, file: !2473, line: 186, column: 2)
!14853 = !DILocation(line: 188, column: 2, scope: !14854, inlinedAt: !14846)
!14854 = distinct !DILexicalBlock(scope: !14838, file: !2473, line: 188, column: 2)
!14855 = !DILocation(line: 188, column: 2, scope: !14856, inlinedAt: !14846)
!14856 = distinct !DILexicalBlock(scope: !14854, file: !2473, line: 188, column: 2)
!14857 = !DILocation(line: 0, scope: !14854, inlinedAt: !14846)
!14858 = !DILocation(line: 189, column: 7, scope: !14859, inlinedAt: !14846)
!14859 = distinct !DILexicalBlock(scope: !14860, file: !2473, line: 189, column: 7)
!14860 = distinct !DILexicalBlock(scope: !14856, file: !2473, line: 188, column: 56)
!14861 = !DILocation(line: 189, column: 35, scope: !14859, inlinedAt: !14846)
!14862 = !DILocation(line: 189, column: 7, scope: !14860, inlinedAt: !14846)
!14863 = !DILocation(line: 191, column: 21, scope: !14864, inlinedAt: !14846)
!14864 = distinct !DILexicalBlock(scope: !14859, file: !2473, line: 189, column: 40)
!14865 = !DILocation(line: 190, column: 4, scope: !14864, inlinedAt: !14846)
!14866 = !DILocation(line: 192, column: 4, scope: !14864, inlinedAt: !14846)
!14867 = distinct !{!14867, !14853, !14868}
!14868 = !DILocation(line: 194, column: 2, scope: !14854, inlinedAt: !14846)
!14869 = !DILocation(line: 196, column: 37, scope: !14838, inlinedAt: !14846)
!14870 = !DILocation(line: 196, column: 2, scope: !14838, inlinedAt: !14846)
!14871 = !DILocation(line: 197, column: 1, scope: !14838, inlinedAt: !14846)
!14872 = !DILocation(line: 399, column: 25, scope: !14799)
!14873 = !DILocation(line: 399, column: 22, scope: !14799)
!14874 = !DILocation(line: 399, column: 2, scope: !14799)
!14875 = !DILocation(line: 400, column: 1, scope: !14799)
!14876 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13775, file: !13775, line: 136, type: !14756, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14877)
!14877 = !{!14878}
!14878 = !DILocalVariable(name: "thread", arg: 1, scope: !14876, file: !13775, line: 136, type: !2365)
!14879 = !DILocation(line: 0, scope: !14876)
!14880 = !DILocation(line: 138, column: 9, scope: !14876)
!14881 = !DILocation(line: 138, column: 2, scope: !14876)
!14882 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2473, file: !2473, line: 1137, type: !14839, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14883)
!14883 = !{!14884, !14885}
!14884 = !DILocalVariable(name: "pq", arg: 1, scope: !14882, file: !2473, line: 1137, type: !14841)
!14885 = !DILocalVariable(name: "thread", arg: 2, scope: !14882, file: !2473, line: 1137, type: !2365)
!14886 = !DILocation(line: 0, scope: !14882)
!14887 = !DILocation(line: 1139, column: 2, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14889, file: !2473, line: 1139, column: 2)
!14889 = distinct !DILexicalBlock(scope: !14882, file: !2473, line: 1139, column: 2)
!14890 = !DILocation(line: 1139, column: 2, scope: !14889)
!14891 = !DILocation(line: 1139, column: 2, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14888, file: !2473, line: 1139, column: 2)
!14893 = !DILocation(line: 1141, column: 33, scope: !14882)
!14894 = !DILocation(line: 1141, column: 2, scope: !14882)
!14895 = !DILocation(line: 1142, column: 1, scope: !14882)
!14896 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13775, file: !13775, line: 83, type: !14756, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14897)
!14897 = !{!14898}
!14898 = !DILocalVariable(name: "thread", arg: 1, scope: !14896, file: !13775, line: 83, type: !2365)
!14899 = !DILocation(line: 0, scope: !14896)
!14900 = !DILocation(line: 89, column: 16, scope: !14896)
!14901 = !DILocation(line: 89, column: 2, scope: !14896)
!14902 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !332, file: !332, line: 294, type: !14903, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14905)
!14903 = !DISubroutineType(types: !14904)
!14904 = !{!2469, !14841}
!14905 = !{!14906}
!14906 = !DILocalVariable(name: "list", arg: 1, scope: !14902, file: !332, line: 294, type: !14841)
!14907 = !DILocation(line: 0, scope: !14902)
!14908 = !DILocation(line: 296, column: 9, scope: !14902)
!14909 = !DILocation(line: 296, column: 49, scope: !14902)
!14910 = !DILocation(line: 296, column: 2, scope: !14902)
!14911 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !332, file: !332, line: 443, type: !14912, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14914)
!14912 = !DISubroutineType(types: !14913)
!14913 = !{null, !2469, !2469}
!14914 = !{!14915, !14916, !14917}
!14915 = !DILocalVariable(name: "successor", arg: 1, scope: !14911, file: !332, line: 443, type: !2469)
!14916 = !DILocalVariable(name: "node", arg: 2, scope: !14911, file: !332, line: 443, type: !2469)
!14917 = !DILocalVariable(name: "prev", scope: !14911, file: !332, line: 445, type: !14918)
!14918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2469)
!14919 = !DILocation(line: 0, scope: !14911)
!14920 = !DILocation(line: 445, column: 39, scope: !14911)
!14921 = !DILocation(line: 447, column: 8, scope: !14911)
!14922 = !DILocation(line: 447, column: 13, scope: !14911)
!14923 = !DILocation(line: 448, column: 8, scope: !14911)
!14924 = !DILocation(line: 448, column: 13, scope: !14911)
!14925 = !DILocation(line: 449, column: 8, scope: !14911)
!14926 = !DILocation(line: 449, column: 13, scope: !14911)
!14927 = !DILocation(line: 450, column: 18, scope: !14911)
!14928 = !DILocation(line: 451, column: 1, scope: !14911)
!14929 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !332, file: !332, line: 341, type: !14930, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14932)
!14930 = !DISubroutineType(types: !14931)
!14931 = !{!2469, !14841, !2469}
!14932 = !{!14933, !14934}
!14933 = !DILocalVariable(name: "list", arg: 1, scope: !14929, file: !332, line: 341, type: !14841)
!14934 = !DILocalVariable(name: "node", arg: 2, scope: !14929, file: !332, line: 342, type: !2469)
!14935 = !DILocation(line: 0, scope: !14929)
!14936 = !DILocation(line: 344, column: 15, scope: !14929)
!14937 = !DILocation(line: 344, column: 9, scope: !14929)
!14938 = !DILocation(line: 344, column: 26, scope: !14929)
!14939 = !DILocation(line: 344, column: 2, scope: !14929)
!14940 = distinct !DISubprogram(name: "sys_dlist_append", scope: !332, file: !332, line: 404, type: !14941, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14943)
!14941 = !DISubroutineType(types: !14942)
!14942 = !{null, !14841, !2469}
!14943 = !{!14944, !14945, !14946}
!14944 = !DILocalVariable(name: "list", arg: 1, scope: !14940, file: !332, line: 404, type: !14841)
!14945 = !DILocalVariable(name: "node", arg: 2, scope: !14940, file: !332, line: 404, type: !2469)
!14946 = !DILocalVariable(name: "tail", scope: !14940, file: !332, line: 406, type: !14918)
!14947 = !DILocation(line: 0, scope: !14940)
!14948 = !DILocation(line: 406, column: 34, scope: !14940)
!14949 = !DILocation(line: 408, column: 8, scope: !14940)
!14950 = !DILocation(line: 408, column: 13, scope: !14940)
!14951 = !DILocation(line: 409, column: 8, scope: !14940)
!14952 = !DILocation(line: 409, column: 13, scope: !14940)
!14953 = !DILocation(line: 411, column: 8, scope: !14940)
!14954 = !DILocation(line: 411, column: 13, scope: !14940)
!14955 = !DILocation(line: 412, column: 13, scope: !14940)
!14956 = !DILocation(line: 413, column: 1, scope: !14940)
!14957 = distinct !DISubprogram(name: "update_cache", scope: !2473, file: !2473, line: 559, type: !9244, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14958)
!14958 = !{!14959, !14960}
!14959 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14957, file: !2473, line: 559, type: !107)
!14960 = !DILocalVariable(name: "thread", scope: !14957, file: !2473, line: 562, type: !2365)
!14961 = !DILocation(line: 0, scope: !14957)
!14962 = !DILocation(line: 239, column: 9, scope: !14963, inlinedAt: !14966)
!14963 = distinct !DISubprogram(name: "runq_best", scope: !2473, file: !2473, line: 237, type: !14964, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!14964 = !DISubroutineType(types: !14965)
!14965 = !{!2365}
!14966 = distinct !DILocation(line: 314, column: 28, scope: !14967, inlinedAt: !14970)
!14967 = distinct !DISubprogram(name: "next_up", scope: !2473, file: !2473, line: 312, type: !14964, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14968)
!14968 = !{!14969}
!14969 = !DILocalVariable(name: "thread", scope: !14967, file: !2473, line: 314, type: !2365)
!14970 = distinct !DILocation(line: 562, column: 28, scope: !14957)
!14971 = !DILocation(line: 0, scope: !14967, inlinedAt: !14970)
!14972 = !DILocation(line: 340, column: 17, scope: !14967, inlinedAt: !14970)
!14973 = !DILocation(line: 340, column: 9, scope: !14967, inlinedAt: !14970)
!14974 = !DILocalVariable(name: "thread", arg: 1, scope: !14975, file: !2473, line: 127, type: !2365)
!14975 = distinct !DISubprogram(name: "should_preempt", scope: !2473, file: !2473, line: 127, type: !14976, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !14978)
!14976 = !DISubroutineType(types: !14977)
!14977 = !{!145, !2365, !107}
!14978 = !{!14974, !14979}
!14979 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14975, file: !2473, line: 128, type: !107)
!14980 = !DILocation(line: 0, scope: !14975, inlinedAt: !14981)
!14981 = distinct !DILocation(line: 564, column: 6, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14957, file: !2473, line: 564, column: 6)
!14983 = !DILocation(line: 133, column: 17, scope: !14984, inlinedAt: !14981)
!14984 = distinct !DILexicalBlock(scope: !14975, file: !2473, line: 133, column: 6)
!14985 = !DILocation(line: 0, scope: !14982)
!14986 = !DILocation(line: 133, column: 6, scope: !14975, inlinedAt: !14981)
!14987 = !DILocation(line: 137, column: 2, scope: !14988, inlinedAt: !14981)
!14988 = distinct !DILexicalBlock(scope: !14989, file: !2473, line: 137, column: 2)
!14989 = distinct !DILexicalBlock(scope: !14975, file: !2473, line: 137, column: 2)
!14990 = !DILocation(line: 137, column: 2, scope: !14989, inlinedAt: !14981)
!14991 = !DILocation(line: 137, column: 2, scope: !14992, inlinedAt: !14981)
!14992 = distinct !DILexicalBlock(scope: !14988, file: !2473, line: 137, column: 2)
!14993 = !DILocation(line: 140, column: 6, scope: !14994, inlinedAt: !14981)
!14994 = distinct !DILexicalBlock(scope: !14975, file: !2473, line: 140, column: 6)
!14995 = !DILocation(line: 140, column: 6, scope: !14975, inlinedAt: !14981)
!14996 = !DILocation(line: 150, column: 9, scope: !14997, inlinedAt: !14981)
!14997 = distinct !DILexicalBlock(scope: !14975, file: !2473, line: 149, column: 6)
!14998 = !DILocation(line: 149, column: 6, scope: !14975, inlinedAt: !14981)
!14999 = !DILocation(line: 157, column: 6, scope: !15000, inlinedAt: !14981)
!15000 = distinct !DILexicalBlock(scope: !14975, file: !2473, line: 157, column: 6)
!15001 = !DILocation(line: 564, column: 6, scope: !14957)
!15002 = !DILocation(line: 566, column: 14, scope: !15003)
!15003 = distinct !DILexicalBlock(scope: !15004, file: !2473, line: 566, column: 7)
!15004 = distinct !DILexicalBlock(scope: !14982, file: !2473, line: 564, column: 42)
!15005 = !DILocation(line: 566, column: 7, scope: !15004)
!15006 = !DILocation(line: 567, column: 4, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !15003, file: !2473, line: 566, column: 27)
!15008 = !DILocation(line: 568, column: 3, scope: !15007)
!15009 = !DILocation(line: 585, column: 1, scope: !14957)
!15010 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2473, file: !2473, line: 1144, type: !15011, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15013)
!15011 = !DISubroutineType(types: !15012)
!15012 = !{!2365, !14841}
!15013 = !{!15014, !15015, !15016}
!15014 = !DILocalVariable(name: "pq", arg: 1, scope: !15010, file: !2473, line: 1144, type: !14841)
!15015 = !DILocalVariable(name: "thread", scope: !15010, file: !2473, line: 1146, type: !2365)
!15016 = !DILocalVariable(name: "n", scope: !15010, file: !2473, line: 1147, type: !2469)
!15017 = !DILocation(line: 0, scope: !15010)
!15018 = !DILocation(line: 1147, column: 19, scope: !15010)
!15019 = !DILocation(line: 1152, column: 2, scope: !15010)
!15020 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13775, file: !13775, line: 115, type: !14756, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15021)
!15021 = !{!15022}
!15022 = !DILocalVariable(name: "thread", arg: 1, scope: !15020, file: !13775, line: 115, type: !2365)
!15023 = !DILocation(line: 0, scope: !15020)
!15024 = !DILocation(line: 117, column: 46, scope: !15020)
!15025 = !DILocation(line: 117, column: 10, scope: !15020)
!15026 = !DILocation(line: 117, column: 9, scope: !15020)
!15027 = !DILocation(line: 117, column: 2, scope: !15020)
!15028 = distinct !DISubprogram(name: "is_preempt", scope: !2473, file: !2473, line: 62, type: !14591, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15029)
!15029 = !{!15030}
!15030 = !DILocalVariable(name: "thread", arg: 1, scope: !15028, file: !2473, line: 62, type: !2365)
!15031 = !DILocation(line: 0, scope: !15028)
!15032 = !DILocation(line: 65, column: 22, scope: !15028)
!15033 = !DILocation(line: 65, column: 30, scope: !15028)
!15034 = !DILocation(line: 65, column: 2, scope: !15028)
!15035 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14204, file: !14204, line: 35, type: !15036, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15040)
!15036 = !DISubroutineType(types: !15037)
!15037 = !{!145, !15038}
!15038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15039, size: 32)
!15039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2416)
!15040 = !{!15041}
!15041 = !DILocalVariable(name: "to", arg: 1, scope: !15035, file: !14204, line: 35, type: !15038)
!15042 = !DILocation(line: 0, scope: !15035)
!15043 = !DILocation(line: 37, column: 35, scope: !15035)
!15044 = !DILocation(line: 37, column: 10, scope: !15035)
!15045 = !DILocation(line: 37, column: 9, scope: !15035)
!15046 = !DILocation(line: 37, column: 2, scope: !15035)
!15047 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !332, file: !332, line: 225, type: !15048, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15052)
!15048 = !DISubroutineType(types: !15049)
!15049 = !{!145, !15050}
!15050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15051, size: 32)
!15051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2375)
!15052 = !{!15053}
!15053 = !DILocalVariable(name: "node", arg: 1, scope: !15047, file: !332, line: 225, type: !15050)
!15054 = !DILocation(line: 0, scope: !15047)
!15055 = !DILocation(line: 227, column: 15, scope: !15047)
!15056 = !DILocation(line: 227, column: 20, scope: !15047)
!15057 = !DILocation(line: 227, column: 2, scope: !15047)
!15058 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !332, file: !332, line: 325, type: !14930, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15059)
!15059 = !{!15060, !15061}
!15060 = !DILocalVariable(name: "list", arg: 1, scope: !15058, file: !332, line: 325, type: !14841)
!15061 = !DILocalVariable(name: "node", arg: 2, scope: !15058, file: !332, line: 326, type: !2469)
!15062 = !DILocation(line: 0, scope: !15058)
!15063 = !DILocation(line: 328, column: 24, scope: !15058)
!15064 = !DILocation(line: 328, column: 15, scope: !15058)
!15065 = !DILocation(line: 328, column: 9, scope: !15058)
!15066 = !DILocation(line: 328, column: 45, scope: !15058)
!15067 = !DILocation(line: 328, column: 2, scope: !15058)
!15068 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !332, file: !332, line: 266, type: !15069, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15071)
!15069 = !DISubroutineType(types: !15070)
!15070 = !{!145, !14841}
!15071 = !{!15072}
!15072 = !DILocalVariable(name: "list", arg: 1, scope: !15068, file: !332, line: 266, type: !14841)
!15073 = !DILocation(line: 0, scope: !15068)
!15074 = !DILocation(line: 268, column: 15, scope: !15068)
!15075 = !DILocation(line: 268, column: 20, scope: !15068)
!15076 = !DILocation(line: 268, column: 2, scope: !15068)
!15077 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !332, file: !332, line: 496, type: !15078, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15080)
!15078 = !DISubroutineType(types: !15079)
!15079 = !{null, !2469}
!15080 = !{!15081, !15082, !15083}
!15081 = !DILocalVariable(name: "node", arg: 1, scope: !15077, file: !332, line: 496, type: !2469)
!15082 = !DILocalVariable(name: "prev", scope: !15077, file: !332, line: 498, type: !14918)
!15083 = !DILocalVariable(name: "next", scope: !15077, file: !332, line: 499, type: !14918)
!15084 = !DILocation(line: 0, scope: !15077)
!15085 = !DILocation(line: 498, column: 34, scope: !15077)
!15086 = !DILocation(line: 499, column: 34, scope: !15077)
!15087 = !DILocation(line: 501, column: 8, scope: !15077)
!15088 = !DILocation(line: 501, column: 13, scope: !15077)
!15089 = !DILocation(line: 502, column: 8, scope: !15077)
!15090 = !DILocation(line: 502, column: 13, scope: !15077)
!15091 = !DILocation(line: 503, column: 2, scope: !15077)
!15092 = !DILocation(line: 504, column: 1, scope: !15077)
!15093 = distinct !DISubprogram(name: "sys_dnode_init", scope: !332, file: !332, line: 211, type: !15078, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15094)
!15094 = !{!15095}
!15095 = !DILocalVariable(name: "node", arg: 1, scope: !15093, file: !332, line: 211, type: !2469)
!15096 = !DILocation(line: 0, scope: !15093)
!15097 = !DILocation(line: 213, column: 8, scope: !15093)
!15098 = !DILocation(line: 213, column: 13, scope: !15093)
!15099 = !DILocation(line: 214, column: 8, scope: !15093)
!15100 = !DILocation(line: 214, column: 13, scope: !15093)
!15101 = !DILocation(line: 215, column: 1, scope: !15093)
!15102 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13775, file: !13775, line: 131, type: !15103, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15105)
!15103 = !DISubroutineType(types: !15104)
!15104 = !{!145, !2365, !152}
!15105 = !{!15106, !15107}
!15106 = !DILocalVariable(name: "thread", arg: 1, scope: !15102, file: !13775, line: 131, type: !2365)
!15107 = !DILocalVariable(name: "state", arg: 2, scope: !15102, file: !13775, line: 131, type: !152)
!15108 = !DILocation(line: 0, scope: !15102)
!15109 = !DILocation(line: 133, column: 23, scope: !15102)
!15110 = !DILocation(line: 133, column: 10, scope: !15102)
!15111 = !DILocation(line: 133, column: 36, scope: !15102)
!15112 = !DILocation(line: 133, column: 45, scope: !15102)
!15113 = !DILocation(line: 133, column: 2, scope: !15102)
!15114 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13775, file: !13775, line: 211, type: !15115, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15117)
!15115 = !DISubroutineType(types: !15116)
!15116 = !{!145, !107, !107}
!15117 = !{!15118, !15119}
!15118 = !DILocalVariable(name: "prio", arg: 1, scope: !15114, file: !13775, line: 211, type: !107)
!15119 = !DILocalVariable(name: "test_prio", arg: 2, scope: !15114, file: !13775, line: 211, type: !107)
!15120 = !DILocation(line: 0, scope: !15114)
!15121 = !DILocation(line: 213, column: 9, scope: !15114)
!15122 = !DILocation(line: 213, column: 2, scope: !15114)
!15123 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13775, file: !13775, line: 206, type: !15115, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15124)
!15124 = !{!15125, !15126}
!15125 = !DILocalVariable(name: "prio1", arg: 1, scope: !15123, file: !13775, line: 206, type: !107)
!15126 = !DILocalVariable(name: "prio2", arg: 2, scope: !15123, file: !13775, line: 206, type: !107)
!15127 = !DILocation(line: 0, scope: !15123)
!15128 = !DILocation(line: 208, column: 15, scope: !15123)
!15129 = !DILocation(line: 208, column: 2, scope: !15123)
!15130 = distinct !DISubprogram(name: "z_ready_thread", scope: !2473, file: !2473, line: 635, type: !14573, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15131)
!15131 = !{!15132, !15133, !15135}
!15132 = !DILocalVariable(name: "thread", arg: 1, scope: !15130, file: !2473, line: 635, type: !2365)
!15133 = !DILocalVariable(name: "__i", scope: !15134, file: !2473, line: 637, type: !14607)
!15134 = distinct !DILexicalBlock(scope: !15130, file: !2473, line: 637, column: 2)
!15135 = !DILocalVariable(name: "__key", scope: !15134, file: !2473, line: 637, type: !14607)
!15136 = !DILocation(line: 0, scope: !15130)
!15137 = !DILocation(line: 0, scope: !15134)
!15138 = !DILocation(line: 0, scope: !14615, inlinedAt: !15139)
!15139 = distinct !DILocation(line: 637, column: 2, scope: !15134)
!15140 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15141)
!15141 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15139)
!15142 = !DILocation(line: 0, scope: !14624, inlinedAt: !15141)
!15143 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15139)
!15144 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15139)
!15145 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15139)
!15146 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15139)
!15147 = !DILocation(line: 639, column: 4, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15149, file: !2473, line: 638, column: 41)
!15149 = distinct !DILexicalBlock(scope: !15150, file: !2473, line: 638, column: 7)
!15150 = distinct !DILexicalBlock(scope: !15151, file: !2473, line: 637, column: 26)
!15151 = distinct !DILexicalBlock(scope: !15134, file: !2473, line: 637, column: 2)
!15152 = !DILocation(line: 0, scope: !14649, inlinedAt: !15153)
!15153 = distinct !DILocation(line: 637, column: 2, scope: !15151)
!15154 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15153)
!15155 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15153)
!15156 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15153)
!15157 = !DILocation(line: 0, scope: !14663, inlinedAt: !15158)
!15158 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15153)
!15159 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15158)
!15160 = !DILocation(line: 642, column: 1, scope: !15130)
!15161 = distinct !DISubprogram(name: "ready_thread", scope: !2473, file: !2473, line: 617, type: !14573, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15162)
!15162 = !{!15163}
!15163 = !DILocalVariable(name: "thread", arg: 1, scope: !15161, file: !2473, line: 617, type: !2365)
!15164 = !DILocation(line: 0, scope: !15161)
!15165 = !DILocation(line: 626, column: 7, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15161, file: !2473, line: 626, column: 6)
!15167 = !DILocation(line: 626, column: 34, scope: !15166)
!15168 = !DILocation(line: 626, column: 37, scope: !15166)
!15169 = !DILocation(line: 626, column: 6, scope: !15161)
!15170 = !DILocation(line: 0, scope: !14824, inlinedAt: !15171)
!15171 = distinct !DILocation(line: 629, column: 3, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15166, file: !2473, line: 626, column: 64)
!15173 = !DILocation(line: 252, column: 15, scope: !14824, inlinedAt: !15171)
!15174 = !DILocation(line: 252, column: 28, scope: !14824, inlinedAt: !15171)
!15175 = !DILocation(line: 0, scope: !14831, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 254, column: 3, scope: !14835, inlinedAt: !15171)
!15177 = !DILocation(line: 0, scope: !14838, inlinedAt: !15178)
!15178 = distinct !DILocation(line: 229, column: 2, scope: !14831, inlinedAt: !15176)
!15179 = !DILocation(line: 186, column: 2, scope: !14848, inlinedAt: !15178)
!15180 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !15178)
!15181 = !DILocation(line: 186, column: 2, scope: !14852, inlinedAt: !15178)
!15182 = !DILocation(line: 188, column: 2, scope: !14854, inlinedAt: !15178)
!15183 = !DILocation(line: 188, column: 2, scope: !14856, inlinedAt: !15178)
!15184 = !DILocation(line: 0, scope: !14854, inlinedAt: !15178)
!15185 = !DILocation(line: 189, column: 7, scope: !14859, inlinedAt: !15178)
!15186 = !DILocation(line: 189, column: 35, scope: !14859, inlinedAt: !15178)
!15187 = !DILocation(line: 189, column: 7, scope: !14860, inlinedAt: !15178)
!15188 = !DILocation(line: 191, column: 21, scope: !14864, inlinedAt: !15178)
!15189 = !DILocation(line: 190, column: 4, scope: !14864, inlinedAt: !15178)
!15190 = !DILocation(line: 192, column: 4, scope: !14864, inlinedAt: !15178)
!15191 = distinct !{!15191, !15182, !15192}
!15192 = !DILocation(line: 194, column: 2, scope: !14854, inlinedAt: !15178)
!15193 = !DILocation(line: 196, column: 37, scope: !14838, inlinedAt: !15178)
!15194 = !DILocation(line: 196, column: 2, scope: !14838, inlinedAt: !15178)
!15195 = !DILocation(line: 197, column: 1, scope: !14838, inlinedAt: !15178)
!15196 = !DILocation(line: 630, column: 3, scope: !15172)
!15197 = !DILocation(line: 632, column: 2, scope: !15172)
!15198 = !DILocation(line: 633, column: 1, scope: !15161)
!15199 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13775, file: !13775, line: 120, type: !14756, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15200)
!15200 = !{!15201}
!15201 = !DILocalVariable(name: "thread", arg: 1, scope: !15199, file: !13775, line: 120, type: !2365)
!15202 = !DILocation(line: 0, scope: !15199)
!15203 = !DILocation(line: 122, column: 12, scope: !15199)
!15204 = !DILocation(line: 122, column: 62, scope: !15199)
!15205 = !DILocation(line: 123, column: 4, scope: !15199)
!15206 = !DILocation(line: 122, column: 2, scope: !15199)
!15207 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2473, file: !2473, line: 644, type: !14573, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15208)
!15208 = !{!15209, !15210, !15212}
!15209 = !DILocalVariable(name: "thread", arg: 1, scope: !15207, file: !2473, line: 644, type: !2365)
!15210 = !DILocalVariable(name: "__i", scope: !15211, file: !2473, line: 646, type: !14607)
!15211 = distinct !DILexicalBlock(scope: !15207, file: !2473, line: 646, column: 2)
!15212 = !DILocalVariable(name: "__key", scope: !15211, file: !2473, line: 646, type: !14607)
!15213 = !DILocation(line: 0, scope: !15207)
!15214 = !DILocation(line: 0, scope: !15211)
!15215 = !DILocation(line: 0, scope: !14615, inlinedAt: !15216)
!15216 = distinct !DILocation(line: 646, column: 2, scope: !15211)
!15217 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15218)
!15218 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15216)
!15219 = !DILocation(line: 0, scope: !14624, inlinedAt: !15218)
!15220 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15216)
!15221 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15216)
!15222 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15216)
!15223 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15216)
!15224 = !DILocation(line: 647, column: 3, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15226, file: !2473, line: 646, column: 26)
!15226 = distinct !DILexicalBlock(scope: !15211, file: !2473, line: 646, column: 2)
!15227 = !DILocation(line: 0, scope: !14649, inlinedAt: !15228)
!15228 = distinct !DILocation(line: 646, column: 2, scope: !15226)
!15229 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15228)
!15230 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15228)
!15231 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15228)
!15232 = !DILocation(line: 0, scope: !14663, inlinedAt: !15233)
!15233 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15228)
!15234 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15233)
!15235 = !DILocation(line: 649, column: 1, scope: !15207)
!15236 = distinct !DISubprogram(name: "z_sched_start", scope: !2473, file: !2473, line: 651, type: !14573, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15237)
!15237 = !{!15238, !15239}
!15238 = !DILocalVariable(name: "thread", arg: 1, scope: !15236, file: !2473, line: 651, type: !2365)
!15239 = !DILocalVariable(name: "key", scope: !15236, file: !2473, line: 653, type: !14607)
!15240 = !DILocation(line: 0, scope: !15236)
!15241 = !DILocation(line: 0, scope: !14615, inlinedAt: !15242)
!15242 = distinct !DILocation(line: 653, column: 25, scope: !15236)
!15243 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15244)
!15244 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15242)
!15245 = !DILocation(line: 0, scope: !14624, inlinedAt: !15244)
!15246 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15242)
!15247 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15242)
!15248 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15242)
!15249 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15242)
!15250 = !DILocation(line: 655, column: 6, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15236, file: !2473, line: 655, column: 6)
!15252 = !DILocation(line: 655, column: 6, scope: !15236)
!15253 = !DILocation(line: 0, scope: !14649, inlinedAt: !15254)
!15254 = distinct !DILocation(line: 656, column: 3, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15251, file: !2473, line: 655, column: 36)
!15256 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15254)
!15257 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15254)
!15258 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15254)
!15259 = !DILocation(line: 0, scope: !14663, inlinedAt: !15260)
!15260 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15254)
!15261 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15260)
!15262 = !DILocation(line: 657, column: 3, scope: !15255)
!15263 = !DILocation(line: 660, column: 2, scope: !15236)
!15264 = !DILocation(line: 661, column: 2, scope: !15236)
!15265 = !DILocation(line: 662, column: 2, scope: !15236)
!15266 = !DILocation(line: 663, column: 1, scope: !15236)
!15267 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13775, file: !13775, line: 126, type: !14756, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15268)
!15268 = !{!15269}
!15269 = !DILocalVariable(name: "thread", arg: 1, scope: !15267, file: !13775, line: 126, type: !2365)
!15270 = !DILocation(line: 0, scope: !15267)
!15271 = !DILocation(line: 128, column: 23, scope: !15267)
!15272 = !DILocation(line: 128, column: 36, scope: !15267)
!15273 = !DILocation(line: 128, column: 56, scope: !15267)
!15274 = !DILocation(line: 128, column: 2, scope: !15267)
!15275 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13775, file: !13775, line: 155, type: !14573, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15276)
!15276 = !{!15277}
!15277 = !DILocalVariable(name: "thread", arg: 1, scope: !15275, file: !13775, line: 155, type: !2365)
!15278 = !DILocation(line: 0, scope: !15275)
!15279 = !DILocation(line: 157, column: 15, scope: !15275)
!15280 = !DILocation(line: 157, column: 28, scope: !15275)
!15281 = !DILocation(line: 158, column: 1, scope: !15275)
!15282 = distinct !DISubprogram(name: "z_reschedule", scope: !2473, file: !2473, line: 967, type: !14650, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15283)
!15283 = !{!15284, !15285}
!15284 = !DILocalVariable(name: "lock", arg: 1, scope: !15282, file: !2473, line: 967, type: !14618)
!15285 = !DILocalVariable(name: "key", arg: 2, scope: !15282, file: !2473, line: 967, type: !14607)
!15286 = !DILocation(line: 0, scope: !15282)
!15287 = !DILocation(line: 969, column: 6, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15282, file: !2473, line: 969, column: 6)
!15289 = !DILocation(line: 969, column: 23, scope: !15288)
!15290 = !DILocation(line: 969, column: 26, scope: !15288)
!15291 = !DILocation(line: 969, column: 6, scope: !15282)
!15292 = !DILocalVariable(name: "key", arg: 2, scope: !15293, file: !13879, line: 193, type: !14607)
!15293 = distinct !DISubprogram(name: "z_swap", scope: !13879, file: !13879, line: 193, type: !15294, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15296)
!15294 = !DISubroutineType(types: !15295)
!15295 = !{!107, !14618, !14607}
!15296 = !{!15297, !15292}
!15297 = !DILocalVariable(name: "lock", arg: 1, scope: !15293, file: !13879, line: 193, type: !14618)
!15298 = !DILocation(line: 0, scope: !15293, inlinedAt: !15299)
!15299 = distinct !DILocation(line: 970, column: 3, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15288, file: !2473, line: 969, column: 39)
!15301 = !DILocalVariable(name: "l", arg: 1, scope: !15302, file: !433, line: 221, type: !14618)
!15302 = distinct !DISubprogram(name: "k_spin_release", scope: !433, file: !433, line: 221, type: !15303, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15305)
!15303 = !DISubroutineType(types: !15304)
!15304 = !{null, !14618}
!15305 = !{!15301}
!15306 = !DILocation(line: 0, scope: !15302, inlinedAt: !15307)
!15307 = distinct !DILocation(line: 195, column: 2, scope: !15293, inlinedAt: !15299)
!15308 = !DILocation(line: 225, column: 2, scope: !15309, inlinedAt: !15307)
!15309 = distinct !DILexicalBlock(scope: !15310, file: !433, line: 225, column: 2)
!15310 = distinct !DILexicalBlock(scope: !15302, file: !433, line: 225, column: 2)
!15311 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !15307)
!15312 = !DILocation(line: 225, column: 2, scope: !15313, inlinedAt: !15307)
!15313 = distinct !DILexicalBlock(scope: !15309, file: !433, line: 225, column: 2)
!15314 = !DILocation(line: 196, column: 9, scope: !15293, inlinedAt: !15299)
!15315 = !DILocation(line: 971, column: 2, scope: !15300)
!15316 = !DILocation(line: 0, scope: !14649, inlinedAt: !15317)
!15317 = distinct !DILocation(line: 972, column: 3, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15288, file: !2473, line: 971, column: 9)
!15319 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15317)
!15320 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15317)
!15321 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15317)
!15322 = !DILocation(line: 0, scope: !14663, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15317)
!15324 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15323)
!15325 = !DILocation(line: 975, column: 1, scope: !15282)
!15326 = distinct !DISubprogram(name: "resched", scope: !2473, file: !2473, line: 940, type: !15327, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15329)
!15327 = !DISubroutineType(types: !15328)
!15328 = !{!145, !152}
!15329 = !{!15330}
!15330 = !DILocalVariable(name: "key", arg: 1, scope: !15326, file: !2473, line: 940, type: !152)
!15331 = !DILocation(line: 0, scope: !15326)
!15332 = !DILocalVariable(name: "key", arg: 1, scope: !15333, file: !5887, line: 112, type: !32)
!15333 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5887, file: !5887, line: 112, type: !15334, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15336)
!15334 = !DISubroutineType(types: !15335)
!15335 = !{!145, !32}
!15336 = !{!15332}
!15337 = !DILocation(line: 0, scope: !15333, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 946, column: 9, scope: !15326)
!15339 = !DILocation(line: 115, column: 13, scope: !15333, inlinedAt: !15338)
!15340 = !DILocation(line: 946, column: 32, scope: !15326)
!15341 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !15345)
!15342 = distinct !DISubprogram(name: "__get_IPSR", scope: !6223, file: !6223, line: 1027, type: !7228, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15343)
!15343 = !{!15344}
!15344 = !DILocalVariable(name: "result", scope: !15342, file: !6223, line: 1029, type: !152)
!15345 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !15347)
!15346 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7234, file: !7234, line: 46, type: !7235, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!15347 = distinct !DILocation(line: 946, column: 36, scope: !15326)
!15348 = !{i64 2491297}
!15349 = !DILocation(line: 0, scope: !15342, inlinedAt: !15345)
!15350 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !15347)
!15351 = !DILocation(line: 946, column: 2, scope: !15326)
!15352 = distinct !DISubprogram(name: "need_swap", scope: !2473, file: !2473, line: 953, type: !7235, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15353)
!15353 = !{!15354}
!15354 = !DILocalVariable(name: "new_thread", scope: !15352, file: !2473, line: 959, type: !2365)
!15355 = !DILocation(line: 962, column: 31, scope: !15352)
!15356 = !DILocation(line: 0, scope: !15352)
!15357 = !DILocation(line: 963, column: 23, scope: !15352)
!15358 = !DILocation(line: 963, column: 20, scope: !15352)
!15359 = !DILocation(line: 963, column: 2, scope: !15352)
!15360 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13879, file: !13879, line: 181, type: !6233, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15361)
!15361 = !{!15362, !15363}
!15362 = !DILocalVariable(name: "key", arg: 1, scope: !15360, file: !13879, line: 181, type: !32)
!15363 = !DILocalVariable(name: "ret", scope: !15360, file: !13879, line: 183, type: !107)
!15364 = !DILocation(line: 0, scope: !15360)
!15365 = !DILocation(line: 185, column: 8, scope: !15360)
!15366 = !DILocation(line: 186, column: 2, scope: !15360)
!15367 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2473, file: !2473, line: 665, type: !14573, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15368)
!15368 = !{!15369, !15370, !15372}
!15369 = !DILocalVariable(name: "thread", arg: 1, scope: !15367, file: !2473, line: 665, type: !2365)
!15370 = !DILocalVariable(name: "__i", scope: !15371, file: !2473, line: 671, type: !14607)
!15371 = distinct !DILexicalBlock(scope: !15367, file: !2473, line: 671, column: 2)
!15372 = !DILocalVariable(name: "__key", scope: !15371, file: !2473, line: 671, type: !14607)
!15373 = !DILocation(line: 0, scope: !15367)
!15374 = !DILocation(line: 669, column: 8, scope: !15367)
!15375 = !DILocation(line: 0, scope: !15371)
!15376 = !DILocation(line: 0, scope: !14615, inlinedAt: !15377)
!15377 = distinct !DILocation(line: 671, column: 2, scope: !15371)
!15378 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15379)
!15379 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15377)
!15380 = !DILocation(line: 0, scope: !14624, inlinedAt: !15379)
!15381 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15377)
!15382 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15377)
!15383 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15377)
!15384 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15377)
!15385 = !DILocation(line: 672, column: 7, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15387, file: !2473, line: 672, column: 7)
!15387 = distinct !DILexicalBlock(scope: !15388, file: !2473, line: 671, column: 26)
!15388 = distinct !DILexicalBlock(scope: !15371, file: !2473, line: 671, column: 2)
!15389 = !DILocation(line: 672, column: 7, scope: !15387)
!15390 = !DILocation(line: 0, scope: !14807, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 673, column: 4, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15386, file: !2473, line: 672, column: 35)
!15393 = !DILocation(line: 266, column: 15, scope: !14807, inlinedAt: !15391)
!15394 = !DILocation(line: 266, column: 28, scope: !14807, inlinedAt: !15391)
!15395 = !DILocation(line: 0, scope: !14815, inlinedAt: !15396)
!15396 = distinct !DILocation(line: 268, column: 3, scope: !14819, inlinedAt: !15391)
!15397 = !DILocation(line: 234, column: 2, scope: !14815, inlinedAt: !15396)
!15398 = !DILocation(line: 674, column: 3, scope: !15392)
!15399 = !DILocation(line: 675, column: 3, scope: !15387)
!15400 = !DILocation(line: 676, column: 26, scope: !15387)
!15401 = !DILocation(line: 676, column: 23, scope: !15387)
!15402 = !DILocation(line: 676, column: 3, scope: !15387)
!15403 = !DILocation(line: 0, scope: !14649, inlinedAt: !15404)
!15404 = distinct !DILocation(line: 671, column: 2, scope: !15388)
!15405 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15404)
!15406 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15404)
!15407 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15404)
!15408 = !DILocation(line: 0, scope: !14663, inlinedAt: !15409)
!15409 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15404)
!15410 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15409)
!15411 = !DILocation(line: 679, column: 16, scope: !15412)
!15412 = distinct !DILexicalBlock(scope: !15367, file: !2473, line: 679, column: 6)
!15413 = !DILocation(line: 679, column: 13, scope: !15412)
!15414 = !DILocation(line: 679, column: 6, scope: !15367)
!15415 = !DILocation(line: 680, column: 3, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15412, file: !2473, line: 679, column: 26)
!15417 = !DILocation(line: 681, column: 2, scope: !15416)
!15418 = !DILocation(line: 684, column: 1, scope: !15367)
!15419 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !14204, file: !14204, line: 52, type: !14591, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15420)
!15420 = !{!15421}
!15421 = !DILocalVariable(name: "thread", arg: 1, scope: !15419, file: !14204, line: 52, type: !2365)
!15422 = !DILocation(line: 0, scope: !15419)
!15423 = !DILocation(line: 54, column: 39, scope: !15419)
!15424 = !DILocation(line: 54, column: 9, scope: !15419)
!15425 = !DILocation(line: 54, column: 2, scope: !15419)
!15426 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13775, file: !13775, line: 141, type: !14573, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15427)
!15427 = !{!15428}
!15428 = !DILocalVariable(name: "thread", arg: 1, scope: !15426, file: !13775, line: 141, type: !2365)
!15429 = !DILocation(line: 0, scope: !15426)
!15430 = !DILocation(line: 143, column: 15, scope: !15426)
!15431 = !DILocation(line: 143, column: 28, scope: !15426)
!15432 = !DILocation(line: 146, column: 1, scope: !15426)
!15433 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13775, file: !13775, line: 73, type: !3055, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!15434 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15435)
!15435 = distinct !DILocation(line: 75, column: 30, scope: !15433)
!15436 = !DILocation(line: 0, scope: !14624, inlinedAt: !15435)
!15437 = !DILocation(line: 75, column: 9, scope: !15433)
!15438 = !DILocation(line: 76, column: 1, scope: !15433)
!15439 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2473, file: !2473, line: 977, type: !5911, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15440)
!15440 = !{!15441}
!15441 = !DILocalVariable(name: "key", arg: 1, scope: !15439, file: !2473, line: 977, type: !152)
!15442 = !DILocation(line: 0, scope: !15439)
!15443 = !DILocation(line: 979, column: 6, scope: !15444)
!15444 = distinct !DILexicalBlock(scope: !15439, file: !2473, line: 979, column: 6)
!15445 = !DILocation(line: 979, column: 6, scope: !15439)
!15446 = !DILocation(line: 980, column: 3, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15444, file: !2473, line: 979, column: 20)
!15448 = !DILocation(line: 981, column: 2, scope: !15447)
!15449 = !DILocation(line: 0, scope: !14663, inlinedAt: !15450)
!15450 = distinct !DILocation(line: 982, column: 3, scope: !15451)
!15451 = distinct !DILexicalBlock(scope: !15444, file: !2473, line: 981, column: 9)
!15452 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15450)
!15453 = !DILocation(line: 985, column: 1, scope: !15439)
!15454 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2473, file: !2473, line: 695, type: !14573, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15455)
!15455 = !{!15456, !15457}
!15456 = !DILocalVariable(name: "thread", arg: 1, scope: !15454, file: !2473, line: 695, type: !2365)
!15457 = !DILocalVariable(name: "key", scope: !15454, file: !2473, line: 699, type: !14607)
!15458 = !DILocation(line: 0, scope: !15454)
!15459 = !DILocation(line: 0, scope: !14615, inlinedAt: !15460)
!15460 = distinct !DILocation(line: 699, column: 25, scope: !15454)
!15461 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15460)
!15463 = !DILocation(line: 0, scope: !14624, inlinedAt: !15462)
!15464 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15460)
!15465 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15460)
!15466 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15460)
!15467 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15460)
!15468 = !DILocation(line: 702, column: 7, scope: !15469)
!15469 = distinct !DILexicalBlock(scope: !15454, file: !2473, line: 702, column: 6)
!15470 = !DILocation(line: 702, column: 6, scope: !15454)
!15471 = !DILocation(line: 0, scope: !14649, inlinedAt: !15472)
!15472 = distinct !DILocation(line: 703, column: 3, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15469, file: !2473, line: 702, column: 38)
!15474 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15472)
!15475 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15472)
!15476 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15472)
!15477 = !DILocation(line: 0, scope: !14663, inlinedAt: !15478)
!15478 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15472)
!15479 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15478)
!15480 = !DILocation(line: 704, column: 3, scope: !15473)
!15481 = !DILocation(line: 707, column: 2, scope: !15454)
!15482 = !DILocation(line: 708, column: 2, scope: !15454)
!15483 = !DILocation(line: 710, column: 2, scope: !15454)
!15484 = !DILocation(line: 713, column: 1, scope: !15454)
!15485 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13775, file: !13775, line: 96, type: !14756, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15486)
!15486 = !{!15487}
!15487 = !DILocalVariable(name: "thread", arg: 1, scope: !15485, file: !13775, line: 96, type: !2365)
!15488 = !DILocation(line: 0, scope: !15485)
!15489 = !DILocation(line: 98, column: 23, scope: !15485)
!15490 = !DILocation(line: 98, column: 36, scope: !15485)
!15491 = !DILocation(line: 98, column: 57, scope: !15485)
!15492 = !DILocation(line: 98, column: 2, scope: !15485)
!15493 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13775, file: !13775, line: 148, type: !14573, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15494)
!15494 = !{!15495}
!15495 = !DILocalVariable(name: "thread", arg: 1, scope: !15493, file: !13775, line: 148, type: !2365)
!15496 = !DILocation(line: 0, scope: !15493)
!15497 = !DILocation(line: 150, column: 15, scope: !15493)
!15498 = !DILocation(line: 150, column: 28, scope: !15493)
!15499 = !DILocation(line: 153, column: 1, scope: !15493)
!15500 = distinct !DISubprogram(name: "z_pend_thread", scope: !2473, file: !2473, line: 770, type: !15501, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15507)
!15501 = !DISubroutineType(types: !15502)
!15502 = !{null, !2365, !2396, !15503}
!15503 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !686, line: 67, baseType: !15504)
!15504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 65, size: 64, elements: !15505)
!15505 = !{!15506}
!15506 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15504, file: !686, line: 66, baseType: !685, size: 64)
!15507 = !{!15508, !15509, !15510, !15511, !15513}
!15508 = !DILocalVariable(name: "thread", arg: 1, scope: !15500, file: !2473, line: 770, type: !2365)
!15509 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15500, file: !2473, line: 770, type: !2396)
!15510 = !DILocalVariable(name: "timeout", arg: 3, scope: !15500, file: !2473, line: 771, type: !15503)
!15511 = !DILocalVariable(name: "__i", scope: !15512, file: !2473, line: 774, type: !14607)
!15512 = distinct !DILexicalBlock(scope: !15500, file: !2473, line: 774, column: 2)
!15513 = !DILocalVariable(name: "__key", scope: !15512, file: !2473, line: 774, type: !14607)
!15514 = !DILocation(line: 0, scope: !15500)
!15515 = !DILocation(line: 773, column: 2, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15517, file: !2473, line: 773, column: 2)
!15517 = distinct !DILexicalBlock(scope: !15500, file: !2473, line: 773, column: 2)
!15518 = !DILocation(line: 773, column: 2, scope: !15517)
!15519 = !DILocation(line: 773, column: 2, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15516, file: !2473, line: 773, column: 2)
!15521 = !DILocation(line: 0, scope: !15512)
!15522 = !DILocation(line: 0, scope: !14615, inlinedAt: !15523)
!15523 = distinct !DILocation(line: 774, column: 2, scope: !15512)
!15524 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15523)
!15526 = !DILocation(line: 0, scope: !14624, inlinedAt: !15525)
!15527 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15523)
!15528 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15523)
!15529 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15523)
!15530 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15523)
!15531 = !DILocation(line: 775, column: 3, scope: !15532)
!15532 = distinct !DILexicalBlock(scope: !15533, file: !2473, line: 774, column: 26)
!15533 = distinct !DILexicalBlock(scope: !15512, file: !2473, line: 774, column: 2)
!15534 = !DILocation(line: 0, scope: !14649, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 774, column: 2, scope: !15533)
!15536 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15535)
!15537 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15535)
!15538 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15535)
!15539 = !DILocation(line: 0, scope: !14663, inlinedAt: !15540)
!15540 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15535)
!15541 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15540)
!15542 = !DILocation(line: 777, column: 1, scope: !15500)
!15543 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2473, file: !2473, line: 79, type: !14756, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15544)
!15544 = !{!15545}
!15545 = !DILocalVariable(name: "thread", arg: 1, scope: !15543, file: !2473, line: 79, type: !2365)
!15546 = !DILocation(line: 0, scope: !15543)
!15547 = !DILocation(line: 81, column: 23, scope: !15543)
!15548 = !DILocation(line: 81, column: 36, scope: !15543)
!15549 = !DILocation(line: 81, column: 53, scope: !15543)
!15550 = !DILocation(line: 81, column: 2, scope: !15543)
!15551 = distinct !DISubprogram(name: "pend_locked", scope: !2473, file: !2473, line: 760, type: !15501, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15552)
!15552 = !{!15553, !15554, !15555}
!15553 = !DILocalVariable(name: "thread", arg: 1, scope: !15551, file: !2473, line: 760, type: !2365)
!15554 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15551, file: !2473, line: 760, type: !2396)
!15555 = !DILocalVariable(name: "timeout", arg: 3, scope: !15551, file: !2473, line: 761, type: !15503)
!15556 = !DILocation(line: 0, scope: !15551)
!15557 = !DILocation(line: 766, column: 2, scope: !15551)
!15558 = !DILocation(line: 767, column: 2, scope: !15551)
!15559 = !DILocation(line: 768, column: 1, scope: !15551)
!15560 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2473, file: !2473, line: 740, type: !15561, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15563)
!15561 = !DISubroutineType(types: !15562)
!15562 = !{null, !2365, !2396}
!15563 = !{!15564, !15565}
!15564 = !DILocalVariable(name: "thread", arg: 1, scope: !15560, file: !2473, line: 740, type: !2365)
!15565 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15560, file: !2473, line: 740, type: !2396)
!15566 = !DILocation(line: 0, scope: !15560)
!15567 = !DILocation(line: 742, column: 2, scope: !15560)
!15568 = !DILocation(line: 743, column: 2, scope: !15560)
!15569 = !DILocation(line: 747, column: 13, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15560, file: !2473, line: 747, column: 6)
!15571 = !DILocation(line: 747, column: 6, scope: !15560)
!15572 = !DILocation(line: 748, column: 16, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15570, file: !2473, line: 747, column: 22)
!15574 = !DILocation(line: 748, column: 26, scope: !15573)
!15575 = !DILocation(line: 749, column: 28, scope: !15573)
!15576 = !DILocation(line: 0, scope: !14838, inlinedAt: !15577)
!15577 = distinct !DILocation(line: 749, column: 3, scope: !15573)
!15578 = !DILocation(line: 186, column: 2, scope: !14848, inlinedAt: !15577)
!15579 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !15577)
!15580 = !DILocation(line: 186, column: 2, scope: !14852, inlinedAt: !15577)
!15581 = !DILocation(line: 188, column: 2, scope: !14854, inlinedAt: !15577)
!15582 = !DILocation(line: 188, column: 2, scope: !14856, inlinedAt: !15577)
!15583 = !DILocation(line: 0, scope: !14854, inlinedAt: !15577)
!15584 = !DILocation(line: 189, column: 7, scope: !14859, inlinedAt: !15577)
!15585 = !DILocation(line: 189, column: 35, scope: !14859, inlinedAt: !15577)
!15586 = !DILocation(line: 189, column: 7, scope: !14860, inlinedAt: !15577)
!15587 = !DILocation(line: 191, column: 21, scope: !14864, inlinedAt: !15577)
!15588 = !DILocation(line: 190, column: 4, scope: !14864, inlinedAt: !15577)
!15589 = !DILocation(line: 192, column: 4, scope: !14864, inlinedAt: !15577)
!15590 = distinct !{!15590, !15581, !15591}
!15591 = !DILocation(line: 194, column: 2, scope: !14854, inlinedAt: !15577)
!15592 = !DILocation(line: 196, column: 37, scope: !14838, inlinedAt: !15577)
!15593 = !DILocation(line: 196, column: 2, scope: !14838, inlinedAt: !15577)
!15594 = !DILocation(line: 197, column: 1, scope: !14838, inlinedAt: !15577)
!15595 = !DILocation(line: 751, column: 1, scope: !15560)
!15596 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2473, file: !2473, line: 753, type: !15597, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15599)
!15597 = !DISubroutineType(types: !15598)
!15598 = !{null, !2365, !15503}
!15599 = !{!15600, !15601}
!15600 = !DILocalVariable(name: "thread", arg: 1, scope: !15596, file: !2473, line: 753, type: !2365)
!15601 = !DILocalVariable(name: "timeout", arg: 2, scope: !15596, file: !2473, line: 753, type: !15503)
!15602 = !DILocation(line: 0, scope: !15596)
!15603 = !DILocation(line: 755, column: 7, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15596, file: !2473, line: 755, column: 6)
!15605 = !DILocation(line: 755, column: 6, scope: !15596)
!15606 = !DILocation(line: 756, column: 3, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15604, file: !2473, line: 755, column: 41)
!15608 = !DILocation(line: 757, column: 2, scope: !15607)
!15609 = !DILocation(line: 758, column: 1, scope: !15596)
!15610 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !14204, file: !14204, line: 47, type: !15597, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15611)
!15611 = !{!15612, !15613}
!15612 = !DILocalVariable(name: "thread", arg: 1, scope: !15610, file: !14204, line: 47, type: !2365)
!15613 = !DILocalVariable(name: "ticks", arg: 2, scope: !15610, file: !14204, line: 47, type: !15503)
!15614 = !DILocation(line: 0, scope: !15610)
!15615 = !DILocation(line: 49, column: 30, scope: !15610)
!15616 = !DILocation(line: 49, column: 2, scope: !15610)
!15617 = !DILocation(line: 50, column: 1, scope: !15610)
!15618 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2473, file: !2473, line: 795, type: !2422, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15619)
!15619 = !{!15620, !15621, !15622, !15624, !15625}
!15620 = !DILocalVariable(name: "timeout", arg: 1, scope: !15618, file: !2473, line: 795, type: !2424)
!15621 = !DILocalVariable(name: "thread", scope: !15618, file: !2473, line: 797, type: !2365)
!15622 = !DILocalVariable(name: "__i", scope: !15623, file: !2473, line: 800, type: !14607)
!15623 = distinct !DILexicalBlock(scope: !15618, file: !2473, line: 800, column: 2)
!15624 = !DILocalVariable(name: "__key", scope: !15623, file: !2473, line: 800, type: !14607)
!15625 = !DILocalVariable(name: "killed", scope: !15626, file: !2473, line: 801, type: !145)
!15626 = distinct !DILexicalBlock(scope: !15627, file: !2473, line: 800, column: 26)
!15627 = distinct !DILexicalBlock(scope: !15623, file: !2473, line: 800, column: 2)
!15628 = !DILocation(line: 0, scope: !15618)
!15629 = !DILocation(line: 797, column: 28, scope: !15618)
!15630 = !DILocation(line: 0, scope: !15623)
!15631 = !DILocation(line: 0, scope: !14615, inlinedAt: !15632)
!15632 = distinct !DILocation(line: 800, column: 2, scope: !15623)
!15633 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15634)
!15634 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15632)
!15635 = !DILocation(line: 0, scope: !14624, inlinedAt: !15634)
!15636 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15632)
!15637 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15632)
!15638 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15632)
!15639 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15632)
!15640 = !DILocation(line: 801, column: 27, scope: !15626)
!15641 = !DILocation(line: 801, column: 32, scope: !15626)
!15642 = !DILocation(line: 801, column: 61, scope: !15626)
!15643 = !DILocation(line: 0, scope: !15626)
!15644 = !DILocation(line: 804, column: 7, scope: !15626)
!15645 = !DILocation(line: 805, column: 21, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15647, file: !2473, line: 805, column: 8)
!15647 = distinct !DILexicalBlock(scope: !15648, file: !2473, line: 804, column: 16)
!15648 = distinct !DILexicalBlock(scope: !15626, file: !2473, line: 804, column: 7)
!15649 = !DILocation(line: 805, column: 31, scope: !15646)
!15650 = !DILocation(line: 805, column: 8, scope: !15647)
!15651 = !DILocation(line: 806, column: 5, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15646, file: !2473, line: 805, column: 40)
!15653 = !DILocation(line: 807, column: 4, scope: !15652)
!15654 = !DILocation(line: 808, column: 4, scope: !15647)
!15655 = !DILocation(line: 809, column: 4, scope: !15647)
!15656 = !DILocation(line: 810, column: 4, scope: !15647)
!15657 = !DILocation(line: 811, column: 3, scope: !15647)
!15658 = !DILocation(line: 0, scope: !14649, inlinedAt: !15659)
!15659 = distinct !DILocation(line: 800, column: 2, scope: !15627)
!15660 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15659)
!15661 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15659)
!15662 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15659)
!15663 = !DILocation(line: 0, scope: !14663, inlinedAt: !15664)
!15664 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15659)
!15665 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15664)
!15666 = !DILocation(line: 813, column: 1, scope: !15618)
!15667 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2473, file: !2473, line: 779, type: !14573, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15668)
!15668 = !{!15669}
!15669 = !DILocalVariable(name: "thread", arg: 1, scope: !15667, file: !2473, line: 779, type: !2365)
!15670 = !DILocation(line: 0, scope: !15667)
!15671 = !DILocation(line: 781, column: 21, scope: !15667)
!15672 = !DILocation(line: 781, column: 2, scope: !15667)
!15673 = !DILocation(line: 782, column: 2, scope: !15667)
!15674 = !DILocation(line: 783, column: 15, scope: !15667)
!15675 = !DILocation(line: 783, column: 25, scope: !15667)
!15676 = !DILocation(line: 784, column: 1, scope: !15667)
!15677 = distinct !DISubprogram(name: "pended_on_thread", scope: !2473, file: !2473, line: 724, type: !15678, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15680)
!15678 = !DISubroutineType(types: !15679)
!15679 = !{!2396, !2365}
!15680 = !{!15681}
!15681 = !DILocalVariable(name: "thread", arg: 1, scope: !15677, file: !2473, line: 724, type: !2365)
!15682 = !DILocation(line: 0, scope: !15677)
!15683 = !DILocation(line: 726, column: 2, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15685, file: !2473, line: 726, column: 2)
!15685 = distinct !DILexicalBlock(scope: !15677, file: !2473, line: 726, column: 2)
!15686 = !DILocation(line: 726, column: 2, scope: !15685)
!15687 = !DILocation(line: 726, column: 2, scope: !15688)
!15688 = distinct !DILexicalBlock(scope: !15684, file: !2473, line: 726, column: 2)
!15689 = !DILocation(line: 728, column: 2, scope: !15677)
!15690 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13775, file: !13775, line: 165, type: !14573, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15691)
!15691 = !{!15692}
!15692 = !DILocalVariable(name: "thread", arg: 1, scope: !15690, file: !13775, line: 165, type: !2365)
!15693 = !DILocation(line: 0, scope: !15690)
!15694 = !DILocation(line: 167, column: 15, scope: !15690)
!15695 = !DILocation(line: 167, column: 28, scope: !15690)
!15696 = !DILocation(line: 168, column: 1, scope: !15690)
!15697 = distinct !DISubprogram(name: "unready_thread", scope: !2473, file: !2473, line: 731, type: !14573, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15698)
!15698 = !{!15699}
!15699 = !DILocalVariable(name: "thread", arg: 1, scope: !15697, file: !2473, line: 731, type: !2365)
!15700 = !DILocation(line: 0, scope: !15697)
!15701 = !DILocation(line: 733, column: 6, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15697, file: !2473, line: 733, column: 6)
!15703 = !DILocation(line: 733, column: 6, scope: !15697)
!15704 = !DILocation(line: 0, scope: !14807, inlinedAt: !15705)
!15705 = distinct !DILocation(line: 734, column: 3, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15702, file: !2473, line: 733, column: 34)
!15707 = !DILocation(line: 266, column: 15, scope: !14807, inlinedAt: !15705)
!15708 = !DILocation(line: 266, column: 28, scope: !14807, inlinedAt: !15705)
!15709 = !DILocation(line: 0, scope: !14815, inlinedAt: !15710)
!15710 = distinct !DILocation(line: 268, column: 3, scope: !14819, inlinedAt: !15705)
!15711 = !DILocation(line: 234, column: 2, scope: !14815, inlinedAt: !15710)
!15712 = !DILocation(line: 735, column: 2, scope: !15706)
!15713 = !DILocation(line: 736, column: 25, scope: !15697)
!15714 = !DILocation(line: 736, column: 22, scope: !15697)
!15715 = !DILocation(line: 736, column: 2, scope: !15697)
!15716 = !DILocation(line: 737, column: 1, scope: !15697)
!15717 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13775, file: !13775, line: 160, type: !14573, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15718)
!15718 = !{!15719}
!15719 = !DILocalVariable(name: "thread", arg: 1, scope: !15717, file: !13775, line: 160, type: !2365)
!15720 = !DILocation(line: 0, scope: !15717)
!15721 = !DILocation(line: 162, column: 15, scope: !15717)
!15722 = !DILocation(line: 162, column: 28, scope: !15717)
!15723 = !DILocation(line: 163, column: 1, scope: !15717)
!15724 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2473, file: !2473, line: 786, type: !14573, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15725)
!15725 = !{!15726, !15727, !15729}
!15726 = !DILocalVariable(name: "thread", arg: 1, scope: !15724, file: !2473, line: 786, type: !2365)
!15727 = !DILocalVariable(name: "__i", scope: !15728, file: !2473, line: 788, type: !14607)
!15728 = distinct !DILexicalBlock(scope: !15724, file: !2473, line: 788, column: 2)
!15729 = !DILocalVariable(name: "__key", scope: !15728, file: !2473, line: 788, type: !14607)
!15730 = !DILocation(line: 0, scope: !15724)
!15731 = !DILocation(line: 0, scope: !15728)
!15732 = !DILocation(line: 0, scope: !14615, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 788, column: 2, scope: !15728)
!15734 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15735)
!15735 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15733)
!15736 = !DILocation(line: 0, scope: !14624, inlinedAt: !15735)
!15737 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15733)
!15738 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15733)
!15739 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15733)
!15740 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15733)
!15741 = !DILocation(line: 789, column: 3, scope: !15742)
!15742 = distinct !DILexicalBlock(scope: !15743, file: !2473, line: 788, column: 26)
!15743 = distinct !DILexicalBlock(scope: !15728, file: !2473, line: 788, column: 2)
!15744 = !DILocation(line: 0, scope: !14649, inlinedAt: !15745)
!15745 = distinct !DILocation(line: 788, column: 2, scope: !15743)
!15746 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15745)
!15747 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15745)
!15748 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15745)
!15749 = !DILocation(line: 0, scope: !14663, inlinedAt: !15750)
!15750 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15745)
!15751 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15750)
!15752 = !DILocation(line: 791, column: 1, scope: !15724)
!15753 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2473, file: !2473, line: 816, type: !15754, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15756)
!15754 = !DISubroutineType(types: !15755)
!15755 = !{!107, !152, !2396, !15503}
!15756 = !{!15757, !15758, !15759, !15760, !15761, !15763}
!15757 = !DILocalVariable(name: "key", arg: 1, scope: !15753, file: !2473, line: 816, type: !152)
!15758 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15753, file: !2473, line: 816, type: !2396)
!15759 = !DILocalVariable(name: "timeout", arg: 3, scope: !15753, file: !2473, line: 816, type: !15503)
!15760 = !DILocalVariable(name: "ret", scope: !15753, file: !2473, line: 828, type: !107)
!15761 = !DILocalVariable(name: "__i", scope: !15762, file: !2473, line: 829, type: !14607)
!15762 = distinct !DILexicalBlock(scope: !15753, file: !2473, line: 829, column: 2)
!15763 = !DILocalVariable(name: "__key", scope: !15762, file: !2473, line: 829, type: !14607)
!15764 = !DILocation(line: 0, scope: !15753)
!15765 = !DILocation(line: 823, column: 14, scope: !15753)
!15766 = !DILocation(line: 823, column: 2, scope: !15753)
!15767 = !DILocation(line: 826, column: 20, scope: !15753)
!15768 = !DILocation(line: 826, column: 18, scope: !15753)
!15769 = !DILocation(line: 828, column: 12, scope: !15753)
!15770 = !DILocation(line: 0, scope: !15762)
!15771 = !DILocation(line: 0, scope: !14615, inlinedAt: !15772)
!15772 = distinct !DILocation(line: 829, column: 2, scope: !15762)
!15773 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15774)
!15774 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15772)
!15775 = !DILocation(line: 0, scope: !14624, inlinedAt: !15774)
!15776 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15772)
!15777 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15772)
!15778 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15772)
!15779 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15772)
!15780 = !DILocation(line: 830, column: 7, scope: !15781)
!15781 = distinct !DILexicalBlock(scope: !15782, file: !2473, line: 830, column: 7)
!15782 = distinct !DILexicalBlock(scope: !15783, file: !2473, line: 829, column: 26)
!15783 = distinct !DILexicalBlock(scope: !15762, file: !2473, line: 829, column: 2)
!15784 = !DILocation(line: 830, column: 26, scope: !15781)
!15785 = !DILocation(line: 830, column: 23, scope: !15781)
!15786 = !DILocation(line: 830, column: 7, scope: !15782)
!15787 = !DILocation(line: 831, column: 20, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15781, file: !2473, line: 830, column: 36)
!15789 = !DILocation(line: 832, column: 3, scope: !15788)
!15790 = !DILocation(line: 0, scope: !14649, inlinedAt: !15791)
!15791 = distinct !DILocation(line: 829, column: 2, scope: !15783)
!15792 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15791)
!15793 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15791)
!15794 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15791)
!15795 = !DILocation(line: 0, scope: !14663, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15791)
!15797 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15796)
!15798 = !DILocation(line: 834, column: 2, scope: !15753)
!15799 = distinct !DISubprogram(name: "z_pend_curr", scope: !2473, file: !2473, line: 840, type: !15800, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15802)
!15800 = !DISubroutineType(types: !15801)
!15801 = !{!107, !14618, !14607, !2396, !15503}
!15802 = !{!15803, !15804, !15805, !15806}
!15803 = !DILocalVariable(name: "lock", arg: 1, scope: !15799, file: !2473, line: 840, type: !14618)
!15804 = !DILocalVariable(name: "key", arg: 2, scope: !15799, file: !2473, line: 840, type: !14607)
!15805 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15799, file: !2473, line: 841, type: !2396)
!15806 = !DILocalVariable(name: "timeout", arg: 4, scope: !15799, file: !2473, line: 841, type: !15503)
!15807 = !DILocation(line: 0, scope: !15799)
!15808 = !DILocation(line: 844, column: 20, scope: !15799)
!15809 = !DILocation(line: 844, column: 18, scope: !15799)
!15810 = !DILocation(line: 846, column: 2, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15812, file: !2473, line: 846, column: 2)
!15812 = distinct !DILexicalBlock(scope: !15799, file: !2473, line: 846, column: 2)
!15813 = !DILocation(line: 846, column: 2, scope: !15812)
!15814 = !DILocation(line: 846, column: 2, scope: !15815)
!15815 = distinct !DILexicalBlock(scope: !15811, file: !2473, line: 846, column: 2)
!15816 = !DILocation(line: 0, scope: !14615, inlinedAt: !15817)
!15817 = distinct !DILocation(line: 856, column: 9, scope: !15799)
!15818 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15819)
!15819 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15817)
!15820 = !DILocation(line: 0, scope: !14624, inlinedAt: !15819)
!15821 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15817)
!15822 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15817)
!15823 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15817)
!15824 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15817)
!15825 = !DILocation(line: 857, column: 14, scope: !15799)
!15826 = !DILocation(line: 857, column: 2, scope: !15799)
!15827 = !DILocation(line: 0, scope: !15302, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 858, column: 2, scope: !15799)
!15829 = !DILocation(line: 225, column: 2, scope: !15309, inlinedAt: !15828)
!15830 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !15828)
!15831 = !DILocation(line: 225, column: 2, scope: !15313, inlinedAt: !15828)
!15832 = !DILocation(line: 0, scope: !15293, inlinedAt: !15833)
!15833 = distinct !DILocation(line: 859, column: 9, scope: !15799)
!15834 = !DILocation(line: 0, scope: !15302, inlinedAt: !15835)
!15835 = distinct !DILocation(line: 195, column: 2, scope: !15293, inlinedAt: !15833)
!15836 = !DILocation(line: 225, column: 2, scope: !15309, inlinedAt: !15835)
!15837 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !15835)
!15838 = !DILocation(line: 225, column: 2, scope: !15313, inlinedAt: !15835)
!15839 = !DILocation(line: 196, column: 9, scope: !15293, inlinedAt: !15833)
!15840 = !DILocation(line: 859, column: 2, scope: !15799)
!15841 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2473, file: !2473, line: 862, type: !15842, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15844)
!15842 = !DISubroutineType(types: !15843)
!15843 = !{!2365, !2396}
!15844 = !{!15845, !15846, !15847, !15849}
!15845 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15841, file: !2473, line: 862, type: !2396)
!15846 = !DILocalVariable(name: "thread", scope: !15841, file: !2473, line: 864, type: !2365)
!15847 = !DILocalVariable(name: "__i", scope: !15848, file: !2473, line: 866, type: !14607)
!15848 = distinct !DILexicalBlock(scope: !15841, file: !2473, line: 866, column: 2)
!15849 = !DILocalVariable(name: "__key", scope: !15848, file: !2473, line: 866, type: !14607)
!15850 = !DILocation(line: 0, scope: !15841)
!15851 = !DILocation(line: 0, scope: !15848)
!15852 = !DILocation(line: 0, scope: !14615, inlinedAt: !15853)
!15853 = distinct !DILocation(line: 866, column: 2, scope: !15848)
!15854 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15855)
!15855 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15853)
!15856 = !DILocation(line: 0, scope: !14624, inlinedAt: !15855)
!15857 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15853)
!15858 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15853)
!15859 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15853)
!15860 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15853)
!15861 = !DILocation(line: 867, column: 12, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15863, file: !2473, line: 866, column: 26)
!15863 = distinct !DILexicalBlock(scope: !15848, file: !2473, line: 866, column: 2)
!15864 = !DILocation(line: 869, column: 14, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15862, file: !2473, line: 869, column: 7)
!15866 = !DILocation(line: 869, column: 7, scope: !15862)
!15867 = !DILocation(line: 870, column: 4, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15865, file: !2473, line: 869, column: 23)
!15869 = !DILocation(line: 871, column: 3, scope: !15868)
!15870 = !DILocation(line: 0, scope: !14649, inlinedAt: !15871)
!15871 = distinct !DILocation(line: 866, column: 2, scope: !15863)
!15872 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15871)
!15873 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15871)
!15874 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15871)
!15875 = !DILocation(line: 0, scope: !14663, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15871)
!15877 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15876)
!15878 = !DILocation(line: 874, column: 2, scope: !15841)
!15879 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2473, file: !2473, line: 877, type: !15842, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15880)
!15880 = !{!15881, !15882, !15883, !15885}
!15881 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15879, file: !2473, line: 877, type: !2396)
!15882 = !DILocalVariable(name: "thread", scope: !15879, file: !2473, line: 879, type: !2365)
!15883 = !DILocalVariable(name: "__i", scope: !15884, file: !2473, line: 881, type: !14607)
!15884 = distinct !DILexicalBlock(scope: !15879, file: !2473, line: 881, column: 2)
!15885 = !DILocalVariable(name: "__key", scope: !15884, file: !2473, line: 881, type: !14607)
!15886 = !DILocation(line: 0, scope: !15879)
!15887 = !DILocation(line: 0, scope: !15884)
!15888 = !DILocation(line: 0, scope: !14615, inlinedAt: !15889)
!15889 = distinct !DILocation(line: 881, column: 2, scope: !15884)
!15890 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15891)
!15891 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15889)
!15892 = !DILocation(line: 0, scope: !14624, inlinedAt: !15891)
!15893 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15889)
!15894 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15889)
!15895 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15889)
!15896 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15889)
!15897 = !DILocation(line: 882, column: 12, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15899, file: !2473, line: 881, column: 26)
!15899 = distinct !DILexicalBlock(scope: !15884, file: !2473, line: 881, column: 2)
!15900 = !DILocation(line: 884, column: 14, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15898, file: !2473, line: 884, column: 7)
!15902 = !DILocation(line: 884, column: 7, scope: !15898)
!15903 = !DILocation(line: 885, column: 4, scope: !15904)
!15904 = distinct !DILexicalBlock(scope: !15901, file: !2473, line: 884, column: 23)
!15905 = !DILocation(line: 886, column: 10, scope: !15904)
!15906 = !DILocation(line: 887, column: 3, scope: !15904)
!15907 = !DILocation(line: 0, scope: !14649, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 881, column: 2, scope: !15899)
!15909 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15908)
!15910 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15908)
!15911 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15908)
!15912 = !DILocation(line: 0, scope: !14663, inlinedAt: !15913)
!15913 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15908)
!15914 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15913)
!15915 = !DILocation(line: 890, column: 2, scope: !15879)
!15916 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2473, file: !2473, line: 893, type: !14573, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15917)
!15917 = !{!15918}
!15918 = !DILocalVariable(name: "thread", arg: 1, scope: !15916, file: !2473, line: 893, type: !2365)
!15919 = !DILocation(line: 0, scope: !15916)
!15920 = !DILocation(line: 0, scope: !15724, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 895, column: 2, scope: !15916)
!15922 = !DILocation(line: 0, scope: !15728, inlinedAt: !15921)
!15923 = !DILocation(line: 0, scope: !14615, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 788, column: 2, scope: !15728, inlinedAt: !15921)
!15925 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15926)
!15926 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15924)
!15927 = !DILocation(line: 0, scope: !14624, inlinedAt: !15926)
!15928 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15924)
!15929 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15924)
!15930 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15924)
!15931 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15924)
!15932 = !DILocation(line: 789, column: 3, scope: !15742, inlinedAt: !15921)
!15933 = !DILocation(line: 0, scope: !14649, inlinedAt: !15934)
!15934 = distinct !DILocation(line: 788, column: 2, scope: !15743, inlinedAt: !15921)
!15935 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !15934)
!15936 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !15934)
!15937 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !15934)
!15938 = !DILocation(line: 0, scope: !14663, inlinedAt: !15939)
!15939 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !15934)
!15940 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !15939)
!15941 = !DILocation(line: 896, column: 8, scope: !15916)
!15942 = !DILocation(line: 897, column: 1, scope: !15916)
!15943 = distinct !DISubprogram(name: "z_set_prio", scope: !2473, file: !2473, line: 902, type: !14976, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !15944)
!15944 = !{!15945, !15946, !15947, !15948, !15950}
!15945 = !DILocalVariable(name: "thread", arg: 1, scope: !15943, file: !2473, line: 902, type: !2365)
!15946 = !DILocalVariable(name: "prio", arg: 2, scope: !15943, file: !2473, line: 902, type: !107)
!15947 = !DILocalVariable(name: "need_sched", scope: !15943, file: !2473, line: 904, type: !145)
!15948 = !DILocalVariable(name: "__i", scope: !15949, file: !2473, line: 906, type: !14607)
!15949 = distinct !DILexicalBlock(scope: !15943, file: !2473, line: 906, column: 2)
!15950 = !DILocalVariable(name: "__key", scope: !15949, file: !2473, line: 906, type: !14607)
!15951 = !DILocation(line: 0, scope: !15943)
!15952 = !DILocation(line: 0, scope: !15949)
!15953 = !DILocation(line: 0, scope: !14615, inlinedAt: !15954)
!15954 = distinct !DILocation(line: 906, column: 2, scope: !15949)
!15955 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !15956)
!15956 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !15954)
!15957 = !DILocation(line: 0, scope: !14624, inlinedAt: !15956)
!15958 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !15954)
!15959 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !15954)
!15960 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !15954)
!15961 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !15954)
!15962 = !DILocation(line: 907, column: 16, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15964, file: !2473, line: 906, column: 26)
!15964 = distinct !DILexicalBlock(scope: !15949, file: !2473, line: 906, column: 2)
!15965 = !DILocation(line: 909, column: 7, scope: !15963)
!15966 = !DILocation(line: 0, scope: !14807, inlinedAt: !15967)
!15967 = distinct !DILocation(line: 912, column: 5, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15969, file: !2473, line: 911, column: 63)
!15969 = distinct !DILexicalBlock(scope: !15970, file: !2473, line: 911, column: 8)
!15970 = distinct !DILexicalBlock(scope: !15971, file: !2473, line: 909, column: 19)
!15971 = distinct !DILexicalBlock(scope: !15963, file: !2473, line: 909, column: 7)
!15972 = !DILocation(line: 266, column: 28, scope: !14807, inlinedAt: !15967)
!15973 = !DILocation(line: 0, scope: !14815, inlinedAt: !15974)
!15974 = distinct !DILocation(line: 268, column: 3, scope: !14819, inlinedAt: !15967)
!15975 = !DILocation(line: 234, column: 2, scope: !14815, inlinedAt: !15974)
!15976 = !DILocation(line: 913, column: 23, scope: !15968)
!15977 = !DILocation(line: 0, scope: !14824, inlinedAt: !15978)
!15978 = distinct !DILocation(line: 914, column: 5, scope: !15968)
!15979 = !DILocation(line: 252, column: 28, scope: !14824, inlinedAt: !15978)
!15980 = !DILocation(line: 0, scope: !14831, inlinedAt: !15981)
!15981 = distinct !DILocation(line: 254, column: 3, scope: !14835, inlinedAt: !15978)
!15982 = !DILocation(line: 0, scope: !14838, inlinedAt: !15983)
!15983 = distinct !DILocation(line: 229, column: 2, scope: !14831, inlinedAt: !15981)
!15984 = !DILocation(line: 186, column: 2, scope: !14848, inlinedAt: !15983)
!15985 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !15983)
!15986 = !DILocation(line: 186, column: 2, scope: !14852, inlinedAt: !15983)
!15987 = !DILocation(line: 188, column: 2, scope: !14854, inlinedAt: !15983)
!15988 = !DILocation(line: 188, column: 2, scope: !14856, inlinedAt: !15983)
!15989 = !DILocation(line: 0, scope: !14854, inlinedAt: !15983)
!15990 = !DILocation(line: 189, column: 7, scope: !14859, inlinedAt: !15983)
!15991 = !DILocation(line: 189, column: 35, scope: !14859, inlinedAt: !15983)
!15992 = !DILocation(line: 189, column: 7, scope: !14860, inlinedAt: !15983)
!15993 = !DILocation(line: 190, column: 4, scope: !14864, inlinedAt: !15983)
!15994 = !DILocation(line: 192, column: 4, scope: !14864, inlinedAt: !15983)
!15995 = distinct !{!15995, !15987, !15996}
!15996 = !DILocation(line: 194, column: 2, scope: !14854, inlinedAt: !15983)
!15997 = !DILocation(line: 196, column: 2, scope: !14838, inlinedAt: !15983)
!15998 = !DILocation(line: 197, column: 1, scope: !14838, inlinedAt: !15983)
!15999 = !DILocation(line: 918, column: 4, scope: !15970)
!16000 = !DILocation(line: 919, column: 3, scope: !15970)
!16001 = !DILocation(line: 920, column: 22, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15971, file: !2473, line: 919, column: 10)
!16003 = !DILocation(line: 0, scope: !14649, inlinedAt: !16004)
!16004 = distinct !DILocation(line: 906, column: 2, scope: !15964)
!16005 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !16004)
!16006 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16004)
!16007 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !16004)
!16008 = !DILocation(line: 0, scope: !14663, inlinedAt: !16009)
!16009 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !16004)
!16010 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !16009)
!16011 = !DILocation(line: 926, column: 2, scope: !15943)
!16012 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2473, file: !2473, line: 929, type: !16013, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16015)
!16013 = !DISubroutineType(types: !16014)
!16014 = !{null, !2365, !107}
!16015 = !{!16016, !16017, !16018}
!16016 = !DILocalVariable(name: "thread", arg: 1, scope: !16012, file: !2473, line: 929, type: !2365)
!16017 = !DILocalVariable(name: "prio", arg: 2, scope: !16012, file: !2473, line: 929, type: !107)
!16018 = !DILocalVariable(name: "need_sched", scope: !16012, file: !2473, line: 931, type: !145)
!16019 = !DILocation(line: 0, scope: !16012)
!16020 = !DILocation(line: 931, column: 20, scope: !16012)
!16021 = !DILocation(line: 935, column: 17, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16012, file: !2473, line: 935, column: 6)
!16023 = !DILocation(line: 935, column: 20, scope: !16022)
!16024 = !DILocation(line: 935, column: 35, scope: !16022)
!16025 = !DILocation(line: 935, column: 48, scope: !16022)
!16026 = !DILocation(line: 935, column: 6, scope: !16012)
!16027 = !DILocation(line: 936, column: 3, scope: !16028)
!16028 = distinct !DILexicalBlock(scope: !16022, file: !2473, line: 935, column: 55)
!16029 = !DILocation(line: 937, column: 2, scope: !16028)
!16030 = !DILocation(line: 938, column: 1, scope: !16012)
!16031 = distinct !DISubprogram(name: "k_sched_lock", scope: !2473, file: !2473, line: 987, type: !3055, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16032)
!16032 = !{!16033, !16035}
!16033 = !DILocalVariable(name: "__i", scope: !16034, file: !2473, line: 989, type: !14607)
!16034 = distinct !DILexicalBlock(scope: !16031, file: !2473, line: 989, column: 2)
!16035 = !DILocalVariable(name: "__key", scope: !16034, file: !2473, line: 989, type: !14607)
!16036 = !DILocation(line: 0, scope: !16034)
!16037 = !DILocation(line: 0, scope: !14615, inlinedAt: !16038)
!16038 = distinct !DILocation(line: 989, column: 2, scope: !16034)
!16039 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !16040)
!16040 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !16038)
!16041 = !DILocation(line: 0, scope: !14624, inlinedAt: !16040)
!16042 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !16038)
!16043 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16038)
!16044 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !16038)
!16045 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !16038)
!16046 = !DILocation(line: 992, column: 3, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16048, file: !2473, line: 989, column: 26)
!16048 = distinct !DILexicalBlock(scope: !16034, file: !2473, line: 989, column: 2)
!16049 = !DILocation(line: 0, scope: !14649, inlinedAt: !16050)
!16050 = distinct !DILocation(line: 989, column: 2, scope: !16048)
!16051 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !16050)
!16052 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16050)
!16053 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !16050)
!16054 = !DILocation(line: 0, scope: !14663, inlinedAt: !16055)
!16055 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !16050)
!16056 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !16055)
!16057 = !DILocation(line: 994, column: 1, scope: !16031)
!16058 = distinct !DISubprogram(name: "z_sched_lock", scope: !13775, file: !13775, line: 251, type: !3055, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16059 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16060)
!16060 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16061)
!16061 = distinct !DILocation(line: 253, column: 2, scope: !16062)
!16062 = distinct !DILexicalBlock(scope: !16063, file: !13775, line: 253, column: 2)
!16063 = distinct !DILexicalBlock(scope: !16058, file: !13775, line: 253, column: 2)
!16064 = !DILocation(line: 0, scope: !15342, inlinedAt: !16060)
!16065 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16061)
!16066 = !DILocation(line: 253, column: 2, scope: !16063)
!16067 = !DILocation(line: 253, column: 2, scope: !16068)
!16068 = distinct !DILexicalBlock(scope: !16062, file: !13775, line: 253, column: 2)
!16069 = !DILocation(line: 254, column: 2, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !16071, file: !13775, line: 254, column: 2)
!16071 = distinct !DILexicalBlock(scope: !16058, file: !13775, line: 254, column: 2)
!16072 = !DILocation(line: 254, column: 2, scope: !16071)
!16073 = !DILocation(line: 254, column: 2, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16070, file: !13775, line: 254, column: 2)
!16075 = !DILocation(line: 256, column: 2, scope: !16058)
!16076 = !DILocation(line: 258, column: 2, scope: !16077)
!16077 = distinct !DILexicalBlock(scope: !16058, file: !13775, line: 258, column: 2)
!16078 = !{i64 2152351931}
!16079 = !DILocation(line: 259, column: 1, scope: !16058)
!16080 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2473, file: !2473, line: 996, type: !3055, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16081)
!16081 = !{!16082, !16084}
!16082 = !DILocalVariable(name: "__i", scope: !16083, file: !2473, line: 998, type: !14607)
!16083 = distinct !DILexicalBlock(scope: !16080, file: !2473, line: 998, column: 2)
!16084 = !DILocalVariable(name: "__key", scope: !16083, file: !2473, line: 998, type: !14607)
!16085 = !DILocation(line: 0, scope: !16083)
!16086 = !DILocation(line: 0, scope: !14615, inlinedAt: !16087)
!16087 = distinct !DILocation(line: 998, column: 2, scope: !16083)
!16088 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !16089)
!16089 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !16087)
!16090 = !DILocation(line: 0, scope: !14624, inlinedAt: !16089)
!16091 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !16087)
!16092 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16087)
!16093 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !16087)
!16094 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !16087)
!16095 = !DILocation(line: 999, column: 3, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16097, file: !2473, line: 999, column: 3)
!16097 = distinct !DILexicalBlock(scope: !16098, file: !2473, line: 999, column: 3)
!16098 = distinct !DILexicalBlock(scope: !16099, file: !2473, line: 998, column: 26)
!16099 = distinct !DILexicalBlock(scope: !16083, file: !2473, line: 998, column: 2)
!16100 = !DILocation(line: 999, column: 3, scope: !16097)
!16101 = !DILocation(line: 999, column: 3, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16096, file: !2473, line: 999, column: 3)
!16103 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16104)
!16104 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16105)
!16105 = distinct !DILocation(line: 1000, column: 3, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16107, file: !2473, line: 1000, column: 3)
!16107 = distinct !DILexicalBlock(scope: !16098, file: !2473, line: 1000, column: 3)
!16108 = !DILocation(line: 0, scope: !15342, inlinedAt: !16104)
!16109 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16105)
!16110 = !DILocation(line: 1000, column: 3, scope: !16107)
!16111 = !DILocation(line: 1000, column: 3, scope: !16112)
!16112 = distinct !DILexicalBlock(scope: !16106, file: !2473, line: 1000, column: 3)
!16113 = !DILocation(line: 1002, column: 5, scope: !16098)
!16114 = !DILocation(line: 1002, column: 20, scope: !16098)
!16115 = !DILocation(line: 1002, column: 3, scope: !16098)
!16116 = !DILocation(line: 1003, column: 3, scope: !16098)
!16117 = !DILocation(line: 0, scope: !14649, inlinedAt: !16118)
!16118 = distinct !DILocation(line: 998, column: 2, scope: !16099)
!16119 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !16118)
!16120 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16118)
!16121 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !16118)
!16122 = !DILocation(line: 0, scope: !14663, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !16118)
!16124 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !16123)
!16125 = !DILocation(line: 1011, column: 2, scope: !16080)
!16126 = !DILocation(line: 1012, column: 1, scope: !16080)
!16127 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2473, file: !2473, line: 1014, type: !14964, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16128 = !DILocation(line: 1028, column: 25, scope: !16127)
!16129 = !DILocation(line: 1028, column: 2, scope: !16127)
!16130 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2473, file: !2473, line: 1155, type: !16131, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16133)
!16131 = !DISubroutineType(types: !16132)
!16132 = !{!145, !2394, !2394}
!16133 = !{!16134, !16135, !16136, !16137, !16138}
!16134 = !DILocalVariable(name: "a", arg: 1, scope: !16130, file: !2473, line: 1155, type: !2394)
!16135 = !DILocalVariable(name: "b", arg: 2, scope: !16130, file: !2473, line: 1155, type: !2394)
!16136 = !DILocalVariable(name: "thread_a", scope: !16130, file: !2473, line: 1157, type: !2365)
!16137 = !DILocalVariable(name: "thread_b", scope: !16130, file: !2473, line: 1157, type: !2365)
!16138 = !DILocalVariable(name: "cmp", scope: !16130, file: !2473, line: 1158, type: !984)
!16139 = !DILocation(line: 0, scope: !16130)
!16140 = !DILocation(line: 1160, column: 13, scope: !16130)
!16141 = !DILocation(line: 1161, column: 13, scope: !16130)
!16142 = !DILocation(line: 1163, column: 8, scope: !16130)
!16143 = !DILocation(line: 1165, column: 10, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16130, file: !2473, line: 1165, column: 6)
!16145 = !DILocation(line: 1165, column: 6, scope: !16130)
!16146 = !DILocation(line: 1167, column: 17, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16144, file: !2473, line: 1167, column: 13)
!16148 = !DILocation(line: 1167, column: 13, scope: !16144)
!16149 = !DILocation(line: 1170, column: 25, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16147, file: !2473, line: 1169, column: 9)
!16151 = !DILocation(line: 1170, column: 52, scope: !16150)
!16152 = !DILocation(line: 1170, column: 35, scope: !16150)
!16153 = !DILocation(line: 1170, column: 3, scope: !16150)
!16154 = !DILocation(line: 0, scope: !16144)
!16155 = !DILocation(line: 1173, column: 1, scope: !16130)
!16156 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2473, file: !2473, line: 1175, type: !16157, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16172)
!16157 = !DISubroutineType(types: !16158)
!16158 = !{null, !16159, !2365}
!16159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16160, size: 32)
!16160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !16161, line: 37, size: 128, elements: !16162)
!16161 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16162 = !{!16163, !16171}
!16163 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !16160, file: !16161, line: 38, baseType: !16164, size: 96)
!16164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !348, line: 83, size: 96, elements: !16165)
!16165 = !{!16166, !16167, !16170}
!16166 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !16164, file: !348, line: 84, baseType: !2394, size: 32)
!16167 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !16164, file: !348, line: 85, baseType: !16168, size: 32, offset: 32)
!16168 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !348, line: 81, baseType: !16169)
!16169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16131, size: 32)
!16170 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !16164, file: !348, line: 86, baseType: !107, size: 32, offset: 64)
!16171 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !16160, file: !16161, line: 39, baseType: !107, size: 32, offset: 96)
!16172 = !{!16173, !16174, !16175, !16176, !16185}
!16173 = !DILocalVariable(name: "pq", arg: 1, scope: !16156, file: !2473, line: 1175, type: !16159)
!16174 = !DILocalVariable(name: "thread", arg: 2, scope: !16156, file: !2473, line: 1175, type: !2365)
!16175 = !DILocalVariable(name: "t", scope: !16156, file: !2473, line: 1177, type: !2365)
!16176 = !DILocalVariable(name: "__f", scope: !16177, file: !2473, line: 1190, type: !16180)
!16177 = distinct !DILexicalBlock(scope: !16178, file: !2473, line: 1190, column: 3)
!16178 = distinct !DILexicalBlock(scope: !16179, file: !2473, line: 1189, column: 27)
!16179 = distinct !DILexicalBlock(scope: !16156, file: !2473, line: 1189, column: 6)
!16180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !348, line: 155, size: 96, elements: !16181)
!16181 = !{!16182, !16183, !16184}
!16182 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !16180, file: !348, line: 156, baseType: !2468, size: 32)
!16183 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !16180, file: !348, line: 157, baseType: !194, size: 32, offset: 32)
!16184 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !16180, file: !348, line: 158, baseType: !984, size: 32, offset: 64)
!16185 = !DILocalVariable(name: "n", scope: !16186, file: !2473, line: 1190, type: !2394)
!16186 = distinct !DILexicalBlock(scope: !16187, file: !2473, line: 1190, column: 3)
!16187 = distinct !DILexicalBlock(scope: !16177, file: !2473, line: 1190, column: 3)
!16188 = !DILocation(line: 0, scope: !16156)
!16189 = !DILocation(line: 1179, column: 2, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16191, file: !2473, line: 1179, column: 2)
!16191 = distinct !DILexicalBlock(scope: !16156, file: !2473, line: 1179, column: 2)
!16192 = !DILocation(line: 1179, column: 2, scope: !16191)
!16193 = !DILocation(line: 1179, column: 2, scope: !16194)
!16194 = distinct !DILexicalBlock(scope: !16190, file: !2473, line: 1179, column: 2)
!16195 = !DILocation(line: 1181, column: 31, scope: !16156)
!16196 = !DILocation(line: 1181, column: 45, scope: !16156)
!16197 = !DILocation(line: 1181, column: 15, scope: !16156)
!16198 = !DILocation(line: 1181, column: 25, scope: !16156)
!16199 = !DILocation(line: 1189, column: 11, scope: !16179)
!16200 = !DILocation(line: 1189, column: 7, scope: !16179)
!16201 = !DILocation(line: 1189, column: 6, scope: !16156)
!16202 = !DILocation(line: 1190, column: 3, scope: !16177)
!16203 = !DILocation(line: 1190, column: 3, scope: !16186)
!16204 = !DILocation(line: 0, scope: !16186)
!16205 = !DILocation(line: 1190, column: 3, scope: !16187)
!16206 = !DILocation(line: 1193, column: 2, scope: !16178)
!16207 = !DILocation(line: 1191, column: 42, scope: !16208)
!16208 = distinct !DILexicalBlock(scope: !16187, file: !2473, line: 1190, column: 54)
!16209 = !DILocation(line: 1191, column: 12, scope: !16208)
!16210 = !DILocation(line: 1191, column: 22, scope: !16208)
!16211 = distinct !{!16211, !16202, !16212}
!16212 = !DILocation(line: 1192, column: 3, scope: !16177)
!16213 = !DILocation(line: 1195, column: 17, scope: !16156)
!16214 = !DILocation(line: 1195, column: 37, scope: !16156)
!16215 = !DILocation(line: 1195, column: 2, scope: !16156)
!16216 = !DILocation(line: 1196, column: 1, scope: !16156)
!16217 = !DISubprogram(name: "z_rb_foreach_next", scope: !348, file: !348, line: 176, type: !16218, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!16218 = !DISubroutineType(types: !16219)
!16219 = !{!2394, !16220, !16221}
!16220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16164, size: 32)
!16221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16180, size: 32)
!16222 = !DISubprogram(name: "rb_insert", scope: !348, file: !348, line: 105, type: !16223, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!16223 = !DISubroutineType(types: !16224)
!16224 = !{null, !16220, !2394}
!16225 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2473, file: !2473, line: 1198, type: !16157, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16226)
!16226 = !{!16227, !16228}
!16227 = !DILocalVariable(name: "pq", arg: 1, scope: !16225, file: !2473, line: 1198, type: !16159)
!16228 = !DILocalVariable(name: "thread", arg: 2, scope: !16225, file: !2473, line: 1198, type: !2365)
!16229 = !DILocation(line: 0, scope: !16225)
!16230 = !DILocation(line: 1200, column: 2, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16232, file: !2473, line: 1200, column: 2)
!16232 = distinct !DILexicalBlock(scope: !16225, file: !2473, line: 1200, column: 2)
!16233 = !DILocation(line: 1200, column: 2, scope: !16232)
!16234 = !DILocation(line: 1200, column: 2, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16231, file: !2473, line: 1200, column: 2)
!16236 = !DILocation(line: 1202, column: 17, scope: !16225)
!16237 = !DILocation(line: 1202, column: 37, scope: !16225)
!16238 = !DILocation(line: 1202, column: 2, scope: !16225)
!16239 = !DILocation(line: 1204, column: 16, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16225, file: !2473, line: 1204, column: 6)
!16241 = !DILocation(line: 1204, column: 7, scope: !16240)
!16242 = !DILocation(line: 1204, column: 6, scope: !16225)
!16243 = !DILocation(line: 1205, column: 7, scope: !16244)
!16244 = distinct !DILexicalBlock(scope: !16240, file: !2473, line: 1204, column: 22)
!16245 = !DILocation(line: 1205, column: 22, scope: !16244)
!16246 = !DILocation(line: 1206, column: 2, scope: !16244)
!16247 = !DILocation(line: 1207, column: 1, scope: !16225)
!16248 = !DISubprogram(name: "rb_remove", scope: !348, file: !348, line: 110, type: !16223, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!16249 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2473, file: !2473, line: 1209, type: !16250, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16252)
!16250 = !DISubroutineType(types: !16251)
!16251 = !{!2365, !16159}
!16252 = !{!16253, !16254, !16255}
!16253 = !DILocalVariable(name: "pq", arg: 1, scope: !16249, file: !2473, line: 1209, type: !16159)
!16254 = !DILocalVariable(name: "thread", scope: !16249, file: !2473, line: 1211, type: !2365)
!16255 = !DILocalVariable(name: "n", scope: !16249, file: !2473, line: 1212, type: !2394)
!16256 = !DILocation(line: 0, scope: !16249)
!16257 = !DILocation(line: 1212, column: 37, scope: !16249)
!16258 = !DILocation(line: 1212, column: 21, scope: !16249)
!16259 = !DILocation(line: 1217, column: 2, scope: !16249)
!16260 = distinct !DISubprogram(name: "rb_get_min", scope: !348, file: !348, line: 115, type: !16261, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16263)
!16261 = !DISubroutineType(types: !16262)
!16262 = !{!2394, !16220}
!16263 = !{!16264}
!16264 = !DILocalVariable(name: "tree", arg: 1, scope: !16260, file: !348, line: 115, type: !16220)
!16265 = !DILocation(line: 0, scope: !16260)
!16266 = !DILocation(line: 117, column: 9, scope: !16260)
!16267 = !DILocation(line: 117, column: 2, scope: !16260)
!16268 = !DISubprogram(name: "z_rb_get_minmax", scope: !348, file: !348, line: 100, type: !16269, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2175)
!16269 = !DISubroutineType(types: !16270)
!16270 = !{!2394, !16220, !195}
!16271 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2473, file: !2473, line: 1246, type: !16272, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16280)
!16272 = !DISubroutineType(types: !16273)
!16273 = !{!2365, !16274}
!16274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16275, size: 32)
!16275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !16161, line: 53, size: 2080, elements: !16276)
!16276 = !{!16277, !16279}
!16277 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !16275, file: !16161, line: 54, baseType: !16278, size: 2048)
!16278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2401, size: 2048, elements: !407)
!16279 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !16275, file: !16161, line: 55, baseType: !32, size: 32, offset: 2048)
!16280 = !{!16281, !16282, !16283, !16284}
!16281 = !DILocalVariable(name: "pq", arg: 1, scope: !16271, file: !2473, line: 1246, type: !16274)
!16282 = !DILocalVariable(name: "thread", scope: !16271, file: !2473, line: 1252, type: !2365)
!16283 = !DILocalVariable(name: "l", scope: !16271, file: !2473, line: 1253, type: !14841)
!16284 = !DILocalVariable(name: "n", scope: !16271, file: !2473, line: 1254, type: !2469)
!16285 = !DILocation(line: 0, scope: !16271)
!16286 = !DILocation(line: 1248, column: 11, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16271, file: !2473, line: 1248, column: 6)
!16288 = !DILocation(line: 1248, column: 7, scope: !16287)
!16289 = !DILocation(line: 1248, column: 6, scope: !16271)
!16290 = !DILocation(line: 1253, column: 31, scope: !16271)
!16291 = !DILocation(line: 1253, column: 20, scope: !16271)
!16292 = !DILocation(line: 1254, column: 19, scope: !16271)
!16293 = !DILocation(line: 1260, column: 1, scope: !16271)
!16294 = distinct !DISubprogram(name: "z_unpend_all", scope: !2473, file: !2473, line: 1262, type: !16295, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16297)
!16295 = !DISubroutineType(types: !16296)
!16296 = !{!107, !2396}
!16297 = !{!16298, !16299, !16300}
!16298 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16294, file: !2473, line: 1262, type: !2396)
!16299 = !DILocalVariable(name: "need_sched", scope: !16294, file: !2473, line: 1264, type: !107)
!16300 = !DILocalVariable(name: "thread", scope: !16294, file: !2473, line: 1265, type: !2365)
!16301 = !DILocation(line: 0, scope: !16294)
!16302 = !DILocation(line: 1267, column: 19, scope: !16294)
!16303 = !DILocation(line: 1267, column: 41, scope: !16294)
!16304 = !DILocation(line: 1267, column: 2, scope: !16294)
!16305 = !DILocation(line: 1268, column: 3, scope: !16306)
!16306 = distinct !DILexicalBlock(scope: !16294, file: !2473, line: 1267, column: 50)
!16307 = !DILocation(line: 1269, column: 3, scope: !16306)
!16308 = distinct !{!16308, !16304, !16309}
!16309 = !DILocation(line: 1271, column: 2, scope: !16294)
!16310 = !DILocation(line: 1273, column: 2, scope: !16294)
!16311 = distinct !DISubprogram(name: "z_waitq_head", scope: !14136, file: !14136, line: 52, type: !15842, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16312)
!16312 = !{!16313}
!16313 = !DILocalVariable(name: "w", arg: 1, scope: !16311, file: !14136, line: 52, type: !2396)
!16314 = !DILocation(line: 0, scope: !16311)
!16315 = !DILocation(line: 54, column: 52, scope: !16311)
!16316 = !DILocation(line: 54, column: 28, scope: !16311)
!16317 = !DILocation(line: 54, column: 9, scope: !16311)
!16318 = !DILocation(line: 54, column: 2, scope: !16311)
!16319 = distinct !DISubprogram(name: "init_ready_q", scope: !2473, file: !2473, line: 1276, type: !16320, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16327)
!16320 = !DISubroutineType(types: !16321)
!16321 = !{null, !16322}
!16322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16323, size: 32)
!16323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !358, line: 83, size: 96, elements: !16324)
!16324 = !{!16325, !16326}
!16325 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !16323, file: !358, line: 86, baseType: !2365, size: 32)
!16326 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !16323, file: !358, line: 90, baseType: !2401, size: 64, offset: 32)
!16327 = !{!16328}
!16328 = !DILocalVariable(name: "rq", arg: 1, scope: !16319, file: !2473, line: 1276, type: !16322)
!16329 = !DILocation(line: 0, scope: !16319)
!16330 = !DILocation(line: 1289, column: 22, scope: !16319)
!16331 = !DILocation(line: 1289, column: 2, scope: !16319)
!16332 = !DILocation(line: 1291, column: 1, scope: !16319)
!16333 = distinct !DISubprogram(name: "sys_dlist_init", scope: !332, file: !332, line: 197, type: !16334, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16336)
!16334 = !DISubroutineType(types: !16335)
!16335 = !{null, !14841}
!16336 = !{!16337}
!16337 = !DILocalVariable(name: "list", arg: 1, scope: !16333, file: !332, line: 197, type: !14841)
!16338 = !DILocation(line: 0, scope: !16333)
!16339 = !DILocation(line: 199, column: 8, scope: !16333)
!16340 = !DILocation(line: 199, column: 13, scope: !16333)
!16341 = !DILocation(line: 200, column: 8, scope: !16333)
!16342 = !DILocation(line: 200, column: 13, scope: !16333)
!16343 = !DILocation(line: 201, column: 1, scope: !16333)
!16344 = distinct !DISubprogram(name: "z_sched_init", scope: !2473, file: !2473, line: 1293, type: !3055, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16345 = !DILocation(line: 1302, column: 2, scope: !16344)
!16346 = !DILocation(line: 1306, column: 2, scope: !16344)
!16347 = !DILocation(line: 1309, column: 1, scope: !16344)
!16348 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2473, file: !2473, line: 1311, type: !16349, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16352)
!16349 = !DISubroutineType(types: !16350)
!16350 = !{!107, !16351}
!16351 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !322, line: 347, baseType: !2365)
!16352 = !{!16353}
!16353 = !DILocalVariable(name: "thread", arg: 1, scope: !16348, file: !2473, line: 1311, type: !16351)
!16354 = !DILocation(line: 0, scope: !16348)
!16355 = !DILocation(line: 1313, column: 22, scope: !16348)
!16356 = !DILocation(line: 1313, column: 9, scope: !16348)
!16357 = !DILocation(line: 1313, column: 2, scope: !16348)
!16358 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2473, file: !2473, line: 1325, type: !16359, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16361)
!16359 = !DISubroutineType(types: !16360)
!16360 = !{null, !16351, !107}
!16361 = !{!16362, !16363, !16364}
!16362 = !DILocalVariable(name: "thread", arg: 1, scope: !16358, file: !2473, line: 1325, type: !16351)
!16363 = !DILocalVariable(name: "prio", arg: 2, scope: !16358, file: !2473, line: 1325, type: !107)
!16364 = !DILocalVariable(name: "th", scope: !16358, file: !2473, line: 1334, type: !2365)
!16365 = !DILocation(line: 0, scope: !16358)
!16366 = !DILocation(line: 1331, column: 2, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16368, file: !2473, line: 1331, column: 2)
!16368 = distinct !DILexicalBlock(scope: !16369, file: !2473, line: 1331, column: 2)
!16369 = distinct !DILexicalBlock(scope: !16358, file: !2473, line: 1331, column: 2)
!16370 = !DILocation(line: 1331, column: 2, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16367, file: !2473, line: 1331, column: 2)
!16372 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16373)
!16373 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16374)
!16374 = distinct !DILocation(line: 1332, column: 2, scope: !16375)
!16375 = distinct !DILexicalBlock(scope: !16376, file: !2473, line: 1332, column: 2)
!16376 = distinct !DILexicalBlock(scope: !16358, file: !2473, line: 1332, column: 2)
!16377 = !DILocation(line: 0, scope: !15342, inlinedAt: !16373)
!16378 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16374)
!16379 = !DILocation(line: 1332, column: 2, scope: !16376)
!16380 = !DILocation(line: 1332, column: 2, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16375, file: !2473, line: 1332, column: 2)
!16382 = !DILocation(line: 1336, column: 2, scope: !16358)
!16383 = !DILocation(line: 1337, column: 1, scope: !16358)
!16384 = distinct !DISubprogram(name: "k_can_yield", scope: !2473, file: !2473, line: 1384, type: !7235, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16385 = !DILocation(line: 1386, column: 11, scope: !16384)
!16386 = !DILocation(line: 1386, column: 29, scope: !16384)
!16387 = !DILocation(line: 1386, column: 32, scope: !16384)
!16388 = !DILocation(line: 1386, column: 46, scope: !16384)
!16389 = !DILocation(line: 1387, column: 28, scope: !16384)
!16390 = !DILocation(line: 1387, column: 4, scope: !16384)
!16391 = !DILocation(line: 1386, column: 2, scope: !16384)
!16392 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !419, file: !419, line: 989, type: !7235, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16393 = !DILocation(line: 993, column: 10, scope: !16392)
!16394 = !DILocation(line: 993, column: 2, scope: !16392)
!16395 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2473, file: !2473, line: 1390, type: !3055, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16396)
!16396 = !{!16397}
!16397 = !DILocalVariable(name: "key", scope: !16395, file: !2473, line: 1396, type: !14607)
!16398 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16399)
!16399 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16400)
!16400 = distinct !DILocation(line: 1392, column: 2, scope: !16401)
!16401 = distinct !DILexicalBlock(scope: !16402, file: !2473, line: 1392, column: 2)
!16402 = distinct !DILexicalBlock(scope: !16395, file: !2473, line: 1392, column: 2)
!16403 = !DILocation(line: 0, scope: !15342, inlinedAt: !16399)
!16404 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16400)
!16405 = !DILocation(line: 1392, column: 2, scope: !16402)
!16406 = !DILocation(line: 1392, column: 2, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16401, file: !2473, line: 1392, column: 2)
!16408 = !DILocation(line: 0, scope: !14615, inlinedAt: !16409)
!16409 = distinct !DILocation(line: 1396, column: 25, scope: !16395)
!16410 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !16411)
!16411 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !16409)
!16412 = !DILocation(line: 0, scope: !14624, inlinedAt: !16411)
!16413 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !16409)
!16414 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16409)
!16415 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !16409)
!16416 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !16409)
!16417 = !DILocation(line: 0, scope: !16395)
!16418 = !DILocation(line: 1400, column: 18, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16420, file: !2473, line: 1399, column: 36)
!16420 = distinct !DILexicalBlock(scope: !16395, file: !2473, line: 1398, column: 6)
!16421 = !DILocation(line: 0, scope: !14807, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 1400, column: 3, scope: !16419)
!16423 = !DILocation(line: 266, column: 15, scope: !14807, inlinedAt: !16422)
!16424 = !DILocation(line: 266, column: 28, scope: !14807, inlinedAt: !16422)
!16425 = !DILocation(line: 0, scope: !14815, inlinedAt: !16426)
!16426 = distinct !DILocation(line: 268, column: 3, scope: !14819, inlinedAt: !16422)
!16427 = !DILocation(line: 234, column: 2, scope: !14815, inlinedAt: !16426)
!16428 = !DILocation(line: 1402, column: 15, scope: !16395)
!16429 = !DILocation(line: 0, scope: !14824, inlinedAt: !16430)
!16430 = distinct !DILocation(line: 1402, column: 2, scope: !16395)
!16431 = !DILocation(line: 252, column: 15, scope: !14824, inlinedAt: !16430)
!16432 = !DILocation(line: 252, column: 28, scope: !14824, inlinedAt: !16430)
!16433 = !DILocation(line: 0, scope: !14831, inlinedAt: !16434)
!16434 = distinct !DILocation(line: 254, column: 3, scope: !14835, inlinedAt: !16430)
!16435 = !DILocation(line: 0, scope: !14838, inlinedAt: !16436)
!16436 = distinct !DILocation(line: 229, column: 2, scope: !14831, inlinedAt: !16434)
!16437 = !DILocation(line: 186, column: 2, scope: !14848, inlinedAt: !16436)
!16438 = !DILocation(line: 186, column: 2, scope: !14849, inlinedAt: !16436)
!16439 = !DILocation(line: 186, column: 2, scope: !14852, inlinedAt: !16436)
!16440 = !DILocation(line: 188, column: 2, scope: !14854, inlinedAt: !16436)
!16441 = !DILocation(line: 188, column: 2, scope: !14856, inlinedAt: !16436)
!16442 = !DILocation(line: 0, scope: !14854, inlinedAt: !16436)
!16443 = !DILocation(line: 189, column: 7, scope: !14859, inlinedAt: !16436)
!16444 = !DILocation(line: 189, column: 35, scope: !14859, inlinedAt: !16436)
!16445 = !DILocation(line: 189, column: 7, scope: !14860, inlinedAt: !16436)
!16446 = !DILocation(line: 191, column: 21, scope: !14864, inlinedAt: !16436)
!16447 = !DILocation(line: 190, column: 4, scope: !14864, inlinedAt: !16436)
!16448 = !DILocation(line: 192, column: 4, scope: !14864, inlinedAt: !16436)
!16449 = distinct !{!16449, !16440, !16450}
!16450 = !DILocation(line: 194, column: 2, scope: !14854, inlinedAt: !16436)
!16451 = !DILocation(line: 196, column: 37, scope: !14838, inlinedAt: !16436)
!16452 = !DILocation(line: 196, column: 2, scope: !14838, inlinedAt: !16436)
!16453 = !DILocation(line: 197, column: 1, scope: !14838, inlinedAt: !16436)
!16454 = !DILocation(line: 1403, column: 2, scope: !16395)
!16455 = !DILocation(line: 0, scope: !15293, inlinedAt: !16456)
!16456 = distinct !DILocation(line: 1404, column: 2, scope: !16395)
!16457 = !DILocation(line: 0, scope: !15302, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 195, column: 2, scope: !15293, inlinedAt: !16456)
!16459 = !DILocation(line: 225, column: 2, scope: !15309, inlinedAt: !16458)
!16460 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !16458)
!16461 = !DILocation(line: 225, column: 2, scope: !15313, inlinedAt: !16458)
!16462 = !DILocation(line: 196, column: 9, scope: !15293, inlinedAt: !16456)
!16463 = !DILocation(line: 1405, column: 1, scope: !16395)
!16464 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2473, file: !2473, line: 1459, type: !16465, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16467)
!16465 = !DISubroutineType(types: !16466)
!16466 = !{!984, !15503}
!16467 = !{!16468, !16469, !16470}
!16468 = !DILocalVariable(name: "timeout", arg: 1, scope: !16464, file: !2473, line: 1459, type: !15503)
!16469 = !DILocalVariable(name: "ticks", scope: !16464, file: !2473, line: 1461, type: !685)
!16470 = !DILocalVariable(name: "ret", scope: !16464, file: !2473, line: 1480, type: !984)
!16471 = !DILocation(line: 0, scope: !16464)
!16472 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16473)
!16473 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16474)
!16474 = distinct !DILocation(line: 1463, column: 2, scope: !16475)
!16475 = distinct !DILexicalBlock(scope: !16476, file: !2473, line: 1463, column: 2)
!16476 = distinct !DILexicalBlock(scope: !16464, file: !2473, line: 1463, column: 2)
!16477 = !DILocation(line: 0, scope: !15342, inlinedAt: !16473)
!16478 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16474)
!16479 = !DILocation(line: 1463, column: 2, scope: !16476)
!16480 = !DILocation(line: 1463, column: 2, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16475, file: !2473, line: 1463, column: 2)
!16482 = !DILocation(line: 1468, column: 6, scope: !16483)
!16483 = distinct !DILexicalBlock(scope: !16464, file: !2473, line: 1468, column: 6)
!16484 = !DILocation(line: 1468, column: 6, scope: !16464)
!16485 = !DILocation(line: 1469, column: 20, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16483, file: !2473, line: 1468, column: 40)
!16487 = !DILocation(line: 1469, column: 3, scope: !16486)
!16488 = !DILocation(line: 1473, column: 3, scope: !16486)
!16489 = !DILocation(line: 1478, column: 10, scope: !16464)
!16490 = !DILocation(line: 1480, column: 16, scope: !16464)
!16491 = !DILocation(line: 1485, column: 1, scope: !16464)
!16492 = distinct !DISubprogram(name: "k_thread_suspend", scope: !4386, file: !4386, line: 310, type: !16493, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16495)
!16493 = !DISubroutineType(types: !16494)
!16494 = !{null, !16351}
!16495 = !{!16496}
!16496 = !DILocalVariable(name: "thread", arg: 1, scope: !16492, file: !4386, line: 310, type: !16351)
!16497 = !DILocation(line: 0, scope: !16492)
!16498 = !DILocation(line: 319, column: 2, scope: !16499)
!16499 = distinct !DILexicalBlock(scope: !16492, file: !4386, line: 319, column: 2)
!16500 = !{i64 2152268089}
!16501 = !DILocation(line: 320, column: 2, scope: !16492)
!16502 = !DILocation(line: 321, column: 1, scope: !16492)
!16503 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2473, file: !2473, line: 1415, type: !16504, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16506)
!16504 = !DISubroutineType(types: !16505)
!16505 = !{!984, !685}
!16506 = !{!16507, !16508, !16509, !16510}
!16507 = !DILocalVariable(name: "ticks", arg: 1, scope: !16503, file: !2473, line: 1415, type: !685)
!16508 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !16503, file: !2473, line: 1418, type: !152)
!16509 = !DILocalVariable(name: "timeout", scope: !16503, file: !2473, line: 1430, type: !15503)
!16510 = !DILocalVariable(name: "key", scope: !16503, file: !2473, line: 1437, type: !14607)
!16511 = !DILocation(line: 0, scope: !16503)
!16512 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16514)
!16514 = distinct !DILocation(line: 1420, column: 2, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16516, file: !2473, line: 1420, column: 2)
!16516 = distinct !DILexicalBlock(scope: !16503, file: !2473, line: 1420, column: 2)
!16517 = !DILocation(line: 0, scope: !15342, inlinedAt: !16513)
!16518 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16514)
!16519 = !DILocation(line: 1420, column: 2, scope: !16516)
!16520 = !DILocation(line: 1420, column: 2, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16515, file: !2473, line: 1420, column: 2)
!16522 = !DILocation(line: 1425, column: 12, scope: !16523)
!16523 = distinct !DILexicalBlock(scope: !16503, file: !2473, line: 1425, column: 6)
!16524 = !DILocation(line: 1425, column: 6, scope: !16503)
!16525 = !DILocation(line: 1426, column: 3, scope: !16526)
!16526 = distinct !DILexicalBlock(scope: !16523, file: !2473, line: 1425, column: 18)
!16527 = !DILocation(line: 1427, column: 3, scope: !16526)
!16528 = !DILocation(line: 1431, column: 24, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16503, file: !2473, line: 1431, column: 6)
!16530 = !DILocation(line: 1431, column: 6, scope: !16503)
!16531 = !DILocation(line: 1432, column: 35, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16529, file: !2473, line: 1431, column: 30)
!16533 = !DILocation(line: 1432, column: 27, scope: !16532)
!16534 = !DILocation(line: 1433, column: 2, scope: !16532)
!16535 = !DILocation(line: 1434, column: 27, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16529, file: !2473, line: 1433, column: 9)
!16537 = !DILocation(line: 0, scope: !16529)
!16538 = !DILocation(line: 0, scope: !14615, inlinedAt: !16539)
!16539 = distinct !DILocation(line: 1437, column: 25, scope: !16503)
!16540 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !16539)
!16542 = !DILocation(line: 0, scope: !14624, inlinedAt: !16541)
!16543 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !16539)
!16544 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16539)
!16545 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !16539)
!16546 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !16539)
!16547 = !DILocation(line: 1440, column: 20, scope: !16503)
!16548 = !DILocation(line: 1440, column: 18, scope: !16503)
!16549 = !DILocation(line: 1442, column: 2, scope: !16503)
!16550 = !DILocation(line: 1443, column: 23, scope: !16503)
!16551 = !DILocation(line: 1443, column: 2, scope: !16503)
!16552 = !DILocation(line: 1444, column: 29, scope: !16503)
!16553 = !DILocation(line: 1444, column: 2, scope: !16503)
!16554 = !DILocation(line: 0, scope: !15293, inlinedAt: !16555)
!16555 = distinct !DILocation(line: 1446, column: 8, scope: !16503)
!16556 = !DILocation(line: 0, scope: !15302, inlinedAt: !16557)
!16557 = distinct !DILocation(line: 195, column: 2, scope: !15293, inlinedAt: !16555)
!16558 = !DILocation(line: 225, column: 2, scope: !15309, inlinedAt: !16557)
!16559 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !16557)
!16560 = !DILocation(line: 225, column: 2, scope: !15313, inlinedAt: !16557)
!16561 = !DILocation(line: 196, column: 9, scope: !15293, inlinedAt: !16555)
!16562 = !DILocation(line: 1448, column: 2, scope: !16563)
!16563 = distinct !DILexicalBlock(scope: !16564, file: !2473, line: 1448, column: 2)
!16564 = distinct !DILexicalBlock(scope: !16503, file: !2473, line: 1448, column: 2)
!16565 = !DILocation(line: 1448, column: 2, scope: !16564)
!16566 = !DILocation(line: 1448, column: 2, scope: !16567)
!16567 = distinct !DILexicalBlock(scope: !16563, file: !2473, line: 1448, column: 2)
!16568 = !DILocation(line: 1450, column: 10, scope: !16503)
!16569 = !DILocation(line: 1450, column: 45, scope: !16503)
!16570 = !DILocation(line: 1450, column: 43, scope: !16503)
!16571 = !DILocation(line: 1451, column: 6, scope: !16503)
!16572 = !DILocation(line: 1457, column: 1, scope: !16503)
!16573 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !8798, file: !8798, line: 1103, type: !14394, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16574)
!16574 = !{!16575}
!16575 = !DILocalVariable(name: "t", arg: 1, scope: !16573, file: !8798, line: 1103, type: !687)
!16576 = !DILocation(line: 0, scope: !16573)
!16577 = !DILocation(line: 0, scope: !14675, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 1106, column: 9, scope: !16573)
!16579 = !DILocation(line: 139, column: 13, scope: !16580, inlinedAt: !16578)
!16580 = distinct !DILexicalBlock(scope: !16581, file: !8798, line: 138, column: 10)
!16581 = distinct !DILexicalBlock(scope: !16582, file: !8798, line: 136, column: 7)
!16582 = distinct !DILexicalBlock(scope: !14696, file: !8798, line: 134, column: 17)
!16583 = !DILocation(line: 1106, column: 2, scope: !16573)
!16584 = distinct !DISubprogram(name: "k_yield", scope: !4386, file: !4386, line: 140, type: !3055, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16585 = !DILocation(line: 148, column: 2, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16584, file: !4386, line: 148, column: 2)
!16587 = !{i64 2152267409}
!16588 = !DILocation(line: 149, column: 2, scope: !16584)
!16589 = !DILocation(line: 150, column: 1, scope: !16584)
!16590 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2473, file: !2473, line: 1495, type: !16591, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16593)
!16591 = !DISubroutineType(types: !16592)
!16592 = !{!984, !107}
!16593 = !{!16594, !16595}
!16594 = !DILocalVariable(name: "us", arg: 1, scope: !16590, file: !2473, line: 1495, type: !107)
!16595 = !DILocalVariable(name: "ticks", scope: !16590, file: !2473, line: 1497, type: !984)
!16596 = !DILocation(line: 0, scope: !16590)
!16597 = !DILocation(line: 1501, column: 31, scope: !16590)
!16598 = !DILocation(line: 1501, column: 10, scope: !16590)
!16599 = !DILocation(line: 1502, column: 23, scope: !16590)
!16600 = !DILocation(line: 1502, column: 10, scope: !16590)
!16601 = !DILocation(line: 1506, column: 31, scope: !16590)
!16602 = !DILocation(line: 1506, column: 9, scope: !16590)
!16603 = !DILocation(line: 1506, column: 2, scope: !16590)
!16604 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !8798, file: !8798, line: 571, type: !14394, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16605)
!16605 = !{!16606}
!16606 = !DILocalVariable(name: "t", arg: 1, scope: !16604, file: !8798, line: 571, type: !687)
!16607 = !DILocation(line: 0, scope: !16604)
!16608 = !DILocation(line: 0, scope: !14675, inlinedAt: !16609)
!16609 = distinct !DILocation(line: 574, column: 9, scope: !16604)
!16610 = !DILocation(line: 135, column: 5, scope: !16582, inlinedAt: !16609)
!16611 = !DILocation(line: 139, column: 13, scope: !16580, inlinedAt: !16609)
!16612 = !DILocation(line: 574, column: 2, scope: !16604)
!16613 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !8798, file: !8798, line: 1187, type: !14394, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16614)
!16614 = !{!16615}
!16615 = !DILocalVariable(name: "t", arg: 1, scope: !16613, file: !8798, line: 1187, type: !687)
!16616 = !DILocation(line: 0, scope: !16613)
!16617 = !DILocation(line: 0, scope: !14675, inlinedAt: !16618)
!16618 = distinct !DILocation(line: 1190, column: 9, scope: !16613)
!16619 = !DILocation(line: 145, column: 13, scope: !16620, inlinedAt: !16618)
!16620 = distinct !DILexicalBlock(scope: !14693, file: !8798, line: 144, column: 10)
!16621 = !DILocation(line: 1190, column: 2, scope: !16613)
!16622 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2473, file: !2473, line: 1517, type: !16493, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16623)
!16623 = !{!16624}
!16624 = !DILocalVariable(name: "thread", arg: 1, scope: !16622, file: !2473, line: 1517, type: !16351)
!16625 = !DILocation(line: 0, scope: !16622)
!16626 = !DILocation(line: 1521, column: 6, scope: !16627)
!16627 = distinct !DILexicalBlock(scope: !16622, file: !2473, line: 1521, column: 6)
!16628 = !DILocation(line: 1521, column: 6, scope: !16622)
!16629 = !DILocation(line: 1525, column: 6, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16622, file: !2473, line: 1525, column: 6)
!16631 = !DILocation(line: 1525, column: 37, scope: !16630)
!16632 = !DILocation(line: 1525, column: 6, scope: !16622)
!16633 = !DILocation(line: 1527, column: 20, scope: !16634)
!16634 = distinct !DILexicalBlock(scope: !16635, file: !2473, line: 1527, column: 7)
!16635 = distinct !DILexicalBlock(scope: !16630, file: !2473, line: 1525, column: 42)
!16636 = !DILocation(line: 1527, column: 33, scope: !16634)
!16637 = !DILocation(line: 1527, column: 7, scope: !16635)
!16638 = !DILocation(line: 1532, column: 2, scope: !16622)
!16639 = !DILocation(line: 1533, column: 2, scope: !16622)
!16640 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16641)
!16641 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16642)
!16642 = distinct !DILocation(line: 1537, column: 7, scope: !16643)
!16643 = distinct !DILexicalBlock(scope: !16622, file: !2473, line: 1537, column: 6)
!16644 = !DILocation(line: 0, scope: !15342, inlinedAt: !16641)
!16645 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16642)
!16646 = !DILocation(line: 1537, column: 6, scope: !16622)
!16647 = !DILocation(line: 1538, column: 3, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16643, file: !2473, line: 1537, column: 25)
!16649 = !DILocation(line: 1539, column: 2, scope: !16648)
!16650 = !DILocation(line: 1540, column: 1, scope: !16622)
!16651 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13775, file: !13775, line: 101, type: !14756, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16652)
!16652 = !{!16653}
!16653 = !DILocalVariable(name: "thread", arg: 1, scope: !16651, file: !13775, line: 101, type: !2365)
!16654 = !DILocation(line: 0, scope: !16651)
!16655 = !DILocation(line: 103, column: 23, scope: !16651)
!16656 = !DILocation(line: 103, column: 36, scope: !16651)
!16657 = !DILocation(line: 103, column: 55, scope: !16651)
!16658 = !DILocation(line: 103, column: 2, scope: !16651)
!16659 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2473, file: !2473, line: 1567, type: !16660, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16662)
!16660 = !DISubroutineType(types: !16661)
!16661 = !{!16351}
!16662 = !{!16663}
!16663 = !DILocalVariable(name: "ret", scope: !16659, file: !2473, line: 1577, type: !16351)
!16664 = !DILocation(line: 1577, column: 30, scope: !16659)
!16665 = !DILocation(line: 0, scope: !16659)
!16666 = !DILocation(line: 1582, column: 2, scope: !16659)
!16667 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2473, file: !2473, line: 1593, type: !7538, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !2175)
!16668 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16669)
!16669 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 1595, column: 10, scope: !16667)
!16671 = !DILocation(line: 0, scope: !15342, inlinedAt: !16669)
!16672 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16670)
!16673 = !DILocation(line: 1595, column: 27, scope: !16667)
!16674 = !DILocation(line: 1595, column: 41, scope: !16667)
!16675 = !DILocation(line: 1595, column: 30, scope: !16667)
!16676 = !DILocation(line: 1595, column: 2, scope: !16667)
!16677 = distinct !DISubprogram(name: "z_thread_abort", scope: !2473, file: !2473, line: 1725, type: !14573, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16678)
!16678 = !{!16679, !16680}
!16679 = !DILocalVariable(name: "thread", arg: 1, scope: !16677, file: !2473, line: 1725, type: !2365)
!16680 = !DILocalVariable(name: "key", scope: !16677, file: !2473, line: 1727, type: !14607)
!16681 = !DILocation(line: 0, scope: !16677)
!16682 = !DILocation(line: 0, scope: !14615, inlinedAt: !16683)
!16683 = distinct !DILocation(line: 1727, column: 25, scope: !16677)
!16684 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !16685)
!16685 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !16683)
!16686 = !DILocation(line: 0, scope: !14624, inlinedAt: !16685)
!16687 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !16683)
!16688 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16683)
!16689 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !16683)
!16690 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !16683)
!16691 = !DILocation(line: 1729, column: 20, scope: !16692)
!16692 = distinct !DILexicalBlock(scope: !16677, file: !2473, line: 1729, column: 6)
!16693 = !DILocation(line: 1729, column: 33, scope: !16692)
!16694 = !DILocation(line: 1729, column: 48, scope: !16692)
!16695 = !DILocation(line: 1729, column: 6, scope: !16677)
!16696 = !DILocation(line: 0, scope: !14649, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 1730, column: 3, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16692, file: !2473, line: 1729, column: 54)
!16699 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !16697)
!16700 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16697)
!16701 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !16697)
!16702 = !DILocation(line: 0, scope: !14663, inlinedAt: !16703)
!16703 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !16697)
!16704 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !16703)
!16705 = !DILocation(line: 1731, column: 3, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16707, file: !2473, line: 1731, column: 3)
!16707 = distinct !DILexicalBlock(scope: !16708, file: !2473, line: 1731, column: 3)
!16708 = distinct !DILexicalBlock(scope: !16698, file: !2473, line: 1731, column: 3)
!16709 = !DILocation(line: 1736, column: 20, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16677, file: !2473, line: 1736, column: 6)
!16711 = !DILocation(line: 1736, column: 33, scope: !16710)
!16712 = !DILocation(line: 1736, column: 49, scope: !16710)
!16713 = !DILocation(line: 1736, column: 6, scope: !16677)
!16714 = !DILocation(line: 0, scope: !14649, inlinedAt: !16715)
!16715 = distinct !DILocation(line: 1737, column: 3, scope: !16716)
!16716 = distinct !DILexicalBlock(scope: !16710, file: !2473, line: 1736, column: 56)
!16717 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !16715)
!16718 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16715)
!16719 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !16715)
!16720 = !DILocation(line: 0, scope: !14663, inlinedAt: !16721)
!16721 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !16715)
!16722 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !16721)
!16723 = !DILocation(line: 1738, column: 3, scope: !16716)
!16724 = !DILocation(line: 1775, column: 2, scope: !16677)
!16725 = !DILocation(line: 1776, column: 16, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16677, file: !2473, line: 1776, column: 6)
!16727 = !DILocation(line: 1776, column: 13, scope: !16726)
!16728 = !DILocation(line: 1776, column: 25, scope: !16726)
!16729 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16730)
!16730 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16731)
!16731 = distinct !DILocation(line: 1776, column: 29, scope: !16726)
!16732 = !DILocation(line: 0, scope: !15342, inlinedAt: !16730)
!16733 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16731)
!16734 = !DILocation(line: 1776, column: 6, scope: !16677)
!16735 = !DILocation(line: 0, scope: !15293, inlinedAt: !16736)
!16736 = distinct !DILocation(line: 1777, column: 3, scope: !16737)
!16737 = distinct !DILexicalBlock(scope: !16726, file: !2473, line: 1776, column: 47)
!16738 = !DILocation(line: 0, scope: !15302, inlinedAt: !16739)
!16739 = distinct !DILocation(line: 195, column: 2, scope: !15293, inlinedAt: !16736)
!16740 = !DILocation(line: 225, column: 2, scope: !15309, inlinedAt: !16739)
!16741 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !16739)
!16742 = !DILocation(line: 225, column: 2, scope: !15313, inlinedAt: !16739)
!16743 = !DILocation(line: 196, column: 9, scope: !15293, inlinedAt: !16736)
!16744 = !DILocation(line: 1778, column: 3, scope: !16745)
!16745 = distinct !DILexicalBlock(scope: !16746, file: !2473, line: 1778, column: 3)
!16746 = distinct !DILexicalBlock(scope: !16747, file: !2473, line: 1778, column: 3)
!16747 = distinct !DILexicalBlock(scope: !16737, file: !2473, line: 1778, column: 3)
!16748 = !DILocation(line: 0, scope: !14649, inlinedAt: !16749)
!16749 = distinct !DILocation(line: 1780, column: 2, scope: !16677)
!16750 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !16749)
!16751 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16749)
!16752 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !16749)
!16753 = !DILocation(line: 0, scope: !14663, inlinedAt: !16754)
!16754 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !16749)
!16755 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !16754)
!16756 = !DILocation(line: 1781, column: 1, scope: !16677)
!16757 = distinct !DISubprogram(name: "end_thread", scope: !2473, file: !2473, line: 1690, type: !14573, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16758)
!16758 = !{!16759}
!16759 = !DILocalVariable(name: "thread", arg: 1, scope: !16757, file: !2473, line: 1690, type: !2365)
!16760 = !DILocation(line: 0, scope: !16757)
!16761 = !DILocation(line: 1695, column: 20, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16757, file: !2473, line: 1695, column: 6)
!16763 = !DILocation(line: 1695, column: 33, scope: !16762)
!16764 = !DILocation(line: 1695, column: 49, scope: !16762)
!16765 = !DILocation(line: 1695, column: 6, scope: !16757)
!16766 = !DILocation(line: 1697, column: 29, scope: !16767)
!16767 = distinct !DILexicalBlock(scope: !16762, file: !2473, line: 1695, column: 56)
!16768 = !DILocation(line: 1698, column: 7, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16767, file: !2473, line: 1698, column: 7)
!16770 = !DILocation(line: 1698, column: 7, scope: !16767)
!16771 = !DILocation(line: 0, scope: !14807, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 1699, column: 4, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16769, file: !2473, line: 1698, column: 35)
!16774 = !DILocation(line: 266, column: 28, scope: !14807, inlinedAt: !16772)
!16775 = !DILocation(line: 0, scope: !14815, inlinedAt: !16776)
!16776 = distinct !DILocation(line: 268, column: 3, scope: !14819, inlinedAt: !16772)
!16777 = !DILocation(line: 234, column: 2, scope: !14815, inlinedAt: !16776)
!16778 = !DILocation(line: 1700, column: 3, scope: !16773)
!16779 = !DILocation(line: 1701, column: 20, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16767, file: !2473, line: 1701, column: 7)
!16781 = !DILocation(line: 1701, column: 30, scope: !16780)
!16782 = !DILocation(line: 1701, column: 7, scope: !16767)
!16783 = !DILocation(line: 1702, column: 4, scope: !16784)
!16784 = distinct !DILexicalBlock(scope: !16780, file: !2473, line: 1701, column: 39)
!16785 = !DILocation(line: 1703, column: 3, scope: !16784)
!16786 = !DILocation(line: 1704, column: 9, scope: !16767)
!16787 = !DILocation(line: 1705, column: 23, scope: !16767)
!16788 = !DILocation(line: 1705, column: 3, scope: !16767)
!16789 = !DILocation(line: 1706, column: 3, scope: !16767)
!16790 = !DILocation(line: 1722, column: 2, scope: !16767)
!16791 = !DILocation(line: 1723, column: 1, scope: !16757)
!16792 = distinct !DISubprogram(name: "unpend_all", scope: !2473, file: !2473, line: 1674, type: !16793, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16795)
!16793 = !DISubroutineType(types: !16794)
!16794 = !{null, !2396}
!16795 = !{!16796, !16797}
!16796 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16792, file: !2473, line: 1674, type: !2396)
!16797 = !DILocalVariable(name: "thread", scope: !16792, file: !2473, line: 1676, type: !2365)
!16798 = !DILocation(line: 0, scope: !16792)
!16799 = !DILocation(line: 1678, column: 19, scope: !16792)
!16800 = !DILocation(line: 1678, column: 41, scope: !16792)
!16801 = !DILocation(line: 1678, column: 2, scope: !16792)
!16802 = !DILocation(line: 1679, column: 3, scope: !16803)
!16803 = distinct !DILexicalBlock(scope: !16792, file: !2473, line: 1678, column: 50)
!16804 = !DILocation(line: 1680, column: 9, scope: !16803)
!16805 = !DILocalVariable(name: "thread", arg: 1, scope: !16806, file: !13795, line: 65, type: !2365)
!16806 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13795, file: !13795, line: 65, type: !16807, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16809)
!16807 = !DISubroutineType(types: !16808)
!16808 = !{null, !2365, !32}
!16809 = !{!16805, !16810}
!16810 = !DILocalVariable(name: "value", arg: 2, scope: !16806, file: !13795, line: 65, type: !32)
!16811 = !DILocation(line: 0, scope: !16806, inlinedAt: !16812)
!16812 = distinct !DILocation(line: 1681, column: 3, scope: !16803)
!16813 = !DILocation(line: 67, column: 15, scope: !16806, inlinedAt: !16812)
!16814 = !DILocation(line: 67, column: 33, scope: !16806, inlinedAt: !16812)
!16815 = !DILocation(line: 1682, column: 3, scope: !16803)
!16816 = distinct !{!16816, !16801, !16817}
!16817 = !DILocation(line: 1683, column: 2, scope: !16792)
!16818 = !DILocation(line: 1684, column: 1, scope: !16792)
!16819 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2473, file: !2473, line: 1794, type: !16820, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16822)
!16820 = !DISubroutineType(types: !16821)
!16821 = !{!107, !2365, !15503}
!16822 = !{!16823, !16824, !16825, !16826}
!16823 = !DILocalVariable(name: "thread", arg: 1, scope: !16819, file: !2473, line: 1794, type: !2365)
!16824 = !DILocalVariable(name: "timeout", arg: 2, scope: !16819, file: !2473, line: 1794, type: !15503)
!16825 = !DILocalVariable(name: "key", scope: !16819, file: !2473, line: 1796, type: !14607)
!16826 = !DILocalVariable(name: "ret", scope: !16819, file: !2473, line: 1797, type: !107)
!16827 = !DILocation(line: 0, scope: !16819)
!16828 = !DILocation(line: 0, scope: !14615, inlinedAt: !16829)
!16829 = distinct !DILocation(line: 1796, column: 25, scope: !16819)
!16830 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !16831)
!16831 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !16829)
!16832 = !DILocation(line: 0, scope: !14624, inlinedAt: !16831)
!16833 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !16829)
!16834 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16829)
!16835 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !16829)
!16836 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !16829)
!16837 = !DILocation(line: 1801, column: 20, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16819, file: !2473, line: 1801, column: 6)
!16839 = !DILocation(line: 1801, column: 33, scope: !16838)
!16840 = !DILocation(line: 1801, column: 49, scope: !16838)
!16841 = !DILocation(line: 1801, column: 6, scope: !16819)
!16842 = !DILocation(line: 1803, column: 13, scope: !16843)
!16843 = distinct !DILexicalBlock(scope: !16838, file: !2473, line: 1803, column: 13)
!16844 = !DILocation(line: 1803, column: 13, scope: !16838)
!16845 = !DILocation(line: 1805, column: 24, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16843, file: !2473, line: 1805, column: 13)
!16847 = !DILocation(line: 1805, column: 21, scope: !16846)
!16848 = !DILocation(line: 1805, column: 34, scope: !16846)
!16849 = !DILocation(line: 1806, column: 20, scope: !16846)
!16850 = !DILocation(line: 1806, column: 44, scope: !16846)
!16851 = !DILocation(line: 1806, column: 30, scope: !16846)
!16852 = !DILocation(line: 1805, column: 13, scope: !16843)
!16853 = !DILocation(line: 1031, column: 3, scope: !15342, inlinedAt: !16854)
!16854 = distinct !DILocation(line: 48, column: 10, scope: !15346, inlinedAt: !16855)
!16855 = distinct !DILocation(line: 1809, column: 3, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !16857, file: !2473, line: 1809, column: 3)
!16857 = distinct !DILexicalBlock(scope: !16858, file: !2473, line: 1809, column: 3)
!16858 = distinct !DILexicalBlock(scope: !16846, file: !2473, line: 1808, column: 9)
!16859 = !DILocation(line: 0, scope: !15342, inlinedAt: !16854)
!16860 = !DILocation(line: 48, column: 9, scope: !15346, inlinedAt: !16855)
!16861 = !DILocation(line: 1809, column: 3, scope: !16857)
!16862 = !DILocation(line: 1809, column: 3, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16856, file: !2473, line: 1809, column: 3)
!16864 = !DILocation(line: 1810, column: 23, scope: !16858)
!16865 = !DILocation(line: 1810, column: 42, scope: !16858)
!16866 = !DILocation(line: 1810, column: 3, scope: !16858)
!16867 = !DILocation(line: 1811, column: 22, scope: !16858)
!16868 = !DILocation(line: 1811, column: 3, scope: !16858)
!16869 = !DILocation(line: 0, scope: !15293, inlinedAt: !16870)
!16870 = distinct !DILocation(line: 1814, column: 9, scope: !16858)
!16871 = !DILocation(line: 0, scope: !15302, inlinedAt: !16872)
!16872 = distinct !DILocation(line: 195, column: 2, scope: !15293, inlinedAt: !16870)
!16873 = !DILocation(line: 225, column: 2, scope: !15309, inlinedAt: !16872)
!16874 = !DILocation(line: 225, column: 2, scope: !15310, inlinedAt: !16872)
!16875 = !DILocation(line: 225, column: 2, scope: !15313, inlinedAt: !16872)
!16876 = !DILocation(line: 196, column: 9, scope: !15293, inlinedAt: !16870)
!16877 = !DILocation(line: 1817, column: 3, scope: !16858)
!16878 = !DILocation(line: 0, scope: !16838)
!16879 = !DILocation(line: 0, scope: !14649, inlinedAt: !16880)
!16880 = distinct !DILocation(line: 1822, column: 2, scope: !16819)
!16881 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !16880)
!16882 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16880)
!16883 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !16880)
!16884 = !DILocation(line: 0, scope: !14663, inlinedAt: !16885)
!16885 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !16880)
!16886 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !16885)
!16887 = !DILocation(line: 1823, column: 2, scope: !16819)
!16888 = !DILocation(line: 1824, column: 1, scope: !16819)
!16889 = distinct !DISubprogram(name: "z_sched_wake", scope: !2473, file: !2473, line: 1882, type: !16890, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16892)
!16890 = !DISubroutineType(types: !16891)
!16891 = !{!145, !2396, !107, !106}
!16892 = !{!16893, !16894, !16895, !16896, !16897, !16898, !16900}
!16893 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16889, file: !2473, line: 1882, type: !2396)
!16894 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16889, file: !2473, line: 1882, type: !107)
!16895 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16889, file: !2473, line: 1882, type: !106)
!16896 = !DILocalVariable(name: "thread", scope: !16889, file: !2473, line: 1884, type: !2365)
!16897 = !DILocalVariable(name: "ret", scope: !16889, file: !2473, line: 1885, type: !145)
!16898 = !DILocalVariable(name: "__i", scope: !16899, file: !2473, line: 1887, type: !14607)
!16899 = distinct !DILexicalBlock(scope: !16889, file: !2473, line: 1887, column: 2)
!16900 = !DILocalVariable(name: "__key", scope: !16899, file: !2473, line: 1887, type: !14607)
!16901 = !DILocation(line: 0, scope: !16889)
!16902 = !DILocation(line: 0, scope: !16899)
!16903 = !DILocation(line: 0, scope: !14615, inlinedAt: !16904)
!16904 = distinct !DILocation(line: 1887, column: 2, scope: !16899)
!16905 = !DILocation(line: 55, column: 2, scope: !14624, inlinedAt: !16906)
!16906 = distinct !DILocation(line: 145, column: 10, scope: !14615, inlinedAt: !16904)
!16907 = !DILocation(line: 0, scope: !14624, inlinedAt: !16906)
!16908 = !DILocation(line: 148, column: 2, scope: !14632, inlinedAt: !16904)
!16909 = !DILocation(line: 148, column: 2, scope: !14633, inlinedAt: !16904)
!16910 = !DILocation(line: 148, column: 2, scope: !14636, inlinedAt: !16904)
!16911 = !DILocation(line: 160, column: 2, scope: !14615, inlinedAt: !16904)
!16912 = !DILocation(line: 1888, column: 12, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16914, file: !2473, line: 1887, column: 26)
!16914 = distinct !DILexicalBlock(scope: !16899, file: !2473, line: 1887, column: 2)
!16915 = !DILocation(line: 1890, column: 14, scope: !16916)
!16916 = distinct !DILexicalBlock(scope: !16913, file: !2473, line: 1890, column: 7)
!16917 = !DILocation(line: 1890, column: 7, scope: !16913)
!16918 = !DILocalVariable(name: "thread", arg: 1, scope: !16919, file: !16920, line: 134, type: !2365)
!16919 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16920, file: !16920, line: 134, type: !16921, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16923)
!16920 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16921 = !DISubroutineType(types: !16922)
!16922 = !{null, !2365, !32, !106}
!16923 = !{!16918, !16924, !16925}
!16924 = !DILocalVariable(name: "value", arg: 2, scope: !16919, file: !16920, line: 135, type: !32)
!16925 = !DILocalVariable(name: "data", arg: 3, scope: !16919, file: !16920, line: 136, type: !106)
!16926 = !DILocation(line: 0, scope: !16919, inlinedAt: !16927)
!16927 = distinct !DILocation(line: 1891, column: 4, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16916, file: !2473, line: 1890, column: 23)
!16929 = !DILocation(line: 0, scope: !16806, inlinedAt: !16930)
!16930 = distinct !DILocation(line: 138, column: 2, scope: !16919, inlinedAt: !16927)
!16931 = !DILocation(line: 67, column: 15, scope: !16806, inlinedAt: !16930)
!16932 = !DILocation(line: 67, column: 33, scope: !16806, inlinedAt: !16930)
!16933 = !DILocation(line: 139, column: 15, scope: !16919, inlinedAt: !16927)
!16934 = !DILocation(line: 139, column: 25, scope: !16919, inlinedAt: !16927)
!16935 = !DILocation(line: 1894, column: 4, scope: !16928)
!16936 = !DILocation(line: 1895, column: 10, scope: !16928)
!16937 = !DILocation(line: 1896, column: 4, scope: !16928)
!16938 = !DILocation(line: 1898, column: 3, scope: !16928)
!16939 = !DILocation(line: 0, scope: !14649, inlinedAt: !16940)
!16940 = distinct !DILocation(line: 1887, column: 2, scope: !16914)
!16941 = !DILocation(line: 194, column: 2, scope: !14657, inlinedAt: !16940)
!16942 = !DILocation(line: 194, column: 2, scope: !14658, inlinedAt: !16940)
!16943 = !DILocation(line: 194, column: 2, scope: !14661, inlinedAt: !16940)
!16944 = !DILocation(line: 0, scope: !14663, inlinedAt: !16945)
!16945 = distinct !DILocation(line: 215, column: 2, scope: !14649, inlinedAt: !16940)
!16946 = !DILocation(line: 95, column: 2, scope: !14663, inlinedAt: !16945)
!16947 = !DILocation(line: 1901, column: 2, scope: !16889)
!16948 = distinct !DISubprogram(name: "z_sched_wait", scope: !2473, file: !2473, line: 1904, type: !16949, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2362, retainedNodes: !16952)
!16949 = !DISubroutineType(types: !16950)
!16950 = !{!107, !14618, !14607, !2396, !15503, !16951}
!16951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!16952 = !{!16953, !16954, !16955, !16956, !16957, !16958}
!16953 = !DILocalVariable(name: "lock", arg: 1, scope: !16948, file: !2473, line: 1904, type: !14618)
!16954 = !DILocalVariable(name: "key", arg: 2, scope: !16948, file: !2473, line: 1904, type: !14607)
!16955 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16948, file: !2473, line: 1905, type: !2396)
!16956 = !DILocalVariable(name: "timeout", arg: 4, scope: !16948, file: !2473, line: 1905, type: !15503)
!16957 = !DILocalVariable(name: "data", arg: 5, scope: !16948, file: !2473, line: 1905, type: !16951)
!16958 = !DILocalVariable(name: "ret", scope: !16948, file: !2473, line: 1907, type: !107)
!16959 = !DILocation(line: 0, scope: !16948)
!16960 = !DILocation(line: 1907, column: 12, scope: !16948)
!16961 = !DILocation(line: 1909, column: 11, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16948, file: !2473, line: 1909, column: 6)
!16963 = !DILocation(line: 1909, column: 6, scope: !16948)
!16964 = !DILocation(line: 1910, column: 11, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16962, file: !2473, line: 1909, column: 20)
!16966 = !DILocation(line: 1910, column: 26, scope: !16965)
!16967 = !DILocation(line: 1910, column: 9, scope: !16965)
!16968 = !DILocation(line: 1911, column: 2, scope: !16965)
!16969 = !DILocation(line: 1912, column: 2, scope: !16948)
!16970 = distinct !DISubprogram(name: "z_data_copy", scope: !16971, file: !16971, line: 22, type: !3055, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3038, retainedNodes: !2175)
!16971 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16972 = !DILocation(line: 24, column: 2, scope: !16970)
!16973 = !DILocation(line: 27, column: 2, scope: !16970)
!16974 = !DILocation(line: 71, column: 1, scope: !16970)
!16975 = distinct !DISubprogram(name: "z_add_timeout", scope: !2510, file: !2510, line: 88, type: !16976, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !16982)
!16976 = !DISubroutineType(types: !16977)
!16977 = !{null, !2483, !2502, !16978}
!16978 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !686, line: 67, baseType: !16979)
!16979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 65, size: 64, elements: !16980)
!16980 = !{!16981}
!16981 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16979, file: !686, line: 66, baseType: !685, size: 64)
!16982 = !{!16983, !16984, !16985, !16986, !16992, !16993, !16996, !16999}
!16983 = !DILocalVariable(name: "to", arg: 1, scope: !16975, file: !2510, line: 88, type: !2483)
!16984 = !DILocalVariable(name: "fn", arg: 2, scope: !16975, file: !2510, line: 88, type: !2502)
!16985 = !DILocalVariable(name: "timeout", arg: 3, scope: !16975, file: !2510, line: 89, type: !16978)
!16986 = !DILocalVariable(name: "__i", scope: !16987, file: !2510, line: 102, type: !16988)
!16987 = distinct !DILexicalBlock(scope: !16975, file: !2510, line: 102, column: 2)
!16988 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !433, line: 106, baseType: !16989)
!16989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !433, line: 32, size: 32, elements: !16990)
!16990 = !{!16991}
!16991 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16989, file: !433, line: 33, baseType: !107, size: 32)
!16992 = !DILocalVariable(name: "__key", scope: !16987, file: !2510, line: 102, type: !16988)
!16993 = !DILocalVariable(name: "t", scope: !16994, file: !2510, line: 103, type: !2483)
!16994 = distinct !DILexicalBlock(scope: !16995, file: !2510, line: 102, column: 24)
!16995 = distinct !DILexicalBlock(scope: !16987, file: !2510, line: 102, column: 2)
!16996 = !DILocalVariable(name: "ticks", scope: !16997, file: !2510, line: 107, type: !685)
!16997 = distinct !DILexicalBlock(scope: !16998, file: !2510, line: 106, column: 39)
!16998 = distinct !DILexicalBlock(scope: !16994, file: !2510, line: 105, column: 7)
!16999 = !DILocalVariable(name: "next_time", scope: !17000, file: !2510, line: 137, type: !984)
!17000 = distinct !DILexicalBlock(scope: !17001, file: !2510, line: 127, column: 22)
!17001 = distinct !DILexicalBlock(scope: !16994, file: !2510, line: 127, column: 7)
!17002 = !DILocation(line: 0, scope: !16975)
!17003 = !DILocation(line: 91, column: 6, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16975, file: !2510, line: 91, column: 6)
!17005 = !DILocation(line: 91, column: 6, scope: !16975)
!17006 = !DILocation(line: 99, column: 2, scope: !17007)
!17007 = distinct !DILexicalBlock(scope: !17008, file: !2510, line: 99, column: 2)
!17008 = distinct !DILexicalBlock(scope: !16975, file: !2510, line: 99, column: 2)
!17009 = !DILocation(line: 99, column: 2, scope: !17008)
!17010 = !DILocation(line: 99, column: 2, scope: !17011)
!17011 = distinct !DILexicalBlock(scope: !17007, file: !2510, line: 99, column: 2)
!17012 = !DILocation(line: 100, column: 6, scope: !16975)
!17013 = !DILocation(line: 100, column: 9, scope: !16975)
!17014 = !DILocation(line: 0, scope: !16987)
!17015 = !DILocalVariable(name: "l", arg: 1, scope: !17016, file: !433, line: 136, type: !17019)
!17016 = distinct !DISubprogram(name: "k_spin_lock", scope: !433, file: !433, line: 136, type: !17017, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17020)
!17017 = !DISubroutineType(types: !17018)
!17018 = !{!16988, !17019}
!17019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 32)
!17020 = !{!17015, !17021}
!17021 = !DILocalVariable(name: "k", scope: !17016, file: !433, line: 139, type: !16988)
!17022 = !DILocation(line: 0, scope: !17016, inlinedAt: !17023)
!17023 = distinct !DILocation(line: 102, column: 2, scope: !16987)
!17024 = !DILocation(line: 55, column: 2, scope: !17025, inlinedAt: !17029)
!17025 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5887, file: !5887, line: 42, type: !5888, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17026)
!17026 = !{!17027, !17028}
!17027 = !DILocalVariable(name: "key", scope: !17025, file: !5887, line: 44, type: !32)
!17028 = !DILocalVariable(name: "tmp", scope: !17025, file: !5887, line: 53, type: !32)
!17029 = distinct !DILocation(line: 145, column: 10, scope: !17016, inlinedAt: !17023)
!17030 = !{i64 1658904}
!17031 = !DILocation(line: 0, scope: !17025, inlinedAt: !17029)
!17032 = !DILocation(line: 148, column: 2, scope: !17033, inlinedAt: !17023)
!17033 = distinct !DILexicalBlock(scope: !17034, file: !433, line: 148, column: 2)
!17034 = distinct !DILexicalBlock(scope: !17016, file: !433, line: 148, column: 2)
!17035 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17023)
!17036 = !DILocation(line: 148, column: 2, scope: !17037, inlinedAt: !17023)
!17037 = distinct !DILexicalBlock(scope: !17033, file: !433, line: 148, column: 2)
!17038 = !DILocation(line: 160, column: 2, scope: !17016, inlinedAt: !17023)
!17039 = !DILocation(line: 106, column: 33, scope: !16998)
!17040 = !DILocation(line: 105, column: 7, scope: !16994)
!17041 = !DILocation(line: 107, column: 50, scope: !16997)
!17042 = !DILocation(line: 107, column: 48, scope: !16997)
!17043 = !DILocation(line: 0, scope: !16997)
!17044 = !DILocation(line: 109, column: 17, scope: !16997)
!17045 = !DILocation(line: 110, column: 3, scope: !16997)
!17046 = !DILocation(line: 111, column: 31, scope: !17047)
!17047 = distinct !DILexicalBlock(scope: !16998, file: !2510, line: 110, column: 10)
!17048 = !DILocation(line: 111, column: 37, scope: !17047)
!17049 = !DILocation(line: 111, column: 35, scope: !17047)
!17050 = !DILocation(line: 0, scope: !16998)
!17051 = !DILocation(line: 109, column: 8, scope: !16997)
!17052 = !DILocation(line: 109, column: 15, scope: !16997)
!17053 = !DILocation(line: 114, column: 12, scope: !17054)
!17054 = distinct !DILexicalBlock(scope: !16994, file: !2510, line: 114, column: 3)
!17055 = !DILocation(line: 0, scope: !16994)
!17056 = !DILocation(line: 114, column: 3, scope: !17054)
!17057 = !DILocation(line: 115, column: 24, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !17059, file: !2510, line: 115, column: 8)
!17059 = distinct !DILexicalBlock(scope: !17060, file: !2510, line: 114, column: 45)
!17060 = distinct !DILexicalBlock(scope: !17054, file: !2510, line: 114, column: 3)
!17061 = !DILocation(line: 115, column: 11, scope: !17058)
!17062 = !DILocation(line: 115, column: 18, scope: !17058)
!17063 = !DILocation(line: 115, column: 8, scope: !17059)
!17064 = !DILocation(line: 116, column: 15, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17058, file: !2510, line: 115, column: 32)
!17066 = !DILocation(line: 117, column: 26, scope: !17065)
!17067 = !DILocation(line: 117, column: 5, scope: !17065)
!17068 = !DILocation(line: 123, column: 7, scope: !16994)
!17069 = !DILocation(line: 120, column: 15, scope: !17059)
!17070 = !DILocation(line: 114, column: 36, scope: !17060)
!17071 = distinct !{!17071, !17056, !17072}
!17072 = !DILocation(line: 121, column: 3, scope: !17054)
!17073 = !DILocation(line: 124, column: 4, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17075, file: !2510, line: 123, column: 18)
!17075 = distinct !DILexicalBlock(scope: !16994, file: !2510, line: 123, column: 7)
!17076 = !DILocation(line: 125, column: 3, scope: !17074)
!17077 = !DILocation(line: 127, column: 13, scope: !17001)
!17078 = !DILocation(line: 127, column: 10, scope: !17001)
!17079 = !DILocation(line: 127, column: 7, scope: !16994)
!17080 = !DILocation(line: 137, column: 24, scope: !17000)
!17081 = !DILocation(line: 0, scope: !17000)
!17082 = !DILocation(line: 139, column: 18, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17000, file: !2510, line: 139, column: 8)
!17084 = !DILocation(line: 139, column: 23, scope: !17083)
!17085 = !DILocation(line: 141, column: 5, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !17083, file: !2510, line: 140, column: 48)
!17087 = !DILocation(line: 142, column: 4, scope: !17086)
!17088 = !DILocalVariable(name: "key", arg: 2, scope: !17089, file: !433, line: 190, type: !16988)
!17089 = distinct !DISubprogram(name: "k_spin_unlock", scope: !433, file: !433, line: 189, type: !17090, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17092)
!17090 = !DISubroutineType(types: !17091)
!17091 = !{null, !17019, !16988}
!17092 = !{!17093, !17088}
!17093 = !DILocalVariable(name: "l", arg: 1, scope: !17089, file: !433, line: 189, type: !17019)
!17094 = !DILocation(line: 0, scope: !17089, inlinedAt: !17095)
!17095 = distinct !DILocation(line: 102, column: 2, scope: !16995)
!17096 = !DILocation(line: 194, column: 2, scope: !17097, inlinedAt: !17095)
!17097 = distinct !DILexicalBlock(scope: !17098, file: !433, line: 194, column: 2)
!17098 = distinct !DILexicalBlock(scope: !17089, file: !433, line: 194, column: 2)
!17099 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17095)
!17100 = !DILocation(line: 194, column: 2, scope: !17101, inlinedAt: !17095)
!17101 = distinct !DILexicalBlock(scope: !17097, file: !433, line: 194, column: 2)
!17102 = !DILocalVariable(name: "key", arg: 1, scope: !17103, file: !5887, line: 84, type: !32)
!17103 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5887, file: !5887, line: 84, type: !5898, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17104)
!17104 = !{!17102}
!17105 = !DILocation(line: 0, scope: !17103, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 215, column: 2, scope: !17089, inlinedAt: !17095)
!17107 = !DILocation(line: 95, column: 2, scope: !17103, inlinedAt: !17106)
!17108 = !{i64 1659721}
!17109 = !DILocation(line: 148, column: 1, scope: !16975)
!17110 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !332, file: !332, line: 225, type: !17111, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17115)
!17111 = !DISubroutineType(types: !17112)
!17112 = !{!145, !17113}
!17113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17114, size: 32)
!17114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2487)
!17115 = !{!17116}
!17116 = !DILocalVariable(name: "node", arg: 1, scope: !17110, file: !332, line: 225, type: !17113)
!17117 = !DILocation(line: 0, scope: !17110)
!17118 = !DILocation(line: 227, column: 15, scope: !17110)
!17119 = !DILocation(line: 227, column: 20, scope: !17110)
!17120 = !DILocation(line: 227, column: 2, scope: !17110)
!17121 = distinct !DISubprogram(name: "elapsed", scope: !2510, file: !2510, line: 62, type: !17122, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17122 = !DISubroutineType(types: !17123)
!17123 = !{!984}
!17124 = !DILocation(line: 64, column: 9, scope: !17121)
!17125 = !DILocation(line: 64, column: 28, scope: !17121)
!17126 = !DILocation(line: 64, column: 35, scope: !17121)
!17127 = !DILocation(line: 64, column: 2, scope: !17121)
!17128 = distinct !DISubprogram(name: "first", scope: !2510, file: !2510, line: 39, type: !17129, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17131)
!17129 = !DISubroutineType(types: !17130)
!17130 = !{!2483}
!17131 = !{!17132}
!17132 = !DILocalVariable(name: "t", scope: !17128, file: !2510, line: 41, type: !17133)
!17133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!17134 = !DILocation(line: 41, column: 19, scope: !17128)
!17135 = !DILocation(line: 0, scope: !17128)
!17136 = !DILocation(line: 43, column: 9, scope: !17128)
!17137 = !DILocation(line: 43, column: 2, scope: !17128)
!17138 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !332, file: !332, line: 443, type: !17139, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17141)
!17139 = !DISubroutineType(types: !17140)
!17140 = !{null, !17133, !17133}
!17141 = !{!17142, !17143, !17144}
!17142 = !DILocalVariable(name: "successor", arg: 1, scope: !17138, file: !332, line: 443, type: !17133)
!17143 = !DILocalVariable(name: "node", arg: 2, scope: !17138, file: !332, line: 443, type: !17133)
!17144 = !DILocalVariable(name: "prev", scope: !17138, file: !332, line: 445, type: !17145)
!17145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17133)
!17146 = !DILocation(line: 0, scope: !17138)
!17147 = !DILocation(line: 445, column: 39, scope: !17138)
!17148 = !DILocation(line: 447, column: 8, scope: !17138)
!17149 = !DILocation(line: 447, column: 13, scope: !17138)
!17150 = !DILocation(line: 448, column: 8, scope: !17138)
!17151 = !DILocation(line: 448, column: 13, scope: !17138)
!17152 = !DILocation(line: 449, column: 8, scope: !17138)
!17153 = !DILocation(line: 449, column: 13, scope: !17138)
!17154 = !DILocation(line: 450, column: 18, scope: !17138)
!17155 = !DILocation(line: 451, column: 1, scope: !17138)
!17156 = distinct !DISubprogram(name: "next", scope: !2510, file: !2510, line: 46, type: !17157, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17159)
!17157 = !DISubroutineType(types: !17158)
!17158 = !{!2483, !2483}
!17159 = !{!17160, !17161}
!17160 = !DILocalVariable(name: "t", arg: 1, scope: !17156, file: !2510, line: 46, type: !2483)
!17161 = !DILocalVariable(name: "n", scope: !17156, file: !2510, line: 48, type: !17133)
!17162 = !DILocation(line: 0, scope: !17156)
!17163 = !DILocation(line: 48, column: 58, scope: !17156)
!17164 = !DILocation(line: 48, column: 19, scope: !17156)
!17165 = !DILocation(line: 50, column: 9, scope: !17156)
!17166 = !DILocation(line: 50, column: 2, scope: !17156)
!17167 = distinct !DISubprogram(name: "sys_dlist_append", scope: !332, file: !332, line: 404, type: !17168, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17171)
!17168 = !DISubroutineType(types: !17169)
!17169 = !{null, !17170, !17133}
!17170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 32)
!17171 = !{!17172, !17173, !17174}
!17172 = !DILocalVariable(name: "list", arg: 1, scope: !17167, file: !332, line: 404, type: !17170)
!17173 = !DILocalVariable(name: "node", arg: 2, scope: !17167, file: !332, line: 404, type: !17133)
!17174 = !DILocalVariable(name: "tail", scope: !17167, file: !332, line: 406, type: !17145)
!17175 = !DILocation(line: 0, scope: !17167)
!17176 = !DILocation(line: 406, column: 34, scope: !17167)
!17177 = !DILocation(line: 408, column: 8, scope: !17167)
!17178 = !DILocation(line: 408, column: 13, scope: !17167)
!17179 = !DILocation(line: 409, column: 8, scope: !17167)
!17180 = !DILocation(line: 409, column: 13, scope: !17167)
!17181 = !DILocation(line: 411, column: 8, scope: !17167)
!17182 = !DILocation(line: 411, column: 13, scope: !17167)
!17183 = !DILocation(line: 412, column: 13, scope: !17167)
!17184 = !DILocation(line: 413, column: 1, scope: !17167)
!17185 = distinct !DISubprogram(name: "next_timeout", scope: !2510, file: !2510, line: 67, type: !17122, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17186)
!17186 = !{!17187, !17188, !17189}
!17187 = !DILocalVariable(name: "to", scope: !17185, file: !2510, line: 69, type: !2483)
!17188 = !DILocalVariable(name: "ticks_elapsed", scope: !17185, file: !2510, line: 70, type: !984)
!17189 = !DILocalVariable(name: "ret", scope: !17185, file: !2510, line: 71, type: !984)
!17190 = !DILocation(line: 69, column: 24, scope: !17185)
!17191 = !DILocation(line: 0, scope: !17185)
!17192 = !DILocation(line: 70, column: 26, scope: !17185)
!17193 = !DILocation(line: 73, column: 10, scope: !17194)
!17194 = distinct !DILexicalBlock(scope: !17185, file: !2510, line: 73, column: 6)
!17195 = !DILocation(line: 73, column: 19, scope: !17194)
!17196 = !DILocation(line: 74, column: 21, scope: !17194)
!17197 = !DILocation(line: 74, column: 30, scope: !17194)
!17198 = !DILocation(line: 74, column: 28, scope: !17194)
!17199 = !DILocation(line: 74, column: 45, scope: !17194)
!17200 = !DILocation(line: 73, column: 6, scope: !17185)
!17201 = !DILocation(line: 77, column: 9, scope: !17202)
!17202 = distinct !DILexicalBlock(scope: !17194, file: !2510, line: 76, column: 9)
!17203 = !DILocation(line: 0, scope: !17194)
!17204 = !DILocation(line: 81, column: 20, scope: !17205)
!17205 = distinct !DILexicalBlock(scope: !17185, file: !2510, line: 81, column: 6)
!17206 = !DILocation(line: 81, column: 6, scope: !17205)
!17207 = !DILocation(line: 81, column: 32, scope: !17205)
!17208 = !DILocation(line: 85, column: 2, scope: !17185)
!17209 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !332, file: !332, line: 341, type: !17210, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17212)
!17210 = !DISubroutineType(types: !17211)
!17211 = !{!17133, !17170, !17133}
!17212 = !{!17213, !17214}
!17213 = !DILocalVariable(name: "list", arg: 1, scope: !17209, file: !332, line: 341, type: !17170)
!17214 = !DILocalVariable(name: "node", arg: 2, scope: !17209, file: !332, line: 342, type: !17133)
!17215 = !DILocation(line: 0, scope: !17209)
!17216 = !DILocation(line: 344, column: 15, scope: !17209)
!17217 = !DILocation(line: 344, column: 9, scope: !17209)
!17218 = !DILocation(line: 344, column: 26, scope: !17209)
!17219 = !DILocation(line: 344, column: 2, scope: !17209)
!17220 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !332, file: !332, line: 325, type: !17210, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17221)
!17221 = !{!17222, !17223}
!17222 = !DILocalVariable(name: "list", arg: 1, scope: !17220, file: !332, line: 325, type: !17170)
!17223 = !DILocalVariable(name: "node", arg: 2, scope: !17220, file: !332, line: 326, type: !17133)
!17224 = !DILocation(line: 0, scope: !17220)
!17225 = !DILocation(line: 328, column: 24, scope: !17220)
!17226 = !DILocation(line: 328, column: 15, scope: !17220)
!17227 = !DILocation(line: 328, column: 9, scope: !17220)
!17228 = !DILocation(line: 328, column: 45, scope: !17220)
!17229 = !DILocation(line: 328, column: 2, scope: !17220)
!17230 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !332, file: !332, line: 294, type: !17231, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17233)
!17231 = !DISubroutineType(types: !17232)
!17232 = !{!17133, !17170}
!17233 = !{!17234}
!17234 = !DILocalVariable(name: "list", arg: 1, scope: !17230, file: !332, line: 294, type: !17170)
!17235 = !DILocation(line: 0, scope: !17230)
!17236 = !DILocation(line: 296, column: 9, scope: !17230)
!17237 = !DILocation(line: 296, column: 2, scope: !17230)
!17238 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !332, file: !332, line: 266, type: !17239, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17241)
!17239 = !DISubroutineType(types: !17240)
!17240 = !{!145, !17170}
!17241 = !{!17242}
!17242 = !DILocalVariable(name: "list", arg: 1, scope: !17238, file: !332, line: 266, type: !17170)
!17243 = !DILocation(line: 0, scope: !17238)
!17244 = !DILocation(line: 268, column: 15, scope: !17238)
!17245 = !DILocation(line: 268, column: 20, scope: !17238)
!17246 = !DILocation(line: 268, column: 2, scope: !17238)
!17247 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2510, file: !2510, line: 150, type: !17248, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17250)
!17248 = !DISubroutineType(types: !17249)
!17249 = !{!107, !2483}
!17250 = !{!17251, !17252, !17253, !17255}
!17251 = !DILocalVariable(name: "to", arg: 1, scope: !17247, file: !2510, line: 150, type: !2483)
!17252 = !DILocalVariable(name: "ret", scope: !17247, file: !2510, line: 152, type: !107)
!17253 = !DILocalVariable(name: "__i", scope: !17254, file: !2510, line: 154, type: !16988)
!17254 = distinct !DILexicalBlock(scope: !17247, file: !2510, line: 154, column: 2)
!17255 = !DILocalVariable(name: "__key", scope: !17254, file: !2510, line: 154, type: !16988)
!17256 = !DILocation(line: 0, scope: !17247)
!17257 = !DILocation(line: 0, scope: !17254)
!17258 = !DILocation(line: 0, scope: !17016, inlinedAt: !17259)
!17259 = distinct !DILocation(line: 154, column: 2, scope: !17254)
!17260 = !DILocation(line: 55, column: 2, scope: !17025, inlinedAt: !17261)
!17261 = distinct !DILocation(line: 145, column: 10, scope: !17016, inlinedAt: !17259)
!17262 = !DILocation(line: 0, scope: !17025, inlinedAt: !17261)
!17263 = !DILocation(line: 148, column: 2, scope: !17033, inlinedAt: !17259)
!17264 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17259)
!17265 = !DILocation(line: 148, column: 2, scope: !17037, inlinedAt: !17259)
!17266 = !DILocation(line: 160, column: 2, scope: !17016, inlinedAt: !17259)
!17267 = !DILocation(line: 155, column: 7, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17269, file: !2510, line: 155, column: 7)
!17269 = distinct !DILexicalBlock(scope: !17270, file: !2510, line: 154, column: 24)
!17270 = distinct !DILexicalBlock(scope: !17254, file: !2510, line: 154, column: 2)
!17271 = !DILocation(line: 155, column: 7, scope: !17269)
!17272 = !DILocation(line: 156, column: 4, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17268, file: !2510, line: 155, column: 39)
!17274 = !DILocation(line: 158, column: 3, scope: !17273)
!17275 = !DILocation(line: 0, scope: !17089, inlinedAt: !17276)
!17276 = distinct !DILocation(line: 154, column: 2, scope: !17270)
!17277 = !DILocation(line: 194, column: 2, scope: !17097, inlinedAt: !17276)
!17278 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17276)
!17279 = !DILocation(line: 194, column: 2, scope: !17101, inlinedAt: !17276)
!17280 = !DILocation(line: 0, scope: !17103, inlinedAt: !17281)
!17281 = distinct !DILocation(line: 215, column: 2, scope: !17089, inlinedAt: !17276)
!17282 = !DILocation(line: 95, column: 2, scope: !17103, inlinedAt: !17281)
!17283 = !DILocation(line: 161, column: 2, scope: !17247)
!17284 = distinct !DISubprogram(name: "remove_timeout", scope: !2510, file: !2510, line: 53, type: !2504, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17285)
!17285 = !{!17286}
!17286 = !DILocalVariable(name: "t", arg: 1, scope: !17284, file: !2510, line: 53, type: !2483)
!17287 = !DILocation(line: 0, scope: !17284)
!17288 = !DILocation(line: 55, column: 6, scope: !17289)
!17289 = distinct !DILexicalBlock(scope: !17284, file: !2510, line: 55, column: 6)
!17290 = !DILocation(line: 55, column: 14, scope: !17289)
!17291 = !DILocation(line: 55, column: 6, scope: !17284)
!17292 = !DILocation(line: 56, column: 25, scope: !17293)
!17293 = distinct !DILexicalBlock(scope: !17289, file: !2510, line: 55, column: 23)
!17294 = !DILocation(line: 56, column: 12, scope: !17293)
!17295 = !DILocation(line: 56, column: 19, scope: !17293)
!17296 = !DILocation(line: 57, column: 2, scope: !17293)
!17297 = !DILocation(line: 59, column: 23, scope: !17284)
!17298 = !DILocation(line: 59, column: 2, scope: !17284)
!17299 = !DILocation(line: 60, column: 1, scope: !17284)
!17300 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !332, file: !332, line: 496, type: !17301, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17303)
!17301 = !DISubroutineType(types: !17302)
!17302 = !{null, !17133}
!17303 = !{!17304, !17305, !17306}
!17304 = !DILocalVariable(name: "node", arg: 1, scope: !17300, file: !332, line: 496, type: !17133)
!17305 = !DILocalVariable(name: "prev", scope: !17300, file: !332, line: 498, type: !17145)
!17306 = !DILocalVariable(name: "next", scope: !17300, file: !332, line: 499, type: !17145)
!17307 = !DILocation(line: 0, scope: !17300)
!17308 = !DILocation(line: 498, column: 34, scope: !17300)
!17309 = !DILocation(line: 499, column: 34, scope: !17300)
!17310 = !DILocation(line: 501, column: 8, scope: !17300)
!17311 = !DILocation(line: 501, column: 13, scope: !17300)
!17312 = !DILocation(line: 502, column: 8, scope: !17300)
!17313 = !DILocation(line: 502, column: 13, scope: !17300)
!17314 = !DILocation(line: 503, column: 2, scope: !17300)
!17315 = !DILocation(line: 504, column: 1, scope: !17300)
!17316 = distinct !DISubprogram(name: "sys_dnode_init", scope: !332, file: !332, line: 211, type: !17301, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17317)
!17317 = !{!17318}
!17318 = !DILocalVariable(name: "node", arg: 1, scope: !17316, file: !332, line: 211, type: !17133)
!17319 = !DILocation(line: 0, scope: !17316)
!17320 = !DILocation(line: 213, column: 8, scope: !17316)
!17321 = !DILocation(line: 213, column: 13, scope: !17316)
!17322 = !DILocation(line: 214, column: 8, scope: !17316)
!17323 = !DILocation(line: 214, column: 13, scope: !17316)
!17324 = !DILocation(line: 215, column: 1, scope: !17316)
!17325 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2510, file: !2510, line: 183, type: !17326, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17330)
!17326 = !DISubroutineType(types: !17327)
!17327 = !{!685, !17328}
!17328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17329, size: 32)
!17329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2484)
!17330 = !{!17331, !17332, !17333, !17335}
!17331 = !DILocalVariable(name: "timeout", arg: 1, scope: !17325, file: !2510, line: 183, type: !17328)
!17332 = !DILocalVariable(name: "ticks", scope: !17325, file: !2510, line: 185, type: !685)
!17333 = !DILocalVariable(name: "__i", scope: !17334, file: !2510, line: 187, type: !16988)
!17334 = distinct !DILexicalBlock(scope: !17325, file: !2510, line: 187, column: 2)
!17335 = !DILocalVariable(name: "__key", scope: !17334, file: !2510, line: 187, type: !16988)
!17336 = !DILocation(line: 0, scope: !17325)
!17337 = !DILocation(line: 0, scope: !17334)
!17338 = !DILocation(line: 0, scope: !17016, inlinedAt: !17339)
!17339 = distinct !DILocation(line: 187, column: 2, scope: !17334)
!17340 = !DILocation(line: 55, column: 2, scope: !17025, inlinedAt: !17341)
!17341 = distinct !DILocation(line: 145, column: 10, scope: !17016, inlinedAt: !17339)
!17342 = !DILocation(line: 0, scope: !17025, inlinedAt: !17341)
!17343 = !DILocation(line: 148, column: 2, scope: !17033, inlinedAt: !17339)
!17344 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17339)
!17345 = !DILocation(line: 148, column: 2, scope: !17037, inlinedAt: !17339)
!17346 = !DILocation(line: 160, column: 2, scope: !17016, inlinedAt: !17339)
!17347 = !DILocation(line: 188, column: 11, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17349, file: !2510, line: 187, column: 24)
!17349 = distinct !DILexicalBlock(scope: !17334, file: !2510, line: 187, column: 2)
!17350 = !DILocation(line: 0, scope: !17089, inlinedAt: !17351)
!17351 = distinct !DILocation(line: 187, column: 2, scope: !17349)
!17352 = !DILocation(line: 194, column: 2, scope: !17097, inlinedAt: !17351)
!17353 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17351)
!17354 = !DILocation(line: 194, column: 2, scope: !17101, inlinedAt: !17351)
!17355 = !DILocation(line: 0, scope: !17103, inlinedAt: !17356)
!17356 = distinct !DILocation(line: 215, column: 2, scope: !17089, inlinedAt: !17351)
!17357 = !DILocation(line: 95, column: 2, scope: !17103, inlinedAt: !17356)
!17358 = !DILocation(line: 191, column: 2, scope: !17325)
!17359 = distinct !DISubprogram(name: "timeout_rem", scope: !2510, file: !2510, line: 165, type: !17326, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17360)
!17360 = !{!17361, !17362, !17363}
!17361 = !DILocalVariable(name: "timeout", arg: 1, scope: !17359, file: !2510, line: 165, type: !17328)
!17362 = !DILocalVariable(name: "ticks", scope: !17359, file: !2510, line: 167, type: !685)
!17363 = !DILocalVariable(name: "t", scope: !17364, file: !2510, line: 173, type: !2483)
!17364 = distinct !DILexicalBlock(scope: !17359, file: !2510, line: 173, column: 2)
!17365 = !DILocation(line: 0, scope: !17359)
!17366 = !DILocation(line: 169, column: 6, scope: !17367)
!17367 = distinct !DILexicalBlock(scope: !17359, file: !2510, line: 169, column: 6)
!17368 = !DILocation(line: 169, column: 6, scope: !17359)
!17369 = !DILocation(line: 173, column: 28, scope: !17364)
!17370 = !DILocation(line: 0, scope: !17364)
!17371 = !DILocation(line: 173, column: 39, scope: !17372)
!17372 = distinct !DILexicalBlock(scope: !17364, file: !2510, line: 173, column: 2)
!17373 = !DILocation(line: 173, column: 2, scope: !17364)
!17374 = !DILocation(line: 174, column: 15, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17372, file: !2510, line: 173, column: 61)
!17376 = !DILocation(line: 174, column: 9, scope: !17375)
!17377 = !DILocation(line: 175, column: 15, scope: !17378)
!17378 = distinct !DILexicalBlock(scope: !17375, file: !2510, line: 175, column: 7)
!17379 = !DILocation(line: 175, column: 7, scope: !17375)
!17380 = !DILocation(line: 173, column: 52, scope: !17372)
!17381 = distinct !{!17381, !17373, !17382}
!17382 = !DILocation(line: 178, column: 2, scope: !17364)
!17383 = !DILocation(line: 180, column: 17, scope: !17359)
!17384 = !DILocation(line: 180, column: 15, scope: !17359)
!17385 = !DILocation(line: 180, column: 2, scope: !17359)
!17386 = !DILocation(line: 181, column: 1, scope: !17359)
!17387 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !14204, file: !14204, line: 35, type: !17388, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17390)
!17388 = !DISubroutineType(types: !17389)
!17389 = !{!145, !17328}
!17390 = !{!17391}
!17391 = !DILocalVariable(name: "to", arg: 1, scope: !17387, file: !14204, line: 35, type: !17328)
!17392 = !DILocation(line: 0, scope: !17387)
!17393 = !DILocation(line: 37, column: 35, scope: !17387)
!17394 = !DILocation(line: 37, column: 10, scope: !17387)
!17395 = !DILocation(line: 37, column: 9, scope: !17387)
!17396 = !DILocation(line: 37, column: 2, scope: !17387)
!17397 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2510, file: !2510, line: 194, type: !17326, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17398)
!17398 = !{!17399, !17400, !17401, !17403}
!17399 = !DILocalVariable(name: "timeout", arg: 1, scope: !17397, file: !2510, line: 194, type: !17328)
!17400 = !DILocalVariable(name: "ticks", scope: !17397, file: !2510, line: 196, type: !685)
!17401 = !DILocalVariable(name: "__i", scope: !17402, file: !2510, line: 198, type: !16988)
!17402 = distinct !DILexicalBlock(scope: !17397, file: !2510, line: 198, column: 2)
!17403 = !DILocalVariable(name: "__key", scope: !17402, file: !2510, line: 198, type: !16988)
!17404 = !DILocation(line: 0, scope: !17397)
!17405 = !DILocation(line: 0, scope: !17402)
!17406 = !DILocation(line: 0, scope: !17016, inlinedAt: !17407)
!17407 = distinct !DILocation(line: 198, column: 2, scope: !17402)
!17408 = !DILocation(line: 55, column: 2, scope: !17025, inlinedAt: !17409)
!17409 = distinct !DILocation(line: 145, column: 10, scope: !17016, inlinedAt: !17407)
!17410 = !DILocation(line: 0, scope: !17025, inlinedAt: !17409)
!17411 = !DILocation(line: 148, column: 2, scope: !17033, inlinedAt: !17407)
!17412 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17407)
!17413 = !DILocation(line: 148, column: 2, scope: !17037, inlinedAt: !17407)
!17414 = !DILocation(line: 160, column: 2, scope: !17016, inlinedAt: !17407)
!17415 = !DILocation(line: 199, column: 11, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17417, file: !2510, line: 198, column: 24)
!17417 = distinct !DILexicalBlock(scope: !17402, file: !2510, line: 198, column: 2)
!17418 = !DILocation(line: 199, column: 23, scope: !17416)
!17419 = !DILocation(line: 0, scope: !17089, inlinedAt: !17420)
!17420 = distinct !DILocation(line: 198, column: 2, scope: !17417)
!17421 = !DILocation(line: 194, column: 2, scope: !17097, inlinedAt: !17420)
!17422 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17420)
!17423 = !DILocation(line: 194, column: 2, scope: !17101, inlinedAt: !17420)
!17424 = !DILocation(line: 0, scope: !17103, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 215, column: 2, scope: !17089, inlinedAt: !17420)
!17426 = !DILocation(line: 95, column: 2, scope: !17103, inlinedAt: !17425)
!17427 = !DILocation(line: 199, column: 21, scope: !17416)
!17428 = !DILocation(line: 202, column: 2, scope: !17397)
!17429 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2510, file: !2510, line: 205, type: !17122, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17430)
!17430 = !{!17431, !17432, !17434}
!17431 = !DILocalVariable(name: "ret", scope: !17429, file: !2510, line: 207, type: !984)
!17432 = !DILocalVariable(name: "__i", scope: !17433, file: !2510, line: 209, type: !16988)
!17433 = distinct !DILexicalBlock(scope: !17429, file: !2510, line: 209, column: 2)
!17434 = !DILocalVariable(name: "__key", scope: !17433, file: !2510, line: 209, type: !16988)
!17435 = !DILocation(line: 0, scope: !17429)
!17436 = !DILocation(line: 0, scope: !17433)
!17437 = !DILocation(line: 0, scope: !17016, inlinedAt: !17438)
!17438 = distinct !DILocation(line: 209, column: 2, scope: !17433)
!17439 = !DILocation(line: 55, column: 2, scope: !17025, inlinedAt: !17440)
!17440 = distinct !DILocation(line: 145, column: 10, scope: !17016, inlinedAt: !17438)
!17441 = !DILocation(line: 0, scope: !17025, inlinedAt: !17440)
!17442 = !DILocation(line: 148, column: 2, scope: !17033, inlinedAt: !17438)
!17443 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17438)
!17444 = !DILocation(line: 148, column: 2, scope: !17037, inlinedAt: !17438)
!17445 = !DILocation(line: 160, column: 2, scope: !17016, inlinedAt: !17438)
!17446 = !DILocation(line: 210, column: 9, scope: !17447)
!17447 = distinct !DILexicalBlock(scope: !17448, file: !2510, line: 209, column: 24)
!17448 = distinct !DILexicalBlock(scope: !17433, file: !2510, line: 209, column: 2)
!17449 = !DILocation(line: 0, scope: !17089, inlinedAt: !17450)
!17450 = distinct !DILocation(line: 209, column: 2, scope: !17448)
!17451 = !DILocation(line: 194, column: 2, scope: !17097, inlinedAt: !17450)
!17452 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17450)
!17453 = !DILocation(line: 194, column: 2, scope: !17101, inlinedAt: !17450)
!17454 = !DILocation(line: 0, scope: !17103, inlinedAt: !17455)
!17455 = distinct !DILocation(line: 215, column: 2, scope: !17089, inlinedAt: !17450)
!17456 = !DILocation(line: 95, column: 2, scope: !17103, inlinedAt: !17455)
!17457 = !DILocation(line: 212, column: 2, scope: !17429)
!17458 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2510, file: !2510, line: 215, type: !11508, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17459)
!17459 = !{!17460, !17461, !17462, !17464, !17465, !17468, !17469}
!17460 = !DILocalVariable(name: "ticks", arg: 1, scope: !17458, file: !2510, line: 215, type: !984)
!17461 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17458, file: !2510, line: 215, type: !145)
!17462 = !DILocalVariable(name: "__i", scope: !17463, file: !2510, line: 217, type: !16988)
!17463 = distinct !DILexicalBlock(scope: !17458, file: !2510, line: 217, column: 2)
!17464 = !DILocalVariable(name: "__key", scope: !17463, file: !2510, line: 217, type: !16988)
!17465 = !DILocalVariable(name: "next_to", scope: !17466, file: !2510, line: 218, type: !107)
!17466 = distinct !DILexicalBlock(scope: !17467, file: !2510, line: 217, column: 24)
!17467 = distinct !DILexicalBlock(scope: !17463, file: !2510, line: 217, column: 2)
!17468 = !DILocalVariable(name: "sooner", scope: !17466, file: !2510, line: 219, type: !145)
!17469 = !DILocalVariable(name: "imminent", scope: !17466, file: !2510, line: 221, type: !145)
!17470 = !DILocation(line: 0, scope: !17458)
!17471 = !DILocation(line: 0, scope: !17463)
!17472 = !DILocation(line: 0, scope: !17016, inlinedAt: !17473)
!17473 = distinct !DILocation(line: 217, column: 2, scope: !17463)
!17474 = !DILocation(line: 55, column: 2, scope: !17025, inlinedAt: !17475)
!17475 = distinct !DILocation(line: 145, column: 10, scope: !17016, inlinedAt: !17473)
!17476 = !DILocation(line: 0, scope: !17025, inlinedAt: !17475)
!17477 = !DILocation(line: 148, column: 2, scope: !17033, inlinedAt: !17473)
!17478 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17473)
!17479 = !DILocation(line: 148, column: 2, scope: !17037, inlinedAt: !17473)
!17480 = !DILocation(line: 160, column: 2, scope: !17016, inlinedAt: !17473)
!17481 = !DILocation(line: 218, column: 17, scope: !17466)
!17482 = !DILocation(line: 0, scope: !17466)
!17483 = !DILocation(line: 221, column: 27, scope: !17466)
!17484 = !DILocation(line: 233, column: 17, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17466, file: !2510, line: 233, column: 7)
!17486 = !DILocation(line: 234, column: 26, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17485, file: !2510, line: 233, column: 56)
!17488 = !DILocation(line: 234, column: 4, scope: !17487)
!17489 = !DILocation(line: 235, column: 3, scope: !17487)
!17490 = !DILocation(line: 0, scope: !17089, inlinedAt: !17491)
!17491 = distinct !DILocation(line: 217, column: 2, scope: !17467)
!17492 = !DILocation(line: 194, column: 2, scope: !17097, inlinedAt: !17491)
!17493 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17491)
!17494 = !DILocation(line: 194, column: 2, scope: !17101, inlinedAt: !17491)
!17495 = !DILocation(line: 0, scope: !17103, inlinedAt: !17496)
!17496 = distinct !DILocation(line: 215, column: 2, scope: !17089, inlinedAt: !17491)
!17497 = !DILocation(line: 95, column: 2, scope: !17103, inlinedAt: !17496)
!17498 = !DILocation(line: 237, column: 1, scope: !17458)
!17499 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2510, file: !2510, line: 239, type: !17500, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17502)
!17500 = !DISubroutineType(types: !17501)
!17501 = !{null, !984}
!17502 = !{!17503, !17504, !17505, !17507}
!17503 = !DILocalVariable(name: "ticks", arg: 1, scope: !17499, file: !2510, line: 239, type: !984)
!17504 = !DILocalVariable(name: "key", scope: !17499, file: !2510, line: 245, type: !16988)
!17505 = !DILocalVariable(name: "t", scope: !17506, file: !2510, line: 262, type: !2483)
!17506 = distinct !DILexicalBlock(scope: !17499, file: !2510, line: 261, column: 67)
!17507 = !DILocalVariable(name: "dt", scope: !17506, file: !2510, line: 263, type: !107)
!17508 = !DILocation(line: 0, scope: !17499)
!17509 = !DILocation(line: 242, column: 2, scope: !17499)
!17510 = !DILocation(line: 0, scope: !17016, inlinedAt: !17511)
!17511 = distinct !DILocation(line: 245, column: 25, scope: !17499)
!17512 = !DILocation(line: 55, column: 2, scope: !17025, inlinedAt: !17513)
!17513 = distinct !DILocation(line: 145, column: 10, scope: !17016, inlinedAt: !17511)
!17514 = !DILocation(line: 0, scope: !17025, inlinedAt: !17513)
!17515 = !DILocation(line: 148, column: 2, scope: !17033, inlinedAt: !17511)
!17516 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17511)
!17517 = !DILocation(line: 148, column: 2, scope: !17037, inlinedAt: !17511)
!17518 = !DILocation(line: 160, column: 2, scope: !17016, inlinedAt: !17511)
!17519 = !DILocation(line: 261, column: 9, scope: !17499)
!17520 = !DILocation(line: 261, column: 17, scope: !17499)
!17521 = !DILocation(line: 261, column: 25, scope: !17499)
!17522 = !DILocation(line: 261, column: 37, scope: !17499)
!17523 = !DILocation(line: 261, column: 47, scope: !17499)
!17524 = !DILocation(line: 261, column: 44, scope: !17499)
!17525 = !DILocation(line: 261, column: 2, scope: !17499)
!17526 = !DILocation(line: 0, scope: !17506)
!17527 = !DILocation(line: 263, column: 12, scope: !17506)
!17528 = !DILocation(line: 265, column: 16, scope: !17506)
!17529 = !DILocation(line: 265, column: 13, scope: !17506)
!17530 = !DILocation(line: 266, column: 13, scope: !17506)
!17531 = !DILocation(line: 267, column: 3, scope: !17506)
!17532 = !DILocation(line: 0, scope: !17089, inlinedAt: !17533)
!17533 = distinct !DILocation(line: 269, column: 3, scope: !17506)
!17534 = !DILocation(line: 194, column: 2, scope: !17097, inlinedAt: !17533)
!17535 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17533)
!17536 = !DILocation(line: 194, column: 2, scope: !17101, inlinedAt: !17533)
!17537 = !DILocation(line: 0, scope: !17103, inlinedAt: !17538)
!17538 = distinct !DILocation(line: 215, column: 2, scope: !17089, inlinedAt: !17533)
!17539 = !DILocation(line: 95, column: 2, scope: !17103, inlinedAt: !17538)
!17540 = !DILocation(line: 270, column: 6, scope: !17506)
!17541 = !DILocation(line: 270, column: 3, scope: !17506)
!17542 = !DILocation(line: 0, scope: !17016, inlinedAt: !17543)
!17543 = distinct !DILocation(line: 271, column: 9, scope: !17506)
!17544 = !DILocation(line: 55, column: 2, scope: !17025, inlinedAt: !17545)
!17545 = distinct !DILocation(line: 145, column: 10, scope: !17016, inlinedAt: !17543)
!17546 = !DILocation(line: 0, scope: !17025, inlinedAt: !17545)
!17547 = !DILocation(line: 148, column: 2, scope: !17033, inlinedAt: !17543)
!17548 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17543)
!17549 = !DILocation(line: 148, column: 2, scope: !17037, inlinedAt: !17543)
!17550 = !DILocation(line: 160, column: 2, scope: !17016, inlinedAt: !17543)
!17551 = !DILocation(line: 272, column: 22, scope: !17506)
!17552 = distinct !{!17552, !17525, !17553}
!17553 = !DILocation(line: 273, column: 2, scope: !17499)
!17554 = !DILocation(line: 276, column: 19, scope: !17555)
!17555 = distinct !DILexicalBlock(scope: !17556, file: !2510, line: 275, column: 23)
!17556 = distinct !DILexicalBlock(scope: !17499, file: !2510, line: 275, column: 6)
!17557 = !DILocation(line: 277, column: 2, scope: !17555)
!17558 = !DILocation(line: 279, column: 15, scope: !17499)
!17559 = !DILocation(line: 279, column: 12, scope: !17499)
!17560 = !DILocation(line: 280, column: 21, scope: !17499)
!17561 = !DILocation(line: 282, column: 24, scope: !17499)
!17562 = !DILocation(line: 282, column: 2, scope: !17499)
!17563 = !DILocation(line: 0, scope: !17089, inlinedAt: !17564)
!17564 = distinct !DILocation(line: 284, column: 2, scope: !17499)
!17565 = !DILocation(line: 194, column: 2, scope: !17097, inlinedAt: !17564)
!17566 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17564)
!17567 = !DILocation(line: 194, column: 2, scope: !17101, inlinedAt: !17564)
!17568 = !DILocation(line: 0, scope: !17103, inlinedAt: !17569)
!17569 = distinct !DILocation(line: 215, column: 2, scope: !17089, inlinedAt: !17564)
!17570 = !DILocation(line: 95, column: 2, scope: !17103, inlinedAt: !17569)
!17571 = !DILocation(line: 285, column: 1, scope: !17499)
!17572 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2510, file: !2510, line: 287, type: !17573, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17575)
!17573 = !DISubroutineType(types: !17574)
!17574 = !{!389}
!17575 = !{!17576, !17577, !17579}
!17576 = !DILocalVariable(name: "t", scope: !17572, file: !2510, line: 289, type: !687)
!17577 = !DILocalVariable(name: "__i", scope: !17578, file: !2510, line: 291, type: !16988)
!17578 = distinct !DILexicalBlock(scope: !17572, file: !2510, line: 291, column: 2)
!17579 = !DILocalVariable(name: "__key", scope: !17578, file: !2510, line: 291, type: !16988)
!17580 = !DILocation(line: 0, scope: !17572)
!17581 = !DILocation(line: 0, scope: !17578)
!17582 = !DILocation(line: 0, scope: !17016, inlinedAt: !17583)
!17583 = distinct !DILocation(line: 291, column: 2, scope: !17578)
!17584 = !DILocation(line: 55, column: 2, scope: !17025, inlinedAt: !17585)
!17585 = distinct !DILocation(line: 145, column: 10, scope: !17016, inlinedAt: !17583)
!17586 = !DILocation(line: 0, scope: !17025, inlinedAt: !17585)
!17587 = !DILocation(line: 148, column: 2, scope: !17033, inlinedAt: !17583)
!17588 = !DILocation(line: 148, column: 2, scope: !17034, inlinedAt: !17583)
!17589 = !DILocation(line: 148, column: 2, scope: !17037, inlinedAt: !17583)
!17590 = !DILocation(line: 160, column: 2, scope: !17016, inlinedAt: !17583)
!17591 = !DILocation(line: 292, column: 7, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17593, file: !2510, line: 291, column: 24)
!17593 = distinct !DILexicalBlock(scope: !17578, file: !2510, line: 291, column: 2)
!17594 = !DILocation(line: 292, column: 19, scope: !17592)
!17595 = !DILocation(line: 0, scope: !17089, inlinedAt: !17596)
!17596 = distinct !DILocation(line: 291, column: 2, scope: !17593)
!17597 = !DILocation(line: 194, column: 2, scope: !17097, inlinedAt: !17596)
!17598 = !DILocation(line: 194, column: 2, scope: !17098, inlinedAt: !17596)
!17599 = !DILocation(line: 194, column: 2, scope: !17101, inlinedAt: !17596)
!17600 = !DILocation(line: 0, scope: !17103, inlinedAt: !17601)
!17601 = distinct !DILocation(line: 215, column: 2, scope: !17089, inlinedAt: !17596)
!17602 = !DILocation(line: 95, column: 2, scope: !17103, inlinedAt: !17601)
!17603 = !DILocation(line: 292, column: 17, scope: !17592)
!17604 = !DILocation(line: 294, column: 2, scope: !17572)
!17605 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2510, file: !2510, line: 297, type: !7228, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17606 = !DILocation(line: 300, column: 19, scope: !17605)
!17607 = !DILocation(line: 300, column: 9, scope: !17605)
!17608 = !DILocation(line: 300, column: 2, scope: !17605)
!17609 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2510, file: !2510, line: 306, type: !17573, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17610 = !DILocation(line: 308, column: 9, scope: !17609)
!17611 = !DILocation(line: 308, column: 2, scope: !17609)
!17612 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2510, file: !2510, line: 319, type: !5911, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17613)
!17613 = !{!17614, !17615, !17616, !17617}
!17614 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17612, file: !2510, line: 319, type: !152)
!17615 = !DILocalVariable(name: "start_cycles", scope: !17612, file: !2510, line: 328, type: !152)
!17616 = !DILocalVariable(name: "cycles_to_wait", scope: !17612, file: !2510, line: 331, type: !152)
!17617 = !DILocalVariable(name: "current_cycles", scope: !17618, file: !2510, line: 338, type: !152)
!17618 = distinct !DILexicalBlock(scope: !17619, file: !2510, line: 337, column: 11)
!17619 = distinct !DILexicalBlock(scope: !17620, file: !2510, line: 337, column: 2)
!17620 = distinct !DILexicalBlock(scope: !17612, file: !2510, line: 337, column: 2)
!17621 = !DILocation(line: 0, scope: !17612)
!17622 = !DILocation(line: 322, column: 19, scope: !17623)
!17623 = distinct !DILexicalBlock(scope: !17612, file: !2510, line: 322, column: 6)
!17624 = !DILocation(line: 322, column: 6, scope: !17612)
!17625 = !DILocation(line: 328, column: 26, scope: !17612)
!17626 = !DILocation(line: 333, column: 43, scope: !17612)
!17627 = !DILocation(line: 337, column: 2, scope: !17612)
!17628 = !DILocation(line: 338, column: 29, scope: !17618)
!17629 = !DILocation(line: 0, scope: !17618)
!17630 = !DILocation(line: 341, column: 23, scope: !17631)
!17631 = distinct !DILexicalBlock(scope: !17618, file: !2510, line: 341, column: 7)
!17632 = !DILocation(line: 341, column: 39, scope: !17631)
!17633 = !DILocation(line: 349, column: 1, scope: !17612)
!17634 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !419, file: !419, line: 1675, type: !7228, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17635 = !DILocation(line: 1677, column: 9, scope: !17634)
!17636 = !DILocation(line: 1677, column: 2, scope: !17634)
!17637 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !8830, file: !8830, line: 24, type: !7228, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !2175)
!17638 = !DILocation(line: 26, column: 9, scope: !17637)
!17639 = !DILocation(line: 26, column: 2, scope: !17637)
!17640 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2510, file: !2510, line: 364, type: !17641, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2480, retainedNodes: !17643)
!17641 = !DISubroutineType(types: !17642)
!17642 = !{!687, !16978}
!17643 = !{!17644, !17645}
!17644 = !DILocalVariable(name: "timeout", arg: 1, scope: !17640, file: !2510, line: 364, type: !16978)
!17645 = !DILocalVariable(name: "dt", scope: !17640, file: !2510, line: 366, type: !685)
!17646 = !DILocation(line: 0, scope: !17640)
!17647 = !DILocation(line: 368, column: 6, scope: !17640)
!17648 = !DILocation(line: 371, column: 10, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17650, file: !2510, line: 370, column: 47)
!17650 = distinct !DILexicalBlock(scope: !17651, file: !2510, line: 370, column: 13)
!17651 = distinct !DILexicalBlock(scope: !17640, file: !2510, line: 368, column: 6)
!17652 = !DILocation(line: 371, column: 3, scope: !17649)
!17653 = !DILocation(line: 376, column: 58, scope: !17654)
!17654 = distinct !DILexicalBlock(scope: !17655, file: !2510, line: 376, column: 7)
!17655 = distinct !DILexicalBlock(scope: !17650, file: !2510, line: 372, column: 9)
!17656 = !DILocation(line: 376, column: 7, scope: !17655)
!17657 = !DILocation(line: 376, column: 43, scope: !17654)
!17658 = !DILocation(line: 377, column: 4, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17654, file: !2510, line: 376, column: 64)
!17660 = !DILocation(line: 379, column: 10, scope: !17655)
!17661 = !DILocation(line: 379, column: 33, scope: !17655)
!17662 = !DILocation(line: 379, column: 31, scope: !17655)
!17663 = !DILocation(line: 379, column: 3, scope: !17655)
!17664 = !DILocation(line: 0, scope: !17651)
!17665 = !DILocation(line: 381, column: 1, scope: !17640)
!17666 = distinct !DISubprogram(name: "boot_banner", scope: !17667, file: !17667, line: 26, type: !3055, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3041, retainedNodes: !2175)
!17667 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17668 = !DILocation(line: 34, column: 2, scope: !17666)
!17669 = !DILocation(line: 36, column: 1, scope: !17666)
